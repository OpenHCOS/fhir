// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/stu3/resources.proto

package google_fhir_stu3_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Auto-generated from StructureDefinition for Account, last updated
// 2017-04-19T07:44:43.294+10:00. Tracks balance, charges, for patient or cost
// center. See http://hl7.org/fhir/StructureDefinition/Account
type Account struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Account number
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | inactive | entered-in-error
	Status *AccountStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// E.g. patient, expense, depreciation
	Type *CodeableConcept `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// Human-readable label
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// What is account tied to?
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// Transaction window
	Period *Period `protobuf:"bytes,14,opt,name=period,proto3" json:"period,omitempty"`
	// Time window that transactions may be posted to this account
	Active *Period `protobuf:"bytes,15,opt,name=active,proto3" json:"active,omitempty"`
	// How much is in account?
	Balance  *Money              `protobuf:"bytes,16,opt,name=balance,proto3" json:"balance,omitempty"`
	Coverage []*Account_Coverage `protobuf:"bytes,17,rep,name=coverage,proto3" json:"coverage,omitempty"`
	// Who is responsible?
	Owner *Reference `protobuf:"bytes,18,opt,name=owner,proto3" json:"owner,omitempty"`
	// Explanation of purpose/use
	Description          *String              `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	Guarantor            []*Account_Guarantor `protobuf:"bytes,20,rep,name=guarantor,proto3" json:"guarantor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Account) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Account) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Account) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Account) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Account) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Account) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Account) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Account) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Account) GetStatus() *AccountStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Account) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Account) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Account) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Account) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Account) GetActive() *Period {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Account) GetBalance() *Money {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *Account) GetCoverage() []*Account_Coverage {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *Account) GetOwner() *Reference {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Account) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Account) GetGuarantor() []*Account_Guarantor {
	if m != nil {
		return m.Guarantor
	}
	return nil
}

// The party(s) that are responsible for covering the payment of this account,
// and what order should they be applied to the account
type Account_Coverage struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The party(s) that are responsible for covering the payment of this
	// account
	Coverage *Reference `protobuf:"bytes,4,opt,name=coverage,proto3" json:"coverage,omitempty"`
	// The priority of the coverage in the context of this account
	Priority             *PositiveInt `protobuf:"bytes,5,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Account_Coverage) Reset()         { *m = Account_Coverage{} }
func (m *Account_Coverage) String() string { return proto.CompactTextString(m) }
func (*Account_Coverage) ProtoMessage()    {}
func (*Account_Coverage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{0, 0}
}

func (m *Account_Coverage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account_Coverage.Unmarshal(m, b)
}
func (m *Account_Coverage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account_Coverage.Marshal(b, m, deterministic)
}
func (m *Account_Coverage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account_Coverage.Merge(m, src)
}
func (m *Account_Coverage) XXX_Size() int {
	return xxx_messageInfo_Account_Coverage.Size(m)
}
func (m *Account_Coverage) XXX_DiscardUnknown() {
	xxx_messageInfo_Account_Coverage.DiscardUnknown(m)
}

var xxx_messageInfo_Account_Coverage proto.InternalMessageInfo

func (m *Account_Coverage) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Account_Coverage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Account_Coverage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Account_Coverage) GetCoverage() *Reference {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *Account_Coverage) GetPriority() *PositiveInt {
	if m != nil {
		return m.Priority
	}
	return nil
}

// Responsible for the account
type Account_Guarantor struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Responsible entity
	Party *Reference `protobuf:"bytes,4,opt,name=party,proto3" json:"party,omitempty"`
	// Credit or other hold applied
	OnHold *Boolean `protobuf:"bytes,5,opt,name=on_hold,json=onHold,proto3" json:"on_hold,omitempty"`
	// Guarrantee account during
	Period               *Period  `protobuf:"bytes,6,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account_Guarantor) Reset()         { *m = Account_Guarantor{} }
func (m *Account_Guarantor) String() string { return proto.CompactTextString(m) }
func (*Account_Guarantor) ProtoMessage()    {}
func (*Account_Guarantor) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{0, 1}
}

func (m *Account_Guarantor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account_Guarantor.Unmarshal(m, b)
}
func (m *Account_Guarantor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account_Guarantor.Marshal(b, m, deterministic)
}
func (m *Account_Guarantor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account_Guarantor.Merge(m, src)
}
func (m *Account_Guarantor) XXX_Size() int {
	return xxx_messageInfo_Account_Guarantor.Size(m)
}
func (m *Account_Guarantor) XXX_DiscardUnknown() {
	xxx_messageInfo_Account_Guarantor.DiscardUnknown(m)
}

var xxx_messageInfo_Account_Guarantor proto.InternalMessageInfo

func (m *Account_Guarantor) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Account_Guarantor) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Account_Guarantor) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Account_Guarantor) GetParty() *Reference {
	if m != nil {
		return m.Party
	}
	return nil
}

func (m *Account_Guarantor) GetOnHold() *Boolean {
	if m != nil {
		return m.OnHold
	}
	return nil
}

func (m *Account_Guarantor) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// Auto-generated from StructureDefinition for ActivityDefinition, last updated
// 2017-04-19T07:44:43.294+10:00. The definition of a specific activity to be
// taken, independent of any particular patient or context. See
// http://hl7.org/fhir/StructureDefinition/ActivityDefinition
type ActivityDefinition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this activity definition (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the activity definition
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the activity definition
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this activity definition (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this activity definition (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Natural language description of the activity definition
	Description *Markdown `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Why this activity definition is defined
	Purpose *Markdown `protobuf:"bytes,19,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Describes the clinical usage of the asset
	Usage *String `protobuf:"bytes,20,opt,name=usage,proto3" json:"usage,omitempty"`
	// When the activity definition was approved by publisher
	ApprovalDate *Date `protobuf:"bytes,21,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	// When the activity definition was last reviewed
	LastReviewDate *Date `protobuf:"bytes,22,opt,name=last_review_date,json=lastReviewDate,proto3" json:"last_review_date,omitempty"`
	// When the activity definition is expected to be used
	EffectivePeriod *Period `protobuf:"bytes,23,opt,name=effective_period,json=effectivePeriod,proto3" json:"effective_period,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,24,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for activity definition (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,25,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// E.g. Education, Treatment, Assessment, etc
	Topic []*CodeableConcept `protobuf:"bytes,26,rep,name=topic,proto3" json:"topic,omitempty"`
	// A content contributor
	Contributor []*Contributor `protobuf:"bytes,27,rep,name=contributor,proto3" json:"contributor,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,28,rep,name=contact,proto3" json:"contact,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,29,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Additional documentation, citations, etc
	RelatedArtifact []*RelatedArtifact `protobuf:"bytes,30,rep,name=related_artifact,json=relatedArtifact,proto3" json:"related_artifact,omitempty"`
	// Logic used by the asset
	Library []*Reference `protobuf:"bytes,31,rep,name=library,proto3" json:"library,omitempty"`
	// Kind of resource
	Kind *ResourceTypeCode `protobuf:"bytes,32,opt,name=kind,proto3" json:"kind,omitempty"`
	// Detail type of activity
	Code   *CodeableConcept               `protobuf:"bytes,33,opt,name=code,proto3" json:"code,omitempty"`
	Timing *ActivityDefinition_TimingType `protobuf:"bytes,34,opt,name=timing,proto3" json:"timing,omitempty"`
	// Where it should happen
	Location    *Reference                        `protobuf:"bytes,35,opt,name=location,proto3" json:"location,omitempty"`
	Participant []*ActivityDefinition_Participant `protobuf:"bytes,36,rep,name=participant,proto3" json:"participant,omitempty"`
	Product     *ActivityDefinition_Product       `protobuf:"bytes,37,opt,name=product,proto3" json:"product,omitempty"`
	// How much is administered/consumed/supplied
	Quantity *SimpleQuantity `protobuf:"bytes,38,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Detailed dosage instructions
	Dosage []*Dosage `protobuf:"bytes,39,rep,name=dosage,proto3" json:"dosage,omitempty"`
	// What part of body to perform on
	BodySite []*CodeableConcept `protobuf:"bytes,40,rep,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Transform to apply the template
	Transform            *Reference                         `protobuf:"bytes,41,opt,name=transform,proto3" json:"transform,omitempty"`
	DynamicValue         []*ActivityDefinition_DynamicValue `protobuf:"bytes,42,rep,name=dynamic_value,json=dynamicValue,proto3" json:"dynamic_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ActivityDefinition) Reset()         { *m = ActivityDefinition{} }
func (m *ActivityDefinition) String() string { return proto.CompactTextString(m) }
func (*ActivityDefinition) ProtoMessage()    {}
func (*ActivityDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{1}
}

func (m *ActivityDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityDefinition.Unmarshal(m, b)
}
func (m *ActivityDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityDefinition.Marshal(b, m, deterministic)
}
func (m *ActivityDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityDefinition.Merge(m, src)
}
func (m *ActivityDefinition) XXX_Size() int {
	return xxx_messageInfo_ActivityDefinition.Size(m)
}
func (m *ActivityDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityDefinition proto.InternalMessageInfo

func (m *ActivityDefinition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ActivityDefinition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ActivityDefinition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ActivityDefinition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ActivityDefinition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ActivityDefinition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ActivityDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ActivityDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ActivityDefinition) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *ActivityDefinition) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ActivityDefinition) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ActivityDefinition) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ActivityDefinition) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *ActivityDefinition) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ActivityDefinition) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *ActivityDefinition) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ActivityDefinition) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *ActivityDefinition) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ActivityDefinition) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *ActivityDefinition) GetUsage() *String {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *ActivityDefinition) GetApprovalDate() *Date {
	if m != nil {
		return m.ApprovalDate
	}
	return nil
}

func (m *ActivityDefinition) GetLastReviewDate() *Date {
	if m != nil {
		return m.LastReviewDate
	}
	return nil
}

func (m *ActivityDefinition) GetEffectivePeriod() *Period {
	if m != nil {
		return m.EffectivePeriod
	}
	return nil
}

func (m *ActivityDefinition) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *ActivityDefinition) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *ActivityDefinition) GetTopic() []*CodeableConcept {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *ActivityDefinition) GetContributor() []*Contributor {
	if m != nil {
		return m.Contributor
	}
	return nil
}

func (m *ActivityDefinition) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *ActivityDefinition) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *ActivityDefinition) GetRelatedArtifact() []*RelatedArtifact {
	if m != nil {
		return m.RelatedArtifact
	}
	return nil
}

func (m *ActivityDefinition) GetLibrary() []*Reference {
	if m != nil {
		return m.Library
	}
	return nil
}

func (m *ActivityDefinition) GetKind() *ResourceTypeCode {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *ActivityDefinition) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ActivityDefinition) GetTiming() *ActivityDefinition_TimingType {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *ActivityDefinition) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *ActivityDefinition) GetParticipant() []*ActivityDefinition_Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *ActivityDefinition) GetProduct() *ActivityDefinition_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ActivityDefinition) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *ActivityDefinition) GetDosage() []*Dosage {
	if m != nil {
		return m.Dosage
	}
	return nil
}

func (m *ActivityDefinition) GetBodySite() []*CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *ActivityDefinition) GetTransform() *Reference {
	if m != nil {
		return m.Transform
	}
	return nil
}

func (m *ActivityDefinition) GetDynamicValue() []*ActivityDefinition_DynamicValue {
	if m != nil {
		return m.DynamicValue
	}
	return nil
}

// When activity is to occur
type ActivityDefinition_TimingType struct {
	// Types that are valid to be assigned to Timing:
	//	*ActivityDefinition_TimingType_TimingValue
	//	*ActivityDefinition_TimingType_DateTime
	//	*ActivityDefinition_TimingType_Period
	//	*ActivityDefinition_TimingType_Range
	Timing               isActivityDefinition_TimingType_Timing `protobuf_oneof:"timing"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ActivityDefinition_TimingType) Reset()         { *m = ActivityDefinition_TimingType{} }
func (m *ActivityDefinition_TimingType) String() string { return proto.CompactTextString(m) }
func (*ActivityDefinition_TimingType) ProtoMessage()    {}
func (*ActivityDefinition_TimingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{1, 0}
}

func (m *ActivityDefinition_TimingType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityDefinition_TimingType.Unmarshal(m, b)
}
func (m *ActivityDefinition_TimingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityDefinition_TimingType.Marshal(b, m, deterministic)
}
func (m *ActivityDefinition_TimingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityDefinition_TimingType.Merge(m, src)
}
func (m *ActivityDefinition_TimingType) XXX_Size() int {
	return xxx_messageInfo_ActivityDefinition_TimingType.Size(m)
}
func (m *ActivityDefinition_TimingType) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityDefinition_TimingType.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityDefinition_TimingType proto.InternalMessageInfo

type isActivityDefinition_TimingType_Timing interface {
	isActivityDefinition_TimingType_Timing()
}

type ActivityDefinition_TimingType_TimingValue struct {
	TimingValue *Timing `protobuf:"bytes,1,opt,name=timing_value,json=timing,proto3,oneof"`
}

type ActivityDefinition_TimingType_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ActivityDefinition_TimingType_Period struct {
	Period *Period `protobuf:"bytes,3,opt,name=period,proto3,oneof"`
}

type ActivityDefinition_TimingType_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

func (*ActivityDefinition_TimingType_TimingValue) isActivityDefinition_TimingType_Timing() {}

func (*ActivityDefinition_TimingType_DateTime) isActivityDefinition_TimingType_Timing() {}

func (*ActivityDefinition_TimingType_Period) isActivityDefinition_TimingType_Timing() {}

func (*ActivityDefinition_TimingType_Range) isActivityDefinition_TimingType_Timing() {}

func (m *ActivityDefinition_TimingType) GetTiming() isActivityDefinition_TimingType_Timing {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *ActivityDefinition_TimingType) GetTimingValue() *Timing {
	if x, ok := m.GetTiming().(*ActivityDefinition_TimingType_TimingValue); ok {
		return x.TimingValue
	}
	return nil
}

func (m *ActivityDefinition_TimingType) GetDateTime() *DateTime {
	if x, ok := m.GetTiming().(*ActivityDefinition_TimingType_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ActivityDefinition_TimingType) GetPeriod() *Period {
	if x, ok := m.GetTiming().(*ActivityDefinition_TimingType_Period); ok {
		return x.Period
	}
	return nil
}

func (m *ActivityDefinition_TimingType) GetRange() *Range {
	if x, ok := m.GetTiming().(*ActivityDefinition_TimingType_Range); ok {
		return x.Range
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ActivityDefinition_TimingType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ActivityDefinition_TimingType_OneofMarshaler, _ActivityDefinition_TimingType_OneofUnmarshaler, _ActivityDefinition_TimingType_OneofSizer, []interface{}{
		(*ActivityDefinition_TimingType_TimingValue)(nil),
		(*ActivityDefinition_TimingType_DateTime)(nil),
		(*ActivityDefinition_TimingType_Period)(nil),
		(*ActivityDefinition_TimingType_Range)(nil),
	}
}

func _ActivityDefinition_TimingType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ActivityDefinition_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *ActivityDefinition_TimingType_TimingValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimingValue); err != nil {
			return err
		}
	case *ActivityDefinition_TimingType_DateTime:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ActivityDefinition_TimingType_Period:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *ActivityDefinition_TimingType_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ActivityDefinition_TimingType.Timing has unexpected type %T", x)
	}
	return nil
}

func _ActivityDefinition_TimingType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ActivityDefinition_TimingType)
	switch tag {
	case 1: // timing.timing_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Timing = &ActivityDefinition_TimingType_TimingValue{msg}
		return true, err
	case 2: // timing.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Timing = &ActivityDefinition_TimingType_DateTime{msg}
		return true, err
	case 3: // timing.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Timing = &ActivityDefinition_TimingType_Period{msg}
		return true, err
	case 4: // timing.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Timing = &ActivityDefinition_TimingType_Range{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ActivityDefinition_TimingType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ActivityDefinition_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *ActivityDefinition_TimingType_TimingValue:
		s := proto.Size(x.TimingValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActivityDefinition_TimingType_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActivityDefinition_TimingType_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActivityDefinition_TimingType_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who should participate in the action
type ActivityDefinition_Participant struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// patient | practitioner | related-person
	Type *ActionParticipantTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// E.g. Nurse, Surgeon, Parent, etc
	Role                 *CodeableConcept `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActivityDefinition_Participant) Reset()         { *m = ActivityDefinition_Participant{} }
func (m *ActivityDefinition_Participant) String() string { return proto.CompactTextString(m) }
func (*ActivityDefinition_Participant) ProtoMessage()    {}
func (*ActivityDefinition_Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{1, 1}
}

func (m *ActivityDefinition_Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityDefinition_Participant.Unmarshal(m, b)
}
func (m *ActivityDefinition_Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityDefinition_Participant.Marshal(b, m, deterministic)
}
func (m *ActivityDefinition_Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityDefinition_Participant.Merge(m, src)
}
func (m *ActivityDefinition_Participant) XXX_Size() int {
	return xxx_messageInfo_ActivityDefinition_Participant.Size(m)
}
func (m *ActivityDefinition_Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityDefinition_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityDefinition_Participant proto.InternalMessageInfo

func (m *ActivityDefinition_Participant) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ActivityDefinition_Participant) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ActivityDefinition_Participant) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ActivityDefinition_Participant) GetType() *ActionParticipantTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ActivityDefinition_Participant) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

// What's administered/supplied
type ActivityDefinition_Product struct {
	// Types that are valid to be assigned to Product:
	//	*ActivityDefinition_Product_Reference
	//	*ActivityDefinition_Product_CodeableConcept
	Product              isActivityDefinition_Product_Product `protobuf_oneof:"product"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ActivityDefinition_Product) Reset()         { *m = ActivityDefinition_Product{} }
func (m *ActivityDefinition_Product) String() string { return proto.CompactTextString(m) }
func (*ActivityDefinition_Product) ProtoMessage()    {}
func (*ActivityDefinition_Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{1, 2}
}

func (m *ActivityDefinition_Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityDefinition_Product.Unmarshal(m, b)
}
func (m *ActivityDefinition_Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityDefinition_Product.Marshal(b, m, deterministic)
}
func (m *ActivityDefinition_Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityDefinition_Product.Merge(m, src)
}
func (m *ActivityDefinition_Product) XXX_Size() int {
	return xxx_messageInfo_ActivityDefinition_Product.Size(m)
}
func (m *ActivityDefinition_Product) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityDefinition_Product.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityDefinition_Product proto.InternalMessageInfo

type isActivityDefinition_Product_Product interface {
	isActivityDefinition_Product_Product()
}

type ActivityDefinition_Product_Reference struct {
	Reference *Reference `protobuf:"bytes,1,opt,name=reference,proto3,oneof"`
}

type ActivityDefinition_Product_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*ActivityDefinition_Product_Reference) isActivityDefinition_Product_Product() {}

func (*ActivityDefinition_Product_CodeableConcept) isActivityDefinition_Product_Product() {}

func (m *ActivityDefinition_Product) GetProduct() isActivityDefinition_Product_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ActivityDefinition_Product) GetReference() *Reference {
	if x, ok := m.GetProduct().(*ActivityDefinition_Product_Reference); ok {
		return x.Reference
	}
	return nil
}

func (m *ActivityDefinition_Product) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetProduct().(*ActivityDefinition_Product_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ActivityDefinition_Product) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ActivityDefinition_Product_OneofMarshaler, _ActivityDefinition_Product_OneofUnmarshaler, _ActivityDefinition_Product_OneofSizer, []interface{}{
		(*ActivityDefinition_Product_Reference)(nil),
		(*ActivityDefinition_Product_CodeableConcept)(nil),
	}
}

func _ActivityDefinition_Product_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ActivityDefinition_Product)
	// product
	switch x := m.Product.(type) {
	case *ActivityDefinition_Product_Reference:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case *ActivityDefinition_Product_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ActivityDefinition_Product.Product has unexpected type %T", x)
	}
	return nil
}

func _ActivityDefinition_Product_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ActivityDefinition_Product)
	switch tag {
	case 1: // product.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Product = &ActivityDefinition_Product_Reference{msg}
		return true, err
	case 2: // product.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Product = &ActivityDefinition_Product_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ActivityDefinition_Product_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ActivityDefinition_Product)
	// product
	switch x := m.Product.(type) {
	case *ActivityDefinition_Product_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActivityDefinition_Product_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Dynamic aspects of the definition
type ActivityDefinition_DynamicValue struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Natural language description of the dynamic value
	Description *String `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The path to the element to be set dynamically
	Path *String `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	// Language of the expression
	Language *String `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	// An expression that provides the dynamic value for the customization
	Expression           *String  `protobuf:"bytes,7,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityDefinition_DynamicValue) Reset()         { *m = ActivityDefinition_DynamicValue{} }
func (m *ActivityDefinition_DynamicValue) String() string { return proto.CompactTextString(m) }
func (*ActivityDefinition_DynamicValue) ProtoMessage()    {}
func (*ActivityDefinition_DynamicValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{1, 3}
}

func (m *ActivityDefinition_DynamicValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityDefinition_DynamicValue.Unmarshal(m, b)
}
func (m *ActivityDefinition_DynamicValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityDefinition_DynamicValue.Marshal(b, m, deterministic)
}
func (m *ActivityDefinition_DynamicValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityDefinition_DynamicValue.Merge(m, src)
}
func (m *ActivityDefinition_DynamicValue) XXX_Size() int {
	return xxx_messageInfo_ActivityDefinition_DynamicValue.Size(m)
}
func (m *ActivityDefinition_DynamicValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityDefinition_DynamicValue.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityDefinition_DynamicValue proto.InternalMessageInfo

func (m *ActivityDefinition_DynamicValue) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ActivityDefinition_DynamicValue) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ActivityDefinition_DynamicValue) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ActivityDefinition_DynamicValue) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ActivityDefinition_DynamicValue) GetPath() *String {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *ActivityDefinition_DynamicValue) GetLanguage() *String {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ActivityDefinition_DynamicValue) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

// Auto-generated from StructureDefinition for AdverseEvent, last updated
// 2017-04-19T07:44:43.294+10:00. Medical care, research study or other
// healthcare event causing physical injury. See
// http://hl7.org/fhir/StructureDefinition/AdverseEvent
type AdverseEvent struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier for the event
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// AE | PAE
	// An adverse event is an event that caused harm to a patient,  an adverse
	// reaction is a something that is a subject-specific event that is a result
	// of an exposure to a medication, food, device or environmental substance, a
	// potential adverse event is something that occurred and that could have
	// caused harm to a patient but did not
	Category *AdverseEventCategoryCode `protobuf:"bytes,10,opt,name=category,proto3" json:"category,omitempty"`
	// actual | potential
	Type *CodeableConcept `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// Subject or group impacted by event
	Subject *Reference `protobuf:"bytes,12,opt,name=subject,proto3" json:"subject,omitempty"`
	// When the event occurred
	Date *DateTime `protobuf:"bytes,13,opt,name=date,proto3" json:"date,omitempty"`
	// Adverse Reaction Events linked to exposure to substance
	Reaction []*Reference `protobuf:"bytes,14,rep,name=reaction,proto3" json:"reaction,omitempty"`
	// Location where adverse event occurred
	Location *Reference `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	// Mild | Moderate | Severe
	Seriousness *CodeableConcept `protobuf:"bytes,16,opt,name=seriousness,proto3" json:"seriousness,omitempty"`
	// resolved | recovering | ongoing | resolvedWithSequelae | fatal | unknown
	Outcome *CodeableConcept `protobuf:"bytes,17,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Who recorded the adverse event
	Recorder *Reference `protobuf:"bytes,18,opt,name=recorder,proto3" json:"recorder,omitempty"`
	// Who  was involved in the adverse event or the potential adverse event
	EventParticipant *Reference `protobuf:"bytes,19,opt,name=event_participant,json=eventParticipant,proto3" json:"event_participant,omitempty"`
	// Description of the adverse event
	Description   *String                       `protobuf:"bytes,20,opt,name=description,proto3" json:"description,omitempty"`
	SuspectEntity []*AdverseEvent_SuspectEntity `protobuf:"bytes,21,rep,name=suspect_entity,json=suspectEntity,proto3" json:"suspect_entity,omitempty"`
	// AdverseEvent.subjectMedicalHistory
	SubjectMedicalHistory []*Reference `protobuf:"bytes,22,rep,name=subject_medical_history,json=subjectMedicalHistory,proto3" json:"subject_medical_history,omitempty"`
	// AdverseEvent.referenceDocument
	ReferenceDocument []*Reference `protobuf:"bytes,23,rep,name=reference_document,json=referenceDocument,proto3" json:"reference_document,omitempty"`
	// AdverseEvent.study
	Study                []*Reference `protobuf:"bytes,24,rep,name=study,proto3" json:"study,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AdverseEvent) Reset()         { *m = AdverseEvent{} }
func (m *AdverseEvent) String() string { return proto.CompactTextString(m) }
func (*AdverseEvent) ProtoMessage()    {}
func (*AdverseEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{2}
}

func (m *AdverseEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdverseEvent.Unmarshal(m, b)
}
func (m *AdverseEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdverseEvent.Marshal(b, m, deterministic)
}
func (m *AdverseEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdverseEvent.Merge(m, src)
}
func (m *AdverseEvent) XXX_Size() int {
	return xxx_messageInfo_AdverseEvent.Size(m)
}
func (m *AdverseEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AdverseEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AdverseEvent proto.InternalMessageInfo

func (m *AdverseEvent) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AdverseEvent) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *AdverseEvent) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *AdverseEvent) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *AdverseEvent) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *AdverseEvent) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *AdverseEvent) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AdverseEvent) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AdverseEvent) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *AdverseEvent) GetCategory() *AdverseEventCategoryCode {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *AdverseEvent) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *AdverseEvent) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *AdverseEvent) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *AdverseEvent) GetReaction() []*Reference {
	if m != nil {
		return m.Reaction
	}
	return nil
}

func (m *AdverseEvent) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *AdverseEvent) GetSeriousness() *CodeableConcept {
	if m != nil {
		return m.Seriousness
	}
	return nil
}

func (m *AdverseEvent) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *AdverseEvent) GetRecorder() *Reference {
	if m != nil {
		return m.Recorder
	}
	return nil
}

func (m *AdverseEvent) GetEventParticipant() *Reference {
	if m != nil {
		return m.EventParticipant
	}
	return nil
}

func (m *AdverseEvent) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *AdverseEvent) GetSuspectEntity() []*AdverseEvent_SuspectEntity {
	if m != nil {
		return m.SuspectEntity
	}
	return nil
}

func (m *AdverseEvent) GetSubjectMedicalHistory() []*Reference {
	if m != nil {
		return m.SubjectMedicalHistory
	}
	return nil
}

func (m *AdverseEvent) GetReferenceDocument() []*Reference {
	if m != nil {
		return m.ReferenceDocument
	}
	return nil
}

func (m *AdverseEvent) GetStudy() []*Reference {
	if m != nil {
		return m.Study
	}
	return nil
}

// The suspected agent causing the adverse event
type AdverseEvent_SuspectEntity struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Refers to the specific entity that caused the adverse event
	Instance *Reference `protobuf:"bytes,4,opt,name=instance,proto3" json:"instance,omitempty"`
	// causality1 | causality2
	Causality *AdverseEventCausalityCode `protobuf:"bytes,5,opt,name=causality,proto3" json:"causality,omitempty"`
	// assess1 | assess2
	CausalityAssessment *CodeableConcept `protobuf:"bytes,6,opt,name=causality_assessment,json=causalityAssessment,proto3" json:"causality_assessment,omitempty"`
	// AdverseEvent.suspectEntity.causalityProductRelatedness
	CausalityProductRelatedness *String `protobuf:"bytes,7,opt,name=causality_product_relatedness,json=causalityProductRelatedness,proto3" json:"causality_product_relatedness,omitempty"`
	// method1 | method2
	CausalityMethod *CodeableConcept `protobuf:"bytes,8,opt,name=causality_method,json=causalityMethod,proto3" json:"causality_method,omitempty"`
	// AdverseEvent.suspectEntity.causalityAuthor
	CausalityAuthor *Reference `protobuf:"bytes,9,opt,name=causality_author,json=causalityAuthor,proto3" json:"causality_author,omitempty"`
	// result1 | result2
	CausalityResult      *CodeableConcept `protobuf:"bytes,10,opt,name=causality_result,json=causalityResult,proto3" json:"causality_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AdverseEvent_SuspectEntity) Reset()         { *m = AdverseEvent_SuspectEntity{} }
func (m *AdverseEvent_SuspectEntity) String() string { return proto.CompactTextString(m) }
func (*AdverseEvent_SuspectEntity) ProtoMessage()    {}
func (*AdverseEvent_SuspectEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{2, 0}
}

func (m *AdverseEvent_SuspectEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdverseEvent_SuspectEntity.Unmarshal(m, b)
}
func (m *AdverseEvent_SuspectEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdverseEvent_SuspectEntity.Marshal(b, m, deterministic)
}
func (m *AdverseEvent_SuspectEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdverseEvent_SuspectEntity.Merge(m, src)
}
func (m *AdverseEvent_SuspectEntity) XXX_Size() int {
	return xxx_messageInfo_AdverseEvent_SuspectEntity.Size(m)
}
func (m *AdverseEvent_SuspectEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_AdverseEvent_SuspectEntity.DiscardUnknown(m)
}

var xxx_messageInfo_AdverseEvent_SuspectEntity proto.InternalMessageInfo

func (m *AdverseEvent_SuspectEntity) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AdverseEvent_SuspectEntity) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AdverseEvent_SuspectEntity) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AdverseEvent_SuspectEntity) GetInstance() *Reference {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *AdverseEvent_SuspectEntity) GetCausality() *AdverseEventCausalityCode {
	if m != nil {
		return m.Causality
	}
	return nil
}

func (m *AdverseEvent_SuspectEntity) GetCausalityAssessment() *CodeableConcept {
	if m != nil {
		return m.CausalityAssessment
	}
	return nil
}

func (m *AdverseEvent_SuspectEntity) GetCausalityProductRelatedness() *String {
	if m != nil {
		return m.CausalityProductRelatedness
	}
	return nil
}

func (m *AdverseEvent_SuspectEntity) GetCausalityMethod() *CodeableConcept {
	if m != nil {
		return m.CausalityMethod
	}
	return nil
}

func (m *AdverseEvent_SuspectEntity) GetCausalityAuthor() *Reference {
	if m != nil {
		return m.CausalityAuthor
	}
	return nil
}

func (m *AdverseEvent_SuspectEntity) GetCausalityResult() *CodeableConcept {
	if m != nil {
		return m.CausalityResult
	}
	return nil
}

// Auto-generated from StructureDefinition for AllergyIntolerance, last updated
// 2017-04-19T07:44:43.294+10:00. Allergy or Intolerance (generally: Risk of
// adverse reaction to a substance). See
// http://hl7.org/fhir/StructureDefinition/AllergyIntolerance
type AllergyIntolerance struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External ids for this item
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | inactive | resolved
	ClinicalStatus *AllergyIntoleranceClinicalStatusCode `protobuf:"bytes,10,opt,name=clinical_status,json=clinicalStatus,proto3" json:"clinical_status,omitempty"`
	// unconfirmed | confirmed | refuted | entered-in-error
	VerificationStatus *AllergyIntoleranceVerificationStatusCode `protobuf:"bytes,11,opt,name=verification_status,json=verificationStatus,proto3" json:"verification_status,omitempty"`
	// allergy | intolerance - Underlying mechanism (if known)
	Type *AllergyIntoleranceTypeCode `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	// food | medication | environment | biologic
	Category []*AllergyIntoleranceCategoryCode `protobuf:"bytes,13,rep,name=category,proto3" json:"category,omitempty"`
	// low | high | unable-to-assess
	Criticality *AllergyIntoleranceCriticalityCode `protobuf:"bytes,14,opt,name=criticality,proto3" json:"criticality,omitempty"`
	// Code that identifies the allergy or intolerance
	Code *CodeableConcept `protobuf:"bytes,15,opt,name=code,proto3" json:"code,omitempty"`
	// Who the sensitivity is for
	Patient *Reference                `protobuf:"bytes,16,opt,name=patient,proto3" json:"patient,omitempty"`
	Onset   *AllergyIntolerance_Onset `protobuf:"bytes,17,opt,name=onset,proto3" json:"onset,omitempty"`
	// Date record was believed accurate
	AssertedDate *DateTime `protobuf:"bytes,18,opt,name=asserted_date,json=assertedDate,proto3" json:"asserted_date,omitempty"`
	// Who recorded the sensitivity
	Recorder *Reference `protobuf:"bytes,19,opt,name=recorder,proto3" json:"recorder,omitempty"`
	// Source of the information about the allergy
	Asserter *Reference `protobuf:"bytes,20,opt,name=asserter,proto3" json:"asserter,omitempty"`
	// Date(/time) of last known occurrence of a reaction
	LastOccurrence *DateTime `protobuf:"bytes,21,opt,name=last_occurrence,json=lastOccurrence,proto3" json:"last_occurrence,omitempty"`
	// Additional text not captured in other fields
	Note                 []*Annotation                  `protobuf:"bytes,22,rep,name=note,proto3" json:"note,omitempty"`
	Reaction             []*AllergyIntolerance_Reaction `protobuf:"bytes,23,rep,name=reaction,proto3" json:"reaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *AllergyIntolerance) Reset()         { *m = AllergyIntolerance{} }
func (m *AllergyIntolerance) String() string { return proto.CompactTextString(m) }
func (*AllergyIntolerance) ProtoMessage()    {}
func (*AllergyIntolerance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{3}
}

func (m *AllergyIntolerance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllergyIntolerance.Unmarshal(m, b)
}
func (m *AllergyIntolerance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllergyIntolerance.Marshal(b, m, deterministic)
}
func (m *AllergyIntolerance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllergyIntolerance.Merge(m, src)
}
func (m *AllergyIntolerance) XXX_Size() int {
	return xxx_messageInfo_AllergyIntolerance.Size(m)
}
func (m *AllergyIntolerance) XXX_DiscardUnknown() {
	xxx_messageInfo_AllergyIntolerance.DiscardUnknown(m)
}

var xxx_messageInfo_AllergyIntolerance proto.InternalMessageInfo

func (m *AllergyIntolerance) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AllergyIntolerance) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *AllergyIntolerance) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *AllergyIntolerance) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *AllergyIntolerance) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *AllergyIntolerance) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *AllergyIntolerance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AllergyIntolerance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AllergyIntolerance) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *AllergyIntolerance) GetClinicalStatus() *AllergyIntoleranceClinicalStatusCode {
	if m != nil {
		return m.ClinicalStatus
	}
	return nil
}

func (m *AllergyIntolerance) GetVerificationStatus() *AllergyIntoleranceVerificationStatusCode {
	if m != nil {
		return m.VerificationStatus
	}
	return nil
}

func (m *AllergyIntolerance) GetType() *AllergyIntoleranceTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *AllergyIntolerance) GetCategory() []*AllergyIntoleranceCategoryCode {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *AllergyIntolerance) GetCriticality() *AllergyIntoleranceCriticalityCode {
	if m != nil {
		return m.Criticality
	}
	return nil
}

func (m *AllergyIntolerance) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *AllergyIntolerance) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *AllergyIntolerance) GetOnset() *AllergyIntolerance_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *AllergyIntolerance) GetAssertedDate() *DateTime {
	if m != nil {
		return m.AssertedDate
	}
	return nil
}

func (m *AllergyIntolerance) GetRecorder() *Reference {
	if m != nil {
		return m.Recorder
	}
	return nil
}

func (m *AllergyIntolerance) GetAsserter() *Reference {
	if m != nil {
		return m.Asserter
	}
	return nil
}

func (m *AllergyIntolerance) GetLastOccurrence() *DateTime {
	if m != nil {
		return m.LastOccurrence
	}
	return nil
}

func (m *AllergyIntolerance) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *AllergyIntolerance) GetReaction() []*AllergyIntolerance_Reaction {
	if m != nil {
		return m.Reaction
	}
	return nil
}

// When allergy or intolerance was identified
type AllergyIntolerance_Onset struct {
	// Types that are valid to be assigned to Onset:
	//	*AllergyIntolerance_Onset_DateTime
	//	*AllergyIntolerance_Onset_Age
	//	*AllergyIntolerance_Onset_Period
	//	*AllergyIntolerance_Onset_Range
	//	*AllergyIntolerance_Onset_StringValue
	Onset                isAllergyIntolerance_Onset_Onset `protobuf_oneof:"onset"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *AllergyIntolerance_Onset) Reset()         { *m = AllergyIntolerance_Onset{} }
func (m *AllergyIntolerance_Onset) String() string { return proto.CompactTextString(m) }
func (*AllergyIntolerance_Onset) ProtoMessage()    {}
func (*AllergyIntolerance_Onset) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{3, 0}
}

func (m *AllergyIntolerance_Onset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllergyIntolerance_Onset.Unmarshal(m, b)
}
func (m *AllergyIntolerance_Onset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllergyIntolerance_Onset.Marshal(b, m, deterministic)
}
func (m *AllergyIntolerance_Onset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllergyIntolerance_Onset.Merge(m, src)
}
func (m *AllergyIntolerance_Onset) XXX_Size() int {
	return xxx_messageInfo_AllergyIntolerance_Onset.Size(m)
}
func (m *AllergyIntolerance_Onset) XXX_DiscardUnknown() {
	xxx_messageInfo_AllergyIntolerance_Onset.DiscardUnknown(m)
}

var xxx_messageInfo_AllergyIntolerance_Onset proto.InternalMessageInfo

type isAllergyIntolerance_Onset_Onset interface {
	isAllergyIntolerance_Onset_Onset()
}

type AllergyIntolerance_Onset_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type AllergyIntolerance_Onset_Age struct {
	Age *Age `protobuf:"bytes,2,opt,name=age,proto3,oneof"`
}

type AllergyIntolerance_Onset_Period struct {
	Period *Period `protobuf:"bytes,3,opt,name=period,proto3,oneof"`
}

type AllergyIntolerance_Onset_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type AllergyIntolerance_Onset_StringValue struct {
	StringValue *String `protobuf:"bytes,5,opt,name=string_value,json=string,proto3,oneof"`
}

func (*AllergyIntolerance_Onset_DateTime) isAllergyIntolerance_Onset_Onset() {}

func (*AllergyIntolerance_Onset_Age) isAllergyIntolerance_Onset_Onset() {}

func (*AllergyIntolerance_Onset_Period) isAllergyIntolerance_Onset_Onset() {}

func (*AllergyIntolerance_Onset_Range) isAllergyIntolerance_Onset_Onset() {}

func (*AllergyIntolerance_Onset_StringValue) isAllergyIntolerance_Onset_Onset() {}

func (m *AllergyIntolerance_Onset) GetOnset() isAllergyIntolerance_Onset_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *AllergyIntolerance_Onset) GetDateTime() *DateTime {
	if x, ok := m.GetOnset().(*AllergyIntolerance_Onset_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *AllergyIntolerance_Onset) GetAge() *Age {
	if x, ok := m.GetOnset().(*AllergyIntolerance_Onset_Age); ok {
		return x.Age
	}
	return nil
}

func (m *AllergyIntolerance_Onset) GetPeriod() *Period {
	if x, ok := m.GetOnset().(*AllergyIntolerance_Onset_Period); ok {
		return x.Period
	}
	return nil
}

func (m *AllergyIntolerance_Onset) GetRange() *Range {
	if x, ok := m.GetOnset().(*AllergyIntolerance_Onset_Range); ok {
		return x.Range
	}
	return nil
}

func (m *AllergyIntolerance_Onset) GetStringValue() *String {
	if x, ok := m.GetOnset().(*AllergyIntolerance_Onset_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AllergyIntolerance_Onset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AllergyIntolerance_Onset_OneofMarshaler, _AllergyIntolerance_Onset_OneofUnmarshaler, _AllergyIntolerance_Onset_OneofSizer, []interface{}{
		(*AllergyIntolerance_Onset_DateTime)(nil),
		(*AllergyIntolerance_Onset_Age)(nil),
		(*AllergyIntolerance_Onset_Period)(nil),
		(*AllergyIntolerance_Onset_Range)(nil),
		(*AllergyIntolerance_Onset_StringValue)(nil),
	}
}

func _AllergyIntolerance_Onset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AllergyIntolerance_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *AllergyIntolerance_Onset_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *AllergyIntolerance_Onset_Age:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *AllergyIntolerance_Onset_Period:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *AllergyIntolerance_Onset_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *AllergyIntolerance_Onset_StringValue:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AllergyIntolerance_Onset.Onset has unexpected type %T", x)
	}
	return nil
}

func _AllergyIntolerance_Onset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AllergyIntolerance_Onset)
	switch tag {
	case 1: // onset.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Onset = &AllergyIntolerance_Onset_DateTime{msg}
		return true, err
	case 2: // onset.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Onset = &AllergyIntolerance_Onset_Age{msg}
		return true, err
	case 3: // onset.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Onset = &AllergyIntolerance_Onset_Period{msg}
		return true, err
	case 4: // onset.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Onset = &AllergyIntolerance_Onset_Range{msg}
		return true, err
	case 5: // onset.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Onset = &AllergyIntolerance_Onset_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AllergyIntolerance_Onset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AllergyIntolerance_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *AllergyIntolerance_Onset_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AllergyIntolerance_Onset_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AllergyIntolerance_Onset_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AllergyIntolerance_Onset_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AllergyIntolerance_Onset_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Adverse Reaction Events linked to exposure to substance
type AllergyIntolerance_Reaction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Specific substance or pharmaceutical product considered to be responsible
	// for event
	Substance *CodeableConcept `protobuf:"bytes,4,opt,name=substance,proto3" json:"substance,omitempty"`
	// Clinical symptoms/signs associated with the Event
	Manifestation []*CodeableConcept `protobuf:"bytes,5,rep,name=manifestation,proto3" json:"manifestation,omitempty"`
	// Description of the event as a whole
	Description *String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Date(/time) when manifestations showed
	Onset *DateTime `protobuf:"bytes,7,opt,name=onset,proto3" json:"onset,omitempty"`
	// mild | moderate | severe (of event as a whole)
	Severity *AllergyIntoleranceSeverityCode `protobuf:"bytes,8,opt,name=severity,proto3" json:"severity,omitempty"`
	// How the subject was exposed to the substance
	ExposureRoute *CodeableConcept `protobuf:"bytes,9,opt,name=exposure_route,json=exposureRoute,proto3" json:"exposure_route,omitempty"`
	// Text about event not captured in other fields
	Note                 []*Annotation `protobuf:"bytes,10,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AllergyIntolerance_Reaction) Reset()         { *m = AllergyIntolerance_Reaction{} }
func (m *AllergyIntolerance_Reaction) String() string { return proto.CompactTextString(m) }
func (*AllergyIntolerance_Reaction) ProtoMessage()    {}
func (*AllergyIntolerance_Reaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{3, 1}
}

func (m *AllergyIntolerance_Reaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllergyIntolerance_Reaction.Unmarshal(m, b)
}
func (m *AllergyIntolerance_Reaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllergyIntolerance_Reaction.Marshal(b, m, deterministic)
}
func (m *AllergyIntolerance_Reaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllergyIntolerance_Reaction.Merge(m, src)
}
func (m *AllergyIntolerance_Reaction) XXX_Size() int {
	return xxx_messageInfo_AllergyIntolerance_Reaction.Size(m)
}
func (m *AllergyIntolerance_Reaction) XXX_DiscardUnknown() {
	xxx_messageInfo_AllergyIntolerance_Reaction.DiscardUnknown(m)
}

var xxx_messageInfo_AllergyIntolerance_Reaction proto.InternalMessageInfo

func (m *AllergyIntolerance_Reaction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AllergyIntolerance_Reaction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AllergyIntolerance_Reaction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AllergyIntolerance_Reaction) GetSubstance() *CodeableConcept {
	if m != nil {
		return m.Substance
	}
	return nil
}

func (m *AllergyIntolerance_Reaction) GetManifestation() []*CodeableConcept {
	if m != nil {
		return m.Manifestation
	}
	return nil
}

func (m *AllergyIntolerance_Reaction) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *AllergyIntolerance_Reaction) GetOnset() *DateTime {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *AllergyIntolerance_Reaction) GetSeverity() *AllergyIntoleranceSeverityCode {
	if m != nil {
		return m.Severity
	}
	return nil
}

func (m *AllergyIntolerance_Reaction) GetExposureRoute() *CodeableConcept {
	if m != nil {
		return m.ExposureRoute
	}
	return nil
}

func (m *AllergyIntolerance_Reaction) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Auto-generated from StructureDefinition for Appointment, last updated
// 2017-04-19T07:44:43.294+10:00. A booking of a healthcare event among
// patient(s), practitioner(s), related person(s) and/or device(s) for a
// specific date/time. This may result in one or more Encounter(s). See
// http://hl7.org/fhir/StructureDefinition/Appointment
type Appointment struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this item
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// proposed | pending | booked | arrived | fulfilled | cancelled | noshow |
	// entered-in-error
	Status *AppointmentStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// A broad categorisation of the service that is to be performed during this
	// appointment
	ServiceCategory *CodeableConcept `protobuf:"bytes,11,opt,name=service_category,json=serviceCategory,proto3" json:"service_category,omitempty"`
	// The specific service that is to be performed during this appointment
	ServiceType []*CodeableConcept `protobuf:"bytes,12,rep,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	// The specialty of a practitioner that would be required to perform the
	// service requested in this appointment
	Specialty []*CodeableConcept `protobuf:"bytes,13,rep,name=specialty,proto3" json:"specialty,omitempty"`
	// The style of appointment or patient that has been booked in the slot (not
	// service type)
	AppointmentType *CodeableConcept `protobuf:"bytes,14,opt,name=appointment_type,json=appointmentType,proto3" json:"appointment_type,omitempty"`
	// Reason this appointment is scheduled
	Reason []*CodeableConcept `protobuf:"bytes,15,rep,name=reason,proto3" json:"reason,omitempty"`
	// Reason the appointment is to takes place (resource)
	Indication []*Reference `protobuf:"bytes,16,rep,name=indication,proto3" json:"indication,omitempty"`
	// Used to make informed decisions if needing to re-prioritize
	Priority *UnsignedInt `protobuf:"bytes,17,opt,name=priority,proto3" json:"priority,omitempty"`
	// Shown on a subject line in a meeting request, or appointment list
	Description *String `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Additional information to support the appointment
	SupportingInformation []*Reference `protobuf:"bytes,19,rep,name=supporting_information,json=supportingInformation,proto3" json:"supporting_information,omitempty"`
	// When appointment is to take place
	Start *Instant `protobuf:"bytes,20,opt,name=start,proto3" json:"start,omitempty"`
	// When appointment is to conclude
	End *Instant `protobuf:"bytes,21,opt,name=end,proto3" json:"end,omitempty"`
	// Can be less than start/end (e.g. estimate)
	MinutesDuration *PositiveInt `protobuf:"bytes,22,opt,name=minutes_duration,json=minutesDuration,proto3" json:"minutes_duration,omitempty"`
	// The slots that this appointment is filling
	Slot []*Reference `protobuf:"bytes,23,rep,name=slot,proto3" json:"slot,omitempty"`
	// The date that this appointment was initially created
	Created *DateTime `protobuf:"bytes,24,opt,name=created,proto3" json:"created,omitempty"`
	// Additional comments
	Comment *String `protobuf:"bytes,25,opt,name=comment,proto3" json:"comment,omitempty"`
	// The ReferralRequest provided as information to allocate to the Encounter
	IncomingReferral []*Reference               `protobuf:"bytes,26,rep,name=incoming_referral,json=incomingReferral,proto3" json:"incoming_referral,omitempty"`
	Participant      []*Appointment_Participant `protobuf:"bytes,27,rep,name=participant,proto3" json:"participant,omitempty"`
	// Potential date/time interval(s) requested to allocate the appointment
	// within
	RequestedPeriod      []*Period `protobuf:"bytes,28,rep,name=requested_period,json=requestedPeriod,proto3" json:"requested_period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Appointment) Reset()         { *m = Appointment{} }
func (m *Appointment) String() string { return proto.CompactTextString(m) }
func (*Appointment) ProtoMessage()    {}
func (*Appointment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{4}
}

func (m *Appointment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Appointment.Unmarshal(m, b)
}
func (m *Appointment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Appointment.Marshal(b, m, deterministic)
}
func (m *Appointment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Appointment.Merge(m, src)
}
func (m *Appointment) XXX_Size() int {
	return xxx_messageInfo_Appointment.Size(m)
}
func (m *Appointment) XXX_DiscardUnknown() {
	xxx_messageInfo_Appointment.DiscardUnknown(m)
}

var xxx_messageInfo_Appointment proto.InternalMessageInfo

func (m *Appointment) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Appointment) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Appointment) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Appointment) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Appointment) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Appointment) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Appointment) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Appointment) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Appointment) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Appointment) GetStatus() *AppointmentStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Appointment) GetServiceCategory() *CodeableConcept {
	if m != nil {
		return m.ServiceCategory
	}
	return nil
}

func (m *Appointment) GetServiceType() []*CodeableConcept {
	if m != nil {
		return m.ServiceType
	}
	return nil
}

func (m *Appointment) GetSpecialty() []*CodeableConcept {
	if m != nil {
		return m.Specialty
	}
	return nil
}

func (m *Appointment) GetAppointmentType() *CodeableConcept {
	if m != nil {
		return m.AppointmentType
	}
	return nil
}

func (m *Appointment) GetReason() []*CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Appointment) GetIndication() []*Reference {
	if m != nil {
		return m.Indication
	}
	return nil
}

func (m *Appointment) GetPriority() *UnsignedInt {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *Appointment) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Appointment) GetSupportingInformation() []*Reference {
	if m != nil {
		return m.SupportingInformation
	}
	return nil
}

func (m *Appointment) GetStart() *Instant {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Appointment) GetEnd() *Instant {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Appointment) GetMinutesDuration() *PositiveInt {
	if m != nil {
		return m.MinutesDuration
	}
	return nil
}

func (m *Appointment) GetSlot() []*Reference {
	if m != nil {
		return m.Slot
	}
	return nil
}

func (m *Appointment) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Appointment) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Appointment) GetIncomingReferral() []*Reference {
	if m != nil {
		return m.IncomingReferral
	}
	return nil
}

func (m *Appointment) GetParticipant() []*Appointment_Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *Appointment) GetRequestedPeriod() []*Period {
	if m != nil {
		return m.RequestedPeriod
	}
	return nil
}

// Participants involved in appointment
type Appointment_Participant struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Role of participant in the appointment
	Type []*CodeableConcept `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	// Person, Location/HealthcareService or Device
	Actor *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	// required | optional | information-only
	Required *ParticipantRequiredCode `protobuf:"bytes,6,opt,name=required,proto3" json:"required,omitempty"`
	// accepted | declined | tentative | needs-action
	Status               *ParticipationStatusCode `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Appointment_Participant) Reset()         { *m = Appointment_Participant{} }
func (m *Appointment_Participant) String() string { return proto.CompactTextString(m) }
func (*Appointment_Participant) ProtoMessage()    {}
func (*Appointment_Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{4, 0}
}

func (m *Appointment_Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Appointment_Participant.Unmarshal(m, b)
}
func (m *Appointment_Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Appointment_Participant.Marshal(b, m, deterministic)
}
func (m *Appointment_Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Appointment_Participant.Merge(m, src)
}
func (m *Appointment_Participant) XXX_Size() int {
	return xxx_messageInfo_Appointment_Participant.Size(m)
}
func (m *Appointment_Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_Appointment_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_Appointment_Participant proto.InternalMessageInfo

func (m *Appointment_Participant) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Appointment_Participant) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Appointment_Participant) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Appointment_Participant) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Appointment_Participant) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *Appointment_Participant) GetRequired() *ParticipantRequiredCode {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *Appointment_Participant) GetStatus() *ParticipationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

// Auto-generated from StructureDefinition for AppointmentResponse, last updated
// 2017-04-19T07:44:43.294+10:00. A reply to an appointment request for a
// patient and/or practitioner(s), such as a confirmation or rejection. See
// http://hl7.org/fhir/StructureDefinition/AppointmentResponse
type AppointmentResponse struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this item
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Appointment this response relates to
	Appointment *Reference `protobuf:"bytes,10,opt,name=appointment,proto3" json:"appointment,omitempty"`
	// Time from appointment, or requested new start time
	Start *Instant `protobuf:"bytes,11,opt,name=start,proto3" json:"start,omitempty"`
	// Time from appointment, or requested new end time
	End *Instant `protobuf:"bytes,12,opt,name=end,proto3" json:"end,omitempty"`
	// Role of participant in the appointment
	ParticipantType []*CodeableConcept `protobuf:"bytes,13,rep,name=participant_type,json=participantType,proto3" json:"participant_type,omitempty"`
	// Person, Location/HealthcareService or Device
	Actor *Reference `protobuf:"bytes,14,opt,name=actor,proto3" json:"actor,omitempty"`
	// accepted | declined | tentative | in-process | completed | needs-action |
	// entered-in-error
	ParticipantStatus *ParticipationStatusCode `protobuf:"bytes,15,opt,name=participant_status,json=participantStatus,proto3" json:"participant_status,omitempty"`
	// Additional comments
	Comment              *String  `protobuf:"bytes,16,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppointmentResponse) Reset()         { *m = AppointmentResponse{} }
func (m *AppointmentResponse) String() string { return proto.CompactTextString(m) }
func (*AppointmentResponse) ProtoMessage()    {}
func (*AppointmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{5}
}

func (m *AppointmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppointmentResponse.Unmarshal(m, b)
}
func (m *AppointmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppointmentResponse.Marshal(b, m, deterministic)
}
func (m *AppointmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppointmentResponse.Merge(m, src)
}
func (m *AppointmentResponse) XXX_Size() int {
	return xxx_messageInfo_AppointmentResponse.Size(m)
}
func (m *AppointmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppointmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppointmentResponse proto.InternalMessageInfo

func (m *AppointmentResponse) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AppointmentResponse) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *AppointmentResponse) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *AppointmentResponse) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *AppointmentResponse) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *AppointmentResponse) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *AppointmentResponse) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AppointmentResponse) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AppointmentResponse) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *AppointmentResponse) GetAppointment() *Reference {
	if m != nil {
		return m.Appointment
	}
	return nil
}

func (m *AppointmentResponse) GetStart() *Instant {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *AppointmentResponse) GetEnd() *Instant {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *AppointmentResponse) GetParticipantType() []*CodeableConcept {
	if m != nil {
		return m.ParticipantType
	}
	return nil
}

func (m *AppointmentResponse) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *AppointmentResponse) GetParticipantStatus() *ParticipationStatusCode {
	if m != nil {
		return m.ParticipantStatus
	}
	return nil
}

func (m *AppointmentResponse) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

// Auto-generated from StructureDefinition for AuditEvent, last updated
// 2017-04-19T07:44:43.294+10:00. Event record kept for security purposes. See
// http://hl7.org/fhir/StructureDefinition/AuditEvent
type AuditEvent struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type/identifier of event
	Type *Coding `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	// More specific type/id for the event
	Subtype []*Coding `protobuf:"bytes,10,rep,name=subtype,proto3" json:"subtype,omitempty"`
	// Type of action performed during the event
	Action *AuditEventActionCode `protobuf:"bytes,11,opt,name=action,proto3" json:"action,omitempty"`
	// Time when the event occurred on source
	Recorded *Instant `protobuf:"bytes,12,opt,name=recorded,proto3" json:"recorded,omitempty"`
	// Whether the event succeeded or failed
	Outcome *AuditEventOutcomeCode `protobuf:"bytes,13,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Description of the event outcome
	OutcomeDesc *String `protobuf:"bytes,14,opt,name=outcome_desc,json=outcomeDesc,proto3" json:"outcome_desc,omitempty"`
	// The purposeOfUse of the event
	PurposeOfEvent       []*CodeableConcept   `protobuf:"bytes,15,rep,name=purpose_of_event,json=purposeOfEvent,proto3" json:"purpose_of_event,omitempty"`
	Agent                []*AuditEvent_Agent  `protobuf:"bytes,16,rep,name=agent,proto3" json:"agent,omitempty"`
	Source               *AuditEvent_Source   `protobuf:"bytes,17,opt,name=source,proto3" json:"source,omitempty"`
	Entity               []*AuditEvent_Entity `protobuf:"bytes,18,rep,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AuditEvent) Reset()         { *m = AuditEvent{} }
func (m *AuditEvent) String() string { return proto.CompactTextString(m) }
func (*AuditEvent) ProtoMessage()    {}
func (*AuditEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{6}
}

func (m *AuditEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditEvent.Unmarshal(m, b)
}
func (m *AuditEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditEvent.Marshal(b, m, deterministic)
}
func (m *AuditEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditEvent.Merge(m, src)
}
func (m *AuditEvent) XXX_Size() int {
	return xxx_messageInfo_AuditEvent.Size(m)
}
func (m *AuditEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AuditEvent proto.InternalMessageInfo

func (m *AuditEvent) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AuditEvent) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *AuditEvent) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *AuditEvent) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *AuditEvent) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *AuditEvent) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *AuditEvent) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AuditEvent) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AuditEvent) GetType() *Coding {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *AuditEvent) GetSubtype() []*Coding {
	if m != nil {
		return m.Subtype
	}
	return nil
}

func (m *AuditEvent) GetAction() *AuditEventActionCode {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *AuditEvent) GetRecorded() *Instant {
	if m != nil {
		return m.Recorded
	}
	return nil
}

func (m *AuditEvent) GetOutcome() *AuditEventOutcomeCode {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *AuditEvent) GetOutcomeDesc() *String {
	if m != nil {
		return m.OutcomeDesc
	}
	return nil
}

func (m *AuditEvent) GetPurposeOfEvent() []*CodeableConcept {
	if m != nil {
		return m.PurposeOfEvent
	}
	return nil
}

func (m *AuditEvent) GetAgent() []*AuditEvent_Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *AuditEvent) GetSource() *AuditEvent_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *AuditEvent) GetEntity() []*AuditEvent_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

// Actor involved in the event
type AuditEvent_Agent struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Agent role in the event
	Role []*CodeableConcept `protobuf:"bytes,4,rep,name=role,proto3" json:"role,omitempty"`
	// Direct reference to resource
	Reference *Reference `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	// Unique identifier for the user
	UserId *Identifier `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Alternative User id e.g. authentication
	AltId *String `protobuf:"bytes,7,opt,name=alt_id,json=altId,proto3" json:"alt_id,omitempty"`
	// Human-meaningful name for the agent
	Name *String `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	// Whether user is initiator
	Requestor *Boolean `protobuf:"bytes,9,opt,name=requestor,proto3" json:"requestor,omitempty"`
	// Where
	Location *Reference `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	// Policy that authorized event
	Policy []*Uri `protobuf:"bytes,11,rep,name=policy,proto3" json:"policy,omitempty"`
	// Type of media
	Media   *Coding                   `protobuf:"bytes,12,opt,name=media,proto3" json:"media,omitempty"`
	Network *AuditEvent_Agent_Network `protobuf:"bytes,13,opt,name=network,proto3" json:"network,omitempty"`
	// Reason given for this user
	PurposeOfUse         []*CodeableConcept `protobuf:"bytes,14,rep,name=purpose_of_use,json=purposeOfUse,proto3" json:"purpose_of_use,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AuditEvent_Agent) Reset()         { *m = AuditEvent_Agent{} }
func (m *AuditEvent_Agent) String() string { return proto.CompactTextString(m) }
func (*AuditEvent_Agent) ProtoMessage()    {}
func (*AuditEvent_Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{6, 0}
}

func (m *AuditEvent_Agent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditEvent_Agent.Unmarshal(m, b)
}
func (m *AuditEvent_Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditEvent_Agent.Marshal(b, m, deterministic)
}
func (m *AuditEvent_Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditEvent_Agent.Merge(m, src)
}
func (m *AuditEvent_Agent) XXX_Size() int {
	return xxx_messageInfo_AuditEvent_Agent.Size(m)
}
func (m *AuditEvent_Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditEvent_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_AuditEvent_Agent proto.InternalMessageInfo

func (m *AuditEvent_Agent) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AuditEvent_Agent) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AuditEvent_Agent) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AuditEvent_Agent) GetRole() []*CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *AuditEvent_Agent) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *AuditEvent_Agent) GetUserId() *Identifier {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *AuditEvent_Agent) GetAltId() *String {
	if m != nil {
		return m.AltId
	}
	return nil
}

func (m *AuditEvent_Agent) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AuditEvent_Agent) GetRequestor() *Boolean {
	if m != nil {
		return m.Requestor
	}
	return nil
}

func (m *AuditEvent_Agent) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *AuditEvent_Agent) GetPolicy() []*Uri {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *AuditEvent_Agent) GetMedia() *Coding {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *AuditEvent_Agent) GetNetwork() *AuditEvent_Agent_Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *AuditEvent_Agent) GetPurposeOfUse() []*CodeableConcept {
	if m != nil {
		return m.PurposeOfUse
	}
	return nil
}

// Logical network location for application activity
type AuditEvent_Agent_Network struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifier for the network access point of the user device
	Address *String `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// The type of network access point
	Type                 *AuditEventAgentNetworkTypeCode `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *AuditEvent_Agent_Network) Reset()         { *m = AuditEvent_Agent_Network{} }
func (m *AuditEvent_Agent_Network) String() string { return proto.CompactTextString(m) }
func (*AuditEvent_Agent_Network) ProtoMessage()    {}
func (*AuditEvent_Agent_Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{6, 0, 0}
}

func (m *AuditEvent_Agent_Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditEvent_Agent_Network.Unmarshal(m, b)
}
func (m *AuditEvent_Agent_Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditEvent_Agent_Network.Marshal(b, m, deterministic)
}
func (m *AuditEvent_Agent_Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditEvent_Agent_Network.Merge(m, src)
}
func (m *AuditEvent_Agent_Network) XXX_Size() int {
	return xxx_messageInfo_AuditEvent_Agent_Network.Size(m)
}
func (m *AuditEvent_Agent_Network) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditEvent_Agent_Network.DiscardUnknown(m)
}

var xxx_messageInfo_AuditEvent_Agent_Network proto.InternalMessageInfo

func (m *AuditEvent_Agent_Network) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AuditEvent_Agent_Network) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AuditEvent_Agent_Network) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AuditEvent_Agent_Network) GetAddress() *String {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *AuditEvent_Agent_Network) GetType() *AuditEventAgentNetworkTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

// Audit Event Reporter
type AuditEvent_Source struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical source location within the enterprise
	Site *String `protobuf:"bytes,4,opt,name=site,proto3" json:"site,omitempty"`
	// The identity of source detecting the event
	Identifier *Identifier `protobuf:"bytes,5,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The type of source where event originated
	Type                 []*Coding `protobuf:"bytes,6,rep,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AuditEvent_Source) Reset()         { *m = AuditEvent_Source{} }
func (m *AuditEvent_Source) String() string { return proto.CompactTextString(m) }
func (*AuditEvent_Source) ProtoMessage()    {}
func (*AuditEvent_Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{6, 1}
}

func (m *AuditEvent_Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditEvent_Source.Unmarshal(m, b)
}
func (m *AuditEvent_Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditEvent_Source.Marshal(b, m, deterministic)
}
func (m *AuditEvent_Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditEvent_Source.Merge(m, src)
}
func (m *AuditEvent_Source) XXX_Size() int {
	return xxx_messageInfo_AuditEvent_Source.Size(m)
}
func (m *AuditEvent_Source) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditEvent_Source.DiscardUnknown(m)
}

var xxx_messageInfo_AuditEvent_Source proto.InternalMessageInfo

func (m *AuditEvent_Source) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AuditEvent_Source) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AuditEvent_Source) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AuditEvent_Source) GetSite() *String {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *AuditEvent_Source) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *AuditEvent_Source) GetType() []*Coding {
	if m != nil {
		return m.Type
	}
	return nil
}

// Data or objects used
type AuditEvent_Entity struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Specific instance of object
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Specific instance of resource
	Reference *Reference `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	// Type of entity involved
	Type *Coding `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// What role the entity played
	Role *Coding `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	// Life-cycle stage for the entity
	Lifecycle *Coding `protobuf:"bytes,8,opt,name=lifecycle,proto3" json:"lifecycle,omitempty"`
	// Security labels on the entity
	SecurityLabel []*Coding `protobuf:"bytes,9,rep,name=security_label,json=securityLabel,proto3" json:"security_label,omitempty"`
	// Descriptor for entity
	Name *String `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// Descriptive text
	Description *String `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	// Query parameters
	Query                *Base64Binary               `protobuf:"bytes,12,opt,name=query,proto3" json:"query,omitempty"`
	Detail               []*AuditEvent_Entity_Detail `protobuf:"bytes,13,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AuditEvent_Entity) Reset()         { *m = AuditEvent_Entity{} }
func (m *AuditEvent_Entity) String() string { return proto.CompactTextString(m) }
func (*AuditEvent_Entity) ProtoMessage()    {}
func (*AuditEvent_Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{6, 2}
}

func (m *AuditEvent_Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditEvent_Entity.Unmarshal(m, b)
}
func (m *AuditEvent_Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditEvent_Entity.Marshal(b, m, deterministic)
}
func (m *AuditEvent_Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditEvent_Entity.Merge(m, src)
}
func (m *AuditEvent_Entity) XXX_Size() int {
	return xxx_messageInfo_AuditEvent_Entity.Size(m)
}
func (m *AuditEvent_Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditEvent_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_AuditEvent_Entity proto.InternalMessageInfo

func (m *AuditEvent_Entity) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AuditEvent_Entity) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AuditEvent_Entity) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AuditEvent_Entity) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *AuditEvent_Entity) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *AuditEvent_Entity) GetType() *Coding {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *AuditEvent_Entity) GetRole() *Coding {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *AuditEvent_Entity) GetLifecycle() *Coding {
	if m != nil {
		return m.Lifecycle
	}
	return nil
}

func (m *AuditEvent_Entity) GetSecurityLabel() []*Coding {
	if m != nil {
		return m.SecurityLabel
	}
	return nil
}

func (m *AuditEvent_Entity) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AuditEvent_Entity) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *AuditEvent_Entity) GetQuery() *Base64Binary {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *AuditEvent_Entity) GetDetail() []*AuditEvent_Entity_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Additional Information about the entity
type AuditEvent_Entity_Detail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name of the property
	Type *String `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Property value
	Value                *Base64Binary `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AuditEvent_Entity_Detail) Reset()         { *m = AuditEvent_Entity_Detail{} }
func (m *AuditEvent_Entity_Detail) String() string { return proto.CompactTextString(m) }
func (*AuditEvent_Entity_Detail) ProtoMessage()    {}
func (*AuditEvent_Entity_Detail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{6, 2, 0}
}

func (m *AuditEvent_Entity_Detail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditEvent_Entity_Detail.Unmarshal(m, b)
}
func (m *AuditEvent_Entity_Detail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditEvent_Entity_Detail.Marshal(b, m, deterministic)
}
func (m *AuditEvent_Entity_Detail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditEvent_Entity_Detail.Merge(m, src)
}
func (m *AuditEvent_Entity_Detail) XXX_Size() int {
	return xxx_messageInfo_AuditEvent_Entity_Detail.Size(m)
}
func (m *AuditEvent_Entity_Detail) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditEvent_Entity_Detail.DiscardUnknown(m)
}

var xxx_messageInfo_AuditEvent_Entity_Detail proto.InternalMessageInfo

func (m *AuditEvent_Entity_Detail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AuditEvent_Entity_Detail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *AuditEvent_Entity_Detail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *AuditEvent_Entity_Detail) GetType() *String {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *AuditEvent_Entity_Detail) GetValue() *Base64Binary {
	if m != nil {
		return m.Value
	}
	return nil
}

// Auto-generated from StructureDefinition for Basic, last updated
// 2017-04-19T07:44:43.294+10:00. Resource for non-supported content. See
// http://hl7.org/fhir/StructureDefinition/Basic
type Basic struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Kind of Resource
	Code *CodeableConcept `protobuf:"bytes,10,opt,name=code,proto3" json:"code,omitempty"`
	// Identifies the focus of this resource
	Subject *Reference `protobuf:"bytes,11,opt,name=subject,proto3" json:"subject,omitempty"`
	// When created
	Created *Date `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	// Who created
	Author               *Reference `protobuf:"bytes,13,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Basic) Reset()         { *m = Basic{} }
func (m *Basic) String() string { return proto.CompactTextString(m) }
func (*Basic) ProtoMessage()    {}
func (*Basic) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{7}
}

func (m *Basic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Basic.Unmarshal(m, b)
}
func (m *Basic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Basic.Marshal(b, m, deterministic)
}
func (m *Basic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Basic.Merge(m, src)
}
func (m *Basic) XXX_Size() int {
	return xxx_messageInfo_Basic.Size(m)
}
func (m *Basic) XXX_DiscardUnknown() {
	xxx_messageInfo_Basic.DiscardUnknown(m)
}

var xxx_messageInfo_Basic proto.InternalMessageInfo

func (m *Basic) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Basic) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Basic) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Basic) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Basic) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Basic) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Basic) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Basic) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Basic) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Basic) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Basic) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Basic) GetCreated() *Date {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Basic) GetAuthor() *Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

// Auto-generated from StructureDefinition for Binary, last updated
// 2017-04-19T07:44:43.294+10:00. Pure binary content defined by a format other
// than FHIR. See http://hl7.org/fhir/StructureDefinition/Binary
type Binary struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// MimeType of the binary content
	ContentType *MimeTypeCode `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Access Control Management
	SecurityContext *Reference `protobuf:"bytes,6,opt,name=security_context,json=securityContext,proto3" json:"security_context,omitempty"`
	// The actual content
	Content              *Base64Binary `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Binary) Reset()         { *m = Binary{} }
func (m *Binary) String() string { return proto.CompactTextString(m) }
func (*Binary) ProtoMessage()    {}
func (*Binary) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{8}
}

func (m *Binary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Binary.Unmarshal(m, b)
}
func (m *Binary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Binary.Marshal(b, m, deterministic)
}
func (m *Binary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Binary.Merge(m, src)
}
func (m *Binary) XXX_Size() int {
	return xxx_messageInfo_Binary.Size(m)
}
func (m *Binary) XXX_DiscardUnknown() {
	xxx_messageInfo_Binary.DiscardUnknown(m)
}

var xxx_messageInfo_Binary proto.InternalMessageInfo

func (m *Binary) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Binary) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Binary) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Binary) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Binary) GetContentType() *MimeTypeCode {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *Binary) GetSecurityContext() *Reference {
	if m != nil {
		return m.SecurityContext
	}
	return nil
}

func (m *Binary) GetContent() *Base64Binary {
	if m != nil {
		return m.Content
	}
	return nil
}

// Auto-generated from StructureDefinition for BodySite, last updated
// 2017-04-19T07:44:43.294+10:00. Specific and identified anatomical location.
// See http://hl7.org/fhir/StructureDefinition/BodySite
type BodySite struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Bodysite identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this body site record is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// Named anatomical location
	Code *CodeableConcept `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// Modification to location code
	Qualifier []*CodeableConcept `protobuf:"bytes,12,rep,name=qualifier,proto3" json:"qualifier,omitempty"`
	// Anatomical location description
	Description *String `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// Attached images
	Image []*Attachment `protobuf:"bytes,14,rep,name=image,proto3" json:"image,omitempty"`
	// Who this is about
	Patient              *Reference `protobuf:"bytes,15,opt,name=patient,proto3" json:"patient,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BodySite) Reset()         { *m = BodySite{} }
func (m *BodySite) String() string { return proto.CompactTextString(m) }
func (*BodySite) ProtoMessage()    {}
func (*BodySite) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{9}
}

func (m *BodySite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BodySite.Unmarshal(m, b)
}
func (m *BodySite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BodySite.Marshal(b, m, deterministic)
}
func (m *BodySite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BodySite.Merge(m, src)
}
func (m *BodySite) XXX_Size() int {
	return xxx_messageInfo_BodySite.Size(m)
}
func (m *BodySite) XXX_DiscardUnknown() {
	xxx_messageInfo_BodySite.DiscardUnknown(m)
}

var xxx_messageInfo_BodySite proto.InternalMessageInfo

func (m *BodySite) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *BodySite) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *BodySite) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *BodySite) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *BodySite) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *BodySite) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *BodySite) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *BodySite) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *BodySite) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *BodySite) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *BodySite) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *BodySite) GetQualifier() []*CodeableConcept {
	if m != nil {
		return m.Qualifier
	}
	return nil
}

func (m *BodySite) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *BodySite) GetImage() []*Attachment {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *BodySite) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

// Auto-generated from StructureDefinition for Bundle, last updated
// 2017-04-19T07:44:43.294+10:00. Contains a collection of resources. See
// http://hl7.org/fhir/StructureDefinition/Bundle
type Bundle struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Persistent identifier for the bundle
	Identifier *Identifier `protobuf:"bytes,5,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// document | message | transaction | transaction-response | batch |
	// batch-response | history | searchset | collection
	Type *BundleTypeCode `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// If search, the total number of matches
	Total *UnsignedInt    `protobuf:"bytes,7,opt,name=total,proto3" json:"total,omitempty"`
	Link  []*Bundle_Link  `protobuf:"bytes,8,rep,name=link,proto3" json:"link,omitempty"`
	Entry []*Bundle_Entry `protobuf:"bytes,9,rep,name=entry,proto3" json:"entry,omitempty"`
	// Digital Signature
	Signature            *Signature `protobuf:"bytes,10,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bundle) Reset()         { *m = Bundle{} }
func (m *Bundle) String() string { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()    {}
func (*Bundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{10}
}

func (m *Bundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle.Unmarshal(m, b)
}
func (m *Bundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle.Marshal(b, m, deterministic)
}
func (m *Bundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle.Merge(m, src)
}
func (m *Bundle) XXX_Size() int {
	return xxx_messageInfo_Bundle.Size(m)
}
func (m *Bundle) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle proto.InternalMessageInfo

func (m *Bundle) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bundle) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Bundle) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Bundle) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Bundle) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Bundle) GetType() *BundleTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bundle) GetTotal() *UnsignedInt {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *Bundle) GetLink() []*Bundle_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Bundle) GetEntry() []*Bundle_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *Bundle) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Links related to this Bundle
type Bundle_Link struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// See
	// http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1
	Relation *String `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`
	// Reference details for the link
	Url                  *Uri     `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bundle_Link) Reset()         { *m = Bundle_Link{} }
func (m *Bundle_Link) String() string { return proto.CompactTextString(m) }
func (*Bundle_Link) ProtoMessage()    {}
func (*Bundle_Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{10, 0}
}

func (m *Bundle_Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle_Link.Unmarshal(m, b)
}
func (m *Bundle_Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle_Link.Marshal(b, m, deterministic)
}
func (m *Bundle_Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle_Link.Merge(m, src)
}
func (m *Bundle_Link) XXX_Size() int {
	return xxx_messageInfo_Bundle_Link.Size(m)
}
func (m *Bundle_Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle_Link proto.InternalMessageInfo

func (m *Bundle_Link) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bundle_Link) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bundle_Link) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bundle_Link) GetRelation() *String {
	if m != nil {
		return m.Relation
	}
	return nil
}

func (m *Bundle_Link) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

// Entry in the bundle - will have a resource, or information
type Bundle_Entry struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Links related to this entry
	Link []*Bundle_Link `protobuf:"bytes,4,rep,name=link,proto3" json:"link,omitempty"`
	// Absolute URL for resource (server address, or UUID/OID)
	FullUrl *Uri `protobuf:"bytes,5,opt,name=full_url,json=fullUrl,proto3" json:"full_url,omitempty"`
	// A resource in the bundle
	Resource             *ContainedResource     `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	Search               *Bundle_Entry_Search   `protobuf:"bytes,7,opt,name=search,proto3" json:"search,omitempty"`
	Request              *Bundle_Entry_Request  `protobuf:"bytes,8,opt,name=request,proto3" json:"request,omitempty"`
	Response             *Bundle_Entry_Response `protobuf:"bytes,9,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bundle_Entry) Reset()         { *m = Bundle_Entry{} }
func (m *Bundle_Entry) String() string { return proto.CompactTextString(m) }
func (*Bundle_Entry) ProtoMessage()    {}
func (*Bundle_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{10, 1}
}

func (m *Bundle_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle_Entry.Unmarshal(m, b)
}
func (m *Bundle_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle_Entry.Marshal(b, m, deterministic)
}
func (m *Bundle_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle_Entry.Merge(m, src)
}
func (m *Bundle_Entry) XXX_Size() int {
	return xxx_messageInfo_Bundle_Entry.Size(m)
}
func (m *Bundle_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle_Entry proto.InternalMessageInfo

func (m *Bundle_Entry) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bundle_Entry) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bundle_Entry) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bundle_Entry) GetLink() []*Bundle_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Bundle_Entry) GetFullUrl() *Uri {
	if m != nil {
		return m.FullUrl
	}
	return nil
}

func (m *Bundle_Entry) GetResource() *ContainedResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *Bundle_Entry) GetSearch() *Bundle_Entry_Search {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *Bundle_Entry) GetRequest() *Bundle_Entry_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Bundle_Entry) GetResponse() *Bundle_Entry_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

// Search related information
type Bundle_Entry_Search struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// match | include | outcome - why this is in the result set
	Mode *SearchEntryModeCode `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	// Search ranking (between 0 and 1)
	Score                *Decimal `protobuf:"bytes,5,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bundle_Entry_Search) Reset()         { *m = Bundle_Entry_Search{} }
func (m *Bundle_Entry_Search) String() string { return proto.CompactTextString(m) }
func (*Bundle_Entry_Search) ProtoMessage()    {}
func (*Bundle_Entry_Search) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{10, 1, 0}
}

func (m *Bundle_Entry_Search) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle_Entry_Search.Unmarshal(m, b)
}
func (m *Bundle_Entry_Search) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle_Entry_Search.Marshal(b, m, deterministic)
}
func (m *Bundle_Entry_Search) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle_Entry_Search.Merge(m, src)
}
func (m *Bundle_Entry_Search) XXX_Size() int {
	return xxx_messageInfo_Bundle_Entry_Search.Size(m)
}
func (m *Bundle_Entry_Search) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle_Entry_Search.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle_Entry_Search proto.InternalMessageInfo

func (m *Bundle_Entry_Search) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bundle_Entry_Search) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bundle_Entry_Search) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bundle_Entry_Search) GetMode() *SearchEntryModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *Bundle_Entry_Search) GetScore() *Decimal {
	if m != nil {
		return m.Score
	}
	return nil
}

// Transaction Related Information
type Bundle_Entry_Request struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// GET | POST | PUT | DELETE
	Method *HTTPVerbCode `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	// URL for HTTP equivalent of this entry
	Url *Uri `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// For managing cache currency
	IfNoneMatch *String `protobuf:"bytes,6,opt,name=if_none_match,json=ifNoneMatch,proto3" json:"if_none_match,omitempty"`
	// For managing update contention
	IfModifiedSince *Instant `protobuf:"bytes,7,opt,name=if_modified_since,json=ifModifiedSince,proto3" json:"if_modified_since,omitempty"`
	// For managing update contention
	IfMatch *String `protobuf:"bytes,8,opt,name=if_match,json=ifMatch,proto3" json:"if_match,omitempty"`
	// For conditional creates
	IfNoneExist          *String  `protobuf:"bytes,9,opt,name=if_none_exist,json=ifNoneExist,proto3" json:"if_none_exist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bundle_Entry_Request) Reset()         { *m = Bundle_Entry_Request{} }
func (m *Bundle_Entry_Request) String() string { return proto.CompactTextString(m) }
func (*Bundle_Entry_Request) ProtoMessage()    {}
func (*Bundle_Entry_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{10, 1, 1}
}

func (m *Bundle_Entry_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle_Entry_Request.Unmarshal(m, b)
}
func (m *Bundle_Entry_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle_Entry_Request.Marshal(b, m, deterministic)
}
func (m *Bundle_Entry_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle_Entry_Request.Merge(m, src)
}
func (m *Bundle_Entry_Request) XXX_Size() int {
	return xxx_messageInfo_Bundle_Entry_Request.Size(m)
}
func (m *Bundle_Entry_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle_Entry_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle_Entry_Request proto.InternalMessageInfo

func (m *Bundle_Entry_Request) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bundle_Entry_Request) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bundle_Entry_Request) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bundle_Entry_Request) GetMethod() *HTTPVerbCode {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Bundle_Entry_Request) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Bundle_Entry_Request) GetIfNoneMatch() *String {
	if m != nil {
		return m.IfNoneMatch
	}
	return nil
}

func (m *Bundle_Entry_Request) GetIfModifiedSince() *Instant {
	if m != nil {
		return m.IfModifiedSince
	}
	return nil
}

func (m *Bundle_Entry_Request) GetIfMatch() *String {
	if m != nil {
		return m.IfMatch
	}
	return nil
}

func (m *Bundle_Entry_Request) GetIfNoneExist() *String {
	if m != nil {
		return m.IfNoneExist
	}
	return nil
}

// Transaction Related Information
type Bundle_Entry_Response struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Status response code (text optional)
	Status *String `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// The location, if the operation returns a location
	Location *Uri `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// The etag for the resource (if relevant)
	Etag *String `protobuf:"bytes,6,opt,name=etag,proto3" json:"etag,omitempty"`
	// Server's date time modified
	LastModified *Instant `protobuf:"bytes,7,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	// OperationOutcome with hints and warnings (for batch/transaction)
	Outcome              *ContainedResource `protobuf:"bytes,8,opt,name=outcome,proto3" json:"outcome,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Bundle_Entry_Response) Reset()         { *m = Bundle_Entry_Response{} }
func (m *Bundle_Entry_Response) String() string { return proto.CompactTextString(m) }
func (*Bundle_Entry_Response) ProtoMessage()    {}
func (*Bundle_Entry_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{10, 1, 2}
}

func (m *Bundle_Entry_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle_Entry_Response.Unmarshal(m, b)
}
func (m *Bundle_Entry_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle_Entry_Response.Marshal(b, m, deterministic)
}
func (m *Bundle_Entry_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle_Entry_Response.Merge(m, src)
}
func (m *Bundle_Entry_Response) XXX_Size() int {
	return xxx_messageInfo_Bundle_Entry_Response.Size(m)
}
func (m *Bundle_Entry_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle_Entry_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle_Entry_Response proto.InternalMessageInfo

func (m *Bundle_Entry_Response) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bundle_Entry_Response) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bundle_Entry_Response) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bundle_Entry_Response) GetStatus() *String {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Bundle_Entry_Response) GetLocation() *Uri {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Bundle_Entry_Response) GetEtag() *String {
	if m != nil {
		return m.Etag
	}
	return nil
}

func (m *Bundle_Entry_Response) GetLastModified() *Instant {
	if m != nil {
		return m.LastModified
	}
	return nil
}

func (m *Bundle_Entry_Response) GetOutcome() *ContainedResource {
	if m != nil {
		return m.Outcome
	}
	return nil
}

// Auto-generated from StructureDefinition for CapabilityStatement, last updated
// 2017-04-19T07:44:43.294+10:00. A statement of system capabilities. See
// http://hl7.org/fhir/StructureDefinition/CapabilityStatement
type CapabilityStatement struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this capability statement (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Business version of the capability statement
	Version *String `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this capability statement (computer friendly)
	Name *String `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this capability statement (human friendly)
	Title *String `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,14,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,16,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,17,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the capability statement
	Description *Markdown `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,19,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for capability statement (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,20,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this capability statement is defined
	Purpose *Markdown `protobuf:"bytes,21,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,22,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// instance | capability | requirements
	Kind *CapabilityStatementKindCode `protobuf:"bytes,23,opt,name=kind,proto3" json:"kind,omitempty"`
	// Canonical URL of another capability statement this implements
	Instantiates   []*Uri                              `protobuf:"bytes,24,rep,name=instantiates,proto3" json:"instantiates,omitempty"`
	Software       *CapabilityStatement_Software       `protobuf:"bytes,25,opt,name=software,proto3" json:"software,omitempty"`
	Implementation *CapabilityStatement_Implementation `protobuf:"bytes,26,opt,name=implementation,proto3" json:"implementation,omitempty"`
	// FHIR Version the system uses
	FhirVersion *Id `protobuf:"bytes,27,opt,name=fhir_version,json=fhirVersion,proto3" json:"fhir_version,omitempty"`
	// no | extensions | elements | both
	AcceptUnknown *UnknownContentCodeCode `protobuf:"bytes,28,opt,name=accept_unknown,json=acceptUnknown,proto3" json:"accept_unknown,omitempty"`
	// formats supported (xml | json | ttl | mime type)
	Format []*MimeTypeCode `protobuf:"bytes,29,rep,name=format,proto3" json:"format,omitempty"`
	// Patch formats supported
	PatchFormat []*MimeTypeCode `protobuf:"bytes,30,rep,name=patch_format,json=patchFormat,proto3" json:"patch_format,omitempty"`
	// Implementation guides supported
	ImplementationGuide []*Uri `protobuf:"bytes,31,rep,name=implementation_guide,json=implementationGuide,proto3" json:"implementation_guide,omitempty"`
	// Profiles for use cases supported
	Profile              []*Reference                     `protobuf:"bytes,32,rep,name=profile,proto3" json:"profile,omitempty"`
	Rest                 []*CapabilityStatement_Rest      `protobuf:"bytes,33,rep,name=rest,proto3" json:"rest,omitempty"`
	Messaging            []*CapabilityStatement_Messaging `protobuf:"bytes,34,rep,name=messaging,proto3" json:"messaging,omitempty"`
	Document             []*CapabilityStatement_Document  `protobuf:"bytes,35,rep,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CapabilityStatement) Reset()         { *m = CapabilityStatement{} }
func (m *CapabilityStatement) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement) ProtoMessage()    {}
func (*CapabilityStatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11}
}

func (m *CapabilityStatement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement.Unmarshal(m, b)
}
func (m *CapabilityStatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement.Merge(m, src)
}
func (m *CapabilityStatement) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement.Size(m)
}
func (m *CapabilityStatement) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement proto.InternalMessageInfo

func (m *CapabilityStatement) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CapabilityStatement) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *CapabilityStatement) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *CapabilityStatement) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *CapabilityStatement) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *CapabilityStatement) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *CapabilityStatement) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *CapabilityStatement) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CapabilityStatement) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CapabilityStatement) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CapabilityStatement) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *CapabilityStatement) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CapabilityStatement) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *CapabilityStatement) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *CapabilityStatement) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CapabilityStatement) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *CapabilityStatement) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *CapabilityStatement) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *CapabilityStatement) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *CapabilityStatement) GetKind() *CapabilityStatementKindCode {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *CapabilityStatement) GetInstantiates() []*Uri {
	if m != nil {
		return m.Instantiates
	}
	return nil
}

func (m *CapabilityStatement) GetSoftware() *CapabilityStatement_Software {
	if m != nil {
		return m.Software
	}
	return nil
}

func (m *CapabilityStatement) GetImplementation() *CapabilityStatement_Implementation {
	if m != nil {
		return m.Implementation
	}
	return nil
}

func (m *CapabilityStatement) GetFhirVersion() *Id {
	if m != nil {
		return m.FhirVersion
	}
	return nil
}

func (m *CapabilityStatement) GetAcceptUnknown() *UnknownContentCodeCode {
	if m != nil {
		return m.AcceptUnknown
	}
	return nil
}

func (m *CapabilityStatement) GetFormat() []*MimeTypeCode {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *CapabilityStatement) GetPatchFormat() []*MimeTypeCode {
	if m != nil {
		return m.PatchFormat
	}
	return nil
}

func (m *CapabilityStatement) GetImplementationGuide() []*Uri {
	if m != nil {
		return m.ImplementationGuide
	}
	return nil
}

func (m *CapabilityStatement) GetProfile() []*Reference {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *CapabilityStatement) GetRest() []*CapabilityStatement_Rest {
	if m != nil {
		return m.Rest
	}
	return nil
}

func (m *CapabilityStatement) GetMessaging() []*CapabilityStatement_Messaging {
	if m != nil {
		return m.Messaging
	}
	return nil
}

func (m *CapabilityStatement) GetDocument() []*CapabilityStatement_Document {
	if m != nil {
		return m.Document
	}
	return nil
}

// Software that is covered by this capability statement
type CapabilityStatement_Software struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A name the software is known by
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Version covered by this statement
	Version *String `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	// Date this version released
	ReleaseDate          *DateTime `protobuf:"bytes,6,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CapabilityStatement_Software) Reset()         { *m = CapabilityStatement_Software{} }
func (m *CapabilityStatement_Software) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Software) ProtoMessage()    {}
func (*CapabilityStatement_Software) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 0}
}

func (m *CapabilityStatement_Software) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Software.Unmarshal(m, b)
}
func (m *CapabilityStatement_Software) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Software.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Software) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Software.Merge(m, src)
}
func (m *CapabilityStatement_Software) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Software.Size(m)
}
func (m *CapabilityStatement_Software) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Software.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Software proto.InternalMessageInfo

func (m *CapabilityStatement_Software) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Software) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Software) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Software) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CapabilityStatement_Software) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *CapabilityStatement_Software) GetReleaseDate() *DateTime {
	if m != nil {
		return m.ReleaseDate
	}
	return nil
}

// If this describes a specific instance
type CapabilityStatement_Implementation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Describes this specific instance
	Description *String `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Base URL for the installation
	Url                  *Uri     `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapabilityStatement_Implementation) Reset()         { *m = CapabilityStatement_Implementation{} }
func (m *CapabilityStatement_Implementation) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Implementation) ProtoMessage()    {}
func (*CapabilityStatement_Implementation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 1}
}

func (m *CapabilityStatement_Implementation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Implementation.Unmarshal(m, b)
}
func (m *CapabilityStatement_Implementation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Implementation.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Implementation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Implementation.Merge(m, src)
}
func (m *CapabilityStatement_Implementation) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Implementation.Size(m)
}
func (m *CapabilityStatement_Implementation) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Implementation.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Implementation proto.InternalMessageInfo

func (m *CapabilityStatement_Implementation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Implementation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Implementation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Implementation) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CapabilityStatement_Implementation) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

// If the endpoint is a RESTful one
type CapabilityStatement_Rest struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// client | server
	Mode *RestfulCapabilityModeCode `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	// General description of implementation
	Documentation *String                                       `protobuf:"bytes,5,opt,name=documentation,proto3" json:"documentation,omitempty"`
	Security      *CapabilityStatement_Rest_Security            `protobuf:"bytes,6,opt,name=security,proto3" json:"security,omitempty"`
	Resource      []*CapabilityStatement_Rest_Resource          `protobuf:"bytes,7,rep,name=resource,proto3" json:"resource,omitempty"`
	Interaction   []*CapabilityStatement_Rest_SystemInteraction `protobuf:"bytes,8,rep,name=interaction,proto3" json:"interaction,omitempty"`
	// Search parameters for searching all resources
	SearchParam []*CapabilityStatement_Rest_Resource_SearchParam `protobuf:"bytes,9,rep,name=search_param,json=searchParam,proto3" json:"search_param,omitempty"`
	Operation   []*CapabilityStatement_Rest_Operation            `protobuf:"bytes,10,rep,name=operation,proto3" json:"operation,omitempty"`
	// Compartments served/used by system
	Compartment          []*Uri   `protobuf:"bytes,11,rep,name=compartment,proto3" json:"compartment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapabilityStatement_Rest) Reset()         { *m = CapabilityStatement_Rest{} }
func (m *CapabilityStatement_Rest) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Rest) ProtoMessage()    {}
func (*CapabilityStatement_Rest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 2}
}

func (m *CapabilityStatement_Rest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Rest.Unmarshal(m, b)
}
func (m *CapabilityStatement_Rest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Rest.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Rest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Rest.Merge(m, src)
}
func (m *CapabilityStatement_Rest) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Rest.Size(m)
}
func (m *CapabilityStatement_Rest) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Rest.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Rest proto.InternalMessageInfo

func (m *CapabilityStatement_Rest) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetMode() *RestfulCapabilityModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetSecurity() *CapabilityStatement_Rest_Security {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetResource() []*CapabilityStatement_Rest_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetInteraction() []*CapabilityStatement_Rest_SystemInteraction {
	if m != nil {
		return m.Interaction
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetSearchParam() []*CapabilityStatement_Rest_Resource_SearchParam {
	if m != nil {
		return m.SearchParam
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetOperation() []*CapabilityStatement_Rest_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *CapabilityStatement_Rest) GetCompartment() []*Uri {
	if m != nil {
		return m.Compartment
	}
	return nil
}

// Information about security of implementation
type CapabilityStatement_Rest_Security struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Adds CORS Headers (http://enable-cors.org/)
	Cors *Boolean `protobuf:"bytes,4,opt,name=cors,proto3" json:"cors,omitempty"`
	// OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates
	Service []*CodeableConcept `protobuf:"bytes,5,rep,name=service,proto3" json:"service,omitempty"`
	// General description of how security works
	Description          *String                                          `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Certificate          []*CapabilityStatement_Rest_Security_Certificate `protobuf:"bytes,7,rep,name=certificate,proto3" json:"certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *CapabilityStatement_Rest_Security) Reset()         { *m = CapabilityStatement_Rest_Security{} }
func (m *CapabilityStatement_Rest_Security) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Rest_Security) ProtoMessage()    {}
func (*CapabilityStatement_Rest_Security) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 2, 0}
}

func (m *CapabilityStatement_Rest_Security) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Rest_Security.Unmarshal(m, b)
}
func (m *CapabilityStatement_Rest_Security) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Rest_Security.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Rest_Security) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Rest_Security.Merge(m, src)
}
func (m *CapabilityStatement_Rest_Security) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Rest_Security.Size(m)
}
func (m *CapabilityStatement_Rest_Security) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Rest_Security.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Rest_Security proto.InternalMessageInfo

func (m *CapabilityStatement_Rest_Security) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security) GetCors() *Boolean {
	if m != nil {
		return m.Cors
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security) GetService() []*CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security) GetCertificate() []*CapabilityStatement_Rest_Security_Certificate {
	if m != nil {
		return m.Certificate
	}
	return nil
}

// Certificates associated with security profiles
type CapabilityStatement_Rest_Security_Certificate struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Mime type for certificates
	Type *MimeTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Actual certificate
	Blob                 *Base64Binary `protobuf:"bytes,5,opt,name=blob,proto3" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CapabilityStatement_Rest_Security_Certificate) Reset() {
	*m = CapabilityStatement_Rest_Security_Certificate{}
}
func (m *CapabilityStatement_Rest_Security_Certificate) String() string {
	return proto.CompactTextString(m)
}
func (*CapabilityStatement_Rest_Security_Certificate) ProtoMessage() {}
func (*CapabilityStatement_Rest_Security_Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 2, 0, 0}
}

func (m *CapabilityStatement_Rest_Security_Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Rest_Security_Certificate.Unmarshal(m, b)
}
func (m *CapabilityStatement_Rest_Security_Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Rest_Security_Certificate.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Rest_Security_Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Rest_Security_Certificate.Merge(m, src)
}
func (m *CapabilityStatement_Rest_Security_Certificate) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Rest_Security_Certificate.Size(m)
}
func (m *CapabilityStatement_Rest_Security_Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Rest_Security_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Rest_Security_Certificate proto.InternalMessageInfo

func (m *CapabilityStatement_Rest_Security_Certificate) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security_Certificate) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security_Certificate) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security_Certificate) GetType() *MimeTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CapabilityStatement_Rest_Security_Certificate) GetBlob() *Base64Binary {
	if m != nil {
		return m.Blob
	}
	return nil
}

// Resource served on the REST interface
type CapabilityStatement_Rest_Resource struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A resource type that is supported
	Type *ResourceTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Base System profile for all uses of resource
	Profile *Reference `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	// Additional information about the use of the resource type
	Documentation *Markdown                                                `protobuf:"bytes,6,opt,name=documentation,proto3" json:"documentation,omitempty"`
	Interaction   []*CapabilityStatement_Rest_Resource_ResourceInteraction `protobuf:"bytes,7,rep,name=interaction,proto3" json:"interaction,omitempty"`
	// no-version | versioned | versioned-update
	Versioning *ResourceVersionPolicyCode `protobuf:"bytes,8,opt,name=versioning,proto3" json:"versioning,omitempty"`
	// Whether vRead can return past versions
	ReadHistory *Boolean `protobuf:"bytes,9,opt,name=read_history,json=readHistory,proto3" json:"read_history,omitempty"`
	// If update can commit to a new identity
	UpdateCreate *Boolean `protobuf:"bytes,10,opt,name=update_create,json=updateCreate,proto3" json:"update_create,omitempty"`
	// If allows/uses conditional create
	ConditionalCreate *Boolean `protobuf:"bytes,11,opt,name=conditional_create,json=conditionalCreate,proto3" json:"conditional_create,omitempty"`
	// not-supported | modified-since | not-match | full-support
	ConditionalRead *ConditionalReadStatusCode `protobuf:"bytes,12,opt,name=conditional_read,json=conditionalRead,proto3" json:"conditional_read,omitempty"`
	// If allows/uses conditional update
	ConditionalUpdate *Boolean `protobuf:"bytes,13,opt,name=conditional_update,json=conditionalUpdate,proto3" json:"conditional_update,omitempty"`
	// not-supported | single | multiple - how conditional delete is supported
	ConditionalDelete *ConditionalDeleteStatusCode `protobuf:"bytes,14,opt,name=conditional_delete,json=conditionalDelete,proto3" json:"conditional_delete,omitempty"`
	// literal | logical | resolves | enforced | local
	ReferencePolicy []*ReferenceHandlingPolicyCode `protobuf:"bytes,15,rep,name=reference_policy,json=referencePolicy,proto3" json:"reference_policy,omitempty"`
	// _include values supported by the server
	SearchInclude []*String `protobuf:"bytes,16,rep,name=search_include,json=searchInclude,proto3" json:"search_include,omitempty"`
	// _revinclude values supported by the server
	SearchRevInclude     []*String                                        `protobuf:"bytes,17,rep,name=search_rev_include,json=searchRevInclude,proto3" json:"search_rev_include,omitempty"`
	SearchParam          []*CapabilityStatement_Rest_Resource_SearchParam `protobuf:"bytes,18,rep,name=search_param,json=searchParam,proto3" json:"search_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *CapabilityStatement_Rest_Resource) Reset()         { *m = CapabilityStatement_Rest_Resource{} }
func (m *CapabilityStatement_Rest_Resource) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Rest_Resource) ProtoMessage()    {}
func (*CapabilityStatement_Rest_Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 2, 1}
}

func (m *CapabilityStatement_Rest_Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Rest_Resource.Unmarshal(m, b)
}
func (m *CapabilityStatement_Rest_Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Rest_Resource.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Rest_Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Rest_Resource.Merge(m, src)
}
func (m *CapabilityStatement_Rest_Resource) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Rest_Resource.Size(m)
}
func (m *CapabilityStatement_Rest_Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Rest_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Rest_Resource proto.InternalMessageInfo

func (m *CapabilityStatement_Rest_Resource) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetType() *ResourceTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetProfile() *Reference {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetDocumentation() *Markdown {
	if m != nil {
		return m.Documentation
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetInteraction() []*CapabilityStatement_Rest_Resource_ResourceInteraction {
	if m != nil {
		return m.Interaction
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetVersioning() *ResourceVersionPolicyCode {
	if m != nil {
		return m.Versioning
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetReadHistory() *Boolean {
	if m != nil {
		return m.ReadHistory
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetUpdateCreate() *Boolean {
	if m != nil {
		return m.UpdateCreate
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetConditionalCreate() *Boolean {
	if m != nil {
		return m.ConditionalCreate
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetConditionalRead() *ConditionalReadStatusCode {
	if m != nil {
		return m.ConditionalRead
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetConditionalUpdate() *Boolean {
	if m != nil {
		return m.ConditionalUpdate
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetConditionalDelete() *ConditionalDeleteStatusCode {
	if m != nil {
		return m.ConditionalDelete
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetReferencePolicy() []*ReferenceHandlingPolicyCode {
	if m != nil {
		return m.ReferencePolicy
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetSearchInclude() []*String {
	if m != nil {
		return m.SearchInclude
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetSearchRevInclude() []*String {
	if m != nil {
		return m.SearchRevInclude
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource) GetSearchParam() []*CapabilityStatement_Rest_Resource_SearchParam {
	if m != nil {
		return m.SearchParam
	}
	return nil
}

// What operations are supported?
type CapabilityStatement_Rest_Resource_ResourceInteraction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// read | vread | update | patch | delete | history-instance |
	// history-type | create | search-type
	Code *TypeRestfulInteractionCode `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Anything special about operation behavior
	Documentation        *String  `protobuf:"bytes,5,opt,name=documentation,proto3" json:"documentation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) Reset() {
	*m = CapabilityStatement_Rest_Resource_ResourceInteraction{}
}
func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) String() string {
	return proto.CompactTextString(m)
}
func (*CapabilityStatement_Rest_Resource_ResourceInteraction) ProtoMessage() {}
func (*CapabilityStatement_Rest_Resource_ResourceInteraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 2, 1, 0}
}

func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Rest_Resource_ResourceInteraction.Unmarshal(m, b)
}
func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Rest_Resource_ResourceInteraction.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Rest_Resource_ResourceInteraction.Merge(m, src)
}
func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Rest_Resource_ResourceInteraction.Size(m)
}
func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Rest_Resource_ResourceInteraction.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Rest_Resource_ResourceInteraction proto.InternalMessageInfo

func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) GetCode() *TypeRestfulInteractionCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_ResourceInteraction) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

// Search parameters supported by implementation
type CapabilityStatement_Rest_Resource_SearchParam struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name of search parameter
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Source of definition for parameter
	Definition *Uri `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	// number | date | string | token | reference | composite | quantity |
	// uri
	Type *SearchParamTypeCode `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Server-specific usage
	Documentation        *String  `protobuf:"bytes,7,opt,name=documentation,proto3" json:"documentation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapabilityStatement_Rest_Resource_SearchParam) Reset() {
	*m = CapabilityStatement_Rest_Resource_SearchParam{}
}
func (m *CapabilityStatement_Rest_Resource_SearchParam) String() string {
	return proto.CompactTextString(m)
}
func (*CapabilityStatement_Rest_Resource_SearchParam) ProtoMessage() {}
func (*CapabilityStatement_Rest_Resource_SearchParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 2, 1, 1}
}

func (m *CapabilityStatement_Rest_Resource_SearchParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Rest_Resource_SearchParam.Unmarshal(m, b)
}
func (m *CapabilityStatement_Rest_Resource_SearchParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Rest_Resource_SearchParam.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Rest_Resource_SearchParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Rest_Resource_SearchParam.Merge(m, src)
}
func (m *CapabilityStatement_Rest_Resource_SearchParam) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Rest_Resource_SearchParam.Size(m)
}
func (m *CapabilityStatement_Rest_Resource_SearchParam) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Rest_Resource_SearchParam.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Rest_Resource_SearchParam proto.InternalMessageInfo

func (m *CapabilityStatement_Rest_Resource_SearchParam) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_SearchParam) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_SearchParam) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_SearchParam) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_SearchParam) GetDefinition() *Uri {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_SearchParam) GetType() *SearchParamTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CapabilityStatement_Rest_Resource_SearchParam) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

// What operations are supported?
type CapabilityStatement_Rest_SystemInteraction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// transaction | batch | search-system | history-system
	Code *SystemRestfulInteractionCode `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Anything special about operation behavior
	Documentation        *String  `protobuf:"bytes,5,opt,name=documentation,proto3" json:"documentation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapabilityStatement_Rest_SystemInteraction) Reset() {
	*m = CapabilityStatement_Rest_SystemInteraction{}
}
func (m *CapabilityStatement_Rest_SystemInteraction) String() string {
	return proto.CompactTextString(m)
}
func (*CapabilityStatement_Rest_SystemInteraction) ProtoMessage() {}
func (*CapabilityStatement_Rest_SystemInteraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 2, 2}
}

func (m *CapabilityStatement_Rest_SystemInteraction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Rest_SystemInteraction.Unmarshal(m, b)
}
func (m *CapabilityStatement_Rest_SystemInteraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Rest_SystemInteraction.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Rest_SystemInteraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Rest_SystemInteraction.Merge(m, src)
}
func (m *CapabilityStatement_Rest_SystemInteraction) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Rest_SystemInteraction.Size(m)
}
func (m *CapabilityStatement_Rest_SystemInteraction) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Rest_SystemInteraction.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Rest_SystemInteraction proto.InternalMessageInfo

func (m *CapabilityStatement_Rest_SystemInteraction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Rest_SystemInteraction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Rest_SystemInteraction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Rest_SystemInteraction) GetCode() *SystemRestfulInteractionCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CapabilityStatement_Rest_SystemInteraction) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

// Definition of an operation or a custom query
type CapabilityStatement_Rest_Operation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name by which the operation/query is invoked
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The defined operation/query
	Definition           *Reference `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CapabilityStatement_Rest_Operation) Reset()         { *m = CapabilityStatement_Rest_Operation{} }
func (m *CapabilityStatement_Rest_Operation) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Rest_Operation) ProtoMessage()    {}
func (*CapabilityStatement_Rest_Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 2, 3}
}

func (m *CapabilityStatement_Rest_Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Rest_Operation.Unmarshal(m, b)
}
func (m *CapabilityStatement_Rest_Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Rest_Operation.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Rest_Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Rest_Operation.Merge(m, src)
}
func (m *CapabilityStatement_Rest_Operation) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Rest_Operation.Size(m)
}
func (m *CapabilityStatement_Rest_Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Rest_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Rest_Operation proto.InternalMessageInfo

func (m *CapabilityStatement_Rest_Operation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Rest_Operation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Operation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Rest_Operation) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CapabilityStatement_Rest_Operation) GetDefinition() *Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

// If messaging is supported
type CapabilityStatement_Messaging struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                              `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Endpoint          []*CapabilityStatement_Messaging_Endpoint `protobuf:"bytes,4,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Reliable Message Cache Length (min)
	ReliableCache *UnsignedInt `protobuf:"bytes,5,opt,name=reliable_cache,json=reliableCache,proto3" json:"reliable_cache,omitempty"`
	// Messaging interface behavior details
	Documentation        *String                                           `protobuf:"bytes,6,opt,name=documentation,proto3" json:"documentation,omitempty"`
	SupportedMessage     []*CapabilityStatement_Messaging_SupportedMessage `protobuf:"bytes,7,rep,name=supported_message,json=supportedMessage,proto3" json:"supported_message,omitempty"`
	Event                []*CapabilityStatement_Messaging_Event            `protobuf:"bytes,8,rep,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *CapabilityStatement_Messaging) Reset()         { *m = CapabilityStatement_Messaging{} }
func (m *CapabilityStatement_Messaging) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Messaging) ProtoMessage()    {}
func (*CapabilityStatement_Messaging) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 3}
}

func (m *CapabilityStatement_Messaging) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Messaging.Unmarshal(m, b)
}
func (m *CapabilityStatement_Messaging) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Messaging.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Messaging) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Messaging.Merge(m, src)
}
func (m *CapabilityStatement_Messaging) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Messaging.Size(m)
}
func (m *CapabilityStatement_Messaging) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Messaging.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Messaging proto.InternalMessageInfo

func (m *CapabilityStatement_Messaging) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Messaging) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Messaging) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Messaging) GetEndpoint() []*CapabilityStatement_Messaging_Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *CapabilityStatement_Messaging) GetReliableCache() *UnsignedInt {
	if m != nil {
		return m.ReliableCache
	}
	return nil
}

func (m *CapabilityStatement_Messaging) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

func (m *CapabilityStatement_Messaging) GetSupportedMessage() []*CapabilityStatement_Messaging_SupportedMessage {
	if m != nil {
		return m.SupportedMessage
	}
	return nil
}

func (m *CapabilityStatement_Messaging) GetEvent() []*CapabilityStatement_Messaging_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

// Where messages should be sent
type CapabilityStatement_Messaging_Endpoint struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// http | ftp | mllp +
	Protocol *Coding `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Network address or identifier of the end-point
	Address              *Uri     `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapabilityStatement_Messaging_Endpoint) Reset() {
	*m = CapabilityStatement_Messaging_Endpoint{}
}
func (m *CapabilityStatement_Messaging_Endpoint) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Messaging_Endpoint) ProtoMessage()    {}
func (*CapabilityStatement_Messaging_Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 3, 0}
}

func (m *CapabilityStatement_Messaging_Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Messaging_Endpoint.Unmarshal(m, b)
}
func (m *CapabilityStatement_Messaging_Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Messaging_Endpoint.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Messaging_Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Messaging_Endpoint.Merge(m, src)
}
func (m *CapabilityStatement_Messaging_Endpoint) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Messaging_Endpoint.Size(m)
}
func (m *CapabilityStatement_Messaging_Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Messaging_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Messaging_Endpoint proto.InternalMessageInfo

func (m *CapabilityStatement_Messaging_Endpoint) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Endpoint) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Endpoint) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Endpoint) GetProtocol() *Coding {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Endpoint) GetAddress() *Uri {
	if m != nil {
		return m.Address
	}
	return nil
}

// Messages supported by this system
type CapabilityStatement_Messaging_SupportedMessage struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// sender | receiver
	Mode *EventCapabilityModeCode `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	// Message supported by this system
	Definition           *Reference `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CapabilityStatement_Messaging_SupportedMessage) Reset() {
	*m = CapabilityStatement_Messaging_SupportedMessage{}
}
func (m *CapabilityStatement_Messaging_SupportedMessage) String() string {
	return proto.CompactTextString(m)
}
func (*CapabilityStatement_Messaging_SupportedMessage) ProtoMessage() {}
func (*CapabilityStatement_Messaging_SupportedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 3, 1}
}

func (m *CapabilityStatement_Messaging_SupportedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Messaging_SupportedMessage.Unmarshal(m, b)
}
func (m *CapabilityStatement_Messaging_SupportedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Messaging_SupportedMessage.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Messaging_SupportedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Messaging_SupportedMessage.Merge(m, src)
}
func (m *CapabilityStatement_Messaging_SupportedMessage) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Messaging_SupportedMessage.Size(m)
}
func (m *CapabilityStatement_Messaging_SupportedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Messaging_SupportedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Messaging_SupportedMessage proto.InternalMessageInfo

func (m *CapabilityStatement_Messaging_SupportedMessage) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Messaging_SupportedMessage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Messaging_SupportedMessage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Messaging_SupportedMessage) GetMode() *EventCapabilityModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *CapabilityStatement_Messaging_SupportedMessage) GetDefinition() *Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

// Declare support for this event
type CapabilityStatement_Messaging_Event struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Event type
	Code *Coding `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Consequence | Currency | Notification
	Category *MessageSignificanceCategoryCode `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	// sender | receiver
	Mode *EventCapabilityModeCode `protobuf:"bytes,6,opt,name=mode,proto3" json:"mode,omitempty"`
	// Resource that's focus of message
	Focus *ResourceTypeCode `protobuf:"bytes,7,opt,name=focus,proto3" json:"focus,omitempty"`
	// Profile that describes the request
	Request *Reference `protobuf:"bytes,8,opt,name=request,proto3" json:"request,omitempty"`
	// Profile that describes the response
	Response *Reference `protobuf:"bytes,9,opt,name=response,proto3" json:"response,omitempty"`
	// Endpoint-specific event documentation
	Documentation        *String  `protobuf:"bytes,10,opt,name=documentation,proto3" json:"documentation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapabilityStatement_Messaging_Event) Reset()         { *m = CapabilityStatement_Messaging_Event{} }
func (m *CapabilityStatement_Messaging_Event) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Messaging_Event) ProtoMessage()    {}
func (*CapabilityStatement_Messaging_Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 3, 2}
}

func (m *CapabilityStatement_Messaging_Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Messaging_Event.Unmarshal(m, b)
}
func (m *CapabilityStatement_Messaging_Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Messaging_Event.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Messaging_Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Messaging_Event.Merge(m, src)
}
func (m *CapabilityStatement_Messaging_Event) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Messaging_Event.Size(m)
}
func (m *CapabilityStatement_Messaging_Event) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Messaging_Event.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Messaging_Event proto.InternalMessageInfo

func (m *CapabilityStatement_Messaging_Event) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Event) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Event) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Event) GetCode() *Coding {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Event) GetCategory() *MessageSignificanceCategoryCode {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Event) GetMode() *EventCapabilityModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Event) GetFocus() *ResourceTypeCode {
	if m != nil {
		return m.Focus
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Event) GetRequest() *Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Event) GetResponse() *Reference {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *CapabilityStatement_Messaging_Event) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

// Document definition
type CapabilityStatement_Document struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// producer | consumer
	Mode *DocumentModeCode `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	// Description of document support
	Documentation *String `protobuf:"bytes,5,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// Constraint on a resource used in the document
	Profile              *Reference `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CapabilityStatement_Document) Reset()         { *m = CapabilityStatement_Document{} }
func (m *CapabilityStatement_Document) String() string { return proto.CompactTextString(m) }
func (*CapabilityStatement_Document) ProtoMessage()    {}
func (*CapabilityStatement_Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{11, 4}
}

func (m *CapabilityStatement_Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatement_Document.Unmarshal(m, b)
}
func (m *CapabilityStatement_Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatement_Document.Marshal(b, m, deterministic)
}
func (m *CapabilityStatement_Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatement_Document.Merge(m, src)
}
func (m *CapabilityStatement_Document) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatement_Document.Size(m)
}
func (m *CapabilityStatement_Document) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatement_Document.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatement_Document proto.InternalMessageInfo

func (m *CapabilityStatement_Document) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatement_Document) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatement_Document) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CapabilityStatement_Document) GetMode() *DocumentModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *CapabilityStatement_Document) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

func (m *CapabilityStatement_Document) GetProfile() *Reference {
	if m != nil {
		return m.Profile
	}
	return nil
}

// Auto-generated from StructureDefinition for CarePlan, last updated
// 2017-04-19T07:44:43.294+10:00. Healthcare plan for patient or group. See
// http://hl7.org/fhir/StructureDefinition/CarePlan
type CarePlan struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this plan
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// Fulfills care plan
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// CarePlan replaced by this CarePlan
	Replaces []*Reference `protobuf:"bytes,12,rep,name=replaces,proto3" json:"replaces,omitempty"`
	// Part of referenced CarePlan
	PartOf []*Reference `protobuf:"bytes,13,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// draft | active | suspended | completed | entered-in-error | cancelled |
	// unknown
	Status *CarePlanStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// proposal | plan | order | option
	Intent *CarePlanIntentCode `protobuf:"bytes,15,opt,name=intent,proto3" json:"intent,omitempty"`
	// Type of plan
	Category []*CodeableConcept `protobuf:"bytes,16,rep,name=category,proto3" json:"category,omitempty"`
	// Human-friendly name for the CarePlan
	Title *String `protobuf:"bytes,17,opt,name=title,proto3" json:"title,omitempty"`
	// Summary of nature of plan
	Description *String `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Who care plan is for
	Subject *Reference `protobuf:"bytes,19,opt,name=subject,proto3" json:"subject,omitempty"`
	// Created in context of
	Context *Reference `protobuf:"bytes,20,opt,name=context,proto3" json:"context,omitempty"`
	// Time period plan covers
	Period *Period `protobuf:"bytes,21,opt,name=period,proto3" json:"period,omitempty"`
	// Who is responsible for contents of the plan
	Author []*Reference `protobuf:"bytes,22,rep,name=author,proto3" json:"author,omitempty"`
	// Who's involved in plan?
	CareTeam []*Reference `protobuf:"bytes,23,rep,name=care_team,json=careTeam,proto3" json:"care_team,omitempty"`
	// Health issues this plan addresses
	Addresses []*Reference `protobuf:"bytes,24,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// Information considered as part of plan
	SupportingInfo []*Reference `protobuf:"bytes,25,rep,name=supporting_info,json=supportingInfo,proto3" json:"supporting_info,omitempty"`
	// Desired outcome of plan
	Goal     []*Reference         `protobuf:"bytes,26,rep,name=goal,proto3" json:"goal,omitempty"`
	Activity []*CarePlan_Activity `protobuf:"bytes,27,rep,name=activity,proto3" json:"activity,omitempty"`
	// Comments about the plan
	Note                 []*Annotation `protobuf:"bytes,28,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CarePlan) Reset()         { *m = CarePlan{} }
func (m *CarePlan) String() string { return proto.CompactTextString(m) }
func (*CarePlan) ProtoMessage()    {}
func (*CarePlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{12}
}

func (m *CarePlan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarePlan.Unmarshal(m, b)
}
func (m *CarePlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarePlan.Marshal(b, m, deterministic)
}
func (m *CarePlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarePlan.Merge(m, src)
}
func (m *CarePlan) XXX_Size() int {
	return xxx_messageInfo_CarePlan.Size(m)
}
func (m *CarePlan) XXX_DiscardUnknown() {
	xxx_messageInfo_CarePlan.DiscardUnknown(m)
}

var xxx_messageInfo_CarePlan proto.InternalMessageInfo

func (m *CarePlan) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CarePlan) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CarePlan) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *CarePlan) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *CarePlan) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *CarePlan) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *CarePlan) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CarePlan) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CarePlan) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *CarePlan) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *CarePlan) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *CarePlan) GetReplaces() []*Reference {
	if m != nil {
		return m.Replaces
	}
	return nil
}

func (m *CarePlan) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *CarePlan) GetStatus() *CarePlanStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CarePlan) GetIntent() *CarePlanIntentCode {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *CarePlan) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *CarePlan) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CarePlan) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CarePlan) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *CarePlan) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *CarePlan) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *CarePlan) GetAuthor() []*Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *CarePlan) GetCareTeam() []*Reference {
	if m != nil {
		return m.CareTeam
	}
	return nil
}

func (m *CarePlan) GetAddresses() []*Reference {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *CarePlan) GetSupportingInfo() []*Reference {
	if m != nil {
		return m.SupportingInfo
	}
	return nil
}

func (m *CarePlan) GetGoal() []*Reference {
	if m != nil {
		return m.Goal
	}
	return nil
}

func (m *CarePlan) GetActivity() []*CarePlan_Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *CarePlan) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Action to occur as part of plan
type CarePlan_Activity struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Results of the activity
	OutcomeCodeableConcept []*CodeableConcept `protobuf:"bytes,4,rep,name=outcome_codeable_concept,json=outcomeCodeableConcept,proto3" json:"outcome_codeable_concept,omitempty"`
	// Appointment, Encounter, Procedure, etc.
	OutcomeReference []*Reference `protobuf:"bytes,5,rep,name=outcome_reference,json=outcomeReference,proto3" json:"outcome_reference,omitempty"`
	// Comments about the activity status/progress
	Progress []*Annotation `protobuf:"bytes,6,rep,name=progress,proto3" json:"progress,omitempty"`
	// Activity details defined in specific resource
	Reference            *Reference                `protobuf:"bytes,7,opt,name=reference,proto3" json:"reference,omitempty"`
	Detail               *CarePlan_Activity_Detail `protobuf:"bytes,8,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CarePlan_Activity) Reset()         { *m = CarePlan_Activity{} }
func (m *CarePlan_Activity) String() string { return proto.CompactTextString(m) }
func (*CarePlan_Activity) ProtoMessage()    {}
func (*CarePlan_Activity) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{12, 0}
}

func (m *CarePlan_Activity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarePlan_Activity.Unmarshal(m, b)
}
func (m *CarePlan_Activity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarePlan_Activity.Marshal(b, m, deterministic)
}
func (m *CarePlan_Activity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarePlan_Activity.Merge(m, src)
}
func (m *CarePlan_Activity) XXX_Size() int {
	return xxx_messageInfo_CarePlan_Activity.Size(m)
}
func (m *CarePlan_Activity) XXX_DiscardUnknown() {
	xxx_messageInfo_CarePlan_Activity.DiscardUnknown(m)
}

var xxx_messageInfo_CarePlan_Activity proto.InternalMessageInfo

func (m *CarePlan_Activity) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CarePlan_Activity) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CarePlan_Activity) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CarePlan_Activity) GetOutcomeCodeableConcept() []*CodeableConcept {
	if m != nil {
		return m.OutcomeCodeableConcept
	}
	return nil
}

func (m *CarePlan_Activity) GetOutcomeReference() []*Reference {
	if m != nil {
		return m.OutcomeReference
	}
	return nil
}

func (m *CarePlan_Activity) GetProgress() []*Annotation {
	if m != nil {
		return m.Progress
	}
	return nil
}

func (m *CarePlan_Activity) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *CarePlan_Activity) GetDetail() *CarePlan_Activity_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

// In-line definition of activity
type CarePlan_Activity_Detail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// diet | drug | encounter | observation | procedure | supply | other
	Category *CodeableConcept `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// Protocol or definition
	Definition *Reference `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	// Detail type of activity
	Code *CodeableConcept `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	// Why activity should be done or why activity was prohibited
	ReasonCode []*CodeableConcept `protobuf:"bytes,7,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Condition triggering need for activity
	ReasonReference []*Reference `protobuf:"bytes,8,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Goals this activity relates to
	Goal []*Reference `protobuf:"bytes,9,rep,name=goal,proto3" json:"goal,omitempty"`
	// not-started | scheduled | in-progress | on-hold | completed | cancelled
	// | unknown
	Status *CarePlanActivityStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Reason for current status
	StatusReason *String `protobuf:"bytes,11,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	// Do NOT do
	Prohibited *Boolean                            `protobuf:"bytes,12,opt,name=prohibited,proto3" json:"prohibited,omitempty"`
	Scheduled  *CarePlan_Activity_Detail_Scheduled `protobuf:"bytes,13,opt,name=scheduled,proto3" json:"scheduled,omitempty"`
	// Where it should happen
	Location *Reference `protobuf:"bytes,14,opt,name=location,proto3" json:"location,omitempty"`
	// Who will be responsible?
	Performer []*Reference                      `protobuf:"bytes,15,rep,name=performer,proto3" json:"performer,omitempty"`
	Product   *CarePlan_Activity_Detail_Product `protobuf:"bytes,16,opt,name=product,proto3" json:"product,omitempty"`
	// How to consume/day?
	DailyAmount *SimpleQuantity `protobuf:"bytes,17,opt,name=daily_amount,json=dailyAmount,proto3" json:"daily_amount,omitempty"`
	// How much to administer/supply/consume
	Quantity *SimpleQuantity `protobuf:"bytes,18,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Extra info describing activity to perform
	Description          *String  `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CarePlan_Activity_Detail) Reset()         { *m = CarePlan_Activity_Detail{} }
func (m *CarePlan_Activity_Detail) String() string { return proto.CompactTextString(m) }
func (*CarePlan_Activity_Detail) ProtoMessage()    {}
func (*CarePlan_Activity_Detail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{12, 0, 0}
}

func (m *CarePlan_Activity_Detail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarePlan_Activity_Detail.Unmarshal(m, b)
}
func (m *CarePlan_Activity_Detail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarePlan_Activity_Detail.Marshal(b, m, deterministic)
}
func (m *CarePlan_Activity_Detail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarePlan_Activity_Detail.Merge(m, src)
}
func (m *CarePlan_Activity_Detail) XXX_Size() int {
	return xxx_messageInfo_CarePlan_Activity_Detail.Size(m)
}
func (m *CarePlan_Activity_Detail) XXX_DiscardUnknown() {
	xxx_messageInfo_CarePlan_Activity_Detail.DiscardUnknown(m)
}

var xxx_messageInfo_CarePlan_Activity_Detail proto.InternalMessageInfo

func (m *CarePlan_Activity_Detail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetDefinition() *Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetGoal() []*Reference {
	if m != nil {
		return m.Goal
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetStatus() *CarePlanActivityStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetStatusReason() *String {
	if m != nil {
		return m.StatusReason
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetProhibited() *Boolean {
	if m != nil {
		return m.Prohibited
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetScheduled() *CarePlan_Activity_Detail_Scheduled {
	if m != nil {
		return m.Scheduled
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetProduct() *CarePlan_Activity_Detail_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetDailyAmount() *SimpleQuantity {
	if m != nil {
		return m.DailyAmount
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *CarePlan_Activity_Detail) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

// When activity is to occur
type CarePlan_Activity_Detail_Scheduled struct {
	// Types that are valid to be assigned to Scheduled:
	//	*CarePlan_Activity_Detail_Scheduled_Timing
	//	*CarePlan_Activity_Detail_Scheduled_Period
	//	*CarePlan_Activity_Detail_Scheduled_StringValue
	Scheduled            isCarePlan_Activity_Detail_Scheduled_Scheduled `protobuf_oneof:"scheduled"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *CarePlan_Activity_Detail_Scheduled) Reset()         { *m = CarePlan_Activity_Detail_Scheduled{} }
func (m *CarePlan_Activity_Detail_Scheduled) String() string { return proto.CompactTextString(m) }
func (*CarePlan_Activity_Detail_Scheduled) ProtoMessage()    {}
func (*CarePlan_Activity_Detail_Scheduled) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{12, 0, 0, 0}
}

func (m *CarePlan_Activity_Detail_Scheduled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarePlan_Activity_Detail_Scheduled.Unmarshal(m, b)
}
func (m *CarePlan_Activity_Detail_Scheduled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarePlan_Activity_Detail_Scheduled.Marshal(b, m, deterministic)
}
func (m *CarePlan_Activity_Detail_Scheduled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarePlan_Activity_Detail_Scheduled.Merge(m, src)
}
func (m *CarePlan_Activity_Detail_Scheduled) XXX_Size() int {
	return xxx_messageInfo_CarePlan_Activity_Detail_Scheduled.Size(m)
}
func (m *CarePlan_Activity_Detail_Scheduled) XXX_DiscardUnknown() {
	xxx_messageInfo_CarePlan_Activity_Detail_Scheduled.DiscardUnknown(m)
}

var xxx_messageInfo_CarePlan_Activity_Detail_Scheduled proto.InternalMessageInfo

type isCarePlan_Activity_Detail_Scheduled_Scheduled interface {
	isCarePlan_Activity_Detail_Scheduled_Scheduled()
}

type CarePlan_Activity_Detail_Scheduled_Timing struct {
	Timing *Timing `protobuf:"bytes,1,opt,name=timing,proto3,oneof"`
}

type CarePlan_Activity_Detail_Scheduled_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type CarePlan_Activity_Detail_Scheduled_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

func (*CarePlan_Activity_Detail_Scheduled_Timing) isCarePlan_Activity_Detail_Scheduled_Scheduled() {}

func (*CarePlan_Activity_Detail_Scheduled_Period) isCarePlan_Activity_Detail_Scheduled_Scheduled() {}

func (*CarePlan_Activity_Detail_Scheduled_StringValue) isCarePlan_Activity_Detail_Scheduled_Scheduled() {
}

func (m *CarePlan_Activity_Detail_Scheduled) GetScheduled() isCarePlan_Activity_Detail_Scheduled_Scheduled {
	if m != nil {
		return m.Scheduled
	}
	return nil
}

func (m *CarePlan_Activity_Detail_Scheduled) GetTiming() *Timing {
	if x, ok := m.GetScheduled().(*CarePlan_Activity_Detail_Scheduled_Timing); ok {
		return x.Timing
	}
	return nil
}

func (m *CarePlan_Activity_Detail_Scheduled) GetPeriod() *Period {
	if x, ok := m.GetScheduled().(*CarePlan_Activity_Detail_Scheduled_Period); ok {
		return x.Period
	}
	return nil
}

func (m *CarePlan_Activity_Detail_Scheduled) GetStringValue() *String {
	if x, ok := m.GetScheduled().(*CarePlan_Activity_Detail_Scheduled_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CarePlan_Activity_Detail_Scheduled) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CarePlan_Activity_Detail_Scheduled_OneofMarshaler, _CarePlan_Activity_Detail_Scheduled_OneofUnmarshaler, _CarePlan_Activity_Detail_Scheduled_OneofSizer, []interface{}{
		(*CarePlan_Activity_Detail_Scheduled_Timing)(nil),
		(*CarePlan_Activity_Detail_Scheduled_Period)(nil),
		(*CarePlan_Activity_Detail_Scheduled_StringValue)(nil),
	}
}

func _CarePlan_Activity_Detail_Scheduled_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CarePlan_Activity_Detail_Scheduled)
	// scheduled
	switch x := m.Scheduled.(type) {
	case *CarePlan_Activity_Detail_Scheduled_Timing:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case *CarePlan_Activity_Detail_Scheduled_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *CarePlan_Activity_Detail_Scheduled_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CarePlan_Activity_Detail_Scheduled.Scheduled has unexpected type %T", x)
	}
	return nil
}

func _CarePlan_Activity_Detail_Scheduled_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CarePlan_Activity_Detail_Scheduled)
	switch tag {
	case 1: // scheduled.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Scheduled = &CarePlan_Activity_Detail_Scheduled_Timing{msg}
		return true, err
	case 2: // scheduled.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Scheduled = &CarePlan_Activity_Detail_Scheduled_Period{msg}
		return true, err
	case 3: // scheduled.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Scheduled = &CarePlan_Activity_Detail_Scheduled_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CarePlan_Activity_Detail_Scheduled_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CarePlan_Activity_Detail_Scheduled)
	// scheduled
	switch x := m.Scheduled.(type) {
	case *CarePlan_Activity_Detail_Scheduled_Timing:
		s := proto.Size(x.Timing)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CarePlan_Activity_Detail_Scheduled_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CarePlan_Activity_Detail_Scheduled_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// What is to be administered/supplied
type CarePlan_Activity_Detail_Product struct {
	// Types that are valid to be assigned to Product:
	//	*CarePlan_Activity_Detail_Product_CodeableConcept
	//	*CarePlan_Activity_Detail_Product_Reference
	Product              isCarePlan_Activity_Detail_Product_Product `protobuf_oneof:"product"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CarePlan_Activity_Detail_Product) Reset()         { *m = CarePlan_Activity_Detail_Product{} }
func (m *CarePlan_Activity_Detail_Product) String() string { return proto.CompactTextString(m) }
func (*CarePlan_Activity_Detail_Product) ProtoMessage()    {}
func (*CarePlan_Activity_Detail_Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{12, 0, 0, 1}
}

func (m *CarePlan_Activity_Detail_Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarePlan_Activity_Detail_Product.Unmarshal(m, b)
}
func (m *CarePlan_Activity_Detail_Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarePlan_Activity_Detail_Product.Marshal(b, m, deterministic)
}
func (m *CarePlan_Activity_Detail_Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarePlan_Activity_Detail_Product.Merge(m, src)
}
func (m *CarePlan_Activity_Detail_Product) XXX_Size() int {
	return xxx_messageInfo_CarePlan_Activity_Detail_Product.Size(m)
}
func (m *CarePlan_Activity_Detail_Product) XXX_DiscardUnknown() {
	xxx_messageInfo_CarePlan_Activity_Detail_Product.DiscardUnknown(m)
}

var xxx_messageInfo_CarePlan_Activity_Detail_Product proto.InternalMessageInfo

type isCarePlan_Activity_Detail_Product_Product interface {
	isCarePlan_Activity_Detail_Product_Product()
}

type CarePlan_Activity_Detail_Product_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type CarePlan_Activity_Detail_Product_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*CarePlan_Activity_Detail_Product_CodeableConcept) isCarePlan_Activity_Detail_Product_Product() {
}

func (*CarePlan_Activity_Detail_Product_Reference) isCarePlan_Activity_Detail_Product_Product() {}

func (m *CarePlan_Activity_Detail_Product) GetProduct() isCarePlan_Activity_Detail_Product_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *CarePlan_Activity_Detail_Product) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetProduct().(*CarePlan_Activity_Detail_Product_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *CarePlan_Activity_Detail_Product) GetReference() *Reference {
	if x, ok := m.GetProduct().(*CarePlan_Activity_Detail_Product_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CarePlan_Activity_Detail_Product) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CarePlan_Activity_Detail_Product_OneofMarshaler, _CarePlan_Activity_Detail_Product_OneofUnmarshaler, _CarePlan_Activity_Detail_Product_OneofSizer, []interface{}{
		(*CarePlan_Activity_Detail_Product_CodeableConcept)(nil),
		(*CarePlan_Activity_Detail_Product_Reference)(nil),
	}
}

func _CarePlan_Activity_Detail_Product_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CarePlan_Activity_Detail_Product)
	// product
	switch x := m.Product.(type) {
	case *CarePlan_Activity_Detail_Product_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *CarePlan_Activity_Detail_Product_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CarePlan_Activity_Detail_Product.Product has unexpected type %T", x)
	}
	return nil
}

func _CarePlan_Activity_Detail_Product_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CarePlan_Activity_Detail_Product)
	switch tag {
	case 1: // product.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Product = &CarePlan_Activity_Detail_Product_CodeableConcept{msg}
		return true, err
	case 2: // product.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Product = &CarePlan_Activity_Detail_Product_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CarePlan_Activity_Detail_Product_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CarePlan_Activity_Detail_Product)
	// product
	switch x := m.Product.(type) {
	case *CarePlan_Activity_Detail_Product_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CarePlan_Activity_Detail_Product_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for CareTeam, last updated
// 2017-04-19T07:44:43.294+10:00. Planned participants in the coordination and
// delivery of care for a patient or group. See
// http://hl7.org/fhir/StructureDefinition/CareTeam
type CareTeam struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this team
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// proposed | active | suspended | inactive | entered-in-error
	Status *CareTeamStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Type of team
	Category []*CodeableConcept `protobuf:"bytes,11,rep,name=category,proto3" json:"category,omitempty"`
	// Name of the team, such as crisis assessment team
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Who care team is for
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or episode associated with CareTeam
	Context *Reference `protobuf:"bytes,14,opt,name=context,proto3" json:"context,omitempty"`
	// Time period team covers
	Period      *Period                 `protobuf:"bytes,15,opt,name=period,proto3" json:"period,omitempty"`
	Participant []*CareTeam_Participant `protobuf:"bytes,16,rep,name=participant,proto3" json:"participant,omitempty"`
	// Why the care team exists
	ReasonCode []*CodeableConcept `protobuf:"bytes,17,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Why the care team exists
	ReasonReference []*Reference `protobuf:"bytes,18,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Organization responsible for the care team
	ManagingOrganization []*Reference `protobuf:"bytes,19,rep,name=managing_organization,json=managingOrganization,proto3" json:"managing_organization,omitempty"`
	// Comments made about the CareTeam
	Note                 []*Annotation `protobuf:"bytes,20,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CareTeam) Reset()         { *m = CareTeam{} }
func (m *CareTeam) String() string { return proto.CompactTextString(m) }
func (*CareTeam) ProtoMessage()    {}
func (*CareTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{13}
}

func (m *CareTeam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CareTeam.Unmarshal(m, b)
}
func (m *CareTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CareTeam.Marshal(b, m, deterministic)
}
func (m *CareTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CareTeam.Merge(m, src)
}
func (m *CareTeam) XXX_Size() int {
	return xxx_messageInfo_CareTeam.Size(m)
}
func (m *CareTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_CareTeam.DiscardUnknown(m)
}

var xxx_messageInfo_CareTeam proto.InternalMessageInfo

func (m *CareTeam) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CareTeam) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CareTeam) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *CareTeam) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *CareTeam) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *CareTeam) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *CareTeam) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CareTeam) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CareTeam) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *CareTeam) GetStatus() *CareTeamStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CareTeam) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *CareTeam) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CareTeam) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *CareTeam) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *CareTeam) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *CareTeam) GetParticipant() []*CareTeam_Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *CareTeam) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *CareTeam) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *CareTeam) GetManagingOrganization() []*Reference {
	if m != nil {
		return m.ManagingOrganization
	}
	return nil
}

func (m *CareTeam) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Members of the team
type CareTeam_Participant struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of involvement
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Who is involved
	Member *Reference `protobuf:"bytes,5,opt,name=member,proto3" json:"member,omitempty"`
	// Organization of the practitioner
	OnBehalfOf *Reference `protobuf:"bytes,6,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	// Time period of participant
	Period               *Period  `protobuf:"bytes,7,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CareTeam_Participant) Reset()         { *m = CareTeam_Participant{} }
func (m *CareTeam_Participant) String() string { return proto.CompactTextString(m) }
func (*CareTeam_Participant) ProtoMessage()    {}
func (*CareTeam_Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{13, 0}
}

func (m *CareTeam_Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CareTeam_Participant.Unmarshal(m, b)
}
func (m *CareTeam_Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CareTeam_Participant.Marshal(b, m, deterministic)
}
func (m *CareTeam_Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CareTeam_Participant.Merge(m, src)
}
func (m *CareTeam_Participant) XXX_Size() int {
	return xxx_messageInfo_CareTeam_Participant.Size(m)
}
func (m *CareTeam_Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_CareTeam_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_CareTeam_Participant proto.InternalMessageInfo

func (m *CareTeam_Participant) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CareTeam_Participant) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CareTeam_Participant) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CareTeam_Participant) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *CareTeam_Participant) GetMember() *Reference {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *CareTeam_Participant) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

func (m *CareTeam_Participant) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// Auto-generated from StructureDefinition for ChargeItem, last updated
// 2017-04-19T07:44:43.294+10:00. Item containing charge code(s) associated with
// the provision of healthcare provider products. See
// http://hl7.org/fhir/StructureDefinition/ChargeItem
type ChargeItem struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for item
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Defining information about the code of this charge item
	Definition []*Uri `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// planned | billable | not-billable | aborted | billed | entered-in-error |
	// unknown
	Status *ChargeItemStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Part of referenced ChargeItem
	PartOf []*Reference `protobuf:"bytes,12,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// A code that identifies the charge, like a billing code
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Individual service was done for/to
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter / Episode associated with event
	Context     *Reference                `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Occurrence  *ChargeItem_Occurrence    `protobuf:"bytes,16,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	Participant []*ChargeItem_Participant `protobuf:"bytes,17,rep,name=participant,proto3" json:"participant,omitempty"`
	// Organization providing the charged sevice
	PerformingOrganization *Reference `protobuf:"bytes,18,opt,name=performing_organization,json=performingOrganization,proto3" json:"performing_organization,omitempty"`
	// Organization requesting the charged service
	RequestingOrganization *Reference `protobuf:"bytes,19,opt,name=requesting_organization,json=requestingOrganization,proto3" json:"requesting_organization,omitempty"`
	// Quantity of which the charge item has been serviced
	Quantity *Quantity `protobuf:"bytes,20,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Anatomical location, if relevant
	Bodysite []*CodeableConcept `protobuf:"bytes,21,rep,name=bodysite,proto3" json:"bodysite,omitempty"`
	// Factor overriding the associated rules
	FactorOverride *Decimal `protobuf:"bytes,22,opt,name=factor_override,json=factorOverride,proto3" json:"factor_override,omitempty"`
	// Price overriding the associated rules
	PriceOverride *Money `protobuf:"bytes,23,opt,name=price_override,json=priceOverride,proto3" json:"price_override,omitempty"`
	// Reason for overriding the list price/factor
	OverrideReason *String `protobuf:"bytes,24,opt,name=override_reason,json=overrideReason,proto3" json:"override_reason,omitempty"`
	// Individual who was entering
	Enterer *Reference `protobuf:"bytes,25,opt,name=enterer,proto3" json:"enterer,omitempty"`
	// Date the charge item was entered
	EnteredDate *DateTime `protobuf:"bytes,26,opt,name=entered_date,json=enteredDate,proto3" json:"entered_date,omitempty"`
	// Why was the charged  service rendered?
	Reason []*CodeableConcept `protobuf:"bytes,27,rep,name=reason,proto3" json:"reason,omitempty"`
	// Which rendered service is being charged?
	Service []*Reference `protobuf:"bytes,28,rep,name=service,proto3" json:"service,omitempty"`
	// Account to place this charge
	Account []*Reference `protobuf:"bytes,29,rep,name=account,proto3" json:"account,omitempty"`
	// Comments made about the ChargeItem
	Note []*Annotation `protobuf:"bytes,30,rep,name=note,proto3" json:"note,omitempty"`
	// Further information supporting the this charge
	SupportingInformation []*Reference `protobuf:"bytes,31,rep,name=supporting_information,json=supportingInformation,proto3" json:"supporting_information,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}     `json:"-"`
	XXX_unrecognized      []byte       `json:"-"`
	XXX_sizecache         int32        `json:"-"`
}

func (m *ChargeItem) Reset()         { *m = ChargeItem{} }
func (m *ChargeItem) String() string { return proto.CompactTextString(m) }
func (*ChargeItem) ProtoMessage()    {}
func (*ChargeItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{14}
}

func (m *ChargeItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargeItem.Unmarshal(m, b)
}
func (m *ChargeItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargeItem.Marshal(b, m, deterministic)
}
func (m *ChargeItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargeItem.Merge(m, src)
}
func (m *ChargeItem) XXX_Size() int {
	return xxx_messageInfo_ChargeItem.Size(m)
}
func (m *ChargeItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargeItem.DiscardUnknown(m)
}

var xxx_messageInfo_ChargeItem proto.InternalMessageInfo

func (m *ChargeItem) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ChargeItem) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ChargeItem) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ChargeItem) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ChargeItem) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ChargeItem) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ChargeItem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ChargeItem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ChargeItem) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ChargeItem) GetDefinition() []*Uri {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *ChargeItem) GetStatus() *ChargeItemStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ChargeItem) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *ChargeItem) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ChargeItem) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *ChargeItem) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ChargeItem) GetOccurrence() *ChargeItem_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *ChargeItem) GetParticipant() []*ChargeItem_Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *ChargeItem) GetPerformingOrganization() *Reference {
	if m != nil {
		return m.PerformingOrganization
	}
	return nil
}

func (m *ChargeItem) GetRequestingOrganization() *Reference {
	if m != nil {
		return m.RequestingOrganization
	}
	return nil
}

func (m *ChargeItem) GetQuantity() *Quantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *ChargeItem) GetBodysite() []*CodeableConcept {
	if m != nil {
		return m.Bodysite
	}
	return nil
}

func (m *ChargeItem) GetFactorOverride() *Decimal {
	if m != nil {
		return m.FactorOverride
	}
	return nil
}

func (m *ChargeItem) GetPriceOverride() *Money {
	if m != nil {
		return m.PriceOverride
	}
	return nil
}

func (m *ChargeItem) GetOverrideReason() *String {
	if m != nil {
		return m.OverrideReason
	}
	return nil
}

func (m *ChargeItem) GetEnterer() *Reference {
	if m != nil {
		return m.Enterer
	}
	return nil
}

func (m *ChargeItem) GetEnteredDate() *DateTime {
	if m != nil {
		return m.EnteredDate
	}
	return nil
}

func (m *ChargeItem) GetReason() []*CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *ChargeItem) GetService() []*Reference {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ChargeItem) GetAccount() []*Reference {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *ChargeItem) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *ChargeItem) GetSupportingInformation() []*Reference {
	if m != nil {
		return m.SupportingInformation
	}
	return nil
}

// When the charged service was applied
type ChargeItem_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*ChargeItem_Occurrence_DateTime
	//	*ChargeItem_Occurrence_Period
	//	*ChargeItem_Occurrence_Timing
	Occurrence           isChargeItem_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ChargeItem_Occurrence) Reset()         { *m = ChargeItem_Occurrence{} }
func (m *ChargeItem_Occurrence) String() string { return proto.CompactTextString(m) }
func (*ChargeItem_Occurrence) ProtoMessage()    {}
func (*ChargeItem_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{14, 0}
}

func (m *ChargeItem_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargeItem_Occurrence.Unmarshal(m, b)
}
func (m *ChargeItem_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargeItem_Occurrence.Marshal(b, m, deterministic)
}
func (m *ChargeItem_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargeItem_Occurrence.Merge(m, src)
}
func (m *ChargeItem_Occurrence) XXX_Size() int {
	return xxx_messageInfo_ChargeItem_Occurrence.Size(m)
}
func (m *ChargeItem_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargeItem_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_ChargeItem_Occurrence proto.InternalMessageInfo

type isChargeItem_Occurrence_Occurrence interface {
	isChargeItem_Occurrence_Occurrence()
}

type ChargeItem_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ChargeItem_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type ChargeItem_Occurrence_Timing struct {
	Timing *Timing `protobuf:"bytes,3,opt,name=timing,proto3,oneof"`
}

func (*ChargeItem_Occurrence_DateTime) isChargeItem_Occurrence_Occurrence() {}

func (*ChargeItem_Occurrence_Period) isChargeItem_Occurrence_Occurrence() {}

func (*ChargeItem_Occurrence_Timing) isChargeItem_Occurrence_Occurrence() {}

func (m *ChargeItem_Occurrence) GetOccurrence() isChargeItem_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *ChargeItem_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*ChargeItem_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ChargeItem_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*ChargeItem_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

func (m *ChargeItem_Occurrence) GetTiming() *Timing {
	if x, ok := m.GetOccurrence().(*ChargeItem_Occurrence_Timing); ok {
		return x.Timing
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ChargeItem_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ChargeItem_Occurrence_OneofMarshaler, _ChargeItem_Occurrence_OneofUnmarshaler, _ChargeItem_Occurrence_OneofSizer, []interface{}{
		(*ChargeItem_Occurrence_DateTime)(nil),
		(*ChargeItem_Occurrence_Period)(nil),
		(*ChargeItem_Occurrence_Timing)(nil),
	}
}

func _ChargeItem_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ChargeItem_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *ChargeItem_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ChargeItem_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *ChargeItem_Occurrence_Timing:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ChargeItem_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _ChargeItem_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ChargeItem_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ChargeItem_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ChargeItem_Occurrence_Period{msg}
		return true, err
	case 3: // occurrence.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ChargeItem_Occurrence_Timing{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ChargeItem_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ChargeItem_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *ChargeItem_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ChargeItem_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ChargeItem_Occurrence_Timing:
		s := proto.Size(x.Timing)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who performed charged service
type ChargeItem_Participant struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What type of performance was done
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Individual who was performing
	Actor                *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ChargeItem_Participant) Reset()         { *m = ChargeItem_Participant{} }
func (m *ChargeItem_Participant) String() string { return proto.CompactTextString(m) }
func (*ChargeItem_Participant) ProtoMessage()    {}
func (*ChargeItem_Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{14, 1}
}

func (m *ChargeItem_Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargeItem_Participant.Unmarshal(m, b)
}
func (m *ChargeItem_Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargeItem_Participant.Marshal(b, m, deterministic)
}
func (m *ChargeItem_Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargeItem_Participant.Merge(m, src)
}
func (m *ChargeItem_Participant) XXX_Size() int {
	return xxx_messageInfo_ChargeItem_Participant.Size(m)
}
func (m *ChargeItem_Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargeItem_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_ChargeItem_Participant proto.InternalMessageInfo

func (m *ChargeItem_Participant) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ChargeItem_Participant) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ChargeItem_Participant) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ChargeItem_Participant) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ChargeItem_Participant) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

// Auto-generated from StructureDefinition for Claim, last updated
// 2017-04-19T07:44:43.294+10:00. Claim, Pre-determination or Pre-authorization.
// See http://hl7.org/fhir/StructureDefinition/Claim
type Claim struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Claim number
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Type or discipline
	Type *CodeableConcept `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// Finer grained claim type information
	SubType []*CodeableConcept `protobuf:"bytes,12,rep,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// complete | proposed | exploratory | other
	Use *UseCode `protobuf:"bytes,13,opt,name=use,proto3" json:"use,omitempty"`
	// The subject of the Products and Services
	Patient *Reference `protobuf:"bytes,14,opt,name=patient,proto3" json:"patient,omitempty"`
	// Period for charge submission
	BillablePeriod *Period `protobuf:"bytes,15,opt,name=billable_period,json=billablePeriod,proto3" json:"billable_period,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	// Author
	Enterer *Reference `protobuf:"bytes,17,opt,name=enterer,proto3" json:"enterer,omitempty"`
	// Target
	Insurer *Reference `protobuf:"bytes,18,opt,name=insurer,proto3" json:"insurer,omitempty"`
	// Responsible provider
	Provider *Reference `protobuf:"bytes,19,opt,name=provider,proto3" json:"provider,omitempty"`
	// Responsible organization
	Organization *Reference `protobuf:"bytes,20,opt,name=organization,proto3" json:"organization,omitempty"`
	// Desired processing priority
	Priority *CodeableConcept `protobuf:"bytes,21,opt,name=priority,proto3" json:"priority,omitempty"`
	// Funds requested to be reserved
	FundsReserve *CodeableConcept      `protobuf:"bytes,22,opt,name=funds_reserve,json=fundsReserve,proto3" json:"funds_reserve,omitempty"`
	Related      []*Claim_RelatedClaim `protobuf:"bytes,23,rep,name=related,proto3" json:"related,omitempty"`
	// Prescription authorizing services or products
	Prescription *Reference `protobuf:"bytes,24,opt,name=prescription,proto3" json:"prescription,omitempty"`
	// Original prescription if superceded by fulfiller
	OriginalPrescription *Reference   `protobuf:"bytes,25,opt,name=original_prescription,json=originalPrescription,proto3" json:"original_prescription,omitempty"`
	Payee                *Claim_Payee `protobuf:"bytes,26,opt,name=payee,proto3" json:"payee,omitempty"`
	// Treatment Referral
	Referral *Reference `protobuf:"bytes,27,opt,name=referral,proto3" json:"referral,omitempty"`
	// Servicing Facility
	Facility    *Reference                `protobuf:"bytes,28,opt,name=facility,proto3" json:"facility,omitempty"`
	CareTeam    []*Claim_CareTeam         `protobuf:"bytes,29,rep,name=care_team,json=careTeam,proto3" json:"care_team,omitempty"`
	Information []*Claim_SpecialCondition `protobuf:"bytes,30,rep,name=information,proto3" json:"information,omitempty"`
	Diagnosis   []*Claim_Diagnosis        `protobuf:"bytes,31,rep,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	Procedure   []*Claim_Procedure        `protobuf:"bytes,32,rep,name=procedure,proto3" json:"procedure,omitempty"`
	Insurance   []*Claim_Insurance        `protobuf:"bytes,33,rep,name=insurance,proto3" json:"insurance,omitempty"`
	Accident    *Claim_Accident           `protobuf:"bytes,34,opt,name=accident,proto3" json:"accident,omitempty"`
	// Period unable to work
	EmploymentImpacted *Period `protobuf:"bytes,35,opt,name=employment_impacted,json=employmentImpacted,proto3" json:"employment_impacted,omitempty"`
	// Period in hospital
	Hospitalization *Period       `protobuf:"bytes,36,opt,name=hospitalization,proto3" json:"hospitalization,omitempty"`
	Item            []*Claim_Item `protobuf:"bytes,37,rep,name=item,proto3" json:"item,omitempty"`
	// Total claim cost
	Total                *Money   `protobuf:"bytes,38,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Claim) Reset()         { *m = Claim{} }
func (m *Claim) String() string { return proto.CompactTextString(m) }
func (*Claim) ProtoMessage()    {}
func (*Claim) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15}
}

func (m *Claim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim.Unmarshal(m, b)
}
func (m *Claim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim.Marshal(b, m, deterministic)
}
func (m *Claim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim.Merge(m, src)
}
func (m *Claim) XXX_Size() int {
	return xxx_messageInfo_Claim.Size(m)
}
func (m *Claim) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim.DiscardUnknown(m)
}

var xxx_messageInfo_Claim proto.InternalMessageInfo

func (m *Claim) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Claim) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Claim) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Claim) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Claim) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Claim) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Claim) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Claim) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Claim) GetSubType() []*CodeableConcept {
	if m != nil {
		return m.SubType
	}
	return nil
}

func (m *Claim) GetUse() *UseCode {
	if m != nil {
		return m.Use
	}
	return nil
}

func (m *Claim) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *Claim) GetBillablePeriod() *Period {
	if m != nil {
		return m.BillablePeriod
	}
	return nil
}

func (m *Claim) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Claim) GetEnterer() *Reference {
	if m != nil {
		return m.Enterer
	}
	return nil
}

func (m *Claim) GetInsurer() *Reference {
	if m != nil {
		return m.Insurer
	}
	return nil
}

func (m *Claim) GetProvider() *Reference {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *Claim) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *Claim) GetPriority() *CodeableConcept {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *Claim) GetFundsReserve() *CodeableConcept {
	if m != nil {
		return m.FundsReserve
	}
	return nil
}

func (m *Claim) GetRelated() []*Claim_RelatedClaim {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Claim) GetPrescription() *Reference {
	if m != nil {
		return m.Prescription
	}
	return nil
}

func (m *Claim) GetOriginalPrescription() *Reference {
	if m != nil {
		return m.OriginalPrescription
	}
	return nil
}

func (m *Claim) GetPayee() *Claim_Payee {
	if m != nil {
		return m.Payee
	}
	return nil
}

func (m *Claim) GetReferral() *Reference {
	if m != nil {
		return m.Referral
	}
	return nil
}

func (m *Claim) GetFacility() *Reference {
	if m != nil {
		return m.Facility
	}
	return nil
}

func (m *Claim) GetCareTeam() []*Claim_CareTeam {
	if m != nil {
		return m.CareTeam
	}
	return nil
}

func (m *Claim) GetInformation() []*Claim_SpecialCondition {
	if m != nil {
		return m.Information
	}
	return nil
}

func (m *Claim) GetDiagnosis() []*Claim_Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *Claim) GetProcedure() []*Claim_Procedure {
	if m != nil {
		return m.Procedure
	}
	return nil
}

func (m *Claim) GetInsurance() []*Claim_Insurance {
	if m != nil {
		return m.Insurance
	}
	return nil
}

func (m *Claim) GetAccident() *Claim_Accident {
	if m != nil {
		return m.Accident
	}
	return nil
}

func (m *Claim) GetEmploymentImpacted() *Period {
	if m != nil {
		return m.EmploymentImpacted
	}
	return nil
}

func (m *Claim) GetHospitalization() *Period {
	if m != nil {
		return m.Hospitalization
	}
	return nil
}

func (m *Claim) GetItem() []*Claim_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Claim) GetTotal() *Money {
	if m != nil {
		return m.Total
	}
	return nil
}

// Related Claims which may be revelant to processing this claimn
type Claim_RelatedClaim struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reference to the related claim
	Claim *Reference `protobuf:"bytes,4,opt,name=claim,proto3" json:"claim,omitempty"`
	// How the reference claim is related
	Relationship *CodeableConcept `protobuf:"bytes,5,opt,name=relationship,proto3" json:"relationship,omitempty"`
	// Related file or case reference
	Reference            *Identifier `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Claim_RelatedClaim) Reset()         { *m = Claim_RelatedClaim{} }
func (m *Claim_RelatedClaim) String() string { return proto.CompactTextString(m) }
func (*Claim_RelatedClaim) ProtoMessage()    {}
func (*Claim_RelatedClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 0}
}

func (m *Claim_RelatedClaim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_RelatedClaim.Unmarshal(m, b)
}
func (m *Claim_RelatedClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_RelatedClaim.Marshal(b, m, deterministic)
}
func (m *Claim_RelatedClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_RelatedClaim.Merge(m, src)
}
func (m *Claim_RelatedClaim) XXX_Size() int {
	return xxx_messageInfo_Claim_RelatedClaim.Size(m)
}
func (m *Claim_RelatedClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_RelatedClaim.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_RelatedClaim proto.InternalMessageInfo

func (m *Claim_RelatedClaim) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_RelatedClaim) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_RelatedClaim) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_RelatedClaim) GetClaim() *Reference {
	if m != nil {
		return m.Claim
	}
	return nil
}

func (m *Claim_RelatedClaim) GetRelationship() *CodeableConcept {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *Claim_RelatedClaim) GetReference() *Identifier {
	if m != nil {
		return m.Reference
	}
	return nil
}

// Party to be paid any benefits payable
type Claim_Payee struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of party: Subscriber, Provider, other
	Type *CodeableConcept `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// organization | patient | practitioner | relatedperson
	ResourceType *Coding `protobuf:"bytes,5,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// Party to receive the payable
	Party                *Reference `protobuf:"bytes,6,opt,name=party,proto3" json:"party,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Claim_Payee) Reset()         { *m = Claim_Payee{} }
func (m *Claim_Payee) String() string { return proto.CompactTextString(m) }
func (*Claim_Payee) ProtoMessage()    {}
func (*Claim_Payee) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 1}
}

func (m *Claim_Payee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Payee.Unmarshal(m, b)
}
func (m *Claim_Payee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Payee.Marshal(b, m, deterministic)
}
func (m *Claim_Payee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Payee.Merge(m, src)
}
func (m *Claim_Payee) XXX_Size() int {
	return xxx_messageInfo_Claim_Payee.Size(m)
}
func (m *Claim_Payee) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Payee.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Payee proto.InternalMessageInfo

func (m *Claim_Payee) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_Payee) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_Payee) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_Payee) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Claim_Payee) GetResourceType() *Coding {
	if m != nil {
		return m.ResourceType
	}
	return nil
}

func (m *Claim_Payee) GetParty() *Reference {
	if m != nil {
		return m.Party
	}
	return nil
}

// Members of the care team
type Claim_CareTeam struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Number to covey order of careTeam
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Provider individual or organization
	Provider *Reference `protobuf:"bytes,5,opt,name=provider,proto3" json:"provider,omitempty"`
	// Billing provider
	Responsible *Boolean `protobuf:"bytes,6,opt,name=responsible,proto3" json:"responsible,omitempty"`
	// Role on the team
	Role *CodeableConcept `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	// Type, classification or Specialization
	Qualification        *CodeableConcept `protobuf:"bytes,8,opt,name=qualification,proto3" json:"qualification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Claim_CareTeam) Reset()         { *m = Claim_CareTeam{} }
func (m *Claim_CareTeam) String() string { return proto.CompactTextString(m) }
func (*Claim_CareTeam) ProtoMessage()    {}
func (*Claim_CareTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 2}
}

func (m *Claim_CareTeam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_CareTeam.Unmarshal(m, b)
}
func (m *Claim_CareTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_CareTeam.Marshal(b, m, deterministic)
}
func (m *Claim_CareTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_CareTeam.Merge(m, src)
}
func (m *Claim_CareTeam) XXX_Size() int {
	return xxx_messageInfo_Claim_CareTeam.Size(m)
}
func (m *Claim_CareTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_CareTeam.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_CareTeam proto.InternalMessageInfo

func (m *Claim_CareTeam) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_CareTeam) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_CareTeam) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_CareTeam) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *Claim_CareTeam) GetProvider() *Reference {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *Claim_CareTeam) GetResponsible() *Boolean {
	if m != nil {
		return m.Responsible
	}
	return nil
}

func (m *Claim_CareTeam) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Claim_CareTeam) GetQualification() *CodeableConcept {
	if m != nil {
		return m.Qualification
	}
	return nil
}

// Exceptions, special considerations, the condition, situation, prior or
// concurrent issues
type Claim_SpecialCondition struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Information instance identifier
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// General class of information
	Category *CodeableConcept `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	// Type of information
	Code   *CodeableConcept                   `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	Timing *Claim_SpecialCondition_TimingType `protobuf:"bytes,7,opt,name=timing,proto3" json:"timing,omitempty"`
	Value  *Claim_SpecialCondition_Value      `protobuf:"bytes,8,opt,name=value,proto3" json:"value,omitempty"`
	// Reason associated with the information
	Reason               *CodeableConcept `protobuf:"bytes,9,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Claim_SpecialCondition) Reset()         { *m = Claim_SpecialCondition{} }
func (m *Claim_SpecialCondition) String() string { return proto.CompactTextString(m) }
func (*Claim_SpecialCondition) ProtoMessage()    {}
func (*Claim_SpecialCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 3}
}

func (m *Claim_SpecialCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_SpecialCondition.Unmarshal(m, b)
}
func (m *Claim_SpecialCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_SpecialCondition.Marshal(b, m, deterministic)
}
func (m *Claim_SpecialCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_SpecialCondition.Merge(m, src)
}
func (m *Claim_SpecialCondition) XXX_Size() int {
	return xxx_messageInfo_Claim_SpecialCondition.Size(m)
}
func (m *Claim_SpecialCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_SpecialCondition.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_SpecialCondition proto.InternalMessageInfo

func (m *Claim_SpecialCondition) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_SpecialCondition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_SpecialCondition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_SpecialCondition) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *Claim_SpecialCondition) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Claim_SpecialCondition) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Claim_SpecialCondition) GetTiming() *Claim_SpecialCondition_TimingType {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *Claim_SpecialCondition) GetValue() *Claim_SpecialCondition_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Claim_SpecialCondition) GetReason() *CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

// When it occurred
type Claim_SpecialCondition_TimingType struct {
	// Types that are valid to be assigned to Timing:
	//	*Claim_SpecialCondition_TimingType_Date
	//	*Claim_SpecialCondition_TimingType_Period
	Timing               isClaim_SpecialCondition_TimingType_Timing `protobuf_oneof:"timing"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *Claim_SpecialCondition_TimingType) Reset()         { *m = Claim_SpecialCondition_TimingType{} }
func (m *Claim_SpecialCondition_TimingType) String() string { return proto.CompactTextString(m) }
func (*Claim_SpecialCondition_TimingType) ProtoMessage()    {}
func (*Claim_SpecialCondition_TimingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 3, 0}
}

func (m *Claim_SpecialCondition_TimingType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_SpecialCondition_TimingType.Unmarshal(m, b)
}
func (m *Claim_SpecialCondition_TimingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_SpecialCondition_TimingType.Marshal(b, m, deterministic)
}
func (m *Claim_SpecialCondition_TimingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_SpecialCondition_TimingType.Merge(m, src)
}
func (m *Claim_SpecialCondition_TimingType) XXX_Size() int {
	return xxx_messageInfo_Claim_SpecialCondition_TimingType.Size(m)
}
func (m *Claim_SpecialCondition_TimingType) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_SpecialCondition_TimingType.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_SpecialCondition_TimingType proto.InternalMessageInfo

type isClaim_SpecialCondition_TimingType_Timing interface {
	isClaim_SpecialCondition_TimingType_Timing()
}

type Claim_SpecialCondition_TimingType_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type Claim_SpecialCondition_TimingType_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Claim_SpecialCondition_TimingType_Date) isClaim_SpecialCondition_TimingType_Timing() {}

func (*Claim_SpecialCondition_TimingType_Period) isClaim_SpecialCondition_TimingType_Timing() {}

func (m *Claim_SpecialCondition_TimingType) GetTiming() isClaim_SpecialCondition_TimingType_Timing {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *Claim_SpecialCondition_TimingType) GetDate() *Date {
	if x, ok := m.GetTiming().(*Claim_SpecialCondition_TimingType_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Claim_SpecialCondition_TimingType) GetPeriod() *Period {
	if x, ok := m.GetTiming().(*Claim_SpecialCondition_TimingType_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Claim_SpecialCondition_TimingType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Claim_SpecialCondition_TimingType_OneofMarshaler, _Claim_SpecialCondition_TimingType_OneofUnmarshaler, _Claim_SpecialCondition_TimingType_OneofSizer, []interface{}{
		(*Claim_SpecialCondition_TimingType_Date)(nil),
		(*Claim_SpecialCondition_TimingType_Period)(nil),
	}
}

func _Claim_SpecialCondition_TimingType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Claim_SpecialCondition_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *Claim_SpecialCondition_TimingType_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Claim_SpecialCondition_TimingType_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Claim_SpecialCondition_TimingType.Timing has unexpected type %T", x)
	}
	return nil
}

func _Claim_SpecialCondition_TimingType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Claim_SpecialCondition_TimingType)
	switch tag {
	case 1: // timing.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Timing = &Claim_SpecialCondition_TimingType_Date{msg}
		return true, err
	case 2: // timing.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Timing = &Claim_SpecialCondition_TimingType_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Claim_SpecialCondition_TimingType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Claim_SpecialCondition_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *Claim_SpecialCondition_TimingType_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_SpecialCondition_TimingType_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Additional Data or supporting information
type Claim_SpecialCondition_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Claim_SpecialCondition_Value_StringValue
	//	*Claim_SpecialCondition_Value_Quantity
	//	*Claim_SpecialCondition_Value_Attachment
	//	*Claim_SpecialCondition_Value_Reference
	Value                isClaim_SpecialCondition_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Claim_SpecialCondition_Value) Reset()         { *m = Claim_SpecialCondition_Value{} }
func (m *Claim_SpecialCondition_Value) String() string { return proto.CompactTextString(m) }
func (*Claim_SpecialCondition_Value) ProtoMessage()    {}
func (*Claim_SpecialCondition_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 3, 1}
}

func (m *Claim_SpecialCondition_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_SpecialCondition_Value.Unmarshal(m, b)
}
func (m *Claim_SpecialCondition_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_SpecialCondition_Value.Marshal(b, m, deterministic)
}
func (m *Claim_SpecialCondition_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_SpecialCondition_Value.Merge(m, src)
}
func (m *Claim_SpecialCondition_Value) XXX_Size() int {
	return xxx_messageInfo_Claim_SpecialCondition_Value.Size(m)
}
func (m *Claim_SpecialCondition_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_SpecialCondition_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_SpecialCondition_Value proto.InternalMessageInfo

type isClaim_SpecialCondition_Value_Value interface {
	isClaim_SpecialCondition_Value_Value()
}

type Claim_SpecialCondition_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,1,opt,name=string_value,json=string,proto3,oneof"`
}

type Claim_SpecialCondition_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,2,opt,name=quantity,proto3,oneof"`
}

type Claim_SpecialCondition_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,3,opt,name=attachment,proto3,oneof"`
}

type Claim_SpecialCondition_Value_Reference struct {
	Reference *Reference `protobuf:"bytes,4,opt,name=reference,proto3,oneof"`
}

func (*Claim_SpecialCondition_Value_StringValue) isClaim_SpecialCondition_Value_Value() {}

func (*Claim_SpecialCondition_Value_Quantity) isClaim_SpecialCondition_Value_Value() {}

func (*Claim_SpecialCondition_Value_Attachment) isClaim_SpecialCondition_Value_Value() {}

func (*Claim_SpecialCondition_Value_Reference) isClaim_SpecialCondition_Value_Value() {}

func (m *Claim_SpecialCondition_Value) GetValue() isClaim_SpecialCondition_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Claim_SpecialCondition_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Claim_SpecialCondition_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Claim_SpecialCondition_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Claim_SpecialCondition_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Claim_SpecialCondition_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Claim_SpecialCondition_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Claim_SpecialCondition_Value) GetReference() *Reference {
	if x, ok := m.GetValue().(*Claim_SpecialCondition_Value_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Claim_SpecialCondition_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Claim_SpecialCondition_Value_OneofMarshaler, _Claim_SpecialCondition_Value_OneofUnmarshaler, _Claim_SpecialCondition_Value_OneofSizer, []interface{}{
		(*Claim_SpecialCondition_Value_StringValue)(nil),
		(*Claim_SpecialCondition_Value_Quantity)(nil),
		(*Claim_SpecialCondition_Value_Attachment)(nil),
		(*Claim_SpecialCondition_Value_Reference)(nil),
	}
}

func _Claim_SpecialCondition_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Claim_SpecialCondition_Value)
	// value
	switch x := m.Value.(type) {
	case *Claim_SpecialCondition_Value_StringValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Claim_SpecialCondition_Value_Quantity:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Claim_SpecialCondition_Value_Attachment:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Claim_SpecialCondition_Value_Reference:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Claim_SpecialCondition_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Claim_SpecialCondition_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Claim_SpecialCondition_Value)
	switch tag {
	case 1: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Claim_SpecialCondition_Value_StringValue{msg}
		return true, err
	case 2: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Claim_SpecialCondition_Value_Quantity{msg}
		return true, err
	case 3: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Claim_SpecialCondition_Value_Attachment{msg}
		return true, err
	case 4: // value.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Value = &Claim_SpecialCondition_Value_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Claim_SpecialCondition_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Claim_SpecialCondition_Value)
	// value
	switch x := m.Value.(type) {
	case *Claim_SpecialCondition_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_SpecialCondition_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_SpecialCondition_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_SpecialCondition_Value_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// List of Diagnosis
type Claim_Diagnosis struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Number to covey order of diagnosis
	Sequence  *PositiveInt                   `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Diagnosis *Claim_Diagnosis_DiagnosisType `protobuf:"bytes,5,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	// Timing or nature of the diagnosis
	Type []*CodeableConcept `protobuf:"bytes,6,rep,name=type,proto3" json:"type,omitempty"`
	// Package billing code
	PackageCode          *CodeableConcept `protobuf:"bytes,7,opt,name=package_code,json=packageCode,proto3" json:"package_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Claim_Diagnosis) Reset()         { *m = Claim_Diagnosis{} }
func (m *Claim_Diagnosis) String() string { return proto.CompactTextString(m) }
func (*Claim_Diagnosis) ProtoMessage()    {}
func (*Claim_Diagnosis) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 4}
}

func (m *Claim_Diagnosis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Diagnosis.Unmarshal(m, b)
}
func (m *Claim_Diagnosis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Diagnosis.Marshal(b, m, deterministic)
}
func (m *Claim_Diagnosis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Diagnosis.Merge(m, src)
}
func (m *Claim_Diagnosis) XXX_Size() int {
	return xxx_messageInfo_Claim_Diagnosis.Size(m)
}
func (m *Claim_Diagnosis) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Diagnosis.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Diagnosis proto.InternalMessageInfo

func (m *Claim_Diagnosis) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_Diagnosis) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_Diagnosis) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_Diagnosis) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *Claim_Diagnosis) GetDiagnosis() *Claim_Diagnosis_DiagnosisType {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *Claim_Diagnosis) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Claim_Diagnosis) GetPackageCode() *CodeableConcept {
	if m != nil {
		return m.PackageCode
	}
	return nil
}

// Patient's diagnosis
type Claim_Diagnosis_DiagnosisType struct {
	// Types that are valid to be assigned to Diagnosis:
	//	*Claim_Diagnosis_DiagnosisType_CodeableConcept
	//	*Claim_Diagnosis_DiagnosisType_Reference
	Diagnosis            isClaim_Diagnosis_DiagnosisType_Diagnosis `protobuf_oneof:"diagnosis"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *Claim_Diagnosis_DiagnosisType) Reset()         { *m = Claim_Diagnosis_DiagnosisType{} }
func (m *Claim_Diagnosis_DiagnosisType) String() string { return proto.CompactTextString(m) }
func (*Claim_Diagnosis_DiagnosisType) ProtoMessage()    {}
func (*Claim_Diagnosis_DiagnosisType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 4, 0}
}

func (m *Claim_Diagnosis_DiagnosisType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Diagnosis_DiagnosisType.Unmarshal(m, b)
}
func (m *Claim_Diagnosis_DiagnosisType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Diagnosis_DiagnosisType.Marshal(b, m, deterministic)
}
func (m *Claim_Diagnosis_DiagnosisType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Diagnosis_DiagnosisType.Merge(m, src)
}
func (m *Claim_Diagnosis_DiagnosisType) XXX_Size() int {
	return xxx_messageInfo_Claim_Diagnosis_DiagnosisType.Size(m)
}
func (m *Claim_Diagnosis_DiagnosisType) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Diagnosis_DiagnosisType.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Diagnosis_DiagnosisType proto.InternalMessageInfo

type isClaim_Diagnosis_DiagnosisType_Diagnosis interface {
	isClaim_Diagnosis_DiagnosisType_Diagnosis()
}

type Claim_Diagnosis_DiagnosisType_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Claim_Diagnosis_DiagnosisType_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Claim_Diagnosis_DiagnosisType_CodeableConcept) isClaim_Diagnosis_DiagnosisType_Diagnosis() {}

func (*Claim_Diagnosis_DiagnosisType_Reference) isClaim_Diagnosis_DiagnosisType_Diagnosis() {}

func (m *Claim_Diagnosis_DiagnosisType) GetDiagnosis() isClaim_Diagnosis_DiagnosisType_Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *Claim_Diagnosis_DiagnosisType) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetDiagnosis().(*Claim_Diagnosis_DiagnosisType_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Claim_Diagnosis_DiagnosisType) GetReference() *Reference {
	if x, ok := m.GetDiagnosis().(*Claim_Diagnosis_DiagnosisType_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Claim_Diagnosis_DiagnosisType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Claim_Diagnosis_DiagnosisType_OneofMarshaler, _Claim_Diagnosis_DiagnosisType_OneofUnmarshaler, _Claim_Diagnosis_DiagnosisType_OneofSizer, []interface{}{
		(*Claim_Diagnosis_DiagnosisType_CodeableConcept)(nil),
		(*Claim_Diagnosis_DiagnosisType_Reference)(nil),
	}
}

func _Claim_Diagnosis_DiagnosisType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Claim_Diagnosis_DiagnosisType)
	// diagnosis
	switch x := m.Diagnosis.(type) {
	case *Claim_Diagnosis_DiagnosisType_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Claim_Diagnosis_DiagnosisType_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Claim_Diagnosis_DiagnosisType.Diagnosis has unexpected type %T", x)
	}
	return nil
}

func _Claim_Diagnosis_DiagnosisType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Claim_Diagnosis_DiagnosisType)
	switch tag {
	case 1: // diagnosis.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Diagnosis = &Claim_Diagnosis_DiagnosisType_CodeableConcept{msg}
		return true, err
	case 2: // diagnosis.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Diagnosis = &Claim_Diagnosis_DiagnosisType_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Claim_Diagnosis_DiagnosisType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Claim_Diagnosis_DiagnosisType)
	// diagnosis
	switch x := m.Diagnosis.(type) {
	case *Claim_Diagnosis_DiagnosisType_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_Diagnosis_DiagnosisType_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Procedures performed
type Claim_Procedure struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Procedure sequence for reference
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// When the procedure was performed
	Date                 *DateTime                      `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Procedure            *Claim_Procedure_ProcedureType `protobuf:"bytes,6,opt,name=procedure,proto3" json:"procedure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Claim_Procedure) Reset()         { *m = Claim_Procedure{} }
func (m *Claim_Procedure) String() string { return proto.CompactTextString(m) }
func (*Claim_Procedure) ProtoMessage()    {}
func (*Claim_Procedure) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 5}
}

func (m *Claim_Procedure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Procedure.Unmarshal(m, b)
}
func (m *Claim_Procedure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Procedure.Marshal(b, m, deterministic)
}
func (m *Claim_Procedure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Procedure.Merge(m, src)
}
func (m *Claim_Procedure) XXX_Size() int {
	return xxx_messageInfo_Claim_Procedure.Size(m)
}
func (m *Claim_Procedure) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Procedure.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Procedure proto.InternalMessageInfo

func (m *Claim_Procedure) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_Procedure) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_Procedure) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_Procedure) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *Claim_Procedure) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Claim_Procedure) GetProcedure() *Claim_Procedure_ProcedureType {
	if m != nil {
		return m.Procedure
	}
	return nil
}

// Patient's list of procedures performed
type Claim_Procedure_ProcedureType struct {
	// Types that are valid to be assigned to Procedure:
	//	*Claim_Procedure_ProcedureType_CodeableConcept
	//	*Claim_Procedure_ProcedureType_Reference
	Procedure            isClaim_Procedure_ProcedureType_Procedure `protobuf_oneof:"procedure"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *Claim_Procedure_ProcedureType) Reset()         { *m = Claim_Procedure_ProcedureType{} }
func (m *Claim_Procedure_ProcedureType) String() string { return proto.CompactTextString(m) }
func (*Claim_Procedure_ProcedureType) ProtoMessage()    {}
func (*Claim_Procedure_ProcedureType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 5, 0}
}

func (m *Claim_Procedure_ProcedureType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Procedure_ProcedureType.Unmarshal(m, b)
}
func (m *Claim_Procedure_ProcedureType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Procedure_ProcedureType.Marshal(b, m, deterministic)
}
func (m *Claim_Procedure_ProcedureType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Procedure_ProcedureType.Merge(m, src)
}
func (m *Claim_Procedure_ProcedureType) XXX_Size() int {
	return xxx_messageInfo_Claim_Procedure_ProcedureType.Size(m)
}
func (m *Claim_Procedure_ProcedureType) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Procedure_ProcedureType.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Procedure_ProcedureType proto.InternalMessageInfo

type isClaim_Procedure_ProcedureType_Procedure interface {
	isClaim_Procedure_ProcedureType_Procedure()
}

type Claim_Procedure_ProcedureType_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Claim_Procedure_ProcedureType_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Claim_Procedure_ProcedureType_CodeableConcept) isClaim_Procedure_ProcedureType_Procedure() {}

func (*Claim_Procedure_ProcedureType_Reference) isClaim_Procedure_ProcedureType_Procedure() {}

func (m *Claim_Procedure_ProcedureType) GetProcedure() isClaim_Procedure_ProcedureType_Procedure {
	if m != nil {
		return m.Procedure
	}
	return nil
}

func (m *Claim_Procedure_ProcedureType) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetProcedure().(*Claim_Procedure_ProcedureType_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Claim_Procedure_ProcedureType) GetReference() *Reference {
	if x, ok := m.GetProcedure().(*Claim_Procedure_ProcedureType_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Claim_Procedure_ProcedureType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Claim_Procedure_ProcedureType_OneofMarshaler, _Claim_Procedure_ProcedureType_OneofUnmarshaler, _Claim_Procedure_ProcedureType_OneofSizer, []interface{}{
		(*Claim_Procedure_ProcedureType_CodeableConcept)(nil),
		(*Claim_Procedure_ProcedureType_Reference)(nil),
	}
}

func _Claim_Procedure_ProcedureType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Claim_Procedure_ProcedureType)
	// procedure
	switch x := m.Procedure.(type) {
	case *Claim_Procedure_ProcedureType_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Claim_Procedure_ProcedureType_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Claim_Procedure_ProcedureType.Procedure has unexpected type %T", x)
	}
	return nil
}

func _Claim_Procedure_ProcedureType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Claim_Procedure_ProcedureType)
	switch tag {
	case 1: // procedure.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Procedure = &Claim_Procedure_ProcedureType_CodeableConcept{msg}
		return true, err
	case 2: // procedure.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Procedure = &Claim_Procedure_ProcedureType_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Claim_Procedure_ProcedureType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Claim_Procedure_ProcedureType)
	// procedure
	switch x := m.Procedure.(type) {
	case *Claim_Procedure_ProcedureType_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_Procedure_ProcedureType_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Insurance or medical plan
type Claim_Insurance struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance identifier
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Is the focal Coverage
	Focal *Boolean `protobuf:"bytes,5,opt,name=focal,proto3" json:"focal,omitempty"`
	// Insurance information
	Coverage *Reference `protobuf:"bytes,6,opt,name=coverage,proto3" json:"coverage,omitempty"`
	// Business agreement
	BusinessArrangement *String `protobuf:"bytes,7,opt,name=business_arrangement,json=businessArrangement,proto3" json:"business_arrangement,omitempty"`
	// Pre-Authorization/Determination Reference
	PreAuthRef []*String `protobuf:"bytes,8,rep,name=pre_auth_ref,json=preAuthRef,proto3" json:"pre_auth_ref,omitempty"`
	// Adjudication results
	ClaimResponse        *Reference `protobuf:"bytes,9,opt,name=claim_response,json=claimResponse,proto3" json:"claim_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Claim_Insurance) Reset()         { *m = Claim_Insurance{} }
func (m *Claim_Insurance) String() string { return proto.CompactTextString(m) }
func (*Claim_Insurance) ProtoMessage()    {}
func (*Claim_Insurance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 6}
}

func (m *Claim_Insurance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Insurance.Unmarshal(m, b)
}
func (m *Claim_Insurance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Insurance.Marshal(b, m, deterministic)
}
func (m *Claim_Insurance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Insurance.Merge(m, src)
}
func (m *Claim_Insurance) XXX_Size() int {
	return xxx_messageInfo_Claim_Insurance.Size(m)
}
func (m *Claim_Insurance) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Insurance.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Insurance proto.InternalMessageInfo

func (m *Claim_Insurance) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_Insurance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_Insurance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_Insurance) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *Claim_Insurance) GetFocal() *Boolean {
	if m != nil {
		return m.Focal
	}
	return nil
}

func (m *Claim_Insurance) GetCoverage() *Reference {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *Claim_Insurance) GetBusinessArrangement() *String {
	if m != nil {
		return m.BusinessArrangement
	}
	return nil
}

func (m *Claim_Insurance) GetPreAuthRef() []*String {
	if m != nil {
		return m.PreAuthRef
	}
	return nil
}

func (m *Claim_Insurance) GetClaimResponse() *Reference {
	if m != nil {
		return m.ClaimResponse
	}
	return nil
}

// Details about an accident
type Claim_Accident struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// When the accident occurred
	// see information codes
	// see information codes
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	// The nature of the accident
	Type                 *CodeableConcept         `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Location             *Claim_Accident_Location `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Claim_Accident) Reset()         { *m = Claim_Accident{} }
func (m *Claim_Accident) String() string { return proto.CompactTextString(m) }
func (*Claim_Accident) ProtoMessage()    {}
func (*Claim_Accident) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 7}
}

func (m *Claim_Accident) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Accident.Unmarshal(m, b)
}
func (m *Claim_Accident) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Accident.Marshal(b, m, deterministic)
}
func (m *Claim_Accident) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Accident.Merge(m, src)
}
func (m *Claim_Accident) XXX_Size() int {
	return xxx_messageInfo_Claim_Accident.Size(m)
}
func (m *Claim_Accident) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Accident.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Accident proto.InternalMessageInfo

func (m *Claim_Accident) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_Accident) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_Accident) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_Accident) GetDate() *Date {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Claim_Accident) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Claim_Accident) GetLocation() *Claim_Accident_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

// Accident Place
type Claim_Accident_Location struct {
	// Types that are valid to be assigned to Location:
	//	*Claim_Accident_Location_Address
	//	*Claim_Accident_Location_Reference
	Location             isClaim_Accident_Location_Location `protobuf_oneof:"location"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Claim_Accident_Location) Reset()         { *m = Claim_Accident_Location{} }
func (m *Claim_Accident_Location) String() string { return proto.CompactTextString(m) }
func (*Claim_Accident_Location) ProtoMessage()    {}
func (*Claim_Accident_Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 7, 0}
}

func (m *Claim_Accident_Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Accident_Location.Unmarshal(m, b)
}
func (m *Claim_Accident_Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Accident_Location.Marshal(b, m, deterministic)
}
func (m *Claim_Accident_Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Accident_Location.Merge(m, src)
}
func (m *Claim_Accident_Location) XXX_Size() int {
	return xxx_messageInfo_Claim_Accident_Location.Size(m)
}
func (m *Claim_Accident_Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Accident_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Accident_Location proto.InternalMessageInfo

type isClaim_Accident_Location_Location interface {
	isClaim_Accident_Location_Location()
}

type Claim_Accident_Location_Address struct {
	Address *Address `protobuf:"bytes,1,opt,name=address,proto3,oneof"`
}

type Claim_Accident_Location_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Claim_Accident_Location_Address) isClaim_Accident_Location_Location() {}

func (*Claim_Accident_Location_Reference) isClaim_Accident_Location_Location() {}

func (m *Claim_Accident_Location) GetLocation() isClaim_Accident_Location_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Claim_Accident_Location) GetAddress() *Address {
	if x, ok := m.GetLocation().(*Claim_Accident_Location_Address); ok {
		return x.Address
	}
	return nil
}

func (m *Claim_Accident_Location) GetReference() *Reference {
	if x, ok := m.GetLocation().(*Claim_Accident_Location_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Claim_Accident_Location) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Claim_Accident_Location_OneofMarshaler, _Claim_Accident_Location_OneofUnmarshaler, _Claim_Accident_Location_OneofSizer, []interface{}{
		(*Claim_Accident_Location_Address)(nil),
		(*Claim_Accident_Location_Reference)(nil),
	}
}

func _Claim_Accident_Location_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Claim_Accident_Location)
	// location
	switch x := m.Location.(type) {
	case *Claim_Accident_Location_Address:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *Claim_Accident_Location_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Claim_Accident_Location.Location has unexpected type %T", x)
	}
	return nil
}

func _Claim_Accident_Location_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Claim_Accident_Location)
	switch tag {
	case 1: // location.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.Location = &Claim_Accident_Location_Address{msg}
		return true, err
	case 2: // location.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Location = &Claim_Accident_Location_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Claim_Accident_Location_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Claim_Accident_Location)
	// location
	switch x := m.Location.(type) {
	case *Claim_Accident_Location_Address:
		s := proto.Size(x.Address)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_Accident_Location_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Goods and Services
type Claim_Item struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Applicable careTeam members
	CareTeamLinkId []*PositiveInt `protobuf:"bytes,5,rep,name=care_team_link_id,json=careTeamLinkId,proto3" json:"care_team_link_id,omitempty"`
	// Applicable diagnoses
	DiagnosisLinkId []*PositiveInt `protobuf:"bytes,6,rep,name=diagnosis_link_id,json=diagnosisLinkId,proto3" json:"diagnosis_link_id,omitempty"`
	// Applicable procedures
	ProcedureLinkId []*PositiveInt `protobuf:"bytes,7,rep,name=procedure_link_id,json=procedureLinkId,proto3" json:"procedure_link_id,omitempty"`
	// Applicable exception and supporting information
	InformationLinkId []*PositiveInt `protobuf:"bytes,8,rep,name=information_link_id,json=informationLinkId,proto3" json:"information_link_id,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,9,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,10,opt,name=category,proto3" json:"category,omitempty"`
	// Billing Code
	Service *CodeableConcept `protobuf:"bytes,11,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,12,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Program specific reason for item inclusion
	ProgramCode []*CodeableConcept   `protobuf:"bytes,13,rep,name=program_code,json=programCode,proto3" json:"program_code,omitempty"`
	Serviced    *Claim_Item_Serviced `protobuf:"bytes,14,opt,name=serviced,proto3" json:"serviced,omitempty"`
	Location    *Claim_Item_Location `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	// Count of Products or Services
	Quantity *SimpleQuantity `protobuf:"bytes,16,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Fee, charge or cost per point
	UnitPrice *Money `protobuf:"bytes,17,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// Price scaling factor
	Factor *Decimal `protobuf:"bytes,18,opt,name=factor,proto3" json:"factor,omitempty"`
	// Total item cost
	Net *Money `protobuf:"bytes,19,opt,name=net,proto3" json:"net,omitempty"`
	// Unique Device Identifier
	Udi []*Reference `protobuf:"bytes,20,rep,name=udi,proto3" json:"udi,omitempty"`
	// Service Location
	BodySite *CodeableConcept `protobuf:"bytes,21,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Service Sub-location
	SubSite []*CodeableConcept `protobuf:"bytes,22,rep,name=sub_site,json=subSite,proto3" json:"sub_site,omitempty"`
	// Encounters related to this billed item
	Encounter            []*Reference         `protobuf:"bytes,23,rep,name=encounter,proto3" json:"encounter,omitempty"`
	Detail               []*Claim_Item_Detail `protobuf:"bytes,24,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Claim_Item) Reset()         { *m = Claim_Item{} }
func (m *Claim_Item) String() string { return proto.CompactTextString(m) }
func (*Claim_Item) ProtoMessage()    {}
func (*Claim_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 8}
}

func (m *Claim_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Item.Unmarshal(m, b)
}
func (m *Claim_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Item.Marshal(b, m, deterministic)
}
func (m *Claim_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Item.Merge(m, src)
}
func (m *Claim_Item) XXX_Size() int {
	return xxx_messageInfo_Claim_Item.Size(m)
}
func (m *Claim_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Item proto.InternalMessageInfo

func (m *Claim_Item) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_Item) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_Item) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_Item) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *Claim_Item) GetCareTeamLinkId() []*PositiveInt {
	if m != nil {
		return m.CareTeamLinkId
	}
	return nil
}

func (m *Claim_Item) GetDiagnosisLinkId() []*PositiveInt {
	if m != nil {
		return m.DiagnosisLinkId
	}
	return nil
}

func (m *Claim_Item) GetProcedureLinkId() []*PositiveInt {
	if m != nil {
		return m.ProcedureLinkId
	}
	return nil
}

func (m *Claim_Item) GetInformationLinkId() []*PositiveInt {
	if m != nil {
		return m.InformationLinkId
	}
	return nil
}

func (m *Claim_Item) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *Claim_Item) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Claim_Item) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Claim_Item) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *Claim_Item) GetProgramCode() []*CodeableConcept {
	if m != nil {
		return m.ProgramCode
	}
	return nil
}

func (m *Claim_Item) GetServiced() *Claim_Item_Serviced {
	if m != nil {
		return m.Serviced
	}
	return nil
}

func (m *Claim_Item) GetLocation() *Claim_Item_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Claim_Item) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Claim_Item) GetUnitPrice() *Money {
	if m != nil {
		return m.UnitPrice
	}
	return nil
}

func (m *Claim_Item) GetFactor() *Decimal {
	if m != nil {
		return m.Factor
	}
	return nil
}

func (m *Claim_Item) GetNet() *Money {
	if m != nil {
		return m.Net
	}
	return nil
}

func (m *Claim_Item) GetUdi() []*Reference {
	if m != nil {
		return m.Udi
	}
	return nil
}

func (m *Claim_Item) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Claim_Item) GetSubSite() []*CodeableConcept {
	if m != nil {
		return m.SubSite
	}
	return nil
}

func (m *Claim_Item) GetEncounter() []*Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *Claim_Item) GetDetail() []*Claim_Item_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Date or dates of Service
type Claim_Item_Serviced struct {
	// Types that are valid to be assigned to Serviced:
	//	*Claim_Item_Serviced_Date
	//	*Claim_Item_Serviced_Period
	Serviced             isClaim_Item_Serviced_Serviced `protobuf_oneof:"serviced"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Claim_Item_Serviced) Reset()         { *m = Claim_Item_Serviced{} }
func (m *Claim_Item_Serviced) String() string { return proto.CompactTextString(m) }
func (*Claim_Item_Serviced) ProtoMessage()    {}
func (*Claim_Item_Serviced) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 8, 0}
}

func (m *Claim_Item_Serviced) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Item_Serviced.Unmarshal(m, b)
}
func (m *Claim_Item_Serviced) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Item_Serviced.Marshal(b, m, deterministic)
}
func (m *Claim_Item_Serviced) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Item_Serviced.Merge(m, src)
}
func (m *Claim_Item_Serviced) XXX_Size() int {
	return xxx_messageInfo_Claim_Item_Serviced.Size(m)
}
func (m *Claim_Item_Serviced) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Item_Serviced.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Item_Serviced proto.InternalMessageInfo

type isClaim_Item_Serviced_Serviced interface {
	isClaim_Item_Serviced_Serviced()
}

type Claim_Item_Serviced_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type Claim_Item_Serviced_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Claim_Item_Serviced_Date) isClaim_Item_Serviced_Serviced() {}

func (*Claim_Item_Serviced_Period) isClaim_Item_Serviced_Serviced() {}

func (m *Claim_Item_Serviced) GetServiced() isClaim_Item_Serviced_Serviced {
	if m != nil {
		return m.Serviced
	}
	return nil
}

func (m *Claim_Item_Serviced) GetDate() *Date {
	if x, ok := m.GetServiced().(*Claim_Item_Serviced_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Claim_Item_Serviced) GetPeriod() *Period {
	if x, ok := m.GetServiced().(*Claim_Item_Serviced_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Claim_Item_Serviced) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Claim_Item_Serviced_OneofMarshaler, _Claim_Item_Serviced_OneofUnmarshaler, _Claim_Item_Serviced_OneofSizer, []interface{}{
		(*Claim_Item_Serviced_Date)(nil),
		(*Claim_Item_Serviced_Period)(nil),
	}
}

func _Claim_Item_Serviced_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Claim_Item_Serviced)
	// serviced
	switch x := m.Serviced.(type) {
	case *Claim_Item_Serviced_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Claim_Item_Serviced_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Claim_Item_Serviced.Serviced has unexpected type %T", x)
	}
	return nil
}

func _Claim_Item_Serviced_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Claim_Item_Serviced)
	switch tag {
	case 1: // serviced.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Serviced = &Claim_Item_Serviced_Date{msg}
		return true, err
	case 2: // serviced.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Serviced = &Claim_Item_Serviced_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Claim_Item_Serviced_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Claim_Item_Serviced)
	// serviced
	switch x := m.Serviced.(type) {
	case *Claim_Item_Serviced_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_Item_Serviced_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Place of service
type Claim_Item_Location struct {
	// Types that are valid to be assigned to Location:
	//	*Claim_Item_Location_CodeableConcept
	//	*Claim_Item_Location_Address
	//	*Claim_Item_Location_Reference
	Location             isClaim_Item_Location_Location `protobuf_oneof:"location"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Claim_Item_Location) Reset()         { *m = Claim_Item_Location{} }
func (m *Claim_Item_Location) String() string { return proto.CompactTextString(m) }
func (*Claim_Item_Location) ProtoMessage()    {}
func (*Claim_Item_Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 8, 1}
}

func (m *Claim_Item_Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Item_Location.Unmarshal(m, b)
}
func (m *Claim_Item_Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Item_Location.Marshal(b, m, deterministic)
}
func (m *Claim_Item_Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Item_Location.Merge(m, src)
}
func (m *Claim_Item_Location) XXX_Size() int {
	return xxx_messageInfo_Claim_Item_Location.Size(m)
}
func (m *Claim_Item_Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Item_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Item_Location proto.InternalMessageInfo

type isClaim_Item_Location_Location interface {
	isClaim_Item_Location_Location()
}

type Claim_Item_Location_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Claim_Item_Location_Address struct {
	Address *Address `protobuf:"bytes,2,opt,name=address,proto3,oneof"`
}

type Claim_Item_Location_Reference struct {
	Reference *Reference `protobuf:"bytes,3,opt,name=reference,proto3,oneof"`
}

func (*Claim_Item_Location_CodeableConcept) isClaim_Item_Location_Location() {}

func (*Claim_Item_Location_Address) isClaim_Item_Location_Location() {}

func (*Claim_Item_Location_Reference) isClaim_Item_Location_Location() {}

func (m *Claim_Item_Location) GetLocation() isClaim_Item_Location_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Claim_Item_Location) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetLocation().(*Claim_Item_Location_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Claim_Item_Location) GetAddress() *Address {
	if x, ok := m.GetLocation().(*Claim_Item_Location_Address); ok {
		return x.Address
	}
	return nil
}

func (m *Claim_Item_Location) GetReference() *Reference {
	if x, ok := m.GetLocation().(*Claim_Item_Location_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Claim_Item_Location) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Claim_Item_Location_OneofMarshaler, _Claim_Item_Location_OneofUnmarshaler, _Claim_Item_Location_OneofSizer, []interface{}{
		(*Claim_Item_Location_CodeableConcept)(nil),
		(*Claim_Item_Location_Address)(nil),
		(*Claim_Item_Location_Reference)(nil),
	}
}

func _Claim_Item_Location_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Claim_Item_Location)
	// location
	switch x := m.Location.(type) {
	case *Claim_Item_Location_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Claim_Item_Location_Address:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *Claim_Item_Location_Reference:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Claim_Item_Location.Location has unexpected type %T", x)
	}
	return nil
}

func _Claim_Item_Location_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Claim_Item_Location)
	switch tag {
	case 1: // location.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Location = &Claim_Item_Location_CodeableConcept{msg}
		return true, err
	case 2: // location.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.Location = &Claim_Item_Location_Address{msg}
		return true, err
	case 3: // location.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Location = &Claim_Item_Location_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Claim_Item_Location_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Claim_Item_Location)
	// location
	switch x := m.Location.(type) {
	case *Claim_Item_Location_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_Item_Location_Address:
		s := proto.Size(x.Address)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Claim_Item_Location_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Additional items
type Claim_Item_Detail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,5,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	// Billing Code
	Service *CodeableConcept `protobuf:"bytes,7,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,8,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Program specific reason for item inclusion
	ProgramCode []*CodeableConcept `protobuf:"bytes,9,rep,name=program_code,json=programCode,proto3" json:"program_code,omitempty"`
	// Count of Products or Services
	Quantity *SimpleQuantity `protobuf:"bytes,10,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Fee, charge or cost per point
	UnitPrice *Money `protobuf:"bytes,11,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// Price scaling factor
	Factor *Decimal `protobuf:"bytes,12,opt,name=factor,proto3" json:"factor,omitempty"`
	// Total additional item cost
	Net *Money `protobuf:"bytes,13,opt,name=net,proto3" json:"net,omitempty"`
	// Unique Device Identifier
	Udi                  []*Reference                   `protobuf:"bytes,14,rep,name=udi,proto3" json:"udi,omitempty"`
	SubDetail            []*Claim_Item_Detail_SubDetail `protobuf:"bytes,15,rep,name=sub_detail,json=subDetail,proto3" json:"sub_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Claim_Item_Detail) Reset()         { *m = Claim_Item_Detail{} }
func (m *Claim_Item_Detail) String() string { return proto.CompactTextString(m) }
func (*Claim_Item_Detail) ProtoMessage()    {}
func (*Claim_Item_Detail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 8, 2}
}

func (m *Claim_Item_Detail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Item_Detail.Unmarshal(m, b)
}
func (m *Claim_Item_Detail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Item_Detail.Marshal(b, m, deterministic)
}
func (m *Claim_Item_Detail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Item_Detail.Merge(m, src)
}
func (m *Claim_Item_Detail) XXX_Size() int {
	return xxx_messageInfo_Claim_Item_Detail.Size(m)
}
func (m *Claim_Item_Detail) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Item_Detail.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Item_Detail proto.InternalMessageInfo

func (m *Claim_Item_Detail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_Item_Detail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_Item_Detail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_Item_Detail) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *Claim_Item_Detail) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *Claim_Item_Detail) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Claim_Item_Detail) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Claim_Item_Detail) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *Claim_Item_Detail) GetProgramCode() []*CodeableConcept {
	if m != nil {
		return m.ProgramCode
	}
	return nil
}

func (m *Claim_Item_Detail) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Claim_Item_Detail) GetUnitPrice() *Money {
	if m != nil {
		return m.UnitPrice
	}
	return nil
}

func (m *Claim_Item_Detail) GetFactor() *Decimal {
	if m != nil {
		return m.Factor
	}
	return nil
}

func (m *Claim_Item_Detail) GetNet() *Money {
	if m != nil {
		return m.Net
	}
	return nil
}

func (m *Claim_Item_Detail) GetUdi() []*Reference {
	if m != nil {
		return m.Udi
	}
	return nil
}

func (m *Claim_Item_Detail) GetSubDetail() []*Claim_Item_Detail_SubDetail {
	if m != nil {
		return m.SubDetail
	}
	return nil
}

// Additional items
type Claim_Item_Detail_SubDetail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,5,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	// Billing Code
	Service *CodeableConcept `protobuf:"bytes,7,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,8,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Program specific reason for item inclusion
	ProgramCode []*CodeableConcept `protobuf:"bytes,9,rep,name=program_code,json=programCode,proto3" json:"program_code,omitempty"`
	// Count of Products or Services
	Quantity *SimpleQuantity `protobuf:"bytes,10,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Fee, charge or cost per point
	UnitPrice *Money `protobuf:"bytes,11,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// Price scaling factor
	Factor *Decimal `protobuf:"bytes,12,opt,name=factor,proto3" json:"factor,omitempty"`
	// Net additional item cost
	Net *Money `protobuf:"bytes,13,opt,name=net,proto3" json:"net,omitempty"`
	// Unique Device Identifier
	Udi                  []*Reference `protobuf:"bytes,14,rep,name=udi,proto3" json:"udi,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Claim_Item_Detail_SubDetail) Reset()         { *m = Claim_Item_Detail_SubDetail{} }
func (m *Claim_Item_Detail_SubDetail) String() string { return proto.CompactTextString(m) }
func (*Claim_Item_Detail_SubDetail) ProtoMessage()    {}
func (*Claim_Item_Detail_SubDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{15, 8, 2, 0}
}

func (m *Claim_Item_Detail_SubDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim_Item_Detail_SubDetail.Unmarshal(m, b)
}
func (m *Claim_Item_Detail_SubDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim_Item_Detail_SubDetail.Marshal(b, m, deterministic)
}
func (m *Claim_Item_Detail_SubDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim_Item_Detail_SubDetail.Merge(m, src)
}
func (m *Claim_Item_Detail_SubDetail) XXX_Size() int {
	return xxx_messageInfo_Claim_Item_Detail_SubDetail.Size(m)
}
func (m *Claim_Item_Detail_SubDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim_Item_Detail_SubDetail.DiscardUnknown(m)
}

var xxx_messageInfo_Claim_Item_Detail_SubDetail proto.InternalMessageInfo

func (m *Claim_Item_Detail_SubDetail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetProgramCode() []*CodeableConcept {
	if m != nil {
		return m.ProgramCode
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetUnitPrice() *Money {
	if m != nil {
		return m.UnitPrice
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetFactor() *Decimal {
	if m != nil {
		return m.Factor
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetNet() *Money {
	if m != nil {
		return m.Net
	}
	return nil
}

func (m *Claim_Item_Detail_SubDetail) GetUdi() []*Reference {
	if m != nil {
		return m.Udi
	}
	return nil
}

// Auto-generated from StructureDefinition for ClaimResponse, last updated
// 2017-04-19T07:44:43.294+10:00. Remittance resource. See
// http://hl7.org/fhir/StructureDefinition/ClaimResponse
type ClaimResponse struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Response  number
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// The subject of the Products and Services
	Patient *Reference `protobuf:"bytes,11,opt,name=patient,proto3" json:"patient,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	// Insurance issuing organization
	Insurer *Reference `protobuf:"bytes,13,opt,name=insurer,proto3" json:"insurer,omitempty"`
	// Responsible practitioner
	RequestProvider *Reference `protobuf:"bytes,14,opt,name=request_provider,json=requestProvider,proto3" json:"request_provider,omitempty"`
	// Responsible organization
	RequestOrganization *Reference `protobuf:"bytes,15,opt,name=request_organization,json=requestOrganization,proto3" json:"request_organization,omitempty"`
	// Id of resource triggering adjudication
	Request *Reference `protobuf:"bytes,16,opt,name=request,proto3" json:"request,omitempty"`
	// complete | error | partial
	Outcome *CodeableConcept `protobuf:"bytes,17,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Disposition Message
	Disposition *String `protobuf:"bytes,18,opt,name=disposition,proto3" json:"disposition,omitempty"`
	// Party to be paid any benefits payable
	PayeeType *CodeableConcept           `protobuf:"bytes,19,opt,name=payee_type,json=payeeType,proto3" json:"payee_type,omitempty"`
	Item      []*ClaimResponse_Item      `protobuf:"bytes,20,rep,name=item,proto3" json:"item,omitempty"`
	AddItem   []*ClaimResponse_AddedItem `protobuf:"bytes,21,rep,name=add_item,json=addItem,proto3" json:"add_item,omitempty"`
	Error     []*ClaimResponse_Error     `protobuf:"bytes,22,rep,name=error,proto3" json:"error,omitempty"`
	// Total Cost of service from the Claim
	TotalCost *Money `protobuf:"bytes,23,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	// Unallocated deductible
	UnallocDeductable *Money `protobuf:"bytes,24,opt,name=unalloc_deductable,json=unallocDeductable,proto3" json:"unalloc_deductable,omitempty"`
	// Total benefit payable for the Claim
	TotalBenefit *Money                 `protobuf:"bytes,25,opt,name=total_benefit,json=totalBenefit,proto3" json:"total_benefit,omitempty"`
	Payment      *ClaimResponse_Payment `protobuf:"bytes,26,opt,name=payment,proto3" json:"payment,omitempty"`
	// Funds reserved status
	Reserved *Coding `protobuf:"bytes,27,opt,name=reserved,proto3" json:"reserved,omitempty"`
	// Printed Form Identifier
	Form        *CodeableConcept      `protobuf:"bytes,28,opt,name=form,proto3" json:"form,omitempty"`
	ProcessNote []*ClaimResponse_Note `protobuf:"bytes,29,rep,name=process_note,json=processNote,proto3" json:"process_note,omitempty"`
	// Request for additional information
	CommunicationRequest []*Reference               `protobuf:"bytes,30,rep,name=communication_request,json=communicationRequest,proto3" json:"communication_request,omitempty"`
	Insurance            []*ClaimResponse_Insurance `protobuf:"bytes,31,rep,name=insurance,proto3" json:"insurance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ClaimResponse) Reset()         { *m = ClaimResponse{} }
func (m *ClaimResponse) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse) ProtoMessage()    {}
func (*ClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16}
}

func (m *ClaimResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse.Unmarshal(m, b)
}
func (m *ClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse.Marshal(b, m, deterministic)
}
func (m *ClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse.Merge(m, src)
}
func (m *ClaimResponse) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse.Size(m)
}
func (m *ClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse proto.InternalMessageInfo

func (m *ClaimResponse) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ClaimResponse) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ClaimResponse) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ClaimResponse) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ClaimResponse) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ClaimResponse) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ClaimResponse) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ClaimResponse) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *ClaimResponse) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ClaimResponse) GetInsurer() *Reference {
	if m != nil {
		return m.Insurer
	}
	return nil
}

func (m *ClaimResponse) GetRequestProvider() *Reference {
	if m != nil {
		return m.RequestProvider
	}
	return nil
}

func (m *ClaimResponse) GetRequestOrganization() *Reference {
	if m != nil {
		return m.RequestOrganization
	}
	return nil
}

func (m *ClaimResponse) GetRequest() *Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ClaimResponse) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *ClaimResponse) GetDisposition() *String {
	if m != nil {
		return m.Disposition
	}
	return nil
}

func (m *ClaimResponse) GetPayeeType() *CodeableConcept {
	if m != nil {
		return m.PayeeType
	}
	return nil
}

func (m *ClaimResponse) GetItem() []*ClaimResponse_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ClaimResponse) GetAddItem() []*ClaimResponse_AddedItem {
	if m != nil {
		return m.AddItem
	}
	return nil
}

func (m *ClaimResponse) GetError() []*ClaimResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ClaimResponse) GetTotalCost() *Money {
	if m != nil {
		return m.TotalCost
	}
	return nil
}

func (m *ClaimResponse) GetUnallocDeductable() *Money {
	if m != nil {
		return m.UnallocDeductable
	}
	return nil
}

func (m *ClaimResponse) GetTotalBenefit() *Money {
	if m != nil {
		return m.TotalBenefit
	}
	return nil
}

func (m *ClaimResponse) GetPayment() *ClaimResponse_Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (m *ClaimResponse) GetReserved() *Coding {
	if m != nil {
		return m.Reserved
	}
	return nil
}

func (m *ClaimResponse) GetForm() *CodeableConcept {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *ClaimResponse) GetProcessNote() []*ClaimResponse_Note {
	if m != nil {
		return m.ProcessNote
	}
	return nil
}

func (m *ClaimResponse) GetCommunicationRequest() []*Reference {
	if m != nil {
		return m.CommunicationRequest
	}
	return nil
}

func (m *ClaimResponse) GetInsurance() []*ClaimResponse_Insurance {
	if m != nil {
		return m.Insurance
	}
	return nil
}

// Line items
type ClaimResponse_Item struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	SequenceLinkId *PositiveInt `protobuf:"bytes,4,opt,name=sequence_link_id,json=sequenceLinkId,proto3" json:"sequence_link_id,omitempty"`
	// List of note numbers which apply
	NoteNumber           []*PositiveInt                     `protobuf:"bytes,5,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	Adjudication         []*ClaimResponse_Item_Adjudication `protobuf:"bytes,6,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	Detail               []*ClaimResponse_Item_ItemDetail   `protobuf:"bytes,7,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ClaimResponse_Item) Reset()         { *m = ClaimResponse_Item{} }
func (m *ClaimResponse_Item) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_Item) ProtoMessage()    {}
func (*ClaimResponse_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 0}
}

func (m *ClaimResponse_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_Item.Unmarshal(m, b)
}
func (m *ClaimResponse_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_Item.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_Item.Merge(m, src)
}
func (m *ClaimResponse_Item) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_Item.Size(m)
}
func (m *ClaimResponse_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_Item.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_Item proto.InternalMessageInfo

func (m *ClaimResponse_Item) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_Item) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_Item) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_Item) GetSequenceLinkId() *PositiveInt {
	if m != nil {
		return m.SequenceLinkId
	}
	return nil
}

func (m *ClaimResponse_Item) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ClaimResponse_Item) GetAdjudication() []*ClaimResponse_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

func (m *ClaimResponse_Item) GetDetail() []*ClaimResponse_Item_ItemDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Adjudication details
type ClaimResponse_Item_Adjudication struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Adjudication category such as co-pay, eligible, benefit, etc.
	Category *CodeableConcept `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// Explanation of Adjudication outcome
	Reason *CodeableConcept `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	// Monetary amount
	Amount *Money `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	// Non-monetary value
	Value                *Decimal `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClaimResponse_Item_Adjudication) Reset()         { *m = ClaimResponse_Item_Adjudication{} }
func (m *ClaimResponse_Item_Adjudication) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_Item_Adjudication) ProtoMessage()    {}
func (*ClaimResponse_Item_Adjudication) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 0, 0}
}

func (m *ClaimResponse_Item_Adjudication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_Item_Adjudication.Unmarshal(m, b)
}
func (m *ClaimResponse_Item_Adjudication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_Item_Adjudication.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_Item_Adjudication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_Item_Adjudication.Merge(m, src)
}
func (m *ClaimResponse_Item_Adjudication) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_Item_Adjudication.Size(m)
}
func (m *ClaimResponse_Item_Adjudication) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_Item_Adjudication.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_Item_Adjudication proto.InternalMessageInfo

func (m *ClaimResponse_Item_Adjudication) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_Item_Adjudication) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_Item_Adjudication) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_Item_Adjudication) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ClaimResponse_Item_Adjudication) GetReason() *CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *ClaimResponse_Item_Adjudication) GetAmount() *Money {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ClaimResponse_Item_Adjudication) GetValue() *Decimal {
	if m != nil {
		return m.Value
	}
	return nil
}

// Detail line items
type ClaimResponse_Item_ItemDetail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	SequenceLinkId *PositiveInt `protobuf:"bytes,4,opt,name=sequence_link_id,json=sequenceLinkId,proto3" json:"sequence_link_id,omitempty"`
	// List of note numbers which apply
	NoteNumber []*PositiveInt `protobuf:"bytes,5,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	// Detail level adjudication details
	Adjudication         []*ClaimResponse_Item_Adjudication         `protobuf:"bytes,6,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	SubDetail            []*ClaimResponse_Item_ItemDetail_SubDetail `protobuf:"bytes,7,rep,name=sub_detail,json=subDetail,proto3" json:"sub_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *ClaimResponse_Item_ItemDetail) Reset()         { *m = ClaimResponse_Item_ItemDetail{} }
func (m *ClaimResponse_Item_ItemDetail) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_Item_ItemDetail) ProtoMessage()    {}
func (*ClaimResponse_Item_ItemDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 0, 1}
}

func (m *ClaimResponse_Item_ItemDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_Item_ItemDetail.Unmarshal(m, b)
}
func (m *ClaimResponse_Item_ItemDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_Item_ItemDetail.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_Item_ItemDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_Item_ItemDetail.Merge(m, src)
}
func (m *ClaimResponse_Item_ItemDetail) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_Item_ItemDetail.Size(m)
}
func (m *ClaimResponse_Item_ItemDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_Item_ItemDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_Item_ItemDetail proto.InternalMessageInfo

func (m *ClaimResponse_Item_ItemDetail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail) GetSequenceLinkId() *PositiveInt {
	if m != nil {
		return m.SequenceLinkId
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail) GetAdjudication() []*ClaimResponse_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail) GetSubDetail() []*ClaimResponse_Item_ItemDetail_SubDetail {
	if m != nil {
		return m.SubDetail
	}
	return nil
}

// Subdetail line items
type ClaimResponse_Item_ItemDetail_SubDetail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	SequenceLinkId *PositiveInt `protobuf:"bytes,4,opt,name=sequence_link_id,json=sequenceLinkId,proto3" json:"sequence_link_id,omitempty"`
	// List of note numbers which apply
	NoteNumber []*PositiveInt `protobuf:"bytes,5,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	// Subdetail level adjudication details
	Adjudication         []*ClaimResponse_Item_Adjudication `protobuf:"bytes,6,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ClaimResponse_Item_ItemDetail_SubDetail) Reset() {
	*m = ClaimResponse_Item_ItemDetail_SubDetail{}
}
func (m *ClaimResponse_Item_ItemDetail_SubDetail) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_Item_ItemDetail_SubDetail) ProtoMessage()    {}
func (*ClaimResponse_Item_ItemDetail_SubDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 0, 1, 0}
}

func (m *ClaimResponse_Item_ItemDetail_SubDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_Item_ItemDetail_SubDetail.Unmarshal(m, b)
}
func (m *ClaimResponse_Item_ItemDetail_SubDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_Item_ItemDetail_SubDetail.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_Item_ItemDetail_SubDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_Item_ItemDetail_SubDetail.Merge(m, src)
}
func (m *ClaimResponse_Item_ItemDetail_SubDetail) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_Item_ItemDetail_SubDetail.Size(m)
}
func (m *ClaimResponse_Item_ItemDetail_SubDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_Item_ItemDetail_SubDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_Item_ItemDetail_SubDetail proto.InternalMessageInfo

func (m *ClaimResponse_Item_ItemDetail_SubDetail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail_SubDetail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail_SubDetail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail_SubDetail) GetSequenceLinkId() *PositiveInt {
	if m != nil {
		return m.SequenceLinkId
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail_SubDetail) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ClaimResponse_Item_ItemDetail_SubDetail) GetAdjudication() []*ClaimResponse_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

// Insurer added line items
type ClaimResponse_AddedItem struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instances
	SequenceLinkId []*PositiveInt `protobuf:"bytes,4,rep,name=sequence_link_id,json=sequenceLinkId,proto3" json:"sequence_link_id,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,5,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	// Group, Service or Product
	Service *CodeableConcept `protobuf:"bytes,7,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,8,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Professional fee or Product charge
	Fee *Money `protobuf:"bytes,9,opt,name=fee,proto3" json:"fee,omitempty"`
	// List of note numbers which apply
	NoteNumber []*PositiveInt `protobuf:"bytes,10,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	// Added items adjudication
	Adjudication         []*ClaimResponse_Item_Adjudication          `protobuf:"bytes,11,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	Detail               []*ClaimResponse_AddedItem_AddedItemsDetail `protobuf:"bytes,12,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *ClaimResponse_AddedItem) Reset()         { *m = ClaimResponse_AddedItem{} }
func (m *ClaimResponse_AddedItem) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_AddedItem) ProtoMessage()    {}
func (*ClaimResponse_AddedItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 1}
}

func (m *ClaimResponse_AddedItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_AddedItem.Unmarshal(m, b)
}
func (m *ClaimResponse_AddedItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_AddedItem.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_AddedItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_AddedItem.Merge(m, src)
}
func (m *ClaimResponse_AddedItem) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_AddedItem.Size(m)
}
func (m *ClaimResponse_AddedItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_AddedItem.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_AddedItem proto.InternalMessageInfo

func (m *ClaimResponse_AddedItem) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetSequenceLinkId() []*PositiveInt {
	if m != nil {
		return m.SequenceLinkId
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetFee() *Money {
	if m != nil {
		return m.Fee
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetAdjudication() []*ClaimResponse_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

func (m *ClaimResponse_AddedItem) GetDetail() []*ClaimResponse_AddedItem_AddedItemsDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Added items details
type ClaimResponse_AddedItem_AddedItemsDetail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,4,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	// Service or Product
	Service *CodeableConcept `protobuf:"bytes,6,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,7,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Professional fee or Product charge
	Fee *Money `protobuf:"bytes,8,opt,name=fee,proto3" json:"fee,omitempty"`
	// List of note numbers which apply
	NoteNumber []*PositiveInt `protobuf:"bytes,9,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	// Added items detail adjudication
	Adjudication         []*ClaimResponse_Item_Adjudication `protobuf:"bytes,10,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) Reset() {
	*m = ClaimResponse_AddedItem_AddedItemsDetail{}
}
func (m *ClaimResponse_AddedItem_AddedItemsDetail) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_AddedItem_AddedItemsDetail) ProtoMessage()    {}
func (*ClaimResponse_AddedItem_AddedItemsDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 1, 0}
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_AddedItem_AddedItemsDetail.Unmarshal(m, b)
}
func (m *ClaimResponse_AddedItem_AddedItemsDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_AddedItem_AddedItemsDetail.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_AddedItem_AddedItemsDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_AddedItem_AddedItemsDetail.Merge(m, src)
}
func (m *ClaimResponse_AddedItem_AddedItemsDetail) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_AddedItem_AddedItemsDetail.Size(m)
}
func (m *ClaimResponse_AddedItem_AddedItemsDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_AddedItem_AddedItemsDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_AddedItem_AddedItemsDetail proto.InternalMessageInfo

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetFee() *Money {
	if m != nil {
		return m.Fee
	}
	return nil
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ClaimResponse_AddedItem_AddedItemsDetail) GetAdjudication() []*ClaimResponse_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

// Processing errors
type ClaimResponse_Error struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Item sequence number
	SequenceLinkId *PositiveInt `protobuf:"bytes,4,opt,name=sequence_link_id,json=sequenceLinkId,proto3" json:"sequence_link_id,omitempty"`
	// Detail sequence number
	DetailSequenceLinkId *PositiveInt `protobuf:"bytes,5,opt,name=detail_sequence_link_id,json=detailSequenceLinkId,proto3" json:"detail_sequence_link_id,omitempty"`
	// Subdetail sequence number
	SubdetailSequenceLinkId *PositiveInt `protobuf:"bytes,6,opt,name=subdetail_sequence_link_id,json=subdetailSequenceLinkId,proto3" json:"subdetail_sequence_link_id,omitempty"`
	// Error code detailing processing issues
	Code                 *CodeableConcept `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ClaimResponse_Error) Reset()         { *m = ClaimResponse_Error{} }
func (m *ClaimResponse_Error) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_Error) ProtoMessage()    {}
func (*ClaimResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 2}
}

func (m *ClaimResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_Error.Unmarshal(m, b)
}
func (m *ClaimResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_Error.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_Error.Merge(m, src)
}
func (m *ClaimResponse_Error) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_Error.Size(m)
}
func (m *ClaimResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_Error proto.InternalMessageInfo

func (m *ClaimResponse_Error) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_Error) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_Error) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_Error) GetSequenceLinkId() *PositiveInt {
	if m != nil {
		return m.SequenceLinkId
	}
	return nil
}

func (m *ClaimResponse_Error) GetDetailSequenceLinkId() *PositiveInt {
	if m != nil {
		return m.DetailSequenceLinkId
	}
	return nil
}

func (m *ClaimResponse_Error) GetSubdetailSequenceLinkId() *PositiveInt {
	if m != nil {
		return m.SubdetailSequenceLinkId
	}
	return nil
}

func (m *ClaimResponse_Error) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

// Payment details, if paid
type ClaimResponse_Payment struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Partial or Complete
	Type *CodeableConcept `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Payment adjustment for non-Claim issues
	Adjustment *Money `protobuf:"bytes,5,opt,name=adjustment,proto3" json:"adjustment,omitempty"`
	// Explanation for the non-claim adjustment
	AdjustmentReason *CodeableConcept `protobuf:"bytes,6,opt,name=adjustment_reason,json=adjustmentReason,proto3" json:"adjustment_reason,omitempty"`
	// Expected data of Payment
	Date *Date `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	// Payable amount after adjustment
	Amount *Money `protobuf:"bytes,8,opt,name=amount,proto3" json:"amount,omitempty"`
	// Identifier of the payment instrument
	Identifier           *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClaimResponse_Payment) Reset()         { *m = ClaimResponse_Payment{} }
func (m *ClaimResponse_Payment) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_Payment) ProtoMessage()    {}
func (*ClaimResponse_Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 3}
}

func (m *ClaimResponse_Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_Payment.Unmarshal(m, b)
}
func (m *ClaimResponse_Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_Payment.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_Payment.Merge(m, src)
}
func (m *ClaimResponse_Payment) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_Payment.Size(m)
}
func (m *ClaimResponse_Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_Payment proto.InternalMessageInfo

func (m *ClaimResponse_Payment) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_Payment) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_Payment) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_Payment) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ClaimResponse_Payment) GetAdjustment() *Money {
	if m != nil {
		return m.Adjustment
	}
	return nil
}

func (m *ClaimResponse_Payment) GetAdjustmentReason() *CodeableConcept {
	if m != nil {
		return m.AdjustmentReason
	}
	return nil
}

func (m *ClaimResponse_Payment) GetDate() *Date {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ClaimResponse_Payment) GetAmount() *Money {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ClaimResponse_Payment) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

// Processing notes
type ClaimResponse_Note struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Sequence Number for this note
	Number *PositiveInt `protobuf:"bytes,4,opt,name=number,proto3" json:"number,omitempty"`
	// display | print | printoper
	Type *CodeableConcept `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// Note explanatory text
	Text *String `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	// Language if different from the resource
	Language             *CodeableConcept `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ClaimResponse_Note) Reset()         { *m = ClaimResponse_Note{} }
func (m *ClaimResponse_Note) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_Note) ProtoMessage()    {}
func (*ClaimResponse_Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 4}
}

func (m *ClaimResponse_Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_Note.Unmarshal(m, b)
}
func (m *ClaimResponse_Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_Note.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_Note.Merge(m, src)
}
func (m *ClaimResponse_Note) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_Note.Size(m)
}
func (m *ClaimResponse_Note) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_Note.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_Note proto.InternalMessageInfo

func (m *ClaimResponse_Note) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_Note) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_Note) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_Note) GetNumber() *PositiveInt {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *ClaimResponse_Note) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ClaimResponse_Note) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ClaimResponse_Note) GetLanguage() *CodeableConcept {
	if m != nil {
		return m.Language
	}
	return nil
}

// Insurance or medical plan
type ClaimResponse_Insurance struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance identifier
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Is the focal Coverage
	Focal *Boolean `protobuf:"bytes,5,opt,name=focal,proto3" json:"focal,omitempty"`
	// Insurance information
	Coverage *Reference `protobuf:"bytes,6,opt,name=coverage,proto3" json:"coverage,omitempty"`
	// Business agreement
	BusinessArrangement *String `protobuf:"bytes,7,opt,name=business_arrangement,json=businessArrangement,proto3" json:"business_arrangement,omitempty"`
	// Pre-Authorization/Determination Reference
	PreAuthRef []*String `protobuf:"bytes,8,rep,name=pre_auth_ref,json=preAuthRef,proto3" json:"pre_auth_ref,omitempty"`
	// Adjudication results
	ClaimResponse        *Reference `protobuf:"bytes,9,opt,name=claim_response,json=claimResponse,proto3" json:"claim_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClaimResponse_Insurance) Reset()         { *m = ClaimResponse_Insurance{} }
func (m *ClaimResponse_Insurance) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse_Insurance) ProtoMessage()    {}
func (*ClaimResponse_Insurance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{16, 5}
}

func (m *ClaimResponse_Insurance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse_Insurance.Unmarshal(m, b)
}
func (m *ClaimResponse_Insurance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse_Insurance.Marshal(b, m, deterministic)
}
func (m *ClaimResponse_Insurance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse_Insurance.Merge(m, src)
}
func (m *ClaimResponse_Insurance) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse_Insurance.Size(m)
}
func (m *ClaimResponse_Insurance) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse_Insurance.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse_Insurance proto.InternalMessageInfo

func (m *ClaimResponse_Insurance) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClaimResponse_Insurance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClaimResponse_Insurance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClaimResponse_Insurance) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *ClaimResponse_Insurance) GetFocal() *Boolean {
	if m != nil {
		return m.Focal
	}
	return nil
}

func (m *ClaimResponse_Insurance) GetCoverage() *Reference {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *ClaimResponse_Insurance) GetBusinessArrangement() *String {
	if m != nil {
		return m.BusinessArrangement
	}
	return nil
}

func (m *ClaimResponse_Insurance) GetPreAuthRef() []*String {
	if m != nil {
		return m.PreAuthRef
	}
	return nil
}

func (m *ClaimResponse_Insurance) GetClaimResponse() *Reference {
	if m != nil {
		return m.ClaimResponse
	}
	return nil
}

// Auto-generated from StructureDefinition for ClinicalImpression, last updated
// 2017-04-19T07:44:43.294+10:00. A clinical assessment performed when planning
// treatments and management strategies for a patient. See
// http://hl7.org/fhir/StructureDefinition/ClinicalImpression
type ClinicalImpression struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// draft | completed | entered-in-error
	Status *ClinicalImpressionStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Kind of assessment performed
	Code *CodeableConcept `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// Why/how the assessment was performed
	Description *String `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	// Patient or group assessed
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or Episode created from
	Context   *Reference                    `protobuf:"bytes,14,opt,name=context,proto3" json:"context,omitempty"`
	Effective *ClinicalImpression_Effective `protobuf:"bytes,15,opt,name=effective,proto3" json:"effective,omitempty"`
	// When the assessment was documented
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// The clinician performing the assessment
	Assessor *Reference `protobuf:"bytes,17,opt,name=assessor,proto3" json:"assessor,omitempty"`
	// Reference to last assessment
	Previous *Reference `protobuf:"bytes,18,opt,name=previous,proto3" json:"previous,omitempty"`
	// Relevant impressions of patient state
	Problem       []*Reference                        `protobuf:"bytes,19,rep,name=problem,proto3" json:"problem,omitempty"`
	Investigation []*ClinicalImpression_Investigation `protobuf:"bytes,20,rep,name=investigation,proto3" json:"investigation,omitempty"`
	// Clinical Protocol followed
	Protocol []*Uri `protobuf:"bytes,21,rep,name=protocol,proto3" json:"protocol,omitempty"`
	// Summary of the assessment
	Summary *String                       `protobuf:"bytes,22,opt,name=summary,proto3" json:"summary,omitempty"`
	Finding []*ClinicalImpression_Finding `protobuf:"bytes,23,rep,name=finding,proto3" json:"finding,omitempty"`
	// Estimate of likely outcome
	PrognosisCodeableConcept []*CodeableConcept `protobuf:"bytes,24,rep,name=prognosis_codeable_concept,json=prognosisCodeableConcept,proto3" json:"prognosis_codeable_concept,omitempty"`
	// RiskAssessment expressing likely outcome
	PrognosisReference []*Reference `protobuf:"bytes,25,rep,name=prognosis_reference,json=prognosisReference,proto3" json:"prognosis_reference,omitempty"`
	// Action taken as part of assessment procedure
	Action []*Reference `protobuf:"bytes,26,rep,name=action,proto3" json:"action,omitempty"`
	// Comments made about the ClinicalImpression
	Note                 []*Annotation `protobuf:"bytes,27,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClinicalImpression) Reset()         { *m = ClinicalImpression{} }
func (m *ClinicalImpression) String() string { return proto.CompactTextString(m) }
func (*ClinicalImpression) ProtoMessage()    {}
func (*ClinicalImpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{17}
}

func (m *ClinicalImpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClinicalImpression.Unmarshal(m, b)
}
func (m *ClinicalImpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClinicalImpression.Marshal(b, m, deterministic)
}
func (m *ClinicalImpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClinicalImpression.Merge(m, src)
}
func (m *ClinicalImpression) XXX_Size() int {
	return xxx_messageInfo_ClinicalImpression.Size(m)
}
func (m *ClinicalImpression) XXX_DiscardUnknown() {
	xxx_messageInfo_ClinicalImpression.DiscardUnknown(m)
}

var xxx_messageInfo_ClinicalImpression proto.InternalMessageInfo

func (m *ClinicalImpression) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClinicalImpression) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ClinicalImpression) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ClinicalImpression) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ClinicalImpression) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ClinicalImpression) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ClinicalImpression) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClinicalImpression) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClinicalImpression) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ClinicalImpression) GetStatus() *ClinicalImpressionStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ClinicalImpression) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ClinicalImpression) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ClinicalImpression) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *ClinicalImpression) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ClinicalImpression) GetEffective() *ClinicalImpression_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *ClinicalImpression) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ClinicalImpression) GetAssessor() *Reference {
	if m != nil {
		return m.Assessor
	}
	return nil
}

func (m *ClinicalImpression) GetPrevious() *Reference {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *ClinicalImpression) GetProblem() []*Reference {
	if m != nil {
		return m.Problem
	}
	return nil
}

func (m *ClinicalImpression) GetInvestigation() []*ClinicalImpression_Investigation {
	if m != nil {
		return m.Investigation
	}
	return nil
}

func (m *ClinicalImpression) GetProtocol() []*Uri {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *ClinicalImpression) GetSummary() *String {
	if m != nil {
		return m.Summary
	}
	return nil
}

func (m *ClinicalImpression) GetFinding() []*ClinicalImpression_Finding {
	if m != nil {
		return m.Finding
	}
	return nil
}

func (m *ClinicalImpression) GetPrognosisCodeableConcept() []*CodeableConcept {
	if m != nil {
		return m.PrognosisCodeableConcept
	}
	return nil
}

func (m *ClinicalImpression) GetPrognosisReference() []*Reference {
	if m != nil {
		return m.PrognosisReference
	}
	return nil
}

func (m *ClinicalImpression) GetAction() []*Reference {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ClinicalImpression) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Time of assessment
type ClinicalImpression_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*ClinicalImpression_Effective_DateTime
	//	*ClinicalImpression_Effective_Period
	Effective            isClinicalImpression_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *ClinicalImpression_Effective) Reset()         { *m = ClinicalImpression_Effective{} }
func (m *ClinicalImpression_Effective) String() string { return proto.CompactTextString(m) }
func (*ClinicalImpression_Effective) ProtoMessage()    {}
func (*ClinicalImpression_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{17, 0}
}

func (m *ClinicalImpression_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClinicalImpression_Effective.Unmarshal(m, b)
}
func (m *ClinicalImpression_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClinicalImpression_Effective.Marshal(b, m, deterministic)
}
func (m *ClinicalImpression_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClinicalImpression_Effective.Merge(m, src)
}
func (m *ClinicalImpression_Effective) XXX_Size() int {
	return xxx_messageInfo_ClinicalImpression_Effective.Size(m)
}
func (m *ClinicalImpression_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_ClinicalImpression_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_ClinicalImpression_Effective proto.InternalMessageInfo

type isClinicalImpression_Effective_Effective interface {
	isClinicalImpression_Effective_Effective()
}

type ClinicalImpression_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ClinicalImpression_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*ClinicalImpression_Effective_DateTime) isClinicalImpression_Effective_Effective() {}

func (*ClinicalImpression_Effective_Period) isClinicalImpression_Effective_Effective() {}

func (m *ClinicalImpression_Effective) GetEffective() isClinicalImpression_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *ClinicalImpression_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*ClinicalImpression_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ClinicalImpression_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*ClinicalImpression_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClinicalImpression_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClinicalImpression_Effective_OneofMarshaler, _ClinicalImpression_Effective_OneofUnmarshaler, _ClinicalImpression_Effective_OneofSizer, []interface{}{
		(*ClinicalImpression_Effective_DateTime)(nil),
		(*ClinicalImpression_Effective_Period)(nil),
	}
}

func _ClinicalImpression_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClinicalImpression_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *ClinicalImpression_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ClinicalImpression_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ClinicalImpression_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _ClinicalImpression_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClinicalImpression_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &ClinicalImpression_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &ClinicalImpression_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ClinicalImpression_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClinicalImpression_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *ClinicalImpression_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClinicalImpression_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// One or more sets of investigations (signs, symptions, etc.)
type ClinicalImpression_Investigation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A name/code for the set
	Code *CodeableConcept `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Record of a specific investigation
	Item                 []*Reference `protobuf:"bytes,5,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ClinicalImpression_Investigation) Reset()         { *m = ClinicalImpression_Investigation{} }
func (m *ClinicalImpression_Investigation) String() string { return proto.CompactTextString(m) }
func (*ClinicalImpression_Investigation) ProtoMessage()    {}
func (*ClinicalImpression_Investigation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{17, 1}
}

func (m *ClinicalImpression_Investigation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClinicalImpression_Investigation.Unmarshal(m, b)
}
func (m *ClinicalImpression_Investigation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClinicalImpression_Investigation.Marshal(b, m, deterministic)
}
func (m *ClinicalImpression_Investigation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClinicalImpression_Investigation.Merge(m, src)
}
func (m *ClinicalImpression_Investigation) XXX_Size() int {
	return xxx_messageInfo_ClinicalImpression_Investigation.Size(m)
}
func (m *ClinicalImpression_Investigation) XXX_DiscardUnknown() {
	xxx_messageInfo_ClinicalImpression_Investigation.DiscardUnknown(m)
}

var xxx_messageInfo_ClinicalImpression_Investigation proto.InternalMessageInfo

func (m *ClinicalImpression_Investigation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClinicalImpression_Investigation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClinicalImpression_Investigation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClinicalImpression_Investigation) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ClinicalImpression_Investigation) GetItem() []*Reference {
	if m != nil {
		return m.Item
	}
	return nil
}

// Possible or likely findings and diagnoses
type ClinicalImpression_Finding struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                     `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Item              *ClinicalImpression_Finding_Item `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	// Which investigations support finding
	Basis                *String  `protobuf:"bytes,5,opt,name=basis,proto3" json:"basis,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClinicalImpression_Finding) Reset()         { *m = ClinicalImpression_Finding{} }
func (m *ClinicalImpression_Finding) String() string { return proto.CompactTextString(m) }
func (*ClinicalImpression_Finding) ProtoMessage()    {}
func (*ClinicalImpression_Finding) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{17, 2}
}

func (m *ClinicalImpression_Finding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClinicalImpression_Finding.Unmarshal(m, b)
}
func (m *ClinicalImpression_Finding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClinicalImpression_Finding.Marshal(b, m, deterministic)
}
func (m *ClinicalImpression_Finding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClinicalImpression_Finding.Merge(m, src)
}
func (m *ClinicalImpression_Finding) XXX_Size() int {
	return xxx_messageInfo_ClinicalImpression_Finding.Size(m)
}
func (m *ClinicalImpression_Finding) XXX_DiscardUnknown() {
	xxx_messageInfo_ClinicalImpression_Finding.DiscardUnknown(m)
}

var xxx_messageInfo_ClinicalImpression_Finding proto.InternalMessageInfo

func (m *ClinicalImpression_Finding) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClinicalImpression_Finding) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ClinicalImpression_Finding) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ClinicalImpression_Finding) GetItem() *ClinicalImpression_Finding_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ClinicalImpression_Finding) GetBasis() *String {
	if m != nil {
		return m.Basis
	}
	return nil
}

// What was found
type ClinicalImpression_Finding_Item struct {
	// Types that are valid to be assigned to Item:
	//	*ClinicalImpression_Finding_Item_CodeableConcept
	//	*ClinicalImpression_Finding_Item_Reference
	Item                 isClinicalImpression_Finding_Item_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ClinicalImpression_Finding_Item) Reset()         { *m = ClinicalImpression_Finding_Item{} }
func (m *ClinicalImpression_Finding_Item) String() string { return proto.CompactTextString(m) }
func (*ClinicalImpression_Finding_Item) ProtoMessage()    {}
func (*ClinicalImpression_Finding_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{17, 2, 0}
}

func (m *ClinicalImpression_Finding_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClinicalImpression_Finding_Item.Unmarshal(m, b)
}
func (m *ClinicalImpression_Finding_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClinicalImpression_Finding_Item.Marshal(b, m, deterministic)
}
func (m *ClinicalImpression_Finding_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClinicalImpression_Finding_Item.Merge(m, src)
}
func (m *ClinicalImpression_Finding_Item) XXX_Size() int {
	return xxx_messageInfo_ClinicalImpression_Finding_Item.Size(m)
}
func (m *ClinicalImpression_Finding_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_ClinicalImpression_Finding_Item.DiscardUnknown(m)
}

var xxx_messageInfo_ClinicalImpression_Finding_Item proto.InternalMessageInfo

type isClinicalImpression_Finding_Item_Item interface {
	isClinicalImpression_Finding_Item_Item()
}

type ClinicalImpression_Finding_Item_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ClinicalImpression_Finding_Item_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*ClinicalImpression_Finding_Item_CodeableConcept) isClinicalImpression_Finding_Item_Item() {}

func (*ClinicalImpression_Finding_Item_Reference) isClinicalImpression_Finding_Item_Item() {}

func (m *ClinicalImpression_Finding_Item) GetItem() isClinicalImpression_Finding_Item_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ClinicalImpression_Finding_Item) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetItem().(*ClinicalImpression_Finding_Item_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *ClinicalImpression_Finding_Item) GetReference() *Reference {
	if x, ok := m.GetItem().(*ClinicalImpression_Finding_Item_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClinicalImpression_Finding_Item) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClinicalImpression_Finding_Item_OneofMarshaler, _ClinicalImpression_Finding_Item_OneofUnmarshaler, _ClinicalImpression_Finding_Item_OneofSizer, []interface{}{
		(*ClinicalImpression_Finding_Item_CodeableConcept)(nil),
		(*ClinicalImpression_Finding_Item_Reference)(nil),
	}
}

func _ClinicalImpression_Finding_Item_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClinicalImpression_Finding_Item)
	// item
	switch x := m.Item.(type) {
	case *ClinicalImpression_Finding_Item_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *ClinicalImpression_Finding_Item_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ClinicalImpression_Finding_Item.Item has unexpected type %T", x)
	}
	return nil
}

func _ClinicalImpression_Finding_Item_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClinicalImpression_Finding_Item)
	switch tag {
	case 1: // item.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Item = &ClinicalImpression_Finding_Item_CodeableConcept{msg}
		return true, err
	case 2: // item.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Item = &ClinicalImpression_Finding_Item_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ClinicalImpression_Finding_Item_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClinicalImpression_Finding_Item)
	// item
	switch x := m.Item.(type) {
	case *ClinicalImpression_Finding_Item_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClinicalImpression_Finding_Item_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for CodeSystem, last updated
// 2017-04-19T07:44:43.294+10:00. A set of codes drawn from one or more code
// systems. See http://hl7.org/fhir/StructureDefinition/CodeSystem
type CodeSystem struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this code system (globally unique) (Coding.system)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the code system
	Identifier *Identifier `protobuf:"bytes,10,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the code system (Coding.version)
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this code system (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this code system (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the code system
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,20,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for code system (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,21,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this code system is defined
	Purpose *Markdown `protobuf:"bytes,22,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,23,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// If code comparison is case sensitive
	CaseSensitive *Boolean `protobuf:"bytes,24,opt,name=case_sensitive,json=caseSensitive,proto3" json:"case_sensitive,omitempty"`
	// Canonical URL for value set with entire code system
	ValueSet *Uri `protobuf:"bytes,25,opt,name=value_set,json=valueSet,proto3" json:"value_set,omitempty"`
	// grouped-by | is-a | part-of | classified-with
	HierarchyMeaning *CodeSystemHierarchyMeaningCode `protobuf:"bytes,26,opt,name=hierarchy_meaning,json=hierarchyMeaning,proto3" json:"hierarchy_meaning,omitempty"`
	// If code system defines a post-composition grammar
	Compositional *Boolean `protobuf:"bytes,27,opt,name=compositional,proto3" json:"compositional,omitempty"`
	// If definitions are not stable
	VersionNeeded *Boolean `protobuf:"bytes,28,opt,name=version_needed,json=versionNeeded,proto3" json:"version_needed,omitempty"`
	// not-present | example | fragment | complete
	Content *CodeSystemContentModeCode `protobuf:"bytes,29,opt,name=content,proto3" json:"content,omitempty"`
	// Total concepts in the code system
	Count                *UnsignedInt                    `protobuf:"bytes,30,opt,name=count,proto3" json:"count,omitempty"`
	Filter               []*CodeSystem_Filter            `protobuf:"bytes,31,rep,name=filter,proto3" json:"filter,omitempty"`
	Property             []*CodeSystem_Property          `protobuf:"bytes,32,rep,name=property,proto3" json:"property,omitempty"`
	Concept              []*CodeSystem_ConceptDefinition `protobuf:"bytes,33,rep,name=concept,proto3" json:"concept,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CodeSystem) Reset()         { *m = CodeSystem{} }
func (m *CodeSystem) String() string { return proto.CompactTextString(m) }
func (*CodeSystem) ProtoMessage()    {}
func (*CodeSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{18}
}

func (m *CodeSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeSystem.Unmarshal(m, b)
}
func (m *CodeSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeSystem.Marshal(b, m, deterministic)
}
func (m *CodeSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeSystem.Merge(m, src)
}
func (m *CodeSystem) XXX_Size() int {
	return xxx_messageInfo_CodeSystem.Size(m)
}
func (m *CodeSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeSystem.DiscardUnknown(m)
}

var xxx_messageInfo_CodeSystem proto.InternalMessageInfo

func (m *CodeSystem) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CodeSystem) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CodeSystem) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *CodeSystem) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *CodeSystem) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *CodeSystem) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *CodeSystem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CodeSystem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CodeSystem) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *CodeSystem) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *CodeSystem) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *CodeSystem) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CodeSystem) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CodeSystem) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CodeSystem) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *CodeSystem) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CodeSystem) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *CodeSystem) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *CodeSystem) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CodeSystem) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *CodeSystem) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *CodeSystem) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *CodeSystem) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *CodeSystem) GetCaseSensitive() *Boolean {
	if m != nil {
		return m.CaseSensitive
	}
	return nil
}

func (m *CodeSystem) GetValueSet() *Uri {
	if m != nil {
		return m.ValueSet
	}
	return nil
}

func (m *CodeSystem) GetHierarchyMeaning() *CodeSystemHierarchyMeaningCode {
	if m != nil {
		return m.HierarchyMeaning
	}
	return nil
}

func (m *CodeSystem) GetCompositional() *Boolean {
	if m != nil {
		return m.Compositional
	}
	return nil
}

func (m *CodeSystem) GetVersionNeeded() *Boolean {
	if m != nil {
		return m.VersionNeeded
	}
	return nil
}

func (m *CodeSystem) GetContent() *CodeSystemContentModeCode {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *CodeSystem) GetCount() *UnsignedInt {
	if m != nil {
		return m.Count
	}
	return nil
}

func (m *CodeSystem) GetFilter() []*CodeSystem_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *CodeSystem) GetProperty() []*CodeSystem_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *CodeSystem) GetConcept() []*CodeSystem_ConceptDefinition {
	if m != nil {
		return m.Concept
	}
	return nil
}

// Filter that can be used in a value set
type CodeSystem_Filter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code that identifies the filter
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// How or why the filter is used
	Description *String `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Operators that can be used with filter
	Operator []*FilterOperatorCode `protobuf:"bytes,6,rep,name=operator,proto3" json:"operator,omitempty"`
	// What to use for the value
	Value                *String  `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodeSystem_Filter) Reset()         { *m = CodeSystem_Filter{} }
func (m *CodeSystem_Filter) String() string { return proto.CompactTextString(m) }
func (*CodeSystem_Filter) ProtoMessage()    {}
func (*CodeSystem_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{18, 0}
}

func (m *CodeSystem_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeSystem_Filter.Unmarshal(m, b)
}
func (m *CodeSystem_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeSystem_Filter.Marshal(b, m, deterministic)
}
func (m *CodeSystem_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeSystem_Filter.Merge(m, src)
}
func (m *CodeSystem_Filter) XXX_Size() int {
	return xxx_messageInfo_CodeSystem_Filter.Size(m)
}
func (m *CodeSystem_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeSystem_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_CodeSystem_Filter proto.InternalMessageInfo

func (m *CodeSystem_Filter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CodeSystem_Filter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CodeSystem_Filter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CodeSystem_Filter) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CodeSystem_Filter) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CodeSystem_Filter) GetOperator() []*FilterOperatorCode {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (m *CodeSystem_Filter) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// Additional information supplied about each concept
type CodeSystem_Property struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifies the property on the concepts, and when referred to in
	// operations
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Formal identifier for the property
	Uri *Uri `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// Why the property is defined, and/or what it conveys
	Description *String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// code | Coding | string | integer | boolean | dateTime
	Type                 *PropertyTypeCode `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CodeSystem_Property) Reset()         { *m = CodeSystem_Property{} }
func (m *CodeSystem_Property) String() string { return proto.CompactTextString(m) }
func (*CodeSystem_Property) ProtoMessage()    {}
func (*CodeSystem_Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{18, 1}
}

func (m *CodeSystem_Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeSystem_Property.Unmarshal(m, b)
}
func (m *CodeSystem_Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeSystem_Property.Marshal(b, m, deterministic)
}
func (m *CodeSystem_Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeSystem_Property.Merge(m, src)
}
func (m *CodeSystem_Property) XXX_Size() int {
	return xxx_messageInfo_CodeSystem_Property.Size(m)
}
func (m *CodeSystem_Property) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeSystem_Property.DiscardUnknown(m)
}

var xxx_messageInfo_CodeSystem_Property proto.InternalMessageInfo

func (m *CodeSystem_Property) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CodeSystem_Property) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CodeSystem_Property) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CodeSystem_Property) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CodeSystem_Property) GetUri() *Uri {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *CodeSystem_Property) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CodeSystem_Property) GetType() *PropertyTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

// Concepts in the code system
type CodeSystem_ConceptDefinition struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code that identifies concept
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Text to display to the user
	Display *String `protobuf:"bytes,5,opt,name=display,proto3" json:"display,omitempty"`
	// Formal definition
	Definition  *String                                         `protobuf:"bytes,6,opt,name=definition,proto3" json:"definition,omitempty"`
	Designation []*CodeSystem_ConceptDefinition_Designation     `protobuf:"bytes,7,rep,name=designation,proto3" json:"designation,omitempty"`
	Property    []*CodeSystem_ConceptDefinition_ConceptProperty `protobuf:"bytes,8,rep,name=property,proto3" json:"property,omitempty"`
	// Child Concepts (is-a/contains/categorizes)
	Concept              []*CodeSystem_ConceptDefinition `protobuf:"bytes,9,rep,name=concept,proto3" json:"concept,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CodeSystem_ConceptDefinition) Reset()         { *m = CodeSystem_ConceptDefinition{} }
func (m *CodeSystem_ConceptDefinition) String() string { return proto.CompactTextString(m) }
func (*CodeSystem_ConceptDefinition) ProtoMessage()    {}
func (*CodeSystem_ConceptDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{18, 2}
}

func (m *CodeSystem_ConceptDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeSystem_ConceptDefinition.Unmarshal(m, b)
}
func (m *CodeSystem_ConceptDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeSystem_ConceptDefinition.Marshal(b, m, deterministic)
}
func (m *CodeSystem_ConceptDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeSystem_ConceptDefinition.Merge(m, src)
}
func (m *CodeSystem_ConceptDefinition) XXX_Size() int {
	return xxx_messageInfo_CodeSystem_ConceptDefinition.Size(m)
}
func (m *CodeSystem_ConceptDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeSystem_ConceptDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_CodeSystem_ConceptDefinition proto.InternalMessageInfo

func (m *CodeSystem_ConceptDefinition) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition) GetDefinition() *String {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition) GetDesignation() []*CodeSystem_ConceptDefinition_Designation {
	if m != nil {
		return m.Designation
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition) GetProperty() []*CodeSystem_ConceptDefinition_ConceptProperty {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition) GetConcept() []*CodeSystem_ConceptDefinition {
	if m != nil {
		return m.Concept
	}
	return nil
}

// Additional representations for the concept
type CodeSystem_ConceptDefinition_Designation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Human language of the designation
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Details how this designation would be used
	Use *Coding `protobuf:"bytes,5,opt,name=use,proto3" json:"use,omitempty"`
	// The text value for this designation
	Value                *String  `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodeSystem_ConceptDefinition_Designation) Reset() {
	*m = CodeSystem_ConceptDefinition_Designation{}
}
func (m *CodeSystem_ConceptDefinition_Designation) String() string { return proto.CompactTextString(m) }
func (*CodeSystem_ConceptDefinition_Designation) ProtoMessage()    {}
func (*CodeSystem_ConceptDefinition_Designation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{18, 2, 0}
}

func (m *CodeSystem_ConceptDefinition_Designation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeSystem_ConceptDefinition_Designation.Unmarshal(m, b)
}
func (m *CodeSystem_ConceptDefinition_Designation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeSystem_ConceptDefinition_Designation.Marshal(b, m, deterministic)
}
func (m *CodeSystem_ConceptDefinition_Designation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeSystem_ConceptDefinition_Designation.Merge(m, src)
}
func (m *CodeSystem_ConceptDefinition_Designation) XXX_Size() int {
	return xxx_messageInfo_CodeSystem_ConceptDefinition_Designation.Size(m)
}
func (m *CodeSystem_ConceptDefinition_Designation) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeSystem_ConceptDefinition_Designation.DiscardUnknown(m)
}

var xxx_messageInfo_CodeSystem_ConceptDefinition_Designation proto.InternalMessageInfo

func (m *CodeSystem_ConceptDefinition_Designation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_Designation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_Designation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_Designation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_Designation) GetUse() *Coding {
	if m != nil {
		return m.Use
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_Designation) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// Property value for the concept
type CodeSystem_ConceptDefinition_ConceptProperty struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reference to CodeSystem.property.code
	Code                 *Code                                               `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value                *CodeSystem_ConceptDefinition_ConceptProperty_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty) Reset() {
	*m = CodeSystem_ConceptDefinition_ConceptProperty{}
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty) String() string {
	return proto.CompactTextString(m)
}
func (*CodeSystem_ConceptDefinition_ConceptProperty) ProtoMessage() {}
func (*CodeSystem_ConceptDefinition_ConceptProperty) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{18, 2, 1}
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty.Unmarshal(m, b)
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty.Marshal(b, m, deterministic)
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty.Merge(m, src)
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty) XXX_Size() int {
	return xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty.Size(m)
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty.DiscardUnknown(m)
}

var xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty proto.InternalMessageInfo

func (m *CodeSystem_ConceptDefinition_ConceptProperty) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty) GetValue() *CodeSystem_ConceptDefinition_ConceptProperty_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Value of the property for this concept
type CodeSystem_ConceptDefinition_ConceptProperty_Value struct {
	// Types that are valid to be assigned to Value:
	//	*CodeSystem_ConceptDefinition_ConceptProperty_Value_Code
	//	*CodeSystem_ConceptDefinition_ConceptProperty_Value_Coding
	//	*CodeSystem_ConceptDefinition_ConceptProperty_Value_StringValue
	//	*CodeSystem_ConceptDefinition_ConceptProperty_Value_Integer
	//	*CodeSystem_ConceptDefinition_ConceptProperty_Value_Boolean
	//	*CodeSystem_ConceptDefinition_ConceptProperty_Value_DateTime
	Value                isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) Reset() {
	*m = CodeSystem_ConceptDefinition_ConceptProperty_Value{}
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) String() string {
	return proto.CompactTextString(m)
}
func (*CodeSystem_ConceptDefinition_ConceptProperty_Value) ProtoMessage() {}
func (*CodeSystem_ConceptDefinition_ConceptProperty_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{18, 2, 1, 0}
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty_Value.Unmarshal(m, b)
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty_Value.Marshal(b, m, deterministic)
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty_Value.Merge(m, src)
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) XXX_Size() int {
	return xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty_Value.Size(m)
}
func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty_Value.DiscardUnknown(m)
}

var xxx_messageInfo_CodeSystem_ConceptDefinition_ConceptProperty_Value proto.InternalMessageInfo

type isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value interface {
	isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value()
}

type CodeSystem_ConceptDefinition_ConceptProperty_Value_Code struct {
	Code *Code `protobuf:"bytes,1,opt,name=code,proto3,oneof"`
}

type CodeSystem_ConceptDefinition_ConceptProperty_Value_Coding struct {
	Coding *Coding `protobuf:"bytes,2,opt,name=coding,proto3,oneof"`
}

type CodeSystem_ConceptDefinition_ConceptProperty_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type CodeSystem_ConceptDefinition_ConceptProperty_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,4,opt,name=integer,proto3,oneof"`
}

type CodeSystem_ConceptDefinition_ConceptProperty_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,5,opt,name=boolean,proto3,oneof"`
}

type CodeSystem_ConceptDefinition_ConceptProperty_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,6,opt,name=date_time,json=dateTime,proto3,oneof"`
}

func (*CodeSystem_ConceptDefinition_ConceptProperty_Value_Code) isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*CodeSystem_ConceptDefinition_ConceptProperty_Value_Coding) isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*CodeSystem_ConceptDefinition_ConceptProperty_Value_StringValue) isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*CodeSystem_ConceptDefinition_ConceptProperty_Value_Integer) isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*CodeSystem_ConceptDefinition_ConceptProperty_Value_Boolean) isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*CodeSystem_ConceptDefinition_ConceptProperty_Value_DateTime) isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) GetValue() isCodeSystem_ConceptDefinition_ConceptProperty_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) GetCode() *Code {
	if x, ok := m.GetValue().(*CodeSystem_ConceptDefinition_ConceptProperty_Value_Code); ok {
		return x.Code
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) GetCoding() *Coding {
	if x, ok := m.GetValue().(*CodeSystem_ConceptDefinition_ConceptProperty_Value_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*CodeSystem_ConceptDefinition_ConceptProperty_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*CodeSystem_ConceptDefinition_ConceptProperty_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*CodeSystem_ConceptDefinition_ConceptProperty_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *CodeSystem_ConceptDefinition_ConceptProperty_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*CodeSystem_ConceptDefinition_ConceptProperty_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CodeSystem_ConceptDefinition_ConceptProperty_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CodeSystem_ConceptDefinition_ConceptProperty_Value_OneofMarshaler, _CodeSystem_ConceptDefinition_ConceptProperty_Value_OneofUnmarshaler, _CodeSystem_ConceptDefinition_ConceptProperty_Value_OneofSizer, []interface{}{
		(*CodeSystem_ConceptDefinition_ConceptProperty_Value_Code)(nil),
		(*CodeSystem_ConceptDefinition_ConceptProperty_Value_Coding)(nil),
		(*CodeSystem_ConceptDefinition_ConceptProperty_Value_StringValue)(nil),
		(*CodeSystem_ConceptDefinition_ConceptProperty_Value_Integer)(nil),
		(*CodeSystem_ConceptDefinition_ConceptProperty_Value_Boolean)(nil),
		(*CodeSystem_ConceptDefinition_ConceptProperty_Value_DateTime)(nil),
	}
}

func _CodeSystem_ConceptDefinition_ConceptProperty_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CodeSystem_ConceptDefinition_ConceptProperty_Value)
	// value
	switch x := m.Value.(type) {
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_Code:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_Coding:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_Integer:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_Boolean:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_DateTime:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CodeSystem_ConceptDefinition_ConceptProperty_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _CodeSystem_ConceptDefinition_ConceptProperty_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CodeSystem_ConceptDefinition_ConceptProperty_Value)
	switch tag {
	case 1: // value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.Value = &CodeSystem_ConceptDefinition_ConceptProperty_Value_Code{msg}
		return true, err
	case 2: // value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Value = &CodeSystem_ConceptDefinition_ConceptProperty_Value_Coding{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &CodeSystem_ConceptDefinition_ConceptProperty_Value_StringValue{msg}
		return true, err
	case 4: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &CodeSystem_ConceptDefinition_ConceptProperty_Value_Integer{msg}
		return true, err
	case 5: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &CodeSystem_ConceptDefinition_ConceptProperty_Value_Boolean{msg}
		return true, err
	case 6: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &CodeSystem_ConceptDefinition_ConceptProperty_Value_DateTime{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CodeSystem_ConceptDefinition_ConceptProperty_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CodeSystem_ConceptDefinition_ConceptProperty_Value)
	// value
	switch x := m.Value.(type) {
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_Coding:
		s := proto.Size(x.Coding)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CodeSystem_ConceptDefinition_ConceptProperty_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Communication, last updated
// 2017-04-19T07:44:43.294+10:00. A record of information transmitted from a
// sender to a receiver. See
// http://hl7.org/fhir/StructureDefinition/Communication
type Communication struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Instantiates protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// Request fulfilled by this communication
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Part of this action
	PartOf []*Reference `protobuf:"bytes,12,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// preparation | in-progress | suspended | aborted | completed |
	// entered-in-error
	Status *EventStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// Communication did not occur
	NotDone *Boolean `protobuf:"bytes,14,opt,name=not_done,json=notDone,proto3" json:"not_done,omitempty"`
	// Why communication did not occur
	NotDoneReason *CodeableConcept `protobuf:"bytes,15,opt,name=not_done_reason,json=notDoneReason,proto3" json:"not_done_reason,omitempty"`
	// Message category
	Category []*CodeableConcept `protobuf:"bytes,16,rep,name=category,proto3" json:"category,omitempty"`
	// A channel of communication
	Medium []*CodeableConcept `protobuf:"bytes,17,rep,name=medium,proto3" json:"medium,omitempty"`
	// Focus of message
	Subject *Reference `protobuf:"bytes,18,opt,name=subject,proto3" json:"subject,omitempty"`
	// Message recipient
	Recipient []*Reference `protobuf:"bytes,19,rep,name=recipient,proto3" json:"recipient,omitempty"`
	// Focal resources
	Topic []*Reference `protobuf:"bytes,20,rep,name=topic,proto3" json:"topic,omitempty"`
	// Encounter or episode leading to message
	Context *Reference `protobuf:"bytes,21,opt,name=context,proto3" json:"context,omitempty"`
	// When sent
	Sent *DateTime `protobuf:"bytes,22,opt,name=sent,proto3" json:"sent,omitempty"`
	// When received
	Received *DateTime `protobuf:"bytes,23,opt,name=received,proto3" json:"received,omitempty"`
	// Message sender
	Sender *Reference `protobuf:"bytes,24,opt,name=sender,proto3" json:"sender,omitempty"`
	// Indication for message
	ReasonCode []*CodeableConcept `protobuf:"bytes,25,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Why was communication done?
	ReasonReference []*Reference             `protobuf:"bytes,26,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	Payload         []*Communication_Payload `protobuf:"bytes,27,rep,name=payload,proto3" json:"payload,omitempty"`
	// Comments made about the communication
	Note                 []*Annotation `protobuf:"bytes,28,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Communication) Reset()         { *m = Communication{} }
func (m *Communication) String() string { return proto.CompactTextString(m) }
func (*Communication) ProtoMessage()    {}
func (*Communication) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{19}
}

func (m *Communication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Communication.Unmarshal(m, b)
}
func (m *Communication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Communication.Marshal(b, m, deterministic)
}
func (m *Communication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Communication.Merge(m, src)
}
func (m *Communication) XXX_Size() int {
	return xxx_messageInfo_Communication.Size(m)
}
func (m *Communication) XXX_DiscardUnknown() {
	xxx_messageInfo_Communication.DiscardUnknown(m)
}

var xxx_messageInfo_Communication proto.InternalMessageInfo

func (m *Communication) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Communication) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Communication) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Communication) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Communication) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Communication) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Communication) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Communication) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Communication) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Communication) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *Communication) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Communication) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *Communication) GetStatus() *EventStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Communication) GetNotDone() *Boolean {
	if m != nil {
		return m.NotDone
	}
	return nil
}

func (m *Communication) GetNotDoneReason() *CodeableConcept {
	if m != nil {
		return m.NotDoneReason
	}
	return nil
}

func (m *Communication) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Communication) GetMedium() []*CodeableConcept {
	if m != nil {
		return m.Medium
	}
	return nil
}

func (m *Communication) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Communication) GetRecipient() []*Reference {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *Communication) GetTopic() []*Reference {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Communication) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Communication) GetSent() *DateTime {
	if m != nil {
		return m.Sent
	}
	return nil
}

func (m *Communication) GetReceived() *DateTime {
	if m != nil {
		return m.Received
	}
	return nil
}

func (m *Communication) GetSender() *Reference {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Communication) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *Communication) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *Communication) GetPayload() []*Communication_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Communication) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Message payload
type Communication_Payload struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                   `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Content              *Communication_Payload_Content `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Communication_Payload) Reset()         { *m = Communication_Payload{} }
func (m *Communication_Payload) String() string { return proto.CompactTextString(m) }
func (*Communication_Payload) ProtoMessage()    {}
func (*Communication_Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{19, 0}
}

func (m *Communication_Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Communication_Payload.Unmarshal(m, b)
}
func (m *Communication_Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Communication_Payload.Marshal(b, m, deterministic)
}
func (m *Communication_Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Communication_Payload.Merge(m, src)
}
func (m *Communication_Payload) XXX_Size() int {
	return xxx_messageInfo_Communication_Payload.Size(m)
}
func (m *Communication_Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Communication_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Communication_Payload proto.InternalMessageInfo

func (m *Communication_Payload) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Communication_Payload) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Communication_Payload) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Communication_Payload) GetContent() *Communication_Payload_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

// Message part content
type Communication_Payload_Content struct {
	// Types that are valid to be assigned to Content:
	//	*Communication_Payload_Content_StringValue
	//	*Communication_Payload_Content_Attachment
	//	*Communication_Payload_Content_Reference
	Content              isCommunication_Payload_Content_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *Communication_Payload_Content) Reset()         { *m = Communication_Payload_Content{} }
func (m *Communication_Payload_Content) String() string { return proto.CompactTextString(m) }
func (*Communication_Payload_Content) ProtoMessage()    {}
func (*Communication_Payload_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{19, 0, 0}
}

func (m *Communication_Payload_Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Communication_Payload_Content.Unmarshal(m, b)
}
func (m *Communication_Payload_Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Communication_Payload_Content.Marshal(b, m, deterministic)
}
func (m *Communication_Payload_Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Communication_Payload_Content.Merge(m, src)
}
func (m *Communication_Payload_Content) XXX_Size() int {
	return xxx_messageInfo_Communication_Payload_Content.Size(m)
}
func (m *Communication_Payload_Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Communication_Payload_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Communication_Payload_Content proto.InternalMessageInfo

type isCommunication_Payload_Content_Content interface {
	isCommunication_Payload_Content_Content()
}

type Communication_Payload_Content_StringValue struct {
	StringValue *String `protobuf:"bytes,1,opt,name=string_value,json=string,proto3,oneof"`
}

type Communication_Payload_Content_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,2,opt,name=attachment,proto3,oneof"`
}

type Communication_Payload_Content_Reference struct {
	Reference *Reference `protobuf:"bytes,3,opt,name=reference,proto3,oneof"`
}

func (*Communication_Payload_Content_StringValue) isCommunication_Payload_Content_Content() {}

func (*Communication_Payload_Content_Attachment) isCommunication_Payload_Content_Content() {}

func (*Communication_Payload_Content_Reference) isCommunication_Payload_Content_Content() {}

func (m *Communication_Payload_Content) GetContent() isCommunication_Payload_Content_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Communication_Payload_Content) GetStringValue() *String {
	if x, ok := m.GetContent().(*Communication_Payload_Content_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Communication_Payload_Content) GetAttachment() *Attachment {
	if x, ok := m.GetContent().(*Communication_Payload_Content_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Communication_Payload_Content) GetReference() *Reference {
	if x, ok := m.GetContent().(*Communication_Payload_Content_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Communication_Payload_Content) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Communication_Payload_Content_OneofMarshaler, _Communication_Payload_Content_OneofUnmarshaler, _Communication_Payload_Content_OneofSizer, []interface{}{
		(*Communication_Payload_Content_StringValue)(nil),
		(*Communication_Payload_Content_Attachment)(nil),
		(*Communication_Payload_Content_Reference)(nil),
	}
}

func _Communication_Payload_Content_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Communication_Payload_Content)
	// content
	switch x := m.Content.(type) {
	case *Communication_Payload_Content_StringValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Communication_Payload_Content_Attachment:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Communication_Payload_Content_Reference:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Communication_Payload_Content.Content has unexpected type %T", x)
	}
	return nil
}

func _Communication_Payload_Content_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Communication_Payload_Content)
	switch tag {
	case 1: // content.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Content = &Communication_Payload_Content_StringValue{msg}
		return true, err
	case 2: // content.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Content = &Communication_Payload_Content_Attachment{msg}
		return true, err
	case 3: // content.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Content = &Communication_Payload_Content_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Communication_Payload_Content_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Communication_Payload_Content)
	// content
	switch x := m.Content.(type) {
	case *Communication_Payload_Content_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Communication_Payload_Content_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Communication_Payload_Content_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for CommunicationRequest, last
// updated 2017-04-19T07:44:43.294+10:00. A request for information to be sent
// to a receiver. See
// http://hl7.org/fhir/StructureDefinition/CommunicationRequest
type CommunicationRequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan or proposal
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Request(s) replaced by this request
	Replaces []*Reference `protobuf:"bytes,11,rep,name=replaces,proto3" json:"replaces,omitempty"`
	// Composite request this is part of
	GroupIdentifier *Identifier `protobuf:"bytes,12,opt,name=group_identifier,json=groupIdentifier,proto3" json:"group_identifier,omitempty"`
	// draft | active | suspended | cancelled | completed | entered-in-error |
	// unknown
	Status *RequestStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// Message category
	Category []*CodeableConcept `protobuf:"bytes,14,rep,name=category,proto3" json:"category,omitempty"`
	// Message urgency
	Priority *RequestPriorityCode `protobuf:"bytes,15,opt,name=priority,proto3" json:"priority,omitempty"`
	// A channel of communication
	Medium []*CodeableConcept `protobuf:"bytes,16,rep,name=medium,proto3" json:"medium,omitempty"`
	// Focus of message
	Subject *Reference `protobuf:"bytes,17,opt,name=subject,proto3" json:"subject,omitempty"`
	// Message recipient
	Recipient []*Reference `protobuf:"bytes,18,rep,name=recipient,proto3" json:"recipient,omitempty"`
	// Focal resources
	Topic []*Reference `protobuf:"bytes,19,rep,name=topic,proto3" json:"topic,omitempty"`
	// Encounter or episode leading to message
	Context    *Reference                       `protobuf:"bytes,20,opt,name=context,proto3" json:"context,omitempty"`
	Payload    []*CommunicationRequest_Payload  `protobuf:"bytes,21,rep,name=payload,proto3" json:"payload,omitempty"`
	Occurrence *CommunicationRequest_Occurrence `protobuf:"bytes,22,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	// When request transitioned to being actionable
	AuthoredOn *DateTime `protobuf:"bytes,23,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	// Message sender
	Sender    *Reference                      `protobuf:"bytes,24,opt,name=sender,proto3" json:"sender,omitempty"`
	Requester *CommunicationRequest_Requester `protobuf:"bytes,25,opt,name=requester,proto3" json:"requester,omitempty"`
	// Why is communication needed?
	ReasonCode []*CodeableConcept `protobuf:"bytes,26,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Why is communication needed?
	ReasonReference []*Reference `protobuf:"bytes,27,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Comments made about communication request
	Note                 []*Annotation `protobuf:"bytes,28,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CommunicationRequest) Reset()         { *m = CommunicationRequest{} }
func (m *CommunicationRequest) String() string { return proto.CompactTextString(m) }
func (*CommunicationRequest) ProtoMessage()    {}
func (*CommunicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{20}
}

func (m *CommunicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunicationRequest.Unmarshal(m, b)
}
func (m *CommunicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunicationRequest.Marshal(b, m, deterministic)
}
func (m *CommunicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunicationRequest.Merge(m, src)
}
func (m *CommunicationRequest) XXX_Size() int {
	return xxx_messageInfo_CommunicationRequest.Size(m)
}
func (m *CommunicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommunicationRequest proto.InternalMessageInfo

func (m *CommunicationRequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CommunicationRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CommunicationRequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *CommunicationRequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *CommunicationRequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *CommunicationRequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *CommunicationRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CommunicationRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CommunicationRequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *CommunicationRequest) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *CommunicationRequest) GetReplaces() []*Reference {
	if m != nil {
		return m.Replaces
	}
	return nil
}

func (m *CommunicationRequest) GetGroupIdentifier() *Identifier {
	if m != nil {
		return m.GroupIdentifier
	}
	return nil
}

func (m *CommunicationRequest) GetStatus() *RequestStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CommunicationRequest) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *CommunicationRequest) GetPriority() *RequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *CommunicationRequest) GetMedium() []*CodeableConcept {
	if m != nil {
		return m.Medium
	}
	return nil
}

func (m *CommunicationRequest) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *CommunicationRequest) GetRecipient() []*Reference {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *CommunicationRequest) GetTopic() []*Reference {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *CommunicationRequest) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *CommunicationRequest) GetPayload() []*CommunicationRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CommunicationRequest) GetOccurrence() *CommunicationRequest_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *CommunicationRequest) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *CommunicationRequest) GetSender() *Reference {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *CommunicationRequest) GetRequester() *CommunicationRequest_Requester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *CommunicationRequest) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *CommunicationRequest) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *CommunicationRequest) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Message payload
type CommunicationRequest_Payload struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                          `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Content              *CommunicationRequest_Payload_Content `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *CommunicationRequest_Payload) Reset()         { *m = CommunicationRequest_Payload{} }
func (m *CommunicationRequest_Payload) String() string { return proto.CompactTextString(m) }
func (*CommunicationRequest_Payload) ProtoMessage()    {}
func (*CommunicationRequest_Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{20, 0}
}

func (m *CommunicationRequest_Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunicationRequest_Payload.Unmarshal(m, b)
}
func (m *CommunicationRequest_Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunicationRequest_Payload.Marshal(b, m, deterministic)
}
func (m *CommunicationRequest_Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunicationRequest_Payload.Merge(m, src)
}
func (m *CommunicationRequest_Payload) XXX_Size() int {
	return xxx_messageInfo_CommunicationRequest_Payload.Size(m)
}
func (m *CommunicationRequest_Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunicationRequest_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_CommunicationRequest_Payload proto.InternalMessageInfo

func (m *CommunicationRequest_Payload) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CommunicationRequest_Payload) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CommunicationRequest_Payload) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CommunicationRequest_Payload) GetContent() *CommunicationRequest_Payload_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

// Message part content
type CommunicationRequest_Payload_Content struct {
	// Types that are valid to be assigned to Content:
	//	*CommunicationRequest_Payload_Content_StringValue
	//	*CommunicationRequest_Payload_Content_Attachment
	//	*CommunicationRequest_Payload_Content_Reference
	Content              isCommunicationRequest_Payload_Content_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *CommunicationRequest_Payload_Content) Reset()         { *m = CommunicationRequest_Payload_Content{} }
func (m *CommunicationRequest_Payload_Content) String() string { return proto.CompactTextString(m) }
func (*CommunicationRequest_Payload_Content) ProtoMessage()    {}
func (*CommunicationRequest_Payload_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{20, 0, 0}
}

func (m *CommunicationRequest_Payload_Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunicationRequest_Payload_Content.Unmarshal(m, b)
}
func (m *CommunicationRequest_Payload_Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunicationRequest_Payload_Content.Marshal(b, m, deterministic)
}
func (m *CommunicationRequest_Payload_Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunicationRequest_Payload_Content.Merge(m, src)
}
func (m *CommunicationRequest_Payload_Content) XXX_Size() int {
	return xxx_messageInfo_CommunicationRequest_Payload_Content.Size(m)
}
func (m *CommunicationRequest_Payload_Content) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunicationRequest_Payload_Content.DiscardUnknown(m)
}

var xxx_messageInfo_CommunicationRequest_Payload_Content proto.InternalMessageInfo

type isCommunicationRequest_Payload_Content_Content interface {
	isCommunicationRequest_Payload_Content_Content()
}

type CommunicationRequest_Payload_Content_StringValue struct {
	StringValue *String `protobuf:"bytes,1,opt,name=string_value,json=string,proto3,oneof"`
}

type CommunicationRequest_Payload_Content_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,2,opt,name=attachment,proto3,oneof"`
}

type CommunicationRequest_Payload_Content_Reference struct {
	Reference *Reference `protobuf:"bytes,3,opt,name=reference,proto3,oneof"`
}

func (*CommunicationRequest_Payload_Content_StringValue) isCommunicationRequest_Payload_Content_Content() {
}

func (*CommunicationRequest_Payload_Content_Attachment) isCommunicationRequest_Payload_Content_Content() {
}

func (*CommunicationRequest_Payload_Content_Reference) isCommunicationRequest_Payload_Content_Content() {
}

func (m *CommunicationRequest_Payload_Content) GetContent() isCommunicationRequest_Payload_Content_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *CommunicationRequest_Payload_Content) GetStringValue() *String {
	if x, ok := m.GetContent().(*CommunicationRequest_Payload_Content_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *CommunicationRequest_Payload_Content) GetAttachment() *Attachment {
	if x, ok := m.GetContent().(*CommunicationRequest_Payload_Content_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *CommunicationRequest_Payload_Content) GetReference() *Reference {
	if x, ok := m.GetContent().(*CommunicationRequest_Payload_Content_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CommunicationRequest_Payload_Content) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CommunicationRequest_Payload_Content_OneofMarshaler, _CommunicationRequest_Payload_Content_OneofUnmarshaler, _CommunicationRequest_Payload_Content_OneofSizer, []interface{}{
		(*CommunicationRequest_Payload_Content_StringValue)(nil),
		(*CommunicationRequest_Payload_Content_Attachment)(nil),
		(*CommunicationRequest_Payload_Content_Reference)(nil),
	}
}

func _CommunicationRequest_Payload_Content_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CommunicationRequest_Payload_Content)
	// content
	switch x := m.Content.(type) {
	case *CommunicationRequest_Payload_Content_StringValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *CommunicationRequest_Payload_Content_Attachment:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *CommunicationRequest_Payload_Content_Reference:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CommunicationRequest_Payload_Content.Content has unexpected type %T", x)
	}
	return nil
}

func _CommunicationRequest_Payload_Content_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CommunicationRequest_Payload_Content)
	switch tag {
	case 1: // content.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Content = &CommunicationRequest_Payload_Content_StringValue{msg}
		return true, err
	case 2: // content.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Content = &CommunicationRequest_Payload_Content_Attachment{msg}
		return true, err
	case 3: // content.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Content = &CommunicationRequest_Payload_Content_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CommunicationRequest_Payload_Content_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CommunicationRequest_Payload_Content)
	// content
	switch x := m.Content.(type) {
	case *CommunicationRequest_Payload_Content_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CommunicationRequest_Payload_Content_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CommunicationRequest_Payload_Content_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// When scheduled
type CommunicationRequest_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*CommunicationRequest_Occurrence_DateTime
	//	*CommunicationRequest_Occurrence_Period
	Occurrence           isCommunicationRequest_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CommunicationRequest_Occurrence) Reset()         { *m = CommunicationRequest_Occurrence{} }
func (m *CommunicationRequest_Occurrence) String() string { return proto.CompactTextString(m) }
func (*CommunicationRequest_Occurrence) ProtoMessage()    {}
func (*CommunicationRequest_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{20, 1}
}

func (m *CommunicationRequest_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunicationRequest_Occurrence.Unmarshal(m, b)
}
func (m *CommunicationRequest_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunicationRequest_Occurrence.Marshal(b, m, deterministic)
}
func (m *CommunicationRequest_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunicationRequest_Occurrence.Merge(m, src)
}
func (m *CommunicationRequest_Occurrence) XXX_Size() int {
	return xxx_messageInfo_CommunicationRequest_Occurrence.Size(m)
}
func (m *CommunicationRequest_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunicationRequest_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_CommunicationRequest_Occurrence proto.InternalMessageInfo

type isCommunicationRequest_Occurrence_Occurrence interface {
	isCommunicationRequest_Occurrence_Occurrence()
}

type CommunicationRequest_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type CommunicationRequest_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*CommunicationRequest_Occurrence_DateTime) isCommunicationRequest_Occurrence_Occurrence() {}

func (*CommunicationRequest_Occurrence_Period) isCommunicationRequest_Occurrence_Occurrence() {}

func (m *CommunicationRequest_Occurrence) GetOccurrence() isCommunicationRequest_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *CommunicationRequest_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*CommunicationRequest_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *CommunicationRequest_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*CommunicationRequest_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CommunicationRequest_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CommunicationRequest_Occurrence_OneofMarshaler, _CommunicationRequest_Occurrence_OneofUnmarshaler, _CommunicationRequest_Occurrence_OneofSizer, []interface{}{
		(*CommunicationRequest_Occurrence_DateTime)(nil),
		(*CommunicationRequest_Occurrence_Period)(nil),
	}
}

func _CommunicationRequest_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CommunicationRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *CommunicationRequest_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *CommunicationRequest_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CommunicationRequest_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _CommunicationRequest_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CommunicationRequest_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &CommunicationRequest_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &CommunicationRequest_Occurrence_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CommunicationRequest_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CommunicationRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *CommunicationRequest_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CommunicationRequest_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who/what is requesting service
type CommunicationRequest_Requester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual making the request
	Agent *Reference `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// Organization agent is acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CommunicationRequest_Requester) Reset()         { *m = CommunicationRequest_Requester{} }
func (m *CommunicationRequest_Requester) String() string { return proto.CompactTextString(m) }
func (*CommunicationRequest_Requester) ProtoMessage()    {}
func (*CommunicationRequest_Requester) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{20, 2}
}

func (m *CommunicationRequest_Requester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunicationRequest_Requester.Unmarshal(m, b)
}
func (m *CommunicationRequest_Requester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunicationRequest_Requester.Marshal(b, m, deterministic)
}
func (m *CommunicationRequest_Requester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunicationRequest_Requester.Merge(m, src)
}
func (m *CommunicationRequest_Requester) XXX_Size() int {
	return xxx_messageInfo_CommunicationRequest_Requester.Size(m)
}
func (m *CommunicationRequest_Requester) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunicationRequest_Requester.DiscardUnknown(m)
}

var xxx_messageInfo_CommunicationRequest_Requester proto.InternalMessageInfo

func (m *CommunicationRequest_Requester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CommunicationRequest_Requester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CommunicationRequest_Requester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CommunicationRequest_Requester) GetAgent() *Reference {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *CommunicationRequest_Requester) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Auto-generated from StructureDefinition for CompartmentDefinition, last
// updated 2017-04-19T07:44:43.294+10:00. Compartment Definition for a resource.
// See http://hl7.org/fhir/StructureDefinition/CompartmentDefinition
type CompartmentDefinition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this compartment definition (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Name for this compartment definition (computer friendly)
	Name *String `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this compartment definition (human friendly)
	Title *String `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,13,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,14,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,15,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,16,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the compartment definition
	Description *Markdown `protobuf:"bytes,17,opt,name=description,proto3" json:"description,omitempty"`
	// Why this compartment definition is defined
	Purpose *Markdown `protobuf:"bytes,18,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,19,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for compartment definition (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,20,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Patient | Encounter | RelatedPerson | Practitioner | Device
	Code *CompartmentTypeCode `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	// Whether the search syntax is supported
	Search               *Boolean                          `protobuf:"bytes,22,opt,name=search,proto3" json:"search,omitempty"`
	Resource             []*CompartmentDefinition_Resource `protobuf:"bytes,23,rep,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CompartmentDefinition) Reset()         { *m = CompartmentDefinition{} }
func (m *CompartmentDefinition) String() string { return proto.CompactTextString(m) }
func (*CompartmentDefinition) ProtoMessage()    {}
func (*CompartmentDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{21}
}

func (m *CompartmentDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompartmentDefinition.Unmarshal(m, b)
}
func (m *CompartmentDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompartmentDefinition.Marshal(b, m, deterministic)
}
func (m *CompartmentDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompartmentDefinition.Merge(m, src)
}
func (m *CompartmentDefinition) XXX_Size() int {
	return xxx_messageInfo_CompartmentDefinition.Size(m)
}
func (m *CompartmentDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_CompartmentDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_CompartmentDefinition proto.InternalMessageInfo

func (m *CompartmentDefinition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CompartmentDefinition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CompartmentDefinition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *CompartmentDefinition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *CompartmentDefinition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *CompartmentDefinition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *CompartmentDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CompartmentDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CompartmentDefinition) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *CompartmentDefinition) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CompartmentDefinition) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CompartmentDefinition) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CompartmentDefinition) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *CompartmentDefinition) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CompartmentDefinition) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *CompartmentDefinition) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *CompartmentDefinition) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CompartmentDefinition) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *CompartmentDefinition) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *CompartmentDefinition) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *CompartmentDefinition) GetCode() *CompartmentTypeCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CompartmentDefinition) GetSearch() *Boolean {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *CompartmentDefinition) GetResource() []*CompartmentDefinition_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

// How a resource is related to the compartment
type CompartmentDefinition_Resource struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name of resource type
	Code *ResourceTypeCode `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Search Parameter Name, or chained parameters
	Param []*String `protobuf:"bytes,5,rep,name=param,proto3" json:"param,omitempty"`
	// Additional documentation about the resource and compartment
	Documentation        *String  `protobuf:"bytes,6,opt,name=documentation,proto3" json:"documentation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompartmentDefinition_Resource) Reset()         { *m = CompartmentDefinition_Resource{} }
func (m *CompartmentDefinition_Resource) String() string { return proto.CompactTextString(m) }
func (*CompartmentDefinition_Resource) ProtoMessage()    {}
func (*CompartmentDefinition_Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{21, 0}
}

func (m *CompartmentDefinition_Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompartmentDefinition_Resource.Unmarshal(m, b)
}
func (m *CompartmentDefinition_Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompartmentDefinition_Resource.Marshal(b, m, deterministic)
}
func (m *CompartmentDefinition_Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompartmentDefinition_Resource.Merge(m, src)
}
func (m *CompartmentDefinition_Resource) XXX_Size() int {
	return xxx_messageInfo_CompartmentDefinition_Resource.Size(m)
}
func (m *CompartmentDefinition_Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_CompartmentDefinition_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_CompartmentDefinition_Resource proto.InternalMessageInfo

func (m *CompartmentDefinition_Resource) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CompartmentDefinition_Resource) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CompartmentDefinition_Resource) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *CompartmentDefinition_Resource) GetCode() *ResourceTypeCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CompartmentDefinition_Resource) GetParam() []*String {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *CompartmentDefinition_Resource) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

// Auto-generated from StructureDefinition for Composition, last updated
// 2017-04-19T07:44:43.294+10:00. A set of resources composed into a single
// coherent clinical statement with clinical attestation. See
// http://hl7.org/fhir/StructureDefinition/Composition
type Composition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical identifier of composition (version-independent)
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// preliminary | final | amended | entered-in-error
	Status *CompositionStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Kind of composition (LOINC if possible)
	Type *CodeableConcept `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// Categorization of Composition
	ClassValue *CodeableConcept `protobuf:"bytes,12,opt,name=class_value,json=class,proto3" json:"class_value,omitempty"`
	// Who and/or what the composition is about
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// Context of the Composition
	Encounter *Reference `protobuf:"bytes,14,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// Composition editing time
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// Who and/or what authored the composition
	Author []*Reference `protobuf:"bytes,16,rep,name=author,proto3" json:"author,omitempty"`
	// Human Readable name/title
	Title *String `protobuf:"bytes,17,opt,name=title,proto3" json:"title,omitempty"`
	// As defined by affinity domain
	Confidentiality *ConfidentialityClassificationCode `protobuf:"bytes,18,opt,name=confidentiality,proto3" json:"confidentiality,omitempty"`
	Attester        []*Composition_Attester            `protobuf:"bytes,19,rep,name=attester,proto3" json:"attester,omitempty"`
	// Organization which maintains the composition
	Custodian            *Reference               `protobuf:"bytes,20,opt,name=custodian,proto3" json:"custodian,omitempty"`
	RelatesTo            []*Composition_RelatesTo `protobuf:"bytes,21,rep,name=relates_to,json=relatesTo,proto3" json:"relates_to,omitempty"`
	Event                []*Composition_Event     `protobuf:"bytes,22,rep,name=event,proto3" json:"event,omitempty"`
	Section              []*Composition_Section   `protobuf:"bytes,23,rep,name=section,proto3" json:"section,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Composition) Reset()         { *m = Composition{} }
func (m *Composition) String() string { return proto.CompactTextString(m) }
func (*Composition) ProtoMessage()    {}
func (*Composition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{22}
}

func (m *Composition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Composition.Unmarshal(m, b)
}
func (m *Composition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Composition.Marshal(b, m, deterministic)
}
func (m *Composition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Composition.Merge(m, src)
}
func (m *Composition) XXX_Size() int {
	return xxx_messageInfo_Composition.Size(m)
}
func (m *Composition) XXX_DiscardUnknown() {
	xxx_messageInfo_Composition.DiscardUnknown(m)
}

var xxx_messageInfo_Composition proto.InternalMessageInfo

func (m *Composition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Composition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Composition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Composition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Composition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Composition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Composition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Composition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Composition) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Composition) GetStatus() *CompositionStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Composition) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Composition) GetClassValue() *CodeableConcept {
	if m != nil {
		return m.ClassValue
	}
	return nil
}

func (m *Composition) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Composition) GetEncounter() *Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *Composition) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Composition) GetAuthor() []*Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Composition) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Composition) GetConfidentiality() *ConfidentialityClassificationCode {
	if m != nil {
		return m.Confidentiality
	}
	return nil
}

func (m *Composition) GetAttester() []*Composition_Attester {
	if m != nil {
		return m.Attester
	}
	return nil
}

func (m *Composition) GetCustodian() *Reference {
	if m != nil {
		return m.Custodian
	}
	return nil
}

func (m *Composition) GetRelatesTo() []*Composition_RelatesTo {
	if m != nil {
		return m.RelatesTo
	}
	return nil
}

func (m *Composition) GetEvent() []*Composition_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Composition) GetSection() []*Composition_Section {
	if m != nil {
		return m.Section
	}
	return nil
}

// Attests to accuracy of composition
type Composition_Attester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// personal | professional | legal | official
	Mode []*CompositionAttestationModeCode `protobuf:"bytes,4,rep,name=mode,proto3" json:"mode,omitempty"`
	// When the composition was attested
	Time *DateTime `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	// Who attested the composition
	Party                *Reference `protobuf:"bytes,6,opt,name=party,proto3" json:"party,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Composition_Attester) Reset()         { *m = Composition_Attester{} }
func (m *Composition_Attester) String() string { return proto.CompactTextString(m) }
func (*Composition_Attester) ProtoMessage()    {}
func (*Composition_Attester) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{22, 0}
}

func (m *Composition_Attester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Composition_Attester.Unmarshal(m, b)
}
func (m *Composition_Attester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Composition_Attester.Marshal(b, m, deterministic)
}
func (m *Composition_Attester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Composition_Attester.Merge(m, src)
}
func (m *Composition_Attester) XXX_Size() int {
	return xxx_messageInfo_Composition_Attester.Size(m)
}
func (m *Composition_Attester) XXX_DiscardUnknown() {
	xxx_messageInfo_Composition_Attester.DiscardUnknown(m)
}

var xxx_messageInfo_Composition_Attester proto.InternalMessageInfo

func (m *Composition_Attester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Composition_Attester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Composition_Attester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Composition_Attester) GetMode() []*CompositionAttestationModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *Composition_Attester) GetTime() *DateTime {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Composition_Attester) GetParty() *Reference {
	if m != nil {
		return m.Party
	}
	return nil
}

// Relationships to other compositions/documents
type Composition_RelatesTo struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// replaces | transforms | signs | appends
	Code                 *DocumentRelationshipTypeCode `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Target               *Composition_RelatesTo_Target `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Composition_RelatesTo) Reset()         { *m = Composition_RelatesTo{} }
func (m *Composition_RelatesTo) String() string { return proto.CompactTextString(m) }
func (*Composition_RelatesTo) ProtoMessage()    {}
func (*Composition_RelatesTo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{22, 1}
}

func (m *Composition_RelatesTo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Composition_RelatesTo.Unmarshal(m, b)
}
func (m *Composition_RelatesTo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Composition_RelatesTo.Marshal(b, m, deterministic)
}
func (m *Composition_RelatesTo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Composition_RelatesTo.Merge(m, src)
}
func (m *Composition_RelatesTo) XXX_Size() int {
	return xxx_messageInfo_Composition_RelatesTo.Size(m)
}
func (m *Composition_RelatesTo) XXX_DiscardUnknown() {
	xxx_messageInfo_Composition_RelatesTo.DiscardUnknown(m)
}

var xxx_messageInfo_Composition_RelatesTo proto.InternalMessageInfo

func (m *Composition_RelatesTo) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Composition_RelatesTo) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Composition_RelatesTo) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Composition_RelatesTo) GetCode() *DocumentRelationshipTypeCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Composition_RelatesTo) GetTarget() *Composition_RelatesTo_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

// Target of the relationship
type Composition_RelatesTo_Target struct {
	// Types that are valid to be assigned to Target:
	//	*Composition_RelatesTo_Target_Identifier
	//	*Composition_RelatesTo_Target_Reference
	Target               isComposition_RelatesTo_Target_Target `protobuf_oneof:"target"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *Composition_RelatesTo_Target) Reset()         { *m = Composition_RelatesTo_Target{} }
func (m *Composition_RelatesTo_Target) String() string { return proto.CompactTextString(m) }
func (*Composition_RelatesTo_Target) ProtoMessage()    {}
func (*Composition_RelatesTo_Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{22, 1, 0}
}

func (m *Composition_RelatesTo_Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Composition_RelatesTo_Target.Unmarshal(m, b)
}
func (m *Composition_RelatesTo_Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Composition_RelatesTo_Target.Marshal(b, m, deterministic)
}
func (m *Composition_RelatesTo_Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Composition_RelatesTo_Target.Merge(m, src)
}
func (m *Composition_RelatesTo_Target) XXX_Size() int {
	return xxx_messageInfo_Composition_RelatesTo_Target.Size(m)
}
func (m *Composition_RelatesTo_Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Composition_RelatesTo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Composition_RelatesTo_Target proto.InternalMessageInfo

type isComposition_RelatesTo_Target_Target interface {
	isComposition_RelatesTo_Target_Target()
}

type Composition_RelatesTo_Target_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,1,opt,name=identifier,proto3,oneof"`
}

type Composition_RelatesTo_Target_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Composition_RelatesTo_Target_Identifier) isComposition_RelatesTo_Target_Target() {}

func (*Composition_RelatesTo_Target_Reference) isComposition_RelatesTo_Target_Target() {}

func (m *Composition_RelatesTo_Target) GetTarget() isComposition_RelatesTo_Target_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Composition_RelatesTo_Target) GetIdentifier() *Identifier {
	if x, ok := m.GetTarget().(*Composition_RelatesTo_Target_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (m *Composition_RelatesTo_Target) GetReference() *Reference {
	if x, ok := m.GetTarget().(*Composition_RelatesTo_Target_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Composition_RelatesTo_Target) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Composition_RelatesTo_Target_OneofMarshaler, _Composition_RelatesTo_Target_OneofUnmarshaler, _Composition_RelatesTo_Target_OneofSizer, []interface{}{
		(*Composition_RelatesTo_Target_Identifier)(nil),
		(*Composition_RelatesTo_Target_Reference)(nil),
	}
}

func _Composition_RelatesTo_Target_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Composition_RelatesTo_Target)
	// target
	switch x := m.Target.(type) {
	case *Composition_RelatesTo_Target_Identifier:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case *Composition_RelatesTo_Target_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Composition_RelatesTo_Target.Target has unexpected type %T", x)
	}
	return nil
}

func _Composition_RelatesTo_Target_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Composition_RelatesTo_Target)
	switch tag {
	case 1: // target.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.Target = &Composition_RelatesTo_Target_Identifier{msg}
		return true, err
	case 2: // target.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Target = &Composition_RelatesTo_Target_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Composition_RelatesTo_Target_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Composition_RelatesTo_Target)
	// target
	switch x := m.Target.(type) {
	case *Composition_RelatesTo_Target_Identifier:
		s := proto.Size(x.Identifier)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Composition_RelatesTo_Target_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The clinical service(s) being documented
type Composition_Event struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code(s) that apply to the event being documented
	Code []*CodeableConcept `protobuf:"bytes,4,rep,name=code,proto3" json:"code,omitempty"`
	// The period covered by the documentation
	Period *Period `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	// The event(s) being documented
	Detail               []*Reference `protobuf:"bytes,6,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Composition_Event) Reset()         { *m = Composition_Event{} }
func (m *Composition_Event) String() string { return proto.CompactTextString(m) }
func (*Composition_Event) ProtoMessage()    {}
func (*Composition_Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{22, 2}
}

func (m *Composition_Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Composition_Event.Unmarshal(m, b)
}
func (m *Composition_Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Composition_Event.Marshal(b, m, deterministic)
}
func (m *Composition_Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Composition_Event.Merge(m, src)
}
func (m *Composition_Event) XXX_Size() int {
	return xxx_messageInfo_Composition_Event.Size(m)
}
func (m *Composition_Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Composition_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Composition_Event proto.InternalMessageInfo

func (m *Composition_Event) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Composition_Event) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Composition_Event) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Composition_Event) GetCode() []*CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Composition_Event) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Composition_Event) GetDetail() []*Reference {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Composition is broken into sections
type Composition_Section struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Label for section (e.g. for ToC)
	Title *String `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// Classification of section (recommended)
	Code *CodeableConcept `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Text summary of the section, for human interpretation
	Text *Narrative `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	// working | snapshot | changes
	Mode *ListModeCode `protobuf:"bytes,7,opt,name=mode,proto3" json:"mode,omitempty"`
	// Order of section entries
	OrderedBy *CodeableConcept `protobuf:"bytes,8,opt,name=ordered_by,json=orderedBy,proto3" json:"ordered_by,omitempty"`
	// A reference to data that supports this section
	Entry []*Reference `protobuf:"bytes,9,rep,name=entry,proto3" json:"entry,omitempty"`
	// Why the section is empty
	EmptyReason *CodeableConcept `protobuf:"bytes,10,opt,name=empty_reason,json=emptyReason,proto3" json:"empty_reason,omitempty"`
	// Nested Section
	Section              []*Composition_Section `protobuf:"bytes,11,rep,name=section,proto3" json:"section,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Composition_Section) Reset()         { *m = Composition_Section{} }
func (m *Composition_Section) String() string { return proto.CompactTextString(m) }
func (*Composition_Section) ProtoMessage()    {}
func (*Composition_Section) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{22, 3}
}

func (m *Composition_Section) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Composition_Section.Unmarshal(m, b)
}
func (m *Composition_Section) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Composition_Section.Marshal(b, m, deterministic)
}
func (m *Composition_Section) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Composition_Section.Merge(m, src)
}
func (m *Composition_Section) XXX_Size() int {
	return xxx_messageInfo_Composition_Section.Size(m)
}
func (m *Composition_Section) XXX_DiscardUnknown() {
	xxx_messageInfo_Composition_Section.DiscardUnknown(m)
}

var xxx_messageInfo_Composition_Section proto.InternalMessageInfo

func (m *Composition_Section) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Composition_Section) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Composition_Section) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Composition_Section) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Composition_Section) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Composition_Section) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Composition_Section) GetMode() *ListModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *Composition_Section) GetOrderedBy() *CodeableConcept {
	if m != nil {
		return m.OrderedBy
	}
	return nil
}

func (m *Composition_Section) GetEntry() []*Reference {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *Composition_Section) GetEmptyReason() *CodeableConcept {
	if m != nil {
		return m.EmptyReason
	}
	return nil
}

func (m *Composition_Section) GetSection() []*Composition_Section {
	if m != nil {
		return m.Section
	}
	return nil
}

// Auto-generated from StructureDefinition for ConceptMap, last updated
// 2017-04-19T07:44:43.294+10:00. A map from one set of concepts to one or more
// other concepts. See http://hl7.org/fhir/StructureDefinition/ConceptMap
type ConceptMap struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this concept map (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the concept map
	Identifier *Identifier `protobuf:"bytes,10,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the concept map
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this concept map (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this concept map (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the concept map
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,20,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for concept map (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,21,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this concept map is defined
	Purpose *Markdown `protobuf:"bytes,22,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright            *Markdown           `protobuf:"bytes,23,opt,name=copyright,proto3" json:"copyright,omitempty"`
	Source               *ConceptMap_Source  `protobuf:"bytes,24,opt,name=source,proto3" json:"source,omitempty"`
	Target               *ConceptMap_Target  `protobuf:"bytes,25,opt,name=target,proto3" json:"target,omitempty"`
	Group                []*ConceptMap_Group `protobuf:"bytes,26,rep,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ConceptMap) Reset()         { *m = ConceptMap{} }
func (m *ConceptMap) String() string { return proto.CompactTextString(m) }
func (*ConceptMap) ProtoMessage()    {}
func (*ConceptMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{23}
}

func (m *ConceptMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConceptMap.Unmarshal(m, b)
}
func (m *ConceptMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConceptMap.Marshal(b, m, deterministic)
}
func (m *ConceptMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConceptMap.Merge(m, src)
}
func (m *ConceptMap) XXX_Size() int {
	return xxx_messageInfo_ConceptMap.Size(m)
}
func (m *ConceptMap) XXX_DiscardUnknown() {
	xxx_messageInfo_ConceptMap.DiscardUnknown(m)
}

var xxx_messageInfo_ConceptMap proto.InternalMessageInfo

func (m *ConceptMap) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ConceptMap) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ConceptMap) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ConceptMap) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ConceptMap) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ConceptMap) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ConceptMap) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ConceptMap) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ConceptMap) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *ConceptMap) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ConceptMap) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ConceptMap) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ConceptMap) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *ConceptMap) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ConceptMap) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *ConceptMap) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ConceptMap) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *ConceptMap) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *ConceptMap) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ConceptMap) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *ConceptMap) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *ConceptMap) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *ConceptMap) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *ConceptMap) GetSource() *ConceptMap_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ConceptMap) GetTarget() *ConceptMap_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ConceptMap) GetGroup() []*ConceptMap_Group {
	if m != nil {
		return m.Group
	}
	return nil
}

// Identifies the source of the concepts which are being mapped
type ConceptMap_Source struct {
	// Types that are valid to be assigned to Source:
	//	*ConceptMap_Source_Uri
	//	*ConceptMap_Source_Reference
	Source               isConceptMap_Source_Source `protobuf_oneof:"source"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ConceptMap_Source) Reset()         { *m = ConceptMap_Source{} }
func (m *ConceptMap_Source) String() string { return proto.CompactTextString(m) }
func (*ConceptMap_Source) ProtoMessage()    {}
func (*ConceptMap_Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{23, 0}
}

func (m *ConceptMap_Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConceptMap_Source.Unmarshal(m, b)
}
func (m *ConceptMap_Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConceptMap_Source.Marshal(b, m, deterministic)
}
func (m *ConceptMap_Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConceptMap_Source.Merge(m, src)
}
func (m *ConceptMap_Source) XXX_Size() int {
	return xxx_messageInfo_ConceptMap_Source.Size(m)
}
func (m *ConceptMap_Source) XXX_DiscardUnknown() {
	xxx_messageInfo_ConceptMap_Source.DiscardUnknown(m)
}

var xxx_messageInfo_ConceptMap_Source proto.InternalMessageInfo

type isConceptMap_Source_Source interface {
	isConceptMap_Source_Source()
}

type ConceptMap_Source_Uri struct {
	Uri *Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

type ConceptMap_Source_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*ConceptMap_Source_Uri) isConceptMap_Source_Source() {}

func (*ConceptMap_Source_Reference) isConceptMap_Source_Source() {}

func (m *ConceptMap_Source) GetSource() isConceptMap_Source_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ConceptMap_Source) GetUri() *Uri {
	if x, ok := m.GetSource().(*ConceptMap_Source_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *ConceptMap_Source) GetReference() *Reference {
	if x, ok := m.GetSource().(*ConceptMap_Source_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ConceptMap_Source) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ConceptMap_Source_OneofMarshaler, _ConceptMap_Source_OneofUnmarshaler, _ConceptMap_Source_OneofSizer, []interface{}{
		(*ConceptMap_Source_Uri)(nil),
		(*ConceptMap_Source_Reference)(nil),
	}
}

func _ConceptMap_Source_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ConceptMap_Source)
	// source
	switch x := m.Source.(type) {
	case *ConceptMap_Source_Uri:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *ConceptMap_Source_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ConceptMap_Source.Source has unexpected type %T", x)
	}
	return nil
}

func _ConceptMap_Source_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ConceptMap_Source)
	switch tag {
	case 1: // source.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Source = &ConceptMap_Source_Uri{msg}
		return true, err
	case 2: // source.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Source = &ConceptMap_Source_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ConceptMap_Source_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ConceptMap_Source)
	// source
	switch x := m.Source.(type) {
	case *ConceptMap_Source_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConceptMap_Source_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides context to the mappings
type ConceptMap_Target struct {
	// Types that are valid to be assigned to Target:
	//	*ConceptMap_Target_Uri
	//	*ConceptMap_Target_Reference
	Target               isConceptMap_Target_Target `protobuf_oneof:"target"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ConceptMap_Target) Reset()         { *m = ConceptMap_Target{} }
func (m *ConceptMap_Target) String() string { return proto.CompactTextString(m) }
func (*ConceptMap_Target) ProtoMessage()    {}
func (*ConceptMap_Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{23, 1}
}

func (m *ConceptMap_Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConceptMap_Target.Unmarshal(m, b)
}
func (m *ConceptMap_Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConceptMap_Target.Marshal(b, m, deterministic)
}
func (m *ConceptMap_Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConceptMap_Target.Merge(m, src)
}
func (m *ConceptMap_Target) XXX_Size() int {
	return xxx_messageInfo_ConceptMap_Target.Size(m)
}
func (m *ConceptMap_Target) XXX_DiscardUnknown() {
	xxx_messageInfo_ConceptMap_Target.DiscardUnknown(m)
}

var xxx_messageInfo_ConceptMap_Target proto.InternalMessageInfo

type isConceptMap_Target_Target interface {
	isConceptMap_Target_Target()
}

type ConceptMap_Target_Uri struct {
	Uri *Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

type ConceptMap_Target_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*ConceptMap_Target_Uri) isConceptMap_Target_Target() {}

func (*ConceptMap_Target_Reference) isConceptMap_Target_Target() {}

func (m *ConceptMap_Target) GetTarget() isConceptMap_Target_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ConceptMap_Target) GetUri() *Uri {
	if x, ok := m.GetTarget().(*ConceptMap_Target_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *ConceptMap_Target) GetReference() *Reference {
	if x, ok := m.GetTarget().(*ConceptMap_Target_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ConceptMap_Target) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ConceptMap_Target_OneofMarshaler, _ConceptMap_Target_OneofUnmarshaler, _ConceptMap_Target_OneofSizer, []interface{}{
		(*ConceptMap_Target_Uri)(nil),
		(*ConceptMap_Target_Reference)(nil),
	}
}

func _ConceptMap_Target_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ConceptMap_Target)
	// target
	switch x := m.Target.(type) {
	case *ConceptMap_Target_Uri:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *ConceptMap_Target_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ConceptMap_Target.Target has unexpected type %T", x)
	}
	return nil
}

func _ConceptMap_Target_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ConceptMap_Target)
	switch tag {
	case 1: // target.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Target = &ConceptMap_Target_Uri{msg}
		return true, err
	case 2: // target.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Target = &ConceptMap_Target_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ConceptMap_Target_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ConceptMap_Target)
	// target
	switch x := m.Target.(type) {
	case *ConceptMap_Target_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConceptMap_Target_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Same source and target systems
type ConceptMap_Group struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code System (if value set crosses code systems)
	Source *Uri `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	// Specific version of the  code system
	SourceVersion *String `protobuf:"bytes,5,opt,name=source_version,json=sourceVersion,proto3" json:"source_version,omitempty"`
	// System of the target (if necessary)
	Target *Uri `protobuf:"bytes,6,opt,name=target,proto3" json:"target,omitempty"`
	// Specific version of the  code system
	TargetVersion        *String                           `protobuf:"bytes,7,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
	Element              []*ConceptMap_Group_SourceElement `protobuf:"bytes,8,rep,name=element,proto3" json:"element,omitempty"`
	Unmapped             *ConceptMap_Group_Unmapped        `protobuf:"bytes,9,opt,name=unmapped,proto3" json:"unmapped,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ConceptMap_Group) Reset()         { *m = ConceptMap_Group{} }
func (m *ConceptMap_Group) String() string { return proto.CompactTextString(m) }
func (*ConceptMap_Group) ProtoMessage()    {}
func (*ConceptMap_Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{23, 2}
}

func (m *ConceptMap_Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConceptMap_Group.Unmarshal(m, b)
}
func (m *ConceptMap_Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConceptMap_Group.Marshal(b, m, deterministic)
}
func (m *ConceptMap_Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConceptMap_Group.Merge(m, src)
}
func (m *ConceptMap_Group) XXX_Size() int {
	return xxx_messageInfo_ConceptMap_Group.Size(m)
}
func (m *ConceptMap_Group) XXX_DiscardUnknown() {
	xxx_messageInfo_ConceptMap_Group.DiscardUnknown(m)
}

var xxx_messageInfo_ConceptMap_Group proto.InternalMessageInfo

func (m *ConceptMap_Group) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ConceptMap_Group) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ConceptMap_Group) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ConceptMap_Group) GetSource() *Uri {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ConceptMap_Group) GetSourceVersion() *String {
	if m != nil {
		return m.SourceVersion
	}
	return nil
}

func (m *ConceptMap_Group) GetTarget() *Uri {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ConceptMap_Group) GetTargetVersion() *String {
	if m != nil {
		return m.TargetVersion
	}
	return nil
}

func (m *ConceptMap_Group) GetElement() []*ConceptMap_Group_SourceElement {
	if m != nil {
		return m.Element
	}
	return nil
}

func (m *ConceptMap_Group) GetUnmapped() *ConceptMap_Group_Unmapped {
	if m != nil {
		return m.Unmapped
	}
	return nil
}

// Mappings for a concept from the source set
type ConceptMap_Group_SourceElement struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifies element being mapped
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Display for the code
	Display              *String                                         `protobuf:"bytes,5,opt,name=display,proto3" json:"display,omitempty"`
	Target               []*ConceptMap_Group_SourceElement_TargetElement `protobuf:"bytes,6,rep,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *ConceptMap_Group_SourceElement) Reset()         { *m = ConceptMap_Group_SourceElement{} }
func (m *ConceptMap_Group_SourceElement) String() string { return proto.CompactTextString(m) }
func (*ConceptMap_Group_SourceElement) ProtoMessage()    {}
func (*ConceptMap_Group_SourceElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{23, 2, 0}
}

func (m *ConceptMap_Group_SourceElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConceptMap_Group_SourceElement.Unmarshal(m, b)
}
func (m *ConceptMap_Group_SourceElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConceptMap_Group_SourceElement.Marshal(b, m, deterministic)
}
func (m *ConceptMap_Group_SourceElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConceptMap_Group_SourceElement.Merge(m, src)
}
func (m *ConceptMap_Group_SourceElement) XXX_Size() int {
	return xxx_messageInfo_ConceptMap_Group_SourceElement.Size(m)
}
func (m *ConceptMap_Group_SourceElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ConceptMap_Group_SourceElement.DiscardUnknown(m)
}

var xxx_messageInfo_ConceptMap_Group_SourceElement proto.InternalMessageInfo

func (m *ConceptMap_Group_SourceElement) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement) GetTarget() []*ConceptMap_Group_SourceElement_TargetElement {
	if m != nil {
		return m.Target
	}
	return nil
}

// Concept in target system for element
type ConceptMap_Group_SourceElement_TargetElement struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code that identifies the target element
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Display for the code
	Display *String `protobuf:"bytes,5,opt,name=display,proto3" json:"display,omitempty"`
	// relatedto | equivalent | equal | wider | subsumes | narrower |
	// specializes | inexact | unmatched | disjoint
	Equivalence *ConceptMapEquivalenceCode `protobuf:"bytes,6,opt,name=equivalence,proto3" json:"equivalence,omitempty"`
	// Description of status/issues in mapping
	Comment   *String                                                      `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	DependsOn []*ConceptMap_Group_SourceElement_TargetElement_OtherElement `protobuf:"bytes,8,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty"`
	// Other concepts that this mapping also produces
	Product              []*ConceptMap_Group_SourceElement_TargetElement_OtherElement `protobuf:"bytes,9,rep,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                     `json:"-"`
	XXX_unrecognized     []byte                                                       `json:"-"`
	XXX_sizecache        int32                                                        `json:"-"`
}

func (m *ConceptMap_Group_SourceElement_TargetElement) Reset() {
	*m = ConceptMap_Group_SourceElement_TargetElement{}
}
func (m *ConceptMap_Group_SourceElement_TargetElement) String() string {
	return proto.CompactTextString(m)
}
func (*ConceptMap_Group_SourceElement_TargetElement) ProtoMessage() {}
func (*ConceptMap_Group_SourceElement_TargetElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{23, 2, 0, 0}
}

func (m *ConceptMap_Group_SourceElement_TargetElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement.Unmarshal(m, b)
}
func (m *ConceptMap_Group_SourceElement_TargetElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement.Marshal(b, m, deterministic)
}
func (m *ConceptMap_Group_SourceElement_TargetElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement.Merge(m, src)
}
func (m *ConceptMap_Group_SourceElement_TargetElement) XXX_Size() int {
	return xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement.Size(m)
}
func (m *ConceptMap_Group_SourceElement_TargetElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement.DiscardUnknown(m)
}

var xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement proto.InternalMessageInfo

func (m *ConceptMap_Group_SourceElement_TargetElement) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement) GetEquivalence() *ConceptMapEquivalenceCode {
	if m != nil {
		return m.Equivalence
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement) GetDependsOn() []*ConceptMap_Group_SourceElement_TargetElement_OtherElement {
	if m != nil {
		return m.DependsOn
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement) GetProduct() []*ConceptMap_Group_SourceElement_TargetElement_OtherElement {
	if m != nil {
		return m.Product
	}
	return nil
}

// Other elements required for this mapping (from context)
type ConceptMap_Group_SourceElement_TargetElement_OtherElement struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reference to property mapping depends on
	Property *Uri `protobuf:"bytes,4,opt,name=property,proto3" json:"property,omitempty"`
	// Code System (if necessary)
	System *Uri `protobuf:"bytes,5,opt,name=system,proto3" json:"system,omitempty"`
	// Value of the referenced element
	Code *String `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	// Display for the code
	Display              *String  `protobuf:"bytes,7,opt,name=display,proto3" json:"display,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) Reset() {
	*m = ConceptMap_Group_SourceElement_TargetElement_OtherElement{}
}
func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) String() string {
	return proto.CompactTextString(m)
}
func (*ConceptMap_Group_SourceElement_TargetElement_OtherElement) ProtoMessage() {}
func (*ConceptMap_Group_SourceElement_TargetElement_OtherElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{23, 2, 0, 0, 0}
}

func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement_OtherElement.Unmarshal(m, b)
}
func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement_OtherElement.Marshal(b, m, deterministic)
}
func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement_OtherElement.Merge(m, src)
}
func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) XXX_Size() int {
	return xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement_OtherElement.Size(m)
}
func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement_OtherElement.DiscardUnknown(m)
}

var xxx_messageInfo_ConceptMap_Group_SourceElement_TargetElement_OtherElement proto.InternalMessageInfo

func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) GetProperty() *Uri {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) GetSystem() *Uri {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) GetCode() *String {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ConceptMap_Group_SourceElement_TargetElement_OtherElement) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

// When no match in the mappings
type ConceptMap_Group_Unmapped struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// provided | fixed | other-map
	Mode *ConceptMapGroupUnmappedModeCode `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	// Fixed code when mode = fixed
	Code *Code `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Display for the code
	Display *String `protobuf:"bytes,6,opt,name=display,proto3" json:"display,omitempty"`
	// Canonical URL for other concept map
	Url                  *Uri     `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConceptMap_Group_Unmapped) Reset()         { *m = ConceptMap_Group_Unmapped{} }
func (m *ConceptMap_Group_Unmapped) String() string { return proto.CompactTextString(m) }
func (*ConceptMap_Group_Unmapped) ProtoMessage()    {}
func (*ConceptMap_Group_Unmapped) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{23, 2, 1}
}

func (m *ConceptMap_Group_Unmapped) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConceptMap_Group_Unmapped.Unmarshal(m, b)
}
func (m *ConceptMap_Group_Unmapped) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConceptMap_Group_Unmapped.Marshal(b, m, deterministic)
}
func (m *ConceptMap_Group_Unmapped) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConceptMap_Group_Unmapped.Merge(m, src)
}
func (m *ConceptMap_Group_Unmapped) XXX_Size() int {
	return xxx_messageInfo_ConceptMap_Group_Unmapped.Size(m)
}
func (m *ConceptMap_Group_Unmapped) XXX_DiscardUnknown() {
	xxx_messageInfo_ConceptMap_Group_Unmapped.DiscardUnknown(m)
}

var xxx_messageInfo_ConceptMap_Group_Unmapped proto.InternalMessageInfo

func (m *ConceptMap_Group_Unmapped) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ConceptMap_Group_Unmapped) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ConceptMap_Group_Unmapped) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ConceptMap_Group_Unmapped) GetMode() *ConceptMapGroupUnmappedModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *ConceptMap_Group_Unmapped) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ConceptMap_Group_Unmapped) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *ConceptMap_Group_Unmapped) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

// Auto-generated from StructureDefinition for Condition, last updated
// 2017-04-19T07:44:43.294+10:00. Detailed information about conditions,
// problems or diagnoses. See http://hl7.org/fhir/StructureDefinition/Condition
type Condition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this condition
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | recurrence | inactive | remission | resolved
	ClinicalStatus *ConditionClinicalStatusCodesCode `protobuf:"bytes,10,opt,name=clinical_status,json=clinicalStatus,proto3" json:"clinical_status,omitempty"`
	// provisional | differential | confirmed | refuted | entered-in-error |
	// unknown
	VerificationStatus *ConditionVerificationStatusCode `protobuf:"bytes,11,opt,name=verification_status,json=verificationStatus,proto3" json:"verification_status,omitempty"`
	// problem-list-item | encounter-diagnosis
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Subjective severity of condition
	Severity *CodeableConcept `protobuf:"bytes,13,opt,name=severity,proto3" json:"severity,omitempty"`
	// Identification of the condition, problem or diagnosis
	Code *CodeableConcept `protobuf:"bytes,14,opt,name=code,proto3" json:"code,omitempty"`
	// Anatomical location, if relevant
	BodySite []*CodeableConcept `protobuf:"bytes,15,rep,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Who has the condition?
	Subject *Reference `protobuf:"bytes,16,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or episode when condition first asserted
	Context   *Reference           `protobuf:"bytes,17,opt,name=context,proto3" json:"context,omitempty"`
	Onset     *Condition_Onset     `protobuf:"bytes,18,opt,name=onset,proto3" json:"onset,omitempty"`
	Abatement *Condition_Abatement `protobuf:"bytes,19,opt,name=abatement,proto3" json:"abatement,omitempty"`
	// Date record was believed accurate
	AssertedDate *DateTime `protobuf:"bytes,20,opt,name=asserted_date,json=assertedDate,proto3" json:"asserted_date,omitempty"`
	// Person who asserts this condition
	Asserter *Reference            `protobuf:"bytes,21,opt,name=asserter,proto3" json:"asserter,omitempty"`
	Stage    *Condition_Stage      `protobuf:"bytes,22,opt,name=stage,proto3" json:"stage,omitempty"`
	Evidence []*Condition_Evidence `protobuf:"bytes,23,rep,name=evidence,proto3" json:"evidence,omitempty"`
	// Additional information about the Condition
	Note                 []*Annotation `protobuf:"bytes,24,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{24}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Condition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Condition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Condition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Condition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Condition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Condition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Condition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Condition) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Condition) GetClinicalStatus() *ConditionClinicalStatusCodesCode {
	if m != nil {
		return m.ClinicalStatus
	}
	return nil
}

func (m *Condition) GetVerificationStatus() *ConditionVerificationStatusCode {
	if m != nil {
		return m.VerificationStatus
	}
	return nil
}

func (m *Condition) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Condition) GetSeverity() *CodeableConcept {
	if m != nil {
		return m.Severity
	}
	return nil
}

func (m *Condition) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Condition) GetBodySite() []*CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Condition) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Condition) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Condition) GetOnset() *Condition_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *Condition) GetAbatement() *Condition_Abatement {
	if m != nil {
		return m.Abatement
	}
	return nil
}

func (m *Condition) GetAssertedDate() *DateTime {
	if m != nil {
		return m.AssertedDate
	}
	return nil
}

func (m *Condition) GetAsserter() *Reference {
	if m != nil {
		return m.Asserter
	}
	return nil
}

func (m *Condition) GetStage() *Condition_Stage {
	if m != nil {
		return m.Stage
	}
	return nil
}

func (m *Condition) GetEvidence() []*Condition_Evidence {
	if m != nil {
		return m.Evidence
	}
	return nil
}

func (m *Condition) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Estimated or actual date,  date-time, or age
type Condition_Onset struct {
	// Types that are valid to be assigned to Onset:
	//	*Condition_Onset_DateTime
	//	*Condition_Onset_Age
	//	*Condition_Onset_Period
	//	*Condition_Onset_Range
	//	*Condition_Onset_StringValue
	Onset                isCondition_Onset_Onset `protobuf_oneof:"onset"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Condition_Onset) Reset()         { *m = Condition_Onset{} }
func (m *Condition_Onset) String() string { return proto.CompactTextString(m) }
func (*Condition_Onset) ProtoMessage()    {}
func (*Condition_Onset) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{24, 0}
}

func (m *Condition_Onset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition_Onset.Unmarshal(m, b)
}
func (m *Condition_Onset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition_Onset.Marshal(b, m, deterministic)
}
func (m *Condition_Onset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition_Onset.Merge(m, src)
}
func (m *Condition_Onset) XXX_Size() int {
	return xxx_messageInfo_Condition_Onset.Size(m)
}
func (m *Condition_Onset) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition_Onset.DiscardUnknown(m)
}

var xxx_messageInfo_Condition_Onset proto.InternalMessageInfo

type isCondition_Onset_Onset interface {
	isCondition_Onset_Onset()
}

type Condition_Onset_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Condition_Onset_Age struct {
	Age *Age `protobuf:"bytes,2,opt,name=age,proto3,oneof"`
}

type Condition_Onset_Period struct {
	Period *Period `protobuf:"bytes,3,opt,name=period,proto3,oneof"`
}

type Condition_Onset_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type Condition_Onset_StringValue struct {
	StringValue *String `protobuf:"bytes,5,opt,name=string_value,json=string,proto3,oneof"`
}

func (*Condition_Onset_DateTime) isCondition_Onset_Onset() {}

func (*Condition_Onset_Age) isCondition_Onset_Onset() {}

func (*Condition_Onset_Period) isCondition_Onset_Onset() {}

func (*Condition_Onset_Range) isCondition_Onset_Onset() {}

func (*Condition_Onset_StringValue) isCondition_Onset_Onset() {}

func (m *Condition_Onset) GetOnset() isCondition_Onset_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *Condition_Onset) GetDateTime() *DateTime {
	if x, ok := m.GetOnset().(*Condition_Onset_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Condition_Onset) GetAge() *Age {
	if x, ok := m.GetOnset().(*Condition_Onset_Age); ok {
		return x.Age
	}
	return nil
}

func (m *Condition_Onset) GetPeriod() *Period {
	if x, ok := m.GetOnset().(*Condition_Onset_Period); ok {
		return x.Period
	}
	return nil
}

func (m *Condition_Onset) GetRange() *Range {
	if x, ok := m.GetOnset().(*Condition_Onset_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Condition_Onset) GetStringValue() *String {
	if x, ok := m.GetOnset().(*Condition_Onset_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Condition_Onset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Condition_Onset_OneofMarshaler, _Condition_Onset_OneofUnmarshaler, _Condition_Onset_OneofSizer, []interface{}{
		(*Condition_Onset_DateTime)(nil),
		(*Condition_Onset_Age)(nil),
		(*Condition_Onset_Period)(nil),
		(*Condition_Onset_Range)(nil),
		(*Condition_Onset_StringValue)(nil),
	}
}

func _Condition_Onset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Condition_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *Condition_Onset_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Condition_Onset_Age:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *Condition_Onset_Period:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *Condition_Onset_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Condition_Onset_StringValue:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Condition_Onset.Onset has unexpected type %T", x)
	}
	return nil
}

func _Condition_Onset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Condition_Onset)
	switch tag {
	case 1: // onset.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Onset = &Condition_Onset_DateTime{msg}
		return true, err
	case 2: // onset.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Onset = &Condition_Onset_Age{msg}
		return true, err
	case 3: // onset.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Onset = &Condition_Onset_Period{msg}
		return true, err
	case 4: // onset.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Onset = &Condition_Onset_Range{msg}
		return true, err
	case 5: // onset.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Onset = &Condition_Onset_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Condition_Onset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Condition_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *Condition_Onset_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Condition_Onset_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Condition_Onset_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Condition_Onset_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Condition_Onset_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// If/when in resolution/remission
type Condition_Abatement struct {
	// Types that are valid to be assigned to Abatement:
	//	*Condition_Abatement_DateTime
	//	*Condition_Abatement_Age
	//	*Condition_Abatement_Boolean
	//	*Condition_Abatement_Period
	//	*Condition_Abatement_Range
	//	*Condition_Abatement_StringValue
	Abatement            isCondition_Abatement_Abatement `protobuf_oneof:"abatement"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Condition_Abatement) Reset()         { *m = Condition_Abatement{} }
func (m *Condition_Abatement) String() string { return proto.CompactTextString(m) }
func (*Condition_Abatement) ProtoMessage()    {}
func (*Condition_Abatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{24, 1}
}

func (m *Condition_Abatement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition_Abatement.Unmarshal(m, b)
}
func (m *Condition_Abatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition_Abatement.Marshal(b, m, deterministic)
}
func (m *Condition_Abatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition_Abatement.Merge(m, src)
}
func (m *Condition_Abatement) XXX_Size() int {
	return xxx_messageInfo_Condition_Abatement.Size(m)
}
func (m *Condition_Abatement) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition_Abatement.DiscardUnknown(m)
}

var xxx_messageInfo_Condition_Abatement proto.InternalMessageInfo

type isCondition_Abatement_Abatement interface {
	isCondition_Abatement_Abatement()
}

type Condition_Abatement_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Condition_Abatement_Age struct {
	Age *Age `protobuf:"bytes,2,opt,name=age,proto3,oneof"`
}

type Condition_Abatement_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,3,opt,name=boolean,proto3,oneof"`
}

type Condition_Abatement_Period struct {
	Period *Period `protobuf:"bytes,4,opt,name=period,proto3,oneof"`
}

type Condition_Abatement_Range struct {
	Range *Range `protobuf:"bytes,5,opt,name=range,proto3,oneof"`
}

type Condition_Abatement_StringValue struct {
	StringValue *String `protobuf:"bytes,6,opt,name=string_value,json=string,proto3,oneof"`
}

func (*Condition_Abatement_DateTime) isCondition_Abatement_Abatement() {}

func (*Condition_Abatement_Age) isCondition_Abatement_Abatement() {}

func (*Condition_Abatement_Boolean) isCondition_Abatement_Abatement() {}

func (*Condition_Abatement_Period) isCondition_Abatement_Abatement() {}

func (*Condition_Abatement_Range) isCondition_Abatement_Abatement() {}

func (*Condition_Abatement_StringValue) isCondition_Abatement_Abatement() {}

func (m *Condition_Abatement) GetAbatement() isCondition_Abatement_Abatement {
	if m != nil {
		return m.Abatement
	}
	return nil
}

func (m *Condition_Abatement) GetDateTime() *DateTime {
	if x, ok := m.GetAbatement().(*Condition_Abatement_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Condition_Abatement) GetAge() *Age {
	if x, ok := m.GetAbatement().(*Condition_Abatement_Age); ok {
		return x.Age
	}
	return nil
}

func (m *Condition_Abatement) GetBoolean() *Boolean {
	if x, ok := m.GetAbatement().(*Condition_Abatement_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Condition_Abatement) GetPeriod() *Period {
	if x, ok := m.GetAbatement().(*Condition_Abatement_Period); ok {
		return x.Period
	}
	return nil
}

func (m *Condition_Abatement) GetRange() *Range {
	if x, ok := m.GetAbatement().(*Condition_Abatement_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Condition_Abatement) GetStringValue() *String {
	if x, ok := m.GetAbatement().(*Condition_Abatement_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Condition_Abatement) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Condition_Abatement_OneofMarshaler, _Condition_Abatement_OneofUnmarshaler, _Condition_Abatement_OneofSizer, []interface{}{
		(*Condition_Abatement_DateTime)(nil),
		(*Condition_Abatement_Age)(nil),
		(*Condition_Abatement_Boolean)(nil),
		(*Condition_Abatement_Period)(nil),
		(*Condition_Abatement_Range)(nil),
		(*Condition_Abatement_StringValue)(nil),
	}
}

func _Condition_Abatement_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Condition_Abatement)
	// abatement
	switch x := m.Abatement.(type) {
	case *Condition_Abatement_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Condition_Abatement_Age:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *Condition_Abatement_Boolean:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Condition_Abatement_Period:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *Condition_Abatement_Range:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Condition_Abatement_StringValue:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Condition_Abatement.Abatement has unexpected type %T", x)
	}
	return nil
}

func _Condition_Abatement_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Condition_Abatement)
	switch tag {
	case 1: // abatement.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Abatement = &Condition_Abatement_DateTime{msg}
		return true, err
	case 2: // abatement.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Abatement = &Condition_Abatement_Age{msg}
		return true, err
	case 3: // abatement.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Abatement = &Condition_Abatement_Boolean{msg}
		return true, err
	case 4: // abatement.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Abatement = &Condition_Abatement_Period{msg}
		return true, err
	case 5: // abatement.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Abatement = &Condition_Abatement_Range{msg}
		return true, err
	case 6: // abatement.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Abatement = &Condition_Abatement_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Condition_Abatement_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Condition_Abatement)
	// abatement
	switch x := m.Abatement.(type) {
	case *Condition_Abatement_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Condition_Abatement_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Condition_Abatement_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Condition_Abatement_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Condition_Abatement_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Condition_Abatement_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Stage/grade, usually assessed formally
type Condition_Stage struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Simple summary (disease specific)
	Summary *CodeableConcept `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	// Formal record of assessment
	Assessment           []*Reference `protobuf:"bytes,5,rep,name=assessment,proto3" json:"assessment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Condition_Stage) Reset()         { *m = Condition_Stage{} }
func (m *Condition_Stage) String() string { return proto.CompactTextString(m) }
func (*Condition_Stage) ProtoMessage()    {}
func (*Condition_Stage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{24, 2}
}

func (m *Condition_Stage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition_Stage.Unmarshal(m, b)
}
func (m *Condition_Stage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition_Stage.Marshal(b, m, deterministic)
}
func (m *Condition_Stage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition_Stage.Merge(m, src)
}
func (m *Condition_Stage) XXX_Size() int {
	return xxx_messageInfo_Condition_Stage.Size(m)
}
func (m *Condition_Stage) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition_Stage.DiscardUnknown(m)
}

var xxx_messageInfo_Condition_Stage proto.InternalMessageInfo

func (m *Condition_Stage) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Condition_Stage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Condition_Stage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Condition_Stage) GetSummary() *CodeableConcept {
	if m != nil {
		return m.Summary
	}
	return nil
}

func (m *Condition_Stage) GetAssessment() []*Reference {
	if m != nil {
		return m.Assessment
	}
	return nil
}

// Supporting evidence
type Condition_Evidence struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Manifestation/symptom
	Code []*CodeableConcept `protobuf:"bytes,4,rep,name=code,proto3" json:"code,omitempty"`
	// Supporting information found elsewhere
	Detail               []*Reference `protobuf:"bytes,5,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Condition_Evidence) Reset()         { *m = Condition_Evidence{} }
func (m *Condition_Evidence) String() string { return proto.CompactTextString(m) }
func (*Condition_Evidence) ProtoMessage()    {}
func (*Condition_Evidence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{24, 3}
}

func (m *Condition_Evidence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition_Evidence.Unmarshal(m, b)
}
func (m *Condition_Evidence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition_Evidence.Marshal(b, m, deterministic)
}
func (m *Condition_Evidence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition_Evidence.Merge(m, src)
}
func (m *Condition_Evidence) XXX_Size() int {
	return xxx_messageInfo_Condition_Evidence.Size(m)
}
func (m *Condition_Evidence) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition_Evidence.DiscardUnknown(m)
}

var xxx_messageInfo_Condition_Evidence proto.InternalMessageInfo

func (m *Condition_Evidence) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Condition_Evidence) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Condition_Evidence) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Condition_Evidence) GetCode() []*CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Condition_Evidence) GetDetail() []*Reference {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Auto-generated from StructureDefinition for Consent, last updated
// 2017-04-19T07:44:43.294+10:00. A healthcare consumer's policy choices to
// permits or denies recipients or roles to perform actions for specific
// purposes and periods of time. See
// http://hl7.org/fhir/StructureDefinition/Consent
type Consent struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifier for this record (external references)
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// draft | proposed | active | rejected | inactive | entered-in-error
	Status *ConsentStateCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of the consent statement - for indexing/retrieval
	Category []*CodeableConcept `protobuf:"bytes,11,rep,name=category,proto3" json:"category,omitempty"`
	// Who the consent applies to
	Patient *Reference `protobuf:"bytes,12,opt,name=patient,proto3" json:"patient,omitempty"`
	// Period that this consent applies
	Period *Period `protobuf:"bytes,13,opt,name=period,proto3" json:"period,omitempty"`
	// When this Consent was created or indexed
	DateTime *DateTime `protobuf:"bytes,14,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	// Who is agreeing to the policy and exceptions
	ConsentingParty []*Reference     `protobuf:"bytes,15,rep,name=consenting_party,json=consentingParty,proto3" json:"consenting_party,omitempty"`
	Actor           []*Consent_Actor `protobuf:"bytes,16,rep,name=actor,proto3" json:"actor,omitempty"`
	// Actions controlled by this consent
	Action []*CodeableConcept `protobuf:"bytes,17,rep,name=action,proto3" json:"action,omitempty"`
	// Custodian of the consent
	Organization []*Reference      `protobuf:"bytes,18,rep,name=organization,proto3" json:"organization,omitempty"`
	Source       *Consent_Source   `protobuf:"bytes,19,opt,name=source,proto3" json:"source,omitempty"`
	Policy       []*Consent_Policy `protobuf:"bytes,20,rep,name=policy,proto3" json:"policy,omitempty"`
	// Policy that this consents to
	PolicyRule *Uri `protobuf:"bytes,21,opt,name=policy_rule,json=policyRule,proto3" json:"policy_rule,omitempty"`
	// Security Labels that define affected resources
	SecurityLabel []*Coding `protobuf:"bytes,22,rep,name=security_label,json=securityLabel,proto3" json:"security_label,omitempty"`
	// Context of activities for which the agreement is made
	Purpose []*Coding `protobuf:"bytes,23,rep,name=purpose,proto3" json:"purpose,omitempty"`
	// Timeframe for data controlled by this consent
	DataPeriod           *Period           `protobuf:"bytes,24,opt,name=data_period,json=dataPeriod,proto3" json:"data_period,omitempty"`
	Data                 []*Consent_Data   `protobuf:"bytes,25,rep,name=data,proto3" json:"data,omitempty"`
	Except               []*Consent_Except `protobuf:"bytes,26,rep,name=except,proto3" json:"except,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Consent) Reset()         { *m = Consent{} }
func (m *Consent) String() string { return proto.CompactTextString(m) }
func (*Consent) ProtoMessage()    {}
func (*Consent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{25}
}

func (m *Consent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consent.Unmarshal(m, b)
}
func (m *Consent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consent.Marshal(b, m, deterministic)
}
func (m *Consent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consent.Merge(m, src)
}
func (m *Consent) XXX_Size() int {
	return xxx_messageInfo_Consent.Size(m)
}
func (m *Consent) XXX_DiscardUnknown() {
	xxx_messageInfo_Consent.DiscardUnknown(m)
}

var xxx_messageInfo_Consent proto.InternalMessageInfo

func (m *Consent) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Consent) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Consent) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Consent) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Consent) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Consent) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Consent) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Consent) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Consent) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Consent) GetStatus() *ConsentStateCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Consent) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Consent) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *Consent) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Consent) GetDateTime() *DateTime {
	if m != nil {
		return m.DateTime
	}
	return nil
}

func (m *Consent) GetConsentingParty() []*Reference {
	if m != nil {
		return m.ConsentingParty
	}
	return nil
}

func (m *Consent) GetActor() []*Consent_Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *Consent) GetAction() []*CodeableConcept {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Consent) GetOrganization() []*Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *Consent) GetSource() *Consent_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Consent) GetPolicy() []*Consent_Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *Consent) GetPolicyRule() *Uri {
	if m != nil {
		return m.PolicyRule
	}
	return nil
}

func (m *Consent) GetSecurityLabel() []*Coding {
	if m != nil {
		return m.SecurityLabel
	}
	return nil
}

func (m *Consent) GetPurpose() []*Coding {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *Consent) GetDataPeriod() *Period {
	if m != nil {
		return m.DataPeriod
	}
	return nil
}

func (m *Consent) GetData() []*Consent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Consent) GetExcept() []*Consent_Except {
	if m != nil {
		return m.Except
	}
	return nil
}

// Who|what controlled by this consent (or group, by role)
type Consent_Actor struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// How the actor is involved
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Resource for the actor (or group, by role)
	Reference            *Reference `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Consent_Actor) Reset()         { *m = Consent_Actor{} }
func (m *Consent_Actor) String() string { return proto.CompactTextString(m) }
func (*Consent_Actor) ProtoMessage()    {}
func (*Consent_Actor) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{25, 0}
}

func (m *Consent_Actor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consent_Actor.Unmarshal(m, b)
}
func (m *Consent_Actor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consent_Actor.Marshal(b, m, deterministic)
}
func (m *Consent_Actor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consent_Actor.Merge(m, src)
}
func (m *Consent_Actor) XXX_Size() int {
	return xxx_messageInfo_Consent_Actor.Size(m)
}
func (m *Consent_Actor) XXX_DiscardUnknown() {
	xxx_messageInfo_Consent_Actor.DiscardUnknown(m)
}

var xxx_messageInfo_Consent_Actor proto.InternalMessageInfo

func (m *Consent_Actor) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Consent_Actor) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Consent_Actor) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Consent_Actor) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Consent_Actor) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

// Source from which this consent is taken
type Consent_Source struct {
	// Types that are valid to be assigned to Source:
	//	*Consent_Source_Attachment
	//	*Consent_Source_Identifier
	//	*Consent_Source_Reference
	Source               isConsent_Source_Source `protobuf_oneof:"source"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Consent_Source) Reset()         { *m = Consent_Source{} }
func (m *Consent_Source) String() string { return proto.CompactTextString(m) }
func (*Consent_Source) ProtoMessage()    {}
func (*Consent_Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{25, 1}
}

func (m *Consent_Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consent_Source.Unmarshal(m, b)
}
func (m *Consent_Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consent_Source.Marshal(b, m, deterministic)
}
func (m *Consent_Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consent_Source.Merge(m, src)
}
func (m *Consent_Source) XXX_Size() int {
	return xxx_messageInfo_Consent_Source.Size(m)
}
func (m *Consent_Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Consent_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Consent_Source proto.InternalMessageInfo

type isConsent_Source_Source interface {
	isConsent_Source_Source()
}

type Consent_Source_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,1,opt,name=attachment,proto3,oneof"`
}

type Consent_Source_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,2,opt,name=identifier,proto3,oneof"`
}

type Consent_Source_Reference struct {
	Reference *Reference `protobuf:"bytes,3,opt,name=reference,proto3,oneof"`
}

func (*Consent_Source_Attachment) isConsent_Source_Source() {}

func (*Consent_Source_Identifier) isConsent_Source_Source() {}

func (*Consent_Source_Reference) isConsent_Source_Source() {}

func (m *Consent_Source) GetSource() isConsent_Source_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Consent_Source) GetAttachment() *Attachment {
	if x, ok := m.GetSource().(*Consent_Source_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Consent_Source) GetIdentifier() *Identifier {
	if x, ok := m.GetSource().(*Consent_Source_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (m *Consent_Source) GetReference() *Reference {
	if x, ok := m.GetSource().(*Consent_Source_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Consent_Source) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Consent_Source_OneofMarshaler, _Consent_Source_OneofUnmarshaler, _Consent_Source_OneofSizer, []interface{}{
		(*Consent_Source_Attachment)(nil),
		(*Consent_Source_Identifier)(nil),
		(*Consent_Source_Reference)(nil),
	}
}

func _Consent_Source_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Consent_Source)
	// source
	switch x := m.Source.(type) {
	case *Consent_Source_Attachment:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Consent_Source_Identifier:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case *Consent_Source_Reference:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Consent_Source.Source has unexpected type %T", x)
	}
	return nil
}

func _Consent_Source_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Consent_Source)
	switch tag {
	case 1: // source.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Source = &Consent_Source_Attachment{msg}
		return true, err
	case 2: // source.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.Source = &Consent_Source_Identifier{msg}
		return true, err
	case 3: // source.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Source = &Consent_Source_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Consent_Source_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Consent_Source)
	// source
	switch x := m.Source.(type) {
	case *Consent_Source_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Consent_Source_Identifier:
		s := proto.Size(x.Identifier)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Consent_Source_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Policies covered by this consent
type Consent_Policy struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Enforcement source for policy
	Authority *Uri `protobuf:"bytes,4,opt,name=authority,proto3" json:"authority,omitempty"`
	// Specific policy covered by this consent
	Uri                  *Uri     `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Consent_Policy) Reset()         { *m = Consent_Policy{} }
func (m *Consent_Policy) String() string { return proto.CompactTextString(m) }
func (*Consent_Policy) ProtoMessage()    {}
func (*Consent_Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{25, 2}
}

func (m *Consent_Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consent_Policy.Unmarshal(m, b)
}
func (m *Consent_Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consent_Policy.Marshal(b, m, deterministic)
}
func (m *Consent_Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consent_Policy.Merge(m, src)
}
func (m *Consent_Policy) XXX_Size() int {
	return xxx_messageInfo_Consent_Policy.Size(m)
}
func (m *Consent_Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Consent_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Consent_Policy proto.InternalMessageInfo

func (m *Consent_Policy) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Consent_Policy) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Consent_Policy) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Consent_Policy) GetAuthority() *Uri {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (m *Consent_Policy) GetUri() *Uri {
	if m != nil {
		return m.Uri
	}
	return nil
}

// Data controlled by this consent
type Consent_Data struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// instance | related | dependents | authoredby
	Meaning *ConsentDataMeaningCode `protobuf:"bytes,4,opt,name=meaning,proto3" json:"meaning,omitempty"`
	// The actual data reference
	Reference            *Reference `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Consent_Data) Reset()         { *m = Consent_Data{} }
func (m *Consent_Data) String() string { return proto.CompactTextString(m) }
func (*Consent_Data) ProtoMessage()    {}
func (*Consent_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{25, 3}
}

func (m *Consent_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consent_Data.Unmarshal(m, b)
}
func (m *Consent_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consent_Data.Marshal(b, m, deterministic)
}
func (m *Consent_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consent_Data.Merge(m, src)
}
func (m *Consent_Data) XXX_Size() int {
	return xxx_messageInfo_Consent_Data.Size(m)
}
func (m *Consent_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Consent_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Consent_Data proto.InternalMessageInfo

func (m *Consent_Data) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Consent_Data) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Consent_Data) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Consent_Data) GetMeaning() *ConsentDataMeaningCode {
	if m != nil {
		return m.Meaning
	}
	return nil
}

func (m *Consent_Data) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

// Additional rule -  addition or removal of permissions
type Consent_Except struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// deny | permit
	Type *ConsentExceptTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Timeframe for this exception
	Period *Period                       `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	Actor  []*Consent_Except_ExceptActor `protobuf:"bytes,6,rep,name=actor,proto3" json:"actor,omitempty"`
	// Actions controlled by this exception
	Action []*CodeableConcept `protobuf:"bytes,7,rep,name=action,proto3" json:"action,omitempty"`
	// Security Labels that define affected resources
	SecurityLabel []*Coding `protobuf:"bytes,8,rep,name=security_label,json=securityLabel,proto3" json:"security_label,omitempty"`
	// Context of activities covered by this exception
	Purpose []*Coding `protobuf:"bytes,9,rep,name=purpose,proto3" json:"purpose,omitempty"`
	// e.g. Resource Type, Profile, or CDA etc
	ClassValue []*Coding `protobuf:"bytes,10,rep,name=class_value,json=class,proto3" json:"class_value,omitempty"`
	// e.g. LOINC or SNOMED CT code, etc in the content
	Code []*Coding `protobuf:"bytes,11,rep,name=code,proto3" json:"code,omitempty"`
	// Timeframe for data controlled by this exception
	DataPeriod           *Period                      `protobuf:"bytes,12,opt,name=data_period,json=dataPeriod,proto3" json:"data_period,omitempty"`
	Data                 []*Consent_Except_ExceptData `protobuf:"bytes,13,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Consent_Except) Reset()         { *m = Consent_Except{} }
func (m *Consent_Except) String() string { return proto.CompactTextString(m) }
func (*Consent_Except) ProtoMessage()    {}
func (*Consent_Except) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{25, 4}
}

func (m *Consent_Except) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consent_Except.Unmarshal(m, b)
}
func (m *Consent_Except) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consent_Except.Marshal(b, m, deterministic)
}
func (m *Consent_Except) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consent_Except.Merge(m, src)
}
func (m *Consent_Except) XXX_Size() int {
	return xxx_messageInfo_Consent_Except.Size(m)
}
func (m *Consent_Except) XXX_DiscardUnknown() {
	xxx_messageInfo_Consent_Except.DiscardUnknown(m)
}

var xxx_messageInfo_Consent_Except proto.InternalMessageInfo

func (m *Consent_Except) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Consent_Except) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Consent_Except) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Consent_Except) GetType() *ConsentExceptTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Consent_Except) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Consent_Except) GetActor() []*Consent_Except_ExceptActor {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *Consent_Except) GetAction() []*CodeableConcept {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Consent_Except) GetSecurityLabel() []*Coding {
	if m != nil {
		return m.SecurityLabel
	}
	return nil
}

func (m *Consent_Except) GetPurpose() []*Coding {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *Consent_Except) GetClassValue() []*Coding {
	if m != nil {
		return m.ClassValue
	}
	return nil
}

func (m *Consent_Except) GetCode() []*Coding {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Consent_Except) GetDataPeriod() *Period {
	if m != nil {
		return m.DataPeriod
	}
	return nil
}

func (m *Consent_Except) GetData() []*Consent_Except_ExceptData {
	if m != nil {
		return m.Data
	}
	return nil
}

// Who|what controlled by this exception (or group, by role)
type Consent_Except_ExceptActor struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// How the actor is involved
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Resource for the actor (or group, by role)
	Reference            *Reference `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Consent_Except_ExceptActor) Reset()         { *m = Consent_Except_ExceptActor{} }
func (m *Consent_Except_ExceptActor) String() string { return proto.CompactTextString(m) }
func (*Consent_Except_ExceptActor) ProtoMessage()    {}
func (*Consent_Except_ExceptActor) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{25, 4, 0}
}

func (m *Consent_Except_ExceptActor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consent_Except_ExceptActor.Unmarshal(m, b)
}
func (m *Consent_Except_ExceptActor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consent_Except_ExceptActor.Marshal(b, m, deterministic)
}
func (m *Consent_Except_ExceptActor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consent_Except_ExceptActor.Merge(m, src)
}
func (m *Consent_Except_ExceptActor) XXX_Size() int {
	return xxx_messageInfo_Consent_Except_ExceptActor.Size(m)
}
func (m *Consent_Except_ExceptActor) XXX_DiscardUnknown() {
	xxx_messageInfo_Consent_Except_ExceptActor.DiscardUnknown(m)
}

var xxx_messageInfo_Consent_Except_ExceptActor proto.InternalMessageInfo

func (m *Consent_Except_ExceptActor) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Consent_Except_ExceptActor) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Consent_Except_ExceptActor) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Consent_Except_ExceptActor) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Consent_Except_ExceptActor) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

// Data controlled by this exception
type Consent_Except_ExceptData struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// instance | related | dependents | authoredby
	Meaning *ConsentDataMeaningCode `protobuf:"bytes,4,opt,name=meaning,proto3" json:"meaning,omitempty"`
	// The actual data reference
	Reference            *Reference `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Consent_Except_ExceptData) Reset()         { *m = Consent_Except_ExceptData{} }
func (m *Consent_Except_ExceptData) String() string { return proto.CompactTextString(m) }
func (*Consent_Except_ExceptData) ProtoMessage()    {}
func (*Consent_Except_ExceptData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{25, 4, 1}
}

func (m *Consent_Except_ExceptData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consent_Except_ExceptData.Unmarshal(m, b)
}
func (m *Consent_Except_ExceptData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consent_Except_ExceptData.Marshal(b, m, deterministic)
}
func (m *Consent_Except_ExceptData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consent_Except_ExceptData.Merge(m, src)
}
func (m *Consent_Except_ExceptData) XXX_Size() int {
	return xxx_messageInfo_Consent_Except_ExceptData.Size(m)
}
func (m *Consent_Except_ExceptData) XXX_DiscardUnknown() {
	xxx_messageInfo_Consent_Except_ExceptData.DiscardUnknown(m)
}

var xxx_messageInfo_Consent_Except_ExceptData proto.InternalMessageInfo

func (m *Consent_Except_ExceptData) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Consent_Except_ExceptData) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Consent_Except_ExceptData) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Consent_Except_ExceptData) GetMeaning() *ConsentDataMeaningCode {
	if m != nil {
		return m.Meaning
	}
	return nil
}

func (m *Consent_Except_ExceptData) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

// Auto-generated from StructureDefinition for Contract, last updated
// 2017-04-19T07:44:43.294+10:00. Legal Agreement. See
// http://hl7.org/fhir/StructureDefinition/Contract
type Contract struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Contract number
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// amended | appended | cancelled | disputed | entered-in-error | executable |
	// executed | negotiable | offered | policy | rejected | renewed | revoked |
	// resolved | terminated
	Status *ContractResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// When this Contract was issued
	Issued *DateTime `protobuf:"bytes,11,opt,name=issued,proto3" json:"issued,omitempty"`
	// Effective time
	Applies *Period `protobuf:"bytes,12,opt,name=applies,proto3" json:"applies,omitempty"`
	// Contract Target Entity
	Subject []*Reference `protobuf:"bytes,13,rep,name=subject,proto3" json:"subject,omitempty"`
	// Context of the Contract
	Topic []*Reference `protobuf:"bytes,14,rep,name=topic,proto3" json:"topic,omitempty"`
	// Authority under which this Contract has standing
	Authority []*Reference `protobuf:"bytes,15,rep,name=authority,proto3" json:"authority,omitempty"`
	// Domain in which this Contract applies
	Domain []*Reference `protobuf:"bytes,16,rep,name=domain,proto3" json:"domain,omitempty"`
	// Type or form
	Type *CodeableConcept `protobuf:"bytes,17,opt,name=type,proto3" json:"type,omitempty"`
	// Subtype within the context of type
	SubType []*CodeableConcept `protobuf:"bytes,18,rep,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// Action stipulated by this Contract
	Action []*CodeableConcept `protobuf:"bytes,19,rep,name=action,proto3" json:"action,omitempty"`
	// Rationale for the stiplulated action
	ActionReason []*CodeableConcept `protobuf:"bytes,20,rep,name=action_reason,json=actionReason,proto3" json:"action_reason,omitempty"`
	// Decision by Grantor
	DecisionType *CodeableConcept `protobuf:"bytes,21,opt,name=decision_type,json=decisionType,proto3" json:"decision_type,omitempty"`
	// Content derived from the basal information
	ContentDerivative *CodeableConcept `protobuf:"bytes,22,opt,name=content_derivative,json=contentDerivative,proto3" json:"content_derivative,omitempty"`
	// Security Labels that define affected resources
	SecurityLabel        []*Coding                      `protobuf:"bytes,23,rep,name=security_label,json=securityLabel,proto3" json:"security_label,omitempty"`
	Agent                []*Contract_Agent              `protobuf:"bytes,24,rep,name=agent,proto3" json:"agent,omitempty"`
	Signer               []*Contract_Signatory          `protobuf:"bytes,25,rep,name=signer,proto3" json:"signer,omitempty"`
	ValuedItem           []*Contract_ValuedItem         `protobuf:"bytes,26,rep,name=valued_item,json=valuedItem,proto3" json:"valued_item,omitempty"`
	Term                 []*Contract_Term               `protobuf:"bytes,27,rep,name=term,proto3" json:"term,omitempty"`
	Binding              *Contract_Binding              `protobuf:"bytes,28,opt,name=binding,proto3" json:"binding,omitempty"`
	Friendly             []*Contract_FriendlyLanguage   `protobuf:"bytes,29,rep,name=friendly,proto3" json:"friendly,omitempty"`
	Legal                []*Contract_LegalLanguage      `protobuf:"bytes,30,rep,name=legal,proto3" json:"legal,omitempty"`
	Rule                 []*Contract_ComputableLanguage `protobuf:"bytes,31,rep,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Contract) Reset()         { *m = Contract{} }
func (m *Contract) String() string { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()    {}
func (*Contract) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26}
}

func (m *Contract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract.Unmarshal(m, b)
}
func (m *Contract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract.Marshal(b, m, deterministic)
}
func (m *Contract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract.Merge(m, src)
}
func (m *Contract) XXX_Size() int {
	return xxx_messageInfo_Contract.Size(m)
}
func (m *Contract) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract.DiscardUnknown(m)
}

var xxx_messageInfo_Contract proto.InternalMessageInfo

func (m *Contract) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Contract) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Contract) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Contract) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Contract) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Contract) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Contract) GetStatus() *ContractResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Contract) GetIssued() *DateTime {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Contract) GetApplies() *Period {
	if m != nil {
		return m.Applies
	}
	return nil
}

func (m *Contract) GetSubject() []*Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Contract) GetTopic() []*Reference {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Contract) GetAuthority() []*Reference {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (m *Contract) GetDomain() []*Reference {
	if m != nil {
		return m.Domain
	}
	return nil
}

func (m *Contract) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Contract) GetSubType() []*CodeableConcept {
	if m != nil {
		return m.SubType
	}
	return nil
}

func (m *Contract) GetAction() []*CodeableConcept {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Contract) GetActionReason() []*CodeableConcept {
	if m != nil {
		return m.ActionReason
	}
	return nil
}

func (m *Contract) GetDecisionType() *CodeableConcept {
	if m != nil {
		return m.DecisionType
	}
	return nil
}

func (m *Contract) GetContentDerivative() *CodeableConcept {
	if m != nil {
		return m.ContentDerivative
	}
	return nil
}

func (m *Contract) GetSecurityLabel() []*Coding {
	if m != nil {
		return m.SecurityLabel
	}
	return nil
}

func (m *Contract) GetAgent() []*Contract_Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *Contract) GetSigner() []*Contract_Signatory {
	if m != nil {
		return m.Signer
	}
	return nil
}

func (m *Contract) GetValuedItem() []*Contract_ValuedItem {
	if m != nil {
		return m.ValuedItem
	}
	return nil
}

func (m *Contract) GetTerm() []*Contract_Term {
	if m != nil {
		return m.Term
	}
	return nil
}

func (m *Contract) GetBinding() *Contract_Binding {
	if m != nil {
		return m.Binding
	}
	return nil
}

func (m *Contract) GetFriendly() []*Contract_FriendlyLanguage {
	if m != nil {
		return m.Friendly
	}
	return nil
}

func (m *Contract) GetLegal() []*Contract_LegalLanguage {
	if m != nil {
		return m.Legal
	}
	return nil
}

func (m *Contract) GetRule() []*Contract_ComputableLanguage {
	if m != nil {
		return m.Rule
	}
	return nil
}

// Entity being ascribed responsibility
type Contract_Agent struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Contract Agent Type
	Actor *Reference `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	// Role type of the agent
	Role                 []*CodeableConcept `protobuf:"bytes,5,rep,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Contract_Agent) Reset()         { *m = Contract_Agent{} }
func (m *Contract_Agent) String() string { return proto.CompactTextString(m) }
func (*Contract_Agent) ProtoMessage()    {}
func (*Contract_Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 0}
}

func (m *Contract_Agent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_Agent.Unmarshal(m, b)
}
func (m *Contract_Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_Agent.Marshal(b, m, deterministic)
}
func (m *Contract_Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_Agent.Merge(m, src)
}
func (m *Contract_Agent) XXX_Size() int {
	return xxx_messageInfo_Contract_Agent.Size(m)
}
func (m *Contract_Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_Agent proto.InternalMessageInfo

func (m *Contract_Agent) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract_Agent) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract_Agent) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract_Agent) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *Contract_Agent) GetRole() []*CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

// Contract Signatory
type Contract_Signatory struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Contract Signatory Role
	Type *Coding `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Contract Signatory Party
	Party *Reference `protobuf:"bytes,5,opt,name=party,proto3" json:"party,omitempty"`
	// Contract Documentation Signature
	Signature            []*Signature `protobuf:"bytes,6,rep,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Contract_Signatory) Reset()         { *m = Contract_Signatory{} }
func (m *Contract_Signatory) String() string { return proto.CompactTextString(m) }
func (*Contract_Signatory) ProtoMessage()    {}
func (*Contract_Signatory) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 1}
}

func (m *Contract_Signatory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_Signatory.Unmarshal(m, b)
}
func (m *Contract_Signatory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_Signatory.Marshal(b, m, deterministic)
}
func (m *Contract_Signatory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_Signatory.Merge(m, src)
}
func (m *Contract_Signatory) XXX_Size() int {
	return xxx_messageInfo_Contract_Signatory.Size(m)
}
func (m *Contract_Signatory) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_Signatory.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_Signatory proto.InternalMessageInfo

func (m *Contract_Signatory) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract_Signatory) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract_Signatory) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract_Signatory) GetType() *Coding {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Contract_Signatory) GetParty() *Reference {
	if m != nil {
		return m.Party
	}
	return nil
}

func (m *Contract_Signatory) GetSignature() []*Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Contract Valued Item List
type Contract_ValuedItem struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Entity            *Contract_ValuedItem_Entity `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	// Contract Valued Item Number
	Identifier *Identifier `protobuf:"bytes,5,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Contract Valued Item Effective Tiem
	EffectiveTime *DateTime `protobuf:"bytes,6,opt,name=effective_time,json=effectiveTime,proto3" json:"effective_time,omitempty"`
	// Count of Contract Valued Items
	Quantity *SimpleQuantity `protobuf:"bytes,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Contract Valued Item fee, charge, or cost
	UnitPrice *Money `protobuf:"bytes,8,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// Contract Valued Item Price Scaling Factor
	Factor *Decimal `protobuf:"bytes,9,opt,name=factor,proto3" json:"factor,omitempty"`
	// Contract Valued Item Difficulty Scaling Factor
	Points *Decimal `protobuf:"bytes,10,opt,name=points,proto3" json:"points,omitempty"`
	// Total Contract Valued Item Value
	Net                  *Money   `protobuf:"bytes,11,opt,name=net,proto3" json:"net,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contract_ValuedItem) Reset()         { *m = Contract_ValuedItem{} }
func (m *Contract_ValuedItem) String() string { return proto.CompactTextString(m) }
func (*Contract_ValuedItem) ProtoMessage()    {}
func (*Contract_ValuedItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 2}
}

func (m *Contract_ValuedItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_ValuedItem.Unmarshal(m, b)
}
func (m *Contract_ValuedItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_ValuedItem.Marshal(b, m, deterministic)
}
func (m *Contract_ValuedItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_ValuedItem.Merge(m, src)
}
func (m *Contract_ValuedItem) XXX_Size() int {
	return xxx_messageInfo_Contract_ValuedItem.Size(m)
}
func (m *Contract_ValuedItem) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_ValuedItem.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_ValuedItem proto.InternalMessageInfo

func (m *Contract_ValuedItem) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract_ValuedItem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract_ValuedItem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract_ValuedItem) GetEntity() *Contract_ValuedItem_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *Contract_ValuedItem) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Contract_ValuedItem) GetEffectiveTime() *DateTime {
	if m != nil {
		return m.EffectiveTime
	}
	return nil
}

func (m *Contract_ValuedItem) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Contract_ValuedItem) GetUnitPrice() *Money {
	if m != nil {
		return m.UnitPrice
	}
	return nil
}

func (m *Contract_ValuedItem) GetFactor() *Decimal {
	if m != nil {
		return m.Factor
	}
	return nil
}

func (m *Contract_ValuedItem) GetPoints() *Decimal {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *Contract_ValuedItem) GetNet() *Money {
	if m != nil {
		return m.Net
	}
	return nil
}

// Contract Valued Item Type
type Contract_ValuedItem_Entity struct {
	// Types that are valid to be assigned to Entity:
	//	*Contract_ValuedItem_Entity_CodeableConcept
	//	*Contract_ValuedItem_Entity_Reference
	Entity               isContract_ValuedItem_Entity_Entity `protobuf_oneof:"entity"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Contract_ValuedItem_Entity) Reset()         { *m = Contract_ValuedItem_Entity{} }
func (m *Contract_ValuedItem_Entity) String() string { return proto.CompactTextString(m) }
func (*Contract_ValuedItem_Entity) ProtoMessage()    {}
func (*Contract_ValuedItem_Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 2, 0}
}

func (m *Contract_ValuedItem_Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_ValuedItem_Entity.Unmarshal(m, b)
}
func (m *Contract_ValuedItem_Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_ValuedItem_Entity.Marshal(b, m, deterministic)
}
func (m *Contract_ValuedItem_Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_ValuedItem_Entity.Merge(m, src)
}
func (m *Contract_ValuedItem_Entity) XXX_Size() int {
	return xxx_messageInfo_Contract_ValuedItem_Entity.Size(m)
}
func (m *Contract_ValuedItem_Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_ValuedItem_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_ValuedItem_Entity proto.InternalMessageInfo

type isContract_ValuedItem_Entity_Entity interface {
	isContract_ValuedItem_Entity_Entity()
}

type Contract_ValuedItem_Entity_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Contract_ValuedItem_Entity_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Contract_ValuedItem_Entity_CodeableConcept) isContract_ValuedItem_Entity_Entity() {}

func (*Contract_ValuedItem_Entity_Reference) isContract_ValuedItem_Entity_Entity() {}

func (m *Contract_ValuedItem_Entity) GetEntity() isContract_ValuedItem_Entity_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *Contract_ValuedItem_Entity) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetEntity().(*Contract_ValuedItem_Entity_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Contract_ValuedItem_Entity) GetReference() *Reference {
	if x, ok := m.GetEntity().(*Contract_ValuedItem_Entity_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Contract_ValuedItem_Entity) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Contract_ValuedItem_Entity_OneofMarshaler, _Contract_ValuedItem_Entity_OneofUnmarshaler, _Contract_ValuedItem_Entity_OneofSizer, []interface{}{
		(*Contract_ValuedItem_Entity_CodeableConcept)(nil),
		(*Contract_ValuedItem_Entity_Reference)(nil),
	}
}

func _Contract_ValuedItem_Entity_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Contract_ValuedItem_Entity)
	// entity
	switch x := m.Entity.(type) {
	case *Contract_ValuedItem_Entity_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Contract_ValuedItem_Entity_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Contract_ValuedItem_Entity.Entity has unexpected type %T", x)
	}
	return nil
}

func _Contract_ValuedItem_Entity_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Contract_ValuedItem_Entity)
	switch tag {
	case 1: // entity.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Entity = &Contract_ValuedItem_Entity_CodeableConcept{msg}
		return true, err
	case 2: // entity.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Entity = &Contract_ValuedItem_Entity_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Contract_ValuedItem_Entity_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Contract_ValuedItem_Entity)
	// entity
	switch x := m.Entity.(type) {
	case *Contract_ValuedItem_Entity_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Contract_ValuedItem_Entity_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Contract Term List
type Contract_Term struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Contract Term Number
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Contract Term Issue Date Time
	Issued *DateTime `protobuf:"bytes,5,opt,name=issued,proto3" json:"issued,omitempty"`
	// Contract Term Effective Time
	Applies *Period `protobuf:"bytes,6,opt,name=applies,proto3" json:"applies,omitempty"`
	// Contract Term Type or Form
	Type *CodeableConcept `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	// Contract Term Type specific classification
	SubType *CodeableConcept `protobuf:"bytes,8,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// Context of the Contract term
	Topic []*Reference `protobuf:"bytes,9,rep,name=topic,proto3" json:"topic,omitempty"`
	// Contract Term Activity
	Action []*CodeableConcept `protobuf:"bytes,10,rep,name=action,proto3" json:"action,omitempty"`
	// Purpose for the Contract Term Action
	ActionReason []*CodeableConcept `protobuf:"bytes,11,rep,name=action_reason,json=actionReason,proto3" json:"action_reason,omitempty"`
	// Security Labels that define affected terms
	SecurityLabel []*Coding                  `protobuf:"bytes,12,rep,name=security_label,json=securityLabel,proto3" json:"security_label,omitempty"`
	Agent         []*Contract_Term_TermAgent `protobuf:"bytes,13,rep,name=agent,proto3" json:"agent,omitempty"`
	// Human readable Contract term text
	Text       *String                         `protobuf:"bytes,14,opt,name=text,proto3" json:"text,omitempty"`
	ValuedItem []*Contract_Term_TermValuedItem `protobuf:"bytes,15,rep,name=valued_item,json=valuedItem,proto3" json:"valued_item,omitempty"`
	// Nested Contract Term Group
	Group                []*Contract_Term `protobuf:"bytes,16,rep,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Contract_Term) Reset()         { *m = Contract_Term{} }
func (m *Contract_Term) String() string { return proto.CompactTextString(m) }
func (*Contract_Term) ProtoMessage()    {}
func (*Contract_Term) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 3}
}

func (m *Contract_Term) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_Term.Unmarshal(m, b)
}
func (m *Contract_Term) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_Term.Marshal(b, m, deterministic)
}
func (m *Contract_Term) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_Term.Merge(m, src)
}
func (m *Contract_Term) XXX_Size() int {
	return xxx_messageInfo_Contract_Term.Size(m)
}
func (m *Contract_Term) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_Term.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_Term proto.InternalMessageInfo

func (m *Contract_Term) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract_Term) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract_Term) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract_Term) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Contract_Term) GetIssued() *DateTime {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Contract_Term) GetApplies() *Period {
	if m != nil {
		return m.Applies
	}
	return nil
}

func (m *Contract_Term) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Contract_Term) GetSubType() *CodeableConcept {
	if m != nil {
		return m.SubType
	}
	return nil
}

func (m *Contract_Term) GetTopic() []*Reference {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Contract_Term) GetAction() []*CodeableConcept {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Contract_Term) GetActionReason() []*CodeableConcept {
	if m != nil {
		return m.ActionReason
	}
	return nil
}

func (m *Contract_Term) GetSecurityLabel() []*Coding {
	if m != nil {
		return m.SecurityLabel
	}
	return nil
}

func (m *Contract_Term) GetAgent() []*Contract_Term_TermAgent {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *Contract_Term) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Contract_Term) GetValuedItem() []*Contract_Term_TermValuedItem {
	if m != nil {
		return m.ValuedItem
	}
	return nil
}

func (m *Contract_Term) GetGroup() []*Contract_Term {
	if m != nil {
		return m.Group
	}
	return nil
}

// Contract Term Agent List
type Contract_Term_TermAgent struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Contract Term Agent Subject
	Actor *Reference `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	// Type of the Contract Term Agent
	Role                 []*CodeableConcept `protobuf:"bytes,5,rep,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Contract_Term_TermAgent) Reset()         { *m = Contract_Term_TermAgent{} }
func (m *Contract_Term_TermAgent) String() string { return proto.CompactTextString(m) }
func (*Contract_Term_TermAgent) ProtoMessage()    {}
func (*Contract_Term_TermAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 3, 0}
}

func (m *Contract_Term_TermAgent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_Term_TermAgent.Unmarshal(m, b)
}
func (m *Contract_Term_TermAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_Term_TermAgent.Marshal(b, m, deterministic)
}
func (m *Contract_Term_TermAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_Term_TermAgent.Merge(m, src)
}
func (m *Contract_Term_TermAgent) XXX_Size() int {
	return xxx_messageInfo_Contract_Term_TermAgent.Size(m)
}
func (m *Contract_Term_TermAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_Term_TermAgent.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_Term_TermAgent proto.InternalMessageInfo

func (m *Contract_Term_TermAgent) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract_Term_TermAgent) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract_Term_TermAgent) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract_Term_TermAgent) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *Contract_Term_TermAgent) GetRole() []*CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

// Contract Term Valued Item List
type Contract_Term_TermValuedItem struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                         `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Entity            *Contract_Term_TermValuedItem_Entity `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	// Contract Term Valued Item Number
	Identifier *Identifier `protobuf:"bytes,5,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Contract Term Valued Item Effective Tiem
	EffectiveTime *DateTime `protobuf:"bytes,6,opt,name=effective_time,json=effectiveTime,proto3" json:"effective_time,omitempty"`
	// Contract Term Valued Item Count
	Quantity *SimpleQuantity `protobuf:"bytes,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Contract Term Valued Item fee, charge, or cost
	UnitPrice *Money `protobuf:"bytes,8,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// Contract Term Valued Item Price Scaling Factor
	Factor *Decimal `protobuf:"bytes,9,opt,name=factor,proto3" json:"factor,omitempty"`
	// Contract Term Valued Item Difficulty Scaling Factor
	Points *Decimal `protobuf:"bytes,10,opt,name=points,proto3" json:"points,omitempty"`
	// Total Contract Term Valued Item Value
	Net                  *Money   `protobuf:"bytes,11,opt,name=net,proto3" json:"net,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contract_Term_TermValuedItem) Reset()         { *m = Contract_Term_TermValuedItem{} }
func (m *Contract_Term_TermValuedItem) String() string { return proto.CompactTextString(m) }
func (*Contract_Term_TermValuedItem) ProtoMessage()    {}
func (*Contract_Term_TermValuedItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 3, 1}
}

func (m *Contract_Term_TermValuedItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_Term_TermValuedItem.Unmarshal(m, b)
}
func (m *Contract_Term_TermValuedItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_Term_TermValuedItem.Marshal(b, m, deterministic)
}
func (m *Contract_Term_TermValuedItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_Term_TermValuedItem.Merge(m, src)
}
func (m *Contract_Term_TermValuedItem) XXX_Size() int {
	return xxx_messageInfo_Contract_Term_TermValuedItem.Size(m)
}
func (m *Contract_Term_TermValuedItem) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_Term_TermValuedItem.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_Term_TermValuedItem proto.InternalMessageInfo

func (m *Contract_Term_TermValuedItem) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetEntity() *Contract_Term_TermValuedItem_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetEffectiveTime() *DateTime {
	if m != nil {
		return m.EffectiveTime
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetUnitPrice() *Money {
	if m != nil {
		return m.UnitPrice
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetFactor() *Decimal {
	if m != nil {
		return m.Factor
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetPoints() *Decimal {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *Contract_Term_TermValuedItem) GetNet() *Money {
	if m != nil {
		return m.Net
	}
	return nil
}

// Contract Term Valued Item Type
type Contract_Term_TermValuedItem_Entity struct {
	// Types that are valid to be assigned to Entity:
	//	*Contract_Term_TermValuedItem_Entity_CodeableConcept
	//	*Contract_Term_TermValuedItem_Entity_Reference
	Entity               isContract_Term_TermValuedItem_Entity_Entity `protobuf_oneof:"entity"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *Contract_Term_TermValuedItem_Entity) Reset()         { *m = Contract_Term_TermValuedItem_Entity{} }
func (m *Contract_Term_TermValuedItem_Entity) String() string { return proto.CompactTextString(m) }
func (*Contract_Term_TermValuedItem_Entity) ProtoMessage()    {}
func (*Contract_Term_TermValuedItem_Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 3, 1, 0}
}

func (m *Contract_Term_TermValuedItem_Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_Term_TermValuedItem_Entity.Unmarshal(m, b)
}
func (m *Contract_Term_TermValuedItem_Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_Term_TermValuedItem_Entity.Marshal(b, m, deterministic)
}
func (m *Contract_Term_TermValuedItem_Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_Term_TermValuedItem_Entity.Merge(m, src)
}
func (m *Contract_Term_TermValuedItem_Entity) XXX_Size() int {
	return xxx_messageInfo_Contract_Term_TermValuedItem_Entity.Size(m)
}
func (m *Contract_Term_TermValuedItem_Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_Term_TermValuedItem_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_Term_TermValuedItem_Entity proto.InternalMessageInfo

type isContract_Term_TermValuedItem_Entity_Entity interface {
	isContract_Term_TermValuedItem_Entity_Entity()
}

type Contract_Term_TermValuedItem_Entity_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Contract_Term_TermValuedItem_Entity_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Contract_Term_TermValuedItem_Entity_CodeableConcept) isContract_Term_TermValuedItem_Entity_Entity() {
}

func (*Contract_Term_TermValuedItem_Entity_Reference) isContract_Term_TermValuedItem_Entity_Entity() {}

func (m *Contract_Term_TermValuedItem_Entity) GetEntity() isContract_Term_TermValuedItem_Entity_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *Contract_Term_TermValuedItem_Entity) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetEntity().(*Contract_Term_TermValuedItem_Entity_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Contract_Term_TermValuedItem_Entity) GetReference() *Reference {
	if x, ok := m.GetEntity().(*Contract_Term_TermValuedItem_Entity_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Contract_Term_TermValuedItem_Entity) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Contract_Term_TermValuedItem_Entity_OneofMarshaler, _Contract_Term_TermValuedItem_Entity_OneofUnmarshaler, _Contract_Term_TermValuedItem_Entity_OneofSizer, []interface{}{
		(*Contract_Term_TermValuedItem_Entity_CodeableConcept)(nil),
		(*Contract_Term_TermValuedItem_Entity_Reference)(nil),
	}
}

func _Contract_Term_TermValuedItem_Entity_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Contract_Term_TermValuedItem_Entity)
	// entity
	switch x := m.Entity.(type) {
	case *Contract_Term_TermValuedItem_Entity_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Contract_Term_TermValuedItem_Entity_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Contract_Term_TermValuedItem_Entity.Entity has unexpected type %T", x)
	}
	return nil
}

func _Contract_Term_TermValuedItem_Entity_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Contract_Term_TermValuedItem_Entity)
	switch tag {
	case 1: // entity.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Entity = &Contract_Term_TermValuedItem_Entity_CodeableConcept{msg}
		return true, err
	case 2: // entity.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Entity = &Contract_Term_TermValuedItem_Entity_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Contract_Term_TermValuedItem_Entity_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Contract_Term_TermValuedItem_Entity)
	// entity
	switch x := m.Entity.(type) {
	case *Contract_Term_TermValuedItem_Entity_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Contract_Term_TermValuedItem_Entity_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Binding Contract
type Contract_Binding struct {
	// Types that are valid to be assigned to Binding:
	//	*Contract_Binding_Attachment
	//	*Contract_Binding_Reference
	Binding              isContract_Binding_Binding `protobuf_oneof:"binding"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Contract_Binding) Reset()         { *m = Contract_Binding{} }
func (m *Contract_Binding) String() string { return proto.CompactTextString(m) }
func (*Contract_Binding) ProtoMessage()    {}
func (*Contract_Binding) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 4}
}

func (m *Contract_Binding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_Binding.Unmarshal(m, b)
}
func (m *Contract_Binding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_Binding.Marshal(b, m, deterministic)
}
func (m *Contract_Binding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_Binding.Merge(m, src)
}
func (m *Contract_Binding) XXX_Size() int {
	return xxx_messageInfo_Contract_Binding.Size(m)
}
func (m *Contract_Binding) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_Binding.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_Binding proto.InternalMessageInfo

type isContract_Binding_Binding interface {
	isContract_Binding_Binding()
}

type Contract_Binding_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,1,opt,name=attachment,proto3,oneof"`
}

type Contract_Binding_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Contract_Binding_Attachment) isContract_Binding_Binding() {}

func (*Contract_Binding_Reference) isContract_Binding_Binding() {}

func (m *Contract_Binding) GetBinding() isContract_Binding_Binding {
	if m != nil {
		return m.Binding
	}
	return nil
}

func (m *Contract_Binding) GetAttachment() *Attachment {
	if x, ok := m.GetBinding().(*Contract_Binding_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Contract_Binding) GetReference() *Reference {
	if x, ok := m.GetBinding().(*Contract_Binding_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Contract_Binding) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Contract_Binding_OneofMarshaler, _Contract_Binding_OneofUnmarshaler, _Contract_Binding_OneofSizer, []interface{}{
		(*Contract_Binding_Attachment)(nil),
		(*Contract_Binding_Reference)(nil),
	}
}

func _Contract_Binding_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Contract_Binding)
	// binding
	switch x := m.Binding.(type) {
	case *Contract_Binding_Attachment:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Contract_Binding_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Contract_Binding.Binding has unexpected type %T", x)
	}
	return nil
}

func _Contract_Binding_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Contract_Binding)
	switch tag {
	case 1: // binding.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Binding = &Contract_Binding_Attachment{msg}
		return true, err
	case 2: // binding.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Binding = &Contract_Binding_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Contract_Binding_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Contract_Binding)
	// binding
	switch x := m.Binding.(type) {
	case *Contract_Binding_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Contract_Binding_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Contract Friendly Language
type Contract_FriendlyLanguage struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                       `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Content              *Contract_FriendlyLanguage_Content `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Contract_FriendlyLanguage) Reset()         { *m = Contract_FriendlyLanguage{} }
func (m *Contract_FriendlyLanguage) String() string { return proto.CompactTextString(m) }
func (*Contract_FriendlyLanguage) ProtoMessage()    {}
func (*Contract_FriendlyLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 5}
}

func (m *Contract_FriendlyLanguage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_FriendlyLanguage.Unmarshal(m, b)
}
func (m *Contract_FriendlyLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_FriendlyLanguage.Marshal(b, m, deterministic)
}
func (m *Contract_FriendlyLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_FriendlyLanguage.Merge(m, src)
}
func (m *Contract_FriendlyLanguage) XXX_Size() int {
	return xxx_messageInfo_Contract_FriendlyLanguage.Size(m)
}
func (m *Contract_FriendlyLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_FriendlyLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_FriendlyLanguage proto.InternalMessageInfo

func (m *Contract_FriendlyLanguage) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract_FriendlyLanguage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract_FriendlyLanguage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract_FriendlyLanguage) GetContent() *Contract_FriendlyLanguage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

// Easily comprehended representation of this Contract
type Contract_FriendlyLanguage_Content struct {
	// Types that are valid to be assigned to Content:
	//	*Contract_FriendlyLanguage_Content_Attachment
	//	*Contract_FriendlyLanguage_Content_Reference
	Content              isContract_FriendlyLanguage_Content_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *Contract_FriendlyLanguage_Content) Reset()         { *m = Contract_FriendlyLanguage_Content{} }
func (m *Contract_FriendlyLanguage_Content) String() string { return proto.CompactTextString(m) }
func (*Contract_FriendlyLanguage_Content) ProtoMessage()    {}
func (*Contract_FriendlyLanguage_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 5, 0}
}

func (m *Contract_FriendlyLanguage_Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_FriendlyLanguage_Content.Unmarshal(m, b)
}
func (m *Contract_FriendlyLanguage_Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_FriendlyLanguage_Content.Marshal(b, m, deterministic)
}
func (m *Contract_FriendlyLanguage_Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_FriendlyLanguage_Content.Merge(m, src)
}
func (m *Contract_FriendlyLanguage_Content) XXX_Size() int {
	return xxx_messageInfo_Contract_FriendlyLanguage_Content.Size(m)
}
func (m *Contract_FriendlyLanguage_Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_FriendlyLanguage_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_FriendlyLanguage_Content proto.InternalMessageInfo

type isContract_FriendlyLanguage_Content_Content interface {
	isContract_FriendlyLanguage_Content_Content()
}

type Contract_FriendlyLanguage_Content_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,1,opt,name=attachment,proto3,oneof"`
}

type Contract_FriendlyLanguage_Content_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Contract_FriendlyLanguage_Content_Attachment) isContract_FriendlyLanguage_Content_Content() {}

func (*Contract_FriendlyLanguage_Content_Reference) isContract_FriendlyLanguage_Content_Content() {}

func (m *Contract_FriendlyLanguage_Content) GetContent() isContract_FriendlyLanguage_Content_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Contract_FriendlyLanguage_Content) GetAttachment() *Attachment {
	if x, ok := m.GetContent().(*Contract_FriendlyLanguage_Content_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Contract_FriendlyLanguage_Content) GetReference() *Reference {
	if x, ok := m.GetContent().(*Contract_FriendlyLanguage_Content_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Contract_FriendlyLanguage_Content) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Contract_FriendlyLanguage_Content_OneofMarshaler, _Contract_FriendlyLanguage_Content_OneofUnmarshaler, _Contract_FriendlyLanguage_Content_OneofSizer, []interface{}{
		(*Contract_FriendlyLanguage_Content_Attachment)(nil),
		(*Contract_FriendlyLanguage_Content_Reference)(nil),
	}
}

func _Contract_FriendlyLanguage_Content_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Contract_FriendlyLanguage_Content)
	// content
	switch x := m.Content.(type) {
	case *Contract_FriendlyLanguage_Content_Attachment:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Contract_FriendlyLanguage_Content_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Contract_FriendlyLanguage_Content.Content has unexpected type %T", x)
	}
	return nil
}

func _Contract_FriendlyLanguage_Content_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Contract_FriendlyLanguage_Content)
	switch tag {
	case 1: // content.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Content = &Contract_FriendlyLanguage_Content_Attachment{msg}
		return true, err
	case 2: // content.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Content = &Contract_FriendlyLanguage_Content_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Contract_FriendlyLanguage_Content_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Contract_FriendlyLanguage_Content)
	// content
	switch x := m.Content.(type) {
	case *Contract_FriendlyLanguage_Content_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Contract_FriendlyLanguage_Content_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Contract Legal Language
type Contract_LegalLanguage struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                    `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Content              *Contract_LegalLanguage_Content `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Contract_LegalLanguage) Reset()         { *m = Contract_LegalLanguage{} }
func (m *Contract_LegalLanguage) String() string { return proto.CompactTextString(m) }
func (*Contract_LegalLanguage) ProtoMessage()    {}
func (*Contract_LegalLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 6}
}

func (m *Contract_LegalLanguage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_LegalLanguage.Unmarshal(m, b)
}
func (m *Contract_LegalLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_LegalLanguage.Marshal(b, m, deterministic)
}
func (m *Contract_LegalLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_LegalLanguage.Merge(m, src)
}
func (m *Contract_LegalLanguage) XXX_Size() int {
	return xxx_messageInfo_Contract_LegalLanguage.Size(m)
}
func (m *Contract_LegalLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_LegalLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_LegalLanguage proto.InternalMessageInfo

func (m *Contract_LegalLanguage) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract_LegalLanguage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract_LegalLanguage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract_LegalLanguage) GetContent() *Contract_LegalLanguage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

// Contract Legal Text
type Contract_LegalLanguage_Content struct {
	// Types that are valid to be assigned to Content:
	//	*Contract_LegalLanguage_Content_Attachment
	//	*Contract_LegalLanguage_Content_Reference
	Content              isContract_LegalLanguage_Content_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *Contract_LegalLanguage_Content) Reset()         { *m = Contract_LegalLanguage_Content{} }
func (m *Contract_LegalLanguage_Content) String() string { return proto.CompactTextString(m) }
func (*Contract_LegalLanguage_Content) ProtoMessage()    {}
func (*Contract_LegalLanguage_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 6, 0}
}

func (m *Contract_LegalLanguage_Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_LegalLanguage_Content.Unmarshal(m, b)
}
func (m *Contract_LegalLanguage_Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_LegalLanguage_Content.Marshal(b, m, deterministic)
}
func (m *Contract_LegalLanguage_Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_LegalLanguage_Content.Merge(m, src)
}
func (m *Contract_LegalLanguage_Content) XXX_Size() int {
	return xxx_messageInfo_Contract_LegalLanguage_Content.Size(m)
}
func (m *Contract_LegalLanguage_Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_LegalLanguage_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_LegalLanguage_Content proto.InternalMessageInfo

type isContract_LegalLanguage_Content_Content interface {
	isContract_LegalLanguage_Content_Content()
}

type Contract_LegalLanguage_Content_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,1,opt,name=attachment,proto3,oneof"`
}

type Contract_LegalLanguage_Content_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Contract_LegalLanguage_Content_Attachment) isContract_LegalLanguage_Content_Content() {}

func (*Contract_LegalLanguage_Content_Reference) isContract_LegalLanguage_Content_Content() {}

func (m *Contract_LegalLanguage_Content) GetContent() isContract_LegalLanguage_Content_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Contract_LegalLanguage_Content) GetAttachment() *Attachment {
	if x, ok := m.GetContent().(*Contract_LegalLanguage_Content_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Contract_LegalLanguage_Content) GetReference() *Reference {
	if x, ok := m.GetContent().(*Contract_LegalLanguage_Content_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Contract_LegalLanguage_Content) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Contract_LegalLanguage_Content_OneofMarshaler, _Contract_LegalLanguage_Content_OneofUnmarshaler, _Contract_LegalLanguage_Content_OneofSizer, []interface{}{
		(*Contract_LegalLanguage_Content_Attachment)(nil),
		(*Contract_LegalLanguage_Content_Reference)(nil),
	}
}

func _Contract_LegalLanguage_Content_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Contract_LegalLanguage_Content)
	// content
	switch x := m.Content.(type) {
	case *Contract_LegalLanguage_Content_Attachment:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Contract_LegalLanguage_Content_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Contract_LegalLanguage_Content.Content has unexpected type %T", x)
	}
	return nil
}

func _Contract_LegalLanguage_Content_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Contract_LegalLanguage_Content)
	switch tag {
	case 1: // content.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Content = &Contract_LegalLanguage_Content_Attachment{msg}
		return true, err
	case 2: // content.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Content = &Contract_LegalLanguage_Content_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Contract_LegalLanguage_Content_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Contract_LegalLanguage_Content)
	// content
	switch x := m.Content.(type) {
	case *Contract_LegalLanguage_Content_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Contract_LegalLanguage_Content_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Computable Contract Language
type Contract_ComputableLanguage struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                         `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Content              *Contract_ComputableLanguage_Content `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Contract_ComputableLanguage) Reset()         { *m = Contract_ComputableLanguage{} }
func (m *Contract_ComputableLanguage) String() string { return proto.CompactTextString(m) }
func (*Contract_ComputableLanguage) ProtoMessage()    {}
func (*Contract_ComputableLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 7}
}

func (m *Contract_ComputableLanguage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_ComputableLanguage.Unmarshal(m, b)
}
func (m *Contract_ComputableLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_ComputableLanguage.Marshal(b, m, deterministic)
}
func (m *Contract_ComputableLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_ComputableLanguage.Merge(m, src)
}
func (m *Contract_ComputableLanguage) XXX_Size() int {
	return xxx_messageInfo_Contract_ComputableLanguage.Size(m)
}
func (m *Contract_ComputableLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_ComputableLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_ComputableLanguage proto.InternalMessageInfo

func (m *Contract_ComputableLanguage) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract_ComputableLanguage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Contract_ComputableLanguage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Contract_ComputableLanguage) GetContent() *Contract_ComputableLanguage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

// Computable Contract Rules
type Contract_ComputableLanguage_Content struct {
	// Types that are valid to be assigned to Content:
	//	*Contract_ComputableLanguage_Content_Attachment
	//	*Contract_ComputableLanguage_Content_Reference
	Content              isContract_ComputableLanguage_Content_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *Contract_ComputableLanguage_Content) Reset()         { *m = Contract_ComputableLanguage_Content{} }
func (m *Contract_ComputableLanguage_Content) String() string { return proto.CompactTextString(m) }
func (*Contract_ComputableLanguage_Content) ProtoMessage()    {}
func (*Contract_ComputableLanguage_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{26, 7, 0}
}

func (m *Contract_ComputableLanguage_Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_ComputableLanguage_Content.Unmarshal(m, b)
}
func (m *Contract_ComputableLanguage_Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_ComputableLanguage_Content.Marshal(b, m, deterministic)
}
func (m *Contract_ComputableLanguage_Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_ComputableLanguage_Content.Merge(m, src)
}
func (m *Contract_ComputableLanguage_Content) XXX_Size() int {
	return xxx_messageInfo_Contract_ComputableLanguage_Content.Size(m)
}
func (m *Contract_ComputableLanguage_Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_ComputableLanguage_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_ComputableLanguage_Content proto.InternalMessageInfo

type isContract_ComputableLanguage_Content_Content interface {
	isContract_ComputableLanguage_Content_Content()
}

type Contract_ComputableLanguage_Content_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,1,opt,name=attachment,proto3,oneof"`
}

type Contract_ComputableLanguage_Content_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Contract_ComputableLanguage_Content_Attachment) isContract_ComputableLanguage_Content_Content() {
}

func (*Contract_ComputableLanguage_Content_Reference) isContract_ComputableLanguage_Content_Content() {
}

func (m *Contract_ComputableLanguage_Content) GetContent() isContract_ComputableLanguage_Content_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Contract_ComputableLanguage_Content) GetAttachment() *Attachment {
	if x, ok := m.GetContent().(*Contract_ComputableLanguage_Content_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Contract_ComputableLanguage_Content) GetReference() *Reference {
	if x, ok := m.GetContent().(*Contract_ComputableLanguage_Content_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Contract_ComputableLanguage_Content) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Contract_ComputableLanguage_Content_OneofMarshaler, _Contract_ComputableLanguage_Content_OneofUnmarshaler, _Contract_ComputableLanguage_Content_OneofSizer, []interface{}{
		(*Contract_ComputableLanguage_Content_Attachment)(nil),
		(*Contract_ComputableLanguage_Content_Reference)(nil),
	}
}

func _Contract_ComputableLanguage_Content_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Contract_ComputableLanguage_Content)
	// content
	switch x := m.Content.(type) {
	case *Contract_ComputableLanguage_Content_Attachment:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Contract_ComputableLanguage_Content_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Contract_ComputableLanguage_Content.Content has unexpected type %T", x)
	}
	return nil
}

func _Contract_ComputableLanguage_Content_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Contract_ComputableLanguage_Content)
	switch tag {
	case 1: // content.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Content = &Contract_ComputableLanguage_Content_Attachment{msg}
		return true, err
	case 2: // content.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Content = &Contract_ComputableLanguage_Content_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Contract_ComputableLanguage_Content_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Contract_ComputableLanguage_Content)
	// content
	switch x := m.Content.(type) {
	case *Contract_ComputableLanguage_Content_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Contract_ComputableLanguage_Content_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Coverage, last updated
// 2017-04-19T07:44:43.294+10:00. Insurance or medical plan or a payment
// agreement. See http://hl7.org/fhir/StructureDefinition/Coverage
type Coverage struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The primary coverage ID
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Type of coverage such as medical or accident
	Type *CodeableConcept `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// Owner of the policy
	PolicyHolder *Reference `protobuf:"bytes,12,opt,name=policy_holder,json=policyHolder,proto3" json:"policy_holder,omitempty"`
	// Subscriber to the policy
	Subscriber *Reference `protobuf:"bytes,13,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
	// ID assigned to the Subscriber
	SubscriberId *String `protobuf:"bytes,14,opt,name=subscriber_id,json=subscriberId,proto3" json:"subscriber_id,omitempty"`
	// Plan Beneficiary
	Beneficiary *Reference `protobuf:"bytes,15,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	// Beneficiary relationship to the Subscriber
	Relationship *CodeableConcept `protobuf:"bytes,16,opt,name=relationship,proto3" json:"relationship,omitempty"`
	// Coverage start and end dates
	Period *Period `protobuf:"bytes,17,opt,name=period,proto3" json:"period,omitempty"`
	// Identifier for the plan or agreement issuer
	Payor    []*Reference    `protobuf:"bytes,18,rep,name=payor,proto3" json:"payor,omitempty"`
	Grouping *Coverage_Group `protobuf:"bytes,19,opt,name=grouping,proto3" json:"grouping,omitempty"`
	// Dependent number
	Dependent *String `protobuf:"bytes,20,opt,name=dependent,proto3" json:"dependent,omitempty"`
	// The plan instance or sequence counter
	Sequence *String `protobuf:"bytes,21,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Relative order of the coverage
	Order *PositiveInt `protobuf:"bytes,22,opt,name=order,proto3" json:"order,omitempty"`
	// Insurer network
	Network *String `protobuf:"bytes,23,opt,name=network,proto3" json:"network,omitempty"`
	// Contract details
	Contract             []*Reference `protobuf:"bytes,24,rep,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Coverage) Reset()         { *m = Coverage{} }
func (m *Coverage) String() string { return proto.CompactTextString(m) }
func (*Coverage) ProtoMessage()    {}
func (*Coverage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{27}
}

func (m *Coverage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coverage.Unmarshal(m, b)
}
func (m *Coverage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coverage.Marshal(b, m, deterministic)
}
func (m *Coverage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coverage.Merge(m, src)
}
func (m *Coverage) XXX_Size() int {
	return xxx_messageInfo_Coverage.Size(m)
}
func (m *Coverage) XXX_DiscardUnknown() {
	xxx_messageInfo_Coverage.DiscardUnknown(m)
}

var xxx_messageInfo_Coverage proto.InternalMessageInfo

func (m *Coverage) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Coverage) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Coverage) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Coverage) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Coverage) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Coverage) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Coverage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Coverage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Coverage) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Coverage) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Coverage) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Coverage) GetPolicyHolder() *Reference {
	if m != nil {
		return m.PolicyHolder
	}
	return nil
}

func (m *Coverage) GetSubscriber() *Reference {
	if m != nil {
		return m.Subscriber
	}
	return nil
}

func (m *Coverage) GetSubscriberId() *String {
	if m != nil {
		return m.SubscriberId
	}
	return nil
}

func (m *Coverage) GetBeneficiary() *Reference {
	if m != nil {
		return m.Beneficiary
	}
	return nil
}

func (m *Coverage) GetRelationship() *CodeableConcept {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *Coverage) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Coverage) GetPayor() []*Reference {
	if m != nil {
		return m.Payor
	}
	return nil
}

func (m *Coverage) GetGrouping() *Coverage_Group {
	if m != nil {
		return m.Grouping
	}
	return nil
}

func (m *Coverage) GetDependent() *String {
	if m != nil {
		return m.Dependent
	}
	return nil
}

func (m *Coverage) GetSequence() *String {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *Coverage) GetOrder() *PositiveInt {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *Coverage) GetNetwork() *String {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *Coverage) GetContract() []*Reference {
	if m != nil {
		return m.Contract
	}
	return nil
}

// Additional coverage classifications
type Coverage_Group struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// An identifier for the group
	Group *String `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	// Display text for an identifier for the group
	GroupDisplay *String `protobuf:"bytes,5,opt,name=group_display,json=groupDisplay,proto3" json:"group_display,omitempty"`
	// An identifier for the subsection of the group
	SubGroup *String `protobuf:"bytes,6,opt,name=sub_group,json=subGroup,proto3" json:"sub_group,omitempty"`
	// Display text for the subsection of the group
	SubGroupDisplay *String `protobuf:"bytes,7,opt,name=sub_group_display,json=subGroupDisplay,proto3" json:"sub_group_display,omitempty"`
	// An identifier for the plan
	Plan *String `protobuf:"bytes,8,opt,name=plan,proto3" json:"plan,omitempty"`
	// Display text for the plan
	PlanDisplay *String `protobuf:"bytes,9,opt,name=plan_display,json=planDisplay,proto3" json:"plan_display,omitempty"`
	// An identifier for the subsection of the plan
	SubPlan *String `protobuf:"bytes,10,opt,name=sub_plan,json=subPlan,proto3" json:"sub_plan,omitempty"`
	// Display text for the subsection of the plan
	SubPlanDisplay *String `protobuf:"bytes,11,opt,name=sub_plan_display,json=subPlanDisplay,proto3" json:"sub_plan_display,omitempty"`
	// An identifier for the class
	ClassValue *String `protobuf:"bytes,12,opt,name=class_value,json=class,proto3" json:"class_value,omitempty"`
	// Display text for the class
	ClassDisplay *String `protobuf:"bytes,13,opt,name=class_display,json=classDisplay,proto3" json:"class_display,omitempty"`
	// An identifier for the subsection of the class
	SubClass *String `protobuf:"bytes,14,opt,name=sub_class,json=subClass,proto3" json:"sub_class,omitempty"`
	// Display text for the subsection of the subclass
	SubClassDisplay      *String  `protobuf:"bytes,15,opt,name=sub_class_display,json=subClassDisplay,proto3" json:"sub_class_display,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coverage_Group) Reset()         { *m = Coverage_Group{} }
func (m *Coverage_Group) String() string { return proto.CompactTextString(m) }
func (*Coverage_Group) ProtoMessage()    {}
func (*Coverage_Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{27, 0}
}

func (m *Coverage_Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coverage_Group.Unmarshal(m, b)
}
func (m *Coverage_Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coverage_Group.Marshal(b, m, deterministic)
}
func (m *Coverage_Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coverage_Group.Merge(m, src)
}
func (m *Coverage_Group) XXX_Size() int {
	return xxx_messageInfo_Coverage_Group.Size(m)
}
func (m *Coverage_Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Coverage_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Coverage_Group proto.InternalMessageInfo

func (m *Coverage_Group) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Coverage_Group) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Coverage_Group) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Coverage_Group) GetGroup() *String {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *Coverage_Group) GetGroupDisplay() *String {
	if m != nil {
		return m.GroupDisplay
	}
	return nil
}

func (m *Coverage_Group) GetSubGroup() *String {
	if m != nil {
		return m.SubGroup
	}
	return nil
}

func (m *Coverage_Group) GetSubGroupDisplay() *String {
	if m != nil {
		return m.SubGroupDisplay
	}
	return nil
}

func (m *Coverage_Group) GetPlan() *String {
	if m != nil {
		return m.Plan
	}
	return nil
}

func (m *Coverage_Group) GetPlanDisplay() *String {
	if m != nil {
		return m.PlanDisplay
	}
	return nil
}

func (m *Coverage_Group) GetSubPlan() *String {
	if m != nil {
		return m.SubPlan
	}
	return nil
}

func (m *Coverage_Group) GetSubPlanDisplay() *String {
	if m != nil {
		return m.SubPlanDisplay
	}
	return nil
}

func (m *Coverage_Group) GetClassValue() *String {
	if m != nil {
		return m.ClassValue
	}
	return nil
}

func (m *Coverage_Group) GetClassDisplay() *String {
	if m != nil {
		return m.ClassDisplay
	}
	return nil
}

func (m *Coverage_Group) GetSubClass() *String {
	if m != nil {
		return m.SubClass
	}
	return nil
}

func (m *Coverage_Group) GetSubClassDisplay() *String {
	if m != nil {
		return m.SubClassDisplay
	}
	return nil
}

// Auto-generated from StructureDefinition for DataElement, last updated
// 2017-04-19T07:44:43.294+10:00. Resource data element. See
// http://hl7.org/fhir/StructureDefinition/DataElement
type DataElement struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this data element (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the data element
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the data element
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,13,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,14,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,15,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Name for this data element (computer friendly)
	Name *String `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this data element (human friendly)
	Title *String `protobuf:"bytes,17,opt,name=title,proto3" json:"title,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,19,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for data element (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,20,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,21,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// comparable | fully-specified | equivalent | convertable | scaleable |
	// flexible
	Stringency *DataElementStringencyCode `protobuf:"bytes,22,opt,name=stringency,proto3" json:"stringency,omitempty"`
	Mapping    []*DataElement_Mapping     `protobuf:"bytes,23,rep,name=mapping,proto3" json:"mapping,omitempty"`
	// Definition of element
	Element              []*ElementDefinition `protobuf:"bytes,24,rep,name=element,proto3" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DataElement) Reset()         { *m = DataElement{} }
func (m *DataElement) String() string { return proto.CompactTextString(m) }
func (*DataElement) ProtoMessage()    {}
func (*DataElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{28}
}

func (m *DataElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataElement.Unmarshal(m, b)
}
func (m *DataElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataElement.Marshal(b, m, deterministic)
}
func (m *DataElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataElement.Merge(m, src)
}
func (m *DataElement) XXX_Size() int {
	return xxx_messageInfo_DataElement.Size(m)
}
func (m *DataElement) XXX_DiscardUnknown() {
	xxx_messageInfo_DataElement.DiscardUnknown(m)
}

var xxx_messageInfo_DataElement proto.InternalMessageInfo

func (m *DataElement) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DataElement) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DataElement) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DataElement) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DataElement) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DataElement) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DataElement) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DataElement) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DataElement) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *DataElement) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DataElement) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *DataElement) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DataElement) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *DataElement) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *DataElement) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *DataElement) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *DataElement) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *DataElement) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *DataElement) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *DataElement) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *DataElement) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *DataElement) GetStringency() *DataElementStringencyCode {
	if m != nil {
		return m.Stringency
	}
	return nil
}

func (m *DataElement) GetMapping() []*DataElement_Mapping {
	if m != nil {
		return m.Mapping
	}
	return nil
}

func (m *DataElement) GetElement() []*ElementDefinition {
	if m != nil {
		return m.Element
	}
	return nil
}

// External specification mapped to
type DataElement_Mapping struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Internal id when this mapping is used
	Identity *Id `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
	// Identifies what this mapping refers to
	Uri *Uri `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// Names what this mapping refers to
	Name *String `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Versions, issues, scope limitations, etc.
	Comment              *String  `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataElement_Mapping) Reset()         { *m = DataElement_Mapping{} }
func (m *DataElement_Mapping) String() string { return proto.CompactTextString(m) }
func (*DataElement_Mapping) ProtoMessage()    {}
func (*DataElement_Mapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{28, 0}
}

func (m *DataElement_Mapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataElement_Mapping.Unmarshal(m, b)
}
func (m *DataElement_Mapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataElement_Mapping.Marshal(b, m, deterministic)
}
func (m *DataElement_Mapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataElement_Mapping.Merge(m, src)
}
func (m *DataElement_Mapping) XXX_Size() int {
	return xxx_messageInfo_DataElement_Mapping.Size(m)
}
func (m *DataElement_Mapping) XXX_DiscardUnknown() {
	xxx_messageInfo_DataElement_Mapping.DiscardUnknown(m)
}

var xxx_messageInfo_DataElement_Mapping proto.InternalMessageInfo

func (m *DataElement_Mapping) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DataElement_Mapping) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DataElement_Mapping) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DataElement_Mapping) GetIdentity() *Id {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *DataElement_Mapping) GetUri() *Uri {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *DataElement_Mapping) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *DataElement_Mapping) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

// Auto-generated from StructureDefinition for DetectedIssue, last updated
// 2017-04-19T07:44:43.294+10:00. Clinical issue with action. See
// http://hl7.org/fhir/StructureDefinition/DetectedIssue
type DetectedIssue struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique id for the detected issue
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Issue Category, e.g. drug-drug, duplicate therapy, etc.
	Category *CodeableConcept `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`
	// high | moderate | low
	Severity *DetectedIssueSeverityCode `protobuf:"bytes,12,opt,name=severity,proto3" json:"severity,omitempty"`
	// Associated patient
	Patient *Reference `protobuf:"bytes,13,opt,name=patient,proto3" json:"patient,omitempty"`
	// When identified
	Date *DateTime `protobuf:"bytes,14,opt,name=date,proto3" json:"date,omitempty"`
	// The provider or device that identified the issue
	Author *Reference `protobuf:"bytes,15,opt,name=author,proto3" json:"author,omitempty"`
	// Problem resource
	Implicated []*Reference `protobuf:"bytes,16,rep,name=implicated,proto3" json:"implicated,omitempty"`
	// Description and context
	Detail *String `protobuf:"bytes,17,opt,name=detail,proto3" json:"detail,omitempty"`
	// Authority for issue
	Reference            *Uri                        `protobuf:"bytes,18,opt,name=reference,proto3" json:"reference,omitempty"`
	Mitigation           []*DetectedIssue_Mitigation `protobuf:"bytes,19,rep,name=mitigation,proto3" json:"mitigation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DetectedIssue) Reset()         { *m = DetectedIssue{} }
func (m *DetectedIssue) String() string { return proto.CompactTextString(m) }
func (*DetectedIssue) ProtoMessage()    {}
func (*DetectedIssue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{29}
}

func (m *DetectedIssue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectedIssue.Unmarshal(m, b)
}
func (m *DetectedIssue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectedIssue.Marshal(b, m, deterministic)
}
func (m *DetectedIssue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectedIssue.Merge(m, src)
}
func (m *DetectedIssue) XXX_Size() int {
	return xxx_messageInfo_DetectedIssue.Size(m)
}
func (m *DetectedIssue) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectedIssue.DiscardUnknown(m)
}

var xxx_messageInfo_DetectedIssue proto.InternalMessageInfo

func (m *DetectedIssue) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DetectedIssue) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DetectedIssue) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DetectedIssue) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DetectedIssue) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DetectedIssue) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DetectedIssue) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DetectedIssue) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DetectedIssue) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DetectedIssue) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DetectedIssue) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *DetectedIssue) GetSeverity() *DetectedIssueSeverityCode {
	if m != nil {
		return m.Severity
	}
	return nil
}

func (m *DetectedIssue) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *DetectedIssue) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *DetectedIssue) GetAuthor() *Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *DetectedIssue) GetImplicated() []*Reference {
	if m != nil {
		return m.Implicated
	}
	return nil
}

func (m *DetectedIssue) GetDetail() *String {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *DetectedIssue) GetReference() *Uri {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *DetectedIssue) GetMitigation() []*DetectedIssue_Mitigation {
	if m != nil {
		return m.Mitigation
	}
	return nil
}

// Step taken to address
type DetectedIssue_Mitigation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What mitigation?
	Action *CodeableConcept `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	// Date committed
	Date *DateTime `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	// Who is committing?
	Author               *Reference `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DetectedIssue_Mitigation) Reset()         { *m = DetectedIssue_Mitigation{} }
func (m *DetectedIssue_Mitigation) String() string { return proto.CompactTextString(m) }
func (*DetectedIssue_Mitigation) ProtoMessage()    {}
func (*DetectedIssue_Mitigation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{29, 0}
}

func (m *DetectedIssue_Mitigation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectedIssue_Mitigation.Unmarshal(m, b)
}
func (m *DetectedIssue_Mitigation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectedIssue_Mitigation.Marshal(b, m, deterministic)
}
func (m *DetectedIssue_Mitigation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectedIssue_Mitigation.Merge(m, src)
}
func (m *DetectedIssue_Mitigation) XXX_Size() int {
	return xxx_messageInfo_DetectedIssue_Mitigation.Size(m)
}
func (m *DetectedIssue_Mitigation) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectedIssue_Mitigation.DiscardUnknown(m)
}

var xxx_messageInfo_DetectedIssue_Mitigation proto.InternalMessageInfo

func (m *DetectedIssue_Mitigation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DetectedIssue_Mitigation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DetectedIssue_Mitigation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DetectedIssue_Mitigation) GetAction() *CodeableConcept {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DetectedIssue_Mitigation) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *DetectedIssue_Mitigation) GetAuthor() *Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

// Auto-generated from StructureDefinition for Device, last updated
// 2017-04-19T07:44:43.294+10:00. Item used in healthcare. See
// http://hl7.org/fhir/StructureDefinition/Device
type Device struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Instance identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	Udi        *Device_Udi   `protobuf:"bytes,10,opt,name=udi,proto3" json:"udi,omitempty"`
	// active | inactive | entered-in-error | unknown
	Status *FHIRDeviceStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// What kind of device this is
	Type *CodeableConcept `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	// Lot number of manufacture
	LotNumber *String `protobuf:"bytes,13,opt,name=lot_number,json=lotNumber,proto3" json:"lot_number,omitempty"`
	// Name of device manufacturer
	Manufacturer *String `protobuf:"bytes,14,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	// Date when the device was made
	ManufactureDate *DateTime `protobuf:"bytes,15,opt,name=manufacture_date,json=manufactureDate,proto3" json:"manufacture_date,omitempty"`
	// Date and time of expiry of this device (if applicable)
	ExpirationDate *DateTime `protobuf:"bytes,16,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	// Model id assigned by the manufacturer
	Model *String `protobuf:"bytes,17,opt,name=model,proto3" json:"model,omitempty"`
	// Version number (i.e. software)
	Version *String `protobuf:"bytes,18,opt,name=version,proto3" json:"version,omitempty"`
	// Patient to whom Device is affixed
	Patient *Reference `protobuf:"bytes,19,opt,name=patient,proto3" json:"patient,omitempty"`
	// Organization responsible for device
	Owner *Reference `protobuf:"bytes,20,opt,name=owner,proto3" json:"owner,omitempty"`
	// Details for human/organization for support
	Contact []*ContactPoint `protobuf:"bytes,21,rep,name=contact,proto3" json:"contact,omitempty"`
	// Where the resource is found
	Location *Reference `protobuf:"bytes,22,opt,name=location,proto3" json:"location,omitempty"`
	// Network address to contact device
	Url *Uri `protobuf:"bytes,23,opt,name=url,proto3" json:"url,omitempty"`
	// Device notes and comments
	Note []*Annotation `protobuf:"bytes,24,rep,name=note,proto3" json:"note,omitempty"`
	// Safety Characteristics of Device
	Safety               []*CodeableConcept `protobuf:"bytes,25,rep,name=safety,proto3" json:"safety,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{30}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Device) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Device) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Device) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Device) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Device) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Device) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Device) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Device) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Device) GetUdi() *Device_Udi {
	if m != nil {
		return m.Udi
	}
	return nil
}

func (m *Device) GetStatus() *FHIRDeviceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Device) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Device) GetLotNumber() *String {
	if m != nil {
		return m.LotNumber
	}
	return nil
}

func (m *Device) GetManufacturer() *String {
	if m != nil {
		return m.Manufacturer
	}
	return nil
}

func (m *Device) GetManufactureDate() *DateTime {
	if m != nil {
		return m.ManufactureDate
	}
	return nil
}

func (m *Device) GetExpirationDate() *DateTime {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

func (m *Device) GetModel() *String {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *Device) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Device) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *Device) GetOwner() *Reference {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Device) GetContact() []*ContactPoint {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Device) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Device) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Device) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *Device) GetSafety() []*CodeableConcept {
	if m != nil {
		return m.Safety
	}
	return nil
}

// Unique Device Identifier (UDI) Barcode string
type Device_Udi struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Mandatory fixed portion of UDI
	DeviceIdentifier *String `protobuf:"bytes,4,opt,name=device_identifier,json=deviceIdentifier,proto3" json:"device_identifier,omitempty"`
	// Device Name as appears on UDI label
	Name *String `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Regional UDI authority
	Jurisdiction *Uri `protobuf:"bytes,6,opt,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// UDI Human Readable Barcode String
	CarrierHRF *String `protobuf:"bytes,7,opt,name=carrier_h_r_f,json=carrierHRF,proto3" json:"carrier_h_r_f,omitempty"`
	// UDI Machine Readable Barcode String
	CarrierAIDC *Base64Binary `protobuf:"bytes,8,opt,name=carrier_a_i_d_c,json=carrierAIDC,proto3" json:"carrier_a_i_d_c,omitempty"`
	// UDI Issuing Organization
	Issuer *Uri `protobuf:"bytes,9,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// barcode | rfid | manual +
	EntryType            *UDIEntryTypeCode `protobuf:"bytes,10,opt,name=entry_type,json=entryType,proto3" json:"entry_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Device_Udi) Reset()         { *m = Device_Udi{} }
func (m *Device_Udi) String() string { return proto.CompactTextString(m) }
func (*Device_Udi) ProtoMessage()    {}
func (*Device_Udi) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{30, 0}
}

func (m *Device_Udi) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device_Udi.Unmarshal(m, b)
}
func (m *Device_Udi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device_Udi.Marshal(b, m, deterministic)
}
func (m *Device_Udi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device_Udi.Merge(m, src)
}
func (m *Device_Udi) XXX_Size() int {
	return xxx_messageInfo_Device_Udi.Size(m)
}
func (m *Device_Udi) XXX_DiscardUnknown() {
	xxx_messageInfo_Device_Udi.DiscardUnknown(m)
}

var xxx_messageInfo_Device_Udi proto.InternalMessageInfo

func (m *Device_Udi) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Device_Udi) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Device_Udi) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Device_Udi) GetDeviceIdentifier() *String {
	if m != nil {
		return m.DeviceIdentifier
	}
	return nil
}

func (m *Device_Udi) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Device_Udi) GetJurisdiction() *Uri {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *Device_Udi) GetCarrierHRF() *String {
	if m != nil {
		return m.CarrierHRF
	}
	return nil
}

func (m *Device_Udi) GetCarrierAIDC() *Base64Binary {
	if m != nil {
		return m.CarrierAIDC
	}
	return nil
}

func (m *Device_Udi) GetIssuer() *Uri {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *Device_Udi) GetEntryType() *UDIEntryTypeCode {
	if m != nil {
		return m.EntryType
	}
	return nil
}

// Auto-generated from StructureDefinition for DeviceComponent, last updated
// 2017-04-19T07:44:43.294+10:00. An instance of a medical-related component of
// a medical device. See http://hl7.org/fhir/StructureDefinition/DeviceComponent
type DeviceComponent struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Instance id assigned by the software stack
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// What kind of component it is
	Type *CodeableConcept `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// Recent system change timestamp
	LastSystemChange *Instant `protobuf:"bytes,11,opt,name=last_system_change,json=lastSystemChange,proto3" json:"last_system_change,omitempty"`
	// Top-level device resource link
	Source *Reference `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	// Parent resource link
	Parent *Reference `protobuf:"bytes,13,opt,name=parent,proto3" json:"parent,omitempty"`
	// Current operational status of the component, for example On, Off or Standby
	OperationalStatus []*CodeableConcept `protobuf:"bytes,14,rep,name=operational_status,json=operationalStatus,proto3" json:"operational_status,omitempty"`
	// Current supported parameter group
	ParameterGroup *CodeableConcept `protobuf:"bytes,15,opt,name=parameter_group,json=parameterGroup,proto3" json:"parameter_group,omitempty"`
	// other | chemical | electrical | impedance | nuclear | optical | thermal |
	// biological | mechanical | acoustical | manual+
	MeasurementPrinciple    *MeasmntPrincipleCode                      `protobuf:"bytes,16,opt,name=measurement_principle,json=measurementPrinciple,proto3" json:"measurement_principle,omitempty"`
	ProductionSpecification []*DeviceComponent_ProductionSpecification `protobuf:"bytes,17,rep,name=production_specification,json=productionSpecification,proto3" json:"production_specification,omitempty"`
	// Language code for the human-readable text strings produced by the device
	LanguageCode         *CodeableConcept `protobuf:"bytes,18,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DeviceComponent) Reset()         { *m = DeviceComponent{} }
func (m *DeviceComponent) String() string { return proto.CompactTextString(m) }
func (*DeviceComponent) ProtoMessage()    {}
func (*DeviceComponent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{31}
}

func (m *DeviceComponent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceComponent.Unmarshal(m, b)
}
func (m *DeviceComponent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceComponent.Marshal(b, m, deterministic)
}
func (m *DeviceComponent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceComponent.Merge(m, src)
}
func (m *DeviceComponent) XXX_Size() int {
	return xxx_messageInfo_DeviceComponent.Size(m)
}
func (m *DeviceComponent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceComponent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceComponent proto.InternalMessageInfo

func (m *DeviceComponent) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeviceComponent) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DeviceComponent) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DeviceComponent) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DeviceComponent) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DeviceComponent) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DeviceComponent) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DeviceComponent) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DeviceComponent) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DeviceComponent) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *DeviceComponent) GetLastSystemChange() *Instant {
	if m != nil {
		return m.LastSystemChange
	}
	return nil
}

func (m *DeviceComponent) GetSource() *Reference {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *DeviceComponent) GetParent() *Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *DeviceComponent) GetOperationalStatus() []*CodeableConcept {
	if m != nil {
		return m.OperationalStatus
	}
	return nil
}

func (m *DeviceComponent) GetParameterGroup() *CodeableConcept {
	if m != nil {
		return m.ParameterGroup
	}
	return nil
}

func (m *DeviceComponent) GetMeasurementPrinciple() *MeasmntPrincipleCode {
	if m != nil {
		return m.MeasurementPrinciple
	}
	return nil
}

func (m *DeviceComponent) GetProductionSpecification() []*DeviceComponent_ProductionSpecification {
	if m != nil {
		return m.ProductionSpecification
	}
	return nil
}

func (m *DeviceComponent) GetLanguageCode() *CodeableConcept {
	if m != nil {
		return m.LanguageCode
	}
	return nil
}

// Specification details such as Component Revisions, or Serial Numbers
type DeviceComponent_ProductionSpecification struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type or kind of production specification, for example serial number or
	// software revision
	SpecType *CodeableConcept `protobuf:"bytes,4,opt,name=spec_type,json=specType,proto3" json:"spec_type,omitempty"`
	// Internal component unique identification
	ComponentId *Identifier `protobuf:"bytes,5,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	// A printable string defining the component
	ProductionSpec       *String  `protobuf:"bytes,6,opt,name=production_spec,json=productionSpec,proto3" json:"production_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceComponent_ProductionSpecification) Reset() {
	*m = DeviceComponent_ProductionSpecification{}
}
func (m *DeviceComponent_ProductionSpecification) String() string { return proto.CompactTextString(m) }
func (*DeviceComponent_ProductionSpecification) ProtoMessage()    {}
func (*DeviceComponent_ProductionSpecification) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{31, 0}
}

func (m *DeviceComponent_ProductionSpecification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceComponent_ProductionSpecification.Unmarshal(m, b)
}
func (m *DeviceComponent_ProductionSpecification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceComponent_ProductionSpecification.Marshal(b, m, deterministic)
}
func (m *DeviceComponent_ProductionSpecification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceComponent_ProductionSpecification.Merge(m, src)
}
func (m *DeviceComponent_ProductionSpecification) XXX_Size() int {
	return xxx_messageInfo_DeviceComponent_ProductionSpecification.Size(m)
}
func (m *DeviceComponent_ProductionSpecification) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceComponent_ProductionSpecification.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceComponent_ProductionSpecification proto.InternalMessageInfo

func (m *DeviceComponent_ProductionSpecification) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeviceComponent_ProductionSpecification) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DeviceComponent_ProductionSpecification) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DeviceComponent_ProductionSpecification) GetSpecType() *CodeableConcept {
	if m != nil {
		return m.SpecType
	}
	return nil
}

func (m *DeviceComponent_ProductionSpecification) GetComponentId() *Identifier {
	if m != nil {
		return m.ComponentId
	}
	return nil
}

func (m *DeviceComponent_ProductionSpecification) GetProductionSpec() *String {
	if m != nil {
		return m.ProductionSpec
	}
	return nil
}

// Auto-generated from StructureDefinition for DeviceMetric, last updated
// 2017-04-19T07:44:43.294+10:00. Measurement, calculation or setting capability
// of a medical device. See http://hl7.org/fhir/StructureDefinition/DeviceMetric
type DeviceMetric struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique identifier of this DeviceMetric
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Identity of metric, for example Heart Rate or PEEP Setting
	Type *CodeableConcept `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// Unit of Measure for the Metric
	Unit *CodeableConcept `protobuf:"bytes,11,opt,name=unit,proto3" json:"unit,omitempty"`
	// Describes the link to the source Device
	Source *Reference `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	// Describes the link to the parent DeviceComponent
	Parent *Reference `protobuf:"bytes,13,opt,name=parent,proto3" json:"parent,omitempty"`
	// on | off | standby | entered-in-error
	OperationalStatus *DeviceMetricOperationalStatusCode `protobuf:"bytes,14,opt,name=operational_status,json=operationalStatus,proto3" json:"operational_status,omitempty"`
	// black | red | green | yellow | blue | magenta | cyan | white
	Color *DeviceMetricColorCode `protobuf:"bytes,15,opt,name=color,proto3" json:"color,omitempty"`
	// measurement | setting | calculation | unspecified
	Category *DeviceMetricCategoryCode `protobuf:"bytes,16,opt,name=category,proto3" json:"category,omitempty"`
	// Describes the measurement repetition time
	MeasurementPeriod    *Timing                     `protobuf:"bytes,17,opt,name=measurement_period,json=measurementPeriod,proto3" json:"measurement_period,omitempty"`
	Calibration          []*DeviceMetric_Calibration `protobuf:"bytes,18,rep,name=calibration,proto3" json:"calibration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DeviceMetric) Reset()         { *m = DeviceMetric{} }
func (m *DeviceMetric) String() string { return proto.CompactTextString(m) }
func (*DeviceMetric) ProtoMessage()    {}
func (*DeviceMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{32}
}

func (m *DeviceMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceMetric.Unmarshal(m, b)
}
func (m *DeviceMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceMetric.Marshal(b, m, deterministic)
}
func (m *DeviceMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceMetric.Merge(m, src)
}
func (m *DeviceMetric) XXX_Size() int {
	return xxx_messageInfo_DeviceMetric.Size(m)
}
func (m *DeviceMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceMetric.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceMetric proto.InternalMessageInfo

func (m *DeviceMetric) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeviceMetric) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DeviceMetric) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DeviceMetric) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DeviceMetric) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DeviceMetric) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DeviceMetric) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DeviceMetric) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DeviceMetric) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DeviceMetric) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *DeviceMetric) GetUnit() *CodeableConcept {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *DeviceMetric) GetSource() *Reference {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *DeviceMetric) GetParent() *Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *DeviceMetric) GetOperationalStatus() *DeviceMetricOperationalStatusCode {
	if m != nil {
		return m.OperationalStatus
	}
	return nil
}

func (m *DeviceMetric) GetColor() *DeviceMetricColorCode {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *DeviceMetric) GetCategory() *DeviceMetricCategoryCode {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *DeviceMetric) GetMeasurementPeriod() *Timing {
	if m != nil {
		return m.MeasurementPeriod
	}
	return nil
}

func (m *DeviceMetric) GetCalibration() []*DeviceMetric_Calibration {
	if m != nil {
		return m.Calibration
	}
	return nil
}

// Describes the calibrations that have been performed or that are required to
// be performed
type DeviceMetric_Calibration struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// unspecified | offset | gain | two-point
	Type *DeviceMetricCalibrationTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// not-calibrated | calibration-required | calibrated | unspecified
	State *DeviceMetricCalibrationStateCode `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	// Describes the time last calibration has been performed
	Time                 *Instant `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceMetric_Calibration) Reset()         { *m = DeviceMetric_Calibration{} }
func (m *DeviceMetric_Calibration) String() string { return proto.CompactTextString(m) }
func (*DeviceMetric_Calibration) ProtoMessage()    {}
func (*DeviceMetric_Calibration) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{32, 0}
}

func (m *DeviceMetric_Calibration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceMetric_Calibration.Unmarshal(m, b)
}
func (m *DeviceMetric_Calibration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceMetric_Calibration.Marshal(b, m, deterministic)
}
func (m *DeviceMetric_Calibration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceMetric_Calibration.Merge(m, src)
}
func (m *DeviceMetric_Calibration) XXX_Size() int {
	return xxx_messageInfo_DeviceMetric_Calibration.Size(m)
}
func (m *DeviceMetric_Calibration) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceMetric_Calibration.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceMetric_Calibration proto.InternalMessageInfo

func (m *DeviceMetric_Calibration) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeviceMetric_Calibration) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DeviceMetric_Calibration) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DeviceMetric_Calibration) GetType() *DeviceMetricCalibrationTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *DeviceMetric_Calibration) GetState() *DeviceMetricCalibrationStateCode {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *DeviceMetric_Calibration) GetTime() *Instant {
	if m != nil {
		return m.Time
	}
	return nil
}

// Auto-generated from StructureDefinition for DeviceRequest, last updated
// 2017-04-19T07:44:43.294+10:00. Medical device request. See
// http://hl7.org/fhir/StructureDefinition/DeviceRequest
type DeviceRequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Request identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// What request fulfills
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// What request replaces
	PriorRequest []*Reference `protobuf:"bytes,12,rep,name=prior_request,json=priorRequest,proto3" json:"prior_request,omitempty"`
	// Identifier of composite request
	GroupIdentifier *Identifier `protobuf:"bytes,13,opt,name=group_identifier,json=groupIdentifier,proto3" json:"group_identifier,omitempty"`
	// draft | active | suspended | completed | entered-in-error | cancelled
	Status *RequestStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// proposal | plan | original-order | encoded | reflex-order
	Intent *CodeableConcept `protobuf:"bytes,15,opt,name=intent,proto3" json:"intent,omitempty"`
	// Indicates how quickly the {{title}} should be addressed with respect to
	// other requests
	Priority *RequestPriorityCode `protobuf:"bytes,16,opt,name=priority,proto3" json:"priority,omitempty"`
	Code     *DeviceRequest_Code  `protobuf:"bytes,17,opt,name=code,proto3" json:"code,omitempty"`
	// Focus of request
	Subject *Reference `protobuf:"bytes,18,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or Episode motivating request
	Context    *Reference                `protobuf:"bytes,19,opt,name=context,proto3" json:"context,omitempty"`
	Occurrence *DeviceRequest_Occurrence `protobuf:"bytes,20,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	// When recorded
	AuthoredOn *DateTime                `protobuf:"bytes,21,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	Requester  *DeviceRequest_Requester `protobuf:"bytes,22,opt,name=requester,proto3" json:"requester,omitempty"`
	// Fille role
	PerformerType *CodeableConcept `protobuf:"bytes,23,opt,name=performer_type,json=performerType,proto3" json:"performer_type,omitempty"`
	// Requested Filler
	Performer *Reference `protobuf:"bytes,24,opt,name=performer,proto3" json:"performer,omitempty"`
	// Coded Reason for request
	ReasonCode []*CodeableConcept `protobuf:"bytes,25,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Linked Reason for request
	ReasonReference []*Reference `protobuf:"bytes,26,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Additional clinical information
	SupportingInfo []*Reference `protobuf:"bytes,27,rep,name=supporting_info,json=supportingInfo,proto3" json:"supporting_info,omitempty"`
	// Notes or comments
	Note []*Annotation `protobuf:"bytes,28,rep,name=note,proto3" json:"note,omitempty"`
	// Request provenance
	RelevantHistory      []*Reference `protobuf:"bytes,29,rep,name=relevant_history,json=relevantHistory,proto3" json:"relevant_history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeviceRequest) Reset()         { *m = DeviceRequest{} }
func (m *DeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeviceRequest) ProtoMessage()    {}
func (*DeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{33}
}

func (m *DeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRequest.Unmarshal(m, b)
}
func (m *DeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRequest.Marshal(b, m, deterministic)
}
func (m *DeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRequest.Merge(m, src)
}
func (m *DeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeviceRequest.Size(m)
}
func (m *DeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRequest proto.InternalMessageInfo

func (m *DeviceRequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeviceRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DeviceRequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DeviceRequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DeviceRequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DeviceRequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DeviceRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DeviceRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DeviceRequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DeviceRequest) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *DeviceRequest) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *DeviceRequest) GetPriorRequest() []*Reference {
	if m != nil {
		return m.PriorRequest
	}
	return nil
}

func (m *DeviceRequest) GetGroupIdentifier() *Identifier {
	if m != nil {
		return m.GroupIdentifier
	}
	return nil
}

func (m *DeviceRequest) GetStatus() *RequestStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DeviceRequest) GetIntent() *CodeableConcept {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *DeviceRequest) GetPriority() *RequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *DeviceRequest) GetCode() *DeviceRequest_Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *DeviceRequest) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *DeviceRequest) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *DeviceRequest) GetOccurrence() *DeviceRequest_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *DeviceRequest) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *DeviceRequest) GetRequester() *DeviceRequest_Requester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *DeviceRequest) GetPerformerType() *CodeableConcept {
	if m != nil {
		return m.PerformerType
	}
	return nil
}

func (m *DeviceRequest) GetPerformer() *Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *DeviceRequest) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *DeviceRequest) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *DeviceRequest) GetSupportingInfo() []*Reference {
	if m != nil {
		return m.SupportingInfo
	}
	return nil
}

func (m *DeviceRequest) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *DeviceRequest) GetRelevantHistory() []*Reference {
	if m != nil {
		return m.RelevantHistory
	}
	return nil
}

// Device requested
type DeviceRequest_Code struct {
	// Types that are valid to be assigned to Code:
	//	*DeviceRequest_Code_Reference
	//	*DeviceRequest_Code_CodeableConcept
	Code                 isDeviceRequest_Code_Code `protobuf_oneof:"code"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeviceRequest_Code) Reset()         { *m = DeviceRequest_Code{} }
func (m *DeviceRequest_Code) String() string { return proto.CompactTextString(m) }
func (*DeviceRequest_Code) ProtoMessage()    {}
func (*DeviceRequest_Code) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{33, 0}
}

func (m *DeviceRequest_Code) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRequest_Code.Unmarshal(m, b)
}
func (m *DeviceRequest_Code) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRequest_Code.Marshal(b, m, deterministic)
}
func (m *DeviceRequest_Code) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRequest_Code.Merge(m, src)
}
func (m *DeviceRequest_Code) XXX_Size() int {
	return xxx_messageInfo_DeviceRequest_Code.Size(m)
}
func (m *DeviceRequest_Code) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRequest_Code.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRequest_Code proto.InternalMessageInfo

type isDeviceRequest_Code_Code interface {
	isDeviceRequest_Code_Code()
}

type DeviceRequest_Code_Reference struct {
	Reference *Reference `protobuf:"bytes,1,opt,name=reference,proto3,oneof"`
}

type DeviceRequest_Code_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*DeviceRequest_Code_Reference) isDeviceRequest_Code_Code() {}

func (*DeviceRequest_Code_CodeableConcept) isDeviceRequest_Code_Code() {}

func (m *DeviceRequest_Code) GetCode() isDeviceRequest_Code_Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *DeviceRequest_Code) GetReference() *Reference {
	if x, ok := m.GetCode().(*DeviceRequest_Code_Reference); ok {
		return x.Reference
	}
	return nil
}

func (m *DeviceRequest_Code) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetCode().(*DeviceRequest_Code_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeviceRequest_Code) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeviceRequest_Code_OneofMarshaler, _DeviceRequest_Code_OneofUnmarshaler, _DeviceRequest_Code_OneofSizer, []interface{}{
		(*DeviceRequest_Code_Reference)(nil),
		(*DeviceRequest_Code_CodeableConcept)(nil),
	}
}

func _DeviceRequest_Code_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeviceRequest_Code)
	// code
	switch x := m.Code.(type) {
	case *DeviceRequest_Code_Reference:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case *DeviceRequest_Code_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DeviceRequest_Code.Code has unexpected type %T", x)
	}
	return nil
}

func _DeviceRequest_Code_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeviceRequest_Code)
	switch tag {
	case 1: // code.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Code = &DeviceRequest_Code_Reference{msg}
		return true, err
	case 2: // code.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Code = &DeviceRequest_Code_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DeviceRequest_Code_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeviceRequest_Code)
	// code
	switch x := m.Code.(type) {
	case *DeviceRequest_Code_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DeviceRequest_Code_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Desired time or schedule for use
type DeviceRequest_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*DeviceRequest_Occurrence_DateTime
	//	*DeviceRequest_Occurrence_Period
	//	*DeviceRequest_Occurrence_Timing
	Occurrence           isDeviceRequest_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *DeviceRequest_Occurrence) Reset()         { *m = DeviceRequest_Occurrence{} }
func (m *DeviceRequest_Occurrence) String() string { return proto.CompactTextString(m) }
func (*DeviceRequest_Occurrence) ProtoMessage()    {}
func (*DeviceRequest_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{33, 1}
}

func (m *DeviceRequest_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRequest_Occurrence.Unmarshal(m, b)
}
func (m *DeviceRequest_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRequest_Occurrence.Marshal(b, m, deterministic)
}
func (m *DeviceRequest_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRequest_Occurrence.Merge(m, src)
}
func (m *DeviceRequest_Occurrence) XXX_Size() int {
	return xxx_messageInfo_DeviceRequest_Occurrence.Size(m)
}
func (m *DeviceRequest_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRequest_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRequest_Occurrence proto.InternalMessageInfo

type isDeviceRequest_Occurrence_Occurrence interface {
	isDeviceRequest_Occurrence_Occurrence()
}

type DeviceRequest_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type DeviceRequest_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type DeviceRequest_Occurrence_Timing struct {
	Timing *Timing `protobuf:"bytes,3,opt,name=timing,proto3,oneof"`
}

func (*DeviceRequest_Occurrence_DateTime) isDeviceRequest_Occurrence_Occurrence() {}

func (*DeviceRequest_Occurrence_Period) isDeviceRequest_Occurrence_Occurrence() {}

func (*DeviceRequest_Occurrence_Timing) isDeviceRequest_Occurrence_Occurrence() {}

func (m *DeviceRequest_Occurrence) GetOccurrence() isDeviceRequest_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *DeviceRequest_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*DeviceRequest_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *DeviceRequest_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*DeviceRequest_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

func (m *DeviceRequest_Occurrence) GetTiming() *Timing {
	if x, ok := m.GetOccurrence().(*DeviceRequest_Occurrence_Timing); ok {
		return x.Timing
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeviceRequest_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeviceRequest_Occurrence_OneofMarshaler, _DeviceRequest_Occurrence_OneofUnmarshaler, _DeviceRequest_Occurrence_OneofSizer, []interface{}{
		(*DeviceRequest_Occurrence_DateTime)(nil),
		(*DeviceRequest_Occurrence_Period)(nil),
		(*DeviceRequest_Occurrence_Timing)(nil),
	}
}

func _DeviceRequest_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeviceRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *DeviceRequest_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *DeviceRequest_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *DeviceRequest_Occurrence_Timing:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DeviceRequest_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _DeviceRequest_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeviceRequest_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &DeviceRequest_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &DeviceRequest_Occurrence_Period{msg}
		return true, err
	case 3: // occurrence.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Occurrence = &DeviceRequest_Occurrence_Timing{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DeviceRequest_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeviceRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *DeviceRequest_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DeviceRequest_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DeviceRequest_Occurrence_Timing:
		s := proto.Size(x.Timing)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who/what is requesting diagnostics
type DeviceRequest_Requester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual making the request
	Agent *Reference `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// Organization agent is acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeviceRequest_Requester) Reset()         { *m = DeviceRequest_Requester{} }
func (m *DeviceRequest_Requester) String() string { return proto.CompactTextString(m) }
func (*DeviceRequest_Requester) ProtoMessage()    {}
func (*DeviceRequest_Requester) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{33, 2}
}

func (m *DeviceRequest_Requester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRequest_Requester.Unmarshal(m, b)
}
func (m *DeviceRequest_Requester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRequest_Requester.Marshal(b, m, deterministic)
}
func (m *DeviceRequest_Requester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRequest_Requester.Merge(m, src)
}
func (m *DeviceRequest_Requester) XXX_Size() int {
	return xxx_messageInfo_DeviceRequest_Requester.Size(m)
}
func (m *DeviceRequest_Requester) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRequest_Requester.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRequest_Requester proto.InternalMessageInfo

func (m *DeviceRequest_Requester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeviceRequest_Requester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DeviceRequest_Requester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DeviceRequest_Requester) GetAgent() *Reference {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *DeviceRequest_Requester) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Auto-generated from StructureDefinition for DeviceUseStatement, last updated
// 2017-04-19T07:44:43.294+10:00. Record of use of a device. See
// http://hl7.org/fhir/StructureDefinition/DeviceUseStatement
type DeviceUseStatement struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External identifier for this record
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | completed | entered-in-error +
	Status *DeviceUseStatementStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Patient using device
	Subject *Reference `protobuf:"bytes,11,opt,name=subject,proto3" json:"subject,omitempty"`
	// Period device was used
	WhenUsed *Period                        `protobuf:"bytes,12,opt,name=when_used,json=whenUsed,proto3" json:"when_used,omitempty"`
	Timing   *DeviceUseStatement_TimingType `protobuf:"bytes,13,opt,name=timing,proto3" json:"timing,omitempty"`
	// When statement was recorded
	RecordedOn *DateTime `protobuf:"bytes,14,opt,name=recorded_on,json=recordedOn,proto3" json:"recorded_on,omitempty"`
	// Who made the statement
	Source *Reference `protobuf:"bytes,15,opt,name=source,proto3" json:"source,omitempty"`
	// Reference to device used
	Device *Reference `protobuf:"bytes,16,opt,name=device,proto3" json:"device,omitempty"`
	// Why device was used
	Indication []*CodeableConcept `protobuf:"bytes,17,rep,name=indication,proto3" json:"indication,omitempty"`
	// Target body site
	BodySite *CodeableConcept `protobuf:"bytes,18,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Addition details (comments, instructions)
	Note                 []*Annotation `protobuf:"bytes,19,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeviceUseStatement) Reset()         { *m = DeviceUseStatement{} }
func (m *DeviceUseStatement) String() string { return proto.CompactTextString(m) }
func (*DeviceUseStatement) ProtoMessage()    {}
func (*DeviceUseStatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{34}
}

func (m *DeviceUseStatement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceUseStatement.Unmarshal(m, b)
}
func (m *DeviceUseStatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceUseStatement.Marshal(b, m, deterministic)
}
func (m *DeviceUseStatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceUseStatement.Merge(m, src)
}
func (m *DeviceUseStatement) XXX_Size() int {
	return xxx_messageInfo_DeviceUseStatement.Size(m)
}
func (m *DeviceUseStatement) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceUseStatement.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceUseStatement proto.InternalMessageInfo

func (m *DeviceUseStatement) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeviceUseStatement) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DeviceUseStatement) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DeviceUseStatement) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DeviceUseStatement) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DeviceUseStatement) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DeviceUseStatement) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DeviceUseStatement) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DeviceUseStatement) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DeviceUseStatement) GetStatus() *DeviceUseStatementStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DeviceUseStatement) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *DeviceUseStatement) GetWhenUsed() *Period {
	if m != nil {
		return m.WhenUsed
	}
	return nil
}

func (m *DeviceUseStatement) GetTiming() *DeviceUseStatement_TimingType {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *DeviceUseStatement) GetRecordedOn() *DateTime {
	if m != nil {
		return m.RecordedOn
	}
	return nil
}

func (m *DeviceUseStatement) GetSource() *Reference {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *DeviceUseStatement) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *DeviceUseStatement) GetIndication() []*CodeableConcept {
	if m != nil {
		return m.Indication
	}
	return nil
}

func (m *DeviceUseStatement) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *DeviceUseStatement) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// How often  the device was used
type DeviceUseStatement_TimingType struct {
	// Types that are valid to be assigned to Timing:
	//	*DeviceUseStatement_TimingType_TimingValue
	//	*DeviceUseStatement_TimingType_Period
	//	*DeviceUseStatement_TimingType_DateTime
	Timing               isDeviceUseStatement_TimingType_Timing `protobuf_oneof:"timing"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *DeviceUseStatement_TimingType) Reset()         { *m = DeviceUseStatement_TimingType{} }
func (m *DeviceUseStatement_TimingType) String() string { return proto.CompactTextString(m) }
func (*DeviceUseStatement_TimingType) ProtoMessage()    {}
func (*DeviceUseStatement_TimingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{34, 0}
}

func (m *DeviceUseStatement_TimingType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceUseStatement_TimingType.Unmarshal(m, b)
}
func (m *DeviceUseStatement_TimingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceUseStatement_TimingType.Marshal(b, m, deterministic)
}
func (m *DeviceUseStatement_TimingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceUseStatement_TimingType.Merge(m, src)
}
func (m *DeviceUseStatement_TimingType) XXX_Size() int {
	return xxx_messageInfo_DeviceUseStatement_TimingType.Size(m)
}
func (m *DeviceUseStatement_TimingType) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceUseStatement_TimingType.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceUseStatement_TimingType proto.InternalMessageInfo

type isDeviceUseStatement_TimingType_Timing interface {
	isDeviceUseStatement_TimingType_Timing()
}

type DeviceUseStatement_TimingType_TimingValue struct {
	TimingValue *Timing `protobuf:"bytes,1,opt,name=timing_value,json=timing,proto3,oneof"`
}

type DeviceUseStatement_TimingType_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type DeviceUseStatement_TimingType_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,3,opt,name=date_time,json=dateTime,proto3,oneof"`
}

func (*DeviceUseStatement_TimingType_TimingValue) isDeviceUseStatement_TimingType_Timing() {}

func (*DeviceUseStatement_TimingType_Period) isDeviceUseStatement_TimingType_Timing() {}

func (*DeviceUseStatement_TimingType_DateTime) isDeviceUseStatement_TimingType_Timing() {}

func (m *DeviceUseStatement_TimingType) GetTiming() isDeviceUseStatement_TimingType_Timing {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *DeviceUseStatement_TimingType) GetTimingValue() *Timing {
	if x, ok := m.GetTiming().(*DeviceUseStatement_TimingType_TimingValue); ok {
		return x.TimingValue
	}
	return nil
}

func (m *DeviceUseStatement_TimingType) GetPeriod() *Period {
	if x, ok := m.GetTiming().(*DeviceUseStatement_TimingType_Period); ok {
		return x.Period
	}
	return nil
}

func (m *DeviceUseStatement_TimingType) GetDateTime() *DateTime {
	if x, ok := m.GetTiming().(*DeviceUseStatement_TimingType_DateTime); ok {
		return x.DateTime
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeviceUseStatement_TimingType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeviceUseStatement_TimingType_OneofMarshaler, _DeviceUseStatement_TimingType_OneofUnmarshaler, _DeviceUseStatement_TimingType_OneofSizer, []interface{}{
		(*DeviceUseStatement_TimingType_TimingValue)(nil),
		(*DeviceUseStatement_TimingType_Period)(nil),
		(*DeviceUseStatement_TimingType_DateTime)(nil),
	}
}

func _DeviceUseStatement_TimingType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeviceUseStatement_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *DeviceUseStatement_TimingType_TimingValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimingValue); err != nil {
			return err
		}
	case *DeviceUseStatement_TimingType_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *DeviceUseStatement_TimingType_DateTime:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DeviceUseStatement_TimingType.Timing has unexpected type %T", x)
	}
	return nil
}

func _DeviceUseStatement_TimingType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeviceUseStatement_TimingType)
	switch tag {
	case 1: // timing.timing_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Timing = &DeviceUseStatement_TimingType_TimingValue{msg}
		return true, err
	case 2: // timing.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Timing = &DeviceUseStatement_TimingType_Period{msg}
		return true, err
	case 3: // timing.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Timing = &DeviceUseStatement_TimingType_DateTime{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DeviceUseStatement_TimingType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeviceUseStatement_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *DeviceUseStatement_TimingType_TimingValue:
		s := proto.Size(x.TimingValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DeviceUseStatement_TimingType_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DeviceUseStatement_TimingType_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for DiagnosticReport, last updated
// 2017-04-19T07:44:43.294+10:00. A Diagnostic report - a combination of request
// information, atomic results, images, interpretation, as well as formatted
// reports. See http://hl7.org/fhir/StructureDefinition/DiagnosticReport
type DiagnosticReport struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier for report
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// What was requested
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | partial | preliminary | final +
	Status *DiagnosticReportStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Service category
	Category *CodeableConcept `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
	// Name/Code for this diagnostic report
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// The subject of the report - usually, but not always, the patient
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Health care event when test ordered
	Context   *Reference                  `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *DiagnosticReport_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// DateTime this version was released
	Issued    *Instant                      `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	Performer []*DiagnosticReport_Performer `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	// Specimens this report is based on
	Specimen []*Reference `protobuf:"bytes,19,rep,name=specimen,proto3" json:"specimen,omitempty"`
	// Observations - simple, or complex nested groups
	Result []*Reference `protobuf:"bytes,20,rep,name=result,proto3" json:"result,omitempty"`
	// Reference to full details of imaging associated with the diagnostic report
	ImagingStudy []*Reference              `protobuf:"bytes,21,rep,name=imaging_study,json=imagingStudy,proto3" json:"imaging_study,omitempty"`
	Image        []*DiagnosticReport_Image `protobuf:"bytes,22,rep,name=image,proto3" json:"image,omitempty"`
	// Clinical Interpretation of test results
	Conclusion *String `protobuf:"bytes,23,opt,name=conclusion,proto3" json:"conclusion,omitempty"`
	// Codes for the conclusion
	CodedDiagnosis []*CodeableConcept `protobuf:"bytes,24,rep,name=coded_diagnosis,json=codedDiagnosis,proto3" json:"coded_diagnosis,omitempty"`
	// Entire report as issued
	PresentedForm        []*Attachment `protobuf:"bytes,25,rep,name=presented_form,json=presentedForm,proto3" json:"presented_form,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DiagnosticReport) Reset()         { *m = DiagnosticReport{} }
func (m *DiagnosticReport) String() string { return proto.CompactTextString(m) }
func (*DiagnosticReport) ProtoMessage()    {}
func (*DiagnosticReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{35}
}

func (m *DiagnosticReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiagnosticReport.Unmarshal(m, b)
}
func (m *DiagnosticReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiagnosticReport.Marshal(b, m, deterministic)
}
func (m *DiagnosticReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiagnosticReport.Merge(m, src)
}
func (m *DiagnosticReport) XXX_Size() int {
	return xxx_messageInfo_DiagnosticReport.Size(m)
}
func (m *DiagnosticReport) XXX_DiscardUnknown() {
	xxx_messageInfo_DiagnosticReport.DiscardUnknown(m)
}

var xxx_messageInfo_DiagnosticReport proto.InternalMessageInfo

func (m *DiagnosticReport) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DiagnosticReport) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DiagnosticReport) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DiagnosticReport) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DiagnosticReport) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DiagnosticReport) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DiagnosticReport) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DiagnosticReport) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DiagnosticReport) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DiagnosticReport) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *DiagnosticReport) GetStatus() *DiagnosticReportStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DiagnosticReport) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *DiagnosticReport) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *DiagnosticReport) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *DiagnosticReport) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *DiagnosticReport) GetEffective() *DiagnosticReport_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *DiagnosticReport) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *DiagnosticReport) GetPerformer() []*DiagnosticReport_Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *DiagnosticReport) GetSpecimen() []*Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *DiagnosticReport) GetResult() []*Reference {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *DiagnosticReport) GetImagingStudy() []*Reference {
	if m != nil {
		return m.ImagingStudy
	}
	return nil
}

func (m *DiagnosticReport) GetImage() []*DiagnosticReport_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *DiagnosticReport) GetConclusion() *String {
	if m != nil {
		return m.Conclusion
	}
	return nil
}

func (m *DiagnosticReport) GetCodedDiagnosis() []*CodeableConcept {
	if m != nil {
		return m.CodedDiagnosis
	}
	return nil
}

func (m *DiagnosticReport) GetPresentedForm() []*Attachment {
	if m != nil {
		return m.PresentedForm
	}
	return nil
}

// Clinically relevant time/time-period for report
type DiagnosticReport_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*DiagnosticReport_Effective_DateTime
	//	*DiagnosticReport_Effective_Period
	Effective            isDiagnosticReport_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *DiagnosticReport_Effective) Reset()         { *m = DiagnosticReport_Effective{} }
func (m *DiagnosticReport_Effective) String() string { return proto.CompactTextString(m) }
func (*DiagnosticReport_Effective) ProtoMessage()    {}
func (*DiagnosticReport_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{35, 0}
}

func (m *DiagnosticReport_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiagnosticReport_Effective.Unmarshal(m, b)
}
func (m *DiagnosticReport_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiagnosticReport_Effective.Marshal(b, m, deterministic)
}
func (m *DiagnosticReport_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiagnosticReport_Effective.Merge(m, src)
}
func (m *DiagnosticReport_Effective) XXX_Size() int {
	return xxx_messageInfo_DiagnosticReport_Effective.Size(m)
}
func (m *DiagnosticReport_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_DiagnosticReport_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_DiagnosticReport_Effective proto.InternalMessageInfo

type isDiagnosticReport_Effective_Effective interface {
	isDiagnosticReport_Effective_Effective()
}

type DiagnosticReport_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type DiagnosticReport_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*DiagnosticReport_Effective_DateTime) isDiagnosticReport_Effective_Effective() {}

func (*DiagnosticReport_Effective_Period) isDiagnosticReport_Effective_Effective() {}

func (m *DiagnosticReport_Effective) GetEffective() isDiagnosticReport_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *DiagnosticReport_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*DiagnosticReport_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *DiagnosticReport_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*DiagnosticReport_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DiagnosticReport_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DiagnosticReport_Effective_OneofMarshaler, _DiagnosticReport_Effective_OneofUnmarshaler, _DiagnosticReport_Effective_OneofSizer, []interface{}{
		(*DiagnosticReport_Effective_DateTime)(nil),
		(*DiagnosticReport_Effective_Period)(nil),
	}
}

func _DiagnosticReport_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DiagnosticReport_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *DiagnosticReport_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *DiagnosticReport_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DiagnosticReport_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _DiagnosticReport_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DiagnosticReport_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &DiagnosticReport_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &DiagnosticReport_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DiagnosticReport_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DiagnosticReport_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *DiagnosticReport_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DiagnosticReport_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Participants in producing the report
type DiagnosticReport_Performer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of performer
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Practitioner or Organization  participant
	Actor                *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DiagnosticReport_Performer) Reset()         { *m = DiagnosticReport_Performer{} }
func (m *DiagnosticReport_Performer) String() string { return proto.CompactTextString(m) }
func (*DiagnosticReport_Performer) ProtoMessage()    {}
func (*DiagnosticReport_Performer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{35, 1}
}

func (m *DiagnosticReport_Performer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiagnosticReport_Performer.Unmarshal(m, b)
}
func (m *DiagnosticReport_Performer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiagnosticReport_Performer.Marshal(b, m, deterministic)
}
func (m *DiagnosticReport_Performer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiagnosticReport_Performer.Merge(m, src)
}
func (m *DiagnosticReport_Performer) XXX_Size() int {
	return xxx_messageInfo_DiagnosticReport_Performer.Size(m)
}
func (m *DiagnosticReport_Performer) XXX_DiscardUnknown() {
	xxx_messageInfo_DiagnosticReport_Performer.DiscardUnknown(m)
}

var xxx_messageInfo_DiagnosticReport_Performer proto.InternalMessageInfo

func (m *DiagnosticReport_Performer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DiagnosticReport_Performer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DiagnosticReport_Performer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DiagnosticReport_Performer) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *DiagnosticReport_Performer) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

// Key images associated with this report
type DiagnosticReport_Image struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Comment about the image (e.g. explanation)
	Comment *String `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	// Reference to the image source
	Link                 *Reference `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DiagnosticReport_Image) Reset()         { *m = DiagnosticReport_Image{} }
func (m *DiagnosticReport_Image) String() string { return proto.CompactTextString(m) }
func (*DiagnosticReport_Image) ProtoMessage()    {}
func (*DiagnosticReport_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{35, 2}
}

func (m *DiagnosticReport_Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiagnosticReport_Image.Unmarshal(m, b)
}
func (m *DiagnosticReport_Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiagnosticReport_Image.Marshal(b, m, deterministic)
}
func (m *DiagnosticReport_Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiagnosticReport_Image.Merge(m, src)
}
func (m *DiagnosticReport_Image) XXX_Size() int {
	return xxx_messageInfo_DiagnosticReport_Image.Size(m)
}
func (m *DiagnosticReport_Image) XXX_DiscardUnknown() {
	xxx_messageInfo_DiagnosticReport_Image.DiscardUnknown(m)
}

var xxx_messageInfo_DiagnosticReport_Image proto.InternalMessageInfo

func (m *DiagnosticReport_Image) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DiagnosticReport_Image) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DiagnosticReport_Image) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DiagnosticReport_Image) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *DiagnosticReport_Image) GetLink() *Reference {
	if m != nil {
		return m.Link
	}
	return nil
}

// Auto-generated from StructureDefinition for DocumentManifest, last updated
// 2017-04-19T07:44:43.294+10:00. A list that defines a set of documents. See
// http://hl7.org/fhir/StructureDefinition/DocumentManifest
type DocumentManifest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique Identifier for the set of documents
	MasterIdentifier *Identifier `protobuf:"bytes,9,opt,name=master_identifier,json=masterIdentifier,proto3" json:"master_identifier,omitempty"`
	// Other identifiers for the manifest
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// current | superseded | entered-in-error
	Status *DocumentReferenceStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Kind of document set
	Type *CodeableConcept `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	// The subject of the set of documents
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// When this document manifest created
	Created *DateTime `protobuf:"bytes,14,opt,name=created,proto3" json:"created,omitempty"`
	// Who and/or what authored the manifest
	Author []*Reference `protobuf:"bytes,15,rep,name=author,proto3" json:"author,omitempty"`
	// Intended to get notified about this set of documents
	Recipient []*Reference `protobuf:"bytes,16,rep,name=recipient,proto3" json:"recipient,omitempty"`
	// The source system/application/software
	Source *Uri `protobuf:"bytes,17,opt,name=source,proto3" json:"source,omitempty"`
	// Human-readable description (title)
	Description          *String                     `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	Content              []*DocumentManifest_Content `protobuf:"bytes,19,rep,name=content,proto3" json:"content,omitempty"`
	Related              []*DocumentManifest_Related `protobuf:"bytes,20,rep,name=related,proto3" json:"related,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DocumentManifest) Reset()         { *m = DocumentManifest{} }
func (m *DocumentManifest) String() string { return proto.CompactTextString(m) }
func (*DocumentManifest) ProtoMessage()    {}
func (*DocumentManifest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{36}
}

func (m *DocumentManifest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentManifest.Unmarshal(m, b)
}
func (m *DocumentManifest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentManifest.Marshal(b, m, deterministic)
}
func (m *DocumentManifest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentManifest.Merge(m, src)
}
func (m *DocumentManifest) XXX_Size() int {
	return xxx_messageInfo_DocumentManifest.Size(m)
}
func (m *DocumentManifest) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentManifest.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentManifest proto.InternalMessageInfo

func (m *DocumentManifest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DocumentManifest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DocumentManifest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DocumentManifest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DocumentManifest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DocumentManifest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DocumentManifest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DocumentManifest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DocumentManifest) GetMasterIdentifier() *Identifier {
	if m != nil {
		return m.MasterIdentifier
	}
	return nil
}

func (m *DocumentManifest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DocumentManifest) GetStatus() *DocumentReferenceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DocumentManifest) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *DocumentManifest) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *DocumentManifest) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *DocumentManifest) GetAuthor() []*Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *DocumentManifest) GetRecipient() []*Reference {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *DocumentManifest) GetSource() *Uri {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *DocumentManifest) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *DocumentManifest) GetContent() []*DocumentManifest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *DocumentManifest) GetRelated() []*DocumentManifest_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

// The items included
type DocumentManifest_Content struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	P                    *DocumentManifest_Content_P `protobuf:"bytes,4,opt,name=p,proto3" json:"p,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DocumentManifest_Content) Reset()         { *m = DocumentManifest_Content{} }
func (m *DocumentManifest_Content) String() string { return proto.CompactTextString(m) }
func (*DocumentManifest_Content) ProtoMessage()    {}
func (*DocumentManifest_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{36, 0}
}

func (m *DocumentManifest_Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentManifest_Content.Unmarshal(m, b)
}
func (m *DocumentManifest_Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentManifest_Content.Marshal(b, m, deterministic)
}
func (m *DocumentManifest_Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentManifest_Content.Merge(m, src)
}
func (m *DocumentManifest_Content) XXX_Size() int {
	return xxx_messageInfo_DocumentManifest_Content.Size(m)
}
func (m *DocumentManifest_Content) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentManifest_Content.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentManifest_Content proto.InternalMessageInfo

func (m *DocumentManifest_Content) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DocumentManifest_Content) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DocumentManifest_Content) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DocumentManifest_Content) GetP() *DocumentManifest_Content_P {
	if m != nil {
		return m.P
	}
	return nil
}

// Contents of this set of documents
type DocumentManifest_Content_P struct {
	// Types that are valid to be assigned to P:
	//	*DocumentManifest_Content_P_Attachment
	//	*DocumentManifest_Content_P_Reference
	P                    isDocumentManifest_Content_P_P `protobuf_oneof:"p"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *DocumentManifest_Content_P) Reset()         { *m = DocumentManifest_Content_P{} }
func (m *DocumentManifest_Content_P) String() string { return proto.CompactTextString(m) }
func (*DocumentManifest_Content_P) ProtoMessage()    {}
func (*DocumentManifest_Content_P) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{36, 0, 0}
}

func (m *DocumentManifest_Content_P) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentManifest_Content_P.Unmarshal(m, b)
}
func (m *DocumentManifest_Content_P) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentManifest_Content_P.Marshal(b, m, deterministic)
}
func (m *DocumentManifest_Content_P) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentManifest_Content_P.Merge(m, src)
}
func (m *DocumentManifest_Content_P) XXX_Size() int {
	return xxx_messageInfo_DocumentManifest_Content_P.Size(m)
}
func (m *DocumentManifest_Content_P) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentManifest_Content_P.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentManifest_Content_P proto.InternalMessageInfo

type isDocumentManifest_Content_P_P interface {
	isDocumentManifest_Content_P_P()
}

type DocumentManifest_Content_P_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,1,opt,name=attachment,proto3,oneof"`
}

type DocumentManifest_Content_P_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*DocumentManifest_Content_P_Attachment) isDocumentManifest_Content_P_P() {}

func (*DocumentManifest_Content_P_Reference) isDocumentManifest_Content_P_P() {}

func (m *DocumentManifest_Content_P) GetP() isDocumentManifest_Content_P_P {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *DocumentManifest_Content_P) GetAttachment() *Attachment {
	if x, ok := m.GetP().(*DocumentManifest_Content_P_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *DocumentManifest_Content_P) GetReference() *Reference {
	if x, ok := m.GetP().(*DocumentManifest_Content_P_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DocumentManifest_Content_P) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DocumentManifest_Content_P_OneofMarshaler, _DocumentManifest_Content_P_OneofUnmarshaler, _DocumentManifest_Content_P_OneofSizer, []interface{}{
		(*DocumentManifest_Content_P_Attachment)(nil),
		(*DocumentManifest_Content_P_Reference)(nil),
	}
}

func _DocumentManifest_Content_P_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DocumentManifest_Content_P)
	// p
	switch x := m.P.(type) {
	case *DocumentManifest_Content_P_Attachment:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *DocumentManifest_Content_P_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DocumentManifest_Content_P.P has unexpected type %T", x)
	}
	return nil
}

func _DocumentManifest_Content_P_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DocumentManifest_Content_P)
	switch tag {
	case 1: // p.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.P = &DocumentManifest_Content_P_Attachment{msg}
		return true, err
	case 2: // p.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.P = &DocumentManifest_Content_P_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DocumentManifest_Content_P_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DocumentManifest_Content_P)
	// p
	switch x := m.P.(type) {
	case *DocumentManifest_Content_P_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DocumentManifest_Content_P_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Related things
type DocumentManifest_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifiers of things that are related
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Related Resource
	Ref                  *Reference `protobuf:"bytes,5,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DocumentManifest_Related) Reset()         { *m = DocumentManifest_Related{} }
func (m *DocumentManifest_Related) String() string { return proto.CompactTextString(m) }
func (*DocumentManifest_Related) ProtoMessage()    {}
func (*DocumentManifest_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{36, 1}
}

func (m *DocumentManifest_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentManifest_Related.Unmarshal(m, b)
}
func (m *DocumentManifest_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentManifest_Related.Marshal(b, m, deterministic)
}
func (m *DocumentManifest_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentManifest_Related.Merge(m, src)
}
func (m *DocumentManifest_Related) XXX_Size() int {
	return xxx_messageInfo_DocumentManifest_Related.Size(m)
}
func (m *DocumentManifest_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentManifest_Related.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentManifest_Related proto.InternalMessageInfo

func (m *DocumentManifest_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DocumentManifest_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DocumentManifest_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DocumentManifest_Related) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DocumentManifest_Related) GetRef() *Reference {
	if m != nil {
		return m.Ref
	}
	return nil
}

// Auto-generated from StructureDefinition for DocumentReference, last updated
// 2017-04-19T07:44:43.294+10:00. A reference to a document. See
// http://hl7.org/fhir/StructureDefinition/DocumentReference
type DocumentReference struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Master Version Specific Identifier
	MasterIdentifier *Identifier `protobuf:"bytes,9,opt,name=master_identifier,json=masterIdentifier,proto3" json:"master_identifier,omitempty"`
	// Other identifiers for the document
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// current | superseded | entered-in-error
	Status *DocumentReferenceStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// preliminary | final | appended | amended | entered-in-error
	DocStatus *CompositionStatusCode `protobuf:"bytes,12,opt,name=doc_status,json=docStatus,proto3" json:"doc_status,omitempty"`
	// Kind of document (LOINC if possible)
	Type *CodeableConcept `protobuf:"bytes,13,opt,name=type,proto3" json:"type,omitempty"`
	// Categorization of document
	ClassValue *CodeableConcept `protobuf:"bytes,14,opt,name=class_value,json=class,proto3" json:"class_value,omitempty"`
	// Who/what is the subject of the document
	Subject *Reference `protobuf:"bytes,15,opt,name=subject,proto3" json:"subject,omitempty"`
	// Document creation time
	Created *DateTime `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	// When this document reference was created
	Indexed *Instant `protobuf:"bytes,17,opt,name=indexed,proto3" json:"indexed,omitempty"`
	// Who and/or what authored the document
	Author []*Reference `protobuf:"bytes,18,rep,name=author,proto3" json:"author,omitempty"`
	// Who/what authenticated the document
	Authenticator *Reference `protobuf:"bytes,19,opt,name=authenticator,proto3" json:"authenticator,omitempty"`
	// Organization which maintains the document
	Custodian *Reference                     `protobuf:"bytes,20,opt,name=custodian,proto3" json:"custodian,omitempty"`
	RelatesTo []*DocumentReference_RelatesTo `protobuf:"bytes,21,rep,name=relates_to,json=relatesTo,proto3" json:"relates_to,omitempty"`
	// Human-readable description (title)
	Description *String `protobuf:"bytes,22,opt,name=description,proto3" json:"description,omitempty"`
	// Document security-tags
	SecurityLabel        []*CodeableConcept           `protobuf:"bytes,23,rep,name=security_label,json=securityLabel,proto3" json:"security_label,omitempty"`
	Content              []*DocumentReference_Content `protobuf:"bytes,24,rep,name=content,proto3" json:"content,omitempty"`
	Context              *DocumentReference_Context   `protobuf:"bytes,25,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DocumentReference) Reset()         { *m = DocumentReference{} }
func (m *DocumentReference) String() string { return proto.CompactTextString(m) }
func (*DocumentReference) ProtoMessage()    {}
func (*DocumentReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{37}
}

func (m *DocumentReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentReference.Unmarshal(m, b)
}
func (m *DocumentReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentReference.Marshal(b, m, deterministic)
}
func (m *DocumentReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentReference.Merge(m, src)
}
func (m *DocumentReference) XXX_Size() int {
	return xxx_messageInfo_DocumentReference.Size(m)
}
func (m *DocumentReference) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentReference.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentReference proto.InternalMessageInfo

func (m *DocumentReference) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DocumentReference) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DocumentReference) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DocumentReference) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DocumentReference) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DocumentReference) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DocumentReference) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DocumentReference) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DocumentReference) GetMasterIdentifier() *Identifier {
	if m != nil {
		return m.MasterIdentifier
	}
	return nil
}

func (m *DocumentReference) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DocumentReference) GetStatus() *DocumentReferenceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DocumentReference) GetDocStatus() *CompositionStatusCode {
	if m != nil {
		return m.DocStatus
	}
	return nil
}

func (m *DocumentReference) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *DocumentReference) GetClassValue() *CodeableConcept {
	if m != nil {
		return m.ClassValue
	}
	return nil
}

func (m *DocumentReference) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *DocumentReference) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *DocumentReference) GetIndexed() *Instant {
	if m != nil {
		return m.Indexed
	}
	return nil
}

func (m *DocumentReference) GetAuthor() []*Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *DocumentReference) GetAuthenticator() *Reference {
	if m != nil {
		return m.Authenticator
	}
	return nil
}

func (m *DocumentReference) GetCustodian() *Reference {
	if m != nil {
		return m.Custodian
	}
	return nil
}

func (m *DocumentReference) GetRelatesTo() []*DocumentReference_RelatesTo {
	if m != nil {
		return m.RelatesTo
	}
	return nil
}

func (m *DocumentReference) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *DocumentReference) GetSecurityLabel() []*CodeableConcept {
	if m != nil {
		return m.SecurityLabel
	}
	return nil
}

func (m *DocumentReference) GetContent() []*DocumentReference_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *DocumentReference) GetContext() *DocumentReference_Context {
	if m != nil {
		return m.Context
	}
	return nil
}

// Relationships to other documents
type DocumentReference_RelatesTo struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// replaces | transforms | signs | appends
	Code *DocumentRelationshipTypeCode `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Target of the relationship
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DocumentReference_RelatesTo) Reset()         { *m = DocumentReference_RelatesTo{} }
func (m *DocumentReference_RelatesTo) String() string { return proto.CompactTextString(m) }
func (*DocumentReference_RelatesTo) ProtoMessage()    {}
func (*DocumentReference_RelatesTo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{37, 0}
}

func (m *DocumentReference_RelatesTo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentReference_RelatesTo.Unmarshal(m, b)
}
func (m *DocumentReference_RelatesTo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentReference_RelatesTo.Marshal(b, m, deterministic)
}
func (m *DocumentReference_RelatesTo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentReference_RelatesTo.Merge(m, src)
}
func (m *DocumentReference_RelatesTo) XXX_Size() int {
	return xxx_messageInfo_DocumentReference_RelatesTo.Size(m)
}
func (m *DocumentReference_RelatesTo) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentReference_RelatesTo.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentReference_RelatesTo proto.InternalMessageInfo

func (m *DocumentReference_RelatesTo) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DocumentReference_RelatesTo) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DocumentReference_RelatesTo) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DocumentReference_RelatesTo) GetCode() *DocumentRelationshipTypeCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *DocumentReference_RelatesTo) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Document referenced
type DocumentReference_Content struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Where to access the document
	Attachment *Attachment `protobuf:"bytes,4,opt,name=attachment,proto3" json:"attachment,omitempty"`
	// Format/content rules for the document
	Format               *Coding  `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocumentReference_Content) Reset()         { *m = DocumentReference_Content{} }
func (m *DocumentReference_Content) String() string { return proto.CompactTextString(m) }
func (*DocumentReference_Content) ProtoMessage()    {}
func (*DocumentReference_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{37, 1}
}

func (m *DocumentReference_Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentReference_Content.Unmarshal(m, b)
}
func (m *DocumentReference_Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentReference_Content.Marshal(b, m, deterministic)
}
func (m *DocumentReference_Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentReference_Content.Merge(m, src)
}
func (m *DocumentReference_Content) XXX_Size() int {
	return xxx_messageInfo_DocumentReference_Content.Size(m)
}
func (m *DocumentReference_Content) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentReference_Content.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentReference_Content proto.InternalMessageInfo

func (m *DocumentReference_Content) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DocumentReference_Content) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DocumentReference_Content) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DocumentReference_Content) GetAttachment() *Attachment {
	if m != nil {
		return m.Attachment
	}
	return nil
}

func (m *DocumentReference_Content) GetFormat() *Coding {
	if m != nil {
		return m.Format
	}
	return nil
}

// Clinical context of document
type DocumentReference_Context struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Context of the document  content
	Encounter *Reference `protobuf:"bytes,4,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// Main clinical acts documented
	Event []*CodeableConcept `protobuf:"bytes,5,rep,name=event,proto3" json:"event,omitempty"`
	// Time of service that is being documented
	Period *Period `protobuf:"bytes,6,opt,name=period,proto3" json:"period,omitempty"`
	// Kind of facility where patient was seen
	FacilityType *CodeableConcept `protobuf:"bytes,7,opt,name=facility_type,json=facilityType,proto3" json:"facility_type,omitempty"`
	// Additional details about where the content was created (e.g. clinical
	// specialty)
	PracticeSetting *CodeableConcept `protobuf:"bytes,8,opt,name=practice_setting,json=practiceSetting,proto3" json:"practice_setting,omitempty"`
	// Patient demographics from source
	SourcePatientInfo    *Reference                           `protobuf:"bytes,9,opt,name=source_patient_info,json=sourcePatientInfo,proto3" json:"source_patient_info,omitempty"`
	Related              []*DocumentReference_Context_Related `protobuf:"bytes,10,rep,name=related,proto3" json:"related,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *DocumentReference_Context) Reset()         { *m = DocumentReference_Context{} }
func (m *DocumentReference_Context) String() string { return proto.CompactTextString(m) }
func (*DocumentReference_Context) ProtoMessage()    {}
func (*DocumentReference_Context) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{37, 2}
}

func (m *DocumentReference_Context) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentReference_Context.Unmarshal(m, b)
}
func (m *DocumentReference_Context) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentReference_Context.Marshal(b, m, deterministic)
}
func (m *DocumentReference_Context) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentReference_Context.Merge(m, src)
}
func (m *DocumentReference_Context) XXX_Size() int {
	return xxx_messageInfo_DocumentReference_Context.Size(m)
}
func (m *DocumentReference_Context) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentReference_Context.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentReference_Context proto.InternalMessageInfo

func (m *DocumentReference_Context) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DocumentReference_Context) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DocumentReference_Context) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DocumentReference_Context) GetEncounter() *Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *DocumentReference_Context) GetEvent() []*CodeableConcept {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *DocumentReference_Context) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *DocumentReference_Context) GetFacilityType() *CodeableConcept {
	if m != nil {
		return m.FacilityType
	}
	return nil
}

func (m *DocumentReference_Context) GetPracticeSetting() *CodeableConcept {
	if m != nil {
		return m.PracticeSetting
	}
	return nil
}

func (m *DocumentReference_Context) GetSourcePatientInfo() *Reference {
	if m != nil {
		return m.SourcePatientInfo
	}
	return nil
}

func (m *DocumentReference_Context) GetRelated() []*DocumentReference_Context_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

// Related identifiers or resources
type DocumentReference_Context_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifier of related objects or events
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Related Resource
	Ref                  *Reference `protobuf:"bytes,5,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DocumentReference_Context_Related) Reset()         { *m = DocumentReference_Context_Related{} }
func (m *DocumentReference_Context_Related) String() string { return proto.CompactTextString(m) }
func (*DocumentReference_Context_Related) ProtoMessage()    {}
func (*DocumentReference_Context_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{37, 2, 0}
}

func (m *DocumentReference_Context_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentReference_Context_Related.Unmarshal(m, b)
}
func (m *DocumentReference_Context_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentReference_Context_Related.Marshal(b, m, deterministic)
}
func (m *DocumentReference_Context_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentReference_Context_Related.Merge(m, src)
}
func (m *DocumentReference_Context_Related) XXX_Size() int {
	return xxx_messageInfo_DocumentReference_Context_Related.Size(m)
}
func (m *DocumentReference_Context_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentReference_Context_Related.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentReference_Context_Related proto.InternalMessageInfo

func (m *DocumentReference_Context_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DocumentReference_Context_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DocumentReference_Context_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DocumentReference_Context_Related) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DocumentReference_Context_Related) GetRef() *Reference {
	if m != nil {
		return m.Ref
	}
	return nil
}

// Auto-generated from StructureDefinition for EligibilityRequest, last updated
// 2017-04-19T07:44:43.294+10:00. Determine insurance validity and scope of
// coverage. See http://hl7.org/fhir/StructureDefinition/EligibilityRequest
type EligibilityRequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Desired processing priority
	Priority *CodeableConcept `protobuf:"bytes,11,opt,name=priority,proto3" json:"priority,omitempty"`
	// The subject of the Products and Services
	Patient  *Reference                   `protobuf:"bytes,12,opt,name=patient,proto3" json:"patient,omitempty"`
	Serviced *EligibilityRequest_Serviced `protobuf:"bytes,13,opt,name=serviced,proto3" json:"serviced,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,14,opt,name=created,proto3" json:"created,omitempty"`
	// Author
	Enterer *Reference `protobuf:"bytes,15,opt,name=enterer,proto3" json:"enterer,omitempty"`
	// Responsible practitioner
	Provider *Reference `protobuf:"bytes,16,opt,name=provider,proto3" json:"provider,omitempty"`
	// Responsible organization
	Organization *Reference `protobuf:"bytes,17,opt,name=organization,proto3" json:"organization,omitempty"`
	// Target
	Insurer *Reference `protobuf:"bytes,18,opt,name=insurer,proto3" json:"insurer,omitempty"`
	// Servicing Facility
	Facility *Reference `protobuf:"bytes,19,opt,name=facility,proto3" json:"facility,omitempty"`
	// Insurance or medical plan
	Coverage *Reference `protobuf:"bytes,20,opt,name=coverage,proto3" json:"coverage,omitempty"`
	// Business agreement
	BusinessArrangement *String `protobuf:"bytes,21,opt,name=business_arrangement,json=businessArrangement,proto3" json:"business_arrangement,omitempty"`
	// Type of services covered
	BenefitCategory *CodeableConcept `protobuf:"bytes,22,opt,name=benefit_category,json=benefitCategory,proto3" json:"benefit_category,omitempty"`
	// Detailed services covered within the type
	BenefitSubCategory   *CodeableConcept `protobuf:"bytes,23,opt,name=benefit_sub_category,json=benefitSubCategory,proto3" json:"benefit_sub_category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EligibilityRequest) Reset()         { *m = EligibilityRequest{} }
func (m *EligibilityRequest) String() string { return proto.CompactTextString(m) }
func (*EligibilityRequest) ProtoMessage()    {}
func (*EligibilityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{38}
}

func (m *EligibilityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibilityRequest.Unmarshal(m, b)
}
func (m *EligibilityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibilityRequest.Marshal(b, m, deterministic)
}
func (m *EligibilityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibilityRequest.Merge(m, src)
}
func (m *EligibilityRequest) XXX_Size() int {
	return xxx_messageInfo_EligibilityRequest.Size(m)
}
func (m *EligibilityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibilityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EligibilityRequest proto.InternalMessageInfo

func (m *EligibilityRequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EligibilityRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EligibilityRequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *EligibilityRequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *EligibilityRequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *EligibilityRequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *EligibilityRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EligibilityRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EligibilityRequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *EligibilityRequest) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *EligibilityRequest) GetPriority() *CodeableConcept {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *EligibilityRequest) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *EligibilityRequest) GetServiced() *EligibilityRequest_Serviced {
	if m != nil {
		return m.Serviced
	}
	return nil
}

func (m *EligibilityRequest) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *EligibilityRequest) GetEnterer() *Reference {
	if m != nil {
		return m.Enterer
	}
	return nil
}

func (m *EligibilityRequest) GetProvider() *Reference {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *EligibilityRequest) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *EligibilityRequest) GetInsurer() *Reference {
	if m != nil {
		return m.Insurer
	}
	return nil
}

func (m *EligibilityRequest) GetFacility() *Reference {
	if m != nil {
		return m.Facility
	}
	return nil
}

func (m *EligibilityRequest) GetCoverage() *Reference {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *EligibilityRequest) GetBusinessArrangement() *String {
	if m != nil {
		return m.BusinessArrangement
	}
	return nil
}

func (m *EligibilityRequest) GetBenefitCategory() *CodeableConcept {
	if m != nil {
		return m.BenefitCategory
	}
	return nil
}

func (m *EligibilityRequest) GetBenefitSubCategory() *CodeableConcept {
	if m != nil {
		return m.BenefitSubCategory
	}
	return nil
}

// Estimated date or dates of Service
type EligibilityRequest_Serviced struct {
	// Types that are valid to be assigned to Serviced:
	//	*EligibilityRequest_Serviced_Date
	//	*EligibilityRequest_Serviced_Period
	Serviced             isEligibilityRequest_Serviced_Serviced `protobuf_oneof:"serviced"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *EligibilityRequest_Serviced) Reset()         { *m = EligibilityRequest_Serviced{} }
func (m *EligibilityRequest_Serviced) String() string { return proto.CompactTextString(m) }
func (*EligibilityRequest_Serviced) ProtoMessage()    {}
func (*EligibilityRequest_Serviced) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{38, 0}
}

func (m *EligibilityRequest_Serviced) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibilityRequest_Serviced.Unmarshal(m, b)
}
func (m *EligibilityRequest_Serviced) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibilityRequest_Serviced.Marshal(b, m, deterministic)
}
func (m *EligibilityRequest_Serviced) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibilityRequest_Serviced.Merge(m, src)
}
func (m *EligibilityRequest_Serviced) XXX_Size() int {
	return xxx_messageInfo_EligibilityRequest_Serviced.Size(m)
}
func (m *EligibilityRequest_Serviced) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibilityRequest_Serviced.DiscardUnknown(m)
}

var xxx_messageInfo_EligibilityRequest_Serviced proto.InternalMessageInfo

type isEligibilityRequest_Serviced_Serviced interface {
	isEligibilityRequest_Serviced_Serviced()
}

type EligibilityRequest_Serviced_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type EligibilityRequest_Serviced_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*EligibilityRequest_Serviced_Date) isEligibilityRequest_Serviced_Serviced() {}

func (*EligibilityRequest_Serviced_Period) isEligibilityRequest_Serviced_Serviced() {}

func (m *EligibilityRequest_Serviced) GetServiced() isEligibilityRequest_Serviced_Serviced {
	if m != nil {
		return m.Serviced
	}
	return nil
}

func (m *EligibilityRequest_Serviced) GetDate() *Date {
	if x, ok := m.GetServiced().(*EligibilityRequest_Serviced_Date); ok {
		return x.Date
	}
	return nil
}

func (m *EligibilityRequest_Serviced) GetPeriod() *Period {
	if x, ok := m.GetServiced().(*EligibilityRequest_Serviced_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*EligibilityRequest_Serviced) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _EligibilityRequest_Serviced_OneofMarshaler, _EligibilityRequest_Serviced_OneofUnmarshaler, _EligibilityRequest_Serviced_OneofSizer, []interface{}{
		(*EligibilityRequest_Serviced_Date)(nil),
		(*EligibilityRequest_Serviced_Period)(nil),
	}
}

func _EligibilityRequest_Serviced_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*EligibilityRequest_Serviced)
	// serviced
	switch x := m.Serviced.(type) {
	case *EligibilityRequest_Serviced_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *EligibilityRequest_Serviced_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("EligibilityRequest_Serviced.Serviced has unexpected type %T", x)
	}
	return nil
}

func _EligibilityRequest_Serviced_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*EligibilityRequest_Serviced)
	switch tag {
	case 1: // serviced.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Serviced = &EligibilityRequest_Serviced_Date{msg}
		return true, err
	case 2: // serviced.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Serviced = &EligibilityRequest_Serviced_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _EligibilityRequest_Serviced_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*EligibilityRequest_Serviced)
	// serviced
	switch x := m.Serviced.(type) {
	case *EligibilityRequest_Serviced_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EligibilityRequest_Serviced_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for EligibilityResponse, last updated
// 2017-04-19T07:44:43.294+10:00. EligibilityResponse resource. See
// http://hl7.org/fhir/StructureDefinition/EligibilityResponse
type EligibilityResponse struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	// Responsible practitioner
	RequestProvider *Reference `protobuf:"bytes,12,opt,name=request_provider,json=requestProvider,proto3" json:"request_provider,omitempty"`
	// Responsible organization
	RequestOrganization *Reference `protobuf:"bytes,13,opt,name=request_organization,json=requestOrganization,proto3" json:"request_organization,omitempty"`
	// Eligibility reference
	Request *Reference `protobuf:"bytes,14,opt,name=request,proto3" json:"request,omitempty"`
	// complete | error | partial
	Outcome *CodeableConcept `protobuf:"bytes,15,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Disposition Message
	Disposition *String `protobuf:"bytes,16,opt,name=disposition,proto3" json:"disposition,omitempty"`
	// Insurer issuing the coverage
	Insurer *Reference `protobuf:"bytes,17,opt,name=insurer,proto3" json:"insurer,omitempty"`
	// Coverage inforce indicator
	Inforce   *Boolean                         `protobuf:"bytes,18,opt,name=inforce,proto3" json:"inforce,omitempty"`
	Insurance []*EligibilityResponse_Insurance `protobuf:"bytes,19,rep,name=insurance,proto3" json:"insurance,omitempty"`
	// Printed Form Identifier
	Form                 *CodeableConcept              `protobuf:"bytes,20,opt,name=form,proto3" json:"form,omitempty"`
	Error                []*EligibilityResponse_Errors `protobuf:"bytes,21,rep,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *EligibilityResponse) Reset()         { *m = EligibilityResponse{} }
func (m *EligibilityResponse) String() string { return proto.CompactTextString(m) }
func (*EligibilityResponse) ProtoMessage()    {}
func (*EligibilityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{39}
}

func (m *EligibilityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibilityResponse.Unmarshal(m, b)
}
func (m *EligibilityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibilityResponse.Marshal(b, m, deterministic)
}
func (m *EligibilityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibilityResponse.Merge(m, src)
}
func (m *EligibilityResponse) XXX_Size() int {
	return xxx_messageInfo_EligibilityResponse.Size(m)
}
func (m *EligibilityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibilityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EligibilityResponse proto.InternalMessageInfo

func (m *EligibilityResponse) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EligibilityResponse) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EligibilityResponse) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *EligibilityResponse) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *EligibilityResponse) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *EligibilityResponse) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *EligibilityResponse) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EligibilityResponse) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EligibilityResponse) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *EligibilityResponse) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *EligibilityResponse) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *EligibilityResponse) GetRequestProvider() *Reference {
	if m != nil {
		return m.RequestProvider
	}
	return nil
}

func (m *EligibilityResponse) GetRequestOrganization() *Reference {
	if m != nil {
		return m.RequestOrganization
	}
	return nil
}

func (m *EligibilityResponse) GetRequest() *Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *EligibilityResponse) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *EligibilityResponse) GetDisposition() *String {
	if m != nil {
		return m.Disposition
	}
	return nil
}

func (m *EligibilityResponse) GetInsurer() *Reference {
	if m != nil {
		return m.Insurer
	}
	return nil
}

func (m *EligibilityResponse) GetInforce() *Boolean {
	if m != nil {
		return m.Inforce
	}
	return nil
}

func (m *EligibilityResponse) GetInsurance() []*EligibilityResponse_Insurance {
	if m != nil {
		return m.Insurance
	}
	return nil
}

func (m *EligibilityResponse) GetForm() *CodeableConcept {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *EligibilityResponse) GetError() []*EligibilityResponse_Errors {
	if m != nil {
		return m.Error
	}
	return nil
}

// Details by insurance coverage
type EligibilityResponse_Insurance struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Updated Coverage details
	Coverage *Reference `protobuf:"bytes,4,opt,name=coverage,proto3" json:"coverage,omitempty"`
	// Contract details
	Contract             *Reference                                `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	BenefitBalance       []*EligibilityResponse_Insurance_Benefits `protobuf:"bytes,6,rep,name=benefit_balance,json=benefitBalance,proto3" json:"benefit_balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *EligibilityResponse_Insurance) Reset()         { *m = EligibilityResponse_Insurance{} }
func (m *EligibilityResponse_Insurance) String() string { return proto.CompactTextString(m) }
func (*EligibilityResponse_Insurance) ProtoMessage()    {}
func (*EligibilityResponse_Insurance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{39, 0}
}

func (m *EligibilityResponse_Insurance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibilityResponse_Insurance.Unmarshal(m, b)
}
func (m *EligibilityResponse_Insurance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibilityResponse_Insurance.Marshal(b, m, deterministic)
}
func (m *EligibilityResponse_Insurance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibilityResponse_Insurance.Merge(m, src)
}
func (m *EligibilityResponse_Insurance) XXX_Size() int {
	return xxx_messageInfo_EligibilityResponse_Insurance.Size(m)
}
func (m *EligibilityResponse_Insurance) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibilityResponse_Insurance.DiscardUnknown(m)
}

var xxx_messageInfo_EligibilityResponse_Insurance proto.InternalMessageInfo

func (m *EligibilityResponse_Insurance) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EligibilityResponse_Insurance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EligibilityResponse_Insurance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EligibilityResponse_Insurance) GetCoverage() *Reference {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *EligibilityResponse_Insurance) GetContract() *Reference {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *EligibilityResponse_Insurance) GetBenefitBalance() []*EligibilityResponse_Insurance_Benefits {
	if m != nil {
		return m.BenefitBalance
	}
	return nil
}

// Benefits by Category
type EligibilityResponse_Insurance_Benefits struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of services covered
	Category *CodeableConcept `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// Detailed services covered within the type
	SubCategory *CodeableConcept `protobuf:"bytes,5,opt,name=sub_category,json=subCategory,proto3" json:"sub_category,omitempty"`
	// Excluded from the plan
	Excluded *Boolean `protobuf:"bytes,6,opt,name=excluded,proto3" json:"excluded,omitempty"`
	// Short name for the benefit
	Name *String `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the benefit or services covered
	Description *String `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	// In or out of network
	Network *CodeableConcept `protobuf:"bytes,9,opt,name=network,proto3" json:"network,omitempty"`
	// Individual or family
	Unit *CodeableConcept `protobuf:"bytes,10,opt,name=unit,proto3" json:"unit,omitempty"`
	// Annual or lifetime
	Term                 *CodeableConcept                                  `protobuf:"bytes,11,opt,name=term,proto3" json:"term,omitempty"`
	Financial            []*EligibilityResponse_Insurance_Benefits_Benefit `protobuf:"bytes,12,rep,name=financial,proto3" json:"financial,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *EligibilityResponse_Insurance_Benefits) Reset() {
	*m = EligibilityResponse_Insurance_Benefits{}
}
func (m *EligibilityResponse_Insurance_Benefits) String() string { return proto.CompactTextString(m) }
func (*EligibilityResponse_Insurance_Benefits) ProtoMessage()    {}
func (*EligibilityResponse_Insurance_Benefits) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{39, 0, 0}
}

func (m *EligibilityResponse_Insurance_Benefits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits.Unmarshal(m, b)
}
func (m *EligibilityResponse_Insurance_Benefits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits.Marshal(b, m, deterministic)
}
func (m *EligibilityResponse_Insurance_Benefits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibilityResponse_Insurance_Benefits.Merge(m, src)
}
func (m *EligibilityResponse_Insurance_Benefits) XXX_Size() int {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits.Size(m)
}
func (m *EligibilityResponse_Insurance_Benefits) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibilityResponse_Insurance_Benefits.DiscardUnknown(m)
}

var xxx_messageInfo_EligibilityResponse_Insurance_Benefits proto.InternalMessageInfo

func (m *EligibilityResponse_Insurance_Benefits) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetSubCategory() *CodeableConcept {
	if m != nil {
		return m.SubCategory
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetExcluded() *Boolean {
	if m != nil {
		return m.Excluded
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetNetwork() *CodeableConcept {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetUnit() *CodeableConcept {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetTerm() *CodeableConcept {
	if m != nil {
		return m.Term
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits) GetFinancial() []*EligibilityResponse_Insurance_Benefits_Benefit {
	if m != nil {
		return m.Financial
	}
	return nil
}

// Benefit Summary
type EligibilityResponse_Insurance_Benefits_Benefit struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Deductable, visits, benefit amount
	Type                 *CodeableConcept                                        `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Allowed              *EligibilityResponse_Insurance_Benefits_Benefit_Allowed `protobuf:"bytes,5,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Used                 *EligibilityResponse_Insurance_Benefits_Benefit_Used    `protobuf:"bytes,6,opt,name=used,proto3" json:"used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit) Reset() {
	*m = EligibilityResponse_Insurance_Benefits_Benefit{}
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit) String() string {
	return proto.CompactTextString(m)
}
func (*EligibilityResponse_Insurance_Benefits_Benefit) ProtoMessage() {}
func (*EligibilityResponse_Insurance_Benefits_Benefit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{39, 0, 0, 0}
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit.Unmarshal(m, b)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit.Marshal(b, m, deterministic)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit.Merge(m, src)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit) XXX_Size() int {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit.Size(m)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit.DiscardUnknown(m)
}

var xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit proto.InternalMessageInfo

func (m *EligibilityResponse_Insurance_Benefits_Benefit) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit) GetAllowed() *EligibilityResponse_Insurance_Benefits_Benefit_Allowed {
	if m != nil {
		return m.Allowed
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit) GetUsed() *EligibilityResponse_Insurance_Benefits_Benefit_Used {
	if m != nil {
		return m.Used
	}
	return nil
}

// Benefits allowed
type EligibilityResponse_Insurance_Benefits_Benefit_Allowed struct {
	// Types that are valid to be assigned to Allowed:
	//	*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_UnsignedInt
	//	*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_StringValue
	//	*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_Money
	Allowed              isEligibilityResponse_Insurance_Benefits_Benefit_Allowed_Allowed `protobuf_oneof:"allowed"`
	XXX_NoUnkeyedLiteral struct{}                                                         `json:"-"`
	XXX_unrecognized     []byte                                                           `json:"-"`
	XXX_sizecache        int32                                                            `json:"-"`
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) Reset() {
	*m = EligibilityResponse_Insurance_Benefits_Benefit_Allowed{}
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) String() string {
	return proto.CompactTextString(m)
}
func (*EligibilityResponse_Insurance_Benefits_Benefit_Allowed) ProtoMessage() {}
func (*EligibilityResponse_Insurance_Benefits_Benefit_Allowed) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{39, 0, 0, 0, 0}
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Allowed.Unmarshal(m, b)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Allowed.Marshal(b, m, deterministic)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Allowed.Merge(m, src)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) XXX_Size() int {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Allowed.Size(m)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Allowed.DiscardUnknown(m)
}

var xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Allowed proto.InternalMessageInfo

type isEligibilityResponse_Insurance_Benefits_Benefit_Allowed_Allowed interface {
	isEligibilityResponse_Insurance_Benefits_Benefit_Allowed_Allowed()
}

type EligibilityResponse_Insurance_Benefits_Benefit_Allowed_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,1,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type EligibilityResponse_Insurance_Benefits_Benefit_Allowed_StringValue struct {
	StringValue *String `protobuf:"bytes,2,opt,name=string_value,json=string,proto3,oneof"`
}

type EligibilityResponse_Insurance_Benefits_Benefit_Allowed_Money struct {
	Money *Money `protobuf:"bytes,3,opt,name=money,proto3,oneof"`
}

func (*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_UnsignedInt) isEligibilityResponse_Insurance_Benefits_Benefit_Allowed_Allowed() {
}

func (*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_StringValue) isEligibilityResponse_Insurance_Benefits_Benefit_Allowed_Allowed() {
}

func (*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_Money) isEligibilityResponse_Insurance_Benefits_Benefit_Allowed_Allowed() {
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) GetAllowed() isEligibilityResponse_Insurance_Benefits_Benefit_Allowed_Allowed {
	if m != nil {
		return m.Allowed
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetAllowed().(*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) GetStringValue() *String {
	if x, ok := m.GetAllowed().(*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Allowed) GetMoney() *Money {
	if x, ok := m.GetAllowed().(*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_Money); ok {
		return x.Money
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*EligibilityResponse_Insurance_Benefits_Benefit_Allowed) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _EligibilityResponse_Insurance_Benefits_Benefit_Allowed_OneofMarshaler, _EligibilityResponse_Insurance_Benefits_Benefit_Allowed_OneofUnmarshaler, _EligibilityResponse_Insurance_Benefits_Benefit_Allowed_OneofSizer, []interface{}{
		(*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_UnsignedInt)(nil),
		(*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_StringValue)(nil),
		(*EligibilityResponse_Insurance_Benefits_Benefit_Allowed_Money)(nil),
	}
}

func _EligibilityResponse_Insurance_Benefits_Benefit_Allowed_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*EligibilityResponse_Insurance_Benefits_Benefit_Allowed)
	// allowed
	switch x := m.Allowed.(type) {
	case *EligibilityResponse_Insurance_Benefits_Benefit_Allowed_UnsignedInt:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *EligibilityResponse_Insurance_Benefits_Benefit_Allowed_StringValue:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *EligibilityResponse_Insurance_Benefits_Benefit_Allowed_Money:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("EligibilityResponse_Insurance_Benefits_Benefit_Allowed.Allowed has unexpected type %T", x)
	}
	return nil
}

func _EligibilityResponse_Insurance_Benefits_Benefit_Allowed_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*EligibilityResponse_Insurance_Benefits_Benefit_Allowed)
	switch tag {
	case 1: // allowed.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.Allowed = &EligibilityResponse_Insurance_Benefits_Benefit_Allowed_UnsignedInt{msg}
		return true, err
	case 2: // allowed.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Allowed = &EligibilityResponse_Insurance_Benefits_Benefit_Allowed_StringValue{msg}
		return true, err
	case 3: // allowed.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.Allowed = &EligibilityResponse_Insurance_Benefits_Benefit_Allowed_Money{msg}
		return true, err
	default:
		return false, nil
	}
}

func _EligibilityResponse_Insurance_Benefits_Benefit_Allowed_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*EligibilityResponse_Insurance_Benefits_Benefit_Allowed)
	// allowed
	switch x := m.Allowed.(type) {
	case *EligibilityResponse_Insurance_Benefits_Benefit_Allowed_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EligibilityResponse_Insurance_Benefits_Benefit_Allowed_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EligibilityResponse_Insurance_Benefits_Benefit_Allowed_Money:
		s := proto.Size(x.Money)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Benefits used
type EligibilityResponse_Insurance_Benefits_Benefit_Used struct {
	// Types that are valid to be assigned to Used:
	//	*EligibilityResponse_Insurance_Benefits_Benefit_Used_UnsignedInt
	//	*EligibilityResponse_Insurance_Benefits_Benefit_Used_Money
	Used                 isEligibilityResponse_Insurance_Benefits_Benefit_Used_Used `protobuf_oneof:"used"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) Reset() {
	*m = EligibilityResponse_Insurance_Benefits_Benefit_Used{}
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) String() string {
	return proto.CompactTextString(m)
}
func (*EligibilityResponse_Insurance_Benefits_Benefit_Used) ProtoMessage() {}
func (*EligibilityResponse_Insurance_Benefits_Benefit_Used) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{39, 0, 0, 0, 1}
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Used.Unmarshal(m, b)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Used.Marshal(b, m, deterministic)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Used.Merge(m, src)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) XXX_Size() int {
	return xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Used.Size(m)
}
func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Used.DiscardUnknown(m)
}

var xxx_messageInfo_EligibilityResponse_Insurance_Benefits_Benefit_Used proto.InternalMessageInfo

type isEligibilityResponse_Insurance_Benefits_Benefit_Used_Used interface {
	isEligibilityResponse_Insurance_Benefits_Benefit_Used_Used()
}

type EligibilityResponse_Insurance_Benefits_Benefit_Used_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,1,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type EligibilityResponse_Insurance_Benefits_Benefit_Used_Money struct {
	Money *Money `protobuf:"bytes,2,opt,name=money,proto3,oneof"`
}

func (*EligibilityResponse_Insurance_Benefits_Benefit_Used_UnsignedInt) isEligibilityResponse_Insurance_Benefits_Benefit_Used_Used() {
}

func (*EligibilityResponse_Insurance_Benefits_Benefit_Used_Money) isEligibilityResponse_Insurance_Benefits_Benefit_Used_Used() {
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) GetUsed() isEligibilityResponse_Insurance_Benefits_Benefit_Used_Used {
	if m != nil {
		return m.Used
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetUsed().(*EligibilityResponse_Insurance_Benefits_Benefit_Used_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *EligibilityResponse_Insurance_Benefits_Benefit_Used) GetMoney() *Money {
	if x, ok := m.GetUsed().(*EligibilityResponse_Insurance_Benefits_Benefit_Used_Money); ok {
		return x.Money
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*EligibilityResponse_Insurance_Benefits_Benefit_Used) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _EligibilityResponse_Insurance_Benefits_Benefit_Used_OneofMarshaler, _EligibilityResponse_Insurance_Benefits_Benefit_Used_OneofUnmarshaler, _EligibilityResponse_Insurance_Benefits_Benefit_Used_OneofSizer, []interface{}{
		(*EligibilityResponse_Insurance_Benefits_Benefit_Used_UnsignedInt)(nil),
		(*EligibilityResponse_Insurance_Benefits_Benefit_Used_Money)(nil),
	}
}

func _EligibilityResponse_Insurance_Benefits_Benefit_Used_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*EligibilityResponse_Insurance_Benefits_Benefit_Used)
	// used
	switch x := m.Used.(type) {
	case *EligibilityResponse_Insurance_Benefits_Benefit_Used_UnsignedInt:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *EligibilityResponse_Insurance_Benefits_Benefit_Used_Money:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("EligibilityResponse_Insurance_Benefits_Benefit_Used.Used has unexpected type %T", x)
	}
	return nil
}

func _EligibilityResponse_Insurance_Benefits_Benefit_Used_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*EligibilityResponse_Insurance_Benefits_Benefit_Used)
	switch tag {
	case 1: // used.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.Used = &EligibilityResponse_Insurance_Benefits_Benefit_Used_UnsignedInt{msg}
		return true, err
	case 2: // used.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.Used = &EligibilityResponse_Insurance_Benefits_Benefit_Used_Money{msg}
		return true, err
	default:
		return false, nil
	}
}

func _EligibilityResponse_Insurance_Benefits_Benefit_Used_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*EligibilityResponse_Insurance_Benefits_Benefit_Used)
	// used
	switch x := m.Used.(type) {
	case *EligibilityResponse_Insurance_Benefits_Benefit_Used_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EligibilityResponse_Insurance_Benefits_Benefit_Used_Money:
		s := proto.Size(x.Money)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Processing errors
type EligibilityResponse_Errors struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Error code detailing processing issues
	Code                 *CodeableConcept `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EligibilityResponse_Errors) Reset()         { *m = EligibilityResponse_Errors{} }
func (m *EligibilityResponse_Errors) String() string { return proto.CompactTextString(m) }
func (*EligibilityResponse_Errors) ProtoMessage()    {}
func (*EligibilityResponse_Errors) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{39, 1}
}

func (m *EligibilityResponse_Errors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibilityResponse_Errors.Unmarshal(m, b)
}
func (m *EligibilityResponse_Errors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibilityResponse_Errors.Marshal(b, m, deterministic)
}
func (m *EligibilityResponse_Errors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibilityResponse_Errors.Merge(m, src)
}
func (m *EligibilityResponse_Errors) XXX_Size() int {
	return xxx_messageInfo_EligibilityResponse_Errors.Size(m)
}
func (m *EligibilityResponse_Errors) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibilityResponse_Errors.DiscardUnknown(m)
}

var xxx_messageInfo_EligibilityResponse_Errors proto.InternalMessageInfo

func (m *EligibilityResponse_Errors) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EligibilityResponse_Errors) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EligibilityResponse_Errors) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EligibilityResponse_Errors) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

// Auto-generated from StructureDefinition for Encounter, last updated
// 2017-04-19T07:44:43.294+10:00. An interaction during which services are
// provided to the patient. See
// http://hl7.org/fhir/StructureDefinition/Encounter
type Encounter struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifier(s) by which this encounter is known
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// planned | arrived | triaged | in-progress | onleave | finished | cancelled
	// +
	Status        *EncounterStatusCode       `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	StatusHistory []*Encounter_StatusHistory `protobuf:"bytes,11,rep,name=status_history,json=statusHistory,proto3" json:"status_history,omitempty"`
	// inpatient | outpatient | ambulatory | emergency +
	ClassValue   *Coding                   `protobuf:"bytes,12,opt,name=class_value,json=class,proto3" json:"class_value,omitempty"`
	ClassHistory []*Encounter_ClassHistory `protobuf:"bytes,13,rep,name=class_history,json=classHistory,proto3" json:"class_history,omitempty"`
	// Specific type of encounter
	Type []*CodeableConcept `protobuf:"bytes,14,rep,name=type,proto3" json:"type,omitempty"`
	// Indicates the urgency of the encounter
	Priority *CodeableConcept `protobuf:"bytes,15,opt,name=priority,proto3" json:"priority,omitempty"`
	// The patient ro group present at the encounter
	Subject *Reference `protobuf:"bytes,16,opt,name=subject,proto3" json:"subject,omitempty"`
	// Episode(s) of care that this encounter should be recorded against
	EpisodeOfCare []*Reference `protobuf:"bytes,17,rep,name=episode_of_care,json=episodeOfCare,proto3" json:"episode_of_care,omitempty"`
	// The ReferralRequest that initiated this encounter
	IncomingReferral []*Reference             `protobuf:"bytes,18,rep,name=incoming_referral,json=incomingReferral,proto3" json:"incoming_referral,omitempty"`
	Participant      []*Encounter_Participant `protobuf:"bytes,19,rep,name=participant,proto3" json:"participant,omitempty"`
	// The appointment that scheduled this encounter
	Appointment *Reference `protobuf:"bytes,20,opt,name=appointment,proto3" json:"appointment,omitempty"`
	// The start and end time of the encounter
	Period *Period `protobuf:"bytes,21,opt,name=period,proto3" json:"period,omitempty"`
	// Quantity of time the encounter lasted (less time absent)
	Length *Duration `protobuf:"bytes,22,opt,name=length,proto3" json:"length,omitempty"`
	// Reason the encounter takes place (code)
	Reason    []*CodeableConcept     `protobuf:"bytes,23,rep,name=reason,proto3" json:"reason,omitempty"`
	Diagnosis []*Encounter_Diagnosis `protobuf:"bytes,24,rep,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	// The set of accounts that may be used for billing for this Encounter
	Account         []*Reference               `protobuf:"bytes,25,rep,name=account,proto3" json:"account,omitempty"`
	Hospitalization *Encounter_Hospitalization `protobuf:"bytes,26,opt,name=hospitalization,proto3" json:"hospitalization,omitempty"`
	Location        []*Encounter_Location      `protobuf:"bytes,27,rep,name=location,proto3" json:"location,omitempty"`
	// The custodian organization of this Encounter record
	ServiceProvider *Reference `protobuf:"bytes,28,opt,name=service_provider,json=serviceProvider,proto3" json:"service_provider,omitempty"`
	// Another Encounter this encounter is part of
	PartOf               *Reference `protobuf:"bytes,29,opt,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Encounter) Reset()         { *m = Encounter{} }
func (m *Encounter) String() string { return proto.CompactTextString(m) }
func (*Encounter) ProtoMessage()    {}
func (*Encounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{40}
}

func (m *Encounter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encounter.Unmarshal(m, b)
}
func (m *Encounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encounter.Marshal(b, m, deterministic)
}
func (m *Encounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encounter.Merge(m, src)
}
func (m *Encounter) XXX_Size() int {
	return xxx_messageInfo_Encounter.Size(m)
}
func (m *Encounter) XXX_DiscardUnknown() {
	xxx_messageInfo_Encounter.DiscardUnknown(m)
}

var xxx_messageInfo_Encounter proto.InternalMessageInfo

func (m *Encounter) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Encounter) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Encounter) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Encounter) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Encounter) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Encounter) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Encounter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Encounter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Encounter) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Encounter) GetStatus() *EncounterStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Encounter) GetStatusHistory() []*Encounter_StatusHistory {
	if m != nil {
		return m.StatusHistory
	}
	return nil
}

func (m *Encounter) GetClassValue() *Coding {
	if m != nil {
		return m.ClassValue
	}
	return nil
}

func (m *Encounter) GetClassHistory() []*Encounter_ClassHistory {
	if m != nil {
		return m.ClassHistory
	}
	return nil
}

func (m *Encounter) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Encounter) GetPriority() *CodeableConcept {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *Encounter) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Encounter) GetEpisodeOfCare() []*Reference {
	if m != nil {
		return m.EpisodeOfCare
	}
	return nil
}

func (m *Encounter) GetIncomingReferral() []*Reference {
	if m != nil {
		return m.IncomingReferral
	}
	return nil
}

func (m *Encounter) GetParticipant() []*Encounter_Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *Encounter) GetAppointment() *Reference {
	if m != nil {
		return m.Appointment
	}
	return nil
}

func (m *Encounter) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Encounter) GetLength() *Duration {
	if m != nil {
		return m.Length
	}
	return nil
}

func (m *Encounter) GetReason() []*CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Encounter) GetDiagnosis() []*Encounter_Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *Encounter) GetAccount() []*Reference {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Encounter) GetHospitalization() *Encounter_Hospitalization {
	if m != nil {
		return m.Hospitalization
	}
	return nil
}

func (m *Encounter) GetLocation() []*Encounter_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Encounter) GetServiceProvider() *Reference {
	if m != nil {
		return m.ServiceProvider
	}
	return nil
}

func (m *Encounter) GetPartOf() *Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

// List of past encounter statuses
type Encounter_StatusHistory struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// planned | arrived | triaged | in-progress | onleave | finished |
	// cancelled +
	Status *EncounterStatusCode `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// The time that the episode was in the specified status
	Period               *Period  `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Encounter_StatusHistory) Reset()         { *m = Encounter_StatusHistory{} }
func (m *Encounter_StatusHistory) String() string { return proto.CompactTextString(m) }
func (*Encounter_StatusHistory) ProtoMessage()    {}
func (*Encounter_StatusHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{40, 0}
}

func (m *Encounter_StatusHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encounter_StatusHistory.Unmarshal(m, b)
}
func (m *Encounter_StatusHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encounter_StatusHistory.Marshal(b, m, deterministic)
}
func (m *Encounter_StatusHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encounter_StatusHistory.Merge(m, src)
}
func (m *Encounter_StatusHistory) XXX_Size() int {
	return xxx_messageInfo_Encounter_StatusHistory.Size(m)
}
func (m *Encounter_StatusHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_Encounter_StatusHistory.DiscardUnknown(m)
}

var xxx_messageInfo_Encounter_StatusHistory proto.InternalMessageInfo

func (m *Encounter_StatusHistory) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Encounter_StatusHistory) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Encounter_StatusHistory) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Encounter_StatusHistory) GetStatus() *EncounterStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Encounter_StatusHistory) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// List of past encounter classes
type Encounter_ClassHistory struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// inpatient | outpatient | ambulatory | emergency +
	ClassValue *Coding `protobuf:"bytes,4,opt,name=class_value,json=class,proto3" json:"class_value,omitempty"`
	// The time that the episode was in the specified class
	Period               *Period  `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Encounter_ClassHistory) Reset()         { *m = Encounter_ClassHistory{} }
func (m *Encounter_ClassHistory) String() string { return proto.CompactTextString(m) }
func (*Encounter_ClassHistory) ProtoMessage()    {}
func (*Encounter_ClassHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{40, 1}
}

func (m *Encounter_ClassHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encounter_ClassHistory.Unmarshal(m, b)
}
func (m *Encounter_ClassHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encounter_ClassHistory.Marshal(b, m, deterministic)
}
func (m *Encounter_ClassHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encounter_ClassHistory.Merge(m, src)
}
func (m *Encounter_ClassHistory) XXX_Size() int {
	return xxx_messageInfo_Encounter_ClassHistory.Size(m)
}
func (m *Encounter_ClassHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_Encounter_ClassHistory.DiscardUnknown(m)
}

var xxx_messageInfo_Encounter_ClassHistory proto.InternalMessageInfo

func (m *Encounter_ClassHistory) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Encounter_ClassHistory) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Encounter_ClassHistory) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Encounter_ClassHistory) GetClassValue() *Coding {
	if m != nil {
		return m.ClassValue
	}
	return nil
}

func (m *Encounter_ClassHistory) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// List of participants involved in the encounter
type Encounter_Participant struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Role of participant in encounter
	Type []*CodeableConcept `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	// Period of time during the encounter that the participant participated
	Period *Period `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	// Persons involved in the encounter other than the patient
	Individual           *Reference `protobuf:"bytes,6,opt,name=individual,proto3" json:"individual,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Encounter_Participant) Reset()         { *m = Encounter_Participant{} }
func (m *Encounter_Participant) String() string { return proto.CompactTextString(m) }
func (*Encounter_Participant) ProtoMessage()    {}
func (*Encounter_Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{40, 2}
}

func (m *Encounter_Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encounter_Participant.Unmarshal(m, b)
}
func (m *Encounter_Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encounter_Participant.Marshal(b, m, deterministic)
}
func (m *Encounter_Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encounter_Participant.Merge(m, src)
}
func (m *Encounter_Participant) XXX_Size() int {
	return xxx_messageInfo_Encounter_Participant.Size(m)
}
func (m *Encounter_Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_Encounter_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_Encounter_Participant proto.InternalMessageInfo

func (m *Encounter_Participant) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Encounter_Participant) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Encounter_Participant) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Encounter_Participant) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Encounter_Participant) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Encounter_Participant) GetIndividual() *Reference {
	if m != nil {
		return m.Individual
	}
	return nil
}

// The list of diagnosis relevant to this encounter
type Encounter_Diagnosis struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reason the encounter takes place (resource)
	Condition *Reference `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	// Role that this diagnosis has within the encounter (e.g. admission,
	// billing, discharge …)
	Role *CodeableConcept `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	// Ranking of the diagnosis (for each role type)
	Rank                 *PositiveInt `protobuf:"bytes,6,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Encounter_Diagnosis) Reset()         { *m = Encounter_Diagnosis{} }
func (m *Encounter_Diagnosis) String() string { return proto.CompactTextString(m) }
func (*Encounter_Diagnosis) ProtoMessage()    {}
func (*Encounter_Diagnosis) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{40, 3}
}

func (m *Encounter_Diagnosis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encounter_Diagnosis.Unmarshal(m, b)
}
func (m *Encounter_Diagnosis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encounter_Diagnosis.Marshal(b, m, deterministic)
}
func (m *Encounter_Diagnosis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encounter_Diagnosis.Merge(m, src)
}
func (m *Encounter_Diagnosis) XXX_Size() int {
	return xxx_messageInfo_Encounter_Diagnosis.Size(m)
}
func (m *Encounter_Diagnosis) XXX_DiscardUnknown() {
	xxx_messageInfo_Encounter_Diagnosis.DiscardUnknown(m)
}

var xxx_messageInfo_Encounter_Diagnosis proto.InternalMessageInfo

func (m *Encounter_Diagnosis) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Encounter_Diagnosis) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Encounter_Diagnosis) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Encounter_Diagnosis) GetCondition() *Reference {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Encounter_Diagnosis) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Encounter_Diagnosis) GetRank() *PositiveInt {
	if m != nil {
		return m.Rank
	}
	return nil
}

// Details about the admission to a healthcare service
type Encounter_Hospitalization struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Pre-admission identifier
	PreAdmissionIdentifier *Identifier `protobuf:"bytes,4,opt,name=pre_admission_identifier,json=preAdmissionIdentifier,proto3" json:"pre_admission_identifier,omitempty"`
	// The location from which the patient came before admission
	Origin *Reference `protobuf:"bytes,5,opt,name=origin,proto3" json:"origin,omitempty"`
	// From where patient was admitted (physician referral, transfer)
	AdmitSource *CodeableConcept `protobuf:"bytes,6,opt,name=admit_source,json=admitSource,proto3" json:"admit_source,omitempty"`
	// The type of hospital re-admission that has occurred (if any). If the
	// value is absent, then this is not identified as a readmission
	ReAdmission *CodeableConcept `protobuf:"bytes,7,opt,name=re_admission,json=reAdmission,proto3" json:"re_admission,omitempty"`
	// Diet preferences reported by the patient
	DietPreference []*CodeableConcept `protobuf:"bytes,8,rep,name=diet_preference,json=dietPreference,proto3" json:"diet_preference,omitempty"`
	// Special courtesies (VIP, board member)
	SpecialCourtesy []*CodeableConcept `protobuf:"bytes,9,rep,name=special_courtesy,json=specialCourtesy,proto3" json:"special_courtesy,omitempty"`
	// Wheelchair, translator, stretcher, etc.
	SpecialArrangement []*CodeableConcept `protobuf:"bytes,10,rep,name=special_arrangement,json=specialArrangement,proto3" json:"special_arrangement,omitempty"`
	// Location to which the patient is discharged
	Destination *Reference `protobuf:"bytes,11,opt,name=destination,proto3" json:"destination,omitempty"`
	// Category or kind of location after discharge
	DischargeDisposition *CodeableConcept `protobuf:"bytes,12,opt,name=discharge_disposition,json=dischargeDisposition,proto3" json:"discharge_disposition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Encounter_Hospitalization) Reset()         { *m = Encounter_Hospitalization{} }
func (m *Encounter_Hospitalization) String() string { return proto.CompactTextString(m) }
func (*Encounter_Hospitalization) ProtoMessage()    {}
func (*Encounter_Hospitalization) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{40, 4}
}

func (m *Encounter_Hospitalization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encounter_Hospitalization.Unmarshal(m, b)
}
func (m *Encounter_Hospitalization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encounter_Hospitalization.Marshal(b, m, deterministic)
}
func (m *Encounter_Hospitalization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encounter_Hospitalization.Merge(m, src)
}
func (m *Encounter_Hospitalization) XXX_Size() int {
	return xxx_messageInfo_Encounter_Hospitalization.Size(m)
}
func (m *Encounter_Hospitalization) XXX_DiscardUnknown() {
	xxx_messageInfo_Encounter_Hospitalization.DiscardUnknown(m)
}

var xxx_messageInfo_Encounter_Hospitalization proto.InternalMessageInfo

func (m *Encounter_Hospitalization) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Encounter_Hospitalization) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Encounter_Hospitalization) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Encounter_Hospitalization) GetPreAdmissionIdentifier() *Identifier {
	if m != nil {
		return m.PreAdmissionIdentifier
	}
	return nil
}

func (m *Encounter_Hospitalization) GetOrigin() *Reference {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *Encounter_Hospitalization) GetAdmitSource() *CodeableConcept {
	if m != nil {
		return m.AdmitSource
	}
	return nil
}

func (m *Encounter_Hospitalization) GetReAdmission() *CodeableConcept {
	if m != nil {
		return m.ReAdmission
	}
	return nil
}

func (m *Encounter_Hospitalization) GetDietPreference() []*CodeableConcept {
	if m != nil {
		return m.DietPreference
	}
	return nil
}

func (m *Encounter_Hospitalization) GetSpecialCourtesy() []*CodeableConcept {
	if m != nil {
		return m.SpecialCourtesy
	}
	return nil
}

func (m *Encounter_Hospitalization) GetSpecialArrangement() []*CodeableConcept {
	if m != nil {
		return m.SpecialArrangement
	}
	return nil
}

func (m *Encounter_Hospitalization) GetDestination() *Reference {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Encounter_Hospitalization) GetDischargeDisposition() *CodeableConcept {
	if m != nil {
		return m.DischargeDisposition
	}
	return nil
}

// List of locations where the patient has been
type Encounter_Location struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Location the encounter takes place
	Location *Reference `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	// planned | active | reserved | completed
	Status *EncounterLocationStatusCode `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// Time period during which the patient was present at the location
	Period               *Period  `protobuf:"bytes,6,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Encounter_Location) Reset()         { *m = Encounter_Location{} }
func (m *Encounter_Location) String() string { return proto.CompactTextString(m) }
func (*Encounter_Location) ProtoMessage()    {}
func (*Encounter_Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{40, 5}
}

func (m *Encounter_Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encounter_Location.Unmarshal(m, b)
}
func (m *Encounter_Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encounter_Location.Marshal(b, m, deterministic)
}
func (m *Encounter_Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encounter_Location.Merge(m, src)
}
func (m *Encounter_Location) XXX_Size() int {
	return xxx_messageInfo_Encounter_Location.Size(m)
}
func (m *Encounter_Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Encounter_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Encounter_Location proto.InternalMessageInfo

func (m *Encounter_Location) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Encounter_Location) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Encounter_Location) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Encounter_Location) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Encounter_Location) GetStatus() *EncounterLocationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Encounter_Location) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// Auto-generated from StructureDefinition for Endpoint, last updated
// 2017-04-19T07:44:43.294+10:00. The technical details of an endpoint that can
// be used for electronic services. See
// http://hl7.org/fhir/StructureDefinition/Endpoint
type Endpoint struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifies this endpoint across multiple systems
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | suspended | error | off | entered-in-error | test
	Status *EndpointStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Protocol/Profile/Standard to be used with this endpoint connection
	ConnectionType *Coding `protobuf:"bytes,11,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	// A name that this endpoint can be identified by
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Organization that manages this endpoint (may not be the organization that
	// exposes the endpoint)
	ManagingOrganization *Reference `protobuf:"bytes,13,opt,name=managing_organization,json=managingOrganization,proto3" json:"managing_organization,omitempty"`
	// Contact details for source (e.g. troubleshooting)
	Contact []*ContactPoint `protobuf:"bytes,14,rep,name=contact,proto3" json:"contact,omitempty"`
	// Interval the endpoint is expected to be operational
	Period *Period `protobuf:"bytes,15,opt,name=period,proto3" json:"period,omitempty"`
	// The type of content that may be used at this endpoint (e.g. XDS Discharge
	// summaries)
	PayloadType []*CodeableConcept `protobuf:"bytes,16,rep,name=payload_type,json=payloadType,proto3" json:"payload_type,omitempty"`
	// Mimetype to send. If not specified, the content could be anything
	// (including no payload, if the connectionType defined this)
	PayloadMimeType []*MimeTypeCode `protobuf:"bytes,17,rep,name=payload_mime_type,json=payloadMimeType,proto3" json:"payload_mime_type,omitempty"`
	// The technical base address for connecting to this endpoint
	Address *Uri `protobuf:"bytes,18,opt,name=address,proto3" json:"address,omitempty"`
	// Usage depends on the channel type
	Header               []*String `protobuf:"bytes,19,rep,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{41}
}

func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (m *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(m, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Endpoint) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Endpoint) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Endpoint) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Endpoint) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Endpoint) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Endpoint) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Endpoint) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Endpoint) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Endpoint) GetStatus() *EndpointStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Endpoint) GetConnectionType() *Coding {
	if m != nil {
		return m.ConnectionType
	}
	return nil
}

func (m *Endpoint) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Endpoint) GetManagingOrganization() *Reference {
	if m != nil {
		return m.ManagingOrganization
	}
	return nil
}

func (m *Endpoint) GetContact() []*ContactPoint {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Endpoint) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Endpoint) GetPayloadType() []*CodeableConcept {
	if m != nil {
		return m.PayloadType
	}
	return nil
}

func (m *Endpoint) GetPayloadMimeType() []*MimeTypeCode {
	if m != nil {
		return m.PayloadMimeType
	}
	return nil
}

func (m *Endpoint) GetAddress() *Uri {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Endpoint) GetHeader() []*String {
	if m != nil {
		return m.Header
	}
	return nil
}

// Auto-generated from StructureDefinition for EnrollmentRequest, last updated
// 2017-04-19T07:44:43.294+10:00. Enrollment request. See
// http://hl7.org/fhir/StructureDefinition/EnrollmentRequest
type EnrollmentRequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	// Target
	Insurer *Reference `protobuf:"bytes,12,opt,name=insurer,proto3" json:"insurer,omitempty"`
	// Responsible practitioner
	Provider *Reference `protobuf:"bytes,13,opt,name=provider,proto3" json:"provider,omitempty"`
	// Responsible organization
	Organization *Reference `protobuf:"bytes,14,opt,name=organization,proto3" json:"organization,omitempty"`
	// The subject of the Products and Services
	Subject *Reference `protobuf:"bytes,15,opt,name=subject,proto3" json:"subject,omitempty"`
	// Insurance information
	Coverage             *Reference `protobuf:"bytes,16,opt,name=coverage,proto3" json:"coverage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EnrollmentRequest) Reset()         { *m = EnrollmentRequest{} }
func (m *EnrollmentRequest) String() string { return proto.CompactTextString(m) }
func (*EnrollmentRequest) ProtoMessage()    {}
func (*EnrollmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{42}
}

func (m *EnrollmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnrollmentRequest.Unmarshal(m, b)
}
func (m *EnrollmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnrollmentRequest.Marshal(b, m, deterministic)
}
func (m *EnrollmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnrollmentRequest.Merge(m, src)
}
func (m *EnrollmentRequest) XXX_Size() int {
	return xxx_messageInfo_EnrollmentRequest.Size(m)
}
func (m *EnrollmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnrollmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnrollmentRequest proto.InternalMessageInfo

func (m *EnrollmentRequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EnrollmentRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EnrollmentRequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *EnrollmentRequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *EnrollmentRequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *EnrollmentRequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *EnrollmentRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EnrollmentRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EnrollmentRequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *EnrollmentRequest) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *EnrollmentRequest) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *EnrollmentRequest) GetInsurer() *Reference {
	if m != nil {
		return m.Insurer
	}
	return nil
}

func (m *EnrollmentRequest) GetProvider() *Reference {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *EnrollmentRequest) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *EnrollmentRequest) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *EnrollmentRequest) GetCoverage() *Reference {
	if m != nil {
		return m.Coverage
	}
	return nil
}

// Auto-generated from StructureDefinition for EnrollmentResponse, last updated
// 2017-04-19T07:44:43.294+10:00. EnrollmentResponse resource. See
// http://hl7.org/fhir/StructureDefinition/EnrollmentResponse
type EnrollmentResponse struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Claim reference
	Request *Reference `protobuf:"bytes,11,opt,name=request,proto3" json:"request,omitempty"`
	// complete | error | partial
	Outcome *CodeableConcept `protobuf:"bytes,12,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Disposition Message
	Disposition *String `protobuf:"bytes,13,opt,name=disposition,proto3" json:"disposition,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,14,opt,name=created,proto3" json:"created,omitempty"`
	// Insurer
	Organization *Reference `protobuf:"bytes,15,opt,name=organization,proto3" json:"organization,omitempty"`
	// Responsible practitioner
	RequestProvider *Reference `protobuf:"bytes,16,opt,name=request_provider,json=requestProvider,proto3" json:"request_provider,omitempty"`
	// Responsible organization
	RequestOrganization  *Reference `protobuf:"bytes,17,opt,name=request_organization,json=requestOrganization,proto3" json:"request_organization,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EnrollmentResponse) Reset()         { *m = EnrollmentResponse{} }
func (m *EnrollmentResponse) String() string { return proto.CompactTextString(m) }
func (*EnrollmentResponse) ProtoMessage()    {}
func (*EnrollmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{43}
}

func (m *EnrollmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnrollmentResponse.Unmarshal(m, b)
}
func (m *EnrollmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnrollmentResponse.Marshal(b, m, deterministic)
}
func (m *EnrollmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnrollmentResponse.Merge(m, src)
}
func (m *EnrollmentResponse) XXX_Size() int {
	return xxx_messageInfo_EnrollmentResponse.Size(m)
}
func (m *EnrollmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnrollmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnrollmentResponse proto.InternalMessageInfo

func (m *EnrollmentResponse) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EnrollmentResponse) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EnrollmentResponse) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *EnrollmentResponse) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *EnrollmentResponse) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *EnrollmentResponse) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *EnrollmentResponse) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EnrollmentResponse) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EnrollmentResponse) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *EnrollmentResponse) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *EnrollmentResponse) GetRequest() *Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *EnrollmentResponse) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *EnrollmentResponse) GetDisposition() *String {
	if m != nil {
		return m.Disposition
	}
	return nil
}

func (m *EnrollmentResponse) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *EnrollmentResponse) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *EnrollmentResponse) GetRequestProvider() *Reference {
	if m != nil {
		return m.RequestProvider
	}
	return nil
}

func (m *EnrollmentResponse) GetRequestOrganization() *Reference {
	if m != nil {
		return m.RequestOrganization
	}
	return nil
}

// Auto-generated from StructureDefinition for EpisodeOfCare, last updated
// 2017-04-19T07:44:43.294+10:00. An association of a Patient with an
// Organization and  Healthcare Provider(s) for a period of time that the
// Organization assumes some level of responsibility. See
// http://hl7.org/fhir/StructureDefinition/EpisodeOfCare
type EpisodeOfCare struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier(s) relevant for this EpisodeOfCare
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// planned | waitlist | active | onhold | finished | cancelled |
	// entered-in-error
	Status        *EpisodeOfCareStatusCode       `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	StatusHistory []*EpisodeOfCare_StatusHistory `protobuf:"bytes,11,rep,name=status_history,json=statusHistory,proto3" json:"status_history,omitempty"`
	// Type/class  - e.g. specialist referral, disease management
	Type      []*CodeableConcept         `protobuf:"bytes,12,rep,name=type,proto3" json:"type,omitempty"`
	Diagnosis []*EpisodeOfCare_Diagnosis `protobuf:"bytes,13,rep,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	// The patient who is the focus of this episode of care
	Patient *Reference `protobuf:"bytes,14,opt,name=patient,proto3" json:"patient,omitempty"`
	// Organization that assumes care
	ManagingOrganization *Reference `protobuf:"bytes,15,opt,name=managing_organization,json=managingOrganization,proto3" json:"managing_organization,omitempty"`
	// Interval during responsibility is assumed
	Period *Period `protobuf:"bytes,16,opt,name=period,proto3" json:"period,omitempty"`
	// Originating Referral Request(s)
	ReferralRequest []*Reference `protobuf:"bytes,17,rep,name=referral_request,json=referralRequest,proto3" json:"referral_request,omitempty"`
	// Care manager/care co-ordinator for the patient
	CareManager *Reference `protobuf:"bytes,18,opt,name=care_manager,json=careManager,proto3" json:"care_manager,omitempty"`
	// Other practitioners facilitating this episode of care
	Team []*Reference `protobuf:"bytes,19,rep,name=team,proto3" json:"team,omitempty"`
	// The set of accounts that may be used for billing for this EpisodeOfCare
	Account              []*Reference `protobuf:"bytes,20,rep,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EpisodeOfCare) Reset()         { *m = EpisodeOfCare{} }
func (m *EpisodeOfCare) String() string { return proto.CompactTextString(m) }
func (*EpisodeOfCare) ProtoMessage()    {}
func (*EpisodeOfCare) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{44}
}

func (m *EpisodeOfCare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpisodeOfCare.Unmarshal(m, b)
}
func (m *EpisodeOfCare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpisodeOfCare.Marshal(b, m, deterministic)
}
func (m *EpisodeOfCare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpisodeOfCare.Merge(m, src)
}
func (m *EpisodeOfCare) XXX_Size() int {
	return xxx_messageInfo_EpisodeOfCare.Size(m)
}
func (m *EpisodeOfCare) XXX_DiscardUnknown() {
	xxx_messageInfo_EpisodeOfCare.DiscardUnknown(m)
}

var xxx_messageInfo_EpisodeOfCare proto.InternalMessageInfo

func (m *EpisodeOfCare) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EpisodeOfCare) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EpisodeOfCare) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *EpisodeOfCare) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *EpisodeOfCare) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *EpisodeOfCare) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *EpisodeOfCare) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EpisodeOfCare) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EpisodeOfCare) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *EpisodeOfCare) GetStatus() *EpisodeOfCareStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *EpisodeOfCare) GetStatusHistory() []*EpisodeOfCare_StatusHistory {
	if m != nil {
		return m.StatusHistory
	}
	return nil
}

func (m *EpisodeOfCare) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *EpisodeOfCare) GetDiagnosis() []*EpisodeOfCare_Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *EpisodeOfCare) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *EpisodeOfCare) GetManagingOrganization() *Reference {
	if m != nil {
		return m.ManagingOrganization
	}
	return nil
}

func (m *EpisodeOfCare) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *EpisodeOfCare) GetReferralRequest() []*Reference {
	if m != nil {
		return m.ReferralRequest
	}
	return nil
}

func (m *EpisodeOfCare) GetCareManager() *Reference {
	if m != nil {
		return m.CareManager
	}
	return nil
}

func (m *EpisodeOfCare) GetTeam() []*Reference {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *EpisodeOfCare) GetAccount() []*Reference {
	if m != nil {
		return m.Account
	}
	return nil
}

// Past list of status codes (the current status may be included to cover the
// start date of the status)
type EpisodeOfCare_StatusHistory struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// planned | waitlist | active | onhold | finished | cancelled |
	// entered-in-error
	Status *EpisodeOfCareStatusCode `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// Duration the EpisodeOfCare was in the specified status
	Period               *Period  `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EpisodeOfCare_StatusHistory) Reset()         { *m = EpisodeOfCare_StatusHistory{} }
func (m *EpisodeOfCare_StatusHistory) String() string { return proto.CompactTextString(m) }
func (*EpisodeOfCare_StatusHistory) ProtoMessage()    {}
func (*EpisodeOfCare_StatusHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{44, 0}
}

func (m *EpisodeOfCare_StatusHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpisodeOfCare_StatusHistory.Unmarshal(m, b)
}
func (m *EpisodeOfCare_StatusHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpisodeOfCare_StatusHistory.Marshal(b, m, deterministic)
}
func (m *EpisodeOfCare_StatusHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpisodeOfCare_StatusHistory.Merge(m, src)
}
func (m *EpisodeOfCare_StatusHistory) XXX_Size() int {
	return xxx_messageInfo_EpisodeOfCare_StatusHistory.Size(m)
}
func (m *EpisodeOfCare_StatusHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_EpisodeOfCare_StatusHistory.DiscardUnknown(m)
}

var xxx_messageInfo_EpisodeOfCare_StatusHistory proto.InternalMessageInfo

func (m *EpisodeOfCare_StatusHistory) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EpisodeOfCare_StatusHistory) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EpisodeOfCare_StatusHistory) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EpisodeOfCare_StatusHistory) GetStatus() *EpisodeOfCareStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *EpisodeOfCare_StatusHistory) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// The list of diagnosis relevant to this episode of care
type EpisodeOfCare_Diagnosis struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Conditions/problems/diagnoses this episode of care is for
	Condition *Reference `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	// Role that this diagnosis has within the episode of care (e.g. admission,
	// billing, discharge …)
	Role *CodeableConcept `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	// Ranking of the diagnosis (for each role type)
	Rank                 *PositiveInt `protobuf:"bytes,6,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EpisodeOfCare_Diagnosis) Reset()         { *m = EpisodeOfCare_Diagnosis{} }
func (m *EpisodeOfCare_Diagnosis) String() string { return proto.CompactTextString(m) }
func (*EpisodeOfCare_Diagnosis) ProtoMessage()    {}
func (*EpisodeOfCare_Diagnosis) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{44, 1}
}

func (m *EpisodeOfCare_Diagnosis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpisodeOfCare_Diagnosis.Unmarshal(m, b)
}
func (m *EpisodeOfCare_Diagnosis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpisodeOfCare_Diagnosis.Marshal(b, m, deterministic)
}
func (m *EpisodeOfCare_Diagnosis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpisodeOfCare_Diagnosis.Merge(m, src)
}
func (m *EpisodeOfCare_Diagnosis) XXX_Size() int {
	return xxx_messageInfo_EpisodeOfCare_Diagnosis.Size(m)
}
func (m *EpisodeOfCare_Diagnosis) XXX_DiscardUnknown() {
	xxx_messageInfo_EpisodeOfCare_Diagnosis.DiscardUnknown(m)
}

var xxx_messageInfo_EpisodeOfCare_Diagnosis proto.InternalMessageInfo

func (m *EpisodeOfCare_Diagnosis) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EpisodeOfCare_Diagnosis) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *EpisodeOfCare_Diagnosis) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *EpisodeOfCare_Diagnosis) GetCondition() *Reference {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *EpisodeOfCare_Diagnosis) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *EpisodeOfCare_Diagnosis) GetRank() *PositiveInt {
	if m != nil {
		return m.Rank
	}
	return nil
}

// Auto-generated from StructureDefinition for ExpansionProfile, last updated
// 2017-04-19T07:44:43.294+10:00. Defines behaviour and contraints on the
// ValueSet Expansion operation. See
// http://hl7.org/fhir/StructureDefinition/ExpansionProfile
type ExpansionProfile struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this expansion profile (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the expansion profile
	Identifier *Identifier `protobuf:"bytes,10,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the expansion profile
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this expansion profile (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,14,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,16,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,17,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the expansion profile
	Description *Markdown `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,19,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for expansion profile (if applicable)
	Jurisdiction   []*CodeableConcept               `protobuf:"bytes,20,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	FixedVersion   []*ExpansionProfile_FixedVersion `protobuf:"bytes,21,rep,name=fixed_version,json=fixedVersion,proto3" json:"fixed_version,omitempty"`
	ExcludedSystem *ExpansionProfile_ExcludedSystem `protobuf:"bytes,22,opt,name=excluded_system,json=excludedSystem,proto3" json:"excluded_system,omitempty"`
	// Whether the expansion should include concept designations
	IncludeDesignations *Boolean                      `protobuf:"bytes,23,opt,name=include_designations,json=includeDesignations,proto3" json:"include_designations,omitempty"`
	Designation         *ExpansionProfile_Designation `protobuf:"bytes,24,opt,name=designation,proto3" json:"designation,omitempty"`
	// Include or exclude the value set definition in the expansion
	IncludeDefinition *Boolean `protobuf:"bytes,25,opt,name=include_definition,json=includeDefinition,proto3" json:"include_definition,omitempty"`
	// Include or exclude inactive concepts in the expansion
	ActiveOnly *Boolean `protobuf:"bytes,26,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	// Nested codes in the expansion or not
	ExcludeNested *Boolean `protobuf:"bytes,27,opt,name=exclude_nested,json=excludeNested,proto3" json:"exclude_nested,omitempty"`
	// Include or exclude codes which cannot be rendered in user interfaces in the
	// value set expansion
	ExcludeNotForUI *Boolean `protobuf:"bytes,28,opt,name=exclude_not_for_u_i,json=excludeNotForUI,proto3" json:"exclude_not_for_u_i,omitempty"`
	// Include or exclude codes which are post coordinated expressions in the
	// value set expansion
	ExcludePostCoordinated *Boolean `protobuf:"bytes,29,opt,name=exclude_post_coordinated,json=excludePostCoordinated,proto3" json:"exclude_post_coordinated,omitempty"`
	// Specify the language for the display element of codes in the value set
	// expansion
	DisplayLanguage *LanguageCode `protobuf:"bytes,30,opt,name=display_language,json=displayLanguage,proto3" json:"display_language,omitempty"`
	// Controls behaviour of the value set expand operation when value sets are
	// too large to be completely expanded
	LimitedExpansion     *Boolean `protobuf:"bytes,31,opt,name=limited_expansion,json=limitedExpansion,proto3" json:"limited_expansion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpansionProfile) Reset()         { *m = ExpansionProfile{} }
func (m *ExpansionProfile) String() string { return proto.CompactTextString(m) }
func (*ExpansionProfile) ProtoMessage()    {}
func (*ExpansionProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{45}
}

func (m *ExpansionProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpansionProfile.Unmarshal(m, b)
}
func (m *ExpansionProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpansionProfile.Marshal(b, m, deterministic)
}
func (m *ExpansionProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpansionProfile.Merge(m, src)
}
func (m *ExpansionProfile) XXX_Size() int {
	return xxx_messageInfo_ExpansionProfile.Size(m)
}
func (m *ExpansionProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpansionProfile.DiscardUnknown(m)
}

var xxx_messageInfo_ExpansionProfile proto.InternalMessageInfo

func (m *ExpansionProfile) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExpansionProfile) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ExpansionProfile) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ExpansionProfile) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ExpansionProfile) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ExpansionProfile) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ExpansionProfile) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExpansionProfile) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExpansionProfile) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *ExpansionProfile) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ExpansionProfile) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ExpansionProfile) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ExpansionProfile) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ExpansionProfile) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *ExpansionProfile) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ExpansionProfile) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *ExpansionProfile) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *ExpansionProfile) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ExpansionProfile) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *ExpansionProfile) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *ExpansionProfile) GetFixedVersion() []*ExpansionProfile_FixedVersion {
	if m != nil {
		return m.FixedVersion
	}
	return nil
}

func (m *ExpansionProfile) GetExcludedSystem() *ExpansionProfile_ExcludedSystem {
	if m != nil {
		return m.ExcludedSystem
	}
	return nil
}

func (m *ExpansionProfile) GetIncludeDesignations() *Boolean {
	if m != nil {
		return m.IncludeDesignations
	}
	return nil
}

func (m *ExpansionProfile) GetDesignation() *ExpansionProfile_Designation {
	if m != nil {
		return m.Designation
	}
	return nil
}

func (m *ExpansionProfile) GetIncludeDefinition() *Boolean {
	if m != nil {
		return m.IncludeDefinition
	}
	return nil
}

func (m *ExpansionProfile) GetActiveOnly() *Boolean {
	if m != nil {
		return m.ActiveOnly
	}
	return nil
}

func (m *ExpansionProfile) GetExcludeNested() *Boolean {
	if m != nil {
		return m.ExcludeNested
	}
	return nil
}

func (m *ExpansionProfile) GetExcludeNotForUI() *Boolean {
	if m != nil {
		return m.ExcludeNotForUI
	}
	return nil
}

func (m *ExpansionProfile) GetExcludePostCoordinated() *Boolean {
	if m != nil {
		return m.ExcludePostCoordinated
	}
	return nil
}

func (m *ExpansionProfile) GetDisplayLanguage() *LanguageCode {
	if m != nil {
		return m.DisplayLanguage
	}
	return nil
}

func (m *ExpansionProfile) GetLimitedExpansion() *Boolean {
	if m != nil {
		return m.LimitedExpansion
	}
	return nil
}

// Fix use of a code system to a particular version
type ExpansionProfile_FixedVersion struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// System to have its version fixed
	System *Uri `protobuf:"bytes,4,opt,name=system,proto3" json:"system,omitempty"`
	// Specific version of the code system referred to
	Version *String `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	// default | check | override
	Mode                 *SystemVersionProcessingModeCode `protobuf:"bytes,6,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ExpansionProfile_FixedVersion) Reset()         { *m = ExpansionProfile_FixedVersion{} }
func (m *ExpansionProfile_FixedVersion) String() string { return proto.CompactTextString(m) }
func (*ExpansionProfile_FixedVersion) ProtoMessage()    {}
func (*ExpansionProfile_FixedVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{45, 0}
}

func (m *ExpansionProfile_FixedVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpansionProfile_FixedVersion.Unmarshal(m, b)
}
func (m *ExpansionProfile_FixedVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpansionProfile_FixedVersion.Marshal(b, m, deterministic)
}
func (m *ExpansionProfile_FixedVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpansionProfile_FixedVersion.Merge(m, src)
}
func (m *ExpansionProfile_FixedVersion) XXX_Size() int {
	return xxx_messageInfo_ExpansionProfile_FixedVersion.Size(m)
}
func (m *ExpansionProfile_FixedVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpansionProfile_FixedVersion.DiscardUnknown(m)
}

var xxx_messageInfo_ExpansionProfile_FixedVersion proto.InternalMessageInfo

func (m *ExpansionProfile_FixedVersion) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExpansionProfile_FixedVersion) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExpansionProfile_FixedVersion) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExpansionProfile_FixedVersion) GetSystem() *Uri {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *ExpansionProfile_FixedVersion) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ExpansionProfile_FixedVersion) GetMode() *SystemVersionProcessingModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

// Systems/Versions to be exclude
type ExpansionProfile_ExcludedSystem struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The specific code system to be excluded
	System *Uri `protobuf:"bytes,4,opt,name=system,proto3" json:"system,omitempty"`
	// Specific version of the code system referred to
	Version              *String  `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpansionProfile_ExcludedSystem) Reset()         { *m = ExpansionProfile_ExcludedSystem{} }
func (m *ExpansionProfile_ExcludedSystem) String() string { return proto.CompactTextString(m) }
func (*ExpansionProfile_ExcludedSystem) ProtoMessage()    {}
func (*ExpansionProfile_ExcludedSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{45, 1}
}

func (m *ExpansionProfile_ExcludedSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpansionProfile_ExcludedSystem.Unmarshal(m, b)
}
func (m *ExpansionProfile_ExcludedSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpansionProfile_ExcludedSystem.Marshal(b, m, deterministic)
}
func (m *ExpansionProfile_ExcludedSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpansionProfile_ExcludedSystem.Merge(m, src)
}
func (m *ExpansionProfile_ExcludedSystem) XXX_Size() int {
	return xxx_messageInfo_ExpansionProfile_ExcludedSystem.Size(m)
}
func (m *ExpansionProfile_ExcludedSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpansionProfile_ExcludedSystem.DiscardUnknown(m)
}

var xxx_messageInfo_ExpansionProfile_ExcludedSystem proto.InternalMessageInfo

func (m *ExpansionProfile_ExcludedSystem) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExpansionProfile_ExcludedSystem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExpansionProfile_ExcludedSystem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExpansionProfile_ExcludedSystem) GetSystem() *Uri {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *ExpansionProfile_ExcludedSystem) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

// When the expansion profile imposes designation contraints
type ExpansionProfile_Designation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                                     `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Include              *ExpansionProfile_Designation_DesignationInclude `protobuf:"bytes,4,opt,name=include,proto3" json:"include,omitempty"`
	Exclude              *ExpansionProfile_Designation_DesignationExclude `protobuf:"bytes,5,opt,name=exclude,proto3" json:"exclude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *ExpansionProfile_Designation) Reset()         { *m = ExpansionProfile_Designation{} }
func (m *ExpansionProfile_Designation) String() string { return proto.CompactTextString(m) }
func (*ExpansionProfile_Designation) ProtoMessage()    {}
func (*ExpansionProfile_Designation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{45, 2}
}

func (m *ExpansionProfile_Designation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpansionProfile_Designation.Unmarshal(m, b)
}
func (m *ExpansionProfile_Designation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpansionProfile_Designation.Marshal(b, m, deterministic)
}
func (m *ExpansionProfile_Designation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpansionProfile_Designation.Merge(m, src)
}
func (m *ExpansionProfile_Designation) XXX_Size() int {
	return xxx_messageInfo_ExpansionProfile_Designation.Size(m)
}
func (m *ExpansionProfile_Designation) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpansionProfile_Designation.DiscardUnknown(m)
}

var xxx_messageInfo_ExpansionProfile_Designation proto.InternalMessageInfo

func (m *ExpansionProfile_Designation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExpansionProfile_Designation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExpansionProfile_Designation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExpansionProfile_Designation) GetInclude() *ExpansionProfile_Designation_DesignationInclude {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *ExpansionProfile_Designation) GetExclude() *ExpansionProfile_Designation_DesignationExclude {
	if m != nil {
		return m.Exclude
	}
	return nil
}

// Designations to be included
type ExpansionProfile_Designation_DesignationInclude struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                                                                     `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Designation          []*ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation `protobuf:"bytes,4,rep,name=designation,proto3" json:"designation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                           `json:"-"`
	XXX_sizecache        int32                                                                            `json:"-"`
}

func (m *ExpansionProfile_Designation_DesignationInclude) Reset() {
	*m = ExpansionProfile_Designation_DesignationInclude{}
}
func (m *ExpansionProfile_Designation_DesignationInclude) String() string {
	return proto.CompactTextString(m)
}
func (*ExpansionProfile_Designation_DesignationInclude) ProtoMessage() {}
func (*ExpansionProfile_Designation_DesignationInclude) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{45, 2, 0}
}

func (m *ExpansionProfile_Designation_DesignationInclude) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude.Unmarshal(m, b)
}
func (m *ExpansionProfile_Designation_DesignationInclude) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude.Marshal(b, m, deterministic)
}
func (m *ExpansionProfile_Designation_DesignationInclude) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude.Merge(m, src)
}
func (m *ExpansionProfile_Designation_DesignationInclude) XXX_Size() int {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude.Size(m)
}
func (m *ExpansionProfile_Designation_DesignationInclude) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude.DiscardUnknown(m)
}

var xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude proto.InternalMessageInfo

func (m *ExpansionProfile_Designation_DesignationInclude) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationInclude) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationInclude) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationInclude) GetDesignation() []*ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation {
	if m != nil {
		return m.Designation
	}
	return nil
}

// The designation to be included
type ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Human language of the designation to be included
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// What kind of Designation to include
	Use                  *Coding  `protobuf:"bytes,5,opt,name=use,proto3" json:"use,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) Reset() {
	*m = ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation{}
}
func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) String() string {
	return proto.CompactTextString(m)
}
func (*ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) ProtoMessage() {}
func (*ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{45, 2, 0, 0}
}

func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation.Unmarshal(m, b)
}
func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation.Marshal(b, m, deterministic)
}
func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation.Merge(m, src)
}
func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) XXX_Size() int {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation.Size(m)
}
func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation.DiscardUnknown(m)
}

var xxx_messageInfo_ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation proto.InternalMessageInfo

func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation) GetUse() *Coding {
	if m != nil {
		return m.Use
	}
	return nil
}

// Designations to be excluded
type ExpansionProfile_Designation_DesignationExclude struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                                                                     `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Designation          []*ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation `protobuf:"bytes,4,rep,name=designation,proto3" json:"designation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                           `json:"-"`
	XXX_sizecache        int32                                                                            `json:"-"`
}

func (m *ExpansionProfile_Designation_DesignationExclude) Reset() {
	*m = ExpansionProfile_Designation_DesignationExclude{}
}
func (m *ExpansionProfile_Designation_DesignationExclude) String() string {
	return proto.CompactTextString(m)
}
func (*ExpansionProfile_Designation_DesignationExclude) ProtoMessage() {}
func (*ExpansionProfile_Designation_DesignationExclude) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{45, 2, 1}
}

func (m *ExpansionProfile_Designation_DesignationExclude) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude.Unmarshal(m, b)
}
func (m *ExpansionProfile_Designation_DesignationExclude) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude.Marshal(b, m, deterministic)
}
func (m *ExpansionProfile_Designation_DesignationExclude) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude.Merge(m, src)
}
func (m *ExpansionProfile_Designation_DesignationExclude) XXX_Size() int {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude.Size(m)
}
func (m *ExpansionProfile_Designation_DesignationExclude) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude.DiscardUnknown(m)
}

var xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude proto.InternalMessageInfo

func (m *ExpansionProfile_Designation_DesignationExclude) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationExclude) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationExclude) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationExclude) GetDesignation() []*ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation {
	if m != nil {
		return m.Designation
	}
	return nil
}

// The designation to be excluded
type ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Human language of the designation to be excluded
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// What kind of Designation to exclude
	Use                  *Coding  `protobuf:"bytes,5,opt,name=use,proto3" json:"use,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) Reset() {
	*m = ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation{}
}
func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) String() string {
	return proto.CompactTextString(m)
}
func (*ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) ProtoMessage() {}
func (*ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{45, 2, 1, 0}
}

func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation.Unmarshal(m, b)
}
func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation.Marshal(b, m, deterministic)
}
func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation.Merge(m, src)
}
func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) XXX_Size() int {
	return xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation.Size(m)
}
func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation.DiscardUnknown(m)
}

var xxx_messageInfo_ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation proto.InternalMessageInfo

func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation) GetUse() *Coding {
	if m != nil {
		return m.Use
	}
	return nil
}

// Auto-generated from StructureDefinition for ExplanationOfBenefit, last
// updated 2017-04-19T07:44:43.294+10:00. Explanation of Benefit resource. See
// http://hl7.org/fhir/StructureDefinition/ExplanationOfBenefit
type ExplanationOfBenefit struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *ExplanationOfBenefitStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Type or discipline
	Type *CodeableConcept `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// Finer grained claim type information
	SubType []*CodeableConcept `protobuf:"bytes,12,rep,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// The subject of the Products and Services
	Patient *Reference `protobuf:"bytes,13,opt,name=patient,proto3" json:"patient,omitempty"`
	// Period for charge submission
	BillablePeriod *Period `protobuf:"bytes,14,opt,name=billable_period,json=billablePeriod,proto3" json:"billable_period,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	// Author
	Enterer *Reference `protobuf:"bytes,16,opt,name=enterer,proto3" json:"enterer,omitempty"`
	// Insurer responsible for the EOB
	Insurer *Reference `protobuf:"bytes,17,opt,name=insurer,proto3" json:"insurer,omitempty"`
	// Responsible provider for the claim
	Provider *Reference `protobuf:"bytes,18,opt,name=provider,proto3" json:"provider,omitempty"`
	// Responsible organization for the claim
	Organization *Reference `protobuf:"bytes,19,opt,name=organization,proto3" json:"organization,omitempty"`
	// Treatment Referral
	Referral *Reference `protobuf:"bytes,20,opt,name=referral,proto3" json:"referral,omitempty"`
	// Servicing Facility
	Facility *Reference `protobuf:"bytes,21,opt,name=facility,proto3" json:"facility,omitempty"`
	// Claim reference
	Claim *Reference `protobuf:"bytes,22,opt,name=claim,proto3" json:"claim,omitempty"`
	// Claim response reference
	ClaimResponse *Reference `protobuf:"bytes,23,opt,name=claim_response,json=claimResponse,proto3" json:"claim_response,omitempty"`
	// complete | error | partial
	Outcome *CodeableConcept `protobuf:"bytes,24,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Disposition Message
	Disposition *String                              `protobuf:"bytes,25,opt,name=disposition,proto3" json:"disposition,omitempty"`
	Related     []*ExplanationOfBenefit_RelatedClaim `protobuf:"bytes,26,rep,name=related,proto3" json:"related,omitempty"`
	// Prescription authorizing services or products
	Prescription *Reference `protobuf:"bytes,27,opt,name=prescription,proto3" json:"prescription,omitempty"`
	// Original prescription if superceded by fulfiller
	OriginalPrescription *Reference                                    `protobuf:"bytes,28,opt,name=original_prescription,json=originalPrescription,proto3" json:"original_prescription,omitempty"`
	Payee                *ExplanationOfBenefit_Payee                   `protobuf:"bytes,29,opt,name=payee,proto3" json:"payee,omitempty"`
	Information          []*ExplanationOfBenefit_SupportingInformation `protobuf:"bytes,30,rep,name=information,proto3" json:"information,omitempty"`
	CareTeam             []*ExplanationOfBenefit_CareTeam              `protobuf:"bytes,31,rep,name=care_team,json=careTeam,proto3" json:"care_team,omitempty"`
	Diagnosis            []*ExplanationOfBenefit_Diagnosis             `protobuf:"bytes,32,rep,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	Procedure            []*ExplanationOfBenefit_Procedure             `protobuf:"bytes,33,rep,name=procedure,proto3" json:"procedure,omitempty"`
	// Precedence (primary, secondary, etc.)
	Precedence *PositiveInt                    `protobuf:"bytes,34,opt,name=precedence,proto3" json:"precedence,omitempty"`
	Insurance  *ExplanationOfBenefit_Insurance `protobuf:"bytes,35,opt,name=insurance,proto3" json:"insurance,omitempty"`
	Accident   *ExplanationOfBenefit_Accident  `protobuf:"bytes,36,opt,name=accident,proto3" json:"accident,omitempty"`
	// Period unable to work
	EmploymentImpacted *Period `protobuf:"bytes,37,opt,name=employment_impacted,json=employmentImpacted,proto3" json:"employment_impacted,omitempty"`
	// Period in hospital
	Hospitalization *Period                           `protobuf:"bytes,38,opt,name=hospitalization,proto3" json:"hospitalization,omitempty"`
	Item            []*ExplanationOfBenefit_Item      `protobuf:"bytes,39,rep,name=item,proto3" json:"item,omitempty"`
	AddItem         []*ExplanationOfBenefit_AddedItem `protobuf:"bytes,40,rep,name=add_item,json=addItem,proto3" json:"add_item,omitempty"`
	// Total Cost of service from the Claim
	TotalCost *Money `protobuf:"bytes,41,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	// Unallocated deductable
	UnallocDeductable *Money `protobuf:"bytes,42,opt,name=unalloc_deductable,json=unallocDeductable,proto3" json:"unalloc_deductable,omitempty"`
	// Total benefit payable for the Claim
	TotalBenefit *Money                        `protobuf:"bytes,43,opt,name=total_benefit,json=totalBenefit,proto3" json:"total_benefit,omitempty"`
	Payment      *ExplanationOfBenefit_Payment `protobuf:"bytes,44,opt,name=payment,proto3" json:"payment,omitempty"`
	// Printed Form Identifier
	Form                 *CodeableConcept                       `protobuf:"bytes,45,opt,name=form,proto3" json:"form,omitempty"`
	ProcessNote          []*ExplanationOfBenefit_Note           `protobuf:"bytes,46,rep,name=process_note,json=processNote,proto3" json:"process_note,omitempty"`
	BenefitBalance       []*ExplanationOfBenefit_BenefitBalance `protobuf:"bytes,47,rep,name=benefit_balance,json=benefitBalance,proto3" json:"benefit_balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ExplanationOfBenefit) Reset()         { *m = ExplanationOfBenefit{} }
func (m *ExplanationOfBenefit) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit) ProtoMessage()    {}
func (*ExplanationOfBenefit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46}
}

func (m *ExplanationOfBenefit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit.Merge(m, src)
}
func (m *ExplanationOfBenefit) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit.Size(m)
}
func (m *ExplanationOfBenefit) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit proto.InternalMessageInfo

func (m *ExplanationOfBenefit) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ExplanationOfBenefit) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ExplanationOfBenefit) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ExplanationOfBenefit) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ExplanationOfBenefit) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ExplanationOfBenefit) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ExplanationOfBenefit) GetStatus() *ExplanationOfBenefitStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ExplanationOfBenefit) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ExplanationOfBenefit) GetSubType() []*CodeableConcept {
	if m != nil {
		return m.SubType
	}
	return nil
}

func (m *ExplanationOfBenefit) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *ExplanationOfBenefit) GetBillablePeriod() *Period {
	if m != nil {
		return m.BillablePeriod
	}
	return nil
}

func (m *ExplanationOfBenefit) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ExplanationOfBenefit) GetEnterer() *Reference {
	if m != nil {
		return m.Enterer
	}
	return nil
}

func (m *ExplanationOfBenefit) GetInsurer() *Reference {
	if m != nil {
		return m.Insurer
	}
	return nil
}

func (m *ExplanationOfBenefit) GetProvider() *Reference {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *ExplanationOfBenefit) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *ExplanationOfBenefit) GetReferral() *Reference {
	if m != nil {
		return m.Referral
	}
	return nil
}

func (m *ExplanationOfBenefit) GetFacility() *Reference {
	if m != nil {
		return m.Facility
	}
	return nil
}

func (m *ExplanationOfBenefit) GetClaim() *Reference {
	if m != nil {
		return m.Claim
	}
	return nil
}

func (m *ExplanationOfBenefit) GetClaimResponse() *Reference {
	if m != nil {
		return m.ClaimResponse
	}
	return nil
}

func (m *ExplanationOfBenefit) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *ExplanationOfBenefit) GetDisposition() *String {
	if m != nil {
		return m.Disposition
	}
	return nil
}

func (m *ExplanationOfBenefit) GetRelated() []*ExplanationOfBenefit_RelatedClaim {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *ExplanationOfBenefit) GetPrescription() *Reference {
	if m != nil {
		return m.Prescription
	}
	return nil
}

func (m *ExplanationOfBenefit) GetOriginalPrescription() *Reference {
	if m != nil {
		return m.OriginalPrescription
	}
	return nil
}

func (m *ExplanationOfBenefit) GetPayee() *ExplanationOfBenefit_Payee {
	if m != nil {
		return m.Payee
	}
	return nil
}

func (m *ExplanationOfBenefit) GetInformation() []*ExplanationOfBenefit_SupportingInformation {
	if m != nil {
		return m.Information
	}
	return nil
}

func (m *ExplanationOfBenefit) GetCareTeam() []*ExplanationOfBenefit_CareTeam {
	if m != nil {
		return m.CareTeam
	}
	return nil
}

func (m *ExplanationOfBenefit) GetDiagnosis() []*ExplanationOfBenefit_Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *ExplanationOfBenefit) GetProcedure() []*ExplanationOfBenefit_Procedure {
	if m != nil {
		return m.Procedure
	}
	return nil
}

func (m *ExplanationOfBenefit) GetPrecedence() *PositiveInt {
	if m != nil {
		return m.Precedence
	}
	return nil
}

func (m *ExplanationOfBenefit) GetInsurance() *ExplanationOfBenefit_Insurance {
	if m != nil {
		return m.Insurance
	}
	return nil
}

func (m *ExplanationOfBenefit) GetAccident() *ExplanationOfBenefit_Accident {
	if m != nil {
		return m.Accident
	}
	return nil
}

func (m *ExplanationOfBenefit) GetEmploymentImpacted() *Period {
	if m != nil {
		return m.EmploymentImpacted
	}
	return nil
}

func (m *ExplanationOfBenefit) GetHospitalization() *Period {
	if m != nil {
		return m.Hospitalization
	}
	return nil
}

func (m *ExplanationOfBenefit) GetItem() []*ExplanationOfBenefit_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ExplanationOfBenefit) GetAddItem() []*ExplanationOfBenefit_AddedItem {
	if m != nil {
		return m.AddItem
	}
	return nil
}

func (m *ExplanationOfBenefit) GetTotalCost() *Money {
	if m != nil {
		return m.TotalCost
	}
	return nil
}

func (m *ExplanationOfBenefit) GetUnallocDeductable() *Money {
	if m != nil {
		return m.UnallocDeductable
	}
	return nil
}

func (m *ExplanationOfBenefit) GetTotalBenefit() *Money {
	if m != nil {
		return m.TotalBenefit
	}
	return nil
}

func (m *ExplanationOfBenefit) GetPayment() *ExplanationOfBenefit_Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (m *ExplanationOfBenefit) GetForm() *CodeableConcept {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *ExplanationOfBenefit) GetProcessNote() []*ExplanationOfBenefit_Note {
	if m != nil {
		return m.ProcessNote
	}
	return nil
}

func (m *ExplanationOfBenefit) GetBenefitBalance() []*ExplanationOfBenefit_BenefitBalance {
	if m != nil {
		return m.BenefitBalance
	}
	return nil
}

// Related Claims which may be revelant to processing this claim
type ExplanationOfBenefit_RelatedClaim struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reference to the related claim
	Claim *Reference `protobuf:"bytes,4,opt,name=claim,proto3" json:"claim,omitempty"`
	// How the reference claim is related
	Relationship *CodeableConcept `protobuf:"bytes,5,opt,name=relationship,proto3" json:"relationship,omitempty"`
	// Related file or case reference
	Reference            *Identifier `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ExplanationOfBenefit_RelatedClaim) Reset()         { *m = ExplanationOfBenefit_RelatedClaim{} }
func (m *ExplanationOfBenefit_RelatedClaim) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_RelatedClaim) ProtoMessage()    {}
func (*ExplanationOfBenefit_RelatedClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 0}
}

func (m *ExplanationOfBenefit_RelatedClaim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_RelatedClaim.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_RelatedClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_RelatedClaim.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_RelatedClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_RelatedClaim.Merge(m, src)
}
func (m *ExplanationOfBenefit_RelatedClaim) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_RelatedClaim.Size(m)
}
func (m *ExplanationOfBenefit_RelatedClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_RelatedClaim.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_RelatedClaim proto.InternalMessageInfo

func (m *ExplanationOfBenefit_RelatedClaim) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_RelatedClaim) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_RelatedClaim) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_RelatedClaim) GetClaim() *Reference {
	if m != nil {
		return m.Claim
	}
	return nil
}

func (m *ExplanationOfBenefit_RelatedClaim) GetRelationship() *CodeableConcept {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *ExplanationOfBenefit_RelatedClaim) GetReference() *Identifier {
	if m != nil {
		return m.Reference
	}
	return nil
}

// Party to be paid any benefits payable
type ExplanationOfBenefit_Payee struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of party: Subscriber, Provider, other
	Type *CodeableConcept `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// organization | patient | practitioner | relatedperson
	ResourceType *CodeableConcept `protobuf:"bytes,5,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// Party to receive the payable
	Party                *Reference `protobuf:"bytes,6,opt,name=party,proto3" json:"party,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ExplanationOfBenefit_Payee) Reset()         { *m = ExplanationOfBenefit_Payee{} }
func (m *ExplanationOfBenefit_Payee) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Payee) ProtoMessage()    {}
func (*ExplanationOfBenefit_Payee) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 1}
}

func (m *ExplanationOfBenefit_Payee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Payee.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Payee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Payee.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Payee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Payee.Merge(m, src)
}
func (m *ExplanationOfBenefit_Payee) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Payee.Size(m)
}
func (m *ExplanationOfBenefit_Payee) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Payee.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Payee proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Payee) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Payee) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Payee) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Payee) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ExplanationOfBenefit_Payee) GetResourceType() *CodeableConcept {
	if m != nil {
		return m.ResourceType
	}
	return nil
}

func (m *ExplanationOfBenefit_Payee) GetParty() *Reference {
	if m != nil {
		return m.Party
	}
	return nil
}

// Exceptions, special considerations, the condition, situation, prior or
// concurrent issues
type ExplanationOfBenefit_SupportingInformation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Information instance identifier
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// General class of information
	Category *CodeableConcept `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	// Type of information
	Code   *CodeableConcept                                       `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	Timing *ExplanationOfBenefit_SupportingInformation_TimingType `protobuf:"bytes,7,opt,name=timing,proto3" json:"timing,omitempty"`
	Value  *ExplanationOfBenefit_SupportingInformation_Value      `protobuf:"bytes,8,opt,name=value,proto3" json:"value,omitempty"`
	// Reason associated with the information
	Reason               *Coding  `protobuf:"bytes,9,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExplanationOfBenefit_SupportingInformation) Reset() {
	*m = ExplanationOfBenefit_SupportingInformation{}
}
func (m *ExplanationOfBenefit_SupportingInformation) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_SupportingInformation) ProtoMessage() {}
func (*ExplanationOfBenefit_SupportingInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 2}
}

func (m *ExplanationOfBenefit_SupportingInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_SupportingInformation.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_SupportingInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_SupportingInformation.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_SupportingInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_SupportingInformation.Merge(m, src)
}
func (m *ExplanationOfBenefit_SupportingInformation) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_SupportingInformation.Size(m)
}
func (m *ExplanationOfBenefit_SupportingInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_SupportingInformation.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_SupportingInformation proto.InternalMessageInfo

func (m *ExplanationOfBenefit_SupportingInformation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation) GetTiming() *ExplanationOfBenefit_SupportingInformation_TimingType {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation) GetValue() *ExplanationOfBenefit_SupportingInformation_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation) GetReason() *Coding {
	if m != nil {
		return m.Reason
	}
	return nil
}

// When it occurred
type ExplanationOfBenefit_SupportingInformation_TimingType struct {
	// Types that are valid to be assigned to Timing:
	//	*ExplanationOfBenefit_SupportingInformation_TimingType_Date
	//	*ExplanationOfBenefit_SupportingInformation_TimingType_Period
	Timing               isExplanationOfBenefit_SupportingInformation_TimingType_Timing `protobuf_oneof:"timing"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-"`
	XXX_unrecognized     []byte                                                         `json:"-"`
	XXX_sizecache        int32                                                          `json:"-"`
}

func (m *ExplanationOfBenefit_SupportingInformation_TimingType) Reset() {
	*m = ExplanationOfBenefit_SupportingInformation_TimingType{}
}
func (m *ExplanationOfBenefit_SupportingInformation_TimingType) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_SupportingInformation_TimingType) ProtoMessage() {}
func (*ExplanationOfBenefit_SupportingInformation_TimingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 2, 0}
}

func (m *ExplanationOfBenefit_SupportingInformation_TimingType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_TimingType.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_SupportingInformation_TimingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_TimingType.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_SupportingInformation_TimingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_TimingType.Merge(m, src)
}
func (m *ExplanationOfBenefit_SupportingInformation_TimingType) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_TimingType.Size(m)
}
func (m *ExplanationOfBenefit_SupportingInformation_TimingType) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_TimingType.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_TimingType proto.InternalMessageInfo

type isExplanationOfBenefit_SupportingInformation_TimingType_Timing interface {
	isExplanationOfBenefit_SupportingInformation_TimingType_Timing()
}

type ExplanationOfBenefit_SupportingInformation_TimingType_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type ExplanationOfBenefit_SupportingInformation_TimingType_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*ExplanationOfBenefit_SupportingInformation_TimingType_Date) isExplanationOfBenefit_SupportingInformation_TimingType_Timing() {
}

func (*ExplanationOfBenefit_SupportingInformation_TimingType_Period) isExplanationOfBenefit_SupportingInformation_TimingType_Timing() {
}

func (m *ExplanationOfBenefit_SupportingInformation_TimingType) GetTiming() isExplanationOfBenefit_SupportingInformation_TimingType_Timing {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation_TimingType) GetDate() *Date {
	if x, ok := m.GetTiming().(*ExplanationOfBenefit_SupportingInformation_TimingType_Date); ok {
		return x.Date
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation_TimingType) GetPeriod() *Period {
	if x, ok := m.GetTiming().(*ExplanationOfBenefit_SupportingInformation_TimingType_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExplanationOfBenefit_SupportingInformation_TimingType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExplanationOfBenefit_SupportingInformation_TimingType_OneofMarshaler, _ExplanationOfBenefit_SupportingInformation_TimingType_OneofUnmarshaler, _ExplanationOfBenefit_SupportingInformation_TimingType_OneofSizer, []interface{}{
		(*ExplanationOfBenefit_SupportingInformation_TimingType_Date)(nil),
		(*ExplanationOfBenefit_SupportingInformation_TimingType_Period)(nil),
	}
}

func _ExplanationOfBenefit_SupportingInformation_TimingType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExplanationOfBenefit_SupportingInformation_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *ExplanationOfBenefit_SupportingInformation_TimingType_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *ExplanationOfBenefit_SupportingInformation_TimingType_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExplanationOfBenefit_SupportingInformation_TimingType.Timing has unexpected type %T", x)
	}
	return nil
}

func _ExplanationOfBenefit_SupportingInformation_TimingType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExplanationOfBenefit_SupportingInformation_TimingType)
	switch tag {
	case 1: // timing.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Timing = &ExplanationOfBenefit_SupportingInformation_TimingType_Date{msg}
		return true, err
	case 2: // timing.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Timing = &ExplanationOfBenefit_SupportingInformation_TimingType_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExplanationOfBenefit_SupportingInformation_TimingType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExplanationOfBenefit_SupportingInformation_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *ExplanationOfBenefit_SupportingInformation_TimingType_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_SupportingInformation_TimingType_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Additional Data or supporting information
type ExplanationOfBenefit_SupportingInformation_Value struct {
	// Types that are valid to be assigned to Value:
	//	*ExplanationOfBenefit_SupportingInformation_Value_StringValue
	//	*ExplanationOfBenefit_SupportingInformation_Value_Quantity
	//	*ExplanationOfBenefit_SupportingInformation_Value_Attachment
	//	*ExplanationOfBenefit_SupportingInformation_Value_Reference
	Value                isExplanationOfBenefit_SupportingInformation_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *ExplanationOfBenefit_SupportingInformation_Value) Reset() {
	*m = ExplanationOfBenefit_SupportingInformation_Value{}
}
func (m *ExplanationOfBenefit_SupportingInformation_Value) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_SupportingInformation_Value) ProtoMessage() {}
func (*ExplanationOfBenefit_SupportingInformation_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 2, 1}
}

func (m *ExplanationOfBenefit_SupportingInformation_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_Value.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_SupportingInformation_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_Value.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_SupportingInformation_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_Value.Merge(m, src)
}
func (m *ExplanationOfBenefit_SupportingInformation_Value) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_Value.Size(m)
}
func (m *ExplanationOfBenefit_SupportingInformation_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_Value.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_SupportingInformation_Value proto.InternalMessageInfo

type isExplanationOfBenefit_SupportingInformation_Value_Value interface {
	isExplanationOfBenefit_SupportingInformation_Value_Value()
}

type ExplanationOfBenefit_SupportingInformation_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,1,opt,name=string_value,json=string,proto3,oneof"`
}

type ExplanationOfBenefit_SupportingInformation_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,2,opt,name=quantity,proto3,oneof"`
}

type ExplanationOfBenefit_SupportingInformation_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,3,opt,name=attachment,proto3,oneof"`
}

type ExplanationOfBenefit_SupportingInformation_Value_Reference struct {
	Reference *Reference `protobuf:"bytes,4,opt,name=reference,proto3,oneof"`
}

func (*ExplanationOfBenefit_SupportingInformation_Value_StringValue) isExplanationOfBenefit_SupportingInformation_Value_Value() {
}

func (*ExplanationOfBenefit_SupportingInformation_Value_Quantity) isExplanationOfBenefit_SupportingInformation_Value_Value() {
}

func (*ExplanationOfBenefit_SupportingInformation_Value_Attachment) isExplanationOfBenefit_SupportingInformation_Value_Value() {
}

func (*ExplanationOfBenefit_SupportingInformation_Value_Reference) isExplanationOfBenefit_SupportingInformation_Value_Value() {
}

func (m *ExplanationOfBenefit_SupportingInformation_Value) GetValue() isExplanationOfBenefit_SupportingInformation_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*ExplanationOfBenefit_SupportingInformation_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*ExplanationOfBenefit_SupportingInformation_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*ExplanationOfBenefit_SupportingInformation_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *ExplanationOfBenefit_SupportingInformation_Value) GetReference() *Reference {
	if x, ok := m.GetValue().(*ExplanationOfBenefit_SupportingInformation_Value_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExplanationOfBenefit_SupportingInformation_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExplanationOfBenefit_SupportingInformation_Value_OneofMarshaler, _ExplanationOfBenefit_SupportingInformation_Value_OneofUnmarshaler, _ExplanationOfBenefit_SupportingInformation_Value_OneofSizer, []interface{}{
		(*ExplanationOfBenefit_SupportingInformation_Value_StringValue)(nil),
		(*ExplanationOfBenefit_SupportingInformation_Value_Quantity)(nil),
		(*ExplanationOfBenefit_SupportingInformation_Value_Attachment)(nil),
		(*ExplanationOfBenefit_SupportingInformation_Value_Reference)(nil),
	}
}

func _ExplanationOfBenefit_SupportingInformation_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExplanationOfBenefit_SupportingInformation_Value)
	// value
	switch x := m.Value.(type) {
	case *ExplanationOfBenefit_SupportingInformation_Value_StringValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *ExplanationOfBenefit_SupportingInformation_Value_Quantity:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *ExplanationOfBenefit_SupportingInformation_Value_Attachment:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *ExplanationOfBenefit_SupportingInformation_Value_Reference:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExplanationOfBenefit_SupportingInformation_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _ExplanationOfBenefit_SupportingInformation_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExplanationOfBenefit_SupportingInformation_Value)
	switch tag {
	case 1: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &ExplanationOfBenefit_SupportingInformation_Value_StringValue{msg}
		return true, err
	case 2: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &ExplanationOfBenefit_SupportingInformation_Value_Quantity{msg}
		return true, err
	case 3: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &ExplanationOfBenefit_SupportingInformation_Value_Attachment{msg}
		return true, err
	case 4: // value.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Value = &ExplanationOfBenefit_SupportingInformation_Value_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExplanationOfBenefit_SupportingInformation_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExplanationOfBenefit_SupportingInformation_Value)
	// value
	switch x := m.Value.(type) {
	case *ExplanationOfBenefit_SupportingInformation_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_SupportingInformation_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_SupportingInformation_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_SupportingInformation_Value_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Care Team members
type ExplanationOfBenefit_CareTeam struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Number to covey order of careteam
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Member of the Care Team
	Provider *Reference `protobuf:"bytes,5,opt,name=provider,proto3" json:"provider,omitempty"`
	// Billing practitioner
	Responsible *Boolean `protobuf:"bytes,6,opt,name=responsible,proto3" json:"responsible,omitempty"`
	// Role on the team
	Role *CodeableConcept `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	// Type, classification or Specialization
	Qualification        *CodeableConcept `protobuf:"bytes,8,opt,name=qualification,proto3" json:"qualification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ExplanationOfBenefit_CareTeam) Reset()         { *m = ExplanationOfBenefit_CareTeam{} }
func (m *ExplanationOfBenefit_CareTeam) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_CareTeam) ProtoMessage()    {}
func (*ExplanationOfBenefit_CareTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 3}
}

func (m *ExplanationOfBenefit_CareTeam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_CareTeam.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_CareTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_CareTeam.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_CareTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_CareTeam.Merge(m, src)
}
func (m *ExplanationOfBenefit_CareTeam) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_CareTeam.Size(m)
}
func (m *ExplanationOfBenefit_CareTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_CareTeam.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_CareTeam proto.InternalMessageInfo

func (m *ExplanationOfBenefit_CareTeam) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_CareTeam) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_CareTeam) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_CareTeam) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *ExplanationOfBenefit_CareTeam) GetProvider() *Reference {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *ExplanationOfBenefit_CareTeam) GetResponsible() *Boolean {
	if m != nil {
		return m.Responsible
	}
	return nil
}

func (m *ExplanationOfBenefit_CareTeam) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ExplanationOfBenefit_CareTeam) GetQualification() *CodeableConcept {
	if m != nil {
		return m.Qualification
	}
	return nil
}

// List of Diagnosis
type ExplanationOfBenefit_Diagnosis struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Number to covey order of diagnosis
	Sequence  *PositiveInt                                  `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Diagnosis *ExplanationOfBenefit_Diagnosis_DiagnosisType `protobuf:"bytes,5,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	// Timing or nature of the diagnosis
	Type []*CodeableConcept `protobuf:"bytes,6,rep,name=type,proto3" json:"type,omitempty"`
	// Package billing code
	PackageCode          *CodeableConcept `protobuf:"bytes,7,opt,name=package_code,json=packageCode,proto3" json:"package_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ExplanationOfBenefit_Diagnosis) Reset()         { *m = ExplanationOfBenefit_Diagnosis{} }
func (m *ExplanationOfBenefit_Diagnosis) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Diagnosis) ProtoMessage()    {}
func (*ExplanationOfBenefit_Diagnosis) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 4}
}

func (m *ExplanationOfBenefit_Diagnosis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Diagnosis.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Diagnosis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Diagnosis.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Diagnosis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Diagnosis.Merge(m, src)
}
func (m *ExplanationOfBenefit_Diagnosis) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Diagnosis.Size(m)
}
func (m *ExplanationOfBenefit_Diagnosis) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Diagnosis.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Diagnosis proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Diagnosis) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Diagnosis) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Diagnosis) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Diagnosis) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *ExplanationOfBenefit_Diagnosis) GetDiagnosis() *ExplanationOfBenefit_Diagnosis_DiagnosisType {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *ExplanationOfBenefit_Diagnosis) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ExplanationOfBenefit_Diagnosis) GetPackageCode() *CodeableConcept {
	if m != nil {
		return m.PackageCode
	}
	return nil
}

// Patient's diagnosis
type ExplanationOfBenefit_Diagnosis_DiagnosisType struct {
	// Types that are valid to be assigned to Diagnosis:
	//	*ExplanationOfBenefit_Diagnosis_DiagnosisType_CodeableConcept
	//	*ExplanationOfBenefit_Diagnosis_DiagnosisType_Reference
	Diagnosis            isExplanationOfBenefit_Diagnosis_DiagnosisType_Diagnosis `protobuf_oneof:"diagnosis"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) Reset() {
	*m = ExplanationOfBenefit_Diagnosis_DiagnosisType{}
}
func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_Diagnosis_DiagnosisType) ProtoMessage() {}
func (*ExplanationOfBenefit_Diagnosis_DiagnosisType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 4, 0}
}

func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Diagnosis_DiagnosisType.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Diagnosis_DiagnosisType.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Diagnosis_DiagnosisType.Merge(m, src)
}
func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Diagnosis_DiagnosisType.Size(m)
}
func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Diagnosis_DiagnosisType.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Diagnosis_DiagnosisType proto.InternalMessageInfo

type isExplanationOfBenefit_Diagnosis_DiagnosisType_Diagnosis interface {
	isExplanationOfBenefit_Diagnosis_DiagnosisType_Diagnosis()
}

type ExplanationOfBenefit_Diagnosis_DiagnosisType_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ExplanationOfBenefit_Diagnosis_DiagnosisType_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*ExplanationOfBenefit_Diagnosis_DiagnosisType_CodeableConcept) isExplanationOfBenefit_Diagnosis_DiagnosisType_Diagnosis() {
}

func (*ExplanationOfBenefit_Diagnosis_DiagnosisType_Reference) isExplanationOfBenefit_Diagnosis_DiagnosisType_Diagnosis() {
}

func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) GetDiagnosis() isExplanationOfBenefit_Diagnosis_DiagnosisType_Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetDiagnosis().(*ExplanationOfBenefit_Diagnosis_DiagnosisType_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *ExplanationOfBenefit_Diagnosis_DiagnosisType) GetReference() *Reference {
	if x, ok := m.GetDiagnosis().(*ExplanationOfBenefit_Diagnosis_DiagnosisType_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExplanationOfBenefit_Diagnosis_DiagnosisType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExplanationOfBenefit_Diagnosis_DiagnosisType_OneofMarshaler, _ExplanationOfBenefit_Diagnosis_DiagnosisType_OneofUnmarshaler, _ExplanationOfBenefit_Diagnosis_DiagnosisType_OneofSizer, []interface{}{
		(*ExplanationOfBenefit_Diagnosis_DiagnosisType_CodeableConcept)(nil),
		(*ExplanationOfBenefit_Diagnosis_DiagnosisType_Reference)(nil),
	}
}

func _ExplanationOfBenefit_Diagnosis_DiagnosisType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExplanationOfBenefit_Diagnosis_DiagnosisType)
	// diagnosis
	switch x := m.Diagnosis.(type) {
	case *ExplanationOfBenefit_Diagnosis_DiagnosisType_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *ExplanationOfBenefit_Diagnosis_DiagnosisType_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExplanationOfBenefit_Diagnosis_DiagnosisType.Diagnosis has unexpected type %T", x)
	}
	return nil
}

func _ExplanationOfBenefit_Diagnosis_DiagnosisType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExplanationOfBenefit_Diagnosis_DiagnosisType)
	switch tag {
	case 1: // diagnosis.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Diagnosis = &ExplanationOfBenefit_Diagnosis_DiagnosisType_CodeableConcept{msg}
		return true, err
	case 2: // diagnosis.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Diagnosis = &ExplanationOfBenefit_Diagnosis_DiagnosisType_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExplanationOfBenefit_Diagnosis_DiagnosisType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExplanationOfBenefit_Diagnosis_DiagnosisType)
	// diagnosis
	switch x := m.Diagnosis.(type) {
	case *ExplanationOfBenefit_Diagnosis_DiagnosisType_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_Diagnosis_DiagnosisType_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Procedures performed
type ExplanationOfBenefit_Procedure struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Procedure sequence for reference
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// When the procedure was performed
	Date                 *DateTime                                     `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Procedure            *ExplanationOfBenefit_Procedure_ProcedureType `protobuf:"bytes,6,opt,name=procedure,proto3" json:"procedure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *ExplanationOfBenefit_Procedure) Reset()         { *m = ExplanationOfBenefit_Procedure{} }
func (m *ExplanationOfBenefit_Procedure) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Procedure) ProtoMessage()    {}
func (*ExplanationOfBenefit_Procedure) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 5}
}

func (m *ExplanationOfBenefit_Procedure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Procedure.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Procedure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Procedure.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Procedure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Procedure.Merge(m, src)
}
func (m *ExplanationOfBenefit_Procedure) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Procedure.Size(m)
}
func (m *ExplanationOfBenefit_Procedure) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Procedure.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Procedure proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Procedure) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Procedure) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Procedure) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Procedure) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *ExplanationOfBenefit_Procedure) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ExplanationOfBenefit_Procedure) GetProcedure() *ExplanationOfBenefit_Procedure_ProcedureType {
	if m != nil {
		return m.Procedure
	}
	return nil
}

// Patient's list of procedures performed
type ExplanationOfBenefit_Procedure_ProcedureType struct {
	// Types that are valid to be assigned to Procedure:
	//	*ExplanationOfBenefit_Procedure_ProcedureType_CodeableConcept
	//	*ExplanationOfBenefit_Procedure_ProcedureType_Reference
	Procedure            isExplanationOfBenefit_Procedure_ProcedureType_Procedure `protobuf_oneof:"procedure"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *ExplanationOfBenefit_Procedure_ProcedureType) Reset() {
	*m = ExplanationOfBenefit_Procedure_ProcedureType{}
}
func (m *ExplanationOfBenefit_Procedure_ProcedureType) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_Procedure_ProcedureType) ProtoMessage() {}
func (*ExplanationOfBenefit_Procedure_ProcedureType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 5, 0}
}

func (m *ExplanationOfBenefit_Procedure_ProcedureType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Procedure_ProcedureType.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Procedure_ProcedureType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Procedure_ProcedureType.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Procedure_ProcedureType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Procedure_ProcedureType.Merge(m, src)
}
func (m *ExplanationOfBenefit_Procedure_ProcedureType) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Procedure_ProcedureType.Size(m)
}
func (m *ExplanationOfBenefit_Procedure_ProcedureType) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Procedure_ProcedureType.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Procedure_ProcedureType proto.InternalMessageInfo

type isExplanationOfBenefit_Procedure_ProcedureType_Procedure interface {
	isExplanationOfBenefit_Procedure_ProcedureType_Procedure()
}

type ExplanationOfBenefit_Procedure_ProcedureType_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ExplanationOfBenefit_Procedure_ProcedureType_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*ExplanationOfBenefit_Procedure_ProcedureType_CodeableConcept) isExplanationOfBenefit_Procedure_ProcedureType_Procedure() {
}

func (*ExplanationOfBenefit_Procedure_ProcedureType_Reference) isExplanationOfBenefit_Procedure_ProcedureType_Procedure() {
}

func (m *ExplanationOfBenefit_Procedure_ProcedureType) GetProcedure() isExplanationOfBenefit_Procedure_ProcedureType_Procedure {
	if m != nil {
		return m.Procedure
	}
	return nil
}

func (m *ExplanationOfBenefit_Procedure_ProcedureType) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetProcedure().(*ExplanationOfBenefit_Procedure_ProcedureType_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *ExplanationOfBenefit_Procedure_ProcedureType) GetReference() *Reference {
	if x, ok := m.GetProcedure().(*ExplanationOfBenefit_Procedure_ProcedureType_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExplanationOfBenefit_Procedure_ProcedureType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExplanationOfBenefit_Procedure_ProcedureType_OneofMarshaler, _ExplanationOfBenefit_Procedure_ProcedureType_OneofUnmarshaler, _ExplanationOfBenefit_Procedure_ProcedureType_OneofSizer, []interface{}{
		(*ExplanationOfBenefit_Procedure_ProcedureType_CodeableConcept)(nil),
		(*ExplanationOfBenefit_Procedure_ProcedureType_Reference)(nil),
	}
}

func _ExplanationOfBenefit_Procedure_ProcedureType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExplanationOfBenefit_Procedure_ProcedureType)
	// procedure
	switch x := m.Procedure.(type) {
	case *ExplanationOfBenefit_Procedure_ProcedureType_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *ExplanationOfBenefit_Procedure_ProcedureType_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExplanationOfBenefit_Procedure_ProcedureType.Procedure has unexpected type %T", x)
	}
	return nil
}

func _ExplanationOfBenefit_Procedure_ProcedureType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExplanationOfBenefit_Procedure_ProcedureType)
	switch tag {
	case 1: // procedure.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Procedure = &ExplanationOfBenefit_Procedure_ProcedureType_CodeableConcept{msg}
		return true, err
	case 2: // procedure.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Procedure = &ExplanationOfBenefit_Procedure_ProcedureType_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExplanationOfBenefit_Procedure_ProcedureType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExplanationOfBenefit_Procedure_ProcedureType)
	// procedure
	switch x := m.Procedure.(type) {
	case *ExplanationOfBenefit_Procedure_ProcedureType_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_Procedure_ProcedureType_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Insurance or medical plan
type ExplanationOfBenefit_Insurance struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Insurance information
	Coverage *Reference `protobuf:"bytes,4,opt,name=coverage,proto3" json:"coverage,omitempty"`
	// Pre-Authorization/Determination Reference
	PreAuthRef           []*String `protobuf:"bytes,5,rep,name=pre_auth_ref,json=preAuthRef,proto3" json:"pre_auth_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ExplanationOfBenefit_Insurance) Reset()         { *m = ExplanationOfBenefit_Insurance{} }
func (m *ExplanationOfBenefit_Insurance) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Insurance) ProtoMessage()    {}
func (*ExplanationOfBenefit_Insurance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 6}
}

func (m *ExplanationOfBenefit_Insurance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Insurance.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Insurance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Insurance.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Insurance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Insurance.Merge(m, src)
}
func (m *ExplanationOfBenefit_Insurance) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Insurance.Size(m)
}
func (m *ExplanationOfBenefit_Insurance) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Insurance.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Insurance proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Insurance) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Insurance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Insurance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Insurance) GetCoverage() *Reference {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *ExplanationOfBenefit_Insurance) GetPreAuthRef() []*String {
	if m != nil {
		return m.PreAuthRef
	}
	return nil
}

// Details of an accident
type ExplanationOfBenefit_Accident struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// When the accident occurred
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	// The nature of the accident
	Type                 *CodeableConcept                        `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Location             *ExplanationOfBenefit_Accident_Location `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ExplanationOfBenefit_Accident) Reset()         { *m = ExplanationOfBenefit_Accident{} }
func (m *ExplanationOfBenefit_Accident) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Accident) ProtoMessage()    {}
func (*ExplanationOfBenefit_Accident) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 7}
}

func (m *ExplanationOfBenefit_Accident) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Accident.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Accident) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Accident.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Accident) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Accident.Merge(m, src)
}
func (m *ExplanationOfBenefit_Accident) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Accident.Size(m)
}
func (m *ExplanationOfBenefit_Accident) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Accident.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Accident proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Accident) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Accident) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Accident) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Accident) GetDate() *Date {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ExplanationOfBenefit_Accident) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ExplanationOfBenefit_Accident) GetLocation() *ExplanationOfBenefit_Accident_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

// Accident Place
type ExplanationOfBenefit_Accident_Location struct {
	// Types that are valid to be assigned to Location:
	//	*ExplanationOfBenefit_Accident_Location_Address
	//	*ExplanationOfBenefit_Accident_Location_Reference
	Location             isExplanationOfBenefit_Accident_Location_Location `protobuf_oneof:"location"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *ExplanationOfBenefit_Accident_Location) Reset() {
	*m = ExplanationOfBenefit_Accident_Location{}
}
func (m *ExplanationOfBenefit_Accident_Location) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Accident_Location) ProtoMessage()    {}
func (*ExplanationOfBenefit_Accident_Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 7, 0}
}

func (m *ExplanationOfBenefit_Accident_Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Accident_Location.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Accident_Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Accident_Location.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Accident_Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Accident_Location.Merge(m, src)
}
func (m *ExplanationOfBenefit_Accident_Location) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Accident_Location.Size(m)
}
func (m *ExplanationOfBenefit_Accident_Location) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Accident_Location.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Accident_Location proto.InternalMessageInfo

type isExplanationOfBenefit_Accident_Location_Location interface {
	isExplanationOfBenefit_Accident_Location_Location()
}

type ExplanationOfBenefit_Accident_Location_Address struct {
	Address *Address `protobuf:"bytes,1,opt,name=address,proto3,oneof"`
}

type ExplanationOfBenefit_Accident_Location_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*ExplanationOfBenefit_Accident_Location_Address) isExplanationOfBenefit_Accident_Location_Location() {
}

func (*ExplanationOfBenefit_Accident_Location_Reference) isExplanationOfBenefit_Accident_Location_Location() {
}

func (m *ExplanationOfBenefit_Accident_Location) GetLocation() isExplanationOfBenefit_Accident_Location_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *ExplanationOfBenefit_Accident_Location) GetAddress() *Address {
	if x, ok := m.GetLocation().(*ExplanationOfBenefit_Accident_Location_Address); ok {
		return x.Address
	}
	return nil
}

func (m *ExplanationOfBenefit_Accident_Location) GetReference() *Reference {
	if x, ok := m.GetLocation().(*ExplanationOfBenefit_Accident_Location_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExplanationOfBenefit_Accident_Location) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExplanationOfBenefit_Accident_Location_OneofMarshaler, _ExplanationOfBenefit_Accident_Location_OneofUnmarshaler, _ExplanationOfBenefit_Accident_Location_OneofSizer, []interface{}{
		(*ExplanationOfBenefit_Accident_Location_Address)(nil),
		(*ExplanationOfBenefit_Accident_Location_Reference)(nil),
	}
}

func _ExplanationOfBenefit_Accident_Location_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExplanationOfBenefit_Accident_Location)
	// location
	switch x := m.Location.(type) {
	case *ExplanationOfBenefit_Accident_Location_Address:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *ExplanationOfBenefit_Accident_Location_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExplanationOfBenefit_Accident_Location.Location has unexpected type %T", x)
	}
	return nil
}

func _ExplanationOfBenefit_Accident_Location_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExplanationOfBenefit_Accident_Location)
	switch tag {
	case 1: // location.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.Location = &ExplanationOfBenefit_Accident_Location_Address{msg}
		return true, err
	case 2: // location.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Location = &ExplanationOfBenefit_Accident_Location_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExplanationOfBenefit_Accident_Location_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExplanationOfBenefit_Accident_Location)
	// location
	switch x := m.Location.(type) {
	case *ExplanationOfBenefit_Accident_Location_Address:
		s := proto.Size(x.Address)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_Accident_Location_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Goods and Services
type ExplanationOfBenefit_Item struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Applicable careteam members
	CareTeamLinkId []*PositiveInt `protobuf:"bytes,5,rep,name=care_team_link_id,json=careTeamLinkId,proto3" json:"care_team_link_id,omitempty"`
	// Applicable diagnoses
	DiagnosisLinkId []*PositiveInt `protobuf:"bytes,6,rep,name=diagnosis_link_id,json=diagnosisLinkId,proto3" json:"diagnosis_link_id,omitempty"`
	// Applicable procedures
	ProcedureLinkId []*PositiveInt `protobuf:"bytes,7,rep,name=procedure_link_id,json=procedureLinkId,proto3" json:"procedure_link_id,omitempty"`
	// Applicable exception and supporting information
	InformationLinkId []*PositiveInt `protobuf:"bytes,8,rep,name=information_link_id,json=informationLinkId,proto3" json:"information_link_id,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,9,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,10,opt,name=category,proto3" json:"category,omitempty"`
	// Billing Code
	Service *CodeableConcept `protobuf:"bytes,11,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,12,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Program specific reason for item inclusion
	ProgramCode []*CodeableConcept                  `protobuf:"bytes,13,rep,name=program_code,json=programCode,proto3" json:"program_code,omitempty"`
	Serviced    *ExplanationOfBenefit_Item_Serviced `protobuf:"bytes,14,opt,name=serviced,proto3" json:"serviced,omitempty"`
	Location    *ExplanationOfBenefit_Item_Location `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	// Count of Products or Services
	Quantity *SimpleQuantity `protobuf:"bytes,16,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Fee, charge or cost per point
	UnitPrice *Money `protobuf:"bytes,17,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// Price scaling factor
	Factor *Decimal `protobuf:"bytes,18,opt,name=factor,proto3" json:"factor,omitempty"`
	// Total item cost
	Net *Money `protobuf:"bytes,19,opt,name=net,proto3" json:"net,omitempty"`
	// Unique Device Identifier
	Udi []*Reference `protobuf:"bytes,20,rep,name=udi,proto3" json:"udi,omitempty"`
	// Service Location
	BodySite *CodeableConcept `protobuf:"bytes,21,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Service Sub-location
	SubSite []*CodeableConcept `protobuf:"bytes,22,rep,name=sub_site,json=subSite,proto3" json:"sub_site,omitempty"`
	// Encounters related to this billed item
	Encounter []*Reference `protobuf:"bytes,23,rep,name=encounter,proto3" json:"encounter,omitempty"`
	// List of note numbers which apply
	NoteNumber           []*PositiveInt                            `protobuf:"bytes,24,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	Adjudication         []*ExplanationOfBenefit_Item_Adjudication `protobuf:"bytes,25,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	Detail               []*ExplanationOfBenefit_Item_Detail       `protobuf:"bytes,26,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ExplanationOfBenefit_Item) Reset()         { *m = ExplanationOfBenefit_Item{} }
func (m *ExplanationOfBenefit_Item) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Item) ProtoMessage()    {}
func (*ExplanationOfBenefit_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 8}
}

func (m *ExplanationOfBenefit_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Item.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Item.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Item.Merge(m, src)
}
func (m *ExplanationOfBenefit_Item) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Item.Size(m)
}
func (m *ExplanationOfBenefit_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Item.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Item proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Item) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetCareTeamLinkId() []*PositiveInt {
	if m != nil {
		return m.CareTeamLinkId
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetDiagnosisLinkId() []*PositiveInt {
	if m != nil {
		return m.DiagnosisLinkId
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetProcedureLinkId() []*PositiveInt {
	if m != nil {
		return m.ProcedureLinkId
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetInformationLinkId() []*PositiveInt {
	if m != nil {
		return m.InformationLinkId
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetProgramCode() []*CodeableConcept {
	if m != nil {
		return m.ProgramCode
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetServiced() *ExplanationOfBenefit_Item_Serviced {
	if m != nil {
		return m.Serviced
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetLocation() *ExplanationOfBenefit_Item_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetUnitPrice() *Money {
	if m != nil {
		return m.UnitPrice
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetFactor() *Decimal {
	if m != nil {
		return m.Factor
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetNet() *Money {
	if m != nil {
		return m.Net
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetUdi() []*Reference {
	if m != nil {
		return m.Udi
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetSubSite() []*CodeableConcept {
	if m != nil {
		return m.SubSite
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetEncounter() []*Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetAdjudication() []*ExplanationOfBenefit_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

func (m *ExplanationOfBenefit_Item) GetDetail() []*ExplanationOfBenefit_Item_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Date or dates of Service
type ExplanationOfBenefit_Item_Serviced struct {
	// Types that are valid to be assigned to Serviced:
	//	*ExplanationOfBenefit_Item_Serviced_Date
	//	*ExplanationOfBenefit_Item_Serviced_Period
	Serviced             isExplanationOfBenefit_Item_Serviced_Serviced `protobuf_oneof:"serviced"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *ExplanationOfBenefit_Item_Serviced) Reset()         { *m = ExplanationOfBenefit_Item_Serviced{} }
func (m *ExplanationOfBenefit_Item_Serviced) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Item_Serviced) ProtoMessage()    {}
func (*ExplanationOfBenefit_Item_Serviced) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 8, 0}
}

func (m *ExplanationOfBenefit_Item_Serviced) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Serviced.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Item_Serviced) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Serviced.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Item_Serviced) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Item_Serviced.Merge(m, src)
}
func (m *ExplanationOfBenefit_Item_Serviced) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Serviced.Size(m)
}
func (m *ExplanationOfBenefit_Item_Serviced) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Item_Serviced.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Item_Serviced proto.InternalMessageInfo

type isExplanationOfBenefit_Item_Serviced_Serviced interface {
	isExplanationOfBenefit_Item_Serviced_Serviced()
}

type ExplanationOfBenefit_Item_Serviced_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type ExplanationOfBenefit_Item_Serviced_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*ExplanationOfBenefit_Item_Serviced_Date) isExplanationOfBenefit_Item_Serviced_Serviced() {}

func (*ExplanationOfBenefit_Item_Serviced_Period) isExplanationOfBenefit_Item_Serviced_Serviced() {}

func (m *ExplanationOfBenefit_Item_Serviced) GetServiced() isExplanationOfBenefit_Item_Serviced_Serviced {
	if m != nil {
		return m.Serviced
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Serviced) GetDate() *Date {
	if x, ok := m.GetServiced().(*ExplanationOfBenefit_Item_Serviced_Date); ok {
		return x.Date
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Serviced) GetPeriod() *Period {
	if x, ok := m.GetServiced().(*ExplanationOfBenefit_Item_Serviced_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExplanationOfBenefit_Item_Serviced) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExplanationOfBenefit_Item_Serviced_OneofMarshaler, _ExplanationOfBenefit_Item_Serviced_OneofUnmarshaler, _ExplanationOfBenefit_Item_Serviced_OneofSizer, []interface{}{
		(*ExplanationOfBenefit_Item_Serviced_Date)(nil),
		(*ExplanationOfBenefit_Item_Serviced_Period)(nil),
	}
}

func _ExplanationOfBenefit_Item_Serviced_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExplanationOfBenefit_Item_Serviced)
	// serviced
	switch x := m.Serviced.(type) {
	case *ExplanationOfBenefit_Item_Serviced_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *ExplanationOfBenefit_Item_Serviced_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExplanationOfBenefit_Item_Serviced.Serviced has unexpected type %T", x)
	}
	return nil
}

func _ExplanationOfBenefit_Item_Serviced_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExplanationOfBenefit_Item_Serviced)
	switch tag {
	case 1: // serviced.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Serviced = &ExplanationOfBenefit_Item_Serviced_Date{msg}
		return true, err
	case 2: // serviced.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Serviced = &ExplanationOfBenefit_Item_Serviced_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExplanationOfBenefit_Item_Serviced_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExplanationOfBenefit_Item_Serviced)
	// serviced
	switch x := m.Serviced.(type) {
	case *ExplanationOfBenefit_Item_Serviced_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_Item_Serviced_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Place of service
type ExplanationOfBenefit_Item_Location struct {
	// Types that are valid to be assigned to Location:
	//	*ExplanationOfBenefit_Item_Location_CodeableConcept
	//	*ExplanationOfBenefit_Item_Location_Address
	//	*ExplanationOfBenefit_Item_Location_Reference
	Location             isExplanationOfBenefit_Item_Location_Location `protobuf_oneof:"location"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *ExplanationOfBenefit_Item_Location) Reset()         { *m = ExplanationOfBenefit_Item_Location{} }
func (m *ExplanationOfBenefit_Item_Location) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Item_Location) ProtoMessage()    {}
func (*ExplanationOfBenefit_Item_Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 8, 1}
}

func (m *ExplanationOfBenefit_Item_Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Location.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Item_Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Location.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Item_Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Item_Location.Merge(m, src)
}
func (m *ExplanationOfBenefit_Item_Location) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Location.Size(m)
}
func (m *ExplanationOfBenefit_Item_Location) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Item_Location.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Item_Location proto.InternalMessageInfo

type isExplanationOfBenefit_Item_Location_Location interface {
	isExplanationOfBenefit_Item_Location_Location()
}

type ExplanationOfBenefit_Item_Location_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ExplanationOfBenefit_Item_Location_Address struct {
	Address *Address `protobuf:"bytes,2,opt,name=address,proto3,oneof"`
}

type ExplanationOfBenefit_Item_Location_Reference struct {
	Reference *Reference `protobuf:"bytes,3,opt,name=reference,proto3,oneof"`
}

func (*ExplanationOfBenefit_Item_Location_CodeableConcept) isExplanationOfBenefit_Item_Location_Location() {
}

func (*ExplanationOfBenefit_Item_Location_Address) isExplanationOfBenefit_Item_Location_Location() {}

func (*ExplanationOfBenefit_Item_Location_Reference) isExplanationOfBenefit_Item_Location_Location() {}

func (m *ExplanationOfBenefit_Item_Location) GetLocation() isExplanationOfBenefit_Item_Location_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Location) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetLocation().(*ExplanationOfBenefit_Item_Location_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Location) GetAddress() *Address {
	if x, ok := m.GetLocation().(*ExplanationOfBenefit_Item_Location_Address); ok {
		return x.Address
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Location) GetReference() *Reference {
	if x, ok := m.GetLocation().(*ExplanationOfBenefit_Item_Location_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExplanationOfBenefit_Item_Location) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExplanationOfBenefit_Item_Location_OneofMarshaler, _ExplanationOfBenefit_Item_Location_OneofUnmarshaler, _ExplanationOfBenefit_Item_Location_OneofSizer, []interface{}{
		(*ExplanationOfBenefit_Item_Location_CodeableConcept)(nil),
		(*ExplanationOfBenefit_Item_Location_Address)(nil),
		(*ExplanationOfBenefit_Item_Location_Reference)(nil),
	}
}

func _ExplanationOfBenefit_Item_Location_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExplanationOfBenefit_Item_Location)
	// location
	switch x := m.Location.(type) {
	case *ExplanationOfBenefit_Item_Location_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *ExplanationOfBenefit_Item_Location_Address:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *ExplanationOfBenefit_Item_Location_Reference:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExplanationOfBenefit_Item_Location.Location has unexpected type %T", x)
	}
	return nil
}

func _ExplanationOfBenefit_Item_Location_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExplanationOfBenefit_Item_Location)
	switch tag {
	case 1: // location.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Location = &ExplanationOfBenefit_Item_Location_CodeableConcept{msg}
		return true, err
	case 2: // location.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.Location = &ExplanationOfBenefit_Item_Location_Address{msg}
		return true, err
	case 3: // location.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Location = &ExplanationOfBenefit_Item_Location_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExplanationOfBenefit_Item_Location_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExplanationOfBenefit_Item_Location)
	// location
	switch x := m.Location.(type) {
	case *ExplanationOfBenefit_Item_Location_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_Item_Location_Address:
		s := proto.Size(x.Address)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_Item_Location_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Adjudication details
type ExplanationOfBenefit_Item_Adjudication struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Adjudication category such as co-pay, eligible, benefit, etc.
	Category *CodeableConcept `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// Explanation of Adjudication outcome
	Reason *CodeableConcept `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	// Monetary amount
	Amount *Money `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	// Non-monitory value
	Value                *Decimal `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExplanationOfBenefit_Item_Adjudication) Reset() {
	*m = ExplanationOfBenefit_Item_Adjudication{}
}
func (m *ExplanationOfBenefit_Item_Adjudication) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Item_Adjudication) ProtoMessage()    {}
func (*ExplanationOfBenefit_Item_Adjudication) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 8, 2}
}

func (m *ExplanationOfBenefit_Item_Adjudication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Adjudication.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Item_Adjudication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Adjudication.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Item_Adjudication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Item_Adjudication.Merge(m, src)
}
func (m *ExplanationOfBenefit_Item_Adjudication) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Adjudication.Size(m)
}
func (m *ExplanationOfBenefit_Item_Adjudication) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Item_Adjudication.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Item_Adjudication proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Item_Adjudication) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Adjudication) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Adjudication) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Adjudication) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Adjudication) GetReason() *CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Adjudication) GetAmount() *Money {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Adjudication) GetValue() *Decimal {
	if m != nil {
		return m.Value
	}
	return nil
}

// Additional items
type ExplanationOfBenefit_Item_Detail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Group or type of product or service
	Type *CodeableConcept `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,6,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	// Billing Code
	Service *CodeableConcept `protobuf:"bytes,8,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,9,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Program specific reason for item inclusion
	ProgramCode []*CodeableConcept `protobuf:"bytes,10,rep,name=program_code,json=programCode,proto3" json:"program_code,omitempty"`
	// Count of Products or Services
	Quantity *SimpleQuantity `protobuf:"bytes,11,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Fee, charge or cost per point
	UnitPrice *Money `protobuf:"bytes,12,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// Price scaling factor
	Factor *Decimal `protobuf:"bytes,13,opt,name=factor,proto3" json:"factor,omitempty"`
	// Total additional item cost
	Net *Money `protobuf:"bytes,14,opt,name=net,proto3" json:"net,omitempty"`
	// Unique Device Identifier
	Udi []*Reference `protobuf:"bytes,15,rep,name=udi,proto3" json:"udi,omitempty"`
	// List of note numbers which apply
	NoteNumber []*PositiveInt `protobuf:"bytes,16,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	// Detail level adjudication details
	Adjudication         []*ExplanationOfBenefit_Item_Adjudication     `protobuf:"bytes,17,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	SubDetail            []*ExplanationOfBenefit_Item_Detail_SubDetail `protobuf:"bytes,18,rep,name=sub_detail,json=subDetail,proto3" json:"sub_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *ExplanationOfBenefit_Item_Detail) Reset()         { *m = ExplanationOfBenefit_Item_Detail{} }
func (m *ExplanationOfBenefit_Item_Detail) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Item_Detail) ProtoMessage()    {}
func (*ExplanationOfBenefit_Item_Detail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 8, 3}
}

func (m *ExplanationOfBenefit_Item_Detail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Detail.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Item_Detail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Detail.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Item_Detail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Item_Detail.Merge(m, src)
}
func (m *ExplanationOfBenefit_Item_Detail) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Detail.Size(m)
}
func (m *ExplanationOfBenefit_Item_Detail) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Item_Detail.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Item_Detail proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Item_Detail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetProgramCode() []*CodeableConcept {
	if m != nil {
		return m.ProgramCode
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetUnitPrice() *Money {
	if m != nil {
		return m.UnitPrice
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetFactor() *Decimal {
	if m != nil {
		return m.Factor
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetNet() *Money {
	if m != nil {
		return m.Net
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetUdi() []*Reference {
	if m != nil {
		return m.Udi
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetAdjudication() []*ExplanationOfBenefit_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail) GetSubDetail() []*ExplanationOfBenefit_Item_Detail_SubDetail {
	if m != nil {
		return m.SubDetail
	}
	return nil
}

// Additional items
type ExplanationOfBenefit_Item_Detail_SubDetail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	Sequence *PositiveInt `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Type of product or service
	Type *CodeableConcept `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,6,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	// Billing Code
	Service *CodeableConcept `protobuf:"bytes,8,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,9,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Program specific reason for item inclusion
	ProgramCode []*CodeableConcept `protobuf:"bytes,10,rep,name=program_code,json=programCode,proto3" json:"program_code,omitempty"`
	// Count of Products or Services
	Quantity *SimpleQuantity `protobuf:"bytes,11,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Fee, charge or cost per point
	UnitPrice *Money `protobuf:"bytes,12,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// Price scaling factor
	Factor *Decimal `protobuf:"bytes,13,opt,name=factor,proto3" json:"factor,omitempty"`
	// Net additional item cost
	Net *Money `protobuf:"bytes,14,opt,name=net,proto3" json:"net,omitempty"`
	// Unique Device Identifier
	Udi []*Reference `protobuf:"bytes,15,rep,name=udi,proto3" json:"udi,omitempty"`
	// List of note numbers which apply
	NoteNumber []*PositiveInt `protobuf:"bytes,16,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	// Language if different from the resource
	Adjudication         []*ExplanationOfBenefit_Item_Adjudication `protobuf:"bytes,17,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) Reset() {
	*m = ExplanationOfBenefit_Item_Detail_SubDetail{}
}
func (m *ExplanationOfBenefit_Item_Detail_SubDetail) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_Item_Detail_SubDetail) ProtoMessage() {}
func (*ExplanationOfBenefit_Item_Detail_SubDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 8, 3, 0}
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Detail_SubDetail.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Item_Detail_SubDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Detail_SubDetail.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Item_Detail_SubDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Item_Detail_SubDetail.Merge(m, src)
}
func (m *ExplanationOfBenefit_Item_Detail_SubDetail) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Item_Detail_SubDetail.Size(m)
}
func (m *ExplanationOfBenefit_Item_Detail_SubDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Item_Detail_SubDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Item_Detail_SubDetail proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetSequence() *PositiveInt {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetProgramCode() []*CodeableConcept {
	if m != nil {
		return m.ProgramCode
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetUnitPrice() *Money {
	if m != nil {
		return m.UnitPrice
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetFactor() *Decimal {
	if m != nil {
		return m.Factor
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetNet() *Money {
	if m != nil {
		return m.Net
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetUdi() []*Reference {
	if m != nil {
		return m.Udi
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ExplanationOfBenefit_Item_Detail_SubDetail) GetAdjudication() []*ExplanationOfBenefit_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

// Insurer added line items
type ExplanationOfBenefit_AddedItem struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instances
	SequenceLinkId []*PositiveInt `protobuf:"bytes,4,rep,name=sequence_link_id,json=sequenceLinkId,proto3" json:"sequence_link_id,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,5,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	// Billing Code
	Service *CodeableConcept `protobuf:"bytes,7,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,8,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Professional fee or Product charge
	Fee *Money `protobuf:"bytes,9,opt,name=fee,proto3" json:"fee,omitempty"`
	// List of note numbers which apply
	NoteNumber []*PositiveInt `protobuf:"bytes,10,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	// Added items adjudication
	Adjudication         []*ExplanationOfBenefit_Item_Adjudication          `protobuf:"bytes,11,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	Detail               []*ExplanationOfBenefit_AddedItem_AddedItemsDetail `protobuf:"bytes,12,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *ExplanationOfBenefit_AddedItem) Reset()         { *m = ExplanationOfBenefit_AddedItem{} }
func (m *ExplanationOfBenefit_AddedItem) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_AddedItem) ProtoMessage()    {}
func (*ExplanationOfBenefit_AddedItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 9}
}

func (m *ExplanationOfBenefit_AddedItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_AddedItem.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_AddedItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_AddedItem.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_AddedItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_AddedItem.Merge(m, src)
}
func (m *ExplanationOfBenefit_AddedItem) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_AddedItem.Size(m)
}
func (m *ExplanationOfBenefit_AddedItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_AddedItem.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_AddedItem proto.InternalMessageInfo

func (m *ExplanationOfBenefit_AddedItem) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetSequenceLinkId() []*PositiveInt {
	if m != nil {
		return m.SequenceLinkId
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetFee() *Money {
	if m != nil {
		return m.Fee
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetAdjudication() []*ExplanationOfBenefit_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem) GetDetail() []*ExplanationOfBenefit_AddedItem_AddedItemsDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Added items details
type ExplanationOfBenefit_AddedItem_AddedItemsDetail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Revenue or cost center code
	Revenue *CodeableConcept `protobuf:"bytes,4,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Type of service or product
	Category *CodeableConcept `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	// Billing Code
	Service *CodeableConcept `protobuf:"bytes,6,opt,name=service,proto3" json:"service,omitempty"`
	// Service/Product billing modifiers
	Modifier []*CodeableConcept `protobuf:"bytes,7,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Professional fee or Product charge
	Fee *Money `protobuf:"bytes,8,opt,name=fee,proto3" json:"fee,omitempty"`
	// List of note numbers which apply
	NoteNumber []*PositiveInt `protobuf:"bytes,9,rep,name=note_number,json=noteNumber,proto3" json:"note_number,omitempty"`
	// Added items detail adjudication
	Adjudication         []*ExplanationOfBenefit_Item_Adjudication `protobuf:"bytes,10,rep,name=adjudication,proto3" json:"adjudication,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) Reset() {
	*m = ExplanationOfBenefit_AddedItem_AddedItemsDetail{}
}
func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_AddedItem_AddedItemsDetail) ProtoMessage() {}
func (*ExplanationOfBenefit_AddedItem_AddedItemsDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 9, 0}
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_AddedItem_AddedItemsDetail.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_AddedItem_AddedItemsDetail.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_AddedItem_AddedItemsDetail.Merge(m, src)
}
func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_AddedItem_AddedItemsDetail.Size(m)
}
func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_AddedItem_AddedItemsDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_AddedItem_AddedItemsDetail proto.InternalMessageInfo

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetRevenue() *CodeableConcept {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetService() *CodeableConcept {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetModifier() []*CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetFee() *Money {
	if m != nil {
		return m.Fee
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetNoteNumber() []*PositiveInt {
	if m != nil {
		return m.NoteNumber
	}
	return nil
}

func (m *ExplanationOfBenefit_AddedItem_AddedItemsDetail) GetAdjudication() []*ExplanationOfBenefit_Item_Adjudication {
	if m != nil {
		return m.Adjudication
	}
	return nil
}

// Payment (if paid)
type ExplanationOfBenefit_Payment struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Partial or Complete
	Type *CodeableConcept `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Payment adjustment for non-Claim issues
	Adjustment *Money `protobuf:"bytes,5,opt,name=adjustment,proto3" json:"adjustment,omitempty"`
	// Explanation for the non-claim adjustment
	AdjustmentReason *CodeableConcept `protobuf:"bytes,6,opt,name=adjustment_reason,json=adjustmentReason,proto3" json:"adjustment_reason,omitempty"`
	// Expected date of Payment
	Date *Date `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	// Payable amount after adjustment
	Amount *Money `protobuf:"bytes,8,opt,name=amount,proto3" json:"amount,omitempty"`
	// Identifier of the payment instrument
	Identifier           *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ExplanationOfBenefit_Payment) Reset()         { *m = ExplanationOfBenefit_Payment{} }
func (m *ExplanationOfBenefit_Payment) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Payment) ProtoMessage()    {}
func (*ExplanationOfBenefit_Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 10}
}

func (m *ExplanationOfBenefit_Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Payment.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Payment.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Payment.Merge(m, src)
}
func (m *ExplanationOfBenefit_Payment) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Payment.Size(m)
}
func (m *ExplanationOfBenefit_Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Payment proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Payment) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Payment) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Payment) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Payment) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ExplanationOfBenefit_Payment) GetAdjustment() *Money {
	if m != nil {
		return m.Adjustment
	}
	return nil
}

func (m *ExplanationOfBenefit_Payment) GetAdjustmentReason() *CodeableConcept {
	if m != nil {
		return m.AdjustmentReason
	}
	return nil
}

func (m *ExplanationOfBenefit_Payment) GetDate() *Date {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ExplanationOfBenefit_Payment) GetAmount() *Money {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ExplanationOfBenefit_Payment) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

// Processing notes
type ExplanationOfBenefit_Note struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Sequence number for this note
	Number *PositiveInt `protobuf:"bytes,4,opt,name=number,proto3" json:"number,omitempty"`
	// display | print | printoper
	Type *CodeableConcept `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// Note explanitory text
	Text *String `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	// Language if different from the resource
	Language             *CodeableConcept `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ExplanationOfBenefit_Note) Reset()         { *m = ExplanationOfBenefit_Note{} }
func (m *ExplanationOfBenefit_Note) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_Note) ProtoMessage()    {}
func (*ExplanationOfBenefit_Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 11}
}

func (m *ExplanationOfBenefit_Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_Note.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_Note.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_Note.Merge(m, src)
}
func (m *ExplanationOfBenefit_Note) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_Note.Size(m)
}
func (m *ExplanationOfBenefit_Note) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_Note.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_Note proto.InternalMessageInfo

func (m *ExplanationOfBenefit_Note) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_Note) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_Note) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_Note) GetNumber() *PositiveInt {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *ExplanationOfBenefit_Note) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ExplanationOfBenefit_Note) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ExplanationOfBenefit_Note) GetLanguage() *CodeableConcept {
	if m != nil {
		return m.Language
	}
	return nil
}

// Balance by Benefit Category
type ExplanationOfBenefit_BenefitBalance struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of services covered
	Category *CodeableConcept `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// Detailed services covered within the type
	SubCategory *CodeableConcept `protobuf:"bytes,5,opt,name=sub_category,json=subCategory,proto3" json:"sub_category,omitempty"`
	// Excluded from the plan
	Excluded *Boolean `protobuf:"bytes,6,opt,name=excluded,proto3" json:"excluded,omitempty"`
	// Short name for the benefit
	Name *String `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the benefit or services covered
	Description *String `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	// In or out of network
	Network *CodeableConcept `protobuf:"bytes,9,opt,name=network,proto3" json:"network,omitempty"`
	// Individual or family
	Unit *CodeableConcept `protobuf:"bytes,10,opt,name=unit,proto3" json:"unit,omitempty"`
	// Annual or lifetime
	Term                 *CodeableConcept                               `protobuf:"bytes,11,opt,name=term,proto3" json:"term,omitempty"`
	Financial            []*ExplanationOfBenefit_BenefitBalance_Benefit `protobuf:"bytes,12,rep,name=financial,proto3" json:"financial,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *ExplanationOfBenefit_BenefitBalance) Reset()         { *m = ExplanationOfBenefit_BenefitBalance{} }
func (m *ExplanationOfBenefit_BenefitBalance) String() string { return proto.CompactTextString(m) }
func (*ExplanationOfBenefit_BenefitBalance) ProtoMessage()    {}
func (*ExplanationOfBenefit_BenefitBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 12}
}

func (m *ExplanationOfBenefit_BenefitBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_BenefitBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_BenefitBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_BenefitBalance.Merge(m, src)
}
func (m *ExplanationOfBenefit_BenefitBalance) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance.Size(m)
}
func (m *ExplanationOfBenefit_BenefitBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_BenefitBalance.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_BenefitBalance proto.InternalMessageInfo

func (m *ExplanationOfBenefit_BenefitBalance) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetSubCategory() *CodeableConcept {
	if m != nil {
		return m.SubCategory
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetExcluded() *Boolean {
	if m != nil {
		return m.Excluded
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetNetwork() *CodeableConcept {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetUnit() *CodeableConcept {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetTerm() *CodeableConcept {
	if m != nil {
		return m.Term
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance) GetFinancial() []*ExplanationOfBenefit_BenefitBalance_Benefit {
	if m != nil {
		return m.Financial
	}
	return nil
}

// Benefit Summary
type ExplanationOfBenefit_BenefitBalance_Benefit struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Deductable, visits, benefit amount
	Type                 *CodeableConcept                                     `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Allowed              *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed `protobuf:"bytes,5,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Used                 *ExplanationOfBenefit_BenefitBalance_Benefit_Used    `protobuf:"bytes,6,opt,name=used,proto3" json:"used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit) Reset() {
	*m = ExplanationOfBenefit_BenefitBalance_Benefit{}
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_BenefitBalance_Benefit) ProtoMessage() {}
func (*ExplanationOfBenefit_BenefitBalance_Benefit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 12, 0}
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit.Merge(m, src)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit.Size(m)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit proto.InternalMessageInfo

func (m *ExplanationOfBenefit_BenefitBalance_Benefit) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit) GetAllowed() *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed {
	if m != nil {
		return m.Allowed
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit) GetUsed() *ExplanationOfBenefit_BenefitBalance_Benefit_Used {
	if m != nil {
		return m.Used
	}
	return nil
}

// Benefits allowed
type ExplanationOfBenefit_BenefitBalance_Benefit_Allowed struct {
	// Types that are valid to be assigned to Allowed:
	//	*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_UnsignedInt
	//	*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_StringValue
	//	*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Money
	Allowed              isExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Allowed `protobuf_oneof:"allowed"`
	XXX_NoUnkeyedLiteral struct{}                                                      `json:"-"`
	XXX_unrecognized     []byte                                                        `json:"-"`
	XXX_sizecache        int32                                                         `json:"-"`
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) Reset() {
	*m = ExplanationOfBenefit_BenefitBalance_Benefit_Allowed{}
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) ProtoMessage() {}
func (*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 12, 0, 0}
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Allowed.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Allowed.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Allowed.Merge(m, src)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Allowed.Size(m)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Allowed.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Allowed proto.InternalMessageInfo

type isExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Allowed interface {
	isExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Allowed()
}

type ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,1,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_StringValue struct {
	StringValue *String `protobuf:"bytes,2,opt,name=string_value,json=string,proto3,oneof"`
}

type ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Money struct {
	Money *Money `protobuf:"bytes,3,opt,name=money,proto3,oneof"`
}

func (*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_UnsignedInt) isExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Allowed() {
}

func (*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_StringValue) isExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Allowed() {
}

func (*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Money) isExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Allowed() {
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) GetAllowed() isExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Allowed {
	if m != nil {
		return m.Allowed
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetAllowed().(*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) GetStringValue() *String {
	if x, ok := m.GetAllowed().(*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) GetMoney() *Money {
	if x, ok := m.GetAllowed().(*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Money); ok {
		return x.Money
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_OneofMarshaler, _ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_OneofUnmarshaler, _ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_OneofSizer, []interface{}{
		(*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_UnsignedInt)(nil),
		(*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_StringValue)(nil),
		(*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Money)(nil),
	}
}

func _ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed)
	// allowed
	switch x := m.Allowed.(type) {
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_UnsignedInt:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_StringValue:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Money:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExplanationOfBenefit_BenefitBalance_Benefit_Allowed.Allowed has unexpected type %T", x)
	}
	return nil
}

func _ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed)
	switch tag {
	case 1: // allowed.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.Allowed = &ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_UnsignedInt{msg}
		return true, err
	case 2: // allowed.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Allowed = &ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_StringValue{msg}
		return true, err
	case 3: // allowed.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.Allowed = &ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Money{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed)
	// allowed
	switch x := m.Allowed.(type) {
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Allowed_Money:
		s := proto.Size(x.Money)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Benefits used
type ExplanationOfBenefit_BenefitBalance_Benefit_Used struct {
	// Types that are valid to be assigned to Used:
	//	*ExplanationOfBenefit_BenefitBalance_Benefit_Used_UnsignedInt
	//	*ExplanationOfBenefit_BenefitBalance_Benefit_Used_Money
	Used                 isExplanationOfBenefit_BenefitBalance_Benefit_Used_Used `protobuf_oneof:"used"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) Reset() {
	*m = ExplanationOfBenefit_BenefitBalance_Benefit_Used{}
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) String() string {
	return proto.CompactTextString(m)
}
func (*ExplanationOfBenefit_BenefitBalance_Benefit_Used) ProtoMessage() {}
func (*ExplanationOfBenefit_BenefitBalance_Benefit_Used) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{46, 12, 0, 1}
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Used.Unmarshal(m, b)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Used.Marshal(b, m, deterministic)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Used.Merge(m, src)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) XXX_Size() int {
	return xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Used.Size(m)
}
func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) XXX_DiscardUnknown() {
	xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Used.DiscardUnknown(m)
}

var xxx_messageInfo_ExplanationOfBenefit_BenefitBalance_Benefit_Used proto.InternalMessageInfo

type isExplanationOfBenefit_BenefitBalance_Benefit_Used_Used interface {
	isExplanationOfBenefit_BenefitBalance_Benefit_Used_Used()
}

type ExplanationOfBenefit_BenefitBalance_Benefit_Used_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,1,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type ExplanationOfBenefit_BenefitBalance_Benefit_Used_Money struct {
	Money *Money `protobuf:"bytes,2,opt,name=money,proto3,oneof"`
}

func (*ExplanationOfBenefit_BenefitBalance_Benefit_Used_UnsignedInt) isExplanationOfBenefit_BenefitBalance_Benefit_Used_Used() {
}

func (*ExplanationOfBenefit_BenefitBalance_Benefit_Used_Money) isExplanationOfBenefit_BenefitBalance_Benefit_Used_Used() {
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) GetUsed() isExplanationOfBenefit_BenefitBalance_Benefit_Used_Used {
	if m != nil {
		return m.Used
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetUsed().(*ExplanationOfBenefit_BenefitBalance_Benefit_Used_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *ExplanationOfBenefit_BenefitBalance_Benefit_Used) GetMoney() *Money {
	if x, ok := m.GetUsed().(*ExplanationOfBenefit_BenefitBalance_Benefit_Used_Money); ok {
		return x.Money
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExplanationOfBenefit_BenefitBalance_Benefit_Used) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExplanationOfBenefit_BenefitBalance_Benefit_Used_OneofMarshaler, _ExplanationOfBenefit_BenefitBalance_Benefit_Used_OneofUnmarshaler, _ExplanationOfBenefit_BenefitBalance_Benefit_Used_OneofSizer, []interface{}{
		(*ExplanationOfBenefit_BenefitBalance_Benefit_Used_UnsignedInt)(nil),
		(*ExplanationOfBenefit_BenefitBalance_Benefit_Used_Money)(nil),
	}
}

func _ExplanationOfBenefit_BenefitBalance_Benefit_Used_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExplanationOfBenefit_BenefitBalance_Benefit_Used)
	// used
	switch x := m.Used.(type) {
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Used_UnsignedInt:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Used_Money:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExplanationOfBenefit_BenefitBalance_Benefit_Used.Used has unexpected type %T", x)
	}
	return nil
}

func _ExplanationOfBenefit_BenefitBalance_Benefit_Used_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExplanationOfBenefit_BenefitBalance_Benefit_Used)
	switch tag {
	case 1: // used.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.Used = &ExplanationOfBenefit_BenefitBalance_Benefit_Used_UnsignedInt{msg}
		return true, err
	case 2: // used.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.Used = &ExplanationOfBenefit_BenefitBalance_Benefit_Used_Money{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExplanationOfBenefit_BenefitBalance_Benefit_Used_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExplanationOfBenefit_BenefitBalance_Benefit_Used)
	// used
	switch x := m.Used.(type) {
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Used_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExplanationOfBenefit_BenefitBalance_Benefit_Used_Money:
		s := proto.Size(x.Money)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for FamilyMemberHistory, last updated
// 2017-04-19T07:44:43.294+10:00. Information about patient's relatives,
// relevant for patient. See
// http://hl7.org/fhir/StructureDefinition/FamilyMemberHistory
type FamilyMemberHistory struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Id(s) for this record
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Instantiates protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// partial | completed | entered-in-error | health-unknown
	Status *FamilyHistoryStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// The taking of a family member's history did not occur
	NotDone *Boolean `protobuf:"bytes,12,opt,name=not_done,json=notDone,proto3" json:"not_done,omitempty"`
	// subject-unknown | withheld | unable-to-obtain | deferred
	NotDoneReason *CodeableConcept `protobuf:"bytes,13,opt,name=not_done_reason,json=notDoneReason,proto3" json:"not_done_reason,omitempty"`
	// Patient history is about
	Patient *Reference `protobuf:"bytes,14,opt,name=patient,proto3" json:"patient,omitempty"`
	// When history was captured/updated
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// The family member described
	Name *String `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	// Relationship to the subject
	Relationship *CodeableConcept `protobuf:"bytes,17,opt,name=relationship,proto3" json:"relationship,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode    `protobuf:"bytes,18,opt,name=gender,proto3" json:"gender,omitempty"`
	Born   *FamilyMemberHistory_Born    `protobuf:"bytes,19,opt,name=born,proto3" json:"born,omitempty"`
	Age    *FamilyMemberHistory_AgeType `protobuf:"bytes,20,opt,name=age,proto3" json:"age,omitempty"`
	// Age is estimated?
	EstimatedAge *Boolean                      `protobuf:"bytes,21,opt,name=estimated_age,json=estimatedAge,proto3" json:"estimated_age,omitempty"`
	Deceased     *FamilyMemberHistory_Deceased `protobuf:"bytes,22,opt,name=deceased,proto3" json:"deceased,omitempty"`
	// Why was family member history performed?
	ReasonCode []*CodeableConcept `protobuf:"bytes,23,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Why was family member history performed?
	ReasonReference []*Reference `protobuf:"bytes,24,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// General note about related person
	Note                 []*Annotation                    `protobuf:"bytes,25,rep,name=note,proto3" json:"note,omitempty"`
	Condition            []*FamilyMemberHistory_Condition `protobuf:"bytes,26,rep,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *FamilyMemberHistory) Reset()         { *m = FamilyMemberHistory{} }
func (m *FamilyMemberHistory) String() string { return proto.CompactTextString(m) }
func (*FamilyMemberHistory) ProtoMessage()    {}
func (*FamilyMemberHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{47}
}

func (m *FamilyMemberHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilyMemberHistory.Unmarshal(m, b)
}
func (m *FamilyMemberHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilyMemberHistory.Marshal(b, m, deterministic)
}
func (m *FamilyMemberHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilyMemberHistory.Merge(m, src)
}
func (m *FamilyMemberHistory) XXX_Size() int {
	return xxx_messageInfo_FamilyMemberHistory.Size(m)
}
func (m *FamilyMemberHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilyMemberHistory.DiscardUnknown(m)
}

var xxx_messageInfo_FamilyMemberHistory proto.InternalMessageInfo

func (m *FamilyMemberHistory) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *FamilyMemberHistory) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *FamilyMemberHistory) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *FamilyMemberHistory) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *FamilyMemberHistory) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *FamilyMemberHistory) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *FamilyMemberHistory) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *FamilyMemberHistory) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *FamilyMemberHistory) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *FamilyMemberHistory) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *FamilyMemberHistory) GetStatus() *FamilyHistoryStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *FamilyMemberHistory) GetNotDone() *Boolean {
	if m != nil {
		return m.NotDone
	}
	return nil
}

func (m *FamilyMemberHistory) GetNotDoneReason() *CodeableConcept {
	if m != nil {
		return m.NotDoneReason
	}
	return nil
}

func (m *FamilyMemberHistory) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *FamilyMemberHistory) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *FamilyMemberHistory) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *FamilyMemberHistory) GetRelationship() *CodeableConcept {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *FamilyMemberHistory) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *FamilyMemberHistory) GetBorn() *FamilyMemberHistory_Born {
	if m != nil {
		return m.Born
	}
	return nil
}

func (m *FamilyMemberHistory) GetAge() *FamilyMemberHistory_AgeType {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *FamilyMemberHistory) GetEstimatedAge() *Boolean {
	if m != nil {
		return m.EstimatedAge
	}
	return nil
}

func (m *FamilyMemberHistory) GetDeceased() *FamilyMemberHistory_Deceased {
	if m != nil {
		return m.Deceased
	}
	return nil
}

func (m *FamilyMemberHistory) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *FamilyMemberHistory) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *FamilyMemberHistory) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *FamilyMemberHistory) GetCondition() []*FamilyMemberHistory_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

// (approximate) date of birth
type FamilyMemberHistory_Born struct {
	// Types that are valid to be assigned to Born:
	//	*FamilyMemberHistory_Born_Period
	//	*FamilyMemberHistory_Born_Date
	//	*FamilyMemberHistory_Born_StringValue
	Born                 isFamilyMemberHistory_Born_Born `protobuf_oneof:"born"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *FamilyMemberHistory_Born) Reset()         { *m = FamilyMemberHistory_Born{} }
func (m *FamilyMemberHistory_Born) String() string { return proto.CompactTextString(m) }
func (*FamilyMemberHistory_Born) ProtoMessage()    {}
func (*FamilyMemberHistory_Born) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{47, 0}
}

func (m *FamilyMemberHistory_Born) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilyMemberHistory_Born.Unmarshal(m, b)
}
func (m *FamilyMemberHistory_Born) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilyMemberHistory_Born.Marshal(b, m, deterministic)
}
func (m *FamilyMemberHistory_Born) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilyMemberHistory_Born.Merge(m, src)
}
func (m *FamilyMemberHistory_Born) XXX_Size() int {
	return xxx_messageInfo_FamilyMemberHistory_Born.Size(m)
}
func (m *FamilyMemberHistory_Born) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilyMemberHistory_Born.DiscardUnknown(m)
}

var xxx_messageInfo_FamilyMemberHistory_Born proto.InternalMessageInfo

type isFamilyMemberHistory_Born_Born interface {
	isFamilyMemberHistory_Born_Born()
}

type FamilyMemberHistory_Born_Period struct {
	Period *Period `protobuf:"bytes,1,opt,name=period,proto3,oneof"`
}

type FamilyMemberHistory_Born_Date struct {
	Date *Date `protobuf:"bytes,2,opt,name=date,proto3,oneof"`
}

type FamilyMemberHistory_Born_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

func (*FamilyMemberHistory_Born_Period) isFamilyMemberHistory_Born_Born() {}

func (*FamilyMemberHistory_Born_Date) isFamilyMemberHistory_Born_Born() {}

func (*FamilyMemberHistory_Born_StringValue) isFamilyMemberHistory_Born_Born() {}

func (m *FamilyMemberHistory_Born) GetBorn() isFamilyMemberHistory_Born_Born {
	if m != nil {
		return m.Born
	}
	return nil
}

func (m *FamilyMemberHistory_Born) GetPeriod() *Period {
	if x, ok := m.GetBorn().(*FamilyMemberHistory_Born_Period); ok {
		return x.Period
	}
	return nil
}

func (m *FamilyMemberHistory_Born) GetDate() *Date {
	if x, ok := m.GetBorn().(*FamilyMemberHistory_Born_Date); ok {
		return x.Date
	}
	return nil
}

func (m *FamilyMemberHistory_Born) GetStringValue() *String {
	if x, ok := m.GetBorn().(*FamilyMemberHistory_Born_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FamilyMemberHistory_Born) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FamilyMemberHistory_Born_OneofMarshaler, _FamilyMemberHistory_Born_OneofUnmarshaler, _FamilyMemberHistory_Born_OneofSizer, []interface{}{
		(*FamilyMemberHistory_Born_Period)(nil),
		(*FamilyMemberHistory_Born_Date)(nil),
		(*FamilyMemberHistory_Born_StringValue)(nil),
	}
}

func _FamilyMemberHistory_Born_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FamilyMemberHistory_Born)
	// born
	switch x := m.Born.(type) {
	case *FamilyMemberHistory_Born_Period:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *FamilyMemberHistory_Born_Date:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *FamilyMemberHistory_Born_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FamilyMemberHistory_Born.Born has unexpected type %T", x)
	}
	return nil
}

func _FamilyMemberHistory_Born_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FamilyMemberHistory_Born)
	switch tag {
	case 1: // born.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Born = &FamilyMemberHistory_Born_Period{msg}
		return true, err
	case 2: // born.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Born = &FamilyMemberHistory_Born_Date{msg}
		return true, err
	case 3: // born.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Born = &FamilyMemberHistory_Born_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FamilyMemberHistory_Born_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FamilyMemberHistory_Born)
	// born
	switch x := m.Born.(type) {
	case *FamilyMemberHistory_Born_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_Born_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_Born_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// (approximate) age
type FamilyMemberHistory_AgeType struct {
	// Types that are valid to be assigned to Age:
	//	*FamilyMemberHistory_AgeType_AgeValue
	//	*FamilyMemberHistory_AgeType_Range
	//	*FamilyMemberHistory_AgeType_StringValue
	Age                  isFamilyMemberHistory_AgeType_Age `protobuf_oneof:"age"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *FamilyMemberHistory_AgeType) Reset()         { *m = FamilyMemberHistory_AgeType{} }
func (m *FamilyMemberHistory_AgeType) String() string { return proto.CompactTextString(m) }
func (*FamilyMemberHistory_AgeType) ProtoMessage()    {}
func (*FamilyMemberHistory_AgeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{47, 1}
}

func (m *FamilyMemberHistory_AgeType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilyMemberHistory_AgeType.Unmarshal(m, b)
}
func (m *FamilyMemberHistory_AgeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilyMemberHistory_AgeType.Marshal(b, m, deterministic)
}
func (m *FamilyMemberHistory_AgeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilyMemberHistory_AgeType.Merge(m, src)
}
func (m *FamilyMemberHistory_AgeType) XXX_Size() int {
	return xxx_messageInfo_FamilyMemberHistory_AgeType.Size(m)
}
func (m *FamilyMemberHistory_AgeType) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilyMemberHistory_AgeType.DiscardUnknown(m)
}

var xxx_messageInfo_FamilyMemberHistory_AgeType proto.InternalMessageInfo

type isFamilyMemberHistory_AgeType_Age interface {
	isFamilyMemberHistory_AgeType_Age()
}

type FamilyMemberHistory_AgeType_AgeValue struct {
	AgeValue *Age `protobuf:"bytes,1,opt,name=age_value,json=age,proto3,oneof"`
}

type FamilyMemberHistory_AgeType_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

type FamilyMemberHistory_AgeType_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

func (*FamilyMemberHistory_AgeType_AgeValue) isFamilyMemberHistory_AgeType_Age() {}

func (*FamilyMemberHistory_AgeType_Range) isFamilyMemberHistory_AgeType_Age() {}

func (*FamilyMemberHistory_AgeType_StringValue) isFamilyMemberHistory_AgeType_Age() {}

func (m *FamilyMemberHistory_AgeType) GetAge() isFamilyMemberHistory_AgeType_Age {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *FamilyMemberHistory_AgeType) GetAgeValue() *Age {
	if x, ok := m.GetAge().(*FamilyMemberHistory_AgeType_AgeValue); ok {
		return x.AgeValue
	}
	return nil
}

func (m *FamilyMemberHistory_AgeType) GetRange() *Range {
	if x, ok := m.GetAge().(*FamilyMemberHistory_AgeType_Range); ok {
		return x.Range
	}
	return nil
}

func (m *FamilyMemberHistory_AgeType) GetStringValue() *String {
	if x, ok := m.GetAge().(*FamilyMemberHistory_AgeType_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FamilyMemberHistory_AgeType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FamilyMemberHistory_AgeType_OneofMarshaler, _FamilyMemberHistory_AgeType_OneofUnmarshaler, _FamilyMemberHistory_AgeType_OneofSizer, []interface{}{
		(*FamilyMemberHistory_AgeType_AgeValue)(nil),
		(*FamilyMemberHistory_AgeType_Range)(nil),
		(*FamilyMemberHistory_AgeType_StringValue)(nil),
	}
}

func _FamilyMemberHistory_AgeType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FamilyMemberHistory_AgeType)
	// age
	switch x := m.Age.(type) {
	case *FamilyMemberHistory_AgeType_AgeValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AgeValue); err != nil {
			return err
		}
	case *FamilyMemberHistory_AgeType_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *FamilyMemberHistory_AgeType_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FamilyMemberHistory_AgeType.Age has unexpected type %T", x)
	}
	return nil
}

func _FamilyMemberHistory_AgeType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FamilyMemberHistory_AgeType)
	switch tag {
	case 1: // age.age_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Age = &FamilyMemberHistory_AgeType_AgeValue{msg}
		return true, err
	case 2: // age.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Age = &FamilyMemberHistory_AgeType_Range{msg}
		return true, err
	case 3: // age.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Age = &FamilyMemberHistory_AgeType_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FamilyMemberHistory_AgeType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FamilyMemberHistory_AgeType)
	// age
	switch x := m.Age.(type) {
	case *FamilyMemberHistory_AgeType_AgeValue:
		s := proto.Size(x.AgeValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_AgeType_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_AgeType_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Dead? How old/when?
type FamilyMemberHistory_Deceased struct {
	// Types that are valid to be assigned to Deceased:
	//	*FamilyMemberHistory_Deceased_Boolean
	//	*FamilyMemberHistory_Deceased_Age
	//	*FamilyMemberHistory_Deceased_Range
	//	*FamilyMemberHistory_Deceased_Date
	//	*FamilyMemberHistory_Deceased_StringValue
	Deceased             isFamilyMemberHistory_Deceased_Deceased `protobuf_oneof:"deceased"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *FamilyMemberHistory_Deceased) Reset()         { *m = FamilyMemberHistory_Deceased{} }
func (m *FamilyMemberHistory_Deceased) String() string { return proto.CompactTextString(m) }
func (*FamilyMemberHistory_Deceased) ProtoMessage()    {}
func (*FamilyMemberHistory_Deceased) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{47, 2}
}

func (m *FamilyMemberHistory_Deceased) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilyMemberHistory_Deceased.Unmarshal(m, b)
}
func (m *FamilyMemberHistory_Deceased) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilyMemberHistory_Deceased.Marshal(b, m, deterministic)
}
func (m *FamilyMemberHistory_Deceased) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilyMemberHistory_Deceased.Merge(m, src)
}
func (m *FamilyMemberHistory_Deceased) XXX_Size() int {
	return xxx_messageInfo_FamilyMemberHistory_Deceased.Size(m)
}
func (m *FamilyMemberHistory_Deceased) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilyMemberHistory_Deceased.DiscardUnknown(m)
}

var xxx_messageInfo_FamilyMemberHistory_Deceased proto.InternalMessageInfo

type isFamilyMemberHistory_Deceased_Deceased interface {
	isFamilyMemberHistory_Deceased_Deceased()
}

type FamilyMemberHistory_Deceased_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type FamilyMemberHistory_Deceased_Age struct {
	Age *Age `protobuf:"bytes,2,opt,name=age,proto3,oneof"`
}

type FamilyMemberHistory_Deceased_Range struct {
	Range *Range `protobuf:"bytes,3,opt,name=range,proto3,oneof"`
}

type FamilyMemberHistory_Deceased_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type FamilyMemberHistory_Deceased_StringValue struct {
	StringValue *String `protobuf:"bytes,5,opt,name=string_value,json=string,proto3,oneof"`
}

func (*FamilyMemberHistory_Deceased_Boolean) isFamilyMemberHistory_Deceased_Deceased() {}

func (*FamilyMemberHistory_Deceased_Age) isFamilyMemberHistory_Deceased_Deceased() {}

func (*FamilyMemberHistory_Deceased_Range) isFamilyMemberHistory_Deceased_Deceased() {}

func (*FamilyMemberHistory_Deceased_Date) isFamilyMemberHistory_Deceased_Deceased() {}

func (*FamilyMemberHistory_Deceased_StringValue) isFamilyMemberHistory_Deceased_Deceased() {}

func (m *FamilyMemberHistory_Deceased) GetDeceased() isFamilyMemberHistory_Deceased_Deceased {
	if m != nil {
		return m.Deceased
	}
	return nil
}

func (m *FamilyMemberHistory_Deceased) GetBoolean() *Boolean {
	if x, ok := m.GetDeceased().(*FamilyMemberHistory_Deceased_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *FamilyMemberHistory_Deceased) GetAge() *Age {
	if x, ok := m.GetDeceased().(*FamilyMemberHistory_Deceased_Age); ok {
		return x.Age
	}
	return nil
}

func (m *FamilyMemberHistory_Deceased) GetRange() *Range {
	if x, ok := m.GetDeceased().(*FamilyMemberHistory_Deceased_Range); ok {
		return x.Range
	}
	return nil
}

func (m *FamilyMemberHistory_Deceased) GetDate() *Date {
	if x, ok := m.GetDeceased().(*FamilyMemberHistory_Deceased_Date); ok {
		return x.Date
	}
	return nil
}

func (m *FamilyMemberHistory_Deceased) GetStringValue() *String {
	if x, ok := m.GetDeceased().(*FamilyMemberHistory_Deceased_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FamilyMemberHistory_Deceased) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FamilyMemberHistory_Deceased_OneofMarshaler, _FamilyMemberHistory_Deceased_OneofUnmarshaler, _FamilyMemberHistory_Deceased_OneofSizer, []interface{}{
		(*FamilyMemberHistory_Deceased_Boolean)(nil),
		(*FamilyMemberHistory_Deceased_Age)(nil),
		(*FamilyMemberHistory_Deceased_Range)(nil),
		(*FamilyMemberHistory_Deceased_Date)(nil),
		(*FamilyMemberHistory_Deceased_StringValue)(nil),
	}
}

func _FamilyMemberHistory_Deceased_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FamilyMemberHistory_Deceased)
	// deceased
	switch x := m.Deceased.(type) {
	case *FamilyMemberHistory_Deceased_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *FamilyMemberHistory_Deceased_Age:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *FamilyMemberHistory_Deceased_Range:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *FamilyMemberHistory_Deceased_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *FamilyMemberHistory_Deceased_StringValue:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FamilyMemberHistory_Deceased.Deceased has unexpected type %T", x)
	}
	return nil
}

func _FamilyMemberHistory_Deceased_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FamilyMemberHistory_Deceased)
	switch tag {
	case 1: // deceased.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilyMemberHistory_Deceased_Boolean{msg}
		return true, err
	case 2: // deceased.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilyMemberHistory_Deceased_Age{msg}
		return true, err
	case 3: // deceased.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilyMemberHistory_Deceased_Range{msg}
		return true, err
	case 4: // deceased.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilyMemberHistory_Deceased_Date{msg}
		return true, err
	case 5: // deceased.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilyMemberHistory_Deceased_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FamilyMemberHistory_Deceased_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FamilyMemberHistory_Deceased)
	// deceased
	switch x := m.Deceased.(type) {
	case *FamilyMemberHistory_Deceased_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_Deceased_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_Deceased_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_Deceased_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_Deceased_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Condition that the related person had
type FamilyMemberHistory_Condition struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Condition suffered by relation
	Code *CodeableConcept `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// deceased | permanent disability | etc.
	Outcome *CodeableConcept                     `protobuf:"bytes,5,opt,name=outcome,proto3" json:"outcome,omitempty"`
	Onset   *FamilyMemberHistory_Condition_Onset `protobuf:"bytes,6,opt,name=onset,proto3" json:"onset,omitempty"`
	// Extra information about condition
	Note                 []*Annotation `protobuf:"bytes,7,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FamilyMemberHistory_Condition) Reset()         { *m = FamilyMemberHistory_Condition{} }
func (m *FamilyMemberHistory_Condition) String() string { return proto.CompactTextString(m) }
func (*FamilyMemberHistory_Condition) ProtoMessage()    {}
func (*FamilyMemberHistory_Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{47, 3}
}

func (m *FamilyMemberHistory_Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilyMemberHistory_Condition.Unmarshal(m, b)
}
func (m *FamilyMemberHistory_Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilyMemberHistory_Condition.Marshal(b, m, deterministic)
}
func (m *FamilyMemberHistory_Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilyMemberHistory_Condition.Merge(m, src)
}
func (m *FamilyMemberHistory_Condition) XXX_Size() int {
	return xxx_messageInfo_FamilyMemberHistory_Condition.Size(m)
}
func (m *FamilyMemberHistory_Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilyMemberHistory_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_FamilyMemberHistory_Condition proto.InternalMessageInfo

func (m *FamilyMemberHistory_Condition) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *FamilyMemberHistory_Condition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *FamilyMemberHistory_Condition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *FamilyMemberHistory_Condition) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *FamilyMemberHistory_Condition) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *FamilyMemberHistory_Condition) GetOnset() *FamilyMemberHistory_Condition_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *FamilyMemberHistory_Condition) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// When condition first manifested
type FamilyMemberHistory_Condition_Onset struct {
	// Types that are valid to be assigned to Onset:
	//	*FamilyMemberHistory_Condition_Onset_Age
	//	*FamilyMemberHistory_Condition_Onset_Range
	//	*FamilyMemberHistory_Condition_Onset_Period
	//	*FamilyMemberHistory_Condition_Onset_StringValue
	Onset                isFamilyMemberHistory_Condition_Onset_Onset `protobuf_oneof:"onset"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *FamilyMemberHistory_Condition_Onset) Reset()         { *m = FamilyMemberHistory_Condition_Onset{} }
func (m *FamilyMemberHistory_Condition_Onset) String() string { return proto.CompactTextString(m) }
func (*FamilyMemberHistory_Condition_Onset) ProtoMessage()    {}
func (*FamilyMemberHistory_Condition_Onset) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{47, 3, 0}
}

func (m *FamilyMemberHistory_Condition_Onset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilyMemberHistory_Condition_Onset.Unmarshal(m, b)
}
func (m *FamilyMemberHistory_Condition_Onset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilyMemberHistory_Condition_Onset.Marshal(b, m, deterministic)
}
func (m *FamilyMemberHistory_Condition_Onset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilyMemberHistory_Condition_Onset.Merge(m, src)
}
func (m *FamilyMemberHistory_Condition_Onset) XXX_Size() int {
	return xxx_messageInfo_FamilyMemberHistory_Condition_Onset.Size(m)
}
func (m *FamilyMemberHistory_Condition_Onset) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilyMemberHistory_Condition_Onset.DiscardUnknown(m)
}

var xxx_messageInfo_FamilyMemberHistory_Condition_Onset proto.InternalMessageInfo

type isFamilyMemberHistory_Condition_Onset_Onset interface {
	isFamilyMemberHistory_Condition_Onset_Onset()
}

type FamilyMemberHistory_Condition_Onset_Age struct {
	Age *Age `protobuf:"bytes,1,opt,name=age,proto3,oneof"`
}

type FamilyMemberHistory_Condition_Onset_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

type FamilyMemberHistory_Condition_Onset_Period struct {
	Period *Period `protobuf:"bytes,3,opt,name=period,proto3,oneof"`
}

type FamilyMemberHistory_Condition_Onset_StringValue struct {
	StringValue *String `protobuf:"bytes,4,opt,name=string_value,json=string,proto3,oneof"`
}

func (*FamilyMemberHistory_Condition_Onset_Age) isFamilyMemberHistory_Condition_Onset_Onset() {}

func (*FamilyMemberHistory_Condition_Onset_Range) isFamilyMemberHistory_Condition_Onset_Onset() {}

func (*FamilyMemberHistory_Condition_Onset_Period) isFamilyMemberHistory_Condition_Onset_Onset() {}

func (*FamilyMemberHistory_Condition_Onset_StringValue) isFamilyMemberHistory_Condition_Onset_Onset() {
}

func (m *FamilyMemberHistory_Condition_Onset) GetOnset() isFamilyMemberHistory_Condition_Onset_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *FamilyMemberHistory_Condition_Onset) GetAge() *Age {
	if x, ok := m.GetOnset().(*FamilyMemberHistory_Condition_Onset_Age); ok {
		return x.Age
	}
	return nil
}

func (m *FamilyMemberHistory_Condition_Onset) GetRange() *Range {
	if x, ok := m.GetOnset().(*FamilyMemberHistory_Condition_Onset_Range); ok {
		return x.Range
	}
	return nil
}

func (m *FamilyMemberHistory_Condition_Onset) GetPeriod() *Period {
	if x, ok := m.GetOnset().(*FamilyMemberHistory_Condition_Onset_Period); ok {
		return x.Period
	}
	return nil
}

func (m *FamilyMemberHistory_Condition_Onset) GetStringValue() *String {
	if x, ok := m.GetOnset().(*FamilyMemberHistory_Condition_Onset_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FamilyMemberHistory_Condition_Onset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FamilyMemberHistory_Condition_Onset_OneofMarshaler, _FamilyMemberHistory_Condition_Onset_OneofUnmarshaler, _FamilyMemberHistory_Condition_Onset_OneofSizer, []interface{}{
		(*FamilyMemberHistory_Condition_Onset_Age)(nil),
		(*FamilyMemberHistory_Condition_Onset_Range)(nil),
		(*FamilyMemberHistory_Condition_Onset_Period)(nil),
		(*FamilyMemberHistory_Condition_Onset_StringValue)(nil),
	}
}

func _FamilyMemberHistory_Condition_Onset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FamilyMemberHistory_Condition_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *FamilyMemberHistory_Condition_Onset_Age:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *FamilyMemberHistory_Condition_Onset_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *FamilyMemberHistory_Condition_Onset_Period:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *FamilyMemberHistory_Condition_Onset_StringValue:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FamilyMemberHistory_Condition_Onset.Onset has unexpected type %T", x)
	}
	return nil
}

func _FamilyMemberHistory_Condition_Onset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FamilyMemberHistory_Condition_Onset)
	switch tag {
	case 1: // onset.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Onset = &FamilyMemberHistory_Condition_Onset_Age{msg}
		return true, err
	case 2: // onset.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Onset = &FamilyMemberHistory_Condition_Onset_Range{msg}
		return true, err
	case 3: // onset.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Onset = &FamilyMemberHistory_Condition_Onset_Period{msg}
		return true, err
	case 4: // onset.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Onset = &FamilyMemberHistory_Condition_Onset_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FamilyMemberHistory_Condition_Onset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FamilyMemberHistory_Condition_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *FamilyMemberHistory_Condition_Onset_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_Condition_Onset_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_Condition_Onset_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilyMemberHistory_Condition_Onset_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Flag, last updated
// 2017-04-19T07:44:43.294+10:00. Key information to flag to healthcare
// providers. See http://hl7.org/fhir/StructureDefinition/Flag
type Flag struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | inactive | entered-in-error
	Status *FlagStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Clinical, administrative, etc.
	Category *CodeableConcept `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`
	// Coded or textual message to display to user
	Code *CodeableConcept `protobuf:"bytes,12,opt,name=code,proto3" json:"code,omitempty"`
	// Who/What is flag about?
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// Time period when flag is active
	Period *Period `protobuf:"bytes,14,opt,name=period,proto3" json:"period,omitempty"`
	// Alert relevant during encounter
	Encounter *Reference `protobuf:"bytes,15,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// Flag creator
	Author               *Reference `protobuf:"bytes,16,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Flag) Reset()         { *m = Flag{} }
func (m *Flag) String() string { return proto.CompactTextString(m) }
func (*Flag) ProtoMessage()    {}
func (*Flag) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{48}
}

func (m *Flag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flag.Unmarshal(m, b)
}
func (m *Flag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flag.Marshal(b, m, deterministic)
}
func (m *Flag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flag.Merge(m, src)
}
func (m *Flag) XXX_Size() int {
	return xxx_messageInfo_Flag.Size(m)
}
func (m *Flag) XXX_DiscardUnknown() {
	xxx_messageInfo_Flag.DiscardUnknown(m)
}

var xxx_messageInfo_Flag proto.InternalMessageInfo

func (m *Flag) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Flag) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Flag) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Flag) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Flag) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Flag) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Flag) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Flag) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Flag) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Flag) GetStatus() *FlagStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Flag) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Flag) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Flag) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Flag) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Flag) GetEncounter() *Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *Flag) GetAuthor() *Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

// Auto-generated from StructureDefinition for Goal, last updated
// 2017-04-19T07:44:43.294+10:00. Describes the intended objective(s) for a
// patient, group or organization. See
// http://hl7.org/fhir/StructureDefinition/Goal
type Goal struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this goal
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// proposed | accepted | planned | in-progress | on-target | ahead-of-target |
	// behind-target | sustaining | achieved | on-hold | cancelled |
	// entered-in-error | rejected
	Status *GoalStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// E.g. Treatment, dietary, behavioral, etc.
	Category []*CodeableConcept `protobuf:"bytes,11,rep,name=category,proto3" json:"category,omitempty"`
	// high-priority | medium-priority | low-priority
	Priority *CodeableConcept `protobuf:"bytes,12,opt,name=priority,proto3" json:"priority,omitempty"`
	// Code or text describing goal
	Description *CodeableConcept `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// Who this goal is intended for
	Subject *Reference   `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	Start   *Goal_Start  `protobuf:"bytes,15,opt,name=start,proto3" json:"start,omitempty"`
	Target  *Goal_Target `protobuf:"bytes,16,opt,name=target,proto3" json:"target,omitempty"`
	// When goal status took effect
	StatusDate *Date `protobuf:"bytes,17,opt,name=status_date,json=statusDate,proto3" json:"status_date,omitempty"`
	// Reason for current status
	StatusReason *String `protobuf:"bytes,18,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	// Who's responsible for creating Goal?
	ExpressedBy *Reference `protobuf:"bytes,19,opt,name=expressed_by,json=expressedBy,proto3" json:"expressed_by,omitempty"`
	// Issues addressed by this goal
	Addresses []*Reference `protobuf:"bytes,20,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// Comments about the goal
	Note []*Annotation `protobuf:"bytes,21,rep,name=note,proto3" json:"note,omitempty"`
	// What result was achieved regarding the goal?
	OutcomeCode []*CodeableConcept `protobuf:"bytes,22,rep,name=outcome_code,json=outcomeCode,proto3" json:"outcome_code,omitempty"`
	// Observation that resulted from goal
	OutcomeReference     []*Reference `protobuf:"bytes,23,rep,name=outcome_reference,json=outcomeReference,proto3" json:"outcome_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Goal) Reset()         { *m = Goal{} }
func (m *Goal) String() string { return proto.CompactTextString(m) }
func (*Goal) ProtoMessage()    {}
func (*Goal) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{49}
}

func (m *Goal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goal.Unmarshal(m, b)
}
func (m *Goal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goal.Marshal(b, m, deterministic)
}
func (m *Goal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goal.Merge(m, src)
}
func (m *Goal) XXX_Size() int {
	return xxx_messageInfo_Goal.Size(m)
}
func (m *Goal) XXX_DiscardUnknown() {
	xxx_messageInfo_Goal.DiscardUnknown(m)
}

var xxx_messageInfo_Goal proto.InternalMessageInfo

func (m *Goal) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Goal) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Goal) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Goal) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Goal) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Goal) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Goal) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Goal) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Goal) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Goal) GetStatus() *GoalStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Goal) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Goal) GetPriority() *CodeableConcept {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *Goal) GetDescription() *CodeableConcept {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Goal) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Goal) GetStart() *Goal_Start {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Goal) GetTarget() *Goal_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Goal) GetStatusDate() *Date {
	if m != nil {
		return m.StatusDate
	}
	return nil
}

func (m *Goal) GetStatusReason() *String {
	if m != nil {
		return m.StatusReason
	}
	return nil
}

func (m *Goal) GetExpressedBy() *Reference {
	if m != nil {
		return m.ExpressedBy
	}
	return nil
}

func (m *Goal) GetAddresses() []*Reference {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *Goal) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *Goal) GetOutcomeCode() []*CodeableConcept {
	if m != nil {
		return m.OutcomeCode
	}
	return nil
}

func (m *Goal) GetOutcomeReference() []*Reference {
	if m != nil {
		return m.OutcomeReference
	}
	return nil
}

// When goal pursuit begins
type Goal_Start struct {
	// Types that are valid to be assigned to Start:
	//	*Goal_Start_Date
	//	*Goal_Start_CodeableConcept
	Start                isGoal_Start_Start `protobuf_oneof:"start"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Goal_Start) Reset()         { *m = Goal_Start{} }
func (m *Goal_Start) String() string { return proto.CompactTextString(m) }
func (*Goal_Start) ProtoMessage()    {}
func (*Goal_Start) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{49, 0}
}

func (m *Goal_Start) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goal_Start.Unmarshal(m, b)
}
func (m *Goal_Start) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goal_Start.Marshal(b, m, deterministic)
}
func (m *Goal_Start) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goal_Start.Merge(m, src)
}
func (m *Goal_Start) XXX_Size() int {
	return xxx_messageInfo_Goal_Start.Size(m)
}
func (m *Goal_Start) XXX_DiscardUnknown() {
	xxx_messageInfo_Goal_Start.DiscardUnknown(m)
}

var xxx_messageInfo_Goal_Start proto.InternalMessageInfo

type isGoal_Start_Start interface {
	isGoal_Start_Start()
}

type Goal_Start_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type Goal_Start_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*Goal_Start_Date) isGoal_Start_Start() {}

func (*Goal_Start_CodeableConcept) isGoal_Start_Start() {}

func (m *Goal_Start) GetStart() isGoal_Start_Start {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Goal_Start) GetDate() *Date {
	if x, ok := m.GetStart().(*Goal_Start_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Goal_Start) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetStart().(*Goal_Start_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Goal_Start) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Goal_Start_OneofMarshaler, _Goal_Start_OneofUnmarshaler, _Goal_Start_OneofSizer, []interface{}{
		(*Goal_Start_Date)(nil),
		(*Goal_Start_CodeableConcept)(nil),
	}
}

func _Goal_Start_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Goal_Start)
	// start
	switch x := m.Start.(type) {
	case *Goal_Start_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Goal_Start_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Goal_Start.Start has unexpected type %T", x)
	}
	return nil
}

func _Goal_Start_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Goal_Start)
	switch tag {
	case 1: // start.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Start = &Goal_Start_Date{msg}
		return true, err
	case 2: // start.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Start = &Goal_Start_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Goal_Start_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Goal_Start)
	// start
	switch x := m.Start.(type) {
	case *Goal_Start_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Goal_Start_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Target outcome for the goal
type Goal_Target struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The parameter whose value is being tracked
	Measure              *CodeableConcept    `protobuf:"bytes,4,opt,name=measure,proto3" json:"measure,omitempty"`
	Detail               *Goal_Target_Detail `protobuf:"bytes,5,opt,name=detail,proto3" json:"detail,omitempty"`
	Due                  *Goal_Target_Due    `protobuf:"bytes,6,opt,name=due,proto3" json:"due,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Goal_Target) Reset()         { *m = Goal_Target{} }
func (m *Goal_Target) String() string { return proto.CompactTextString(m) }
func (*Goal_Target) ProtoMessage()    {}
func (*Goal_Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{49, 1}
}

func (m *Goal_Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goal_Target.Unmarshal(m, b)
}
func (m *Goal_Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goal_Target.Marshal(b, m, deterministic)
}
func (m *Goal_Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goal_Target.Merge(m, src)
}
func (m *Goal_Target) XXX_Size() int {
	return xxx_messageInfo_Goal_Target.Size(m)
}
func (m *Goal_Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Goal_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Goal_Target proto.InternalMessageInfo

func (m *Goal_Target) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Goal_Target) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Goal_Target) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Goal_Target) GetMeasure() *CodeableConcept {
	if m != nil {
		return m.Measure
	}
	return nil
}

func (m *Goal_Target) GetDetail() *Goal_Target_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *Goal_Target) GetDue() *Goal_Target_Due {
	if m != nil {
		return m.Due
	}
	return nil
}

// The target value to be achieved
type Goal_Target_Detail struct {
	// Types that are valid to be assigned to Detail:
	//	*Goal_Target_Detail_Quantity
	//	*Goal_Target_Detail_Range
	//	*Goal_Target_Detail_CodeableConcept
	Detail               isGoal_Target_Detail_Detail `protobuf_oneof:"detail"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Goal_Target_Detail) Reset()         { *m = Goal_Target_Detail{} }
func (m *Goal_Target_Detail) String() string { return proto.CompactTextString(m) }
func (*Goal_Target_Detail) ProtoMessage()    {}
func (*Goal_Target_Detail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{49, 1, 0}
}

func (m *Goal_Target_Detail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goal_Target_Detail.Unmarshal(m, b)
}
func (m *Goal_Target_Detail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goal_Target_Detail.Marshal(b, m, deterministic)
}
func (m *Goal_Target_Detail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goal_Target_Detail.Merge(m, src)
}
func (m *Goal_Target_Detail) XXX_Size() int {
	return xxx_messageInfo_Goal_Target_Detail.Size(m)
}
func (m *Goal_Target_Detail) XXX_DiscardUnknown() {
	xxx_messageInfo_Goal_Target_Detail.DiscardUnknown(m)
}

var xxx_messageInfo_Goal_Target_Detail proto.InternalMessageInfo

type isGoal_Target_Detail_Detail interface {
	isGoal_Target_Detail_Detail()
}

type Goal_Target_Detail_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Goal_Target_Detail_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

type Goal_Target_Detail_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,3,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*Goal_Target_Detail_Quantity) isGoal_Target_Detail_Detail() {}

func (*Goal_Target_Detail_Range) isGoal_Target_Detail_Detail() {}

func (*Goal_Target_Detail_CodeableConcept) isGoal_Target_Detail_Detail() {}

func (m *Goal_Target_Detail) GetDetail() isGoal_Target_Detail_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *Goal_Target_Detail) GetQuantity() *Quantity {
	if x, ok := m.GetDetail().(*Goal_Target_Detail_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Goal_Target_Detail) GetRange() *Range {
	if x, ok := m.GetDetail().(*Goal_Target_Detail_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Goal_Target_Detail) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetDetail().(*Goal_Target_Detail_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Goal_Target_Detail) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Goal_Target_Detail_OneofMarshaler, _Goal_Target_Detail_OneofUnmarshaler, _Goal_Target_Detail_OneofSizer, []interface{}{
		(*Goal_Target_Detail_Quantity)(nil),
		(*Goal_Target_Detail_Range)(nil),
		(*Goal_Target_Detail_CodeableConcept)(nil),
	}
}

func _Goal_Target_Detail_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Goal_Target_Detail)
	// detail
	switch x := m.Detail.(type) {
	case *Goal_Target_Detail_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Goal_Target_Detail_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Goal_Target_Detail_CodeableConcept:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Goal_Target_Detail.Detail has unexpected type %T", x)
	}
	return nil
}

func _Goal_Target_Detail_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Goal_Target_Detail)
	switch tag {
	case 1: // detail.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Detail = &Goal_Target_Detail_Quantity{msg}
		return true, err
	case 2: // detail.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Detail = &Goal_Target_Detail_Range{msg}
		return true, err
	case 3: // detail.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Detail = &Goal_Target_Detail_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Goal_Target_Detail_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Goal_Target_Detail)
	// detail
	switch x := m.Detail.(type) {
	case *Goal_Target_Detail_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Goal_Target_Detail_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Goal_Target_Detail_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Reach goal on or before
type Goal_Target_Due struct {
	// Types that are valid to be assigned to Due:
	//	*Goal_Target_Due_Date
	//	*Goal_Target_Due_Duration
	Due                  isGoal_Target_Due_Due `protobuf_oneof:"due"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Goal_Target_Due) Reset()         { *m = Goal_Target_Due{} }
func (m *Goal_Target_Due) String() string { return proto.CompactTextString(m) }
func (*Goal_Target_Due) ProtoMessage()    {}
func (*Goal_Target_Due) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{49, 1, 1}
}

func (m *Goal_Target_Due) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goal_Target_Due.Unmarshal(m, b)
}
func (m *Goal_Target_Due) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goal_Target_Due.Marshal(b, m, deterministic)
}
func (m *Goal_Target_Due) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goal_Target_Due.Merge(m, src)
}
func (m *Goal_Target_Due) XXX_Size() int {
	return xxx_messageInfo_Goal_Target_Due.Size(m)
}
func (m *Goal_Target_Due) XXX_DiscardUnknown() {
	xxx_messageInfo_Goal_Target_Due.DiscardUnknown(m)
}

var xxx_messageInfo_Goal_Target_Due proto.InternalMessageInfo

type isGoal_Target_Due_Due interface {
	isGoal_Target_Due_Due()
}

type Goal_Target_Due_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type Goal_Target_Due_Duration struct {
	Duration *Duration `protobuf:"bytes,2,opt,name=duration,proto3,oneof"`
}

func (*Goal_Target_Due_Date) isGoal_Target_Due_Due() {}

func (*Goal_Target_Due_Duration) isGoal_Target_Due_Due() {}

func (m *Goal_Target_Due) GetDue() isGoal_Target_Due_Due {
	if m != nil {
		return m.Due
	}
	return nil
}

func (m *Goal_Target_Due) GetDate() *Date {
	if x, ok := m.GetDue().(*Goal_Target_Due_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Goal_Target_Due) GetDuration() *Duration {
	if x, ok := m.GetDue().(*Goal_Target_Due_Duration); ok {
		return x.Duration
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Goal_Target_Due) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Goal_Target_Due_OneofMarshaler, _Goal_Target_Due_OneofUnmarshaler, _Goal_Target_Due_OneofSizer, []interface{}{
		(*Goal_Target_Due_Date)(nil),
		(*Goal_Target_Due_Duration)(nil),
	}
}

func _Goal_Target_Due_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Goal_Target_Due)
	// due
	switch x := m.Due.(type) {
	case *Goal_Target_Due_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Goal_Target_Due_Duration:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Goal_Target_Due.Due has unexpected type %T", x)
	}
	return nil
}

func _Goal_Target_Due_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Goal_Target_Due)
	switch tag {
	case 1: // due.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Due = &Goal_Target_Due_Date{msg}
		return true, err
	case 2: // due.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Due = &Goal_Target_Due_Duration{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Goal_Target_Due_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Goal_Target_Due)
	// due
	switch x := m.Due.(type) {
	case *Goal_Target_Due_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Goal_Target_Due_Duration:
		s := proto.Size(x.Duration)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for GraphDefinition, last updated
// 2017-04-19T07:44:43.294+10:00. Definition of an graph of resources. See
// http://hl7.org/fhir/StructureDefinition/GraphDefinition
type GraphDefinition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this graph definition (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Business version of the graph definition
	Version *String `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this graph definition (computer friendly)
	Name *String `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,13,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,14,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,15,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,16,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the graph definition
	Description *Markdown `protobuf:"bytes,17,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,18,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for graph definition (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,19,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this graph definition is defined
	Purpose *Markdown `protobuf:"bytes,20,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Type of resource at which the graph starts
	Start *ResourceTypeCode `protobuf:"bytes,21,opt,name=start,proto3" json:"start,omitempty"`
	// Profile on base resource
	Profile              *Uri                    `protobuf:"bytes,22,opt,name=profile,proto3" json:"profile,omitempty"`
	Link                 []*GraphDefinition_Link `protobuf:"bytes,23,rep,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GraphDefinition) Reset()         { *m = GraphDefinition{} }
func (m *GraphDefinition) String() string { return proto.CompactTextString(m) }
func (*GraphDefinition) ProtoMessage()    {}
func (*GraphDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{50}
}

func (m *GraphDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphDefinition.Unmarshal(m, b)
}
func (m *GraphDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphDefinition.Marshal(b, m, deterministic)
}
func (m *GraphDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphDefinition.Merge(m, src)
}
func (m *GraphDefinition) XXX_Size() int {
	return xxx_messageInfo_GraphDefinition.Size(m)
}
func (m *GraphDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_GraphDefinition proto.InternalMessageInfo

func (m *GraphDefinition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GraphDefinition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *GraphDefinition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *GraphDefinition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *GraphDefinition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *GraphDefinition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *GraphDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *GraphDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *GraphDefinition) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *GraphDefinition) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *GraphDefinition) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *GraphDefinition) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GraphDefinition) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *GraphDefinition) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *GraphDefinition) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *GraphDefinition) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *GraphDefinition) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *GraphDefinition) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *GraphDefinition) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *GraphDefinition) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *GraphDefinition) GetStart() *ResourceTypeCode {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *GraphDefinition) GetProfile() *Uri {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *GraphDefinition) GetLink() []*GraphDefinition_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

// Links this graph makes rules about
type GraphDefinition_Link struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Path in the resource that contains the link
	Path *String `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// Which slice (if profiled)
	SliceName *String `protobuf:"bytes,5,opt,name=slice_name,json=sliceName,proto3" json:"slice_name,omitempty"`
	// Minimum occurrences for this link
	Min *Integer `protobuf:"bytes,6,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum occurrences for this link
	Max *String `protobuf:"bytes,7,opt,name=max,proto3" json:"max,omitempty"`
	// Why this link is specified
	Description          *String                        `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Target               []*GraphDefinition_Link_Target `protobuf:"bytes,9,rep,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *GraphDefinition_Link) Reset()         { *m = GraphDefinition_Link{} }
func (m *GraphDefinition_Link) String() string { return proto.CompactTextString(m) }
func (*GraphDefinition_Link) ProtoMessage()    {}
func (*GraphDefinition_Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{50, 0}
}

func (m *GraphDefinition_Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphDefinition_Link.Unmarshal(m, b)
}
func (m *GraphDefinition_Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphDefinition_Link.Marshal(b, m, deterministic)
}
func (m *GraphDefinition_Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphDefinition_Link.Merge(m, src)
}
func (m *GraphDefinition_Link) XXX_Size() int {
	return xxx_messageInfo_GraphDefinition_Link.Size(m)
}
func (m *GraphDefinition_Link) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphDefinition_Link.DiscardUnknown(m)
}

var xxx_messageInfo_GraphDefinition_Link proto.InternalMessageInfo

func (m *GraphDefinition_Link) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GraphDefinition_Link) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *GraphDefinition_Link) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *GraphDefinition_Link) GetPath() *String {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *GraphDefinition_Link) GetSliceName() *String {
	if m != nil {
		return m.SliceName
	}
	return nil
}

func (m *GraphDefinition_Link) GetMin() *Integer {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *GraphDefinition_Link) GetMax() *String {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *GraphDefinition_Link) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *GraphDefinition_Link) GetTarget() []*GraphDefinition_Link_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

// Potential target for the link
type GraphDefinition_Link_Target struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of resource this link refers to
	Type *ResourceTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Profile for the target resource
	Profile     *Uri                                       `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	Compartment []*GraphDefinition_Link_Target_Compartment `protobuf:"bytes,6,rep,name=compartment,proto3" json:"compartment,omitempty"`
	// Additional links from target resource
	Link                 []*GraphDefinition_Link `protobuf:"bytes,7,rep,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GraphDefinition_Link_Target) Reset()         { *m = GraphDefinition_Link_Target{} }
func (m *GraphDefinition_Link_Target) String() string { return proto.CompactTextString(m) }
func (*GraphDefinition_Link_Target) ProtoMessage()    {}
func (*GraphDefinition_Link_Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{50, 0, 0}
}

func (m *GraphDefinition_Link_Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphDefinition_Link_Target.Unmarshal(m, b)
}
func (m *GraphDefinition_Link_Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphDefinition_Link_Target.Marshal(b, m, deterministic)
}
func (m *GraphDefinition_Link_Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphDefinition_Link_Target.Merge(m, src)
}
func (m *GraphDefinition_Link_Target) XXX_Size() int {
	return xxx_messageInfo_GraphDefinition_Link_Target.Size(m)
}
func (m *GraphDefinition_Link_Target) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphDefinition_Link_Target.DiscardUnknown(m)
}

var xxx_messageInfo_GraphDefinition_Link_Target proto.InternalMessageInfo

func (m *GraphDefinition_Link_Target) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GraphDefinition_Link_Target) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *GraphDefinition_Link_Target) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *GraphDefinition_Link_Target) GetType() *ResourceTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *GraphDefinition_Link_Target) GetProfile() *Uri {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *GraphDefinition_Link_Target) GetCompartment() []*GraphDefinition_Link_Target_Compartment {
	if m != nil {
		return m.Compartment
	}
	return nil
}

func (m *GraphDefinition_Link_Target) GetLink() []*GraphDefinition_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

// Compartment Consistency Rules
type GraphDefinition_Link_Target_Compartment struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifies the compartment
	Code *CompartmentTypeCode `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// identical | matching | different | custom
	Rule *GraphCompartmentRuleCode `protobuf:"bytes,5,opt,name=rule,proto3" json:"rule,omitempty"`
	// Custom rule, as a FHIRPath expression
	Expression *String `protobuf:"bytes,6,opt,name=expression,proto3" json:"expression,omitempty"`
	// Documentation for FHIRPath expression
	Description          *String  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphDefinition_Link_Target_Compartment) Reset() {
	*m = GraphDefinition_Link_Target_Compartment{}
}
func (m *GraphDefinition_Link_Target_Compartment) String() string { return proto.CompactTextString(m) }
func (*GraphDefinition_Link_Target_Compartment) ProtoMessage()    {}
func (*GraphDefinition_Link_Target_Compartment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{50, 0, 0, 0}
}

func (m *GraphDefinition_Link_Target_Compartment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphDefinition_Link_Target_Compartment.Unmarshal(m, b)
}
func (m *GraphDefinition_Link_Target_Compartment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphDefinition_Link_Target_Compartment.Marshal(b, m, deterministic)
}
func (m *GraphDefinition_Link_Target_Compartment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphDefinition_Link_Target_Compartment.Merge(m, src)
}
func (m *GraphDefinition_Link_Target_Compartment) XXX_Size() int {
	return xxx_messageInfo_GraphDefinition_Link_Target_Compartment.Size(m)
}
func (m *GraphDefinition_Link_Target_Compartment) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphDefinition_Link_Target_Compartment.DiscardUnknown(m)
}

var xxx_messageInfo_GraphDefinition_Link_Target_Compartment proto.InternalMessageInfo

func (m *GraphDefinition_Link_Target_Compartment) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GraphDefinition_Link_Target_Compartment) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *GraphDefinition_Link_Target_Compartment) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *GraphDefinition_Link_Target_Compartment) GetCode() *CompartmentTypeCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *GraphDefinition_Link_Target_Compartment) GetRule() *GraphCompartmentRuleCode {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *GraphDefinition_Link_Target_Compartment) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

func (m *GraphDefinition_Link_Target_Compartment) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

// Auto-generated from StructureDefinition for Group, last updated
// 2017-04-19T07:44:43.294+10:00. Group of multiple entities. See
// http://hl7.org/fhir/StructureDefinition/Group
type Group struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique id
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this group's record is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// person | animal | practitioner | device | medication | substance
	Type *GroupTypeCode `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// Descriptive or actual
	Actual *Boolean `protobuf:"bytes,12,opt,name=actual,proto3" json:"actual,omitempty"`
	// Kind of Group members
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Label for Group
	Name *String `protobuf:"bytes,14,opt,name=name,proto3" json:"name,omitempty"`
	// Number of members
	Quantity             *UnsignedInt            `protobuf:"bytes,15,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Characteristic       []*Group_Characteristic `protobuf:"bytes,16,rep,name=characteristic,proto3" json:"characteristic,omitempty"`
	Member               []*Group_Member         `protobuf:"bytes,17,rep,name=member,proto3" json:"member,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{51}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Group) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Group) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Group) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Group) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Group) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Group) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Group) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Group) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Group) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Group) GetType() *GroupTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Group) GetActual() *Boolean {
	if m != nil {
		return m.Actual
	}
	return nil
}

func (m *Group) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Group) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Group) GetQuantity() *UnsignedInt {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Group) GetCharacteristic() []*Group_Characteristic {
	if m != nil {
		return m.Characteristic
	}
	return nil
}

func (m *Group) GetMember() []*Group_Member {
	if m != nil {
		return m.Member
	}
	return nil
}

// Trait of group members
type Group_Characteristic struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Kind of characteristic
	Code  *CodeableConcept            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Group_Characteristic_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Group includes or excludes
	Exclude *Boolean `protobuf:"bytes,6,opt,name=exclude,proto3" json:"exclude,omitempty"`
	// Period over which characteristic is tested
	Period               *Period  `protobuf:"bytes,7,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group_Characteristic) Reset()         { *m = Group_Characteristic{} }
func (m *Group_Characteristic) String() string { return proto.CompactTextString(m) }
func (*Group_Characteristic) ProtoMessage()    {}
func (*Group_Characteristic) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{51, 0}
}

func (m *Group_Characteristic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group_Characteristic.Unmarshal(m, b)
}
func (m *Group_Characteristic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group_Characteristic.Marshal(b, m, deterministic)
}
func (m *Group_Characteristic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group_Characteristic.Merge(m, src)
}
func (m *Group_Characteristic) XXX_Size() int {
	return xxx_messageInfo_Group_Characteristic.Size(m)
}
func (m *Group_Characteristic) XXX_DiscardUnknown() {
	xxx_messageInfo_Group_Characteristic.DiscardUnknown(m)
}

var xxx_messageInfo_Group_Characteristic proto.InternalMessageInfo

func (m *Group_Characteristic) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Group_Characteristic) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Group_Characteristic) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Group_Characteristic) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Group_Characteristic) GetValue() *Group_Characteristic_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Group_Characteristic) GetExclude() *Boolean {
	if m != nil {
		return m.Exclude
	}
	return nil
}

func (m *Group_Characteristic) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// Value held by characteristic
type Group_Characteristic_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Group_Characteristic_Value_CodeableConcept
	//	*Group_Characteristic_Value_Boolean
	//	*Group_Characteristic_Value_Quantity
	//	*Group_Characteristic_Value_Range
	Value                isGroup_Characteristic_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Group_Characteristic_Value) Reset()         { *m = Group_Characteristic_Value{} }
func (m *Group_Characteristic_Value) String() string { return proto.CompactTextString(m) }
func (*Group_Characteristic_Value) ProtoMessage()    {}
func (*Group_Characteristic_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{51, 0, 0}
}

func (m *Group_Characteristic_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group_Characteristic_Value.Unmarshal(m, b)
}
func (m *Group_Characteristic_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group_Characteristic_Value.Marshal(b, m, deterministic)
}
func (m *Group_Characteristic_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group_Characteristic_Value.Merge(m, src)
}
func (m *Group_Characteristic_Value) XXX_Size() int {
	return xxx_messageInfo_Group_Characteristic_Value.Size(m)
}
func (m *Group_Characteristic_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Group_Characteristic_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Group_Characteristic_Value proto.InternalMessageInfo

type isGroup_Characteristic_Value_Value interface {
	isGroup_Characteristic_Value_Value()
}

type Group_Characteristic_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Group_Characteristic_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type Group_Characteristic_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,3,opt,name=quantity,proto3,oneof"`
}

type Group_Characteristic_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

func (*Group_Characteristic_Value_CodeableConcept) isGroup_Characteristic_Value_Value() {}

func (*Group_Characteristic_Value_Boolean) isGroup_Characteristic_Value_Value() {}

func (*Group_Characteristic_Value_Quantity) isGroup_Characteristic_Value_Value() {}

func (*Group_Characteristic_Value_Range) isGroup_Characteristic_Value_Value() {}

func (m *Group_Characteristic_Value) GetValue() isGroup_Characteristic_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Group_Characteristic_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Group_Characteristic_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Group_Characteristic_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*Group_Characteristic_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Group_Characteristic_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Group_Characteristic_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Group_Characteristic_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Group_Characteristic_Value_Range); ok {
		return x.Range
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Group_Characteristic_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Group_Characteristic_Value_OneofMarshaler, _Group_Characteristic_Value_OneofUnmarshaler, _Group_Characteristic_Value_OneofSizer, []interface{}{
		(*Group_Characteristic_Value_CodeableConcept)(nil),
		(*Group_Characteristic_Value_Boolean)(nil),
		(*Group_Characteristic_Value_Quantity)(nil),
		(*Group_Characteristic_Value_Range)(nil),
	}
}

func _Group_Characteristic_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Group_Characteristic_Value)
	// value
	switch x := m.Value.(type) {
	case *Group_Characteristic_Value_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Group_Characteristic_Value_Boolean:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Group_Characteristic_Value_Quantity:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Group_Characteristic_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Group_Characteristic_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Group_Characteristic_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Group_Characteristic_Value)
	switch tag {
	case 1: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Group_Characteristic_Value_CodeableConcept{msg}
		return true, err
	case 2: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &Group_Characteristic_Value_Boolean{msg}
		return true, err
	case 3: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Group_Characteristic_Value_Quantity{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Group_Characteristic_Value_Range{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Group_Characteristic_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Group_Characteristic_Value)
	// value
	switch x := m.Value.(type) {
	case *Group_Characteristic_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Group_Characteristic_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Group_Characteristic_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Group_Characteristic_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who or what is in group
type Group_Member struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reference to the group member
	Entity *Reference `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	// Period member belonged to the group
	Period *Period `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	// If member is no longer in group
	Inactive             *Boolean `protobuf:"bytes,6,opt,name=inactive,proto3" json:"inactive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group_Member) Reset()         { *m = Group_Member{} }
func (m *Group_Member) String() string { return proto.CompactTextString(m) }
func (*Group_Member) ProtoMessage()    {}
func (*Group_Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{51, 1}
}

func (m *Group_Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group_Member.Unmarshal(m, b)
}
func (m *Group_Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group_Member.Marshal(b, m, deterministic)
}
func (m *Group_Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group_Member.Merge(m, src)
}
func (m *Group_Member) XXX_Size() int {
	return xxx_messageInfo_Group_Member.Size(m)
}
func (m *Group_Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Group_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Group_Member proto.InternalMessageInfo

func (m *Group_Member) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Group_Member) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Group_Member) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Group_Member) GetEntity() *Reference {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *Group_Member) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Group_Member) GetInactive() *Boolean {
	if m != nil {
		return m.Inactive
	}
	return nil
}

// Auto-generated from StructureDefinition for GuidanceResponse, last updated
// 2017-04-19T07:44:43.294+10:00. The formal response to a guidance request. See
// http://hl7.org/fhir/StructureDefinition/GuidanceResponse
type GuidanceResponse struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The id of the request associated with this response, if any
	RequestId *Id `protobuf:"bytes,9,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Business identifier
	Identifier *Identifier `protobuf:"bytes,10,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// A reference to a knowledge module
	Module *Reference `protobuf:"bytes,11,opt,name=module,proto3" json:"module,omitempty"`
	// success | data-requested | data-required | in-progress | failure |
	// entered-in-error
	Status *GuidanceResponseStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// Patient the request was performed for
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or Episode during which the response was returned
	Context *Reference `protobuf:"bytes,14,opt,name=context,proto3" json:"context,omitempty"`
	// When the guidance response was processed
	OccurrenceDateTime *DateTime `protobuf:"bytes,15,opt,name=occurrence_date_time,json=occurrenceDateTime,proto3" json:"occurrence_date_time,omitempty"`
	// Device returning the guidance
	Performer *Reference               `protobuf:"bytes,16,opt,name=performer,proto3" json:"performer,omitempty"`
	Reason    *GuidanceResponse_Reason `protobuf:"bytes,17,opt,name=reason,proto3" json:"reason,omitempty"`
	// Additional notes about the response
	Note []*Annotation `protobuf:"bytes,18,rep,name=note,proto3" json:"note,omitempty"`
	// Messages resulting from the evaluation of the artifact or artifacts
	EvaluationMessage []*Reference `protobuf:"bytes,19,rep,name=evaluation_message,json=evaluationMessage,proto3" json:"evaluation_message,omitempty"`
	// The output parameters of the evaluation, if any
	OutputParameters *Reference `protobuf:"bytes,20,opt,name=output_parameters,json=outputParameters,proto3" json:"output_parameters,omitempty"`
	// Proposed actions, if any
	Result *Reference `protobuf:"bytes,21,opt,name=result,proto3" json:"result,omitempty"`
	// Additional required data
	DataRequirement      []*DataRequirement `protobuf:"bytes,22,rep,name=data_requirement,json=dataRequirement,proto3" json:"data_requirement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GuidanceResponse) Reset()         { *m = GuidanceResponse{} }
func (m *GuidanceResponse) String() string { return proto.CompactTextString(m) }
func (*GuidanceResponse) ProtoMessage()    {}
func (*GuidanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{52}
}

func (m *GuidanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuidanceResponse.Unmarshal(m, b)
}
func (m *GuidanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuidanceResponse.Marshal(b, m, deterministic)
}
func (m *GuidanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuidanceResponse.Merge(m, src)
}
func (m *GuidanceResponse) XXX_Size() int {
	return xxx_messageInfo_GuidanceResponse.Size(m)
}
func (m *GuidanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GuidanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GuidanceResponse proto.InternalMessageInfo

func (m *GuidanceResponse) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GuidanceResponse) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *GuidanceResponse) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *GuidanceResponse) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *GuidanceResponse) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *GuidanceResponse) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *GuidanceResponse) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *GuidanceResponse) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *GuidanceResponse) GetRequestId() *Id {
	if m != nil {
		return m.RequestId
	}
	return nil
}

func (m *GuidanceResponse) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *GuidanceResponse) GetModule() *Reference {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *GuidanceResponse) GetStatus() *GuidanceResponseStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GuidanceResponse) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *GuidanceResponse) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *GuidanceResponse) GetOccurrenceDateTime() *DateTime {
	if m != nil {
		return m.OccurrenceDateTime
	}
	return nil
}

func (m *GuidanceResponse) GetPerformer() *Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *GuidanceResponse) GetReason() *GuidanceResponse_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *GuidanceResponse) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *GuidanceResponse) GetEvaluationMessage() []*Reference {
	if m != nil {
		return m.EvaluationMessage
	}
	return nil
}

func (m *GuidanceResponse) GetOutputParameters() *Reference {
	if m != nil {
		return m.OutputParameters
	}
	return nil
}

func (m *GuidanceResponse) GetResult() *Reference {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GuidanceResponse) GetDataRequirement() []*DataRequirement {
	if m != nil {
		return m.DataRequirement
	}
	return nil
}

// Reason for the response
type GuidanceResponse_Reason struct {
	// Types that are valid to be assigned to Reason:
	//	*GuidanceResponse_Reason_CodeableConcept
	//	*GuidanceResponse_Reason_Reference
	Reason               isGuidanceResponse_Reason_Reason `protobuf_oneof:"reason"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *GuidanceResponse_Reason) Reset()         { *m = GuidanceResponse_Reason{} }
func (m *GuidanceResponse_Reason) String() string { return proto.CompactTextString(m) }
func (*GuidanceResponse_Reason) ProtoMessage()    {}
func (*GuidanceResponse_Reason) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{52, 0}
}

func (m *GuidanceResponse_Reason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuidanceResponse_Reason.Unmarshal(m, b)
}
func (m *GuidanceResponse_Reason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuidanceResponse_Reason.Marshal(b, m, deterministic)
}
func (m *GuidanceResponse_Reason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuidanceResponse_Reason.Merge(m, src)
}
func (m *GuidanceResponse_Reason) XXX_Size() int {
	return xxx_messageInfo_GuidanceResponse_Reason.Size(m)
}
func (m *GuidanceResponse_Reason) XXX_DiscardUnknown() {
	xxx_messageInfo_GuidanceResponse_Reason.DiscardUnknown(m)
}

var xxx_messageInfo_GuidanceResponse_Reason proto.InternalMessageInfo

type isGuidanceResponse_Reason_Reason interface {
	isGuidanceResponse_Reason_Reason()
}

type GuidanceResponse_Reason_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type GuidanceResponse_Reason_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*GuidanceResponse_Reason_CodeableConcept) isGuidanceResponse_Reason_Reason() {}

func (*GuidanceResponse_Reason_Reference) isGuidanceResponse_Reason_Reason() {}

func (m *GuidanceResponse_Reason) GetReason() isGuidanceResponse_Reason_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *GuidanceResponse_Reason) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetReason().(*GuidanceResponse_Reason_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *GuidanceResponse_Reason) GetReference() *Reference {
	if x, ok := m.GetReason().(*GuidanceResponse_Reason_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GuidanceResponse_Reason) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GuidanceResponse_Reason_OneofMarshaler, _GuidanceResponse_Reason_OneofUnmarshaler, _GuidanceResponse_Reason_OneofSizer, []interface{}{
		(*GuidanceResponse_Reason_CodeableConcept)(nil),
		(*GuidanceResponse_Reason_Reference)(nil),
	}
}

func _GuidanceResponse_Reason_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GuidanceResponse_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *GuidanceResponse_Reason_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *GuidanceResponse_Reason_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GuidanceResponse_Reason.Reason has unexpected type %T", x)
	}
	return nil
}

func _GuidanceResponse_Reason_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GuidanceResponse_Reason)
	switch tag {
	case 1: // reason.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Reason = &GuidanceResponse_Reason_CodeableConcept{msg}
		return true, err
	case 2: // reason.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Reason = &GuidanceResponse_Reason_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GuidanceResponse_Reason_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GuidanceResponse_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *GuidanceResponse_Reason_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GuidanceResponse_Reason_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for HealthcareService, last updated
// 2017-04-19T07:44:43.294+10:00. The details of a healthcare service available
// at a location. See http://hl7.org/fhir/StructureDefinition/HealthcareService
type HealthcareService struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External identifiers for this item
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this healthcareservice is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// Organization that provides this service
	ProvidedBy *Reference `protobuf:"bytes,11,opt,name=provided_by,json=providedBy,proto3" json:"provided_by,omitempty"`
	// Broad category of service being performed or delivered
	Category *CodeableConcept `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
	// Type of service that may be delivered or performed
	Type []*CodeableConcept `protobuf:"bytes,13,rep,name=type,proto3" json:"type,omitempty"`
	// Specialties handled by the HealthcareService
	Specialty []*CodeableConcept `protobuf:"bytes,14,rep,name=specialty,proto3" json:"specialty,omitempty"`
	// Location(s) where service may be provided
	Location []*Reference `protobuf:"bytes,15,rep,name=location,proto3" json:"location,omitempty"`
	// Description of service as presented to a consumer while searching
	Name *String `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	// Additional description and/or any specific issues not covered elsewhere
	Comment *String `protobuf:"bytes,17,opt,name=comment,proto3" json:"comment,omitempty"`
	// Extra details about the service that can't be placed in the other fields
	ExtraDetails *String `protobuf:"bytes,18,opt,name=extra_details,json=extraDetails,proto3" json:"extra_details,omitempty"`
	// Facilitates quick identification of the service
	Photo *Attachment `protobuf:"bytes,19,opt,name=photo,proto3" json:"photo,omitempty"`
	// Contacts related to the healthcare service
	Telecom []*ContactPoint `protobuf:"bytes,20,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// Location(s) service is inteded for/available to
	CoverageArea []*Reference `protobuf:"bytes,21,rep,name=coverage_area,json=coverageArea,proto3" json:"coverage_area,omitempty"`
	// Conditions under which service is available/offered
	ServiceProvisionCode []*CodeableConcept `protobuf:"bytes,22,rep,name=service_provision_code,json=serviceProvisionCode,proto3" json:"service_provision_code,omitempty"`
	// Specific eligibility requirements required to use the service
	Eligibility *CodeableConcept `protobuf:"bytes,23,opt,name=eligibility,proto3" json:"eligibility,omitempty"`
	// Describes the eligibility conditions for the service
	EligibilityNote *String `protobuf:"bytes,24,opt,name=eligibility_note,json=eligibilityNote,proto3" json:"eligibility_note,omitempty"`
	// Program Names that categorize the service
	ProgramName []*String `protobuf:"bytes,25,rep,name=program_name,json=programName,proto3" json:"program_name,omitempty"`
	// Collection of characteristics (attributes)
	Characteristic []*CodeableConcept `protobuf:"bytes,26,rep,name=characteristic,proto3" json:"characteristic,omitempty"`
	// Ways that the service accepts referrals
	ReferralMethod []*CodeableConcept `protobuf:"bytes,27,rep,name=referral_method,json=referralMethod,proto3" json:"referral_method,omitempty"`
	// If an appointment is required for access to this service
	AppointmentRequired *Boolean                           `protobuf:"bytes,28,opt,name=appointment_required,json=appointmentRequired,proto3" json:"appointment_required,omitempty"`
	AvailableTime       []*HealthcareService_AvailableTime `protobuf:"bytes,29,rep,name=available_time,json=availableTime,proto3" json:"available_time,omitempty"`
	NotAvailable        []*HealthcareService_NotAvailable  `protobuf:"bytes,30,rep,name=not_available,json=notAvailable,proto3" json:"not_available,omitempty"`
	// Description of availability exceptions
	AvailabilityExceptions *String `protobuf:"bytes,31,opt,name=availability_exceptions,json=availabilityExceptions,proto3" json:"availability_exceptions,omitempty"`
	// Technical endpoints providing access to services operated for the location
	Endpoint             []*Reference `protobuf:"bytes,32,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *HealthcareService) Reset()         { *m = HealthcareService{} }
func (m *HealthcareService) String() string { return proto.CompactTextString(m) }
func (*HealthcareService) ProtoMessage()    {}
func (*HealthcareService) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{53}
}

func (m *HealthcareService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthcareService.Unmarshal(m, b)
}
func (m *HealthcareService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthcareService.Marshal(b, m, deterministic)
}
func (m *HealthcareService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthcareService.Merge(m, src)
}
func (m *HealthcareService) XXX_Size() int {
	return xxx_messageInfo_HealthcareService.Size(m)
}
func (m *HealthcareService) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthcareService.DiscardUnknown(m)
}

var xxx_messageInfo_HealthcareService proto.InternalMessageInfo

func (m *HealthcareService) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *HealthcareService) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *HealthcareService) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *HealthcareService) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *HealthcareService) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *HealthcareService) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *HealthcareService) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *HealthcareService) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *HealthcareService) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *HealthcareService) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *HealthcareService) GetProvidedBy() *Reference {
	if m != nil {
		return m.ProvidedBy
	}
	return nil
}

func (m *HealthcareService) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *HealthcareService) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *HealthcareService) GetSpecialty() []*CodeableConcept {
	if m != nil {
		return m.Specialty
	}
	return nil
}

func (m *HealthcareService) GetLocation() []*Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *HealthcareService) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *HealthcareService) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *HealthcareService) GetExtraDetails() *String {
	if m != nil {
		return m.ExtraDetails
	}
	return nil
}

func (m *HealthcareService) GetPhoto() *Attachment {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *HealthcareService) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *HealthcareService) GetCoverageArea() []*Reference {
	if m != nil {
		return m.CoverageArea
	}
	return nil
}

func (m *HealthcareService) GetServiceProvisionCode() []*CodeableConcept {
	if m != nil {
		return m.ServiceProvisionCode
	}
	return nil
}

func (m *HealthcareService) GetEligibility() *CodeableConcept {
	if m != nil {
		return m.Eligibility
	}
	return nil
}

func (m *HealthcareService) GetEligibilityNote() *String {
	if m != nil {
		return m.EligibilityNote
	}
	return nil
}

func (m *HealthcareService) GetProgramName() []*String {
	if m != nil {
		return m.ProgramName
	}
	return nil
}

func (m *HealthcareService) GetCharacteristic() []*CodeableConcept {
	if m != nil {
		return m.Characteristic
	}
	return nil
}

func (m *HealthcareService) GetReferralMethod() []*CodeableConcept {
	if m != nil {
		return m.ReferralMethod
	}
	return nil
}

func (m *HealthcareService) GetAppointmentRequired() *Boolean {
	if m != nil {
		return m.AppointmentRequired
	}
	return nil
}

func (m *HealthcareService) GetAvailableTime() []*HealthcareService_AvailableTime {
	if m != nil {
		return m.AvailableTime
	}
	return nil
}

func (m *HealthcareService) GetNotAvailable() []*HealthcareService_NotAvailable {
	if m != nil {
		return m.NotAvailable
	}
	return nil
}

func (m *HealthcareService) GetAvailabilityExceptions() *String {
	if m != nil {
		return m.AvailabilityExceptions
	}
	return nil
}

func (m *HealthcareService) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

// Times the Service Site is available
type HealthcareService_AvailableTime struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// mon | tue | wed | thu | fri | sat | sun
	DaysOfWeek []*DaysOfWeekCode `protobuf:"bytes,4,rep,name=days_of_week,json=daysOfWeek,proto3" json:"days_of_week,omitempty"`
	// Always available? e.g. 24 hour service
	AllDay *Boolean `protobuf:"bytes,5,opt,name=all_day,json=allDay,proto3" json:"all_day,omitempty"`
	// Opening time of day (ignored if allDay = true)
	AvailableStartTime *Time `protobuf:"bytes,6,opt,name=available_start_time,json=availableStartTime,proto3" json:"available_start_time,omitempty"`
	// Closing time of day (ignored if allDay = true)
	AvailableEndTime     *Time    `protobuf:"bytes,7,opt,name=available_end_time,json=availableEndTime,proto3" json:"available_end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthcareService_AvailableTime) Reset()         { *m = HealthcareService_AvailableTime{} }
func (m *HealthcareService_AvailableTime) String() string { return proto.CompactTextString(m) }
func (*HealthcareService_AvailableTime) ProtoMessage()    {}
func (*HealthcareService_AvailableTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{53, 0}
}

func (m *HealthcareService_AvailableTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthcareService_AvailableTime.Unmarshal(m, b)
}
func (m *HealthcareService_AvailableTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthcareService_AvailableTime.Marshal(b, m, deterministic)
}
func (m *HealthcareService_AvailableTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthcareService_AvailableTime.Merge(m, src)
}
func (m *HealthcareService_AvailableTime) XXX_Size() int {
	return xxx_messageInfo_HealthcareService_AvailableTime.Size(m)
}
func (m *HealthcareService_AvailableTime) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthcareService_AvailableTime.DiscardUnknown(m)
}

var xxx_messageInfo_HealthcareService_AvailableTime proto.InternalMessageInfo

func (m *HealthcareService_AvailableTime) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *HealthcareService_AvailableTime) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *HealthcareService_AvailableTime) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *HealthcareService_AvailableTime) GetDaysOfWeek() []*DaysOfWeekCode {
	if m != nil {
		return m.DaysOfWeek
	}
	return nil
}

func (m *HealthcareService_AvailableTime) GetAllDay() *Boolean {
	if m != nil {
		return m.AllDay
	}
	return nil
}

func (m *HealthcareService_AvailableTime) GetAvailableStartTime() *Time {
	if m != nil {
		return m.AvailableStartTime
	}
	return nil
}

func (m *HealthcareService_AvailableTime) GetAvailableEndTime() *Time {
	if m != nil {
		return m.AvailableEndTime
	}
	return nil
}

// Not available during this time due to provided reason
type HealthcareService_NotAvailable struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reason presented to the user explaining why time not available
	Description *String `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Service not availablefrom this date
	During               *Period  `protobuf:"bytes,5,opt,name=during,proto3" json:"during,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthcareService_NotAvailable) Reset()         { *m = HealthcareService_NotAvailable{} }
func (m *HealthcareService_NotAvailable) String() string { return proto.CompactTextString(m) }
func (*HealthcareService_NotAvailable) ProtoMessage()    {}
func (*HealthcareService_NotAvailable) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{53, 1}
}

func (m *HealthcareService_NotAvailable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthcareService_NotAvailable.Unmarshal(m, b)
}
func (m *HealthcareService_NotAvailable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthcareService_NotAvailable.Marshal(b, m, deterministic)
}
func (m *HealthcareService_NotAvailable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthcareService_NotAvailable.Merge(m, src)
}
func (m *HealthcareService_NotAvailable) XXX_Size() int {
	return xxx_messageInfo_HealthcareService_NotAvailable.Size(m)
}
func (m *HealthcareService_NotAvailable) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthcareService_NotAvailable.DiscardUnknown(m)
}

var xxx_messageInfo_HealthcareService_NotAvailable proto.InternalMessageInfo

func (m *HealthcareService_NotAvailable) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *HealthcareService_NotAvailable) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *HealthcareService_NotAvailable) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *HealthcareService_NotAvailable) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *HealthcareService_NotAvailable) GetDuring() *Period {
	if m != nil {
		return m.During
	}
	return nil
}

// Auto-generated from StructureDefinition for ImagingManifest, last updated
// 2017-04-19T07:44:43.294+10:00. Key Object Selection. See
// http://hl7.org/fhir/StructureDefinition/ImagingManifest
type ImagingManifest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// SOP Instance UID
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Patient of the selected objects
	Patient *Reference `protobuf:"bytes,10,opt,name=patient,proto3" json:"patient,omitempty"`
	// Time when the selection of instances was made
	AuthoringTime *DateTime `protobuf:"bytes,11,opt,name=authoring_time,json=authoringTime,proto3" json:"authoring_time,omitempty"`
	// Author (human or machine)
	Author *Reference `protobuf:"bytes,12,opt,name=author,proto3" json:"author,omitempty"`
	// Description text
	Description          *String                  `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	Study                []*ImagingManifest_Study `protobuf:"bytes,14,rep,name=study,proto3" json:"study,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ImagingManifest) Reset()         { *m = ImagingManifest{} }
func (m *ImagingManifest) String() string { return proto.CompactTextString(m) }
func (*ImagingManifest) ProtoMessage()    {}
func (*ImagingManifest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{54}
}

func (m *ImagingManifest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagingManifest.Unmarshal(m, b)
}
func (m *ImagingManifest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagingManifest.Marshal(b, m, deterministic)
}
func (m *ImagingManifest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagingManifest.Merge(m, src)
}
func (m *ImagingManifest) XXX_Size() int {
	return xxx_messageInfo_ImagingManifest.Size(m)
}
func (m *ImagingManifest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagingManifest.DiscardUnknown(m)
}

var xxx_messageInfo_ImagingManifest proto.InternalMessageInfo

func (m *ImagingManifest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImagingManifest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ImagingManifest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ImagingManifest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ImagingManifest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ImagingManifest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ImagingManifest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImagingManifest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImagingManifest) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ImagingManifest) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *ImagingManifest) GetAuthoringTime() *DateTime {
	if m != nil {
		return m.AuthoringTime
	}
	return nil
}

func (m *ImagingManifest) GetAuthor() *Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *ImagingManifest) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ImagingManifest) GetStudy() []*ImagingManifest_Study {
	if m != nil {
		return m.Study
	}
	return nil
}

// Study identity of the selected instances
type ImagingManifest_Study struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Study instance UID
	Uid *Oid `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// Reference to ImagingStudy
	ImagingStudy *Reference `protobuf:"bytes,5,opt,name=imaging_study,json=imagingStudy,proto3" json:"imaging_study,omitempty"`
	// Study access service endpoint
	Endpoint             []*Reference                    `protobuf:"bytes,6,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	Series               []*ImagingManifest_Study_Series `protobuf:"bytes,7,rep,name=series,proto3" json:"series,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ImagingManifest_Study) Reset()         { *m = ImagingManifest_Study{} }
func (m *ImagingManifest_Study) String() string { return proto.CompactTextString(m) }
func (*ImagingManifest_Study) ProtoMessage()    {}
func (*ImagingManifest_Study) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{54, 0}
}

func (m *ImagingManifest_Study) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagingManifest_Study.Unmarshal(m, b)
}
func (m *ImagingManifest_Study) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagingManifest_Study.Marshal(b, m, deterministic)
}
func (m *ImagingManifest_Study) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagingManifest_Study.Merge(m, src)
}
func (m *ImagingManifest_Study) XXX_Size() int {
	return xxx_messageInfo_ImagingManifest_Study.Size(m)
}
func (m *ImagingManifest_Study) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagingManifest_Study.DiscardUnknown(m)
}

var xxx_messageInfo_ImagingManifest_Study proto.InternalMessageInfo

func (m *ImagingManifest_Study) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImagingManifest_Study) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImagingManifest_Study) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImagingManifest_Study) GetUid() *Oid {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *ImagingManifest_Study) GetImagingStudy() *Reference {
	if m != nil {
		return m.ImagingStudy
	}
	return nil
}

func (m *ImagingManifest_Study) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *ImagingManifest_Study) GetSeries() []*ImagingManifest_Study_Series {
	if m != nil {
		return m.Series
	}
	return nil
}

// Series identity of the selected instances
type ImagingManifest_Study_Series struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Series instance UID
	Uid *Oid `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// Series access endpoint
	Endpoint             []*Reference                             `protobuf:"bytes,5,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	Instance             []*ImagingManifest_Study_Series_Instance `protobuf:"bytes,6,rep,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *ImagingManifest_Study_Series) Reset()         { *m = ImagingManifest_Study_Series{} }
func (m *ImagingManifest_Study_Series) String() string { return proto.CompactTextString(m) }
func (*ImagingManifest_Study_Series) ProtoMessage()    {}
func (*ImagingManifest_Study_Series) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{54, 0, 0}
}

func (m *ImagingManifest_Study_Series) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagingManifest_Study_Series.Unmarshal(m, b)
}
func (m *ImagingManifest_Study_Series) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagingManifest_Study_Series.Marshal(b, m, deterministic)
}
func (m *ImagingManifest_Study_Series) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagingManifest_Study_Series.Merge(m, src)
}
func (m *ImagingManifest_Study_Series) XXX_Size() int {
	return xxx_messageInfo_ImagingManifest_Study_Series.Size(m)
}
func (m *ImagingManifest_Study_Series) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagingManifest_Study_Series.DiscardUnknown(m)
}

var xxx_messageInfo_ImagingManifest_Study_Series proto.InternalMessageInfo

func (m *ImagingManifest_Study_Series) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImagingManifest_Study_Series) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImagingManifest_Study_Series) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImagingManifest_Study_Series) GetUid() *Oid {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *ImagingManifest_Study_Series) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *ImagingManifest_Study_Series) GetInstance() []*ImagingManifest_Study_Series_Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

// The selected instance
type ImagingManifest_Study_Series_Instance struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// SOP class UID of instance
	SopClass *Oid `protobuf:"bytes,4,opt,name=sop_class,json=sopClass,proto3" json:"sop_class,omitempty"`
	// Selected instance UID
	Uid                  *Oid     `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImagingManifest_Study_Series_Instance) Reset()         { *m = ImagingManifest_Study_Series_Instance{} }
func (m *ImagingManifest_Study_Series_Instance) String() string { return proto.CompactTextString(m) }
func (*ImagingManifest_Study_Series_Instance) ProtoMessage()    {}
func (*ImagingManifest_Study_Series_Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{54, 0, 0, 0}
}

func (m *ImagingManifest_Study_Series_Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagingManifest_Study_Series_Instance.Unmarshal(m, b)
}
func (m *ImagingManifest_Study_Series_Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagingManifest_Study_Series_Instance.Marshal(b, m, deterministic)
}
func (m *ImagingManifest_Study_Series_Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagingManifest_Study_Series_Instance.Merge(m, src)
}
func (m *ImagingManifest_Study_Series_Instance) XXX_Size() int {
	return xxx_messageInfo_ImagingManifest_Study_Series_Instance.Size(m)
}
func (m *ImagingManifest_Study_Series_Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagingManifest_Study_Series_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_ImagingManifest_Study_Series_Instance proto.InternalMessageInfo

func (m *ImagingManifest_Study_Series_Instance) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImagingManifest_Study_Series_Instance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImagingManifest_Study_Series_Instance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImagingManifest_Study_Series_Instance) GetSopClass() *Oid {
	if m != nil {
		return m.SopClass
	}
	return nil
}

func (m *ImagingManifest_Study_Series_Instance) GetUid() *Oid {
	if m != nil {
		return m.Uid
	}
	return nil
}

// Auto-generated from StructureDefinition for ImagingStudy, last updated
// 2017-04-19T07:44:43.294+10:00. A set of images produced in single study (one
// or more series of references images). See
// http://hl7.org/fhir/StructureDefinition/ImagingStudy
type ImagingStudy struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Formal DICOM identifier for the study
	Uid *Oid `protobuf:"bytes,9,opt,name=uid,proto3" json:"uid,omitempty"`
	// Related workflow identifier ("Accession Number")
	Accession *Identifier `protobuf:"bytes,10,opt,name=accession,proto3" json:"accession,omitempty"`
	// Other identifiers for the study
	Identifier []*Identifier `protobuf:"bytes,11,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// ONLINE | OFFLINE | NEARLINE | UNAVAILABLE
	Availability *InstanceAvailabilityCode `protobuf:"bytes,12,opt,name=availability,proto3" json:"availability,omitempty"`
	// All series modality if actual acquisition modalities
	ModalityList []*Coding `protobuf:"bytes,13,rep,name=modality_list,json=modalityList,proto3" json:"modality_list,omitempty"`
	// Who the images are of
	Patient *Reference `protobuf:"bytes,14,opt,name=patient,proto3" json:"patient,omitempty"`
	// Originating context
	Context *Reference `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	// When the study was started
	Started *DateTime `protobuf:"bytes,16,opt,name=started,proto3" json:"started,omitempty"`
	// Request fulfilled
	BasedOn []*Reference `protobuf:"bytes,17,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Referring physician
	Referrer *Reference `protobuf:"bytes,18,opt,name=referrer,proto3" json:"referrer,omitempty"`
	// Who interpreted images
	Interpreter []*Reference `protobuf:"bytes,19,rep,name=interpreter,proto3" json:"interpreter,omitempty"`
	// Study access endpoint
	Endpoint []*Reference `protobuf:"bytes,20,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Number of Study Related Series
	NumberOfSeries *UnsignedInt `protobuf:"bytes,21,opt,name=number_of_series,json=numberOfSeries,proto3" json:"number_of_series,omitempty"`
	// Number of Study Related Instances
	NumberOfInstances *UnsignedInt `protobuf:"bytes,22,opt,name=number_of_instances,json=numberOfInstances,proto3" json:"number_of_instances,omitempty"`
	// The performed Procedure reference
	ProcedureReference []*Reference `protobuf:"bytes,23,rep,name=procedure_reference,json=procedureReference,proto3" json:"procedure_reference,omitempty"`
	// The performed procedure code
	ProcedureCode []*CodeableConcept `protobuf:"bytes,24,rep,name=procedure_code,json=procedureCode,proto3" json:"procedure_code,omitempty"`
	// Why the study was requested
	Reason *CodeableConcept `protobuf:"bytes,25,opt,name=reason,proto3" json:"reason,omitempty"`
	// Institution-generated description
	Description          *String                `protobuf:"bytes,26,opt,name=description,proto3" json:"description,omitempty"`
	Series               []*ImagingStudy_Series `protobuf:"bytes,27,rep,name=series,proto3" json:"series,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImagingStudy) Reset()         { *m = ImagingStudy{} }
func (m *ImagingStudy) String() string { return proto.CompactTextString(m) }
func (*ImagingStudy) ProtoMessage()    {}
func (*ImagingStudy) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{55}
}

func (m *ImagingStudy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagingStudy.Unmarshal(m, b)
}
func (m *ImagingStudy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagingStudy.Marshal(b, m, deterministic)
}
func (m *ImagingStudy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagingStudy.Merge(m, src)
}
func (m *ImagingStudy) XXX_Size() int {
	return xxx_messageInfo_ImagingStudy.Size(m)
}
func (m *ImagingStudy) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagingStudy.DiscardUnknown(m)
}

var xxx_messageInfo_ImagingStudy proto.InternalMessageInfo

func (m *ImagingStudy) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImagingStudy) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ImagingStudy) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ImagingStudy) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ImagingStudy) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ImagingStudy) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ImagingStudy) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImagingStudy) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImagingStudy) GetUid() *Oid {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *ImagingStudy) GetAccession() *Identifier {
	if m != nil {
		return m.Accession
	}
	return nil
}

func (m *ImagingStudy) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ImagingStudy) GetAvailability() *InstanceAvailabilityCode {
	if m != nil {
		return m.Availability
	}
	return nil
}

func (m *ImagingStudy) GetModalityList() []*Coding {
	if m != nil {
		return m.ModalityList
	}
	return nil
}

func (m *ImagingStudy) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *ImagingStudy) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ImagingStudy) GetStarted() *DateTime {
	if m != nil {
		return m.Started
	}
	return nil
}

func (m *ImagingStudy) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *ImagingStudy) GetReferrer() *Reference {
	if m != nil {
		return m.Referrer
	}
	return nil
}

func (m *ImagingStudy) GetInterpreter() []*Reference {
	if m != nil {
		return m.Interpreter
	}
	return nil
}

func (m *ImagingStudy) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *ImagingStudy) GetNumberOfSeries() *UnsignedInt {
	if m != nil {
		return m.NumberOfSeries
	}
	return nil
}

func (m *ImagingStudy) GetNumberOfInstances() *UnsignedInt {
	if m != nil {
		return m.NumberOfInstances
	}
	return nil
}

func (m *ImagingStudy) GetProcedureReference() []*Reference {
	if m != nil {
		return m.ProcedureReference
	}
	return nil
}

func (m *ImagingStudy) GetProcedureCode() []*CodeableConcept {
	if m != nil {
		return m.ProcedureCode
	}
	return nil
}

func (m *ImagingStudy) GetReason() *CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *ImagingStudy) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ImagingStudy) GetSeries() []*ImagingStudy_Series {
	if m != nil {
		return m.Series
	}
	return nil
}

// Each study has one or more series of instances
type ImagingStudy_Series struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Formal DICOM identifier for this series
	Uid *Oid `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// Numeric identifier of this series
	Number *UnsignedInt `protobuf:"bytes,5,opt,name=number,proto3" json:"number,omitempty"`
	// The modality of the instances in the series
	Modality *Coding `protobuf:"bytes,6,opt,name=modality,proto3" json:"modality,omitempty"`
	// A short human readable summary of the series
	Description *String `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// Number of Series Related Instances
	NumberOfInstances *UnsignedInt `protobuf:"bytes,8,opt,name=number_of_instances,json=numberOfInstances,proto3" json:"number_of_instances,omitempty"`
	// ONLINE | OFFLINE | NEARLINE | UNAVAILABLE
	Availability *InstanceAvailabilityCode `protobuf:"bytes,9,opt,name=availability,proto3" json:"availability,omitempty"`
	// Series access endpoint
	Endpoint []*Reference `protobuf:"bytes,10,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Body part examined
	BodySite *Coding `protobuf:"bytes,11,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Body part laterality
	Laterality *Coding `protobuf:"bytes,12,opt,name=laterality,proto3" json:"laterality,omitempty"`
	// When the series started
	Started *DateTime `protobuf:"bytes,13,opt,name=started,proto3" json:"started,omitempty"`
	// Who performed the series
	Performer            []*Reference                    `protobuf:"bytes,14,rep,name=performer,proto3" json:"performer,omitempty"`
	Instance             []*ImagingStudy_Series_Instance `protobuf:"bytes,15,rep,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ImagingStudy_Series) Reset()         { *m = ImagingStudy_Series{} }
func (m *ImagingStudy_Series) String() string { return proto.CompactTextString(m) }
func (*ImagingStudy_Series) ProtoMessage()    {}
func (*ImagingStudy_Series) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{55, 0}
}

func (m *ImagingStudy_Series) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagingStudy_Series.Unmarshal(m, b)
}
func (m *ImagingStudy_Series) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagingStudy_Series.Marshal(b, m, deterministic)
}
func (m *ImagingStudy_Series) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagingStudy_Series.Merge(m, src)
}
func (m *ImagingStudy_Series) XXX_Size() int {
	return xxx_messageInfo_ImagingStudy_Series.Size(m)
}
func (m *ImagingStudy_Series) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagingStudy_Series.DiscardUnknown(m)
}

var xxx_messageInfo_ImagingStudy_Series proto.InternalMessageInfo

func (m *ImagingStudy_Series) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImagingStudy_Series) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImagingStudy_Series) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImagingStudy_Series) GetUid() *Oid {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *ImagingStudy_Series) GetNumber() *UnsignedInt {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *ImagingStudy_Series) GetModality() *Coding {
	if m != nil {
		return m.Modality
	}
	return nil
}

func (m *ImagingStudy_Series) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ImagingStudy_Series) GetNumberOfInstances() *UnsignedInt {
	if m != nil {
		return m.NumberOfInstances
	}
	return nil
}

func (m *ImagingStudy_Series) GetAvailability() *InstanceAvailabilityCode {
	if m != nil {
		return m.Availability
	}
	return nil
}

func (m *ImagingStudy_Series) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *ImagingStudy_Series) GetBodySite() *Coding {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *ImagingStudy_Series) GetLaterality() *Coding {
	if m != nil {
		return m.Laterality
	}
	return nil
}

func (m *ImagingStudy_Series) GetStarted() *DateTime {
	if m != nil {
		return m.Started
	}
	return nil
}

func (m *ImagingStudy_Series) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *ImagingStudy_Series) GetInstance() []*ImagingStudy_Series_Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

// A single SOP instance from the series
type ImagingStudy_Series_Instance struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Formal DICOM identifier for this instance
	Uid *Oid `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// The number of this instance in the series
	Number *UnsignedInt `protobuf:"bytes,5,opt,name=number,proto3" json:"number,omitempty"`
	// DICOM class type
	SopClass *Oid `protobuf:"bytes,6,opt,name=sop_class,json=sopClass,proto3" json:"sop_class,omitempty"`
	// Description of instance
	Title                *String  `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImagingStudy_Series_Instance) Reset()         { *m = ImagingStudy_Series_Instance{} }
func (m *ImagingStudy_Series_Instance) String() string { return proto.CompactTextString(m) }
func (*ImagingStudy_Series_Instance) ProtoMessage()    {}
func (*ImagingStudy_Series_Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{55, 0, 0}
}

func (m *ImagingStudy_Series_Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagingStudy_Series_Instance.Unmarshal(m, b)
}
func (m *ImagingStudy_Series_Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagingStudy_Series_Instance.Marshal(b, m, deterministic)
}
func (m *ImagingStudy_Series_Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagingStudy_Series_Instance.Merge(m, src)
}
func (m *ImagingStudy_Series_Instance) XXX_Size() int {
	return xxx_messageInfo_ImagingStudy_Series_Instance.Size(m)
}
func (m *ImagingStudy_Series_Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagingStudy_Series_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_ImagingStudy_Series_Instance proto.InternalMessageInfo

func (m *ImagingStudy_Series_Instance) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImagingStudy_Series_Instance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImagingStudy_Series_Instance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImagingStudy_Series_Instance) GetUid() *Oid {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *ImagingStudy_Series_Instance) GetNumber() *UnsignedInt {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *ImagingStudy_Series_Instance) GetSopClass() *Oid {
	if m != nil {
		return m.SopClass
	}
	return nil
}

func (m *ImagingStudy_Series_Instance) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

// Auto-generated from StructureDefinition for Immunization, last updated
// 2017-04-19T07:44:43.294+10:00. Immunization event information. See
// http://hl7.org/fhir/StructureDefinition/Immunization
type Immunization struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// completed | entered-in-error
	Status *ImmunizationStatusCodesCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Flag for whether immunization was given
	NotGiven *Boolean `protobuf:"bytes,11,opt,name=not_given,json=notGiven,proto3" json:"not_given,omitempty"`
	// Vaccine product administered
	VaccineCode *CodeableConcept `protobuf:"bytes,12,opt,name=vaccine_code,json=vaccineCode,proto3" json:"vaccine_code,omitempty"`
	// Who was immunized
	Patient *Reference `protobuf:"bytes,13,opt,name=patient,proto3" json:"patient,omitempty"`
	// Encounter administered as part of
	Encounter *Reference `protobuf:"bytes,14,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// Vaccination administration date
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// Indicates context the data was recorded in
	PrimarySource *Boolean `protobuf:"bytes,16,opt,name=primary_source,json=primarySource,proto3" json:"primary_source,omitempty"`
	// Indicates the source of a secondarily reported record
	ReportOrigin *CodeableConcept `protobuf:"bytes,17,opt,name=report_origin,json=reportOrigin,proto3" json:"report_origin,omitempty"`
	// Where vaccination occurred
	Location *Reference `protobuf:"bytes,18,opt,name=location,proto3" json:"location,omitempty"`
	// Vaccine manufacturer
	Manufacturer *Reference `protobuf:"bytes,19,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	// Vaccine lot number
	LotNumber *String `protobuf:"bytes,20,opt,name=lot_number,json=lotNumber,proto3" json:"lot_number,omitempty"`
	// Vaccine expiration date
	ExpirationDate *Date `protobuf:"bytes,21,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	// Body site vaccine  was administered
	Site *CodeableConcept `protobuf:"bytes,22,opt,name=site,proto3" json:"site,omitempty"`
	// How vaccine entered body
	Route *CodeableConcept `protobuf:"bytes,23,opt,name=route,proto3" json:"route,omitempty"`
	// Amount of vaccine administered
	DoseQuantity *SimpleQuantity              `protobuf:"bytes,24,opt,name=dose_quantity,json=doseQuantity,proto3" json:"dose_quantity,omitempty"`
	Practitioner []*Immunization_Practitioner `protobuf:"bytes,25,rep,name=practitioner,proto3" json:"practitioner,omitempty"`
	// Vaccination notes
	Note                 []*Annotation                       `protobuf:"bytes,26,rep,name=note,proto3" json:"note,omitempty"`
	Explanation          *Immunization_Explanation           `protobuf:"bytes,27,opt,name=explanation,proto3" json:"explanation,omitempty"`
	Reaction             []*Immunization_Reaction            `protobuf:"bytes,28,rep,name=reaction,proto3" json:"reaction,omitempty"`
	VaccinationProtocol  []*Immunization_VaccinationProtocol `protobuf:"bytes,29,rep,name=vaccination_protocol,json=vaccinationProtocol,proto3" json:"vaccination_protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Immunization) Reset()         { *m = Immunization{} }
func (m *Immunization) String() string { return proto.CompactTextString(m) }
func (*Immunization) ProtoMessage()    {}
func (*Immunization) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{56}
}

func (m *Immunization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Immunization.Unmarshal(m, b)
}
func (m *Immunization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Immunization.Marshal(b, m, deterministic)
}
func (m *Immunization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Immunization.Merge(m, src)
}
func (m *Immunization) XXX_Size() int {
	return xxx_messageInfo_Immunization.Size(m)
}
func (m *Immunization) XXX_DiscardUnknown() {
	xxx_messageInfo_Immunization.DiscardUnknown(m)
}

var xxx_messageInfo_Immunization proto.InternalMessageInfo

func (m *Immunization) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Immunization) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Immunization) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Immunization) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Immunization) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Immunization) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Immunization) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Immunization) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Immunization) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Immunization) GetStatus() *ImmunizationStatusCodesCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Immunization) GetNotGiven() *Boolean {
	if m != nil {
		return m.NotGiven
	}
	return nil
}

func (m *Immunization) GetVaccineCode() *CodeableConcept {
	if m != nil {
		return m.VaccineCode
	}
	return nil
}

func (m *Immunization) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *Immunization) GetEncounter() *Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *Immunization) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Immunization) GetPrimarySource() *Boolean {
	if m != nil {
		return m.PrimarySource
	}
	return nil
}

func (m *Immunization) GetReportOrigin() *CodeableConcept {
	if m != nil {
		return m.ReportOrigin
	}
	return nil
}

func (m *Immunization) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Immunization) GetManufacturer() *Reference {
	if m != nil {
		return m.Manufacturer
	}
	return nil
}

func (m *Immunization) GetLotNumber() *String {
	if m != nil {
		return m.LotNumber
	}
	return nil
}

func (m *Immunization) GetExpirationDate() *Date {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

func (m *Immunization) GetSite() *CodeableConcept {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *Immunization) GetRoute() *CodeableConcept {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *Immunization) GetDoseQuantity() *SimpleQuantity {
	if m != nil {
		return m.DoseQuantity
	}
	return nil
}

func (m *Immunization) GetPractitioner() []*Immunization_Practitioner {
	if m != nil {
		return m.Practitioner
	}
	return nil
}

func (m *Immunization) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *Immunization) GetExplanation() *Immunization_Explanation {
	if m != nil {
		return m.Explanation
	}
	return nil
}

func (m *Immunization) GetReaction() []*Immunization_Reaction {
	if m != nil {
		return m.Reaction
	}
	return nil
}

func (m *Immunization) GetVaccinationProtocol() []*Immunization_VaccinationProtocol {
	if m != nil {
		return m.VaccinationProtocol
	}
	return nil
}

// Who performed event
type Immunization_Practitioner struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What type of performance was done
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Individual who was performing
	Actor                *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Immunization_Practitioner) Reset()         { *m = Immunization_Practitioner{} }
func (m *Immunization_Practitioner) String() string { return proto.CompactTextString(m) }
func (*Immunization_Practitioner) ProtoMessage()    {}
func (*Immunization_Practitioner) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{56, 0}
}

func (m *Immunization_Practitioner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Immunization_Practitioner.Unmarshal(m, b)
}
func (m *Immunization_Practitioner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Immunization_Practitioner.Marshal(b, m, deterministic)
}
func (m *Immunization_Practitioner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Immunization_Practitioner.Merge(m, src)
}
func (m *Immunization_Practitioner) XXX_Size() int {
	return xxx_messageInfo_Immunization_Practitioner.Size(m)
}
func (m *Immunization_Practitioner) XXX_DiscardUnknown() {
	xxx_messageInfo_Immunization_Practitioner.DiscardUnknown(m)
}

var xxx_messageInfo_Immunization_Practitioner proto.InternalMessageInfo

func (m *Immunization_Practitioner) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Immunization_Practitioner) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Immunization_Practitioner) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Immunization_Practitioner) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Immunization_Practitioner) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

// Administration/non-administration reasons
type Immunization_Explanation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Why immunization occurred
	Reason []*CodeableConcept `protobuf:"bytes,4,rep,name=reason,proto3" json:"reason,omitempty"`
	// Why immunization did not occur
	ReasonNotGiven       []*CodeableConcept `protobuf:"bytes,5,rep,name=reason_not_given,json=reasonNotGiven,proto3" json:"reason_not_given,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Immunization_Explanation) Reset()         { *m = Immunization_Explanation{} }
func (m *Immunization_Explanation) String() string { return proto.CompactTextString(m) }
func (*Immunization_Explanation) ProtoMessage()    {}
func (*Immunization_Explanation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{56, 1}
}

func (m *Immunization_Explanation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Immunization_Explanation.Unmarshal(m, b)
}
func (m *Immunization_Explanation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Immunization_Explanation.Marshal(b, m, deterministic)
}
func (m *Immunization_Explanation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Immunization_Explanation.Merge(m, src)
}
func (m *Immunization_Explanation) XXX_Size() int {
	return xxx_messageInfo_Immunization_Explanation.Size(m)
}
func (m *Immunization_Explanation) XXX_DiscardUnknown() {
	xxx_messageInfo_Immunization_Explanation.DiscardUnknown(m)
}

var xxx_messageInfo_Immunization_Explanation proto.InternalMessageInfo

func (m *Immunization_Explanation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Immunization_Explanation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Immunization_Explanation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Immunization_Explanation) GetReason() []*CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Immunization_Explanation) GetReasonNotGiven() []*CodeableConcept {
	if m != nil {
		return m.ReasonNotGiven
	}
	return nil
}

// Details of a reaction that follows immunization
type Immunization_Reaction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// When reaction started
	Date *DateTime `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	// Additional information on reaction
	Detail *Reference `protobuf:"bytes,5,opt,name=detail,proto3" json:"detail,omitempty"`
	// Indicates self-reported reaction
	Reported             *Boolean `protobuf:"bytes,6,opt,name=reported,proto3" json:"reported,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Immunization_Reaction) Reset()         { *m = Immunization_Reaction{} }
func (m *Immunization_Reaction) String() string { return proto.CompactTextString(m) }
func (*Immunization_Reaction) ProtoMessage()    {}
func (*Immunization_Reaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{56, 2}
}

func (m *Immunization_Reaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Immunization_Reaction.Unmarshal(m, b)
}
func (m *Immunization_Reaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Immunization_Reaction.Marshal(b, m, deterministic)
}
func (m *Immunization_Reaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Immunization_Reaction.Merge(m, src)
}
func (m *Immunization_Reaction) XXX_Size() int {
	return xxx_messageInfo_Immunization_Reaction.Size(m)
}
func (m *Immunization_Reaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Immunization_Reaction.DiscardUnknown(m)
}

var xxx_messageInfo_Immunization_Reaction proto.InternalMessageInfo

func (m *Immunization_Reaction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Immunization_Reaction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Immunization_Reaction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Immunization_Reaction) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Immunization_Reaction) GetDetail() *Reference {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *Immunization_Reaction) GetReported() *Boolean {
	if m != nil {
		return m.Reported
	}
	return nil
}

// What protocol was followed
type Immunization_VaccinationProtocol struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Dose number within series
	DoseSequence *PositiveInt `protobuf:"bytes,4,opt,name=dose_sequence,json=doseSequence,proto3" json:"dose_sequence,omitempty"`
	// Details of vaccine protocol
	Description *String `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Who is responsible for protocol
	Authority *Reference `protobuf:"bytes,6,opt,name=authority,proto3" json:"authority,omitempty"`
	// Name of vaccine series
	Series *String `protobuf:"bytes,7,opt,name=series,proto3" json:"series,omitempty"`
	// Recommended number of doses for immunity
	SeriesDoses *PositiveInt `protobuf:"bytes,8,opt,name=series_doses,json=seriesDoses,proto3" json:"series_doses,omitempty"`
	// Disease immunized against
	TargetDisease []*CodeableConcept `protobuf:"bytes,9,rep,name=target_disease,json=targetDisease,proto3" json:"target_disease,omitempty"`
	// Indicates if dose counts towards immunity
	DoseStatus *CodeableConcept `protobuf:"bytes,10,opt,name=dose_status,json=doseStatus,proto3" json:"dose_status,omitempty"`
	// Why dose does (not) count
	DoseStatusReason     *CodeableConcept `protobuf:"bytes,11,opt,name=dose_status_reason,json=doseStatusReason,proto3" json:"dose_status_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Immunization_VaccinationProtocol) Reset()         { *m = Immunization_VaccinationProtocol{} }
func (m *Immunization_VaccinationProtocol) String() string { return proto.CompactTextString(m) }
func (*Immunization_VaccinationProtocol) ProtoMessage()    {}
func (*Immunization_VaccinationProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{56, 3}
}

func (m *Immunization_VaccinationProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Immunization_VaccinationProtocol.Unmarshal(m, b)
}
func (m *Immunization_VaccinationProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Immunization_VaccinationProtocol.Marshal(b, m, deterministic)
}
func (m *Immunization_VaccinationProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Immunization_VaccinationProtocol.Merge(m, src)
}
func (m *Immunization_VaccinationProtocol) XXX_Size() int {
	return xxx_messageInfo_Immunization_VaccinationProtocol.Size(m)
}
func (m *Immunization_VaccinationProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_Immunization_VaccinationProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_Immunization_VaccinationProtocol proto.InternalMessageInfo

func (m *Immunization_VaccinationProtocol) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetDoseSequence() *PositiveInt {
	if m != nil {
		return m.DoseSequence
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetAuthority() *Reference {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetSeries() *String {
	if m != nil {
		return m.Series
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetSeriesDoses() *PositiveInt {
	if m != nil {
		return m.SeriesDoses
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetTargetDisease() []*CodeableConcept {
	if m != nil {
		return m.TargetDisease
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetDoseStatus() *CodeableConcept {
	if m != nil {
		return m.DoseStatus
	}
	return nil
}

func (m *Immunization_VaccinationProtocol) GetDoseStatusReason() *CodeableConcept {
	if m != nil {
		return m.DoseStatusReason
	}
	return nil
}

// Auto-generated from StructureDefinition for ImmunizationRecommendation, last
// updated 2017-04-19T07:44:43.294+10:00. Guidance or advice relating to an
// immunization. See
// http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation
type ImmunizationRecommendation struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Who this profile is for
	Patient              *Reference                                   `protobuf:"bytes,10,opt,name=patient,proto3" json:"patient,omitempty"`
	Recommendation       []*ImmunizationRecommendation_Recommendation `protobuf:"bytes,11,rep,name=recommendation,proto3" json:"recommendation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *ImmunizationRecommendation) Reset()         { *m = ImmunizationRecommendation{} }
func (m *ImmunizationRecommendation) String() string { return proto.CompactTextString(m) }
func (*ImmunizationRecommendation) ProtoMessage()    {}
func (*ImmunizationRecommendation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{57}
}

func (m *ImmunizationRecommendation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImmunizationRecommendation.Unmarshal(m, b)
}
func (m *ImmunizationRecommendation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImmunizationRecommendation.Marshal(b, m, deterministic)
}
func (m *ImmunizationRecommendation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImmunizationRecommendation.Merge(m, src)
}
func (m *ImmunizationRecommendation) XXX_Size() int {
	return xxx_messageInfo_ImmunizationRecommendation.Size(m)
}
func (m *ImmunizationRecommendation) XXX_DiscardUnknown() {
	xxx_messageInfo_ImmunizationRecommendation.DiscardUnknown(m)
}

var xxx_messageInfo_ImmunizationRecommendation proto.InternalMessageInfo

func (m *ImmunizationRecommendation) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImmunizationRecommendation) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ImmunizationRecommendation) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ImmunizationRecommendation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ImmunizationRecommendation) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ImmunizationRecommendation) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ImmunizationRecommendation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImmunizationRecommendation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImmunizationRecommendation) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ImmunizationRecommendation) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *ImmunizationRecommendation) GetRecommendation() []*ImmunizationRecommendation_Recommendation {
	if m != nil {
		return m.Recommendation
	}
	return nil
}

// Vaccine administration recommendations
type ImmunizationRecommendation_Recommendation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Date recommendation created
	Date *DateTime `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	// Vaccine recommendation applies to
	VaccineCode *CodeableConcept `protobuf:"bytes,5,opt,name=vaccine_code,json=vaccineCode,proto3" json:"vaccine_code,omitempty"`
	// Disease to be immunized against
	TargetDisease *CodeableConcept `protobuf:"bytes,6,opt,name=target_disease,json=targetDisease,proto3" json:"target_disease,omitempty"`
	// Recommended dose number
	DoseNumber *PositiveInt `protobuf:"bytes,7,opt,name=dose_number,json=doseNumber,proto3" json:"dose_number,omitempty"`
	// Vaccine administration status
	ForecastStatus *CodeableConcept                                           `protobuf:"bytes,8,opt,name=forecast_status,json=forecastStatus,proto3" json:"forecast_status,omitempty"`
	DateCriterion  []*ImmunizationRecommendation_Recommendation_DateCriterion `protobuf:"bytes,9,rep,name=date_criterion,json=dateCriterion,proto3" json:"date_criterion,omitempty"`
	Protocol       *ImmunizationRecommendation_Recommendation_Protocol        `protobuf:"bytes,10,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Past immunizations supporting recommendation
	SupportingImmunization []*Reference `protobuf:"bytes,11,rep,name=supporting_immunization,json=supportingImmunization,proto3" json:"supporting_immunization,omitempty"`
	// Patient observations supporting recommendation
	SupportingPatientInformation []*Reference `protobuf:"bytes,12,rep,name=supporting_patient_information,json=supportingPatientInformation,proto3" json:"supporting_patient_information,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}     `json:"-"`
	XXX_unrecognized             []byte       `json:"-"`
	XXX_sizecache                int32        `json:"-"`
}

func (m *ImmunizationRecommendation_Recommendation) Reset() {
	*m = ImmunizationRecommendation_Recommendation{}
}
func (m *ImmunizationRecommendation_Recommendation) String() string { return proto.CompactTextString(m) }
func (*ImmunizationRecommendation_Recommendation) ProtoMessage()    {}
func (*ImmunizationRecommendation_Recommendation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{57, 0}
}

func (m *ImmunizationRecommendation_Recommendation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImmunizationRecommendation_Recommendation.Unmarshal(m, b)
}
func (m *ImmunizationRecommendation_Recommendation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImmunizationRecommendation_Recommendation.Marshal(b, m, deterministic)
}
func (m *ImmunizationRecommendation_Recommendation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImmunizationRecommendation_Recommendation.Merge(m, src)
}
func (m *ImmunizationRecommendation_Recommendation) XXX_Size() int {
	return xxx_messageInfo_ImmunizationRecommendation_Recommendation.Size(m)
}
func (m *ImmunizationRecommendation_Recommendation) XXX_DiscardUnknown() {
	xxx_messageInfo_ImmunizationRecommendation_Recommendation.DiscardUnknown(m)
}

var xxx_messageInfo_ImmunizationRecommendation_Recommendation proto.InternalMessageInfo

func (m *ImmunizationRecommendation_Recommendation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetVaccineCode() *CodeableConcept {
	if m != nil {
		return m.VaccineCode
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetTargetDisease() *CodeableConcept {
	if m != nil {
		return m.TargetDisease
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetDoseNumber() *PositiveInt {
	if m != nil {
		return m.DoseNumber
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetForecastStatus() *CodeableConcept {
	if m != nil {
		return m.ForecastStatus
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetDateCriterion() []*ImmunizationRecommendation_Recommendation_DateCriterion {
	if m != nil {
		return m.DateCriterion
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetProtocol() *ImmunizationRecommendation_Recommendation_Protocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetSupportingImmunization() []*Reference {
	if m != nil {
		return m.SupportingImmunization
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation) GetSupportingPatientInformation() []*Reference {
	if m != nil {
		return m.SupportingPatientInformation
	}
	return nil
}

// Dates governing proposed immunization
type ImmunizationRecommendation_Recommendation_DateCriterion struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of date
	Code *CodeableConcept `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Recommended date
	Value                *DateTime `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ImmunizationRecommendation_Recommendation_DateCriterion) Reset() {
	*m = ImmunizationRecommendation_Recommendation_DateCriterion{}
}
func (m *ImmunizationRecommendation_Recommendation_DateCriterion) String() string {
	return proto.CompactTextString(m)
}
func (*ImmunizationRecommendation_Recommendation_DateCriterion) ProtoMessage() {}
func (*ImmunizationRecommendation_Recommendation_DateCriterion) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{57, 0, 0}
}

func (m *ImmunizationRecommendation_Recommendation_DateCriterion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImmunizationRecommendation_Recommendation_DateCriterion.Unmarshal(m, b)
}
func (m *ImmunizationRecommendation_Recommendation_DateCriterion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImmunizationRecommendation_Recommendation_DateCriterion.Marshal(b, m, deterministic)
}
func (m *ImmunizationRecommendation_Recommendation_DateCriterion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImmunizationRecommendation_Recommendation_DateCriterion.Merge(m, src)
}
func (m *ImmunizationRecommendation_Recommendation_DateCriterion) XXX_Size() int {
	return xxx_messageInfo_ImmunizationRecommendation_Recommendation_DateCriterion.Size(m)
}
func (m *ImmunizationRecommendation_Recommendation_DateCriterion) XXX_DiscardUnknown() {
	xxx_messageInfo_ImmunizationRecommendation_Recommendation_DateCriterion.DiscardUnknown(m)
}

var xxx_messageInfo_ImmunizationRecommendation_Recommendation_DateCriterion proto.InternalMessageInfo

func (m *ImmunizationRecommendation_Recommendation_DateCriterion) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_DateCriterion) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_DateCriterion) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_DateCriterion) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_DateCriterion) GetValue() *DateTime {
	if m != nil {
		return m.Value
	}
	return nil
}

// Protocol used by recommendation
type ImmunizationRecommendation_Recommendation_Protocol struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Dose number within sequence
	DoseSequence *PositiveInt `protobuf:"bytes,4,opt,name=dose_sequence,json=doseSequence,proto3" json:"dose_sequence,omitempty"`
	// Protocol details
	Description *String `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Who is responsible for protocol
	Authority *Reference `protobuf:"bytes,6,opt,name=authority,proto3" json:"authority,omitempty"`
	// Name of vaccination series
	Series               *String  `protobuf:"bytes,7,opt,name=series,proto3" json:"series,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImmunizationRecommendation_Recommendation_Protocol) Reset() {
	*m = ImmunizationRecommendation_Recommendation_Protocol{}
}
func (m *ImmunizationRecommendation_Recommendation_Protocol) String() string {
	return proto.CompactTextString(m)
}
func (*ImmunizationRecommendation_Recommendation_Protocol) ProtoMessage() {}
func (*ImmunizationRecommendation_Recommendation_Protocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{57, 0, 1}
}

func (m *ImmunizationRecommendation_Recommendation_Protocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImmunizationRecommendation_Recommendation_Protocol.Unmarshal(m, b)
}
func (m *ImmunizationRecommendation_Recommendation_Protocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImmunizationRecommendation_Recommendation_Protocol.Marshal(b, m, deterministic)
}
func (m *ImmunizationRecommendation_Recommendation_Protocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImmunizationRecommendation_Recommendation_Protocol.Merge(m, src)
}
func (m *ImmunizationRecommendation_Recommendation_Protocol) XXX_Size() int {
	return xxx_messageInfo_ImmunizationRecommendation_Recommendation_Protocol.Size(m)
}
func (m *ImmunizationRecommendation_Recommendation_Protocol) XXX_DiscardUnknown() {
	xxx_messageInfo_ImmunizationRecommendation_Recommendation_Protocol.DiscardUnknown(m)
}

var xxx_messageInfo_ImmunizationRecommendation_Recommendation_Protocol proto.InternalMessageInfo

func (m *ImmunizationRecommendation_Recommendation_Protocol) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_Protocol) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_Protocol) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_Protocol) GetDoseSequence() *PositiveInt {
	if m != nil {
		return m.DoseSequence
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_Protocol) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_Protocol) GetAuthority() *Reference {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (m *ImmunizationRecommendation_Recommendation_Protocol) GetSeries() *String {
	if m != nil {
		return m.Series
	}
	return nil
}

// Auto-generated from StructureDefinition for ImplementationGuide, last updated
// 2017-04-19T07:44:43.294+10:00. A set of rules about how FHIR is used. See
// http://hl7.org/fhir/StructureDefinition/ImplementationGuide
type ImplementationGuide struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this implementation guide (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Business version of the implementation guide
	Version *String `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this implementation guide (computer friendly)
	Name *String `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,13,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,14,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,15,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,16,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the implementation guide
	Description *Markdown `protobuf:"bytes,17,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,18,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for implementation guide (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,19,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,20,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// FHIR Version this Implementation Guide targets
	FhirVersion  *Id                               `protobuf:"bytes,21,opt,name=fhir_version,json=fhirVersion,proto3" json:"fhir_version,omitempty"`
	Dependency   []*ImplementationGuide_Dependency `protobuf:"bytes,22,rep,name=dependency,proto3" json:"dependency,omitempty"`
	PackageValue []*ImplementationGuide_Package    `protobuf:"bytes,23,rep,name=package_value,json=package,proto3" json:"package_value,omitempty"`
	Global       []*ImplementationGuide_Global     `protobuf:"bytes,24,rep,name=global,proto3" json:"global,omitempty"`
	// Image, css, script, etc.
	Binary               []*Uri                    `protobuf:"bytes,25,rep,name=binary,proto3" json:"binary,omitempty"`
	Page                 *ImplementationGuide_Page `protobuf:"bytes,26,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ImplementationGuide) Reset()         { *m = ImplementationGuide{} }
func (m *ImplementationGuide) String() string { return proto.CompactTextString(m) }
func (*ImplementationGuide) ProtoMessage()    {}
func (*ImplementationGuide) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{58}
}

func (m *ImplementationGuide) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImplementationGuide.Unmarshal(m, b)
}
func (m *ImplementationGuide) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImplementationGuide.Marshal(b, m, deterministic)
}
func (m *ImplementationGuide) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImplementationGuide.Merge(m, src)
}
func (m *ImplementationGuide) XXX_Size() int {
	return xxx_messageInfo_ImplementationGuide.Size(m)
}
func (m *ImplementationGuide) XXX_DiscardUnknown() {
	xxx_messageInfo_ImplementationGuide.DiscardUnknown(m)
}

var xxx_messageInfo_ImplementationGuide proto.InternalMessageInfo

func (m *ImplementationGuide) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImplementationGuide) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ImplementationGuide) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ImplementationGuide) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ImplementationGuide) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ImplementationGuide) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ImplementationGuide) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImplementationGuide) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImplementationGuide) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *ImplementationGuide) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ImplementationGuide) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ImplementationGuide) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ImplementationGuide) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *ImplementationGuide) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ImplementationGuide) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *ImplementationGuide) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *ImplementationGuide) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ImplementationGuide) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *ImplementationGuide) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *ImplementationGuide) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *ImplementationGuide) GetFhirVersion() *Id {
	if m != nil {
		return m.FhirVersion
	}
	return nil
}

func (m *ImplementationGuide) GetDependency() []*ImplementationGuide_Dependency {
	if m != nil {
		return m.Dependency
	}
	return nil
}

func (m *ImplementationGuide) GetPackageValue() []*ImplementationGuide_Package {
	if m != nil {
		return m.PackageValue
	}
	return nil
}

func (m *ImplementationGuide) GetGlobal() []*ImplementationGuide_Global {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *ImplementationGuide) GetBinary() []*Uri {
	if m != nil {
		return m.Binary
	}
	return nil
}

func (m *ImplementationGuide) GetPage() *ImplementationGuide_Page {
	if m != nil {
		return m.Page
	}
	return nil
}

// Another Implementation guide this depends on
type ImplementationGuide_Dependency struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// reference | inclusion
	Type *GuideDependencyTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Where to find dependency
	Uri                  *Uri     `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImplementationGuide_Dependency) Reset()         { *m = ImplementationGuide_Dependency{} }
func (m *ImplementationGuide_Dependency) String() string { return proto.CompactTextString(m) }
func (*ImplementationGuide_Dependency) ProtoMessage()    {}
func (*ImplementationGuide_Dependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{58, 0}
}

func (m *ImplementationGuide_Dependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImplementationGuide_Dependency.Unmarshal(m, b)
}
func (m *ImplementationGuide_Dependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImplementationGuide_Dependency.Marshal(b, m, deterministic)
}
func (m *ImplementationGuide_Dependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImplementationGuide_Dependency.Merge(m, src)
}
func (m *ImplementationGuide_Dependency) XXX_Size() int {
	return xxx_messageInfo_ImplementationGuide_Dependency.Size(m)
}
func (m *ImplementationGuide_Dependency) XXX_DiscardUnknown() {
	xxx_messageInfo_ImplementationGuide_Dependency.DiscardUnknown(m)
}

var xxx_messageInfo_ImplementationGuide_Dependency proto.InternalMessageInfo

func (m *ImplementationGuide_Dependency) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImplementationGuide_Dependency) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImplementationGuide_Dependency) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImplementationGuide_Dependency) GetType() *GuideDependencyTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ImplementationGuide_Dependency) GetUri() *Uri {
	if m != nil {
		return m.Uri
	}
	return nil
}

// Group of resources as used in .page.package
type ImplementationGuide_Package struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name used .page.package
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Human readable text describing the package
	Description          *String                                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Resource             []*ImplementationGuide_Package_Resource `protobuf:"bytes,6,rep,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ImplementationGuide_Package) Reset()         { *m = ImplementationGuide_Package{} }
func (m *ImplementationGuide_Package) String() string { return proto.CompactTextString(m) }
func (*ImplementationGuide_Package) ProtoMessage()    {}
func (*ImplementationGuide_Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{58, 1}
}

func (m *ImplementationGuide_Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImplementationGuide_Package.Unmarshal(m, b)
}
func (m *ImplementationGuide_Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImplementationGuide_Package.Marshal(b, m, deterministic)
}
func (m *ImplementationGuide_Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImplementationGuide_Package.Merge(m, src)
}
func (m *ImplementationGuide_Package) XXX_Size() int {
	return xxx_messageInfo_ImplementationGuide_Package.Size(m)
}
func (m *ImplementationGuide_Package) XXX_DiscardUnknown() {
	xxx_messageInfo_ImplementationGuide_Package.DiscardUnknown(m)
}

var xxx_messageInfo_ImplementationGuide_Package proto.InternalMessageInfo

func (m *ImplementationGuide_Package) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImplementationGuide_Package) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImplementationGuide_Package) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImplementationGuide_Package) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ImplementationGuide_Package) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ImplementationGuide_Package) GetResource() []*ImplementationGuide_Package_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

// Resource in the implementation guide
type ImplementationGuide_Package_Resource struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// If not an example, has its normal meaning
	Example *Boolean `protobuf:"bytes,4,opt,name=example,proto3" json:"example,omitempty"`
	// Human Name for the resource
	Name *String `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Reason why included in guide
	Description *String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Short code to identify the resource
	Acronym *String                                      `protobuf:"bytes,7,opt,name=acronym,proto3" json:"acronym,omitempty"`
	Source  *ImplementationGuide_Package_Resource_Source `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	// Resource this is an example of (if applicable)
	ExampleFor           *Reference `protobuf:"bytes,9,opt,name=example_for,json=exampleFor,proto3" json:"example_for,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ImplementationGuide_Package_Resource) Reset()         { *m = ImplementationGuide_Package_Resource{} }
func (m *ImplementationGuide_Package_Resource) String() string { return proto.CompactTextString(m) }
func (*ImplementationGuide_Package_Resource) ProtoMessage()    {}
func (*ImplementationGuide_Package_Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{58, 1, 0}
}

func (m *ImplementationGuide_Package_Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImplementationGuide_Package_Resource.Unmarshal(m, b)
}
func (m *ImplementationGuide_Package_Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImplementationGuide_Package_Resource.Marshal(b, m, deterministic)
}
func (m *ImplementationGuide_Package_Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImplementationGuide_Package_Resource.Merge(m, src)
}
func (m *ImplementationGuide_Package_Resource) XXX_Size() int {
	return xxx_messageInfo_ImplementationGuide_Package_Resource.Size(m)
}
func (m *ImplementationGuide_Package_Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_ImplementationGuide_Package_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_ImplementationGuide_Package_Resource proto.InternalMessageInfo

func (m *ImplementationGuide_Package_Resource) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource) GetExample() *Boolean {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource) GetAcronym() *String {
	if m != nil {
		return m.Acronym
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource) GetSource() *ImplementationGuide_Package_Resource_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource) GetExampleFor() *Reference {
	if m != nil {
		return m.ExampleFor
	}
	return nil
}

// Location of the resource
type ImplementationGuide_Package_Resource_Source struct {
	// Types that are valid to be assigned to Source:
	//	*ImplementationGuide_Package_Resource_Source_Uri
	//	*ImplementationGuide_Package_Resource_Source_Reference
	Source               isImplementationGuide_Package_Resource_Source_Source `protobuf_oneof:"source"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *ImplementationGuide_Package_Resource_Source) Reset() {
	*m = ImplementationGuide_Package_Resource_Source{}
}
func (m *ImplementationGuide_Package_Resource_Source) String() string {
	return proto.CompactTextString(m)
}
func (*ImplementationGuide_Package_Resource_Source) ProtoMessage() {}
func (*ImplementationGuide_Package_Resource_Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{58, 1, 0, 0}
}

func (m *ImplementationGuide_Package_Resource_Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImplementationGuide_Package_Resource_Source.Unmarshal(m, b)
}
func (m *ImplementationGuide_Package_Resource_Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImplementationGuide_Package_Resource_Source.Marshal(b, m, deterministic)
}
func (m *ImplementationGuide_Package_Resource_Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImplementationGuide_Package_Resource_Source.Merge(m, src)
}
func (m *ImplementationGuide_Package_Resource_Source) XXX_Size() int {
	return xxx_messageInfo_ImplementationGuide_Package_Resource_Source.Size(m)
}
func (m *ImplementationGuide_Package_Resource_Source) XXX_DiscardUnknown() {
	xxx_messageInfo_ImplementationGuide_Package_Resource_Source.DiscardUnknown(m)
}

var xxx_messageInfo_ImplementationGuide_Package_Resource_Source proto.InternalMessageInfo

type isImplementationGuide_Package_Resource_Source_Source interface {
	isImplementationGuide_Package_Resource_Source_Source()
}

type ImplementationGuide_Package_Resource_Source_Uri struct {
	Uri *Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

type ImplementationGuide_Package_Resource_Source_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*ImplementationGuide_Package_Resource_Source_Uri) isImplementationGuide_Package_Resource_Source_Source() {
}

func (*ImplementationGuide_Package_Resource_Source_Reference) isImplementationGuide_Package_Resource_Source_Source() {
}

func (m *ImplementationGuide_Package_Resource_Source) GetSource() isImplementationGuide_Package_Resource_Source_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource_Source) GetUri() *Uri {
	if x, ok := m.GetSource().(*ImplementationGuide_Package_Resource_Source_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *ImplementationGuide_Package_Resource_Source) GetReference() *Reference {
	if x, ok := m.GetSource().(*ImplementationGuide_Package_Resource_Source_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ImplementationGuide_Package_Resource_Source) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ImplementationGuide_Package_Resource_Source_OneofMarshaler, _ImplementationGuide_Package_Resource_Source_OneofUnmarshaler, _ImplementationGuide_Package_Resource_Source_OneofSizer, []interface{}{
		(*ImplementationGuide_Package_Resource_Source_Uri)(nil),
		(*ImplementationGuide_Package_Resource_Source_Reference)(nil),
	}
}

func _ImplementationGuide_Package_Resource_Source_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ImplementationGuide_Package_Resource_Source)
	// source
	switch x := m.Source.(type) {
	case *ImplementationGuide_Package_Resource_Source_Uri:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *ImplementationGuide_Package_Resource_Source_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ImplementationGuide_Package_Resource_Source.Source has unexpected type %T", x)
	}
	return nil
}

func _ImplementationGuide_Package_Resource_Source_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ImplementationGuide_Package_Resource_Source)
	switch tag {
	case 1: // source.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Source = &ImplementationGuide_Package_Resource_Source_Uri{msg}
		return true, err
	case 2: // source.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Source = &ImplementationGuide_Package_Resource_Source_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ImplementationGuide_Package_Resource_Source_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ImplementationGuide_Package_Resource_Source)
	// source
	switch x := m.Source.(type) {
	case *ImplementationGuide_Package_Resource_Source_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ImplementationGuide_Package_Resource_Source_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Profiles that apply globally
type ImplementationGuide_Global struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type this profiles applies to
	Type *ResourceTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Profile that all resources must conform to
	Profile              *Reference `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ImplementationGuide_Global) Reset()         { *m = ImplementationGuide_Global{} }
func (m *ImplementationGuide_Global) String() string { return proto.CompactTextString(m) }
func (*ImplementationGuide_Global) ProtoMessage()    {}
func (*ImplementationGuide_Global) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{58, 2}
}

func (m *ImplementationGuide_Global) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImplementationGuide_Global.Unmarshal(m, b)
}
func (m *ImplementationGuide_Global) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImplementationGuide_Global.Marshal(b, m, deterministic)
}
func (m *ImplementationGuide_Global) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImplementationGuide_Global.Merge(m, src)
}
func (m *ImplementationGuide_Global) XXX_Size() int {
	return xxx_messageInfo_ImplementationGuide_Global.Size(m)
}
func (m *ImplementationGuide_Global) XXX_DiscardUnknown() {
	xxx_messageInfo_ImplementationGuide_Global.DiscardUnknown(m)
}

var xxx_messageInfo_ImplementationGuide_Global proto.InternalMessageInfo

func (m *ImplementationGuide_Global) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImplementationGuide_Global) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImplementationGuide_Global) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImplementationGuide_Global) GetType() *ResourceTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ImplementationGuide_Global) GetProfile() *Reference {
	if m != nil {
		return m.Profile
	}
	return nil
}

// Page/Section in the Guide
type ImplementationGuide_Page struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Where to find that page
	Source *Uri `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	// Short title shown for navigational assistance
	Title *String `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// page | example | list | include | directory | dictionary | toc | resource
	Kind *GuidePageKindCode `protobuf:"bytes,6,opt,name=kind,proto3" json:"kind,omitempty"`
	// Kind of resource to include in the list
	Type []*ResourceTypeCode `protobuf:"bytes,7,rep,name=type,proto3" json:"type,omitempty"`
	// Name of package to include
	PackageValue []*String `protobuf:"bytes,8,rep,name=package_value,json=package,proto3" json:"package_value,omitempty"`
	// Format of the page (e.g. html, markdown, etc.)
	Format *MimeTypeCode `protobuf:"bytes,9,opt,name=format,proto3" json:"format,omitempty"`
	// Nested Pages / Sections
	Page                 []*ImplementationGuide_Page `protobuf:"bytes,10,rep,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ImplementationGuide_Page) Reset()         { *m = ImplementationGuide_Page{} }
func (m *ImplementationGuide_Page) String() string { return proto.CompactTextString(m) }
func (*ImplementationGuide_Page) ProtoMessage()    {}
func (*ImplementationGuide_Page) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{58, 3}
}

func (m *ImplementationGuide_Page) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImplementationGuide_Page.Unmarshal(m, b)
}
func (m *ImplementationGuide_Page) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImplementationGuide_Page.Marshal(b, m, deterministic)
}
func (m *ImplementationGuide_Page) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImplementationGuide_Page.Merge(m, src)
}
func (m *ImplementationGuide_Page) XXX_Size() int {
	return xxx_messageInfo_ImplementationGuide_Page.Size(m)
}
func (m *ImplementationGuide_Page) XXX_DiscardUnknown() {
	xxx_messageInfo_ImplementationGuide_Page.DiscardUnknown(m)
}

var xxx_messageInfo_ImplementationGuide_Page proto.InternalMessageInfo

func (m *ImplementationGuide_Page) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ImplementationGuide_Page) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ImplementationGuide_Page) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ImplementationGuide_Page) GetSource() *Uri {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ImplementationGuide_Page) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *ImplementationGuide_Page) GetKind() *GuidePageKindCode {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *ImplementationGuide_Page) GetType() []*ResourceTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ImplementationGuide_Page) GetPackageValue() []*String {
	if m != nil {
		return m.PackageValue
	}
	return nil
}

func (m *ImplementationGuide_Page) GetFormat() *MimeTypeCode {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *ImplementationGuide_Page) GetPage() []*ImplementationGuide_Page {
	if m != nil {
		return m.Page
	}
	return nil
}

// Auto-generated from StructureDefinition for Library, last updated
// 2017-04-19T07:44:43.294+10:00. Represents a library of quality improvement
// components. See http://hl7.org/fhir/StructureDefinition/Library
type Library struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this library (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the library
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the library
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this library (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this library (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// logic-library | model-definition | asset-collection | module-definition
	Type *CodeableConcept `protobuf:"bytes,16,opt,name=type,proto3" json:"type,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,17,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,18,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Natural language description of the library
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Why this library is defined
	Purpose *Markdown `protobuf:"bytes,20,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Describes the clinical usage of the library
	Usage *String `protobuf:"bytes,21,opt,name=usage,proto3" json:"usage,omitempty"`
	// When the library was approved by publisher
	ApprovalDate *Date `protobuf:"bytes,22,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	// When the library was last reviewed
	LastReviewDate *Date `protobuf:"bytes,23,opt,name=last_review_date,json=lastReviewDate,proto3" json:"last_review_date,omitempty"`
	// When the library is expected to be used
	EffectivePeriod *Period `protobuf:"bytes,24,opt,name=effective_period,json=effectivePeriod,proto3" json:"effective_period,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,25,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for library (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,26,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// E.g. Education, Treatment, Assessment, etc
	Topic []*CodeableConcept `protobuf:"bytes,27,rep,name=topic,proto3" json:"topic,omitempty"`
	// A content contributor
	Contributor []*Contributor `protobuf:"bytes,28,rep,name=contributor,proto3" json:"contributor,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,29,rep,name=contact,proto3" json:"contact,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,30,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Additional documentation, citations, etc.
	RelatedArtifact []*RelatedArtifact `protobuf:"bytes,31,rep,name=related_artifact,json=relatedArtifact,proto3" json:"related_artifact,omitempty"`
	// Parameters defined by the library
	Parameter []*ParameterDefinition `protobuf:"bytes,32,rep,name=parameter,proto3" json:"parameter,omitempty"`
	// What data is referenced by this library
	DataRequirement []*DataRequirement `protobuf:"bytes,33,rep,name=data_requirement,json=dataRequirement,proto3" json:"data_requirement,omitempty"`
	// Contents of the library, either embedded or referenced
	Content              []*Attachment `protobuf:"bytes,34,rep,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Library) Reset()         { *m = Library{} }
func (m *Library) String() string { return proto.CompactTextString(m) }
func (*Library) ProtoMessage()    {}
func (*Library) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{59}
}

func (m *Library) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Library.Unmarshal(m, b)
}
func (m *Library) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Library.Marshal(b, m, deterministic)
}
func (m *Library) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Library.Merge(m, src)
}
func (m *Library) XXX_Size() int {
	return xxx_messageInfo_Library.Size(m)
}
func (m *Library) XXX_DiscardUnknown() {
	xxx_messageInfo_Library.DiscardUnknown(m)
}

var xxx_messageInfo_Library proto.InternalMessageInfo

func (m *Library) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Library) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Library) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Library) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Library) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Library) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Library) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Library) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Library) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Library) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Library) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Library) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Library) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Library) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Library) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *Library) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Library) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Library) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *Library) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Library) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *Library) GetUsage() *String {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *Library) GetApprovalDate() *Date {
	if m != nil {
		return m.ApprovalDate
	}
	return nil
}

func (m *Library) GetLastReviewDate() *Date {
	if m != nil {
		return m.LastReviewDate
	}
	return nil
}

func (m *Library) GetEffectivePeriod() *Period {
	if m != nil {
		return m.EffectivePeriod
	}
	return nil
}

func (m *Library) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *Library) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *Library) GetTopic() []*CodeableConcept {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Library) GetContributor() []*Contributor {
	if m != nil {
		return m.Contributor
	}
	return nil
}

func (m *Library) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Library) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *Library) GetRelatedArtifact() []*RelatedArtifact {
	if m != nil {
		return m.RelatedArtifact
	}
	return nil
}

func (m *Library) GetParameter() []*ParameterDefinition {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *Library) GetDataRequirement() []*DataRequirement {
	if m != nil {
		return m.DataRequirement
	}
	return nil
}

func (m *Library) GetContent() []*Attachment {
	if m != nil {
		return m.Content
	}
	return nil
}

// Auto-generated from StructureDefinition for Linkage, last updated
// 2017-04-19T07:44:43.294+10:00. Links records for 'same' item. See
// http://hl7.org/fhir/StructureDefinition/Linkage
type Linkage struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Whether this linkage assertion is active or not
	Active *Boolean `protobuf:"bytes,9,opt,name=active,proto3" json:"active,omitempty"`
	// Who is responsible for linkages
	Author               *Reference      `protobuf:"bytes,10,opt,name=author,proto3" json:"author,omitempty"`
	Item                 []*Linkage_Item `protobuf:"bytes,11,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Linkage) Reset()         { *m = Linkage{} }
func (m *Linkage) String() string { return proto.CompactTextString(m) }
func (*Linkage) ProtoMessage()    {}
func (*Linkage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{60}
}

func (m *Linkage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Linkage.Unmarshal(m, b)
}
func (m *Linkage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Linkage.Marshal(b, m, deterministic)
}
func (m *Linkage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Linkage.Merge(m, src)
}
func (m *Linkage) XXX_Size() int {
	return xxx_messageInfo_Linkage.Size(m)
}
func (m *Linkage) XXX_DiscardUnknown() {
	xxx_messageInfo_Linkage.DiscardUnknown(m)
}

var xxx_messageInfo_Linkage proto.InternalMessageInfo

func (m *Linkage) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Linkage) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Linkage) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Linkage) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Linkage) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Linkage) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Linkage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Linkage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Linkage) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Linkage) GetAuthor() *Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Linkage) GetItem() []*Linkage_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

// Item to be linked
type Linkage_Item struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// source | alternate | historical
	Type *LinkageTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource being linked
	Resource             *Reference `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Linkage_Item) Reset()         { *m = Linkage_Item{} }
func (m *Linkage_Item) String() string { return proto.CompactTextString(m) }
func (*Linkage_Item) ProtoMessage()    {}
func (*Linkage_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{60, 0}
}

func (m *Linkage_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Linkage_Item.Unmarshal(m, b)
}
func (m *Linkage_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Linkage_Item.Marshal(b, m, deterministic)
}
func (m *Linkage_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Linkage_Item.Merge(m, src)
}
func (m *Linkage_Item) XXX_Size() int {
	return xxx_messageInfo_Linkage_Item.Size(m)
}
func (m *Linkage_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Linkage_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Linkage_Item proto.InternalMessageInfo

func (m *Linkage_Item) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Linkage_Item) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Linkage_Item) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Linkage_Item) GetType() *LinkageTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Linkage_Item) GetResource() *Reference {
	if m != nil {
		return m.Resource
	}
	return nil
}

// Auto-generated from StructureDefinition for List, last updated
// 2017-04-19T07:44:43.294+10:00. Information summarized from a list of other
// resources. See http://hl7.org/fhir/StructureDefinition/List
type List struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// current | retired | entered-in-error
	Status *ListStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// working | snapshot | changes
	Mode *ListModeCode `protobuf:"bytes,11,opt,name=mode,proto3" json:"mode,omitempty"`
	// Descriptive name for the list
	Title *String `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`
	// What the purpose of this list is
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// If all resources have the same subject
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Context in which list created
	Encounter *Reference `protobuf:"bytes,15,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// When the list was prepared
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Who and/or what defined the list contents (aka Author)
	Source *Reference `protobuf:"bytes,17,opt,name=source,proto3" json:"source,omitempty"`
	// What order the list has
	OrderedBy *CodeableConcept `protobuf:"bytes,18,opt,name=ordered_by,json=orderedBy,proto3" json:"ordered_by,omitempty"`
	// Comments about the list
	Note  []*Annotation `protobuf:"bytes,19,rep,name=note,proto3" json:"note,omitempty"`
	Entry []*List_Entry `protobuf:"bytes,20,rep,name=entry,proto3" json:"entry,omitempty"`
	// Why list is empty
	EmptyReason          *CodeableConcept `protobuf:"bytes,21,opt,name=empty_reason,json=emptyReason,proto3" json:"empty_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{61}
}

func (m *List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List.Unmarshal(m, b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List.Marshal(b, m, deterministic)
}
func (m *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(m, src)
}
func (m *List) XXX_Size() int {
	return xxx_messageInfo_List.Size(m)
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *List) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *List) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *List) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *List) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *List) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *List) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *List) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *List) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *List) GetStatus() *ListStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *List) GetMode() *ListModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *List) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *List) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *List) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *List) GetEncounter() *Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *List) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *List) GetSource() *Reference {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *List) GetOrderedBy() *CodeableConcept {
	if m != nil {
		return m.OrderedBy
	}
	return nil
}

func (m *List) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *List) GetEntry() []*List_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *List) GetEmptyReason() *CodeableConcept {
	if m != nil {
		return m.EmptyReason
	}
	return nil
}

// Entries in the list
type List_Entry struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Status/Workflow information about this item
	Flag *CodeableConcept `protobuf:"bytes,4,opt,name=flag,proto3" json:"flag,omitempty"`
	// If this item is actually marked as deleted
	Deleted *Boolean `protobuf:"bytes,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// When item added to list
	Date *DateTime `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	// Actual entry
	Item                 *Reference `protobuf:"bytes,7,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *List_Entry) Reset()         { *m = List_Entry{} }
func (m *List_Entry) String() string { return proto.CompactTextString(m) }
func (*List_Entry) ProtoMessage()    {}
func (*List_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{61, 0}
}

func (m *List_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List_Entry.Unmarshal(m, b)
}
func (m *List_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List_Entry.Marshal(b, m, deterministic)
}
func (m *List_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List_Entry.Merge(m, src)
}
func (m *List_Entry) XXX_Size() int {
	return xxx_messageInfo_List_Entry.Size(m)
}
func (m *List_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_List_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_List_Entry proto.InternalMessageInfo

func (m *List_Entry) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *List_Entry) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *List_Entry) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *List_Entry) GetFlag() *CodeableConcept {
	if m != nil {
		return m.Flag
	}
	return nil
}

func (m *List_Entry) GetDeleted() *Boolean {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *List_Entry) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *List_Entry) GetItem() *Reference {
	if m != nil {
		return m.Item
	}
	return nil
}

// Auto-generated from StructureDefinition for Location, last updated
// 2017-04-19T07:44:43.294+10:00. Details and position information for a
// physical place. See http://hl7.org/fhir/StructureDefinition/Location
type Location struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique code or number identifying the location to its users
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | suspended | inactive
	Status *LocationStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// The Operational status of the location (typically only for a bed/room)
	OperationalStatus *Coding `protobuf:"bytes,11,opt,name=operational_status,json=operationalStatus,proto3" json:"operational_status,omitempty"`
	// Name of the location as used by humans
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// A list of alternate names that the location is known as, or was known as in
	// the past
	Alias []*String `protobuf:"bytes,13,rep,name=alias,proto3" json:"alias,omitempty"`
	// Additional details about the location that could be displayed as further
	// information to identify the location beyond its name
	Description *String `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	// instance | kind
	Mode *LocationModeCode `protobuf:"bytes,15,opt,name=mode,proto3" json:"mode,omitempty"`
	// Type of function performed
	Type *CodeableConcept `protobuf:"bytes,16,opt,name=type,proto3" json:"type,omitempty"`
	// Contact details of the location
	Telecom []*ContactPoint `protobuf:"bytes,17,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// Physical location
	Address *Address `protobuf:"bytes,18,opt,name=address,proto3" json:"address,omitempty"`
	// Physical form of the location
	PhysicalType *CodeableConcept   `protobuf:"bytes,19,opt,name=physical_type,json=physicalType,proto3" json:"physical_type,omitempty"`
	Position     *Location_Position `protobuf:"bytes,20,opt,name=position,proto3" json:"position,omitempty"`
	// Organization responsible for provisioning and upkeep
	ManagingOrganization *Reference `protobuf:"bytes,21,opt,name=managing_organization,json=managingOrganization,proto3" json:"managing_organization,omitempty"`
	// Another Location this one is physically part of
	PartOf *Reference `protobuf:"bytes,22,opt,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// Technical endpoints providing access to services operated for the location
	Endpoint             []*Reference `protobuf:"bytes,23,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{62}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Location) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Location) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Location) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Location) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Location) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Location) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Location) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Location) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Location) GetStatus() *LocationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Location) GetOperationalStatus() *Coding {
	if m != nil {
		return m.OperationalStatus
	}
	return nil
}

func (m *Location) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Location) GetAlias() []*String {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *Location) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Location) GetMode() *LocationModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *Location) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Location) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *Location) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Location) GetPhysicalType() *CodeableConcept {
	if m != nil {
		return m.PhysicalType
	}
	return nil
}

func (m *Location) GetPosition() *Location_Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Location) GetManagingOrganization() *Reference {
	if m != nil {
		return m.ManagingOrganization
	}
	return nil
}

func (m *Location) GetPartOf() *Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *Location) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

// The absolute geographic location
type Location_Position struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Longitude with WGS84 datum
	Longitude *Decimal `protobuf:"bytes,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// Latitude with WGS84 datum
	Latitude *Decimal `protobuf:"bytes,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// Altitude with WGS84 datum
	Altitude             *Decimal `protobuf:"bytes,6,opt,name=altitude,proto3" json:"altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location_Position) Reset()         { *m = Location_Position{} }
func (m *Location_Position) String() string { return proto.CompactTextString(m) }
func (*Location_Position) ProtoMessage()    {}
func (*Location_Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{62, 0}
}

func (m *Location_Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location_Position.Unmarshal(m, b)
}
func (m *Location_Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location_Position.Marshal(b, m, deterministic)
}
func (m *Location_Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location_Position.Merge(m, src)
}
func (m *Location_Position) XXX_Size() int {
	return xxx_messageInfo_Location_Position.Size(m)
}
func (m *Location_Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Location_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Location_Position proto.InternalMessageInfo

func (m *Location_Position) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Location_Position) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Location_Position) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Location_Position) GetLongitude() *Decimal {
	if m != nil {
		return m.Longitude
	}
	return nil
}

func (m *Location_Position) GetLatitude() *Decimal {
	if m != nil {
		return m.Latitude
	}
	return nil
}

func (m *Location_Position) GetAltitude() *Decimal {
	if m != nil {
		return m.Altitude
	}
	return nil
}

// Auto-generated from StructureDefinition for Measure, last updated
// 2017-04-19T07:44:43.294+10:00. A quality measure definition. See
// http://hl7.org/fhir/StructureDefinition/Measure
type Measure struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this measure (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the measure
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the measure
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this measure (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this measure (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Natural language description of the measure
	Description *Markdown `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Why this measure is defined
	Purpose *Markdown `protobuf:"bytes,19,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Describes the clinical usage of the measure
	Usage *String `protobuf:"bytes,20,opt,name=usage,proto3" json:"usage,omitempty"`
	// When the measure was approved by publisher
	ApprovalDate *Date `protobuf:"bytes,21,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	// When the measure was last reviewed
	LastReviewDate *Date `protobuf:"bytes,22,opt,name=last_review_date,json=lastReviewDate,proto3" json:"last_review_date,omitempty"`
	// When the measure is expected to be used
	EffectivePeriod *Period `protobuf:"bytes,23,opt,name=effective_period,json=effectivePeriod,proto3" json:"effective_period,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,24,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for measure (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,25,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// E.g. Education, Treatment, Assessment, etc
	Topic []*CodeableConcept `protobuf:"bytes,26,rep,name=topic,proto3" json:"topic,omitempty"`
	// A content contributor
	Contributor []*Contributor `protobuf:"bytes,27,rep,name=contributor,proto3" json:"contributor,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,28,rep,name=contact,proto3" json:"contact,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,29,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Additional documentation, citations, etc
	RelatedArtifact []*RelatedArtifact `protobuf:"bytes,30,rep,name=related_artifact,json=relatedArtifact,proto3" json:"related_artifact,omitempty"`
	// Logic used by the measure
	Library []*Reference `protobuf:"bytes,31,rep,name=library,proto3" json:"library,omitempty"`
	// Disclaimer for use of the measure or its referenced content
	Disclaimer *Markdown `protobuf:"bytes,32,opt,name=disclaimer,proto3" json:"disclaimer,omitempty"`
	// proportion | ratio | continuous-variable | cohort
	Scoring *CodeableConcept `protobuf:"bytes,33,opt,name=scoring,proto3" json:"scoring,omitempty"`
	// opportunity | all-or-nothing | linear | weighted
	CompositeScoring *CodeableConcept `protobuf:"bytes,34,opt,name=composite_scoring,json=compositeScoring,proto3" json:"composite_scoring,omitempty"`
	// process | outcome | structure | patient-reported-outcome | composite
	Type []*CodeableConcept `protobuf:"bytes,35,rep,name=type,proto3" json:"type,omitempty"`
	// How is risk adjustment applied for this measure
	RiskAdjustment *String `protobuf:"bytes,36,opt,name=risk_adjustment,json=riskAdjustment,proto3" json:"risk_adjustment,omitempty"`
	// How is rate aggregation performed for this measure
	RateAggregation *String `protobuf:"bytes,37,opt,name=rate_aggregation,json=rateAggregation,proto3" json:"rate_aggregation,omitempty"`
	// Why does this measure exist
	Rationale *Markdown `protobuf:"bytes,38,opt,name=rationale,proto3" json:"rationale,omitempty"`
	// Summary of clinical guidelines
	ClinicalRecommendationStatement *Markdown `protobuf:"bytes,39,opt,name=clinical_recommendation_statement,json=clinicalRecommendationStatement,proto3" json:"clinical_recommendation_statement,omitempty"`
	// Improvement notation for the measure, e.g. higher score indicates better
	// quality
	ImprovementNotation *String `protobuf:"bytes,40,opt,name=improvement_notation,json=improvementNotation,proto3" json:"improvement_notation,omitempty"`
	// Defined terms used in the measure documentation
	Definition []*Markdown `protobuf:"bytes,41,rep,name=definition,proto3" json:"definition,omitempty"`
	// Additional guidance for implementers
	Guidance *Markdown `protobuf:"bytes,42,opt,name=guidance,proto3" json:"guidance,omitempty"`
	// The measure set, e.g. Preventive Care and Screening
	Set                  *String                     `protobuf:"bytes,43,opt,name=set,proto3" json:"set,omitempty"`
	Group                []*Measure_Group            `protobuf:"bytes,44,rep,name=group,proto3" json:"group,omitempty"`
	SupplementalData     []*Measure_SupplementalData `protobuf:"bytes,45,rep,name=supplemental_data,json=supplementalData,proto3" json:"supplemental_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Measure) Reset()         { *m = Measure{} }
func (m *Measure) String() string { return proto.CompactTextString(m) }
func (*Measure) ProtoMessage()    {}
func (*Measure) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{63}
}

func (m *Measure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measure.Unmarshal(m, b)
}
func (m *Measure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measure.Marshal(b, m, deterministic)
}
func (m *Measure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measure.Merge(m, src)
}
func (m *Measure) XXX_Size() int {
	return xxx_messageInfo_Measure.Size(m)
}
func (m *Measure) XXX_DiscardUnknown() {
	xxx_messageInfo_Measure.DiscardUnknown(m)
}

var xxx_messageInfo_Measure proto.InternalMessageInfo

func (m *Measure) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Measure) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Measure) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Measure) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Measure) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Measure) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Measure) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Measure) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Measure) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Measure) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Measure) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Measure) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Measure) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Measure) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Measure) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *Measure) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Measure) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *Measure) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Measure) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *Measure) GetUsage() *String {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *Measure) GetApprovalDate() *Date {
	if m != nil {
		return m.ApprovalDate
	}
	return nil
}

func (m *Measure) GetLastReviewDate() *Date {
	if m != nil {
		return m.LastReviewDate
	}
	return nil
}

func (m *Measure) GetEffectivePeriod() *Period {
	if m != nil {
		return m.EffectivePeriod
	}
	return nil
}

func (m *Measure) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *Measure) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *Measure) GetTopic() []*CodeableConcept {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Measure) GetContributor() []*Contributor {
	if m != nil {
		return m.Contributor
	}
	return nil
}

func (m *Measure) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Measure) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *Measure) GetRelatedArtifact() []*RelatedArtifact {
	if m != nil {
		return m.RelatedArtifact
	}
	return nil
}

func (m *Measure) GetLibrary() []*Reference {
	if m != nil {
		return m.Library
	}
	return nil
}

func (m *Measure) GetDisclaimer() *Markdown {
	if m != nil {
		return m.Disclaimer
	}
	return nil
}

func (m *Measure) GetScoring() *CodeableConcept {
	if m != nil {
		return m.Scoring
	}
	return nil
}

func (m *Measure) GetCompositeScoring() *CodeableConcept {
	if m != nil {
		return m.CompositeScoring
	}
	return nil
}

func (m *Measure) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Measure) GetRiskAdjustment() *String {
	if m != nil {
		return m.RiskAdjustment
	}
	return nil
}

func (m *Measure) GetRateAggregation() *String {
	if m != nil {
		return m.RateAggregation
	}
	return nil
}

func (m *Measure) GetRationale() *Markdown {
	if m != nil {
		return m.Rationale
	}
	return nil
}

func (m *Measure) GetClinicalRecommendationStatement() *Markdown {
	if m != nil {
		return m.ClinicalRecommendationStatement
	}
	return nil
}

func (m *Measure) GetImprovementNotation() *String {
	if m != nil {
		return m.ImprovementNotation
	}
	return nil
}

func (m *Measure) GetDefinition() []*Markdown {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *Measure) GetGuidance() *Markdown {
	if m != nil {
		return m.Guidance
	}
	return nil
}

func (m *Measure) GetSet() *String {
	if m != nil {
		return m.Set
	}
	return nil
}

func (m *Measure) GetGroup() []*Measure_Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *Measure) GetSupplementalData() []*Measure_SupplementalData {
	if m != nil {
		return m.SupplementalData
	}
	return nil
}

// Population criteria group
type Measure_Group struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique identifier
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Short name
	Name *String `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Summary description
	Description          *String                     `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Population           []*Measure_Group_Population `protobuf:"bytes,7,rep,name=population,proto3" json:"population,omitempty"`
	Stratifier           []*Measure_Group_Stratifier `protobuf:"bytes,8,rep,name=stratifier,proto3" json:"stratifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Measure_Group) Reset()         { *m = Measure_Group{} }
func (m *Measure_Group) String() string { return proto.CompactTextString(m) }
func (*Measure_Group) ProtoMessage()    {}
func (*Measure_Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{63, 0}
}

func (m *Measure_Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measure_Group.Unmarshal(m, b)
}
func (m *Measure_Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measure_Group.Marshal(b, m, deterministic)
}
func (m *Measure_Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measure_Group.Merge(m, src)
}
func (m *Measure_Group) XXX_Size() int {
	return xxx_messageInfo_Measure_Group.Size(m)
}
func (m *Measure_Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Measure_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Measure_Group proto.InternalMessageInfo

func (m *Measure_Group) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Measure_Group) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Measure_Group) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Measure_Group) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Measure_Group) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Measure_Group) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Measure_Group) GetPopulation() []*Measure_Group_Population {
	if m != nil {
		return m.Population
	}
	return nil
}

func (m *Measure_Group) GetStratifier() []*Measure_Group_Stratifier {
	if m != nil {
		return m.Stratifier
	}
	return nil
}

// Population criteria
type Measure_Group_Population struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique identifier
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// initial-population | numerator | numerator-exclusion | denominator |
	// denominator-exclusion | denominator-exception | measure-population |
	// measure-population-exclusion | measure-observation
	Code *CodeableConcept `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Short name
	Name *String `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// The human readable description of this population criteria
	Description *String `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// The name of a valid referenced CQL expression (may be namespaced) that
	// defines this population criteria
	Criteria             *String  `protobuf:"bytes,8,opt,name=criteria,proto3" json:"criteria,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Measure_Group_Population) Reset()         { *m = Measure_Group_Population{} }
func (m *Measure_Group_Population) String() string { return proto.CompactTextString(m) }
func (*Measure_Group_Population) ProtoMessage()    {}
func (*Measure_Group_Population) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{63, 0, 0}
}

func (m *Measure_Group_Population) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measure_Group_Population.Unmarshal(m, b)
}
func (m *Measure_Group_Population) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measure_Group_Population.Marshal(b, m, deterministic)
}
func (m *Measure_Group_Population) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measure_Group_Population.Merge(m, src)
}
func (m *Measure_Group_Population) XXX_Size() int {
	return xxx_messageInfo_Measure_Group_Population.Size(m)
}
func (m *Measure_Group_Population) XXX_DiscardUnknown() {
	xxx_messageInfo_Measure_Group_Population.DiscardUnknown(m)
}

var xxx_messageInfo_Measure_Group_Population proto.InternalMessageInfo

func (m *Measure_Group_Population) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Measure_Group_Population) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Measure_Group_Population) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Measure_Group_Population) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Measure_Group_Population) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Measure_Group_Population) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Measure_Group_Population) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Measure_Group_Population) GetCriteria() *String {
	if m != nil {
		return m.Criteria
	}
	return nil
}

// Stratifier criteria for the measure
type Measure_Group_Stratifier struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The identifier for the stratifier used to coordinate the reported data
	// back to this stratifier
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// How the measure should be stratified
	Criteria *String `protobuf:"bytes,5,opt,name=criteria,proto3" json:"criteria,omitempty"`
	// Path to the stratifier
	Path                 *String  `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Measure_Group_Stratifier) Reset()         { *m = Measure_Group_Stratifier{} }
func (m *Measure_Group_Stratifier) String() string { return proto.CompactTextString(m) }
func (*Measure_Group_Stratifier) ProtoMessage()    {}
func (*Measure_Group_Stratifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{63, 0, 1}
}

func (m *Measure_Group_Stratifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measure_Group_Stratifier.Unmarshal(m, b)
}
func (m *Measure_Group_Stratifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measure_Group_Stratifier.Marshal(b, m, deterministic)
}
func (m *Measure_Group_Stratifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measure_Group_Stratifier.Merge(m, src)
}
func (m *Measure_Group_Stratifier) XXX_Size() int {
	return xxx_messageInfo_Measure_Group_Stratifier.Size(m)
}
func (m *Measure_Group_Stratifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Measure_Group_Stratifier.DiscardUnknown(m)
}

var xxx_messageInfo_Measure_Group_Stratifier proto.InternalMessageInfo

func (m *Measure_Group_Stratifier) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Measure_Group_Stratifier) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Measure_Group_Stratifier) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Measure_Group_Stratifier) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Measure_Group_Stratifier) GetCriteria() *String {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (m *Measure_Group_Stratifier) GetPath() *String {
	if m != nil {
		return m.Path
	}
	return nil
}

// What other data should be reported with the measure
type Measure_SupplementalData struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifier, unique within the measure
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// supplemental-data | risk-adjustment-factor
	Usage []*CodeableConcept `protobuf:"bytes,5,rep,name=usage,proto3" json:"usage,omitempty"`
	// Expression describing additional data to be reported
	Criteria *String `protobuf:"bytes,6,opt,name=criteria,proto3" json:"criteria,omitempty"`
	// Path to the supplemental data element
	Path                 *String  `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Measure_SupplementalData) Reset()         { *m = Measure_SupplementalData{} }
func (m *Measure_SupplementalData) String() string { return proto.CompactTextString(m) }
func (*Measure_SupplementalData) ProtoMessage()    {}
func (*Measure_SupplementalData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{63, 1}
}

func (m *Measure_SupplementalData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measure_SupplementalData.Unmarshal(m, b)
}
func (m *Measure_SupplementalData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measure_SupplementalData.Marshal(b, m, deterministic)
}
func (m *Measure_SupplementalData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measure_SupplementalData.Merge(m, src)
}
func (m *Measure_SupplementalData) XXX_Size() int {
	return xxx_messageInfo_Measure_SupplementalData.Size(m)
}
func (m *Measure_SupplementalData) XXX_DiscardUnknown() {
	xxx_messageInfo_Measure_SupplementalData.DiscardUnknown(m)
}

var xxx_messageInfo_Measure_SupplementalData proto.InternalMessageInfo

func (m *Measure_SupplementalData) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Measure_SupplementalData) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Measure_SupplementalData) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Measure_SupplementalData) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Measure_SupplementalData) GetUsage() []*CodeableConcept {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *Measure_SupplementalData) GetCriteria() *String {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (m *Measure_SupplementalData) GetPath() *String {
	if m != nil {
		return m.Path
	}
	return nil
}

// Auto-generated from StructureDefinition for MeasureReport, last updated
// 2017-04-19T07:44:43.294+10:00. Results of a measure evaluation. See
// http://hl7.org/fhir/StructureDefinition/MeasureReport
type MeasureReport struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Additional identifier for the Report
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// complete | pending | error
	Status *MeasureReportStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// individual | patient-list | summary
	Type *MeasureReportTypeCode `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// What measure was evaluated
	Measure *Reference `protobuf:"bytes,12,opt,name=measure,proto3" json:"measure,omitempty"`
	// What patient the report is for
	Patient *Reference `protobuf:"bytes,13,opt,name=patient,proto3" json:"patient,omitempty"`
	// When the report was generated
	Date *DateTime `protobuf:"bytes,14,opt,name=date,proto3" json:"date,omitempty"`
	// Who is reporting the data
	ReportingOrganization *Reference `protobuf:"bytes,15,opt,name=reporting_organization,json=reportingOrganization,proto3" json:"reporting_organization,omitempty"`
	// What period the report covers
	Period *Period                `protobuf:"bytes,16,opt,name=period,proto3" json:"period,omitempty"`
	Group  []*MeasureReport_Group `protobuf:"bytes,17,rep,name=group,proto3" json:"group,omitempty"`
	// What data was evaluated to produce the measure score
	EvaluatedResources   *Reference `protobuf:"bytes,18,opt,name=evaluated_resources,json=evaluatedResources,proto3" json:"evaluated_resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MeasureReport) Reset()         { *m = MeasureReport{} }
func (m *MeasureReport) String() string { return proto.CompactTextString(m) }
func (*MeasureReport) ProtoMessage()    {}
func (*MeasureReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{64}
}

func (m *MeasureReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasureReport.Unmarshal(m, b)
}
func (m *MeasureReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasureReport.Marshal(b, m, deterministic)
}
func (m *MeasureReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasureReport.Merge(m, src)
}
func (m *MeasureReport) XXX_Size() int {
	return xxx_messageInfo_MeasureReport.Size(m)
}
func (m *MeasureReport) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasureReport.DiscardUnknown(m)
}

var xxx_messageInfo_MeasureReport proto.InternalMessageInfo

func (m *MeasureReport) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MeasureReport) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MeasureReport) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *MeasureReport) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *MeasureReport) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MeasureReport) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *MeasureReport) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MeasureReport) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MeasureReport) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MeasureReport) GetStatus() *MeasureReportStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MeasureReport) GetType() *MeasureReportTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *MeasureReport) GetMeasure() *Reference {
	if m != nil {
		return m.Measure
	}
	return nil
}

func (m *MeasureReport) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *MeasureReport) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *MeasureReport) GetReportingOrganization() *Reference {
	if m != nil {
		return m.ReportingOrganization
	}
	return nil
}

func (m *MeasureReport) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *MeasureReport) GetGroup() []*MeasureReport_Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *MeasureReport) GetEvaluatedResources() *Reference {
	if m != nil {
		return m.EvaluatedResources
	}
	return nil
}

// Measure results for each group
type MeasureReport_Group struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What group of the measure
	Identifier *Identifier                       `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Population []*MeasureReport_Group_Population `protobuf:"bytes,5,rep,name=population,proto3" json:"population,omitempty"`
	// What score this group achieved
	MeasureScore         *Decimal                          `protobuf:"bytes,6,opt,name=measure_score,json=measureScore,proto3" json:"measure_score,omitempty"`
	Stratifier           []*MeasureReport_Group_Stratifier `protobuf:"bytes,7,rep,name=stratifier,proto3" json:"stratifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *MeasureReport_Group) Reset()         { *m = MeasureReport_Group{} }
func (m *MeasureReport_Group) String() string { return proto.CompactTextString(m) }
func (*MeasureReport_Group) ProtoMessage()    {}
func (*MeasureReport_Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{64, 0}
}

func (m *MeasureReport_Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasureReport_Group.Unmarshal(m, b)
}
func (m *MeasureReport_Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasureReport_Group.Marshal(b, m, deterministic)
}
func (m *MeasureReport_Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasureReport_Group.Merge(m, src)
}
func (m *MeasureReport_Group) XXX_Size() int {
	return xxx_messageInfo_MeasureReport_Group.Size(m)
}
func (m *MeasureReport_Group) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasureReport_Group.DiscardUnknown(m)
}

var xxx_messageInfo_MeasureReport_Group proto.InternalMessageInfo

func (m *MeasureReport_Group) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MeasureReport_Group) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MeasureReport_Group) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MeasureReport_Group) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MeasureReport_Group) GetPopulation() []*MeasureReport_Group_Population {
	if m != nil {
		return m.Population
	}
	return nil
}

func (m *MeasureReport_Group) GetMeasureScore() *Decimal {
	if m != nil {
		return m.MeasureScore
	}
	return nil
}

func (m *MeasureReport_Group) GetStratifier() []*MeasureReport_Group_Stratifier {
	if m != nil {
		return m.Stratifier
	}
	return nil
}

// The populations in the group
type MeasureReport_Group_Population struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Population identifier as defined in the measure
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// initial-population | numerator | numerator-exclusion | denominator |
	// denominator-exclusion | denominator-exception | measure-population |
	// measure-population-exclusion | measure-score
	Code *CodeableConcept `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Size of the population
	Count *Integer `protobuf:"bytes,6,opt,name=count,proto3" json:"count,omitempty"`
	// For patient-list reports, the patients in this population
	Patients             *Reference `protobuf:"bytes,7,opt,name=patients,proto3" json:"patients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MeasureReport_Group_Population) Reset()         { *m = MeasureReport_Group_Population{} }
func (m *MeasureReport_Group_Population) String() string { return proto.CompactTextString(m) }
func (*MeasureReport_Group_Population) ProtoMessage()    {}
func (*MeasureReport_Group_Population) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{64, 0, 0}
}

func (m *MeasureReport_Group_Population) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasureReport_Group_Population.Unmarshal(m, b)
}
func (m *MeasureReport_Group_Population) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasureReport_Group_Population.Marshal(b, m, deterministic)
}
func (m *MeasureReport_Group_Population) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasureReport_Group_Population.Merge(m, src)
}
func (m *MeasureReport_Group_Population) XXX_Size() int {
	return xxx_messageInfo_MeasureReport_Group_Population.Size(m)
}
func (m *MeasureReport_Group_Population) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasureReport_Group_Population.DiscardUnknown(m)
}

var xxx_messageInfo_MeasureReport_Group_Population proto.InternalMessageInfo

func (m *MeasureReport_Group_Population) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MeasureReport_Group_Population) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MeasureReport_Group_Population) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MeasureReport_Group_Population) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MeasureReport_Group_Population) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *MeasureReport_Group_Population) GetCount() *Integer {
	if m != nil {
		return m.Count
	}
	return nil
}

func (m *MeasureReport_Group_Population) GetPatients() *Reference {
	if m != nil {
		return m.Patients
	}
	return nil
}

// Stratification results
type MeasureReport_Group_Stratifier struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What stratifier of the group
	Identifier           *Identifier                                       `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Stratum              []*MeasureReport_Group_Stratifier_StratifierGroup `protobuf:"bytes,5,rep,name=stratum,proto3" json:"stratum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *MeasureReport_Group_Stratifier) Reset()         { *m = MeasureReport_Group_Stratifier{} }
func (m *MeasureReport_Group_Stratifier) String() string { return proto.CompactTextString(m) }
func (*MeasureReport_Group_Stratifier) ProtoMessage()    {}
func (*MeasureReport_Group_Stratifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{64, 0, 1}
}

func (m *MeasureReport_Group_Stratifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasureReport_Group_Stratifier.Unmarshal(m, b)
}
func (m *MeasureReport_Group_Stratifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasureReport_Group_Stratifier.Marshal(b, m, deterministic)
}
func (m *MeasureReport_Group_Stratifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasureReport_Group_Stratifier.Merge(m, src)
}
func (m *MeasureReport_Group_Stratifier) XXX_Size() int {
	return xxx_messageInfo_MeasureReport_Group_Stratifier.Size(m)
}
func (m *MeasureReport_Group_Stratifier) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasureReport_Group_Stratifier.DiscardUnknown(m)
}

var xxx_messageInfo_MeasureReport_Group_Stratifier proto.InternalMessageInfo

func (m *MeasureReport_Group_Stratifier) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier) GetStratum() []*MeasureReport_Group_Stratifier_StratifierGroup {
	if m != nil {
		return m.Stratum
	}
	return nil
}

// Stratum results, one for each unique value in the stratifier
type MeasureReport_Group_Stratifier_StratifierGroup struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The stratum value, e.g. male
	Value      *String                                                                     `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Population []*MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation `protobuf:"bytes,5,rep,name=population,proto3" json:"population,omitempty"`
	// What score this stratum achieved
	MeasureScore         *Decimal `protobuf:"bytes,6,opt,name=measure_score,json=measureScore,proto3" json:"measure_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup) Reset() {
	*m = MeasureReport_Group_Stratifier_StratifierGroup{}
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup) String() string {
	return proto.CompactTextString(m)
}
func (*MeasureReport_Group_Stratifier_StratifierGroup) ProtoMessage() {}
func (*MeasureReport_Group_Stratifier_StratifierGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{64, 0, 1, 0}
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup.Unmarshal(m, b)
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup.Marshal(b, m, deterministic)
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup.Merge(m, src)
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup) XXX_Size() int {
	return xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup.Size(m)
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup proto.InternalMessageInfo

func (m *MeasureReport_Group_Stratifier_StratifierGroup) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup) GetPopulation() []*MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation {
	if m != nil {
		return m.Population
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup) GetMeasureScore() *Decimal {
	if m != nil {
		return m.MeasureScore
	}
	return nil
}

// Population results in this stratum
type MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Population identifier as defined in the measure
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// initial-population | numerator | numerator-exclusion | denominator
	// | denominator-exclusion | denominator-exception |
	// measure-population | measure-population-exclusion | measure-score
	Code *CodeableConcept `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Size of the population
	Count *Integer `protobuf:"bytes,6,opt,name=count,proto3" json:"count,omitempty"`
	// For patient-list reports, the patients in this population
	Patients             *Reference `protobuf:"bytes,7,opt,name=patients,proto3" json:"patients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) Reset() {
	*m = MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation{}
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) String() string {
	return proto.CompactTextString(m)
}
func (*MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) ProtoMessage() {}
func (*MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{64, 0, 1, 0, 0}
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation.Unmarshal(m, b)
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation.Marshal(b, m, deterministic)
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation.Merge(m, src)
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) XXX_Size() int {
	return xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation.Size(m)
}
func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation.DiscardUnknown(m)
}

var xxx_messageInfo_MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation proto.InternalMessageInfo

func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) GetCount() *Integer {
	if m != nil {
		return m.Count
	}
	return nil
}

func (m *MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation) GetPatients() *Reference {
	if m != nil {
		return m.Patients
	}
	return nil
}

// Auto-generated from StructureDefinition for Media, last updated
// 2017-04-19T07:44:43.294+10:00. A photo, video, or audio recording acquired or
// used in healthcare. The actual content may be inline or provided by direct
// reference. See http://hl7.org/fhir/StructureDefinition/Media
type Media struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifier(s) for the image
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Procedure that caused this media to be created
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// photo | video | audio
	Type *DigitalMediaTypeCode `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// The type of acquisition equipment/process
	Subtype *CodeableConcept `protobuf:"bytes,12,opt,name=subtype,proto3" json:"subtype,omitempty"`
	// Imaging view, e.g. Lateral or Antero-posterior
	View *CodeableConcept `protobuf:"bytes,13,opt,name=view,proto3" json:"view,omitempty"`
	// Who/What this Media is a record of
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter / Episode associated with media
	Context    *Reference        `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Occurrence *Media_Occurrence `protobuf:"bytes,16,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	// The person who generated the image
	Operator *Reference `protobuf:"bytes,17,opt,name=operator,proto3" json:"operator,omitempty"`
	// Why was event performed?
	ReasonCode []*CodeableConcept `protobuf:"bytes,18,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Body part in media
	BodySite *CodeableConcept `protobuf:"bytes,19,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Observing Device
	Device *Reference `protobuf:"bytes,20,opt,name=device,proto3" json:"device,omitempty"`
	// Height of the image in pixels (photo/video)
	Height *PositiveInt `protobuf:"bytes,21,opt,name=height,proto3" json:"height,omitempty"`
	// Width of the image in pixels (photo/video)
	Width *PositiveInt `protobuf:"bytes,22,opt,name=width,proto3" json:"width,omitempty"`
	// Number of frames if > 1 (photo)
	Frames *PositiveInt `protobuf:"bytes,23,opt,name=frames,proto3" json:"frames,omitempty"`
	// Length in seconds (audio / video)
	Duration *UnsignedInt `protobuf:"bytes,24,opt,name=duration,proto3" json:"duration,omitempty"`
	// Actual Media - reference or data
	Content *Attachment `protobuf:"bytes,25,opt,name=content,proto3" json:"content,omitempty"`
	// Comments made about the media
	Note                 []*Annotation `protobuf:"bytes,26,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}
func (*Media) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{65}
}

func (m *Media) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Media.Unmarshal(m, b)
}
func (m *Media) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Media.Marshal(b, m, deterministic)
}
func (m *Media) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Media.Merge(m, src)
}
func (m *Media) XXX_Size() int {
	return xxx_messageInfo_Media.Size(m)
}
func (m *Media) XXX_DiscardUnknown() {
	xxx_messageInfo_Media.DiscardUnknown(m)
}

var xxx_messageInfo_Media proto.InternalMessageInfo

func (m *Media) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Media) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Media) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Media) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Media) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Media) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Media) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Media) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Media) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Media) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Media) GetType() *DigitalMediaTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Media) GetSubtype() *CodeableConcept {
	if m != nil {
		return m.Subtype
	}
	return nil
}

func (m *Media) GetView() *CodeableConcept {
	if m != nil {
		return m.View
	}
	return nil
}

func (m *Media) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Media) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Media) GetOccurrence() *Media_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *Media) GetOperator() *Reference {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (m *Media) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *Media) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Media) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Media) GetHeight() *PositiveInt {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *Media) GetWidth() *PositiveInt {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *Media) GetFrames() *PositiveInt {
	if m != nil {
		return m.Frames
	}
	return nil
}

func (m *Media) GetDuration() *UnsignedInt {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Media) GetContent() *Attachment {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Media) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// When Media was collected
type Media_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*Media_Occurrence_DateTime
	//	*Media_Occurrence_Period
	Occurrence           isMedia_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Media_Occurrence) Reset()         { *m = Media_Occurrence{} }
func (m *Media_Occurrence) String() string { return proto.CompactTextString(m) }
func (*Media_Occurrence) ProtoMessage()    {}
func (*Media_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{65, 0}
}

func (m *Media_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Media_Occurrence.Unmarshal(m, b)
}
func (m *Media_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Media_Occurrence.Marshal(b, m, deterministic)
}
func (m *Media_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Media_Occurrence.Merge(m, src)
}
func (m *Media_Occurrence) XXX_Size() int {
	return xxx_messageInfo_Media_Occurrence.Size(m)
}
func (m *Media_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_Media_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_Media_Occurrence proto.InternalMessageInfo

type isMedia_Occurrence_Occurrence interface {
	isMedia_Occurrence_Occurrence()
}

type Media_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Media_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Media_Occurrence_DateTime) isMedia_Occurrence_Occurrence() {}

func (*Media_Occurrence_Period) isMedia_Occurrence_Occurrence() {}

func (m *Media_Occurrence) GetOccurrence() isMedia_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *Media_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*Media_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Media_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*Media_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Media_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Media_Occurrence_OneofMarshaler, _Media_Occurrence_OneofUnmarshaler, _Media_Occurrence_OneofSizer, []interface{}{
		(*Media_Occurrence_DateTime)(nil),
		(*Media_Occurrence_Period)(nil),
	}
}

func _Media_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Media_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *Media_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Media_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Media_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _Media_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Media_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &Media_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &Media_Occurrence_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Media_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Media_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *Media_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Media_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Medication, last updated
// 2017-04-19T07:44:43.294+10:00. Definition of a Medication. See
// http://hl7.org/fhir/StructureDefinition/Medication
type Medication struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Codes that identify this medication
	Code *CodeableConcept `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`
	// active | inactive | entered-in-error
	Status *MedicationStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// True if a brand
	IsBrand *Boolean `protobuf:"bytes,11,opt,name=is_brand,json=isBrand,proto3" json:"is_brand,omitempty"`
	// True if medication does not require a prescription
	IsOverTheCounter *Boolean `protobuf:"bytes,12,opt,name=is_over_the_counter,json=isOverTheCounter,proto3" json:"is_over_the_counter,omitempty"`
	// Manufacturer of the item
	Manufacturer *Reference `protobuf:"bytes,13,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	// powder | tablets | capsule +
	Form         *CodeableConcept         `protobuf:"bytes,14,opt,name=form,proto3" json:"form,omitempty"`
	Ingredient   []*Medication_Ingredient `protobuf:"bytes,15,rep,name=ingredient,proto3" json:"ingredient,omitempty"`
	PackageValue *Medication_Package      `protobuf:"bytes,16,opt,name=package_value,json=package,proto3" json:"package_value,omitempty"`
	// Picture of the medication
	Image                []*Attachment `protobuf:"bytes,17,rep,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Medication) Reset()         { *m = Medication{} }
func (m *Medication) String() string { return proto.CompactTextString(m) }
func (*Medication) ProtoMessage()    {}
func (*Medication) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{66}
}

func (m *Medication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medication.Unmarshal(m, b)
}
func (m *Medication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medication.Marshal(b, m, deterministic)
}
func (m *Medication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medication.Merge(m, src)
}
func (m *Medication) XXX_Size() int {
	return xxx_messageInfo_Medication.Size(m)
}
func (m *Medication) XXX_DiscardUnknown() {
	xxx_messageInfo_Medication.DiscardUnknown(m)
}

var xxx_messageInfo_Medication proto.InternalMessageInfo

func (m *Medication) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Medication) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Medication) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Medication) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Medication) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Medication) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Medication) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Medication) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Medication) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Medication) GetStatus() *MedicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Medication) GetIsBrand() *Boolean {
	if m != nil {
		return m.IsBrand
	}
	return nil
}

func (m *Medication) GetIsOverTheCounter() *Boolean {
	if m != nil {
		return m.IsOverTheCounter
	}
	return nil
}

func (m *Medication) GetManufacturer() *Reference {
	if m != nil {
		return m.Manufacturer
	}
	return nil
}

func (m *Medication) GetForm() *CodeableConcept {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *Medication) GetIngredient() []*Medication_Ingredient {
	if m != nil {
		return m.Ingredient
	}
	return nil
}

func (m *Medication) GetPackageValue() *Medication_Package {
	if m != nil {
		return m.PackageValue
	}
	return nil
}

func (m *Medication) GetImage() []*Attachment {
	if m != nil {
		return m.Image
	}
	return nil
}

// Active or inactive ingredient
type Medication_Ingredient struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Item              *Medication_Ingredient_Item `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	// Active ingredient indicator
	IsActive *Boolean `protobuf:"bytes,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Quantity of ingredient present
	Amount               *Ratio   `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Medication_Ingredient) Reset()         { *m = Medication_Ingredient{} }
func (m *Medication_Ingredient) String() string { return proto.CompactTextString(m) }
func (*Medication_Ingredient) ProtoMessage()    {}
func (*Medication_Ingredient) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{66, 0}
}

func (m *Medication_Ingredient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medication_Ingredient.Unmarshal(m, b)
}
func (m *Medication_Ingredient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medication_Ingredient.Marshal(b, m, deterministic)
}
func (m *Medication_Ingredient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medication_Ingredient.Merge(m, src)
}
func (m *Medication_Ingredient) XXX_Size() int {
	return xxx_messageInfo_Medication_Ingredient.Size(m)
}
func (m *Medication_Ingredient) XXX_DiscardUnknown() {
	xxx_messageInfo_Medication_Ingredient.DiscardUnknown(m)
}

var xxx_messageInfo_Medication_Ingredient proto.InternalMessageInfo

func (m *Medication_Ingredient) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Medication_Ingredient) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Medication_Ingredient) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Medication_Ingredient) GetItem() *Medication_Ingredient_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Medication_Ingredient) GetIsActive() *Boolean {
	if m != nil {
		return m.IsActive
	}
	return nil
}

func (m *Medication_Ingredient) GetAmount() *Ratio {
	if m != nil {
		return m.Amount
	}
	return nil
}

// The product contained
type Medication_Ingredient_Item struct {
	// Types that are valid to be assigned to Item:
	//	*Medication_Ingredient_Item_CodeableConcept
	//	*Medication_Ingredient_Item_Reference
	Item                 isMedication_Ingredient_Item_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Medication_Ingredient_Item) Reset()         { *m = Medication_Ingredient_Item{} }
func (m *Medication_Ingredient_Item) String() string { return proto.CompactTextString(m) }
func (*Medication_Ingredient_Item) ProtoMessage()    {}
func (*Medication_Ingredient_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{66, 0, 0}
}

func (m *Medication_Ingredient_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medication_Ingredient_Item.Unmarshal(m, b)
}
func (m *Medication_Ingredient_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medication_Ingredient_Item.Marshal(b, m, deterministic)
}
func (m *Medication_Ingredient_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medication_Ingredient_Item.Merge(m, src)
}
func (m *Medication_Ingredient_Item) XXX_Size() int {
	return xxx_messageInfo_Medication_Ingredient_Item.Size(m)
}
func (m *Medication_Ingredient_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Medication_Ingredient_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Medication_Ingredient_Item proto.InternalMessageInfo

type isMedication_Ingredient_Item_Item interface {
	isMedication_Ingredient_Item_Item()
}

type Medication_Ingredient_Item_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Medication_Ingredient_Item_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Medication_Ingredient_Item_CodeableConcept) isMedication_Ingredient_Item_Item() {}

func (*Medication_Ingredient_Item_Reference) isMedication_Ingredient_Item_Item() {}

func (m *Medication_Ingredient_Item) GetItem() isMedication_Ingredient_Item_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Medication_Ingredient_Item) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetItem().(*Medication_Ingredient_Item_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Medication_Ingredient_Item) GetReference() *Reference {
	if x, ok := m.GetItem().(*Medication_Ingredient_Item_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Medication_Ingredient_Item) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Medication_Ingredient_Item_OneofMarshaler, _Medication_Ingredient_Item_OneofUnmarshaler, _Medication_Ingredient_Item_OneofSizer, []interface{}{
		(*Medication_Ingredient_Item_CodeableConcept)(nil),
		(*Medication_Ingredient_Item_Reference)(nil),
	}
}

func _Medication_Ingredient_Item_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Medication_Ingredient_Item)
	// item
	switch x := m.Item.(type) {
	case *Medication_Ingredient_Item_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Medication_Ingredient_Item_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Medication_Ingredient_Item.Item has unexpected type %T", x)
	}
	return nil
}

func _Medication_Ingredient_Item_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Medication_Ingredient_Item)
	switch tag {
	case 1: // item.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Item = &Medication_Ingredient_Item_CodeableConcept{msg}
		return true, err
	case 2: // item.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Item = &Medication_Ingredient_Item_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Medication_Ingredient_Item_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Medication_Ingredient_Item)
	// item
	switch x := m.Item.(type) {
	case *Medication_Ingredient_Item_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Medication_Ingredient_Item_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Details about packaged medications
type Medication_Package struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// E.g. box, vial, blister-pack
	Container            *CodeableConcept              `protobuf:"bytes,4,opt,name=container,proto3" json:"container,omitempty"`
	Content              []*Medication_Package_Content `protobuf:"bytes,5,rep,name=content,proto3" json:"content,omitempty"`
	Batch                []*Medication_Package_Batch   `protobuf:"bytes,6,rep,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Medication_Package) Reset()         { *m = Medication_Package{} }
func (m *Medication_Package) String() string { return proto.CompactTextString(m) }
func (*Medication_Package) ProtoMessage()    {}
func (*Medication_Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{66, 1}
}

func (m *Medication_Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medication_Package.Unmarshal(m, b)
}
func (m *Medication_Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medication_Package.Marshal(b, m, deterministic)
}
func (m *Medication_Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medication_Package.Merge(m, src)
}
func (m *Medication_Package) XXX_Size() int {
	return xxx_messageInfo_Medication_Package.Size(m)
}
func (m *Medication_Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Medication_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Medication_Package proto.InternalMessageInfo

func (m *Medication_Package) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Medication_Package) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Medication_Package) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Medication_Package) GetContainer() *CodeableConcept {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *Medication_Package) GetContent() []*Medication_Package_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Medication_Package) GetBatch() []*Medication_Package_Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

// What is  in the package
type Medication_Package_Content struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                     `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Item              *Medication_Package_Content_Item `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	// Quantity present in the package
	Amount               *SimpleQuantity `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Medication_Package_Content) Reset()         { *m = Medication_Package_Content{} }
func (m *Medication_Package_Content) String() string { return proto.CompactTextString(m) }
func (*Medication_Package_Content) ProtoMessage()    {}
func (*Medication_Package_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{66, 1, 0}
}

func (m *Medication_Package_Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medication_Package_Content.Unmarshal(m, b)
}
func (m *Medication_Package_Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medication_Package_Content.Marshal(b, m, deterministic)
}
func (m *Medication_Package_Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medication_Package_Content.Merge(m, src)
}
func (m *Medication_Package_Content) XXX_Size() int {
	return xxx_messageInfo_Medication_Package_Content.Size(m)
}
func (m *Medication_Package_Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Medication_Package_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Medication_Package_Content proto.InternalMessageInfo

func (m *Medication_Package_Content) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Medication_Package_Content) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Medication_Package_Content) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Medication_Package_Content) GetItem() *Medication_Package_Content_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Medication_Package_Content) GetAmount() *SimpleQuantity {
	if m != nil {
		return m.Amount
	}
	return nil
}

// The item in the package
type Medication_Package_Content_Item struct {
	// Types that are valid to be assigned to Item:
	//	*Medication_Package_Content_Item_CodeableConcept
	//	*Medication_Package_Content_Item_Reference
	Item                 isMedication_Package_Content_Item_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *Medication_Package_Content_Item) Reset()         { *m = Medication_Package_Content_Item{} }
func (m *Medication_Package_Content_Item) String() string { return proto.CompactTextString(m) }
func (*Medication_Package_Content_Item) ProtoMessage()    {}
func (*Medication_Package_Content_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{66, 1, 0, 0}
}

func (m *Medication_Package_Content_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medication_Package_Content_Item.Unmarshal(m, b)
}
func (m *Medication_Package_Content_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medication_Package_Content_Item.Marshal(b, m, deterministic)
}
func (m *Medication_Package_Content_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medication_Package_Content_Item.Merge(m, src)
}
func (m *Medication_Package_Content_Item) XXX_Size() int {
	return xxx_messageInfo_Medication_Package_Content_Item.Size(m)
}
func (m *Medication_Package_Content_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Medication_Package_Content_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Medication_Package_Content_Item proto.InternalMessageInfo

type isMedication_Package_Content_Item_Item interface {
	isMedication_Package_Content_Item_Item()
}

type Medication_Package_Content_Item_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Medication_Package_Content_Item_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Medication_Package_Content_Item_CodeableConcept) isMedication_Package_Content_Item_Item() {}

func (*Medication_Package_Content_Item_Reference) isMedication_Package_Content_Item_Item() {}

func (m *Medication_Package_Content_Item) GetItem() isMedication_Package_Content_Item_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Medication_Package_Content_Item) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetItem().(*Medication_Package_Content_Item_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Medication_Package_Content_Item) GetReference() *Reference {
	if x, ok := m.GetItem().(*Medication_Package_Content_Item_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Medication_Package_Content_Item) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Medication_Package_Content_Item_OneofMarshaler, _Medication_Package_Content_Item_OneofUnmarshaler, _Medication_Package_Content_Item_OneofSizer, []interface{}{
		(*Medication_Package_Content_Item_CodeableConcept)(nil),
		(*Medication_Package_Content_Item_Reference)(nil),
	}
}

func _Medication_Package_Content_Item_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Medication_Package_Content_Item)
	// item
	switch x := m.Item.(type) {
	case *Medication_Package_Content_Item_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Medication_Package_Content_Item_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Medication_Package_Content_Item.Item has unexpected type %T", x)
	}
	return nil
}

func _Medication_Package_Content_Item_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Medication_Package_Content_Item)
	switch tag {
	case 1: // item.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Item = &Medication_Package_Content_Item_CodeableConcept{msg}
		return true, err
	case 2: // item.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Item = &Medication_Package_Content_Item_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Medication_Package_Content_Item_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Medication_Package_Content_Item)
	// item
	switch x := m.Item.(type) {
	case *Medication_Package_Content_Item_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Medication_Package_Content_Item_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Identifies a single production run
type Medication_Package_Batch struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifier assigned to batch
	LotNumber *String `protobuf:"bytes,4,opt,name=lot_number,json=lotNumber,proto3" json:"lot_number,omitempty"`
	// When batch will expire
	ExpirationDate       *DateTime `protobuf:"bytes,5,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Medication_Package_Batch) Reset()         { *m = Medication_Package_Batch{} }
func (m *Medication_Package_Batch) String() string { return proto.CompactTextString(m) }
func (*Medication_Package_Batch) ProtoMessage()    {}
func (*Medication_Package_Batch) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{66, 1, 1}
}

func (m *Medication_Package_Batch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medication_Package_Batch.Unmarshal(m, b)
}
func (m *Medication_Package_Batch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medication_Package_Batch.Marshal(b, m, deterministic)
}
func (m *Medication_Package_Batch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medication_Package_Batch.Merge(m, src)
}
func (m *Medication_Package_Batch) XXX_Size() int {
	return xxx_messageInfo_Medication_Package_Batch.Size(m)
}
func (m *Medication_Package_Batch) XXX_DiscardUnknown() {
	xxx_messageInfo_Medication_Package_Batch.DiscardUnknown(m)
}

var xxx_messageInfo_Medication_Package_Batch proto.InternalMessageInfo

func (m *Medication_Package_Batch) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Medication_Package_Batch) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Medication_Package_Batch) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Medication_Package_Batch) GetLotNumber() *String {
	if m != nil {
		return m.LotNumber
	}
	return nil
}

func (m *Medication_Package_Batch) GetExpirationDate() *DateTime {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

// Auto-generated from StructureDefinition for MedicationAdministration, last
// updated 2017-04-19T07:44:43.294+10:00. Administration of medication to a
// patient. See http://hl7.org/fhir/StructureDefinition/MedicationAdministration
type MedicationAdministration struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Instantiates protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// Part of referenced event
	PartOf []*Reference `protobuf:"bytes,11,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// in-progress | on-hold | completed | entered-in-error | stopped | unknown
	Status *MedicationAdministrationStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// Type of medication usage
	Category   *CodeableConcept                     `protobuf:"bytes,13,opt,name=category,proto3" json:"category,omitempty"`
	Medication *MedicationAdministration_Medication `protobuf:"bytes,14,opt,name=medication,proto3" json:"medication,omitempty"`
	// Who received medication
	Subject *Reference `protobuf:"bytes,15,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or Episode of Care administered as part of
	Context *Reference `protobuf:"bytes,16,opt,name=context,proto3" json:"context,omitempty"`
	// Additional information to support administration
	SupportingInformation []*Reference                          `protobuf:"bytes,17,rep,name=supporting_information,json=supportingInformation,proto3" json:"supporting_information,omitempty"`
	Effective             *MedicationAdministration_Effective   `protobuf:"bytes,18,opt,name=effective,proto3" json:"effective,omitempty"`
	Performer             []*MedicationAdministration_Performer `protobuf:"bytes,19,rep,name=performer,proto3" json:"performer,omitempty"`
	// True if medication not administered
	NotGiven *Boolean `protobuf:"bytes,20,opt,name=not_given,json=notGiven,proto3" json:"not_given,omitempty"`
	// Reason administration not performed
	ReasonNotGiven []*CodeableConcept `protobuf:"bytes,21,rep,name=reason_not_given,json=reasonNotGiven,proto3" json:"reason_not_given,omitempty"`
	// Reason administration performed
	ReasonCode []*CodeableConcept `protobuf:"bytes,22,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Condition or Observation that supports why the medication was administered
	ReasonReference []*Reference `protobuf:"bytes,23,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Request administration performed against
	Prescription *Reference `protobuf:"bytes,24,opt,name=prescription,proto3" json:"prescription,omitempty"`
	// Device used to administer
	Device []*Reference `protobuf:"bytes,25,rep,name=device,proto3" json:"device,omitempty"`
	// Information about the administration
	Note   []*Annotation                    `protobuf:"bytes,26,rep,name=note,proto3" json:"note,omitempty"`
	Dosage *MedicationAdministration_Dosage `protobuf:"bytes,27,opt,name=dosage,proto3" json:"dosage,omitempty"`
	// A list of events of interest in the lifecycle
	EventHistory         []*Reference `protobuf:"bytes,28,rep,name=event_history,json=eventHistory,proto3" json:"event_history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MedicationAdministration) Reset()         { *m = MedicationAdministration{} }
func (m *MedicationAdministration) String() string { return proto.CompactTextString(m) }
func (*MedicationAdministration) ProtoMessage()    {}
func (*MedicationAdministration) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{67}
}

func (m *MedicationAdministration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationAdministration.Unmarshal(m, b)
}
func (m *MedicationAdministration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationAdministration.Marshal(b, m, deterministic)
}
func (m *MedicationAdministration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationAdministration.Merge(m, src)
}
func (m *MedicationAdministration) XXX_Size() int {
	return xxx_messageInfo_MedicationAdministration.Size(m)
}
func (m *MedicationAdministration) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationAdministration.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationAdministration proto.InternalMessageInfo

func (m *MedicationAdministration) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationAdministration) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MedicationAdministration) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *MedicationAdministration) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *MedicationAdministration) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MedicationAdministration) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *MedicationAdministration) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationAdministration) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationAdministration) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MedicationAdministration) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *MedicationAdministration) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *MedicationAdministration) GetStatus() *MedicationAdministrationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MedicationAdministration) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *MedicationAdministration) GetMedication() *MedicationAdministration_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *MedicationAdministration) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *MedicationAdministration) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *MedicationAdministration) GetSupportingInformation() []*Reference {
	if m != nil {
		return m.SupportingInformation
	}
	return nil
}

func (m *MedicationAdministration) GetEffective() *MedicationAdministration_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *MedicationAdministration) GetPerformer() []*MedicationAdministration_Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *MedicationAdministration) GetNotGiven() *Boolean {
	if m != nil {
		return m.NotGiven
	}
	return nil
}

func (m *MedicationAdministration) GetReasonNotGiven() []*CodeableConcept {
	if m != nil {
		return m.ReasonNotGiven
	}
	return nil
}

func (m *MedicationAdministration) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *MedicationAdministration) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *MedicationAdministration) GetPrescription() *Reference {
	if m != nil {
		return m.Prescription
	}
	return nil
}

func (m *MedicationAdministration) GetDevice() []*Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *MedicationAdministration) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *MedicationAdministration) GetDosage() *MedicationAdministration_Dosage {
	if m != nil {
		return m.Dosage
	}
	return nil
}

func (m *MedicationAdministration) GetEventHistory() []*Reference {
	if m != nil {
		return m.EventHistory
	}
	return nil
}

// What was administered
type MedicationAdministration_Medication struct {
	// Types that are valid to be assigned to Medication:
	//	*MedicationAdministration_Medication_CodeableConcept
	//	*MedicationAdministration_Medication_Reference
	Medication           isMedicationAdministration_Medication_Medication `protobuf_oneof:"medication"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *MedicationAdministration_Medication) Reset()         { *m = MedicationAdministration_Medication{} }
func (m *MedicationAdministration_Medication) String() string { return proto.CompactTextString(m) }
func (*MedicationAdministration_Medication) ProtoMessage()    {}
func (*MedicationAdministration_Medication) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{67, 0}
}

func (m *MedicationAdministration_Medication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationAdministration_Medication.Unmarshal(m, b)
}
func (m *MedicationAdministration_Medication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationAdministration_Medication.Marshal(b, m, deterministic)
}
func (m *MedicationAdministration_Medication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationAdministration_Medication.Merge(m, src)
}
func (m *MedicationAdministration_Medication) XXX_Size() int {
	return xxx_messageInfo_MedicationAdministration_Medication.Size(m)
}
func (m *MedicationAdministration_Medication) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationAdministration_Medication.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationAdministration_Medication proto.InternalMessageInfo

type isMedicationAdministration_Medication_Medication interface {
	isMedicationAdministration_Medication_Medication()
}

type MedicationAdministration_Medication_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type MedicationAdministration_Medication_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*MedicationAdministration_Medication_CodeableConcept) isMedicationAdministration_Medication_Medication() {
}

func (*MedicationAdministration_Medication_Reference) isMedicationAdministration_Medication_Medication() {
}

func (m *MedicationAdministration_Medication) GetMedication() isMedicationAdministration_Medication_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *MedicationAdministration_Medication) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetMedication().(*MedicationAdministration_Medication_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *MedicationAdministration_Medication) GetReference() *Reference {
	if x, ok := m.GetMedication().(*MedicationAdministration_Medication_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MedicationAdministration_Medication) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MedicationAdministration_Medication_OneofMarshaler, _MedicationAdministration_Medication_OneofUnmarshaler, _MedicationAdministration_Medication_OneofSizer, []interface{}{
		(*MedicationAdministration_Medication_CodeableConcept)(nil),
		(*MedicationAdministration_Medication_Reference)(nil),
	}
}

func _MedicationAdministration_Medication_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MedicationAdministration_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *MedicationAdministration_Medication_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *MedicationAdministration_Medication_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MedicationAdministration_Medication.Medication has unexpected type %T", x)
	}
	return nil
}

func _MedicationAdministration_Medication_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MedicationAdministration_Medication)
	switch tag {
	case 1: // medication.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Medication = &MedicationAdministration_Medication_CodeableConcept{msg}
		return true, err
	case 2: // medication.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Medication = &MedicationAdministration_Medication_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MedicationAdministration_Medication_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MedicationAdministration_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *MedicationAdministration_Medication_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MedicationAdministration_Medication_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Start and end time of administration
type MedicationAdministration_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*MedicationAdministration_Effective_DateTime
	//	*MedicationAdministration_Effective_Period
	Effective            isMedicationAdministration_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *MedicationAdministration_Effective) Reset()         { *m = MedicationAdministration_Effective{} }
func (m *MedicationAdministration_Effective) String() string { return proto.CompactTextString(m) }
func (*MedicationAdministration_Effective) ProtoMessage()    {}
func (*MedicationAdministration_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{67, 1}
}

func (m *MedicationAdministration_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationAdministration_Effective.Unmarshal(m, b)
}
func (m *MedicationAdministration_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationAdministration_Effective.Marshal(b, m, deterministic)
}
func (m *MedicationAdministration_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationAdministration_Effective.Merge(m, src)
}
func (m *MedicationAdministration_Effective) XXX_Size() int {
	return xxx_messageInfo_MedicationAdministration_Effective.Size(m)
}
func (m *MedicationAdministration_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationAdministration_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationAdministration_Effective proto.InternalMessageInfo

type isMedicationAdministration_Effective_Effective interface {
	isMedicationAdministration_Effective_Effective()
}

type MedicationAdministration_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type MedicationAdministration_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*MedicationAdministration_Effective_DateTime) isMedicationAdministration_Effective_Effective() {}

func (*MedicationAdministration_Effective_Period) isMedicationAdministration_Effective_Effective() {}

func (m *MedicationAdministration_Effective) GetEffective() isMedicationAdministration_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *MedicationAdministration_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*MedicationAdministration_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *MedicationAdministration_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*MedicationAdministration_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MedicationAdministration_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MedicationAdministration_Effective_OneofMarshaler, _MedicationAdministration_Effective_OneofUnmarshaler, _MedicationAdministration_Effective_OneofSizer, []interface{}{
		(*MedicationAdministration_Effective_DateTime)(nil),
		(*MedicationAdministration_Effective_Period)(nil),
	}
}

func _MedicationAdministration_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MedicationAdministration_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *MedicationAdministration_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *MedicationAdministration_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MedicationAdministration_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _MedicationAdministration_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MedicationAdministration_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &MedicationAdministration_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &MedicationAdministration_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MedicationAdministration_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MedicationAdministration_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *MedicationAdministration_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MedicationAdministration_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who administered substance
type MedicationAdministration_Performer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual who was performing
	Actor *Reference `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	// Organization organization was acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MedicationAdministration_Performer) Reset()         { *m = MedicationAdministration_Performer{} }
func (m *MedicationAdministration_Performer) String() string { return proto.CompactTextString(m) }
func (*MedicationAdministration_Performer) ProtoMessage()    {}
func (*MedicationAdministration_Performer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{67, 2}
}

func (m *MedicationAdministration_Performer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationAdministration_Performer.Unmarshal(m, b)
}
func (m *MedicationAdministration_Performer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationAdministration_Performer.Marshal(b, m, deterministic)
}
func (m *MedicationAdministration_Performer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationAdministration_Performer.Merge(m, src)
}
func (m *MedicationAdministration_Performer) XXX_Size() int {
	return xxx_messageInfo_MedicationAdministration_Performer.Size(m)
}
func (m *MedicationAdministration_Performer) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationAdministration_Performer.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationAdministration_Performer proto.InternalMessageInfo

func (m *MedicationAdministration_Performer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationAdministration_Performer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationAdministration_Performer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationAdministration_Performer) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *MedicationAdministration_Performer) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Details of how medication was taken
type MedicationAdministration_Dosage struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Free text dosage instructions e.g. SIG
	Text *String `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	// Body site administered to
	Site *CodeableConcept `protobuf:"bytes,5,opt,name=site,proto3" json:"site,omitempty"`
	// Path of substance into body
	Route *CodeableConcept `protobuf:"bytes,6,opt,name=route,proto3" json:"route,omitempty"`
	// How drug was administered
	Method *CodeableConcept `protobuf:"bytes,7,opt,name=method,proto3" json:"method,omitempty"`
	// Amount of medication per dose
	Dose                 *SimpleQuantity                       `protobuf:"bytes,8,opt,name=dose,proto3" json:"dose,omitempty"`
	Rate                 *MedicationAdministration_Dosage_Rate `protobuf:"bytes,9,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *MedicationAdministration_Dosage) Reset()         { *m = MedicationAdministration_Dosage{} }
func (m *MedicationAdministration_Dosage) String() string { return proto.CompactTextString(m) }
func (*MedicationAdministration_Dosage) ProtoMessage()    {}
func (*MedicationAdministration_Dosage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{67, 3}
}

func (m *MedicationAdministration_Dosage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationAdministration_Dosage.Unmarshal(m, b)
}
func (m *MedicationAdministration_Dosage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationAdministration_Dosage.Marshal(b, m, deterministic)
}
func (m *MedicationAdministration_Dosage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationAdministration_Dosage.Merge(m, src)
}
func (m *MedicationAdministration_Dosage) XXX_Size() int {
	return xxx_messageInfo_MedicationAdministration_Dosage.Size(m)
}
func (m *MedicationAdministration_Dosage) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationAdministration_Dosage.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationAdministration_Dosage proto.InternalMessageInfo

func (m *MedicationAdministration_Dosage) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationAdministration_Dosage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationAdministration_Dosage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationAdministration_Dosage) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MedicationAdministration_Dosage) GetSite() *CodeableConcept {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *MedicationAdministration_Dosage) GetRoute() *CodeableConcept {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *MedicationAdministration_Dosage) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *MedicationAdministration_Dosage) GetDose() *SimpleQuantity {
	if m != nil {
		return m.Dose
	}
	return nil
}

func (m *MedicationAdministration_Dosage) GetRate() *MedicationAdministration_Dosage_Rate {
	if m != nil {
		return m.Rate
	}
	return nil
}

// Dose quantity per unit of time
type MedicationAdministration_Dosage_Rate struct {
	// Types that are valid to be assigned to Rate:
	//	*MedicationAdministration_Dosage_Rate_Ratio
	//	*MedicationAdministration_Dosage_Rate_Quantity
	Rate                 isMedicationAdministration_Dosage_Rate_Rate `protobuf_oneof:"rate"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *MedicationAdministration_Dosage_Rate) Reset()         { *m = MedicationAdministration_Dosage_Rate{} }
func (m *MedicationAdministration_Dosage_Rate) String() string { return proto.CompactTextString(m) }
func (*MedicationAdministration_Dosage_Rate) ProtoMessage()    {}
func (*MedicationAdministration_Dosage_Rate) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{67, 3, 0}
}

func (m *MedicationAdministration_Dosage_Rate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationAdministration_Dosage_Rate.Unmarshal(m, b)
}
func (m *MedicationAdministration_Dosage_Rate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationAdministration_Dosage_Rate.Marshal(b, m, deterministic)
}
func (m *MedicationAdministration_Dosage_Rate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationAdministration_Dosage_Rate.Merge(m, src)
}
func (m *MedicationAdministration_Dosage_Rate) XXX_Size() int {
	return xxx_messageInfo_MedicationAdministration_Dosage_Rate.Size(m)
}
func (m *MedicationAdministration_Dosage_Rate) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationAdministration_Dosage_Rate.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationAdministration_Dosage_Rate proto.InternalMessageInfo

type isMedicationAdministration_Dosage_Rate_Rate interface {
	isMedicationAdministration_Dosage_Rate_Rate()
}

type MedicationAdministration_Dosage_Rate_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,1,opt,name=ratio,proto3,oneof"`
}

type MedicationAdministration_Dosage_Rate_Quantity struct {
	Quantity *SimpleQuantity `protobuf:"bytes,2,opt,name=quantity,proto3,oneof"`
}

func (*MedicationAdministration_Dosage_Rate_Ratio) isMedicationAdministration_Dosage_Rate_Rate() {}

func (*MedicationAdministration_Dosage_Rate_Quantity) isMedicationAdministration_Dosage_Rate_Rate() {}

func (m *MedicationAdministration_Dosage_Rate) GetRate() isMedicationAdministration_Dosage_Rate_Rate {
	if m != nil {
		return m.Rate
	}
	return nil
}

func (m *MedicationAdministration_Dosage_Rate) GetRatio() *Ratio {
	if x, ok := m.GetRate().(*MedicationAdministration_Dosage_Rate_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *MedicationAdministration_Dosage_Rate) GetQuantity() *SimpleQuantity {
	if x, ok := m.GetRate().(*MedicationAdministration_Dosage_Rate_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MedicationAdministration_Dosage_Rate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MedicationAdministration_Dosage_Rate_OneofMarshaler, _MedicationAdministration_Dosage_Rate_OneofUnmarshaler, _MedicationAdministration_Dosage_Rate_OneofSizer, []interface{}{
		(*MedicationAdministration_Dosage_Rate_Ratio)(nil),
		(*MedicationAdministration_Dosage_Rate_Quantity)(nil),
	}
}

func _MedicationAdministration_Dosage_Rate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MedicationAdministration_Dosage_Rate)
	// rate
	switch x := m.Rate.(type) {
	case *MedicationAdministration_Dosage_Rate_Ratio:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *MedicationAdministration_Dosage_Rate_Quantity:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MedicationAdministration_Dosage_Rate.Rate has unexpected type %T", x)
	}
	return nil
}

func _MedicationAdministration_Dosage_Rate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MedicationAdministration_Dosage_Rate)
	switch tag {
	case 1: // rate.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Rate = &MedicationAdministration_Dosage_Rate_Ratio{msg}
		return true, err
	case 2: // rate.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SimpleQuantity)
		err := b.DecodeMessage(msg)
		m.Rate = &MedicationAdministration_Dosage_Rate_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MedicationAdministration_Dosage_Rate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MedicationAdministration_Dosage_Rate)
	// rate
	switch x := m.Rate.(type) {
	case *MedicationAdministration_Dosage_Rate_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MedicationAdministration_Dosage_Rate_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for MedicationDispense, last updated
// 2017-04-19T07:44:43.294+10:00. Dispensing a medication to a named patient.
// See http://hl7.org/fhir/StructureDefinition/MedicationDispense
type MedicationDispense struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Event that dispense is part of
	PartOf []*Reference `protobuf:"bytes,10,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// preparation | in-progress | on-hold | completed | entered-in-error |
	// stopped
	Status *MedicationDispenseStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Type of medication dispense
	Category   *CodeableConcept               `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
	Medication *MedicationDispense_Medication `protobuf:"bytes,13,opt,name=medication,proto3" json:"medication,omitempty"`
	// Who the dispense is for
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter / Episode associated with event
	Context *Reference `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	// Information that supports the dispensing of the medication
	SupportingInformation []*Reference                    `protobuf:"bytes,16,rep,name=supporting_information,json=supportingInformation,proto3" json:"supporting_information,omitempty"`
	Performer             []*MedicationDispense_Performer `protobuf:"bytes,17,rep,name=performer,proto3" json:"performer,omitempty"`
	// Medication order that authorizes the dispense
	AuthorizingPrescription []*Reference `protobuf:"bytes,18,rep,name=authorizing_prescription,json=authorizingPrescription,proto3" json:"authorizing_prescription,omitempty"`
	// Trial fill, partial fill, emergency fill, etc.
	Type *CodeableConcept `protobuf:"bytes,19,opt,name=type,proto3" json:"type,omitempty"`
	// Amount dispensed
	Quantity *SimpleQuantity `protobuf:"bytes,20,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Amount of medication expressed as a timing amount
	DaysSupply *SimpleQuantity `protobuf:"bytes,21,opt,name=days_supply,json=daysSupply,proto3" json:"days_supply,omitempty"`
	// When product was packaged and reviewed
	WhenPrepared *DateTime `protobuf:"bytes,22,opt,name=when_prepared,json=whenPrepared,proto3" json:"when_prepared,omitempty"`
	// When product was given out
	WhenHandedOver *DateTime `protobuf:"bytes,23,opt,name=when_handed_over,json=whenHandedOver,proto3" json:"when_handed_over,omitempty"`
	// Where the medication was sent
	Destination *Reference `protobuf:"bytes,24,opt,name=destination,proto3" json:"destination,omitempty"`
	// Who collected the medication
	Receiver []*Reference `protobuf:"bytes,25,rep,name=receiver,proto3" json:"receiver,omitempty"`
	// Information about the dispense
	Note []*Annotation `protobuf:"bytes,26,rep,name=note,proto3" json:"note,omitempty"`
	// How the medication is to be used by the patient or administered by the
	// caregiver
	DosageInstruction []*Dosage                        `protobuf:"bytes,27,rep,name=dosage_instruction,json=dosageInstruction,proto3" json:"dosage_instruction,omitempty"`
	Substitution      *MedicationDispense_Substitution `protobuf:"bytes,28,opt,name=substitution,proto3" json:"substitution,omitempty"`
	// Clinical issue with action
	DetectedIssue []*Reference `protobuf:"bytes,29,rep,name=detected_issue,json=detectedIssue,proto3" json:"detected_issue,omitempty"`
	// Whether the dispense was or was not performed
	NotDone       *Boolean                          `protobuf:"bytes,30,opt,name=not_done,json=notDone,proto3" json:"not_done,omitempty"`
	NotDoneReason *MedicationDispense_NotDoneReason `protobuf:"bytes,31,opt,name=not_done_reason,json=notDoneReason,proto3" json:"not_done_reason,omitempty"`
	// A list of releveant lifecycle events
	EventHistory         []*Reference `protobuf:"bytes,32,rep,name=event_history,json=eventHistory,proto3" json:"event_history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MedicationDispense) Reset()         { *m = MedicationDispense{} }
func (m *MedicationDispense) String() string { return proto.CompactTextString(m) }
func (*MedicationDispense) ProtoMessage()    {}
func (*MedicationDispense) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{68}
}

func (m *MedicationDispense) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationDispense.Unmarshal(m, b)
}
func (m *MedicationDispense) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationDispense.Marshal(b, m, deterministic)
}
func (m *MedicationDispense) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationDispense.Merge(m, src)
}
func (m *MedicationDispense) XXX_Size() int {
	return xxx_messageInfo_MedicationDispense.Size(m)
}
func (m *MedicationDispense) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationDispense.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationDispense proto.InternalMessageInfo

func (m *MedicationDispense) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationDispense) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MedicationDispense) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *MedicationDispense) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *MedicationDispense) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MedicationDispense) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *MedicationDispense) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationDispense) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationDispense) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MedicationDispense) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *MedicationDispense) GetStatus() *MedicationDispenseStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MedicationDispense) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *MedicationDispense) GetMedication() *MedicationDispense_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *MedicationDispense) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *MedicationDispense) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *MedicationDispense) GetSupportingInformation() []*Reference {
	if m != nil {
		return m.SupportingInformation
	}
	return nil
}

func (m *MedicationDispense) GetPerformer() []*MedicationDispense_Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *MedicationDispense) GetAuthorizingPrescription() []*Reference {
	if m != nil {
		return m.AuthorizingPrescription
	}
	return nil
}

func (m *MedicationDispense) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *MedicationDispense) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *MedicationDispense) GetDaysSupply() *SimpleQuantity {
	if m != nil {
		return m.DaysSupply
	}
	return nil
}

func (m *MedicationDispense) GetWhenPrepared() *DateTime {
	if m != nil {
		return m.WhenPrepared
	}
	return nil
}

func (m *MedicationDispense) GetWhenHandedOver() *DateTime {
	if m != nil {
		return m.WhenHandedOver
	}
	return nil
}

func (m *MedicationDispense) GetDestination() *Reference {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *MedicationDispense) GetReceiver() []*Reference {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *MedicationDispense) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *MedicationDispense) GetDosageInstruction() []*Dosage {
	if m != nil {
		return m.DosageInstruction
	}
	return nil
}

func (m *MedicationDispense) GetSubstitution() *MedicationDispense_Substitution {
	if m != nil {
		return m.Substitution
	}
	return nil
}

func (m *MedicationDispense) GetDetectedIssue() []*Reference {
	if m != nil {
		return m.DetectedIssue
	}
	return nil
}

func (m *MedicationDispense) GetNotDone() *Boolean {
	if m != nil {
		return m.NotDone
	}
	return nil
}

func (m *MedicationDispense) GetNotDoneReason() *MedicationDispense_NotDoneReason {
	if m != nil {
		return m.NotDoneReason
	}
	return nil
}

func (m *MedicationDispense) GetEventHistory() []*Reference {
	if m != nil {
		return m.EventHistory
	}
	return nil
}

// What medication was supplied
type MedicationDispense_Medication struct {
	// Types that are valid to be assigned to Medication:
	//	*MedicationDispense_Medication_CodeableConcept
	//	*MedicationDispense_Medication_Reference
	Medication           isMedicationDispense_Medication_Medication `protobuf_oneof:"medication"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *MedicationDispense_Medication) Reset()         { *m = MedicationDispense_Medication{} }
func (m *MedicationDispense_Medication) String() string { return proto.CompactTextString(m) }
func (*MedicationDispense_Medication) ProtoMessage()    {}
func (*MedicationDispense_Medication) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{68, 0}
}

func (m *MedicationDispense_Medication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationDispense_Medication.Unmarshal(m, b)
}
func (m *MedicationDispense_Medication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationDispense_Medication.Marshal(b, m, deterministic)
}
func (m *MedicationDispense_Medication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationDispense_Medication.Merge(m, src)
}
func (m *MedicationDispense_Medication) XXX_Size() int {
	return xxx_messageInfo_MedicationDispense_Medication.Size(m)
}
func (m *MedicationDispense_Medication) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationDispense_Medication.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationDispense_Medication proto.InternalMessageInfo

type isMedicationDispense_Medication_Medication interface {
	isMedicationDispense_Medication_Medication()
}

type MedicationDispense_Medication_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type MedicationDispense_Medication_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*MedicationDispense_Medication_CodeableConcept) isMedicationDispense_Medication_Medication() {}

func (*MedicationDispense_Medication_Reference) isMedicationDispense_Medication_Medication() {}

func (m *MedicationDispense_Medication) GetMedication() isMedicationDispense_Medication_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *MedicationDispense_Medication) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetMedication().(*MedicationDispense_Medication_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *MedicationDispense_Medication) GetReference() *Reference {
	if x, ok := m.GetMedication().(*MedicationDispense_Medication_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MedicationDispense_Medication) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MedicationDispense_Medication_OneofMarshaler, _MedicationDispense_Medication_OneofUnmarshaler, _MedicationDispense_Medication_OneofSizer, []interface{}{
		(*MedicationDispense_Medication_CodeableConcept)(nil),
		(*MedicationDispense_Medication_Reference)(nil),
	}
}

func _MedicationDispense_Medication_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MedicationDispense_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *MedicationDispense_Medication_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *MedicationDispense_Medication_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MedicationDispense_Medication.Medication has unexpected type %T", x)
	}
	return nil
}

func _MedicationDispense_Medication_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MedicationDispense_Medication)
	switch tag {
	case 1: // medication.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Medication = &MedicationDispense_Medication_CodeableConcept{msg}
		return true, err
	case 2: // medication.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Medication = &MedicationDispense_Medication_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MedicationDispense_Medication_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MedicationDispense_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *MedicationDispense_Medication_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MedicationDispense_Medication_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who performed event
type MedicationDispense_Performer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual who was performing
	Actor *Reference `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	// Organization organization was acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MedicationDispense_Performer) Reset()         { *m = MedicationDispense_Performer{} }
func (m *MedicationDispense_Performer) String() string { return proto.CompactTextString(m) }
func (*MedicationDispense_Performer) ProtoMessage()    {}
func (*MedicationDispense_Performer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{68, 1}
}

func (m *MedicationDispense_Performer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationDispense_Performer.Unmarshal(m, b)
}
func (m *MedicationDispense_Performer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationDispense_Performer.Marshal(b, m, deterministic)
}
func (m *MedicationDispense_Performer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationDispense_Performer.Merge(m, src)
}
func (m *MedicationDispense_Performer) XXX_Size() int {
	return xxx_messageInfo_MedicationDispense_Performer.Size(m)
}
func (m *MedicationDispense_Performer) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationDispense_Performer.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationDispense_Performer proto.InternalMessageInfo

func (m *MedicationDispense_Performer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationDispense_Performer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationDispense_Performer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationDispense_Performer) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *MedicationDispense_Performer) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Whether a substitution was performed on the dispense
type MedicationDispense_Substitution struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Whether a substitution was or was not performed on the dispense
	WasSubstituted *Boolean `protobuf:"bytes,4,opt,name=was_substituted,json=wasSubstituted,proto3" json:"was_substituted,omitempty"`
	// Code signifying whether a different drug was dispensed from what was
	// prescribed
	Type *CodeableConcept `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// Why was substitution made
	Reason []*CodeableConcept `protobuf:"bytes,6,rep,name=reason,proto3" json:"reason,omitempty"`
	// Who is responsible for the substitution
	ResponsibleParty     []*Reference `protobuf:"bytes,7,rep,name=responsible_party,json=responsibleParty,proto3" json:"responsible_party,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MedicationDispense_Substitution) Reset()         { *m = MedicationDispense_Substitution{} }
func (m *MedicationDispense_Substitution) String() string { return proto.CompactTextString(m) }
func (*MedicationDispense_Substitution) ProtoMessage()    {}
func (*MedicationDispense_Substitution) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{68, 2}
}

func (m *MedicationDispense_Substitution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationDispense_Substitution.Unmarshal(m, b)
}
func (m *MedicationDispense_Substitution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationDispense_Substitution.Marshal(b, m, deterministic)
}
func (m *MedicationDispense_Substitution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationDispense_Substitution.Merge(m, src)
}
func (m *MedicationDispense_Substitution) XXX_Size() int {
	return xxx_messageInfo_MedicationDispense_Substitution.Size(m)
}
func (m *MedicationDispense_Substitution) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationDispense_Substitution.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationDispense_Substitution proto.InternalMessageInfo

func (m *MedicationDispense_Substitution) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationDispense_Substitution) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationDispense_Substitution) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationDispense_Substitution) GetWasSubstituted() *Boolean {
	if m != nil {
		return m.WasSubstituted
	}
	return nil
}

func (m *MedicationDispense_Substitution) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *MedicationDispense_Substitution) GetReason() []*CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *MedicationDispense_Substitution) GetResponsibleParty() []*Reference {
	if m != nil {
		return m.ResponsibleParty
	}
	return nil
}

// Why a dispense was not performed
type MedicationDispense_NotDoneReason struct {
	// Types that are valid to be assigned to NotDoneReason:
	//	*MedicationDispense_NotDoneReason_CodeableConcept
	//	*MedicationDispense_NotDoneReason_Reference
	NotDoneReason        isMedicationDispense_NotDoneReason_NotDoneReason `protobuf_oneof:"not_done_reason"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *MedicationDispense_NotDoneReason) Reset()         { *m = MedicationDispense_NotDoneReason{} }
func (m *MedicationDispense_NotDoneReason) String() string { return proto.CompactTextString(m) }
func (*MedicationDispense_NotDoneReason) ProtoMessage()    {}
func (*MedicationDispense_NotDoneReason) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{68, 3}
}

func (m *MedicationDispense_NotDoneReason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationDispense_NotDoneReason.Unmarshal(m, b)
}
func (m *MedicationDispense_NotDoneReason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationDispense_NotDoneReason.Marshal(b, m, deterministic)
}
func (m *MedicationDispense_NotDoneReason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationDispense_NotDoneReason.Merge(m, src)
}
func (m *MedicationDispense_NotDoneReason) XXX_Size() int {
	return xxx_messageInfo_MedicationDispense_NotDoneReason.Size(m)
}
func (m *MedicationDispense_NotDoneReason) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationDispense_NotDoneReason.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationDispense_NotDoneReason proto.InternalMessageInfo

type isMedicationDispense_NotDoneReason_NotDoneReason interface {
	isMedicationDispense_NotDoneReason_NotDoneReason()
}

type MedicationDispense_NotDoneReason_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type MedicationDispense_NotDoneReason_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*MedicationDispense_NotDoneReason_CodeableConcept) isMedicationDispense_NotDoneReason_NotDoneReason() {
}

func (*MedicationDispense_NotDoneReason_Reference) isMedicationDispense_NotDoneReason_NotDoneReason() {
}

func (m *MedicationDispense_NotDoneReason) GetNotDoneReason() isMedicationDispense_NotDoneReason_NotDoneReason {
	if m != nil {
		return m.NotDoneReason
	}
	return nil
}

func (m *MedicationDispense_NotDoneReason) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetNotDoneReason().(*MedicationDispense_NotDoneReason_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *MedicationDispense_NotDoneReason) GetReference() *Reference {
	if x, ok := m.GetNotDoneReason().(*MedicationDispense_NotDoneReason_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MedicationDispense_NotDoneReason) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MedicationDispense_NotDoneReason_OneofMarshaler, _MedicationDispense_NotDoneReason_OneofUnmarshaler, _MedicationDispense_NotDoneReason_OneofSizer, []interface{}{
		(*MedicationDispense_NotDoneReason_CodeableConcept)(nil),
		(*MedicationDispense_NotDoneReason_Reference)(nil),
	}
}

func _MedicationDispense_NotDoneReason_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MedicationDispense_NotDoneReason)
	// not_done_reason
	switch x := m.NotDoneReason.(type) {
	case *MedicationDispense_NotDoneReason_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *MedicationDispense_NotDoneReason_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MedicationDispense_NotDoneReason.NotDoneReason has unexpected type %T", x)
	}
	return nil
}

func _MedicationDispense_NotDoneReason_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MedicationDispense_NotDoneReason)
	switch tag {
	case 1: // not_done_reason.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.NotDoneReason = &MedicationDispense_NotDoneReason_CodeableConcept{msg}
		return true, err
	case 2: // not_done_reason.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.NotDoneReason = &MedicationDispense_NotDoneReason_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MedicationDispense_NotDoneReason_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MedicationDispense_NotDoneReason)
	// not_done_reason
	switch x := m.NotDoneReason.(type) {
	case *MedicationDispense_NotDoneReason_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MedicationDispense_NotDoneReason_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for MedicationRequest, last updated
// 2017-04-19T07:44:43.294+10:00. Ordering of medication for patient or group.
// See http://hl7.org/fhir/StructureDefinition/MedicationRequest
type MedicationRequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External ids for this request
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// What request fulfills
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Composite request this is part of
	GroupIdentifier *Identifier `protobuf:"bytes,12,opt,name=group_identifier,json=groupIdentifier,proto3" json:"group_identifier,omitempty"`
	// active | on-hold | cancelled | completed | entered-in-error | stopped |
	// draft | unknown
	Status *MedicationRequestStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// proposal | plan | order | instance-order
	Intent *MedicationRequestIntentCode `protobuf:"bytes,14,opt,name=intent,proto3" json:"intent,omitempty"`
	// Type of medication usage
	Category *CodeableConcept `protobuf:"bytes,15,opt,name=category,proto3" json:"category,omitempty"`
	// routine | urgent | stat | asap
	Priority   *MedicationRequestPriorityCode `protobuf:"bytes,16,opt,name=priority,proto3" json:"priority,omitempty"`
	Medication *MedicationRequest_Medication  `protobuf:"bytes,17,opt,name=medication,proto3" json:"medication,omitempty"`
	// Who or group medication request is for
	Subject *Reference `protobuf:"bytes,18,opt,name=subject,proto3" json:"subject,omitempty"`
	// Created during encounter/admission/stay
	Context *Reference `protobuf:"bytes,19,opt,name=context,proto3" json:"context,omitempty"`
	// Information to support ordering of the medication
	SupportingInformation []*Reference `protobuf:"bytes,20,rep,name=supporting_information,json=supportingInformation,proto3" json:"supporting_information,omitempty"`
	// When request was initially authored
	AuthoredOn *DateTime                    `protobuf:"bytes,21,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	Requester  *MedicationRequest_Requester `protobuf:"bytes,22,opt,name=requester,proto3" json:"requester,omitempty"`
	// Person who entered the request
	Recorder *Reference `protobuf:"bytes,23,opt,name=recorder,proto3" json:"recorder,omitempty"`
	// Reason or indication for writing the prescription
	ReasonCode []*CodeableConcept `protobuf:"bytes,24,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Condition or Observation that supports why the prescription is being
	// written
	ReasonReference []*Reference `protobuf:"bytes,25,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Information about the prescription
	Note []*Annotation `protobuf:"bytes,26,rep,name=note,proto3" json:"note,omitempty"`
	// How the medication should be taken
	DosageInstruction []*Dosage                          `protobuf:"bytes,27,rep,name=dosage_instruction,json=dosageInstruction,proto3" json:"dosage_instruction,omitempty"`
	DispenseRequest   *MedicationRequest_DispenseRequest `protobuf:"bytes,28,opt,name=dispense_request,json=dispenseRequest,proto3" json:"dispense_request,omitempty"`
	Substitution      *MedicationRequest_Substitution    `protobuf:"bytes,29,opt,name=substitution,proto3" json:"substitution,omitempty"`
	// An order/prescription that is being replaced
	PriorPrescription *Reference `protobuf:"bytes,30,opt,name=prior_prescription,json=priorPrescription,proto3" json:"prior_prescription,omitempty"`
	// Clinical Issue with action
	DetectedIssue []*Reference `protobuf:"bytes,31,rep,name=detected_issue,json=detectedIssue,proto3" json:"detected_issue,omitempty"`
	// A list of events of interest in the lifecycle
	EventHistory         []*Reference `protobuf:"bytes,32,rep,name=event_history,json=eventHistory,proto3" json:"event_history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MedicationRequest) Reset()         { *m = MedicationRequest{} }
func (m *MedicationRequest) String() string { return proto.CompactTextString(m) }
func (*MedicationRequest) ProtoMessage()    {}
func (*MedicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{69}
}

func (m *MedicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationRequest.Unmarshal(m, b)
}
func (m *MedicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationRequest.Marshal(b, m, deterministic)
}
func (m *MedicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationRequest.Merge(m, src)
}
func (m *MedicationRequest) XXX_Size() int {
	return xxx_messageInfo_MedicationRequest.Size(m)
}
func (m *MedicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationRequest proto.InternalMessageInfo

func (m *MedicationRequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MedicationRequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *MedicationRequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *MedicationRequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MedicationRequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *MedicationRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationRequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MedicationRequest) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *MedicationRequest) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *MedicationRequest) GetGroupIdentifier() *Identifier {
	if m != nil {
		return m.GroupIdentifier
	}
	return nil
}

func (m *MedicationRequest) GetStatus() *MedicationRequestStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MedicationRequest) GetIntent() *MedicationRequestIntentCode {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *MedicationRequest) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *MedicationRequest) GetPriority() *MedicationRequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *MedicationRequest) GetMedication() *MedicationRequest_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *MedicationRequest) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *MedicationRequest) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *MedicationRequest) GetSupportingInformation() []*Reference {
	if m != nil {
		return m.SupportingInformation
	}
	return nil
}

func (m *MedicationRequest) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *MedicationRequest) GetRequester() *MedicationRequest_Requester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *MedicationRequest) GetRecorder() *Reference {
	if m != nil {
		return m.Recorder
	}
	return nil
}

func (m *MedicationRequest) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *MedicationRequest) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *MedicationRequest) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *MedicationRequest) GetDosageInstruction() []*Dosage {
	if m != nil {
		return m.DosageInstruction
	}
	return nil
}

func (m *MedicationRequest) GetDispenseRequest() *MedicationRequest_DispenseRequest {
	if m != nil {
		return m.DispenseRequest
	}
	return nil
}

func (m *MedicationRequest) GetSubstitution() *MedicationRequest_Substitution {
	if m != nil {
		return m.Substitution
	}
	return nil
}

func (m *MedicationRequest) GetPriorPrescription() *Reference {
	if m != nil {
		return m.PriorPrescription
	}
	return nil
}

func (m *MedicationRequest) GetDetectedIssue() []*Reference {
	if m != nil {
		return m.DetectedIssue
	}
	return nil
}

func (m *MedicationRequest) GetEventHistory() []*Reference {
	if m != nil {
		return m.EventHistory
	}
	return nil
}

// Medication to be taken
type MedicationRequest_Medication struct {
	// Types that are valid to be assigned to Medication:
	//	*MedicationRequest_Medication_CodeableConcept
	//	*MedicationRequest_Medication_Reference
	Medication           isMedicationRequest_Medication_Medication `protobuf_oneof:"medication"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *MedicationRequest_Medication) Reset()         { *m = MedicationRequest_Medication{} }
func (m *MedicationRequest_Medication) String() string { return proto.CompactTextString(m) }
func (*MedicationRequest_Medication) ProtoMessage()    {}
func (*MedicationRequest_Medication) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{69, 0}
}

func (m *MedicationRequest_Medication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationRequest_Medication.Unmarshal(m, b)
}
func (m *MedicationRequest_Medication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationRequest_Medication.Marshal(b, m, deterministic)
}
func (m *MedicationRequest_Medication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationRequest_Medication.Merge(m, src)
}
func (m *MedicationRequest_Medication) XXX_Size() int {
	return xxx_messageInfo_MedicationRequest_Medication.Size(m)
}
func (m *MedicationRequest_Medication) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationRequest_Medication.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationRequest_Medication proto.InternalMessageInfo

type isMedicationRequest_Medication_Medication interface {
	isMedicationRequest_Medication_Medication()
}

type MedicationRequest_Medication_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type MedicationRequest_Medication_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*MedicationRequest_Medication_CodeableConcept) isMedicationRequest_Medication_Medication() {}

func (*MedicationRequest_Medication_Reference) isMedicationRequest_Medication_Medication() {}

func (m *MedicationRequest_Medication) GetMedication() isMedicationRequest_Medication_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *MedicationRequest_Medication) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetMedication().(*MedicationRequest_Medication_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *MedicationRequest_Medication) GetReference() *Reference {
	if x, ok := m.GetMedication().(*MedicationRequest_Medication_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MedicationRequest_Medication) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MedicationRequest_Medication_OneofMarshaler, _MedicationRequest_Medication_OneofUnmarshaler, _MedicationRequest_Medication_OneofSizer, []interface{}{
		(*MedicationRequest_Medication_CodeableConcept)(nil),
		(*MedicationRequest_Medication_Reference)(nil),
	}
}

func _MedicationRequest_Medication_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MedicationRequest_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *MedicationRequest_Medication_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *MedicationRequest_Medication_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MedicationRequest_Medication.Medication has unexpected type %T", x)
	}
	return nil
}

func _MedicationRequest_Medication_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MedicationRequest_Medication)
	switch tag {
	case 1: // medication.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Medication = &MedicationRequest_Medication_CodeableConcept{msg}
		return true, err
	case 2: // medication.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Medication = &MedicationRequest_Medication_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MedicationRequest_Medication_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MedicationRequest_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *MedicationRequest_Medication_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MedicationRequest_Medication_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who/What requested the Request
type MedicationRequest_Requester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Who ordered the initial medication(s)
	Agent *Reference `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// Organization agent is acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MedicationRequest_Requester) Reset()         { *m = MedicationRequest_Requester{} }
func (m *MedicationRequest_Requester) String() string { return proto.CompactTextString(m) }
func (*MedicationRequest_Requester) ProtoMessage()    {}
func (*MedicationRequest_Requester) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{69, 1}
}

func (m *MedicationRequest_Requester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationRequest_Requester.Unmarshal(m, b)
}
func (m *MedicationRequest_Requester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationRequest_Requester.Marshal(b, m, deterministic)
}
func (m *MedicationRequest_Requester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationRequest_Requester.Merge(m, src)
}
func (m *MedicationRequest_Requester) XXX_Size() int {
	return xxx_messageInfo_MedicationRequest_Requester.Size(m)
}
func (m *MedicationRequest_Requester) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationRequest_Requester.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationRequest_Requester proto.InternalMessageInfo

func (m *MedicationRequest_Requester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationRequest_Requester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationRequest_Requester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationRequest_Requester) GetAgent() *Reference {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *MedicationRequest_Requester) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Medication supply authorization
type MedicationRequest_DispenseRequest struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Time period supply is authorized for
	ValidityPeriod *Period `protobuf:"bytes,4,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty"`
	// Number of refills authorized
	NumberOfRepeatsAllowed *PositiveInt `protobuf:"bytes,5,opt,name=number_of_repeats_allowed,json=numberOfRepeatsAllowed,proto3" json:"number_of_repeats_allowed,omitempty"`
	// Amount of medication to supply per dispense
	Quantity *SimpleQuantity `protobuf:"bytes,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Number of days supply per dispense
	ExpectedSupplyDuration *Duration `protobuf:"bytes,7,opt,name=expected_supply_duration,json=expectedSupplyDuration,proto3" json:"expected_supply_duration,omitempty"`
	// Intended dispenser
	Performer            *Reference `protobuf:"bytes,8,opt,name=performer,proto3" json:"performer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MedicationRequest_DispenseRequest) Reset()         { *m = MedicationRequest_DispenseRequest{} }
func (m *MedicationRequest_DispenseRequest) String() string { return proto.CompactTextString(m) }
func (*MedicationRequest_DispenseRequest) ProtoMessage()    {}
func (*MedicationRequest_DispenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{69, 2}
}

func (m *MedicationRequest_DispenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationRequest_DispenseRequest.Unmarshal(m, b)
}
func (m *MedicationRequest_DispenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationRequest_DispenseRequest.Marshal(b, m, deterministic)
}
func (m *MedicationRequest_DispenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationRequest_DispenseRequest.Merge(m, src)
}
func (m *MedicationRequest_DispenseRequest) XXX_Size() int {
	return xxx_messageInfo_MedicationRequest_DispenseRequest.Size(m)
}
func (m *MedicationRequest_DispenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationRequest_DispenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationRequest_DispenseRequest proto.InternalMessageInfo

func (m *MedicationRequest_DispenseRequest) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationRequest_DispenseRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationRequest_DispenseRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationRequest_DispenseRequest) GetValidityPeriod() *Period {
	if m != nil {
		return m.ValidityPeriod
	}
	return nil
}

func (m *MedicationRequest_DispenseRequest) GetNumberOfRepeatsAllowed() *PositiveInt {
	if m != nil {
		return m.NumberOfRepeatsAllowed
	}
	return nil
}

func (m *MedicationRequest_DispenseRequest) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *MedicationRequest_DispenseRequest) GetExpectedSupplyDuration() *Duration {
	if m != nil {
		return m.ExpectedSupplyDuration
	}
	return nil
}

func (m *MedicationRequest_DispenseRequest) GetPerformer() *Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

// Any restrictions on medication substitution
type MedicationRequest_Substitution struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Whether substitution is allowed or not
	Allowed *Boolean `protobuf:"bytes,4,opt,name=allowed,proto3" json:"allowed,omitempty"`
	// Why should (not) substitution be made
	Reason               *CodeableConcept `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MedicationRequest_Substitution) Reset()         { *m = MedicationRequest_Substitution{} }
func (m *MedicationRequest_Substitution) String() string { return proto.CompactTextString(m) }
func (*MedicationRequest_Substitution) ProtoMessage()    {}
func (*MedicationRequest_Substitution) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{69, 3}
}

func (m *MedicationRequest_Substitution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationRequest_Substitution.Unmarshal(m, b)
}
func (m *MedicationRequest_Substitution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationRequest_Substitution.Marshal(b, m, deterministic)
}
func (m *MedicationRequest_Substitution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationRequest_Substitution.Merge(m, src)
}
func (m *MedicationRequest_Substitution) XXX_Size() int {
	return xxx_messageInfo_MedicationRequest_Substitution.Size(m)
}
func (m *MedicationRequest_Substitution) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationRequest_Substitution.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationRequest_Substitution proto.InternalMessageInfo

func (m *MedicationRequest_Substitution) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationRequest_Substitution) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationRequest_Substitution) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationRequest_Substitution) GetAllowed() *Boolean {
	if m != nil {
		return m.Allowed
	}
	return nil
}

func (m *MedicationRequest_Substitution) GetReason() *CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

// Auto-generated from StructureDefinition for MedicationStatement, last updated
// 2017-04-19T07:44:43.294+10:00. Record of medication being taken by a patient.
// See http://hl7.org/fhir/StructureDefinition/MedicationStatement
type MedicationStatement struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfils plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Part of referenced event
	PartOf []*Reference `protobuf:"bytes,11,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// Encounter / Episode associated with MedicationStatement
	Context *Reference `protobuf:"bytes,12,opt,name=context,proto3" json:"context,omitempty"`
	// active | completed | entered-in-error | intended | stopped | on-hold
	Status *MedicationStatementStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// Type of medication usage
	Category   *CodeableConcept                `protobuf:"bytes,14,opt,name=category,proto3" json:"category,omitempty"`
	Medication *MedicationStatement_Medication `protobuf:"bytes,15,opt,name=medication,proto3" json:"medication,omitempty"`
	Effective  *MedicationStatement_Effective  `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// When the statement was asserted?
	DateAsserted *DateTime `protobuf:"bytes,17,opt,name=date_asserted,json=dateAsserted,proto3" json:"date_asserted,omitempty"`
	// Person or organization that provided the information about the taking of
	// this medication
	InformationSource *Reference `protobuf:"bytes,18,opt,name=information_source,json=informationSource,proto3" json:"information_source,omitempty"`
	// Who is/was taking  the medication
	Subject *Reference `protobuf:"bytes,19,opt,name=subject,proto3" json:"subject,omitempty"`
	// Additional supporting information
	DerivedFrom []*Reference `protobuf:"bytes,20,rep,name=derived_from,json=derivedFrom,proto3" json:"derived_from,omitempty"`
	// y | n | unk | na
	Taken *MedicationStatementTakenCode `protobuf:"bytes,21,opt,name=taken,proto3" json:"taken,omitempty"`
	// True if asserting medication was not given
	ReasonNotTaken []*CodeableConcept `protobuf:"bytes,22,rep,name=reason_not_taken,json=reasonNotTaken,proto3" json:"reason_not_taken,omitempty"`
	// Reason for why the medication is being/was taken
	ReasonCode []*CodeableConcept `protobuf:"bytes,23,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Condition or observation that supports why the medication is being/was
	// taken
	ReasonReference []*Reference `protobuf:"bytes,24,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Further information about the statement
	Note []*Annotation `protobuf:"bytes,25,rep,name=note,proto3" json:"note,omitempty"`
	// Details of how medication is/was taken or should be taken
	Dosage               []*Dosage `protobuf:"bytes,26,rep,name=dosage,proto3" json:"dosage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MedicationStatement) Reset()         { *m = MedicationStatement{} }
func (m *MedicationStatement) String() string { return proto.CompactTextString(m) }
func (*MedicationStatement) ProtoMessage()    {}
func (*MedicationStatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{70}
}

func (m *MedicationStatement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationStatement.Unmarshal(m, b)
}
func (m *MedicationStatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationStatement.Marshal(b, m, deterministic)
}
func (m *MedicationStatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationStatement.Merge(m, src)
}
func (m *MedicationStatement) XXX_Size() int {
	return xxx_messageInfo_MedicationStatement.Size(m)
}
func (m *MedicationStatement) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationStatement.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationStatement proto.InternalMessageInfo

func (m *MedicationStatement) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MedicationStatement) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MedicationStatement) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *MedicationStatement) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *MedicationStatement) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MedicationStatement) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *MedicationStatement) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MedicationStatement) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MedicationStatement) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MedicationStatement) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *MedicationStatement) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *MedicationStatement) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *MedicationStatement) GetStatus() *MedicationStatementStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MedicationStatement) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *MedicationStatement) GetMedication() *MedicationStatement_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *MedicationStatement) GetEffective() *MedicationStatement_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *MedicationStatement) GetDateAsserted() *DateTime {
	if m != nil {
		return m.DateAsserted
	}
	return nil
}

func (m *MedicationStatement) GetInformationSource() *Reference {
	if m != nil {
		return m.InformationSource
	}
	return nil
}

func (m *MedicationStatement) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *MedicationStatement) GetDerivedFrom() []*Reference {
	if m != nil {
		return m.DerivedFrom
	}
	return nil
}

func (m *MedicationStatement) GetTaken() *MedicationStatementTakenCode {
	if m != nil {
		return m.Taken
	}
	return nil
}

func (m *MedicationStatement) GetReasonNotTaken() []*CodeableConcept {
	if m != nil {
		return m.ReasonNotTaken
	}
	return nil
}

func (m *MedicationStatement) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *MedicationStatement) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *MedicationStatement) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *MedicationStatement) GetDosage() []*Dosage {
	if m != nil {
		return m.Dosage
	}
	return nil
}

// What medication was taken
type MedicationStatement_Medication struct {
	// Types that are valid to be assigned to Medication:
	//	*MedicationStatement_Medication_CodeableConcept
	//	*MedicationStatement_Medication_Reference
	Medication           isMedicationStatement_Medication_Medication `protobuf_oneof:"medication"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *MedicationStatement_Medication) Reset()         { *m = MedicationStatement_Medication{} }
func (m *MedicationStatement_Medication) String() string { return proto.CompactTextString(m) }
func (*MedicationStatement_Medication) ProtoMessage()    {}
func (*MedicationStatement_Medication) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{70, 0}
}

func (m *MedicationStatement_Medication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationStatement_Medication.Unmarshal(m, b)
}
func (m *MedicationStatement_Medication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationStatement_Medication.Marshal(b, m, deterministic)
}
func (m *MedicationStatement_Medication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationStatement_Medication.Merge(m, src)
}
func (m *MedicationStatement_Medication) XXX_Size() int {
	return xxx_messageInfo_MedicationStatement_Medication.Size(m)
}
func (m *MedicationStatement_Medication) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationStatement_Medication.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationStatement_Medication proto.InternalMessageInfo

type isMedicationStatement_Medication_Medication interface {
	isMedicationStatement_Medication_Medication()
}

type MedicationStatement_Medication_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type MedicationStatement_Medication_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*MedicationStatement_Medication_CodeableConcept) isMedicationStatement_Medication_Medication() {}

func (*MedicationStatement_Medication_Reference) isMedicationStatement_Medication_Medication() {}

func (m *MedicationStatement_Medication) GetMedication() isMedicationStatement_Medication_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *MedicationStatement_Medication) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetMedication().(*MedicationStatement_Medication_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *MedicationStatement_Medication) GetReference() *Reference {
	if x, ok := m.GetMedication().(*MedicationStatement_Medication_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MedicationStatement_Medication) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MedicationStatement_Medication_OneofMarshaler, _MedicationStatement_Medication_OneofUnmarshaler, _MedicationStatement_Medication_OneofSizer, []interface{}{
		(*MedicationStatement_Medication_CodeableConcept)(nil),
		(*MedicationStatement_Medication_Reference)(nil),
	}
}

func _MedicationStatement_Medication_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MedicationStatement_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *MedicationStatement_Medication_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *MedicationStatement_Medication_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MedicationStatement_Medication.Medication has unexpected type %T", x)
	}
	return nil
}

func _MedicationStatement_Medication_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MedicationStatement_Medication)
	switch tag {
	case 1: // medication.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Medication = &MedicationStatement_Medication_CodeableConcept{msg}
		return true, err
	case 2: // medication.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Medication = &MedicationStatement_Medication_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MedicationStatement_Medication_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MedicationStatement_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *MedicationStatement_Medication_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MedicationStatement_Medication_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The date/time or interval when the medication was taken
type MedicationStatement_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*MedicationStatement_Effective_DateTime
	//	*MedicationStatement_Effective_Period
	Effective            isMedicationStatement_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *MedicationStatement_Effective) Reset()         { *m = MedicationStatement_Effective{} }
func (m *MedicationStatement_Effective) String() string { return proto.CompactTextString(m) }
func (*MedicationStatement_Effective) ProtoMessage()    {}
func (*MedicationStatement_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{70, 1}
}

func (m *MedicationStatement_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MedicationStatement_Effective.Unmarshal(m, b)
}
func (m *MedicationStatement_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MedicationStatement_Effective.Marshal(b, m, deterministic)
}
func (m *MedicationStatement_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MedicationStatement_Effective.Merge(m, src)
}
func (m *MedicationStatement_Effective) XXX_Size() int {
	return xxx_messageInfo_MedicationStatement_Effective.Size(m)
}
func (m *MedicationStatement_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_MedicationStatement_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_MedicationStatement_Effective proto.InternalMessageInfo

type isMedicationStatement_Effective_Effective interface {
	isMedicationStatement_Effective_Effective()
}

type MedicationStatement_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type MedicationStatement_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*MedicationStatement_Effective_DateTime) isMedicationStatement_Effective_Effective() {}

func (*MedicationStatement_Effective_Period) isMedicationStatement_Effective_Effective() {}

func (m *MedicationStatement_Effective) GetEffective() isMedicationStatement_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *MedicationStatement_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*MedicationStatement_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *MedicationStatement_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*MedicationStatement_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MedicationStatement_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MedicationStatement_Effective_OneofMarshaler, _MedicationStatement_Effective_OneofUnmarshaler, _MedicationStatement_Effective_OneofSizer, []interface{}{
		(*MedicationStatement_Effective_DateTime)(nil),
		(*MedicationStatement_Effective_Period)(nil),
	}
}

func _MedicationStatement_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MedicationStatement_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *MedicationStatement_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *MedicationStatement_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MedicationStatement_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _MedicationStatement_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MedicationStatement_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &MedicationStatement_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &MedicationStatement_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MedicationStatement_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MedicationStatement_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *MedicationStatement_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MedicationStatement_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for MessageDefinition, last updated
// 2017-04-19T07:44:43.294+10:00. A resource that defines a type of message that
// can be exchanged between systems. See
// http://hl7.org/fhir/StructureDefinition/MessageDefinition
type MessageDefinition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this message definition (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the message definition
	Identifier *Identifier `protobuf:"bytes,10,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the message definition
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this message definition (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this message definition (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the message definition
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,20,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for message definition (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,21,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this message definition is defined
	Purpose *Markdown `protobuf:"bytes,22,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,23,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Definition this one is based on
	Base *Reference `protobuf:"bytes,24,opt,name=base,proto3" json:"base,omitempty"`
	// Protocol/workflow this is part of
	Parent []*Reference `protobuf:"bytes,25,rep,name=parent,proto3" json:"parent,omitempty"`
	// Takes the place of
	Replaces []*Reference `protobuf:"bytes,26,rep,name=replaces,proto3" json:"replaces,omitempty"`
	// Event type
	Event *Coding `protobuf:"bytes,27,opt,name=event,proto3" json:"event,omitempty"`
	// Consequence | Currency | Notification
	Category *MessageSignificanceCategoryCode `protobuf:"bytes,28,opt,name=category,proto3" json:"category,omitempty"`
	Focus    []*MessageDefinition_Focus       `protobuf:"bytes,29,rep,name=focus,proto3" json:"focus,omitempty"`
	// Is a response required?
	ResponseRequired     *Boolean                             `protobuf:"bytes,30,opt,name=response_required,json=responseRequired,proto3" json:"response_required,omitempty"`
	AllowedResponse      []*MessageDefinition_AllowedResponse `protobuf:"bytes,31,rep,name=allowed_response,json=allowedResponse,proto3" json:"allowed_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *MessageDefinition) Reset()         { *m = MessageDefinition{} }
func (m *MessageDefinition) String() string { return proto.CompactTextString(m) }
func (*MessageDefinition) ProtoMessage()    {}
func (*MessageDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{71}
}

func (m *MessageDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageDefinition.Unmarshal(m, b)
}
func (m *MessageDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageDefinition.Marshal(b, m, deterministic)
}
func (m *MessageDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageDefinition.Merge(m, src)
}
func (m *MessageDefinition) XXX_Size() int {
	return xxx_messageInfo_MessageDefinition.Size(m)
}
func (m *MessageDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_MessageDefinition proto.InternalMessageInfo

func (m *MessageDefinition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MessageDefinition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MessageDefinition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *MessageDefinition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *MessageDefinition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MessageDefinition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *MessageDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MessageDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MessageDefinition) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *MessageDefinition) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MessageDefinition) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *MessageDefinition) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *MessageDefinition) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *MessageDefinition) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MessageDefinition) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *MessageDefinition) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *MessageDefinition) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *MessageDefinition) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *MessageDefinition) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *MessageDefinition) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *MessageDefinition) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *MessageDefinition) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *MessageDefinition) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *MessageDefinition) GetBase() *Reference {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *MessageDefinition) GetParent() []*Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *MessageDefinition) GetReplaces() []*Reference {
	if m != nil {
		return m.Replaces
	}
	return nil
}

func (m *MessageDefinition) GetEvent() *Coding {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *MessageDefinition) GetCategory() *MessageSignificanceCategoryCode {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *MessageDefinition) GetFocus() []*MessageDefinition_Focus {
	if m != nil {
		return m.Focus
	}
	return nil
}

func (m *MessageDefinition) GetResponseRequired() *Boolean {
	if m != nil {
		return m.ResponseRequired
	}
	return nil
}

func (m *MessageDefinition) GetAllowedResponse() []*MessageDefinition_AllowedResponse {
	if m != nil {
		return m.AllowedResponse
	}
	return nil
}

// Resource(s) that are the subject of the event
type MessageDefinition_Focus struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of resource
	Code *ResourceTypeCode `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Profile that must be adhered to by focus
	Profile *Reference `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	// Minimum number of focuses of this type
	Min *UnsignedInt `protobuf:"bytes,6,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum number of focuses of this type
	Max                  *String  `protobuf:"bytes,7,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageDefinition_Focus) Reset()         { *m = MessageDefinition_Focus{} }
func (m *MessageDefinition_Focus) String() string { return proto.CompactTextString(m) }
func (*MessageDefinition_Focus) ProtoMessage()    {}
func (*MessageDefinition_Focus) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{71, 0}
}

func (m *MessageDefinition_Focus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageDefinition_Focus.Unmarshal(m, b)
}
func (m *MessageDefinition_Focus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageDefinition_Focus.Marshal(b, m, deterministic)
}
func (m *MessageDefinition_Focus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageDefinition_Focus.Merge(m, src)
}
func (m *MessageDefinition_Focus) XXX_Size() int {
	return xxx_messageInfo_MessageDefinition_Focus.Size(m)
}
func (m *MessageDefinition_Focus) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageDefinition_Focus.DiscardUnknown(m)
}

var xxx_messageInfo_MessageDefinition_Focus proto.InternalMessageInfo

func (m *MessageDefinition_Focus) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MessageDefinition_Focus) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MessageDefinition_Focus) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MessageDefinition_Focus) GetCode() *ResourceTypeCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *MessageDefinition_Focus) GetProfile() *Reference {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *MessageDefinition_Focus) GetMin() *UnsignedInt {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *MessageDefinition_Focus) GetMax() *String {
	if m != nil {
		return m.Max
	}
	return nil
}

// Responses to this message
type MessageDefinition_AllowedResponse struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reference to allowed message definition response
	Message *Reference `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// When should this response be used
	Situation            *Markdown `protobuf:"bytes,5,opt,name=situation,proto3" json:"situation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MessageDefinition_AllowedResponse) Reset()         { *m = MessageDefinition_AllowedResponse{} }
func (m *MessageDefinition_AllowedResponse) String() string { return proto.CompactTextString(m) }
func (*MessageDefinition_AllowedResponse) ProtoMessage()    {}
func (*MessageDefinition_AllowedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{71, 1}
}

func (m *MessageDefinition_AllowedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageDefinition_AllowedResponse.Unmarshal(m, b)
}
func (m *MessageDefinition_AllowedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageDefinition_AllowedResponse.Marshal(b, m, deterministic)
}
func (m *MessageDefinition_AllowedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageDefinition_AllowedResponse.Merge(m, src)
}
func (m *MessageDefinition_AllowedResponse) XXX_Size() int {
	return xxx_messageInfo_MessageDefinition_AllowedResponse.Size(m)
}
func (m *MessageDefinition_AllowedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageDefinition_AllowedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageDefinition_AllowedResponse proto.InternalMessageInfo

func (m *MessageDefinition_AllowedResponse) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MessageDefinition_AllowedResponse) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MessageDefinition_AllowedResponse) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MessageDefinition_AllowedResponse) GetMessage() *Reference {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MessageDefinition_AllowedResponse) GetSituation() *Markdown {
	if m != nil {
		return m.Situation
	}
	return nil
}

// Auto-generated from StructureDefinition for MessageHeader, last updated
// 2017-04-19T07:44:43.294+10:00. A resource that describes a message that is
// exchanged between systems. See
// http://hl7.org/fhir/StructureDefinition/MessageHeader
type MessageHeader struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code for the event this message represents
	Event       *Coding                             `protobuf:"bytes,9,opt,name=event,proto3" json:"event,omitempty"`
	Destination []*MessageHeader_MessageDestination `protobuf:"bytes,10,rep,name=destination,proto3" json:"destination,omitempty"`
	// Intended "real-world" recipient for the data
	Receiver *Reference `protobuf:"bytes,11,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// Real world sender of the message
	Sender *Reference `protobuf:"bytes,12,opt,name=sender,proto3" json:"sender,omitempty"`
	// Time that the message was sent
	Timestamp *Instant `protobuf:"bytes,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The source of the data entry
	Enterer *Reference `protobuf:"bytes,14,opt,name=enterer,proto3" json:"enterer,omitempty"`
	// The source of the decision
	Author *Reference                   `protobuf:"bytes,15,opt,name=author,proto3" json:"author,omitempty"`
	Source *MessageHeader_MessageSource `protobuf:"bytes,16,opt,name=source,proto3" json:"source,omitempty"`
	// Final responsibility for event
	Responsible *Reference `protobuf:"bytes,17,opt,name=responsible,proto3" json:"responsible,omitempty"`
	// Cause of event
	Reason   *CodeableConcept        `protobuf:"bytes,18,opt,name=reason,proto3" json:"reason,omitempty"`
	Response *MessageHeader_Response `protobuf:"bytes,19,opt,name=response,proto3" json:"response,omitempty"`
	// The actual content of the message
	Focus                []*Reference `protobuf:"bytes,20,rep,name=focus,proto3" json:"focus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageHeader) Reset()         { *m = MessageHeader{} }
func (m *MessageHeader) String() string { return proto.CompactTextString(m) }
func (*MessageHeader) ProtoMessage()    {}
func (*MessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{72}
}

func (m *MessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageHeader.Unmarshal(m, b)
}
func (m *MessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageHeader.Marshal(b, m, deterministic)
}
func (m *MessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageHeader.Merge(m, src)
}
func (m *MessageHeader) XXX_Size() int {
	return xxx_messageInfo_MessageHeader.Size(m)
}
func (m *MessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_MessageHeader proto.InternalMessageInfo

func (m *MessageHeader) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MessageHeader) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MessageHeader) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *MessageHeader) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *MessageHeader) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MessageHeader) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *MessageHeader) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MessageHeader) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MessageHeader) GetEvent() *Coding {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *MessageHeader) GetDestination() []*MessageHeader_MessageDestination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *MessageHeader) GetReceiver() *Reference {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *MessageHeader) GetSender() *Reference {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *MessageHeader) GetTimestamp() *Instant {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *MessageHeader) GetEnterer() *Reference {
	if m != nil {
		return m.Enterer
	}
	return nil
}

func (m *MessageHeader) GetAuthor() *Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *MessageHeader) GetSource() *MessageHeader_MessageSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *MessageHeader) GetResponsible() *Reference {
	if m != nil {
		return m.Responsible
	}
	return nil
}

func (m *MessageHeader) GetReason() *CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *MessageHeader) GetResponse() *MessageHeader_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *MessageHeader) GetFocus() []*Reference {
	if m != nil {
		return m.Focus
	}
	return nil
}

// Message destination application(s)
type MessageHeader_MessageDestination struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name of system
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Particular delivery destination within the destination
	Target *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	// Actual destination address or id
	Endpoint             *Uri     `protobuf:"bytes,6,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageHeader_MessageDestination) Reset()         { *m = MessageHeader_MessageDestination{} }
func (m *MessageHeader_MessageDestination) String() string { return proto.CompactTextString(m) }
func (*MessageHeader_MessageDestination) ProtoMessage()    {}
func (*MessageHeader_MessageDestination) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{72, 0}
}

func (m *MessageHeader_MessageDestination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageHeader_MessageDestination.Unmarshal(m, b)
}
func (m *MessageHeader_MessageDestination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageHeader_MessageDestination.Marshal(b, m, deterministic)
}
func (m *MessageHeader_MessageDestination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageHeader_MessageDestination.Merge(m, src)
}
func (m *MessageHeader_MessageDestination) XXX_Size() int {
	return xxx_messageInfo_MessageHeader_MessageDestination.Size(m)
}
func (m *MessageHeader_MessageDestination) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageHeader_MessageDestination.DiscardUnknown(m)
}

var xxx_messageInfo_MessageHeader_MessageDestination proto.InternalMessageInfo

func (m *MessageHeader_MessageDestination) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MessageHeader_MessageDestination) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MessageHeader_MessageDestination) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MessageHeader_MessageDestination) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *MessageHeader_MessageDestination) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *MessageHeader_MessageDestination) GetEndpoint() *Uri {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

// Message source application
type MessageHeader_MessageSource struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name of system
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Name of software running the system
	Software *String `protobuf:"bytes,5,opt,name=software,proto3" json:"software,omitempty"`
	// Version of software running
	Version *String `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	// Human contact for problems
	Contact *ContactPoint `protobuf:"bytes,7,opt,name=contact,proto3" json:"contact,omitempty"`
	// Actual message source address or id
	Endpoint             *Uri     `protobuf:"bytes,8,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageHeader_MessageSource) Reset()         { *m = MessageHeader_MessageSource{} }
func (m *MessageHeader_MessageSource) String() string { return proto.CompactTextString(m) }
func (*MessageHeader_MessageSource) ProtoMessage()    {}
func (*MessageHeader_MessageSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{72, 1}
}

func (m *MessageHeader_MessageSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageHeader_MessageSource.Unmarshal(m, b)
}
func (m *MessageHeader_MessageSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageHeader_MessageSource.Marshal(b, m, deterministic)
}
func (m *MessageHeader_MessageSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageHeader_MessageSource.Merge(m, src)
}
func (m *MessageHeader_MessageSource) XXX_Size() int {
	return xxx_messageInfo_MessageHeader_MessageSource.Size(m)
}
func (m *MessageHeader_MessageSource) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageHeader_MessageSource.DiscardUnknown(m)
}

var xxx_messageInfo_MessageHeader_MessageSource proto.InternalMessageInfo

func (m *MessageHeader_MessageSource) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MessageHeader_MessageSource) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MessageHeader_MessageSource) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MessageHeader_MessageSource) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *MessageHeader_MessageSource) GetSoftware() *String {
	if m != nil {
		return m.Software
	}
	return nil
}

func (m *MessageHeader_MessageSource) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *MessageHeader_MessageSource) GetContact() *ContactPoint {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *MessageHeader_MessageSource) GetEndpoint() *Uri {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

// If this is a reply to prior message
type MessageHeader_Response struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Id of original message
	Identifier *Id `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// ok | transient-error | fatal-error
	Code *ResponseTypeCode `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Specific list of hints/warnings/errors
	Details              *Reference `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MessageHeader_Response) Reset()         { *m = MessageHeader_Response{} }
func (m *MessageHeader_Response) String() string { return proto.CompactTextString(m) }
func (*MessageHeader_Response) ProtoMessage()    {}
func (*MessageHeader_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{72, 2}
}

func (m *MessageHeader_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageHeader_Response.Unmarshal(m, b)
}
func (m *MessageHeader_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageHeader_Response.Marshal(b, m, deterministic)
}
func (m *MessageHeader_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageHeader_Response.Merge(m, src)
}
func (m *MessageHeader_Response) XXX_Size() int {
	return xxx_messageInfo_MessageHeader_Response.Size(m)
}
func (m *MessageHeader_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageHeader_Response.DiscardUnknown(m)
}

var xxx_messageInfo_MessageHeader_Response proto.InternalMessageInfo

func (m *MessageHeader_Response) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MessageHeader_Response) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MessageHeader_Response) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MessageHeader_Response) GetIdentifier() *Id {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MessageHeader_Response) GetCode() *ResponseTypeCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *MessageHeader_Response) GetDetails() *Reference {
	if m != nil {
		return m.Details
	}
	return nil
}

// Auto-generated from StructureDefinition for NamingSystem, last updated
// 2017-04-19T07:44:43.294+10:00. System of unique identification. See
// http://hl7.org/fhir/StructureDefinition/NamingSystem
type NamingSystem struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name for this naming system (computer friendly)
	Name *String `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// codesystem | identifier | root
	Kind *NamingSystemTypeCode `protobuf:"bytes,11,opt,name=kind,proto3" json:"kind,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,12,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,13,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,14,rep,name=contact,proto3" json:"contact,omitempty"`
	// Who maintains system namespace?
	Responsible *String `protobuf:"bytes,15,opt,name=responsible,proto3" json:"responsible,omitempty"`
	// e.g. driver,  provider,  patient, bank etc.
	Type *CodeableConcept `protobuf:"bytes,16,opt,name=type,proto3" json:"type,omitempty"`
	// Natural language description of the naming system
	Description *Markdown `protobuf:"bytes,17,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,18,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for naming system (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,19,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// How/where is it used
	Usage    *String                  `protobuf:"bytes,20,opt,name=usage,proto3" json:"usage,omitempty"`
	UniqueId []*NamingSystem_UniqueId `protobuf:"bytes,21,rep,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	// Use this instead
	ReplacedBy           *Reference `protobuf:"bytes,22,opt,name=replaced_by,json=replacedBy,proto3" json:"replaced_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NamingSystem) Reset()         { *m = NamingSystem{} }
func (m *NamingSystem) String() string { return proto.CompactTextString(m) }
func (*NamingSystem) ProtoMessage()    {}
func (*NamingSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{73}
}

func (m *NamingSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamingSystem.Unmarshal(m, b)
}
func (m *NamingSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamingSystem.Marshal(b, m, deterministic)
}
func (m *NamingSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamingSystem.Merge(m, src)
}
func (m *NamingSystem) XXX_Size() int {
	return xxx_messageInfo_NamingSystem.Size(m)
}
func (m *NamingSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_NamingSystem.DiscardUnknown(m)
}

var xxx_messageInfo_NamingSystem proto.InternalMessageInfo

func (m *NamingSystem) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NamingSystem) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *NamingSystem) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *NamingSystem) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *NamingSystem) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *NamingSystem) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *NamingSystem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *NamingSystem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *NamingSystem) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *NamingSystem) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *NamingSystem) GetKind() *NamingSystemTypeCode {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *NamingSystem) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *NamingSystem) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *NamingSystem) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *NamingSystem) GetResponsible() *String {
	if m != nil {
		return m.Responsible
	}
	return nil
}

func (m *NamingSystem) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *NamingSystem) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *NamingSystem) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *NamingSystem) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *NamingSystem) GetUsage() *String {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *NamingSystem) GetUniqueId() []*NamingSystem_UniqueId {
	if m != nil {
		return m.UniqueId
	}
	return nil
}

func (m *NamingSystem) GetReplacedBy() *Reference {
	if m != nil {
		return m.ReplacedBy
	}
	return nil
}

// Unique identifiers used for system
type NamingSystem_UniqueId struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// oid | uuid | uri | other
	Type *NamingSystemIdentifierTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// The unique identifier
	Value *String `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Is this the id that should be used for this type
	Preferred *Boolean `protobuf:"bytes,6,opt,name=preferred,proto3" json:"preferred,omitempty"`
	// Notes about identifier usage
	Comment *String `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	// When is identifier valid?
	Period               *Period  `protobuf:"bytes,8,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamingSystem_UniqueId) Reset()         { *m = NamingSystem_UniqueId{} }
func (m *NamingSystem_UniqueId) String() string { return proto.CompactTextString(m) }
func (*NamingSystem_UniqueId) ProtoMessage()    {}
func (*NamingSystem_UniqueId) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{73, 0}
}

func (m *NamingSystem_UniqueId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamingSystem_UniqueId.Unmarshal(m, b)
}
func (m *NamingSystem_UniqueId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamingSystem_UniqueId.Marshal(b, m, deterministic)
}
func (m *NamingSystem_UniqueId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamingSystem_UniqueId.Merge(m, src)
}
func (m *NamingSystem_UniqueId) XXX_Size() int {
	return xxx_messageInfo_NamingSystem_UniqueId.Size(m)
}
func (m *NamingSystem_UniqueId) XXX_DiscardUnknown() {
	xxx_messageInfo_NamingSystem_UniqueId.DiscardUnknown(m)
}

var xxx_messageInfo_NamingSystem_UniqueId proto.InternalMessageInfo

func (m *NamingSystem_UniqueId) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NamingSystem_UniqueId) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *NamingSystem_UniqueId) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *NamingSystem_UniqueId) GetType() *NamingSystemIdentifierTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *NamingSystem_UniqueId) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *NamingSystem_UniqueId) GetPreferred() *Boolean {
	if m != nil {
		return m.Preferred
	}
	return nil
}

func (m *NamingSystem_UniqueId) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *NamingSystem_UniqueId) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// Auto-generated from StructureDefinition for NutritionOrder, last updated
// 2017-04-19T07:44:43.294+10:00. Diet, formula or nutritional supplement
// request. See http://hl7.org/fhir/StructureDefinition/NutritionOrder
type NutritionOrder struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifiers assigned to this order
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// proposed | draft | planned | requested | active | on-hold | completed |
	// cancelled | entered-in-error
	Status *NutritionOrderStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// The person who requires the diet, formula or nutritional supplement
	Patient *Reference `protobuf:"bytes,11,opt,name=patient,proto3" json:"patient,omitempty"`
	// The encounter associated with this nutrition order
	Encounter *Reference `protobuf:"bytes,12,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// Date and time the nutrition order was requested
	DateTime *DateTime `protobuf:"bytes,13,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	// Who ordered the diet, formula or nutritional supplement
	Orderer *Reference `protobuf:"bytes,14,opt,name=orderer,proto3" json:"orderer,omitempty"`
	// List of the patient's food and nutrition-related allergies and intolerances
	AllergyIntolerance []*Reference `protobuf:"bytes,15,rep,name=allergy_intolerance,json=allergyIntolerance,proto3" json:"allergy_intolerance,omitempty"`
	// Order-specific modifier about the type of food that should be given
	FoodPreferenceModifier []*CodeableConcept `protobuf:"bytes,16,rep,name=food_preference_modifier,json=foodPreferenceModifier,proto3" json:"food_preference_modifier,omitempty"`
	// Order-specific modifier about the type of food that should not be given
	ExcludeFoodModifier  []*CodeableConcept             `protobuf:"bytes,17,rep,name=exclude_food_modifier,json=excludeFoodModifier,proto3" json:"exclude_food_modifier,omitempty"`
	OralDiet             *NutritionOrder_OralDiet       `protobuf:"bytes,18,opt,name=oral_diet,json=oralDiet,proto3" json:"oral_diet,omitempty"`
	Supplement           []*NutritionOrder_Supplement   `protobuf:"bytes,19,rep,name=supplement,proto3" json:"supplement,omitempty"`
	EnteralFormula       *NutritionOrder_EnteralFormula `protobuf:"bytes,20,opt,name=enteral_formula,json=enteralFormula,proto3" json:"enteral_formula,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *NutritionOrder) Reset()         { *m = NutritionOrder{} }
func (m *NutritionOrder) String() string { return proto.CompactTextString(m) }
func (*NutritionOrder) ProtoMessage()    {}
func (*NutritionOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{74}
}

func (m *NutritionOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutritionOrder.Unmarshal(m, b)
}
func (m *NutritionOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutritionOrder.Marshal(b, m, deterministic)
}
func (m *NutritionOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutritionOrder.Merge(m, src)
}
func (m *NutritionOrder) XXX_Size() int {
	return xxx_messageInfo_NutritionOrder.Size(m)
}
func (m *NutritionOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_NutritionOrder.DiscardUnknown(m)
}

var xxx_messageInfo_NutritionOrder proto.InternalMessageInfo

func (m *NutritionOrder) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NutritionOrder) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *NutritionOrder) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *NutritionOrder) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *NutritionOrder) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *NutritionOrder) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *NutritionOrder) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *NutritionOrder) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *NutritionOrder) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *NutritionOrder) GetStatus() *NutritionOrderStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *NutritionOrder) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *NutritionOrder) GetEncounter() *Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *NutritionOrder) GetDateTime() *DateTime {
	if m != nil {
		return m.DateTime
	}
	return nil
}

func (m *NutritionOrder) GetOrderer() *Reference {
	if m != nil {
		return m.Orderer
	}
	return nil
}

func (m *NutritionOrder) GetAllergyIntolerance() []*Reference {
	if m != nil {
		return m.AllergyIntolerance
	}
	return nil
}

func (m *NutritionOrder) GetFoodPreferenceModifier() []*CodeableConcept {
	if m != nil {
		return m.FoodPreferenceModifier
	}
	return nil
}

func (m *NutritionOrder) GetExcludeFoodModifier() []*CodeableConcept {
	if m != nil {
		return m.ExcludeFoodModifier
	}
	return nil
}

func (m *NutritionOrder) GetOralDiet() *NutritionOrder_OralDiet {
	if m != nil {
		return m.OralDiet
	}
	return nil
}

func (m *NutritionOrder) GetSupplement() []*NutritionOrder_Supplement {
	if m != nil {
		return m.Supplement
	}
	return nil
}

func (m *NutritionOrder) GetEnteralFormula() *NutritionOrder_EnteralFormula {
	if m != nil {
		return m.EnteralFormula
	}
	return nil
}

// Oral diet components
type NutritionOrder_OralDiet struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of oral diet or diet restrictions that describe what can be consumed
	// orally
	Type []*CodeableConcept `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	// Scheduled frequency of diet
	Schedule []*Timing                           `protobuf:"bytes,5,rep,name=schedule,proto3" json:"schedule,omitempty"`
	Nutrient []*NutritionOrder_OralDiet_Nutrient `protobuf:"bytes,6,rep,name=nutrient,proto3" json:"nutrient,omitempty"`
	Texture  []*NutritionOrder_OralDiet_Texture  `protobuf:"bytes,7,rep,name=texture,proto3" json:"texture,omitempty"`
	// The required consistency of fluids and liquids provided to the patient
	FluidConsistencyType []*CodeableConcept `protobuf:"bytes,8,rep,name=fluid_consistency_type,json=fluidConsistencyType,proto3" json:"fluid_consistency_type,omitempty"`
	// Instructions or additional information about the oral diet
	Instruction          *String  `protobuf:"bytes,9,opt,name=instruction,proto3" json:"instruction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NutritionOrder_OralDiet) Reset()         { *m = NutritionOrder_OralDiet{} }
func (m *NutritionOrder_OralDiet) String() string { return proto.CompactTextString(m) }
func (*NutritionOrder_OralDiet) ProtoMessage()    {}
func (*NutritionOrder_OralDiet) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{74, 0}
}

func (m *NutritionOrder_OralDiet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutritionOrder_OralDiet.Unmarshal(m, b)
}
func (m *NutritionOrder_OralDiet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutritionOrder_OralDiet.Marshal(b, m, deterministic)
}
func (m *NutritionOrder_OralDiet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutritionOrder_OralDiet.Merge(m, src)
}
func (m *NutritionOrder_OralDiet) XXX_Size() int {
	return xxx_messageInfo_NutritionOrder_OralDiet.Size(m)
}
func (m *NutritionOrder_OralDiet) XXX_DiscardUnknown() {
	xxx_messageInfo_NutritionOrder_OralDiet.DiscardUnknown(m)
}

var xxx_messageInfo_NutritionOrder_OralDiet proto.InternalMessageInfo

func (m *NutritionOrder_OralDiet) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NutritionOrder_OralDiet) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *NutritionOrder_OralDiet) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *NutritionOrder_OralDiet) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *NutritionOrder_OralDiet) GetSchedule() []*Timing {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *NutritionOrder_OralDiet) GetNutrient() []*NutritionOrder_OralDiet_Nutrient {
	if m != nil {
		return m.Nutrient
	}
	return nil
}

func (m *NutritionOrder_OralDiet) GetTexture() []*NutritionOrder_OralDiet_Texture {
	if m != nil {
		return m.Texture
	}
	return nil
}

func (m *NutritionOrder_OralDiet) GetFluidConsistencyType() []*CodeableConcept {
	if m != nil {
		return m.FluidConsistencyType
	}
	return nil
}

func (m *NutritionOrder_OralDiet) GetInstruction() *String {
	if m != nil {
		return m.Instruction
	}
	return nil
}

// Required  nutrient modifications
type NutritionOrder_OralDiet_Nutrient struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of nutrient that is being modified
	Modifier *CodeableConcept `protobuf:"bytes,4,opt,name=modifier,proto3" json:"modifier,omitempty"`
	// Quantity of the specified nutrient
	Amount               *SimpleQuantity `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NutritionOrder_OralDiet_Nutrient) Reset()         { *m = NutritionOrder_OralDiet_Nutrient{} }
func (m *NutritionOrder_OralDiet_Nutrient) String() string { return proto.CompactTextString(m) }
func (*NutritionOrder_OralDiet_Nutrient) ProtoMessage()    {}
func (*NutritionOrder_OralDiet_Nutrient) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{74, 0, 0}
}

func (m *NutritionOrder_OralDiet_Nutrient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutritionOrder_OralDiet_Nutrient.Unmarshal(m, b)
}
func (m *NutritionOrder_OralDiet_Nutrient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutritionOrder_OralDiet_Nutrient.Marshal(b, m, deterministic)
}
func (m *NutritionOrder_OralDiet_Nutrient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutritionOrder_OralDiet_Nutrient.Merge(m, src)
}
func (m *NutritionOrder_OralDiet_Nutrient) XXX_Size() int {
	return xxx_messageInfo_NutritionOrder_OralDiet_Nutrient.Size(m)
}
func (m *NutritionOrder_OralDiet_Nutrient) XXX_DiscardUnknown() {
	xxx_messageInfo_NutritionOrder_OralDiet_Nutrient.DiscardUnknown(m)
}

var xxx_messageInfo_NutritionOrder_OralDiet_Nutrient proto.InternalMessageInfo

func (m *NutritionOrder_OralDiet_Nutrient) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NutritionOrder_OralDiet_Nutrient) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *NutritionOrder_OralDiet_Nutrient) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *NutritionOrder_OralDiet_Nutrient) GetModifier() *CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *NutritionOrder_OralDiet_Nutrient) GetAmount() *SimpleQuantity {
	if m != nil {
		return m.Amount
	}
	return nil
}

// Required  texture modifications
type NutritionOrder_OralDiet_Texture struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code to indicate how to alter the texture of the foods, e.g. pureed
	Modifier *CodeableConcept `protobuf:"bytes,4,opt,name=modifier,proto3" json:"modifier,omitempty"`
	// Concepts that are used to identify an entity that is ingested for
	// nutritional purposes
	FoodType             *CodeableConcept `protobuf:"bytes,5,opt,name=food_type,json=foodType,proto3" json:"food_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NutritionOrder_OralDiet_Texture) Reset()         { *m = NutritionOrder_OralDiet_Texture{} }
func (m *NutritionOrder_OralDiet_Texture) String() string { return proto.CompactTextString(m) }
func (*NutritionOrder_OralDiet_Texture) ProtoMessage()    {}
func (*NutritionOrder_OralDiet_Texture) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{74, 0, 1}
}

func (m *NutritionOrder_OralDiet_Texture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutritionOrder_OralDiet_Texture.Unmarshal(m, b)
}
func (m *NutritionOrder_OralDiet_Texture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutritionOrder_OralDiet_Texture.Marshal(b, m, deterministic)
}
func (m *NutritionOrder_OralDiet_Texture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutritionOrder_OralDiet_Texture.Merge(m, src)
}
func (m *NutritionOrder_OralDiet_Texture) XXX_Size() int {
	return xxx_messageInfo_NutritionOrder_OralDiet_Texture.Size(m)
}
func (m *NutritionOrder_OralDiet_Texture) XXX_DiscardUnknown() {
	xxx_messageInfo_NutritionOrder_OralDiet_Texture.DiscardUnknown(m)
}

var xxx_messageInfo_NutritionOrder_OralDiet_Texture proto.InternalMessageInfo

func (m *NutritionOrder_OralDiet_Texture) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NutritionOrder_OralDiet_Texture) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *NutritionOrder_OralDiet_Texture) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *NutritionOrder_OralDiet_Texture) GetModifier() *CodeableConcept {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *NutritionOrder_OralDiet_Texture) GetFoodType() *CodeableConcept {
	if m != nil {
		return m.FoodType
	}
	return nil
}

// Supplement components
type NutritionOrder_Supplement struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of supplement product requested
	Type *CodeableConcept `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Product or brand name of the nutritional supplement
	ProductName *String `protobuf:"bytes,5,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	// Scheduled frequency of supplement
	Schedule []*Timing `protobuf:"bytes,6,rep,name=schedule,proto3" json:"schedule,omitempty"`
	// Amount of the nutritional supplement
	Quantity *SimpleQuantity `protobuf:"bytes,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Instructions or additional information about the oral supplement
	Instruction          *String  `protobuf:"bytes,8,opt,name=instruction,proto3" json:"instruction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NutritionOrder_Supplement) Reset()         { *m = NutritionOrder_Supplement{} }
func (m *NutritionOrder_Supplement) String() string { return proto.CompactTextString(m) }
func (*NutritionOrder_Supplement) ProtoMessage()    {}
func (*NutritionOrder_Supplement) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{74, 1}
}

func (m *NutritionOrder_Supplement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutritionOrder_Supplement.Unmarshal(m, b)
}
func (m *NutritionOrder_Supplement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutritionOrder_Supplement.Marshal(b, m, deterministic)
}
func (m *NutritionOrder_Supplement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutritionOrder_Supplement.Merge(m, src)
}
func (m *NutritionOrder_Supplement) XXX_Size() int {
	return xxx_messageInfo_NutritionOrder_Supplement.Size(m)
}
func (m *NutritionOrder_Supplement) XXX_DiscardUnknown() {
	xxx_messageInfo_NutritionOrder_Supplement.DiscardUnknown(m)
}

var xxx_messageInfo_NutritionOrder_Supplement proto.InternalMessageInfo

func (m *NutritionOrder_Supplement) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NutritionOrder_Supplement) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *NutritionOrder_Supplement) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *NutritionOrder_Supplement) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *NutritionOrder_Supplement) GetProductName() *String {
	if m != nil {
		return m.ProductName
	}
	return nil
}

func (m *NutritionOrder_Supplement) GetSchedule() []*Timing {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *NutritionOrder_Supplement) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *NutritionOrder_Supplement) GetInstruction() *String {
	if m != nil {
		return m.Instruction
	}
	return nil
}

// Enteral formula components
type NutritionOrder_EnteralFormula struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of enteral or infant formula
	BaseFormulaType *CodeableConcept `protobuf:"bytes,4,opt,name=base_formula_type,json=baseFormulaType,proto3" json:"base_formula_type,omitempty"`
	// Product or brand name of the enteral or infant formula
	BaseFormulaProductName *String `protobuf:"bytes,5,opt,name=base_formula_product_name,json=baseFormulaProductName,proto3" json:"base_formula_product_name,omitempty"`
	// Type of modular component to add to the feeding
	AdditiveType *CodeableConcept `protobuf:"bytes,6,opt,name=additive_type,json=additiveType,proto3" json:"additive_type,omitempty"`
	// Product or brand name of the modular additive
	AdditiveProductName *String `protobuf:"bytes,7,opt,name=additive_product_name,json=additiveProductName,proto3" json:"additive_product_name,omitempty"`
	// Amount of energy per specified volume that is required
	CaloricDensity *SimpleQuantity `protobuf:"bytes,8,opt,name=caloric_density,json=caloricDensity,proto3" json:"caloric_density,omitempty"`
	// How the formula should enter the patient's gastrointestinal tract
	RouteofAdministration *CodeableConcept                                `protobuf:"bytes,9,opt,name=routeof_administration,json=routeofAdministration,proto3" json:"routeof_administration,omitempty"`
	Administration        []*NutritionOrder_EnteralFormula_Administration `protobuf:"bytes,10,rep,name=administration,proto3" json:"administration,omitempty"`
	// Upper limit on formula volume per unit of time
	MaxVolumeToDeliver *SimpleQuantity `protobuf:"bytes,11,opt,name=max_volume_to_deliver,json=maxVolumeToDeliver,proto3" json:"max_volume_to_deliver,omitempty"`
	// Formula feeding instructions expressed as text
	AdministrationInstruction *String  `protobuf:"bytes,12,opt,name=administration_instruction,json=administrationInstruction,proto3" json:"administration_instruction,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *NutritionOrder_EnteralFormula) Reset()         { *m = NutritionOrder_EnteralFormula{} }
func (m *NutritionOrder_EnteralFormula) String() string { return proto.CompactTextString(m) }
func (*NutritionOrder_EnteralFormula) ProtoMessage()    {}
func (*NutritionOrder_EnteralFormula) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{74, 2}
}

func (m *NutritionOrder_EnteralFormula) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutritionOrder_EnteralFormula.Unmarshal(m, b)
}
func (m *NutritionOrder_EnteralFormula) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutritionOrder_EnteralFormula.Marshal(b, m, deterministic)
}
func (m *NutritionOrder_EnteralFormula) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutritionOrder_EnteralFormula.Merge(m, src)
}
func (m *NutritionOrder_EnteralFormula) XXX_Size() int {
	return xxx_messageInfo_NutritionOrder_EnteralFormula.Size(m)
}
func (m *NutritionOrder_EnteralFormula) XXX_DiscardUnknown() {
	xxx_messageInfo_NutritionOrder_EnteralFormula.DiscardUnknown(m)
}

var xxx_messageInfo_NutritionOrder_EnteralFormula proto.InternalMessageInfo

func (m *NutritionOrder_EnteralFormula) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetBaseFormulaType() *CodeableConcept {
	if m != nil {
		return m.BaseFormulaType
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetBaseFormulaProductName() *String {
	if m != nil {
		return m.BaseFormulaProductName
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetAdditiveType() *CodeableConcept {
	if m != nil {
		return m.AdditiveType
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetAdditiveProductName() *String {
	if m != nil {
		return m.AdditiveProductName
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetCaloricDensity() *SimpleQuantity {
	if m != nil {
		return m.CaloricDensity
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetRouteofAdministration() *CodeableConcept {
	if m != nil {
		return m.RouteofAdministration
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetAdministration() []*NutritionOrder_EnteralFormula_Administration {
	if m != nil {
		return m.Administration
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetMaxVolumeToDeliver() *SimpleQuantity {
	if m != nil {
		return m.MaxVolumeToDeliver
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula) GetAdministrationInstruction() *String {
	if m != nil {
		return m.AdministrationInstruction
	}
	return nil
}

// Formula feeding instruction as structured data
type NutritionOrder_EnteralFormula_Administration struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Scheduled frequency of enteral feeding
	Schedule *Timing `protobuf:"bytes,4,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// The volume of formula to provide
	Quantity             *SimpleQuantity                                    `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Rate                 *NutritionOrder_EnteralFormula_Administration_Rate `protobuf:"bytes,6,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *NutritionOrder_EnteralFormula_Administration) Reset() {
	*m = NutritionOrder_EnteralFormula_Administration{}
}
func (m *NutritionOrder_EnteralFormula_Administration) String() string {
	return proto.CompactTextString(m)
}
func (*NutritionOrder_EnteralFormula_Administration) ProtoMessage() {}
func (*NutritionOrder_EnteralFormula_Administration) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{74, 2, 0}
}

func (m *NutritionOrder_EnteralFormula_Administration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutritionOrder_EnteralFormula_Administration.Unmarshal(m, b)
}
func (m *NutritionOrder_EnteralFormula_Administration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutritionOrder_EnteralFormula_Administration.Marshal(b, m, deterministic)
}
func (m *NutritionOrder_EnteralFormula_Administration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutritionOrder_EnteralFormula_Administration.Merge(m, src)
}
func (m *NutritionOrder_EnteralFormula_Administration) XXX_Size() int {
	return xxx_messageInfo_NutritionOrder_EnteralFormula_Administration.Size(m)
}
func (m *NutritionOrder_EnteralFormula_Administration) XXX_DiscardUnknown() {
	xxx_messageInfo_NutritionOrder_EnteralFormula_Administration.DiscardUnknown(m)
}

var xxx_messageInfo_NutritionOrder_EnteralFormula_Administration proto.InternalMessageInfo

func (m *NutritionOrder_EnteralFormula_Administration) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula_Administration) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula_Administration) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula_Administration) GetSchedule() *Timing {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula_Administration) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula_Administration) GetRate() *NutritionOrder_EnteralFormula_Administration_Rate {
	if m != nil {
		return m.Rate
	}
	return nil
}

// Speed with which the formula is provided per period of time
type NutritionOrder_EnteralFormula_Administration_Rate struct {
	// Types that are valid to be assigned to Rate:
	//	*NutritionOrder_EnteralFormula_Administration_Rate_Quantity
	//	*NutritionOrder_EnteralFormula_Administration_Rate_Ratio
	Rate                 isNutritionOrder_EnteralFormula_Administration_Rate_Rate `protobuf_oneof:"rate"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *NutritionOrder_EnteralFormula_Administration_Rate) Reset() {
	*m = NutritionOrder_EnteralFormula_Administration_Rate{}
}
func (m *NutritionOrder_EnteralFormula_Administration_Rate) String() string {
	return proto.CompactTextString(m)
}
func (*NutritionOrder_EnteralFormula_Administration_Rate) ProtoMessage() {}
func (*NutritionOrder_EnteralFormula_Administration_Rate) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{74, 2, 0, 0}
}

func (m *NutritionOrder_EnteralFormula_Administration_Rate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutritionOrder_EnteralFormula_Administration_Rate.Unmarshal(m, b)
}
func (m *NutritionOrder_EnteralFormula_Administration_Rate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutritionOrder_EnteralFormula_Administration_Rate.Marshal(b, m, deterministic)
}
func (m *NutritionOrder_EnteralFormula_Administration_Rate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutritionOrder_EnteralFormula_Administration_Rate.Merge(m, src)
}
func (m *NutritionOrder_EnteralFormula_Administration_Rate) XXX_Size() int {
	return xxx_messageInfo_NutritionOrder_EnteralFormula_Administration_Rate.Size(m)
}
func (m *NutritionOrder_EnteralFormula_Administration_Rate) XXX_DiscardUnknown() {
	xxx_messageInfo_NutritionOrder_EnteralFormula_Administration_Rate.DiscardUnknown(m)
}

var xxx_messageInfo_NutritionOrder_EnteralFormula_Administration_Rate proto.InternalMessageInfo

type isNutritionOrder_EnteralFormula_Administration_Rate_Rate interface {
	isNutritionOrder_EnteralFormula_Administration_Rate_Rate()
}

type NutritionOrder_EnteralFormula_Administration_Rate_Quantity struct {
	Quantity *SimpleQuantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type NutritionOrder_EnteralFormula_Administration_Rate_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,2,opt,name=ratio,proto3,oneof"`
}

func (*NutritionOrder_EnteralFormula_Administration_Rate_Quantity) isNutritionOrder_EnteralFormula_Administration_Rate_Rate() {
}

func (*NutritionOrder_EnteralFormula_Administration_Rate_Ratio) isNutritionOrder_EnteralFormula_Administration_Rate_Rate() {
}

func (m *NutritionOrder_EnteralFormula_Administration_Rate) GetRate() isNutritionOrder_EnteralFormula_Administration_Rate_Rate {
	if m != nil {
		return m.Rate
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula_Administration_Rate) GetQuantity() *SimpleQuantity {
	if x, ok := m.GetRate().(*NutritionOrder_EnteralFormula_Administration_Rate_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *NutritionOrder_EnteralFormula_Administration_Rate) GetRatio() *Ratio {
	if x, ok := m.GetRate().(*NutritionOrder_EnteralFormula_Administration_Rate_Ratio); ok {
		return x.Ratio
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NutritionOrder_EnteralFormula_Administration_Rate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NutritionOrder_EnteralFormula_Administration_Rate_OneofMarshaler, _NutritionOrder_EnteralFormula_Administration_Rate_OneofUnmarshaler, _NutritionOrder_EnteralFormula_Administration_Rate_OneofSizer, []interface{}{
		(*NutritionOrder_EnteralFormula_Administration_Rate_Quantity)(nil),
		(*NutritionOrder_EnteralFormula_Administration_Rate_Ratio)(nil),
	}
}

func _NutritionOrder_EnteralFormula_Administration_Rate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NutritionOrder_EnteralFormula_Administration_Rate)
	// rate
	switch x := m.Rate.(type) {
	case *NutritionOrder_EnteralFormula_Administration_Rate_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *NutritionOrder_EnteralFormula_Administration_Rate_Ratio:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NutritionOrder_EnteralFormula_Administration_Rate.Rate has unexpected type %T", x)
	}
	return nil
}

func _NutritionOrder_EnteralFormula_Administration_Rate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NutritionOrder_EnteralFormula_Administration_Rate)
	switch tag {
	case 1: // rate.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SimpleQuantity)
		err := b.DecodeMessage(msg)
		m.Rate = &NutritionOrder_EnteralFormula_Administration_Rate_Quantity{msg}
		return true, err
	case 2: // rate.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Rate = &NutritionOrder_EnteralFormula_Administration_Rate_Ratio{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NutritionOrder_EnteralFormula_Administration_Rate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NutritionOrder_EnteralFormula_Administration_Rate)
	// rate
	switch x := m.Rate.(type) {
	case *NutritionOrder_EnteralFormula_Administration_Rate_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NutritionOrder_EnteralFormula_Administration_Rate_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Observation, last updated
// 2017-04-19T07:44:43.294+10:00. Measurements and simple assertions. See
// http://hl7.org/fhir/StructureDefinition/Observation
type Observation struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Type of observation (code / type)
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference             `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Observation_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference       `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Observation_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                    `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Observation_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Observation_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Observation_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Observation) Reset()         { *m = Observation{} }
func (m *Observation) String() string { return proto.CompactTextString(m) }
func (*Observation) ProtoMessage()    {}
func (*Observation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{75}
}

func (m *Observation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation.Unmarshal(m, b)
}
func (m *Observation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation.Marshal(b, m, deterministic)
}
func (m *Observation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation.Merge(m, src)
}
func (m *Observation) XXX_Size() int {
	return xxx_messageInfo_Observation.Size(m)
}
func (m *Observation) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation.DiscardUnknown(m)
}

var xxx_messageInfo_Observation proto.InternalMessageInfo

func (m *Observation) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Observation) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Observation) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Observation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Observation) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Observation) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Observation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Observation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Observation) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Observation) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Observation) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Observation) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Observation) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Observation) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Observation) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Observation) GetEffective() *Observation_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Observation) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Observation) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Observation) GetValue() *Observation_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Observation) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Observation) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Observation) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Observation) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Observation) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Observation) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Observation) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Observation) GetReferenceRange() []*Observation_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Observation) GetRelated() []*Observation_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Observation) GetComponent() []*Observation_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Clinically relevant time/time-period for observation
type Observation_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Observation_Effective_DateTime
	//	*Observation_Effective_Period
	Effective            isObservation_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Observation_Effective) Reset()         { *m = Observation_Effective{} }
func (m *Observation_Effective) String() string { return proto.CompactTextString(m) }
func (*Observation_Effective) ProtoMessage()    {}
func (*Observation_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{75, 0}
}

func (m *Observation_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation_Effective.Unmarshal(m, b)
}
func (m *Observation_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation_Effective.Marshal(b, m, deterministic)
}
func (m *Observation_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation_Effective.Merge(m, src)
}
func (m *Observation_Effective) XXX_Size() int {
	return xxx_messageInfo_Observation_Effective.Size(m)
}
func (m *Observation_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Observation_Effective proto.InternalMessageInfo

type isObservation_Effective_Effective interface {
	isObservation_Effective_Effective()
}

type Observation_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Observation_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Observation_Effective_DateTime) isObservation_Effective_Effective() {}

func (*Observation_Effective_Period) isObservation_Effective_Effective() {}

func (m *Observation_Effective) GetEffective() isObservation_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Observation_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Observation_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Observation_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Observation_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Observation_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Observation_Effective_OneofMarshaler, _Observation_Effective_OneofUnmarshaler, _Observation_Effective_OneofSizer, []interface{}{
		(*Observation_Effective_DateTime)(nil),
		(*Observation_Effective_Period)(nil),
	}
}

func _Observation_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Observation_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Observation_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Observation_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Observation_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Observation_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Observation_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Observation_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Observation_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Observation_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Observation_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Observation_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Actual result
type Observation_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Observation_Value_Quantity
	//	*Observation_Value_CodeableConcept
	//	*Observation_Value_StringValue
	//	*Observation_Value_Boolean
	//	*Observation_Value_Range
	//	*Observation_Value_Ratio
	//	*Observation_Value_SampledData
	//	*Observation_Value_Attachment
	//	*Observation_Value_Time
	//	*Observation_Value_DateTime
	//	*Observation_Value_Period
	Value                isObservation_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Observation_Value) Reset()         { *m = Observation_Value{} }
func (m *Observation_Value) String() string { return proto.CompactTextString(m) }
func (*Observation_Value) ProtoMessage()    {}
func (*Observation_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{75, 1}
}

func (m *Observation_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation_Value.Unmarshal(m, b)
}
func (m *Observation_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation_Value.Marshal(b, m, deterministic)
}
func (m *Observation_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation_Value.Merge(m, src)
}
func (m *Observation_Value) XXX_Size() int {
	return xxx_messageInfo_Observation_Value.Size(m)
}
func (m *Observation_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Observation_Value proto.InternalMessageInfo

type isObservation_Value_Value interface {
	isObservation_Value_Value()
}

type Observation_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Observation_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Observation_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type Observation_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,4,opt,name=boolean,proto3,oneof"`
}

type Observation_Value_Range struct {
	Range *Range `protobuf:"bytes,5,opt,name=range,proto3,oneof"`
}

type Observation_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,6,opt,name=ratio,proto3,oneof"`
}

type Observation_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,7,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Observation_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,8,opt,name=attachment,proto3,oneof"`
}

type Observation_Value_Time struct {
	Time *Time `protobuf:"bytes,9,opt,name=time,proto3,oneof"`
}

type Observation_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,10,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Observation_Value_Period struct {
	Period *Period `protobuf:"bytes,11,opt,name=period,proto3,oneof"`
}

func (*Observation_Value_Quantity) isObservation_Value_Value() {}

func (*Observation_Value_CodeableConcept) isObservation_Value_Value() {}

func (*Observation_Value_StringValue) isObservation_Value_Value() {}

func (*Observation_Value_Boolean) isObservation_Value_Value() {}

func (*Observation_Value_Range) isObservation_Value_Value() {}

func (*Observation_Value_Ratio) isObservation_Value_Value() {}

func (*Observation_Value_SampledData) isObservation_Value_Value() {}

func (*Observation_Value_Attachment) isObservation_Value_Value() {}

func (*Observation_Value_Time) isObservation_Value_Value() {}

func (*Observation_Value_DateTime) isObservation_Value_Value() {}

func (*Observation_Value_Period) isObservation_Value_Value() {}

func (m *Observation_Value) GetValue() isObservation_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Observation_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Observation_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Observation_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Observation_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Observation_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Observation_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Observation_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*Observation_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Observation_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Observation_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Observation_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Observation_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Observation_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Observation_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Observation_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Observation_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Observation_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Observation_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Observation_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Observation_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Observation_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Observation_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Observation_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Observation_Value_OneofMarshaler, _Observation_Value_OneofUnmarshaler, _Observation_Value_OneofSizer, []interface{}{
		(*Observation_Value_Quantity)(nil),
		(*Observation_Value_CodeableConcept)(nil),
		(*Observation_Value_StringValue)(nil),
		(*Observation_Value_Boolean)(nil),
		(*Observation_Value_Range)(nil),
		(*Observation_Value_Ratio)(nil),
		(*Observation_Value_SampledData)(nil),
		(*Observation_Value_Attachment)(nil),
		(*Observation_Value_Time)(nil),
		(*Observation_Value_DateTime)(nil),
		(*Observation_Value_Period)(nil),
	}
}

func _Observation_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Observation_Value)
	// value
	switch x := m.Value.(type) {
	case *Observation_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Observation_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Observation_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Observation_Value_Boolean:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Observation_Value_Range:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Observation_Value_Ratio:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Observation_Value_SampledData:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Observation_Value_Attachment:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Observation_Value_Time:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Observation_Value_DateTime:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Observation_Value_Period:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Observation_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Observation_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Observation_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_StringValue{msg}
		return true, err
	case 4: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_Boolean{msg}
		return true, err
	case 5: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_Range{msg}
		return true, err
	case 6: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_Ratio{msg}
		return true, err
	case 7: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_SampledData{msg}
		return true, err
	case 8: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_Attachment{msg}
		return true, err
	case 9: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_Time{msg}
		return true, err
	case 10: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_DateTime{msg}
		return true, err
	case 11: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Observation_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Observation_Value)
	// value
	switch x := m.Value.(type) {
	case *Observation_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Observation_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Observation_ReferenceRange) Reset()         { *m = Observation_ReferenceRange{} }
func (m *Observation_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Observation_ReferenceRange) ProtoMessage()    {}
func (*Observation_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{75, 2}
}

func (m *Observation_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation_ReferenceRange.Unmarshal(m, b)
}
func (m *Observation_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Observation_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation_ReferenceRange.Merge(m, src)
}
func (m *Observation_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Observation_ReferenceRange.Size(m)
}
func (m *Observation_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Observation_ReferenceRange proto.InternalMessageInfo

func (m *Observation_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Observation_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Observation_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Observation_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Observation_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Observation_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Observation_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Observation_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Observation_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Resource related to this observation
type Observation_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Observation_Related) Reset()         { *m = Observation_Related{} }
func (m *Observation_Related) String() string { return proto.CompactTextString(m) }
func (*Observation_Related) ProtoMessage()    {}
func (*Observation_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{75, 3}
}

func (m *Observation_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation_Related.Unmarshal(m, b)
}
func (m *Observation_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation_Related.Marshal(b, m, deterministic)
}
func (m *Observation_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation_Related.Merge(m, src)
}
func (m *Observation_Related) XXX_Size() int {
	return xxx_messageInfo_Observation_Related.Size(m)
}
func (m *Observation_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Observation_Related proto.InternalMessageInfo

func (m *Observation_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Observation_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Observation_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Observation_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Observation_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Component results
type Observation_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept             `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Observation_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Observation_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Observation_Component) Reset()         { *m = Observation_Component{} }
func (m *Observation_Component) String() string { return proto.CompactTextString(m) }
func (*Observation_Component) ProtoMessage()    {}
func (*Observation_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{75, 4}
}

func (m *Observation_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation_Component.Unmarshal(m, b)
}
func (m *Observation_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation_Component.Marshal(b, m, deterministic)
}
func (m *Observation_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation_Component.Merge(m, src)
}
func (m *Observation_Component) XXX_Size() int {
	return xxx_messageInfo_Observation_Component.Size(m)
}
func (m *Observation_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Observation_Component proto.InternalMessageInfo

func (m *Observation_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Observation_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Observation_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Observation_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Observation_Component) GetValue() *Observation_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Observation_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Observation_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Observation_Component) GetReferenceRange() []*Observation_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Actual component result
type Observation_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Observation_Component_Value_Quantity
	//	*Observation_Component_Value_CodeableConcept
	//	*Observation_Component_Value_StringValue
	//	*Observation_Component_Value_Range
	//	*Observation_Component_Value_Ratio
	//	*Observation_Component_Value_SampledData
	//	*Observation_Component_Value_Attachment
	//	*Observation_Component_Value_Time
	//	*Observation_Component_Value_DateTime
	//	*Observation_Component_Value_Period
	Value                isObservation_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Observation_Component_Value) Reset()         { *m = Observation_Component_Value{} }
func (m *Observation_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Observation_Component_Value) ProtoMessage()    {}
func (*Observation_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{75, 4, 0}
}

func (m *Observation_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation_Component_Value.Unmarshal(m, b)
}
func (m *Observation_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation_Component_Value.Marshal(b, m, deterministic)
}
func (m *Observation_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation_Component_Value.Merge(m, src)
}
func (m *Observation_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Observation_Component_Value.Size(m)
}
func (m *Observation_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Observation_Component_Value proto.InternalMessageInfo

type isObservation_Component_Value_Value interface {
	isObservation_Component_Value_Value()
}

type Observation_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Observation_Component_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Observation_Component_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type Observation_Component_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type Observation_Component_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,5,opt,name=ratio,proto3,oneof"`
}

type Observation_Component_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,6,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Observation_Component_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,7,opt,name=attachment,proto3,oneof"`
}

type Observation_Component_Value_Time struct {
	Time *Time `protobuf:"bytes,8,opt,name=time,proto3,oneof"`
}

type Observation_Component_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,9,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Observation_Component_Value_Period struct {
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3,oneof"`
}

func (*Observation_Component_Value_Quantity) isObservation_Component_Value_Value() {}

func (*Observation_Component_Value_CodeableConcept) isObservation_Component_Value_Value() {}

func (*Observation_Component_Value_StringValue) isObservation_Component_Value_Value() {}

func (*Observation_Component_Value_Range) isObservation_Component_Value_Value() {}

func (*Observation_Component_Value_Ratio) isObservation_Component_Value_Value() {}

func (*Observation_Component_Value_SampledData) isObservation_Component_Value_Value() {}

func (*Observation_Component_Value_Attachment) isObservation_Component_Value_Value() {}

func (*Observation_Component_Value_Time) isObservation_Component_Value_Value() {}

func (*Observation_Component_Value_DateTime) isObservation_Component_Value_Value() {}

func (*Observation_Component_Value_Period) isObservation_Component_Value_Value() {}

func (m *Observation_Component_Value) GetValue() isObservation_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Observation_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Observation_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Observation_Component_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Observation_Component_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Observation_Component_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Observation_Component_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Observation_Component_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Observation_Component_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Observation_Component_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Observation_Component_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Observation_Component_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Observation_Component_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Observation_Component_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Observation_Component_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Observation_Component_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Observation_Component_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Observation_Component_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Observation_Component_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Observation_Component_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Observation_Component_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Observation_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Observation_Component_Value_OneofMarshaler, _Observation_Component_Value_OneofUnmarshaler, _Observation_Component_Value_OneofSizer, []interface{}{
		(*Observation_Component_Value_Quantity)(nil),
		(*Observation_Component_Value_CodeableConcept)(nil),
		(*Observation_Component_Value_StringValue)(nil),
		(*Observation_Component_Value_Range)(nil),
		(*Observation_Component_Value_Ratio)(nil),
		(*Observation_Component_Value_SampledData)(nil),
		(*Observation_Component_Value_Attachment)(nil),
		(*Observation_Component_Value_Time)(nil),
		(*Observation_Component_Value_DateTime)(nil),
		(*Observation_Component_Value_Period)(nil),
	}
}

func _Observation_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Observation_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Observation_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Observation_Component_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Observation_Component_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Observation_Component_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Observation_Component_Value_Ratio:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Observation_Component_Value_SampledData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Observation_Component_Value_Attachment:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Observation_Component_Value_Time:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Observation_Component_Value_DateTime:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Observation_Component_Value_Period:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Observation_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Observation_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Observation_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_StringValue{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_Range{msg}
		return true, err
	case 5: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_Ratio{msg}
		return true, err
	case 6: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_SampledData{msg}
		return true, err
	case 7: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_Attachment{msg}
		return true, err
	case 8: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_Time{msg}
		return true, err
	case 9: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_DateTime{msg}
		return true, err
	case 10: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Observation_Component_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Observation_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Observation_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Observation_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Component_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Component_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Component_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Component_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Component_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Component_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Component_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Component_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Observation_Component_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for OperationDefinition, last updated
// 2017-04-19T07:44:43.294+10:00. Definition of an operation or a named query.
// See http://hl7.org/fhir/StructureDefinition/OperationDefinition
type OperationDefinition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this operation definition (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Business version of the operation definition
	Version *String `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this operation definition (computer friendly)
	Name *String `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// operation | query
	Kind *OperationKindCode `protobuf:"bytes,13,opt,name=kind,proto3" json:"kind,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,14,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,16,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,17,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the operation definition
	Description *Markdown `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,19,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for operation definition (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,20,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this operation definition is defined
	Purpose *Markdown `protobuf:"bytes,21,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Whether content is unchanged by the operation
	Idempotent *Boolean `protobuf:"bytes,22,opt,name=idempotent,proto3" json:"idempotent,omitempty"`
	// Name used to invoke the operation
	Code *Code `protobuf:"bytes,23,opt,name=code,proto3" json:"code,omitempty"`
	// Additional information about use
	Comment *String `protobuf:"bytes,24,opt,name=comment,proto3" json:"comment,omitempty"`
	// Marks this as a profile of the base
	Base *Reference `protobuf:"bytes,25,opt,name=base,proto3" json:"base,omitempty"`
	// Types this operation applies to
	Resource []*ResourceTypeCode `protobuf:"bytes,26,rep,name=resource,proto3" json:"resource,omitempty"`
	// Invoke at the system level?
	System *Boolean `protobuf:"bytes,27,opt,name=system,proto3" json:"system,omitempty"`
	// Invole at the type level?
	Type *Boolean `protobuf:"bytes,28,opt,name=type,proto3" json:"type,omitempty"`
	// Invoke on an instance?
	Instance             *Boolean                         `protobuf:"bytes,29,opt,name=instance,proto3" json:"instance,omitempty"`
	Parameter            []*OperationDefinition_Parameter `protobuf:"bytes,30,rep,name=parameter,proto3" json:"parameter,omitempty"`
	Overload             []*OperationDefinition_Overload  `protobuf:"bytes,31,rep,name=overload,proto3" json:"overload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *OperationDefinition) Reset()         { *m = OperationDefinition{} }
func (m *OperationDefinition) String() string { return proto.CompactTextString(m) }
func (*OperationDefinition) ProtoMessage()    {}
func (*OperationDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{76}
}

func (m *OperationDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationDefinition.Unmarshal(m, b)
}
func (m *OperationDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationDefinition.Marshal(b, m, deterministic)
}
func (m *OperationDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationDefinition.Merge(m, src)
}
func (m *OperationDefinition) XXX_Size() int {
	return xxx_messageInfo_OperationDefinition.Size(m)
}
func (m *OperationDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_OperationDefinition proto.InternalMessageInfo

func (m *OperationDefinition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *OperationDefinition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *OperationDefinition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *OperationDefinition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *OperationDefinition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *OperationDefinition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *OperationDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *OperationDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *OperationDefinition) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *OperationDefinition) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *OperationDefinition) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *OperationDefinition) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *OperationDefinition) GetKind() *OperationKindCode {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *OperationDefinition) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *OperationDefinition) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *OperationDefinition) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *OperationDefinition) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *OperationDefinition) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *OperationDefinition) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *OperationDefinition) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *OperationDefinition) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *OperationDefinition) GetIdempotent() *Boolean {
	if m != nil {
		return m.Idempotent
	}
	return nil
}

func (m *OperationDefinition) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *OperationDefinition) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *OperationDefinition) GetBase() *Reference {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *OperationDefinition) GetResource() []*ResourceTypeCode {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *OperationDefinition) GetSystem() *Boolean {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *OperationDefinition) GetType() *Boolean {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *OperationDefinition) GetInstance() *Boolean {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *OperationDefinition) GetParameter() []*OperationDefinition_Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *OperationDefinition) GetOverload() []*OperationDefinition_Overload {
	if m != nil {
		return m.Overload
	}
	return nil
}

// Parameters for the operation/query
type OperationDefinition_Parameter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name in Parameters.parameter.name or in URL
	Name *Code `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// in | out
	Use *OperationParameterUseCode `protobuf:"bytes,5,opt,name=use,proto3" json:"use,omitempty"`
	// Minimum Cardinality
	Min *Integer `protobuf:"bytes,6,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum Cardinality (a number or *)
	Max *String `protobuf:"bytes,7,opt,name=max,proto3" json:"max,omitempty"`
	// Description of meaning/use
	Documentation *String `protobuf:"bytes,8,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// What type this parameter has
	Type *FHIRAllTypesCode `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	// number | date | string | token | reference | composite | quantity | uri
	SearchType *SearchParamTypeCode `protobuf:"bytes,10,opt,name=search_type,json=searchType,proto3" json:"search_type,omitempty"`
	// Profile on the type
	Profile *Reference                             `protobuf:"bytes,11,opt,name=profile,proto3" json:"profile,omitempty"`
	Binding *OperationDefinition_Parameter_Binding `protobuf:"bytes,12,opt,name=binding,proto3" json:"binding,omitempty"`
	// Parts of a nested Parameter
	Part                 []*OperationDefinition_Parameter `protobuf:"bytes,13,rep,name=part,proto3" json:"part,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *OperationDefinition_Parameter) Reset()         { *m = OperationDefinition_Parameter{} }
func (m *OperationDefinition_Parameter) String() string { return proto.CompactTextString(m) }
func (*OperationDefinition_Parameter) ProtoMessage()    {}
func (*OperationDefinition_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{76, 0}
}

func (m *OperationDefinition_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationDefinition_Parameter.Unmarshal(m, b)
}
func (m *OperationDefinition_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationDefinition_Parameter.Marshal(b, m, deterministic)
}
func (m *OperationDefinition_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationDefinition_Parameter.Merge(m, src)
}
func (m *OperationDefinition_Parameter) XXX_Size() int {
	return xxx_messageInfo_OperationDefinition_Parameter.Size(m)
}
func (m *OperationDefinition_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationDefinition_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_OperationDefinition_Parameter proto.InternalMessageInfo

func (m *OperationDefinition_Parameter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetName() *Code {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetUse() *OperationParameterUseCode {
	if m != nil {
		return m.Use
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetMin() *Integer {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetMax() *String {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetType() *FHIRAllTypesCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetSearchType() *SearchParamTypeCode {
	if m != nil {
		return m.SearchType
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetProfile() *Reference {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetBinding() *OperationDefinition_Parameter_Binding {
	if m != nil {
		return m.Binding
	}
	return nil
}

func (m *OperationDefinition_Parameter) GetPart() []*OperationDefinition_Parameter {
	if m != nil {
		return m.Part
	}
	return nil
}

// ValueSet details if this is coded
type OperationDefinition_Parameter_Binding struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// required | extensible | preferred | example
	Strength             *BindingStrengthCode                            `protobuf:"bytes,4,opt,name=strength,proto3" json:"strength,omitempty"`
	ValueSet             *OperationDefinition_Parameter_Binding_ValueSet `protobuf:"bytes,5,opt,name=value_set,json=valueSet,proto3" json:"value_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *OperationDefinition_Parameter_Binding) Reset()         { *m = OperationDefinition_Parameter_Binding{} }
func (m *OperationDefinition_Parameter_Binding) String() string { return proto.CompactTextString(m) }
func (*OperationDefinition_Parameter_Binding) ProtoMessage()    {}
func (*OperationDefinition_Parameter_Binding) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{76, 0, 0}
}

func (m *OperationDefinition_Parameter_Binding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationDefinition_Parameter_Binding.Unmarshal(m, b)
}
func (m *OperationDefinition_Parameter_Binding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationDefinition_Parameter_Binding.Marshal(b, m, deterministic)
}
func (m *OperationDefinition_Parameter_Binding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationDefinition_Parameter_Binding.Merge(m, src)
}
func (m *OperationDefinition_Parameter_Binding) XXX_Size() int {
	return xxx_messageInfo_OperationDefinition_Parameter_Binding.Size(m)
}
func (m *OperationDefinition_Parameter_Binding) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationDefinition_Parameter_Binding.DiscardUnknown(m)
}

var xxx_messageInfo_OperationDefinition_Parameter_Binding proto.InternalMessageInfo

func (m *OperationDefinition_Parameter_Binding) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *OperationDefinition_Parameter_Binding) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *OperationDefinition_Parameter_Binding) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *OperationDefinition_Parameter_Binding) GetStrength() *BindingStrengthCode {
	if m != nil {
		return m.Strength
	}
	return nil
}

func (m *OperationDefinition_Parameter_Binding) GetValueSet() *OperationDefinition_Parameter_Binding_ValueSet {
	if m != nil {
		return m.ValueSet
	}
	return nil
}

// Source of value set
type OperationDefinition_Parameter_Binding_ValueSet struct {
	// Types that are valid to be assigned to ValueSet:
	//	*OperationDefinition_Parameter_Binding_ValueSet_Uri
	//	*OperationDefinition_Parameter_Binding_ValueSet_Reference
	ValueSet             isOperationDefinition_Parameter_Binding_ValueSet_ValueSet `protobuf_oneof:"value_set"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_unrecognized     []byte                                                    `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *OperationDefinition_Parameter_Binding_ValueSet) Reset() {
	*m = OperationDefinition_Parameter_Binding_ValueSet{}
}
func (m *OperationDefinition_Parameter_Binding_ValueSet) String() string {
	return proto.CompactTextString(m)
}
func (*OperationDefinition_Parameter_Binding_ValueSet) ProtoMessage() {}
func (*OperationDefinition_Parameter_Binding_ValueSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{76, 0, 0, 0}
}

func (m *OperationDefinition_Parameter_Binding_ValueSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationDefinition_Parameter_Binding_ValueSet.Unmarshal(m, b)
}
func (m *OperationDefinition_Parameter_Binding_ValueSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationDefinition_Parameter_Binding_ValueSet.Marshal(b, m, deterministic)
}
func (m *OperationDefinition_Parameter_Binding_ValueSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationDefinition_Parameter_Binding_ValueSet.Merge(m, src)
}
func (m *OperationDefinition_Parameter_Binding_ValueSet) XXX_Size() int {
	return xxx_messageInfo_OperationDefinition_Parameter_Binding_ValueSet.Size(m)
}
func (m *OperationDefinition_Parameter_Binding_ValueSet) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationDefinition_Parameter_Binding_ValueSet.DiscardUnknown(m)
}

var xxx_messageInfo_OperationDefinition_Parameter_Binding_ValueSet proto.InternalMessageInfo

type isOperationDefinition_Parameter_Binding_ValueSet_ValueSet interface {
	isOperationDefinition_Parameter_Binding_ValueSet_ValueSet()
}

type OperationDefinition_Parameter_Binding_ValueSet_Uri struct {
	Uri *Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

type OperationDefinition_Parameter_Binding_ValueSet_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*OperationDefinition_Parameter_Binding_ValueSet_Uri) isOperationDefinition_Parameter_Binding_ValueSet_ValueSet() {
}

func (*OperationDefinition_Parameter_Binding_ValueSet_Reference) isOperationDefinition_Parameter_Binding_ValueSet_ValueSet() {
}

func (m *OperationDefinition_Parameter_Binding_ValueSet) GetValueSet() isOperationDefinition_Parameter_Binding_ValueSet_ValueSet {
	if m != nil {
		return m.ValueSet
	}
	return nil
}

func (m *OperationDefinition_Parameter_Binding_ValueSet) GetUri() *Uri {
	if x, ok := m.GetValueSet().(*OperationDefinition_Parameter_Binding_ValueSet_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *OperationDefinition_Parameter_Binding_ValueSet) GetReference() *Reference {
	if x, ok := m.GetValueSet().(*OperationDefinition_Parameter_Binding_ValueSet_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*OperationDefinition_Parameter_Binding_ValueSet) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _OperationDefinition_Parameter_Binding_ValueSet_OneofMarshaler, _OperationDefinition_Parameter_Binding_ValueSet_OneofUnmarshaler, _OperationDefinition_Parameter_Binding_ValueSet_OneofSizer, []interface{}{
		(*OperationDefinition_Parameter_Binding_ValueSet_Uri)(nil),
		(*OperationDefinition_Parameter_Binding_ValueSet_Reference)(nil),
	}
}

func _OperationDefinition_Parameter_Binding_ValueSet_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*OperationDefinition_Parameter_Binding_ValueSet)
	// value_set
	switch x := m.ValueSet.(type) {
	case *OperationDefinition_Parameter_Binding_ValueSet_Uri:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *OperationDefinition_Parameter_Binding_ValueSet_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("OperationDefinition_Parameter_Binding_ValueSet.ValueSet has unexpected type %T", x)
	}
	return nil
}

func _OperationDefinition_Parameter_Binding_ValueSet_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*OperationDefinition_Parameter_Binding_ValueSet)
	switch tag {
	case 1: // value_set.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.ValueSet = &OperationDefinition_Parameter_Binding_ValueSet_Uri{msg}
		return true, err
	case 2: // value_set.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.ValueSet = &OperationDefinition_Parameter_Binding_ValueSet_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _OperationDefinition_Parameter_Binding_ValueSet_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*OperationDefinition_Parameter_Binding_ValueSet)
	// value_set
	switch x := m.ValueSet.(type) {
	case *OperationDefinition_Parameter_Binding_ValueSet_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OperationDefinition_Parameter_Binding_ValueSet_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Define overloaded variants for when  generating code
type OperationDefinition_Overload struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name of parameter to include in overload
	ParameterName []*String `protobuf:"bytes,4,rep,name=parameter_name,json=parameterName,proto3" json:"parameter_name,omitempty"`
	// Comments to go on overload
	Comment              *String  `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperationDefinition_Overload) Reset()         { *m = OperationDefinition_Overload{} }
func (m *OperationDefinition_Overload) String() string { return proto.CompactTextString(m) }
func (*OperationDefinition_Overload) ProtoMessage()    {}
func (*OperationDefinition_Overload) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{76, 1}
}

func (m *OperationDefinition_Overload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationDefinition_Overload.Unmarshal(m, b)
}
func (m *OperationDefinition_Overload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationDefinition_Overload.Marshal(b, m, deterministic)
}
func (m *OperationDefinition_Overload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationDefinition_Overload.Merge(m, src)
}
func (m *OperationDefinition_Overload) XXX_Size() int {
	return xxx_messageInfo_OperationDefinition_Overload.Size(m)
}
func (m *OperationDefinition_Overload) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationDefinition_Overload.DiscardUnknown(m)
}

var xxx_messageInfo_OperationDefinition_Overload proto.InternalMessageInfo

func (m *OperationDefinition_Overload) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *OperationDefinition_Overload) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *OperationDefinition_Overload) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *OperationDefinition_Overload) GetParameterName() []*String {
	if m != nil {
		return m.ParameterName
	}
	return nil
}

func (m *OperationDefinition_Overload) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

// Auto-generated from StructureDefinition for OperationOutcome, last updated
// 2017-04-19T07:44:43.294+10:00. Information about the success/failure of an
// action. See http://hl7.org/fhir/StructureDefinition/OperationOutcome
type OperationOutcome struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension              `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Issue                []*OperationOutcome_Issue `protobuf:"bytes,9,rep,name=issue,proto3" json:"issue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *OperationOutcome) Reset()         { *m = OperationOutcome{} }
func (m *OperationOutcome) String() string { return proto.CompactTextString(m) }
func (*OperationOutcome) ProtoMessage()    {}
func (*OperationOutcome) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{77}
}

func (m *OperationOutcome) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationOutcome.Unmarshal(m, b)
}
func (m *OperationOutcome) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationOutcome.Marshal(b, m, deterministic)
}
func (m *OperationOutcome) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationOutcome.Merge(m, src)
}
func (m *OperationOutcome) XXX_Size() int {
	return xxx_messageInfo_OperationOutcome.Size(m)
}
func (m *OperationOutcome) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationOutcome.DiscardUnknown(m)
}

var xxx_messageInfo_OperationOutcome proto.InternalMessageInfo

func (m *OperationOutcome) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *OperationOutcome) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *OperationOutcome) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *OperationOutcome) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *OperationOutcome) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *OperationOutcome) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *OperationOutcome) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *OperationOutcome) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *OperationOutcome) GetIssue() []*OperationOutcome_Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

// A single issue associated with the action
type OperationOutcome_Issue struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// fatal | error | warning | information
	Severity *IssueSeverityCode `protobuf:"bytes,4,opt,name=severity,proto3" json:"severity,omitempty"`
	// Error or warning code
	Code *IssueTypeCode `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Additional details about the error
	Details *CodeableConcept `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
	// Additional diagnostic information about the issue
	Diagnostics *String `protobuf:"bytes,7,opt,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	// Path of element(s) related to issue
	Location []*String `protobuf:"bytes,8,rep,name=location,proto3" json:"location,omitempty"`
	// FHIRPath of element(s) related to issue
	Expression           []*String `protobuf:"bytes,9,rep,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OperationOutcome_Issue) Reset()         { *m = OperationOutcome_Issue{} }
func (m *OperationOutcome_Issue) String() string { return proto.CompactTextString(m) }
func (*OperationOutcome_Issue) ProtoMessage()    {}
func (*OperationOutcome_Issue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{77, 0}
}

func (m *OperationOutcome_Issue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationOutcome_Issue.Unmarshal(m, b)
}
func (m *OperationOutcome_Issue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationOutcome_Issue.Marshal(b, m, deterministic)
}
func (m *OperationOutcome_Issue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationOutcome_Issue.Merge(m, src)
}
func (m *OperationOutcome_Issue) XXX_Size() int {
	return xxx_messageInfo_OperationOutcome_Issue.Size(m)
}
func (m *OperationOutcome_Issue) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationOutcome_Issue.DiscardUnknown(m)
}

var xxx_messageInfo_OperationOutcome_Issue proto.InternalMessageInfo

func (m *OperationOutcome_Issue) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *OperationOutcome_Issue) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *OperationOutcome_Issue) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *OperationOutcome_Issue) GetSeverity() *IssueSeverityCode {
	if m != nil {
		return m.Severity
	}
	return nil
}

func (m *OperationOutcome_Issue) GetCode() *IssueTypeCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *OperationOutcome_Issue) GetDetails() *CodeableConcept {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *OperationOutcome_Issue) GetDiagnostics() *String {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

func (m *OperationOutcome_Issue) GetLocation() []*String {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *OperationOutcome_Issue) GetExpression() []*String {
	if m != nil {
		return m.Expression
	}
	return nil
}

// Auto-generated from StructureDefinition for Organization, last updated
// 2017-04-19T07:44:43.294+10:00. A grouping of people or organizations with a
// common purpose. See http://hl7.org/fhir/StructureDefinition/Organization
type Organization struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifies this organization  across multiple systems
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether the organization's record is still in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// Kind of organization
	Type []*CodeableConcept `protobuf:"bytes,11,rep,name=type,proto3" json:"type,omitempty"`
	// Name used for the organization
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// A list of alternate names that the organization is known as, or was known
	// as in the past
	Alias []*String `protobuf:"bytes,13,rep,name=alias,proto3" json:"alias,omitempty"`
	// A contact detail for the organization
	Telecom []*ContactPoint `protobuf:"bytes,14,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// An address for the organization
	Address []*Address `protobuf:"bytes,15,rep,name=address,proto3" json:"address,omitempty"`
	// The organization of which this organization forms a part
	PartOf  *Reference              `protobuf:"bytes,16,opt,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	Contact []*Organization_Contact `protobuf:"bytes,17,rep,name=contact,proto3" json:"contact,omitempty"`
	// Technical endpoints providing access to services operated for the
	// organization
	Endpoint             []*Reference `protobuf:"bytes,18,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Organization) Reset()         { *m = Organization{} }
func (m *Organization) String() string { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()    {}
func (*Organization) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{78}
}

func (m *Organization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Organization.Unmarshal(m, b)
}
func (m *Organization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Organization.Marshal(b, m, deterministic)
}
func (m *Organization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organization.Merge(m, src)
}
func (m *Organization) XXX_Size() int {
	return xxx_messageInfo_Organization.Size(m)
}
func (m *Organization) XXX_DiscardUnknown() {
	xxx_messageInfo_Organization.DiscardUnknown(m)
}

var xxx_messageInfo_Organization proto.InternalMessageInfo

func (m *Organization) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Organization) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Organization) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Organization) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Organization) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Organization) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Organization) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Organization) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Organization) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Organization) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Organization) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Organization) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Organization) GetAlias() []*String {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *Organization) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *Organization) GetAddress() []*Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Organization) GetPartOf() *Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *Organization) GetContact() []*Organization_Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Organization) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

// Contact for the organization for a certain purpose
type Organization_Contact struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The type of contact
	Purpose *CodeableConcept `protobuf:"bytes,4,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// A name associated with the contact
	Name *HumanName `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Contact details (telephone, email, etc.)  for a contact
	Telecom []*ContactPoint `protobuf:"bytes,6,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// Visiting or postal addresses for the contact
	Address              *Address `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Organization_Contact) Reset()         { *m = Organization_Contact{} }
func (m *Organization_Contact) String() string { return proto.CompactTextString(m) }
func (*Organization_Contact) ProtoMessage()    {}
func (*Organization_Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{78, 0}
}

func (m *Organization_Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Organization_Contact.Unmarshal(m, b)
}
func (m *Organization_Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Organization_Contact.Marshal(b, m, deterministic)
}
func (m *Organization_Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organization_Contact.Merge(m, src)
}
func (m *Organization_Contact) XXX_Size() int {
	return xxx_messageInfo_Organization_Contact.Size(m)
}
func (m *Organization_Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Organization_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Organization_Contact proto.InternalMessageInfo

func (m *Organization_Contact) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Organization_Contact) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Organization_Contact) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Organization_Contact) GetPurpose() *CodeableConcept {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *Organization_Contact) GetName() *HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Organization_Contact) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *Organization_Contact) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

// Auto-generated from StructureDefinition for Parameters, last updated
// 2017-04-19T07:44:43.294+10:00. Operation Request or Response. See
// http://hl7.org/fhir/StructureDefinition/Parameters
type Parameters struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language             *LanguageCode           `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Parameter            []*Parameters_Parameter `protobuf:"bytes,5,rep,name=parameter,proto3" json:"parameter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Parameters) Reset()         { *m = Parameters{} }
func (m *Parameters) String() string { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()    {}
func (*Parameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{79}
}

func (m *Parameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameters.Unmarshal(m, b)
}
func (m *Parameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameters.Marshal(b, m, deterministic)
}
func (m *Parameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameters.Merge(m, src)
}
func (m *Parameters) XXX_Size() int {
	return xxx_messageInfo_Parameters.Size(m)
}
func (m *Parameters) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameters.DiscardUnknown(m)
}

var xxx_messageInfo_Parameters proto.InternalMessageInfo

func (m *Parameters) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Parameters) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Parameters) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Parameters) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Parameters) GetParameter() []*Parameters_Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

// Operation Parameter
type Parameters_Parameter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name from the definition
	Name  *String                     `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Value *Parameters_Parameter_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// If parameter is a whole resource
	Resource *ContainedResource `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	// Named part of a multi-part parameter
	Part                 []*Parameters_Parameter `protobuf:"bytes,7,rep,name=part,proto3" json:"part,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Parameters_Parameter) Reset()         { *m = Parameters_Parameter{} }
func (m *Parameters_Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameters_Parameter) ProtoMessage()    {}
func (*Parameters_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{79, 0}
}

func (m *Parameters_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameters_Parameter.Unmarshal(m, b)
}
func (m *Parameters_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameters_Parameter.Marshal(b, m, deterministic)
}
func (m *Parameters_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameters_Parameter.Merge(m, src)
}
func (m *Parameters_Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameters_Parameter.Size(m)
}
func (m *Parameters_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameters_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameters_Parameter proto.InternalMessageInfo

func (m *Parameters_Parameter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Parameters_Parameter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Parameters_Parameter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Parameters_Parameter) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Parameters_Parameter) GetValue() *Parameters_Parameter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Parameters_Parameter) GetResource() *ContainedResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *Parameters_Parameter) GetPart() []*Parameters_Parameter {
	if m != nil {
		return m.Part
	}
	return nil
}

// If parameter is a data type
type Parameters_Parameter_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Parameters_Parameter_Value_Base64Binary
	//	*Parameters_Parameter_Value_Boolean
	//	*Parameters_Parameter_Value_Code
	//	*Parameters_Parameter_Value_Date
	//	*Parameters_Parameter_Value_DateTime
	//	*Parameters_Parameter_Value_Decimal
	//	*Parameters_Parameter_Value_Id
	//	*Parameters_Parameter_Value_Instant
	//	*Parameters_Parameter_Value_Integer
	//	*Parameters_Parameter_Value_Markdown
	//	*Parameters_Parameter_Value_Oid
	//	*Parameters_Parameter_Value_PositiveInt
	//	*Parameters_Parameter_Value_StringValue
	//	*Parameters_Parameter_Value_Time
	//	*Parameters_Parameter_Value_UnsignedInt
	//	*Parameters_Parameter_Value_Uri
	//	*Parameters_Parameter_Value_Address
	//	*Parameters_Parameter_Value_Age
	//	*Parameters_Parameter_Value_Annotation
	//	*Parameters_Parameter_Value_Attachment
	//	*Parameters_Parameter_Value_CodeableConcept
	//	*Parameters_Parameter_Value_Coding
	//	*Parameters_Parameter_Value_ContactPoint
	//	*Parameters_Parameter_Value_Count
	//	*Parameters_Parameter_Value_Distance
	//	*Parameters_Parameter_Value_Duration
	//	*Parameters_Parameter_Value_HumanName
	//	*Parameters_Parameter_Value_Identifier
	//	*Parameters_Parameter_Value_Money
	//	*Parameters_Parameter_Value_Period
	//	*Parameters_Parameter_Value_Quantity
	//	*Parameters_Parameter_Value_Range
	//	*Parameters_Parameter_Value_Ratio
	//	*Parameters_Parameter_Value_Reference
	//	*Parameters_Parameter_Value_SampledData
	//	*Parameters_Parameter_Value_Signature
	//	*Parameters_Parameter_Value_Timing
	//	*Parameters_Parameter_Value_Meta
	Value                isParameters_Parameter_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Parameters_Parameter_Value) Reset()         { *m = Parameters_Parameter_Value{} }
func (m *Parameters_Parameter_Value) String() string { return proto.CompactTextString(m) }
func (*Parameters_Parameter_Value) ProtoMessage()    {}
func (*Parameters_Parameter_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{79, 0, 0}
}

func (m *Parameters_Parameter_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameters_Parameter_Value.Unmarshal(m, b)
}
func (m *Parameters_Parameter_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameters_Parameter_Value.Marshal(b, m, deterministic)
}
func (m *Parameters_Parameter_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameters_Parameter_Value.Merge(m, src)
}
func (m *Parameters_Parameter_Value) XXX_Size() int {
	return xxx_messageInfo_Parameters_Parameter_Value.Size(m)
}
func (m *Parameters_Parameter_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameters_Parameter_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Parameters_Parameter_Value proto.InternalMessageInfo

type isParameters_Parameter_Value_Value interface {
	isParameters_Parameter_Value_Value()
}

type Parameters_Parameter_Value_Base64Binary struct {
	Base64Binary *Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type Parameters_Parameter_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type Parameters_Parameter_Value_Code struct {
	Code *Code `protobuf:"bytes,3,opt,name=code,proto3,oneof"`
}

type Parameters_Parameter_Value_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type Parameters_Parameter_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Parameters_Parameter_Value_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,6,opt,name=decimal,proto3,oneof"`
}

type Parameters_Parameter_Value_Id struct {
	Id *Id `protobuf:"bytes,7,opt,name=id,proto3,oneof"`
}

type Parameters_Parameter_Value_Instant struct {
	Instant *Instant `protobuf:"bytes,8,opt,name=instant,proto3,oneof"`
}

type Parameters_Parameter_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,9,opt,name=integer,proto3,oneof"`
}

type Parameters_Parameter_Value_Markdown struct {
	Markdown *Markdown `protobuf:"bytes,10,opt,name=markdown,proto3,oneof"`
}

type Parameters_Parameter_Value_Oid struct {
	Oid *Oid `protobuf:"bytes,11,opt,name=oid,proto3,oneof"`
}

type Parameters_Parameter_Value_PositiveInt struct {
	PositiveInt *PositiveInt `protobuf:"bytes,12,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type Parameters_Parameter_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,13,opt,name=string_value,json=string,proto3,oneof"`
}

type Parameters_Parameter_Value_Time struct {
	Time *Time `protobuf:"bytes,14,opt,name=time,proto3,oneof"`
}

type Parameters_Parameter_Value_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,15,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type Parameters_Parameter_Value_Uri struct {
	Uri *Uri `protobuf:"bytes,16,opt,name=uri,proto3,oneof"`
}

type Parameters_Parameter_Value_Address struct {
	Address *Address `protobuf:"bytes,17,opt,name=address,proto3,oneof"`
}

type Parameters_Parameter_Value_Age struct {
	Age *Age `protobuf:"bytes,18,opt,name=age,proto3,oneof"`
}

type Parameters_Parameter_Value_Annotation struct {
	Annotation *Annotation `protobuf:"bytes,19,opt,name=annotation,proto3,oneof"`
}

type Parameters_Parameter_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,20,opt,name=attachment,proto3,oneof"`
}

type Parameters_Parameter_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,21,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Parameters_Parameter_Value_Coding struct {
	Coding *Coding `protobuf:"bytes,22,opt,name=coding,proto3,oneof"`
}

type Parameters_Parameter_Value_ContactPoint struct {
	ContactPoint *ContactPoint `protobuf:"bytes,23,opt,name=contact_point,json=contactPoint,proto3,oneof"`
}

type Parameters_Parameter_Value_Count struct {
	Count *Count `protobuf:"bytes,24,opt,name=count,proto3,oneof"`
}

type Parameters_Parameter_Value_Distance struct {
	Distance *Distance `protobuf:"bytes,25,opt,name=distance,proto3,oneof"`
}

type Parameters_Parameter_Value_Duration struct {
	Duration *Duration `protobuf:"bytes,26,opt,name=duration,proto3,oneof"`
}

type Parameters_Parameter_Value_HumanName struct {
	HumanName *HumanName `protobuf:"bytes,27,opt,name=human_name,json=humanName,proto3,oneof"`
}

type Parameters_Parameter_Value_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,28,opt,name=identifier,proto3,oneof"`
}

type Parameters_Parameter_Value_Money struct {
	Money *Money `protobuf:"bytes,29,opt,name=money,proto3,oneof"`
}

type Parameters_Parameter_Value_Period struct {
	Period *Period `protobuf:"bytes,30,opt,name=period,proto3,oneof"`
}

type Parameters_Parameter_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,31,opt,name=quantity,proto3,oneof"`
}

type Parameters_Parameter_Value_Range struct {
	Range *Range `protobuf:"bytes,32,opt,name=range,proto3,oneof"`
}

type Parameters_Parameter_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,33,opt,name=ratio,proto3,oneof"`
}

type Parameters_Parameter_Value_Reference struct {
	Reference *Reference `protobuf:"bytes,34,opt,name=reference,proto3,oneof"`
}

type Parameters_Parameter_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,35,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Parameters_Parameter_Value_Signature struct {
	Signature *Signature `protobuf:"bytes,36,opt,name=signature,proto3,oneof"`
}

type Parameters_Parameter_Value_Timing struct {
	Timing *Timing `protobuf:"bytes,37,opt,name=timing,proto3,oneof"`
}

type Parameters_Parameter_Value_Meta struct {
	Meta *Meta `protobuf:"bytes,38,opt,name=meta,proto3,oneof"`
}

func (*Parameters_Parameter_Value_Base64Binary) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Boolean) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Code) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Date) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_DateTime) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Decimal) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Id) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Instant) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Integer) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Markdown) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Oid) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_PositiveInt) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_StringValue) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Time) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_UnsignedInt) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Uri) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Address) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Age) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Annotation) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Attachment) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_CodeableConcept) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Coding) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_ContactPoint) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Count) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Distance) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Duration) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_HumanName) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Identifier) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Money) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Period) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Quantity) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Range) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Ratio) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Reference) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_SampledData) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Signature) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Timing) isParameters_Parameter_Value_Value() {}

func (*Parameters_Parameter_Value_Meta) isParameters_Parameter_Value_Value() {}

func (m *Parameters_Parameter_Value) GetValue() isParameters_Parameter_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetBase64Binary() *Base64Binary {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetCode() *Code {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Code); ok {
		return x.Code
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetDate() *Date {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetDecimal() *Decimal {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetId() *Id {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Id); ok {
		return x.Id
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetInstant() *Instant {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Instant); ok {
		return x.Instant
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetMarkdown() *Markdown {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetOid() *Oid {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Oid); ok {
		return x.Oid
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetPositiveInt() *PositiveInt {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetUri() *Uri {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetAddress() *Address {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Address); ok {
		return x.Address
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetAge() *Age {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Age); ok {
		return x.Age
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetAnnotation() *Annotation {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetCoding() *Coding {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetContactPoint() *ContactPoint {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_ContactPoint); ok {
		return x.ContactPoint
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetCount() *Count {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Count); ok {
		return x.Count
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetDistance() *Distance {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Distance); ok {
		return x.Distance
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetDuration() *Duration {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetHumanName() *HumanName {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_HumanName); ok {
		return x.HumanName
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetIdentifier() *Identifier {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetMoney() *Money {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Money); ok {
		return x.Money
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Period); ok {
		return x.Period
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetReference() *Reference {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Reference); ok {
		return x.Reference
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetSignature() *Signature {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Signature); ok {
		return x.Signature
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetTiming() *Timing {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Timing); ok {
		return x.Timing
	}
	return nil
}

func (m *Parameters_Parameter_Value) GetMeta() *Meta {
	if x, ok := m.GetValue().(*Parameters_Parameter_Value_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Parameters_Parameter_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Parameters_Parameter_Value_OneofMarshaler, _Parameters_Parameter_Value_OneofUnmarshaler, _Parameters_Parameter_Value_OneofSizer, []interface{}{
		(*Parameters_Parameter_Value_Base64Binary)(nil),
		(*Parameters_Parameter_Value_Boolean)(nil),
		(*Parameters_Parameter_Value_Code)(nil),
		(*Parameters_Parameter_Value_Date)(nil),
		(*Parameters_Parameter_Value_DateTime)(nil),
		(*Parameters_Parameter_Value_Decimal)(nil),
		(*Parameters_Parameter_Value_Id)(nil),
		(*Parameters_Parameter_Value_Instant)(nil),
		(*Parameters_Parameter_Value_Integer)(nil),
		(*Parameters_Parameter_Value_Markdown)(nil),
		(*Parameters_Parameter_Value_Oid)(nil),
		(*Parameters_Parameter_Value_PositiveInt)(nil),
		(*Parameters_Parameter_Value_StringValue)(nil),
		(*Parameters_Parameter_Value_Time)(nil),
		(*Parameters_Parameter_Value_UnsignedInt)(nil),
		(*Parameters_Parameter_Value_Uri)(nil),
		(*Parameters_Parameter_Value_Address)(nil),
		(*Parameters_Parameter_Value_Age)(nil),
		(*Parameters_Parameter_Value_Annotation)(nil),
		(*Parameters_Parameter_Value_Attachment)(nil),
		(*Parameters_Parameter_Value_CodeableConcept)(nil),
		(*Parameters_Parameter_Value_Coding)(nil),
		(*Parameters_Parameter_Value_ContactPoint)(nil),
		(*Parameters_Parameter_Value_Count)(nil),
		(*Parameters_Parameter_Value_Distance)(nil),
		(*Parameters_Parameter_Value_Duration)(nil),
		(*Parameters_Parameter_Value_HumanName)(nil),
		(*Parameters_Parameter_Value_Identifier)(nil),
		(*Parameters_Parameter_Value_Money)(nil),
		(*Parameters_Parameter_Value_Period)(nil),
		(*Parameters_Parameter_Value_Quantity)(nil),
		(*Parameters_Parameter_Value_Range)(nil),
		(*Parameters_Parameter_Value_Ratio)(nil),
		(*Parameters_Parameter_Value_Reference)(nil),
		(*Parameters_Parameter_Value_SampledData)(nil),
		(*Parameters_Parameter_Value_Signature)(nil),
		(*Parameters_Parameter_Value_Timing)(nil),
		(*Parameters_Parameter_Value_Meta)(nil),
	}
}

func _Parameters_Parameter_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Parameters_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *Parameters_Parameter_Value_Base64Binary:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Base64Binary); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Boolean:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Code:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_DateTime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Decimal:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Id:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Id); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Instant:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instant); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Integer:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Markdown:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Markdown); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Oid:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oid); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_PositiveInt:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PositiveInt); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_StringValue:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Time:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_UnsignedInt:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Uri:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Address:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Age:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Annotation:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Annotation); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Attachment:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_CodeableConcept:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Coding:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_ContactPoint:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContactPoint); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Count:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Count); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Distance:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Distance); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Duration:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_HumanName:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HumanName); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Identifier:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Money:
		b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Period:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Quantity:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Range:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Ratio:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Reference:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_SampledData:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Signature:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Signature); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Timing:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case *Parameters_Parameter_Value_Meta:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Meta); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Parameters_Parameter_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Parameters_Parameter_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Parameters_Parameter_Value)
	switch tag {
	case 1: // value.base64_binary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Base64Binary)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Base64Binary{msg}
		return true, err
	case 2: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Boolean{msg}
		return true, err
	case 3: // value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Code{msg}
		return true, err
	case 4: // value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Date{msg}
		return true, err
	case 5: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_DateTime{msg}
		return true, err
	case 6: // value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Decimal{msg}
		return true, err
	case 7: // value.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Id)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Id{msg}
		return true, err
	case 8: // value.instant
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Instant)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Instant{msg}
		return true, err
	case 9: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Integer{msg}
		return true, err
	case 10: // value.markdown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Markdown)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Markdown{msg}
		return true, err
	case 11: // value.oid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oid)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Oid{msg}
		return true, err
	case 12: // value.positive_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PositiveInt)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_PositiveInt{msg}
		return true, err
	case 13: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_StringValue{msg}
		return true, err
	case 14: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Time{msg}
		return true, err
	case 15: // value.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_UnsignedInt{msg}
		return true, err
	case 16: // value.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Uri{msg}
		return true, err
	case 17: // value.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Address{msg}
		return true, err
	case 18: // value.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Age{msg}
		return true, err
	case 19: // value.annotation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Annotation)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Annotation{msg}
		return true, err
	case 20: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Attachment{msg}
		return true, err
	case 21: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_CodeableConcept{msg}
		return true, err
	case 22: // value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Coding{msg}
		return true, err
	case 23: // value.contact_point
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContactPoint)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_ContactPoint{msg}
		return true, err
	case 24: // value.count
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Count)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Count{msg}
		return true, err
	case 25: // value.distance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Distance)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Distance{msg}
		return true, err
	case 26: // value.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Duration{msg}
		return true, err
	case 27: // value.human_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HumanName)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_HumanName{msg}
		return true, err
	case 28: // value.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Identifier{msg}
		return true, err
	case 29: // value.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Money{msg}
		return true, err
	case 30: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Period{msg}
		return true, err
	case 31: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Quantity{msg}
		return true, err
	case 32: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Range{msg}
		return true, err
	case 33: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Ratio{msg}
		return true, err
	case 34: // value.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Reference{msg}
		return true, err
	case 35: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_SampledData{msg}
		return true, err
	case 36: // value.signature
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Signature)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Signature{msg}
		return true, err
	case 37: // value.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Timing{msg}
		return true, err
	case 38: // value.meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Meta)
		err := b.DecodeMessage(msg)
		m.Value = &Parameters_Parameter_Value_Meta{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Parameters_Parameter_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Parameters_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *Parameters_Parameter_Value_Base64Binary:
		s := proto.Size(x.Base64Binary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Id:
		s := proto.Size(x.Id)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Instant:
		s := proto.Size(x.Instant)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Markdown:
		s := proto.Size(x.Markdown)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Oid:
		s := proto.Size(x.Oid)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_PositiveInt:
		s := proto.Size(x.PositiveInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Uri:
		s := proto.Size(x.Uri)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Address:
		s := proto.Size(x.Address)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Age:
		s := proto.Size(x.Age)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Annotation:
		s := proto.Size(x.Annotation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Coding:
		s := proto.Size(x.Coding)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_ContactPoint:
		s := proto.Size(x.ContactPoint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Count:
		s := proto.Size(x.Count)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Distance:
		s := proto.Size(x.Distance)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Duration:
		s := proto.Size(x.Duration)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_HumanName:
		s := proto.Size(x.HumanName)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Identifier:
		s := proto.Size(x.Identifier)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Money:
		s := proto.Size(x.Money)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Period:
		s := proto.Size(x.Period)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Range:
		s := proto.Size(x.Range)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Reference:
		s := proto.Size(x.Reference)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Signature:
		s := proto.Size(x.Signature)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Timing:
		s := proto.Size(x.Timing)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameters_Parameter_Value_Meta:
		s := proto.Size(x.Meta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Patient, last updated
// 2017-04-19T07:44:43.294+10:00. Information about an individual or animal
// receiving health care services. See
// http://hl7.org/fhir/StructureDefinition/Patient
type Patient struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// An identifier for this patient
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this patient's record is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// A name associated with the patient
	Name []*HumanName `protobuf:"bytes,11,rep,name=name,proto3" json:"name,omitempty"`
	// A contact detail for the individual
	Telecom []*ContactPoint `protobuf:"bytes,12,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode `protobuf:"bytes,13,opt,name=gender,proto3" json:"gender,omitempty"`
	// The date of birth for the individual
	BirthDate *Date             `protobuf:"bytes,14,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	Deceased  *Patient_Deceased `protobuf:"bytes,15,opt,name=deceased,proto3" json:"deceased,omitempty"`
	// Addresses for the individual
	Address []*Address `protobuf:"bytes,16,rep,name=address,proto3" json:"address,omitempty"`
	// Marital (civil) status of a patient
	MaritalStatus *CodeableConcept       `protobuf:"bytes,17,opt,name=marital_status,json=maritalStatus,proto3" json:"marital_status,omitempty"`
	MultipleBirth *Patient_MultipleBirth `protobuf:"bytes,18,opt,name=multiple_birth,json=multipleBirth,proto3" json:"multiple_birth,omitempty"`
	// Image of the patient
	Photo         []*Attachment            `protobuf:"bytes,19,rep,name=photo,proto3" json:"photo,omitempty"`
	Contact       []*Patient_Contact       `protobuf:"bytes,20,rep,name=contact,proto3" json:"contact,omitempty"`
	Animal        *Patient_Animal          `protobuf:"bytes,21,opt,name=animal,proto3" json:"animal,omitempty"`
	Communication []*Patient_Communication `protobuf:"bytes,22,rep,name=communication,proto3" json:"communication,omitempty"`
	// Patient's nominated primary care provider
	GeneralPractitioner []*Reference `protobuf:"bytes,23,rep,name=general_practitioner,json=generalPractitioner,proto3" json:"general_practitioner,omitempty"`
	// Organization that is the custodian of the patient record
	ManagingOrganization *Reference      `protobuf:"bytes,24,opt,name=managing_organization,json=managingOrganization,proto3" json:"managing_organization,omitempty"`
	Link                 []*Patient_Link `protobuf:"bytes,25,rep,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Patient) Reset()         { *m = Patient{} }
func (m *Patient) String() string { return proto.CompactTextString(m) }
func (*Patient) ProtoMessage()    {}
func (*Patient) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{80}
}

func (m *Patient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient.Unmarshal(m, b)
}
func (m *Patient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient.Marshal(b, m, deterministic)
}
func (m *Patient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient.Merge(m, src)
}
func (m *Patient) XXX_Size() int {
	return xxx_messageInfo_Patient.Size(m)
}
func (m *Patient) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient.DiscardUnknown(m)
}

var xxx_messageInfo_Patient proto.InternalMessageInfo

func (m *Patient) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Patient) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Patient) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Patient) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Patient) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Patient) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Patient) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Patient) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Patient) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Patient) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Patient) GetName() []*HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Patient) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *Patient) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *Patient) GetBirthDate() *Date {
	if m != nil {
		return m.BirthDate
	}
	return nil
}

func (m *Patient) GetDeceased() *Patient_Deceased {
	if m != nil {
		return m.Deceased
	}
	return nil
}

func (m *Patient) GetAddress() []*Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Patient) GetMaritalStatus() *CodeableConcept {
	if m != nil {
		return m.MaritalStatus
	}
	return nil
}

func (m *Patient) GetMultipleBirth() *Patient_MultipleBirth {
	if m != nil {
		return m.MultipleBirth
	}
	return nil
}

func (m *Patient) GetPhoto() []*Attachment {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *Patient) GetContact() []*Patient_Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Patient) GetAnimal() *Patient_Animal {
	if m != nil {
		return m.Animal
	}
	return nil
}

func (m *Patient) GetCommunication() []*Patient_Communication {
	if m != nil {
		return m.Communication
	}
	return nil
}

func (m *Patient) GetGeneralPractitioner() []*Reference {
	if m != nil {
		return m.GeneralPractitioner
	}
	return nil
}

func (m *Patient) GetManagingOrganization() *Reference {
	if m != nil {
		return m.ManagingOrganization
	}
	return nil
}

func (m *Patient) GetLink() []*Patient_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

// Indicates if the individual is deceased or not
type Patient_Deceased struct {
	// Types that are valid to be assigned to Deceased:
	//	*Patient_Deceased_Boolean
	//	*Patient_Deceased_DateTime
	Deceased             isPatient_Deceased_Deceased `protobuf_oneof:"deceased"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Patient_Deceased) Reset()         { *m = Patient_Deceased{} }
func (m *Patient_Deceased) String() string { return proto.CompactTextString(m) }
func (*Patient_Deceased) ProtoMessage()    {}
func (*Patient_Deceased) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{80, 0}
}

func (m *Patient_Deceased) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient_Deceased.Unmarshal(m, b)
}
func (m *Patient_Deceased) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient_Deceased.Marshal(b, m, deterministic)
}
func (m *Patient_Deceased) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient_Deceased.Merge(m, src)
}
func (m *Patient_Deceased) XXX_Size() int {
	return xxx_messageInfo_Patient_Deceased.Size(m)
}
func (m *Patient_Deceased) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient_Deceased.DiscardUnknown(m)
}

var xxx_messageInfo_Patient_Deceased proto.InternalMessageInfo

type isPatient_Deceased_Deceased interface {
	isPatient_Deceased_Deceased()
}

type Patient_Deceased_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type Patient_Deceased_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3,oneof"`
}

func (*Patient_Deceased_Boolean) isPatient_Deceased_Deceased() {}

func (*Patient_Deceased_DateTime) isPatient_Deceased_Deceased() {}

func (m *Patient_Deceased) GetDeceased() isPatient_Deceased_Deceased {
	if m != nil {
		return m.Deceased
	}
	return nil
}

func (m *Patient_Deceased) GetBoolean() *Boolean {
	if x, ok := m.GetDeceased().(*Patient_Deceased_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Patient_Deceased) GetDateTime() *DateTime {
	if x, ok := m.GetDeceased().(*Patient_Deceased_DateTime); ok {
		return x.DateTime
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Patient_Deceased) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Patient_Deceased_OneofMarshaler, _Patient_Deceased_OneofUnmarshaler, _Patient_Deceased_OneofSizer, []interface{}{
		(*Patient_Deceased_Boolean)(nil),
		(*Patient_Deceased_DateTime)(nil),
	}
}

func _Patient_Deceased_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Patient_Deceased)
	// deceased
	switch x := m.Deceased.(type) {
	case *Patient_Deceased_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Patient_Deceased_DateTime:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Patient_Deceased.Deceased has unexpected type %T", x)
	}
	return nil
}

func _Patient_Deceased_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Patient_Deceased)
	switch tag {
	case 1: // deceased.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Deceased = &Patient_Deceased_Boolean{msg}
		return true, err
	case 2: // deceased.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Deceased = &Patient_Deceased_DateTime{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Patient_Deceased_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Patient_Deceased)
	// deceased
	switch x := m.Deceased.(type) {
	case *Patient_Deceased_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Patient_Deceased_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Whether patient is part of a multiple birth
type Patient_MultipleBirth struct {
	// Types that are valid to be assigned to MultipleBirth:
	//	*Patient_MultipleBirth_Boolean
	//	*Patient_MultipleBirth_Integer
	MultipleBirth        isPatient_MultipleBirth_MultipleBirth `protobuf_oneof:"multiple_birth"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *Patient_MultipleBirth) Reset()         { *m = Patient_MultipleBirth{} }
func (m *Patient_MultipleBirth) String() string { return proto.CompactTextString(m) }
func (*Patient_MultipleBirth) ProtoMessage()    {}
func (*Patient_MultipleBirth) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{80, 1}
}

func (m *Patient_MultipleBirth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient_MultipleBirth.Unmarshal(m, b)
}
func (m *Patient_MultipleBirth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient_MultipleBirth.Marshal(b, m, deterministic)
}
func (m *Patient_MultipleBirth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient_MultipleBirth.Merge(m, src)
}
func (m *Patient_MultipleBirth) XXX_Size() int {
	return xxx_messageInfo_Patient_MultipleBirth.Size(m)
}
func (m *Patient_MultipleBirth) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient_MultipleBirth.DiscardUnknown(m)
}

var xxx_messageInfo_Patient_MultipleBirth proto.InternalMessageInfo

type isPatient_MultipleBirth_MultipleBirth interface {
	isPatient_MultipleBirth_MultipleBirth()
}

type Patient_MultipleBirth_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type Patient_MultipleBirth_Integer struct {
	Integer *Integer `protobuf:"bytes,2,opt,name=integer,proto3,oneof"`
}

func (*Patient_MultipleBirth_Boolean) isPatient_MultipleBirth_MultipleBirth() {}

func (*Patient_MultipleBirth_Integer) isPatient_MultipleBirth_MultipleBirth() {}

func (m *Patient_MultipleBirth) GetMultipleBirth() isPatient_MultipleBirth_MultipleBirth {
	if m != nil {
		return m.MultipleBirth
	}
	return nil
}

func (m *Patient_MultipleBirth) GetBoolean() *Boolean {
	if x, ok := m.GetMultipleBirth().(*Patient_MultipleBirth_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Patient_MultipleBirth) GetInteger() *Integer {
	if x, ok := m.GetMultipleBirth().(*Patient_MultipleBirth_Integer); ok {
		return x.Integer
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Patient_MultipleBirth) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Patient_MultipleBirth_OneofMarshaler, _Patient_MultipleBirth_OneofUnmarshaler, _Patient_MultipleBirth_OneofSizer, []interface{}{
		(*Patient_MultipleBirth_Boolean)(nil),
		(*Patient_MultipleBirth_Integer)(nil),
	}
}

func _Patient_MultipleBirth_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Patient_MultipleBirth)
	// multiple_birth
	switch x := m.MultipleBirth.(type) {
	case *Patient_MultipleBirth_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Patient_MultipleBirth_Integer:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Patient_MultipleBirth.MultipleBirth has unexpected type %T", x)
	}
	return nil
}

func _Patient_MultipleBirth_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Patient_MultipleBirth)
	switch tag {
	case 1: // multiple_birth.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.MultipleBirth = &Patient_MultipleBirth_Boolean{msg}
		return true, err
	case 2: // multiple_birth.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.MultipleBirth = &Patient_MultipleBirth_Integer{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Patient_MultipleBirth_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Patient_MultipleBirth)
	// multiple_birth
	switch x := m.MultipleBirth.(type) {
	case *Patient_MultipleBirth_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Patient_MultipleBirth_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A contact party (e.g. guardian, partner, friend) for the patient
type Patient_Contact struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The kind of relationship
	Relationship []*CodeableConcept `protobuf:"bytes,4,rep,name=relationship,proto3" json:"relationship,omitempty"`
	// A name associated with the contact person
	Name *HumanName `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// A contact detail for the person
	Telecom []*ContactPoint `protobuf:"bytes,6,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// Address for the contact person
	Address *Address `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	// Organization that is associated with the contact
	Organization *Reference `protobuf:"bytes,9,opt,name=organization,proto3" json:"organization,omitempty"`
	// The period during which this contact person or organization is valid to
	// be contacted relating to this patient
	Period               *Period  `protobuf:"bytes,10,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Patient_Contact) Reset()         { *m = Patient_Contact{} }
func (m *Patient_Contact) String() string { return proto.CompactTextString(m) }
func (*Patient_Contact) ProtoMessage()    {}
func (*Patient_Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{80, 2}
}

func (m *Patient_Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient_Contact.Unmarshal(m, b)
}
func (m *Patient_Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient_Contact.Marshal(b, m, deterministic)
}
func (m *Patient_Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient_Contact.Merge(m, src)
}
func (m *Patient_Contact) XXX_Size() int {
	return xxx_messageInfo_Patient_Contact.Size(m)
}
func (m *Patient_Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Patient_Contact proto.InternalMessageInfo

func (m *Patient_Contact) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Patient_Contact) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Patient_Contact) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Patient_Contact) GetRelationship() []*CodeableConcept {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *Patient_Contact) GetName() *HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Patient_Contact) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *Patient_Contact) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Patient_Contact) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *Patient_Contact) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *Patient_Contact) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// This patient is known to be an animal (non-human)
type Patient_Animal struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// E.g. Dog, Cow
	Species *CodeableConcept `protobuf:"bytes,4,opt,name=species,proto3" json:"species,omitempty"`
	// E.g. Poodle, Angus
	Breed *CodeableConcept `protobuf:"bytes,5,opt,name=breed,proto3" json:"breed,omitempty"`
	// E.g. Neutered, Intact
	GenderStatus         *CodeableConcept `protobuf:"bytes,6,opt,name=gender_status,json=genderStatus,proto3" json:"gender_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Patient_Animal) Reset()         { *m = Patient_Animal{} }
func (m *Patient_Animal) String() string { return proto.CompactTextString(m) }
func (*Patient_Animal) ProtoMessage()    {}
func (*Patient_Animal) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{80, 3}
}

func (m *Patient_Animal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient_Animal.Unmarshal(m, b)
}
func (m *Patient_Animal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient_Animal.Marshal(b, m, deterministic)
}
func (m *Patient_Animal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient_Animal.Merge(m, src)
}
func (m *Patient_Animal) XXX_Size() int {
	return xxx_messageInfo_Patient_Animal.Size(m)
}
func (m *Patient_Animal) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient_Animal.DiscardUnknown(m)
}

var xxx_messageInfo_Patient_Animal proto.InternalMessageInfo

func (m *Patient_Animal) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Patient_Animal) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Patient_Animal) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Patient_Animal) GetSpecies() *CodeableConcept {
	if m != nil {
		return m.Species
	}
	return nil
}

func (m *Patient_Animal) GetBreed() *CodeableConcept {
	if m != nil {
		return m.Breed
	}
	return nil
}

func (m *Patient_Animal) GetGenderStatus() *CodeableConcept {
	if m != nil {
		return m.GenderStatus
	}
	return nil
}

// A list of Languages which may be used to communicate with the patient about
// his or her health
type Patient_Communication struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The language which can be used to communicate with the patient about his
	// or her health
	Language *CodeableConcept `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Language preference indicator
	Preferred            *Boolean `protobuf:"bytes,5,opt,name=preferred,proto3" json:"preferred,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Patient_Communication) Reset()         { *m = Patient_Communication{} }
func (m *Patient_Communication) String() string { return proto.CompactTextString(m) }
func (*Patient_Communication) ProtoMessage()    {}
func (*Patient_Communication) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{80, 4}
}

func (m *Patient_Communication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient_Communication.Unmarshal(m, b)
}
func (m *Patient_Communication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient_Communication.Marshal(b, m, deterministic)
}
func (m *Patient_Communication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient_Communication.Merge(m, src)
}
func (m *Patient_Communication) XXX_Size() int {
	return xxx_messageInfo_Patient_Communication.Size(m)
}
func (m *Patient_Communication) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient_Communication.DiscardUnknown(m)
}

var xxx_messageInfo_Patient_Communication proto.InternalMessageInfo

func (m *Patient_Communication) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Patient_Communication) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Patient_Communication) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Patient_Communication) GetLanguage() *CodeableConcept {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Patient_Communication) GetPreferred() *Boolean {
	if m != nil {
		return m.Preferred
	}
	return nil
}

// Link to another patient resource that concerns the same actual person
type Patient_Link struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The other patient or related person resource that the link refers to
	Other *Reference `protobuf:"bytes,4,opt,name=other,proto3" json:"other,omitempty"`
	// replaced-by | replaces | refer | seealso - type of link
	Type                 *LinkTypeCode `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Patient_Link) Reset()         { *m = Patient_Link{} }
func (m *Patient_Link) String() string { return proto.CompactTextString(m) }
func (*Patient_Link) ProtoMessage()    {}
func (*Patient_Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{80, 5}
}

func (m *Patient_Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient_Link.Unmarshal(m, b)
}
func (m *Patient_Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient_Link.Marshal(b, m, deterministic)
}
func (m *Patient_Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient_Link.Merge(m, src)
}
func (m *Patient_Link) XXX_Size() int {
	return xxx_messageInfo_Patient_Link.Size(m)
}
func (m *Patient_Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Patient_Link proto.InternalMessageInfo

func (m *Patient_Link) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Patient_Link) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Patient_Link) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Patient_Link) GetOther() *Reference {
	if m != nil {
		return m.Other
	}
	return nil
}

func (m *Patient_Link) GetType() *LinkTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

// Auto-generated from StructureDefinition for PaymentNotice, last updated
// 2017-04-19T07:44:43.294+10:00. PaymentNotice request. See
// http://hl7.org/fhir/StructureDefinition/PaymentNotice
type PaymentNotice struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Request reference
	Request *Reference `protobuf:"bytes,11,opt,name=request,proto3" json:"request,omitempty"`
	// Response reference
	Response *Reference `protobuf:"bytes,12,opt,name=response,proto3" json:"response,omitempty"`
	// Payment or clearing date
	StatusDate *Date `protobuf:"bytes,13,opt,name=status_date,json=statusDate,proto3" json:"status_date,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,14,opt,name=created,proto3" json:"created,omitempty"`
	// Insurer or Regulatory body
	Target *Reference `protobuf:"bytes,15,opt,name=target,proto3" json:"target,omitempty"`
	// Responsible practitioner
	Provider *Reference `protobuf:"bytes,16,opt,name=provider,proto3" json:"provider,omitempty"`
	// Responsible organization
	Organization *Reference `protobuf:"bytes,17,opt,name=organization,proto3" json:"organization,omitempty"`
	// Whether payment has been sent or cleared
	PaymentStatus        *CodeableConcept `protobuf:"bytes,18,opt,name=payment_status,json=paymentStatus,proto3" json:"payment_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PaymentNotice) Reset()         { *m = PaymentNotice{} }
func (m *PaymentNotice) String() string { return proto.CompactTextString(m) }
func (*PaymentNotice) ProtoMessage()    {}
func (*PaymentNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{81}
}

func (m *PaymentNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentNotice.Unmarshal(m, b)
}
func (m *PaymentNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentNotice.Marshal(b, m, deterministic)
}
func (m *PaymentNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentNotice.Merge(m, src)
}
func (m *PaymentNotice) XXX_Size() int {
	return xxx_messageInfo_PaymentNotice.Size(m)
}
func (m *PaymentNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentNotice.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentNotice proto.InternalMessageInfo

func (m *PaymentNotice) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PaymentNotice) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *PaymentNotice) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *PaymentNotice) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *PaymentNotice) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *PaymentNotice) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *PaymentNotice) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PaymentNotice) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PaymentNotice) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *PaymentNotice) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PaymentNotice) GetRequest() *Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *PaymentNotice) GetResponse() *Reference {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *PaymentNotice) GetStatusDate() *Date {
	if m != nil {
		return m.StatusDate
	}
	return nil
}

func (m *PaymentNotice) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *PaymentNotice) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *PaymentNotice) GetProvider() *Reference {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *PaymentNotice) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *PaymentNotice) GetPaymentStatus() *CodeableConcept {
	if m != nil {
		return m.PaymentStatus
	}
	return nil
}

// Auto-generated from StructureDefinition for PaymentReconciliation, last
// updated 2017-04-19T07:44:43.294+10:00. PaymentReconciliation resource. See
// http://hl7.org/fhir/StructureDefinition/PaymentReconciliation
type PaymentReconciliation struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Period covered
	Period *Period `protobuf:"bytes,11,opt,name=period,proto3" json:"period,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	// Insurer
	Organization *Reference `protobuf:"bytes,13,opt,name=organization,proto3" json:"organization,omitempty"`
	// Claim reference
	Request *Reference `protobuf:"bytes,14,opt,name=request,proto3" json:"request,omitempty"`
	// complete | error | partial
	Outcome *CodeableConcept `protobuf:"bytes,15,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Disposition Message
	Disposition *String `protobuf:"bytes,16,opt,name=disposition,proto3" json:"disposition,omitempty"`
	// Responsible practitioner
	RequestProvider *Reference `protobuf:"bytes,17,opt,name=request_provider,json=requestProvider,proto3" json:"request_provider,omitempty"`
	// Responsible organization
	RequestOrganization *Reference                       `protobuf:"bytes,18,opt,name=request_organization,json=requestOrganization,proto3" json:"request_organization,omitempty"`
	Detail              []*PaymentReconciliation_Details `protobuf:"bytes,19,rep,name=detail,proto3" json:"detail,omitempty"`
	// Printed Form Identifier
	Form *CodeableConcept `protobuf:"bytes,20,opt,name=form,proto3" json:"form,omitempty"`
	// Total amount of Payment
	Total                *Money                         `protobuf:"bytes,21,opt,name=total,proto3" json:"total,omitempty"`
	ProcessNote          []*PaymentReconciliation_Notes `protobuf:"bytes,22,rep,name=process_note,json=processNote,proto3" json:"process_note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *PaymentReconciliation) Reset()         { *m = PaymentReconciliation{} }
func (m *PaymentReconciliation) String() string { return proto.CompactTextString(m) }
func (*PaymentReconciliation) ProtoMessage()    {}
func (*PaymentReconciliation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{82}
}

func (m *PaymentReconciliation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentReconciliation.Unmarshal(m, b)
}
func (m *PaymentReconciliation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentReconciliation.Marshal(b, m, deterministic)
}
func (m *PaymentReconciliation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentReconciliation.Merge(m, src)
}
func (m *PaymentReconciliation) XXX_Size() int {
	return xxx_messageInfo_PaymentReconciliation.Size(m)
}
func (m *PaymentReconciliation) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentReconciliation.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentReconciliation proto.InternalMessageInfo

func (m *PaymentReconciliation) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PaymentReconciliation) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *PaymentReconciliation) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *PaymentReconciliation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *PaymentReconciliation) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *PaymentReconciliation) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *PaymentReconciliation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PaymentReconciliation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PaymentReconciliation) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *PaymentReconciliation) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PaymentReconciliation) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *PaymentReconciliation) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *PaymentReconciliation) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *PaymentReconciliation) GetRequest() *Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *PaymentReconciliation) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *PaymentReconciliation) GetDisposition() *String {
	if m != nil {
		return m.Disposition
	}
	return nil
}

func (m *PaymentReconciliation) GetRequestProvider() *Reference {
	if m != nil {
		return m.RequestProvider
	}
	return nil
}

func (m *PaymentReconciliation) GetRequestOrganization() *Reference {
	if m != nil {
		return m.RequestOrganization
	}
	return nil
}

func (m *PaymentReconciliation) GetDetail() []*PaymentReconciliation_Details {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *PaymentReconciliation) GetForm() *CodeableConcept {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *PaymentReconciliation) GetTotal() *Money {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *PaymentReconciliation) GetProcessNote() []*PaymentReconciliation_Notes {
	if m != nil {
		return m.ProcessNote
	}
	return nil
}

// List of settlements
type PaymentReconciliation_Details struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type code
	Type *CodeableConcept `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Claim
	Request *Reference `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
	// Claim Response
	Response *Reference `protobuf:"bytes,6,opt,name=response,proto3" json:"response,omitempty"`
	// Organization which submitted the claim
	Submitter *Reference `protobuf:"bytes,7,opt,name=submitter,proto3" json:"submitter,omitempty"`
	// Organization which is receiving the payment
	Payee *Reference `protobuf:"bytes,8,opt,name=payee,proto3" json:"payee,omitempty"`
	// Invoice date
	Date *Date `protobuf:"bytes,9,opt,name=date,proto3" json:"date,omitempty"`
	// Amount being paid
	Amount               *Money   `protobuf:"bytes,10,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentReconciliation_Details) Reset()         { *m = PaymentReconciliation_Details{} }
func (m *PaymentReconciliation_Details) String() string { return proto.CompactTextString(m) }
func (*PaymentReconciliation_Details) ProtoMessage()    {}
func (*PaymentReconciliation_Details) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{82, 0}
}

func (m *PaymentReconciliation_Details) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentReconciliation_Details.Unmarshal(m, b)
}
func (m *PaymentReconciliation_Details) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentReconciliation_Details.Marshal(b, m, deterministic)
}
func (m *PaymentReconciliation_Details) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentReconciliation_Details.Merge(m, src)
}
func (m *PaymentReconciliation_Details) XXX_Size() int {
	return xxx_messageInfo_PaymentReconciliation_Details.Size(m)
}
func (m *PaymentReconciliation_Details) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentReconciliation_Details.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentReconciliation_Details proto.InternalMessageInfo

func (m *PaymentReconciliation_Details) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PaymentReconciliation_Details) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PaymentReconciliation_Details) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PaymentReconciliation_Details) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PaymentReconciliation_Details) GetRequest() *Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *PaymentReconciliation_Details) GetResponse() *Reference {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *PaymentReconciliation_Details) GetSubmitter() *Reference {
	if m != nil {
		return m.Submitter
	}
	return nil
}

func (m *PaymentReconciliation_Details) GetPayee() *Reference {
	if m != nil {
		return m.Payee
	}
	return nil
}

func (m *PaymentReconciliation_Details) GetDate() *Date {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *PaymentReconciliation_Details) GetAmount() *Money {
	if m != nil {
		return m.Amount
	}
	return nil
}

// Processing comments
type PaymentReconciliation_Notes struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// display | print | printoper
	Type *CodeableConcept `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Comment on the processing
	Text                 *String  `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentReconciliation_Notes) Reset()         { *m = PaymentReconciliation_Notes{} }
func (m *PaymentReconciliation_Notes) String() string { return proto.CompactTextString(m) }
func (*PaymentReconciliation_Notes) ProtoMessage()    {}
func (*PaymentReconciliation_Notes) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{82, 1}
}

func (m *PaymentReconciliation_Notes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentReconciliation_Notes.Unmarshal(m, b)
}
func (m *PaymentReconciliation_Notes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentReconciliation_Notes.Marshal(b, m, deterministic)
}
func (m *PaymentReconciliation_Notes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentReconciliation_Notes.Merge(m, src)
}
func (m *PaymentReconciliation_Notes) XXX_Size() int {
	return xxx_messageInfo_PaymentReconciliation_Notes.Size(m)
}
func (m *PaymentReconciliation_Notes) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentReconciliation_Notes.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentReconciliation_Notes proto.InternalMessageInfo

func (m *PaymentReconciliation_Notes) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PaymentReconciliation_Notes) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PaymentReconciliation_Notes) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PaymentReconciliation_Notes) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PaymentReconciliation_Notes) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Auto-generated from StructureDefinition for Person, last updated
// 2017-04-19T07:44:43.294+10:00. A generic person record. See
// http://hl7.org/fhir/StructureDefinition/Person
type Person struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A human identifier for this person
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// A name associated with the person
	Name []*HumanName `protobuf:"bytes,10,rep,name=name,proto3" json:"name,omitempty"`
	// A contact detail for the person
	Telecom []*ContactPoint `protobuf:"bytes,11,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode `protobuf:"bytes,12,opt,name=gender,proto3" json:"gender,omitempty"`
	// The date on which the person was born
	BirthDate *Date `protobuf:"bytes,13,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	// One or more addresses for the person
	Address []*Address `protobuf:"bytes,14,rep,name=address,proto3" json:"address,omitempty"`
	// Image of the person
	Photo *Attachment `protobuf:"bytes,15,opt,name=photo,proto3" json:"photo,omitempty"`
	// The organization that is the custodian of the person record
	ManagingOrganization *Reference `protobuf:"bytes,16,opt,name=managing_organization,json=managingOrganization,proto3" json:"managing_organization,omitempty"`
	// This person's record is in active use
	Active               *Boolean       `protobuf:"bytes,17,opt,name=active,proto3" json:"active,omitempty"`
	Link                 []*Person_Link `protobuf:"bytes,18,rep,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{83}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Person) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Person) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Person) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Person) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Person) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Person) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Person) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Person) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Person) GetName() []*HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Person) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *Person) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *Person) GetBirthDate() *Date {
	if m != nil {
		return m.BirthDate
	}
	return nil
}

func (m *Person) GetAddress() []*Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Person) GetPhoto() *Attachment {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *Person) GetManagingOrganization() *Reference {
	if m != nil {
		return m.ManagingOrganization
	}
	return nil
}

func (m *Person) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Person) GetLink() []*Person_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

// Link to a resource that concerns the same actual person
type Person_Link struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The resource to which this actual person is associated
	Target *Reference `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	// level1 | level2 | level3 | level4
	Assurance            *IdentityAssuranceLevelCode `protobuf:"bytes,5,opt,name=assurance,proto3" json:"assurance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Person_Link) Reset()         { *m = Person_Link{} }
func (m *Person_Link) String() string { return proto.CompactTextString(m) }
func (*Person_Link) ProtoMessage()    {}
func (*Person_Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{83, 0}
}

func (m *Person_Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person_Link.Unmarshal(m, b)
}
func (m *Person_Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person_Link.Marshal(b, m, deterministic)
}
func (m *Person_Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person_Link.Merge(m, src)
}
func (m *Person_Link) XXX_Size() int {
	return xxx_messageInfo_Person_Link.Size(m)
}
func (m *Person_Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Person_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Person_Link proto.InternalMessageInfo

func (m *Person_Link) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Person_Link) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Person_Link) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Person_Link) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Person_Link) GetAssurance() *IdentityAssuranceLevelCode {
	if m != nil {
		return m.Assurance
	}
	return nil
}

// Auto-generated from StructureDefinition for PlanDefinition, last updated
// 2017-04-19T07:44:43.294+10:00. The definition of a plan for a series of
// actions, independent of any specific patient or context. See
// http://hl7.org/fhir/StructureDefinition/PlanDefinition
type PlanDefinition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this plan definition (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the plan definition
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the plan definition
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this plan definition (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this plan definition (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// order-set | protocol | eca-rule
	Type *CodeableConcept `protobuf:"bytes,14,opt,name=type,proto3" json:"type,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,16,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,17,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,18,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Natural language description of the plan definition
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Why this plan definition is defined
	Purpose *Markdown `protobuf:"bytes,20,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Describes the clinical usage of the asset
	Usage *String `protobuf:"bytes,21,opt,name=usage,proto3" json:"usage,omitempty"`
	// When the plan definition was approved by publisher
	ApprovalDate *Date `protobuf:"bytes,22,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	// When the plan definition was last reviewed
	LastReviewDate *Date `protobuf:"bytes,23,opt,name=last_review_date,json=lastReviewDate,proto3" json:"last_review_date,omitempty"`
	// When the plan definition is expected to be used
	EffectivePeriod *Period `protobuf:"bytes,24,opt,name=effective_period,json=effectivePeriod,proto3" json:"effective_period,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,25,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for plan definition (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,26,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// E.g. Education, Treatment, Assessment, etc
	Topic []*CodeableConcept `protobuf:"bytes,27,rep,name=topic,proto3" json:"topic,omitempty"`
	// A content contributor
	Contributor []*Contributor `protobuf:"bytes,28,rep,name=contributor,proto3" json:"contributor,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,29,rep,name=contact,proto3" json:"contact,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,30,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Related artifacts for the asset
	RelatedArtifact []*RelatedArtifact `protobuf:"bytes,31,rep,name=related_artifact,json=relatedArtifact,proto3" json:"related_artifact,omitempty"`
	// Logic used by the plan definition
	Library              []*Reference             `protobuf:"bytes,32,rep,name=library,proto3" json:"library,omitempty"`
	Goal                 []*PlanDefinition_Goal   `protobuf:"bytes,33,rep,name=goal,proto3" json:"goal,omitempty"`
	Action               []*PlanDefinition_Action `protobuf:"bytes,34,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PlanDefinition) Reset()         { *m = PlanDefinition{} }
func (m *PlanDefinition) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition) ProtoMessage()    {}
func (*PlanDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84}
}

func (m *PlanDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition.Unmarshal(m, b)
}
func (m *PlanDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition.Marshal(b, m, deterministic)
}
func (m *PlanDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition.Merge(m, src)
}
func (m *PlanDefinition) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition.Size(m)
}
func (m *PlanDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition proto.InternalMessageInfo

func (m *PlanDefinition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PlanDefinition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *PlanDefinition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *PlanDefinition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *PlanDefinition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *PlanDefinition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *PlanDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PlanDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PlanDefinition) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *PlanDefinition) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *PlanDefinition) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *PlanDefinition) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *PlanDefinition) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *PlanDefinition) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PlanDefinition) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PlanDefinition) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *PlanDefinition) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *PlanDefinition) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *PlanDefinition) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *PlanDefinition) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *PlanDefinition) GetUsage() *String {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *PlanDefinition) GetApprovalDate() *Date {
	if m != nil {
		return m.ApprovalDate
	}
	return nil
}

func (m *PlanDefinition) GetLastReviewDate() *Date {
	if m != nil {
		return m.LastReviewDate
	}
	return nil
}

func (m *PlanDefinition) GetEffectivePeriod() *Period {
	if m != nil {
		return m.EffectivePeriod
	}
	return nil
}

func (m *PlanDefinition) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *PlanDefinition) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *PlanDefinition) GetTopic() []*CodeableConcept {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *PlanDefinition) GetContributor() []*Contributor {
	if m != nil {
		return m.Contributor
	}
	return nil
}

func (m *PlanDefinition) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *PlanDefinition) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *PlanDefinition) GetRelatedArtifact() []*RelatedArtifact {
	if m != nil {
		return m.RelatedArtifact
	}
	return nil
}

func (m *PlanDefinition) GetLibrary() []*Reference {
	if m != nil {
		return m.Library
	}
	return nil
}

func (m *PlanDefinition) GetGoal() []*PlanDefinition_Goal {
	if m != nil {
		return m.Goal
	}
	return nil
}

func (m *PlanDefinition) GetAction() []*PlanDefinition_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

// What the plan is trying to accomplish
type PlanDefinition_Goal struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// E.g. Treatment, dietary, behavioral, etc
	Category *CodeableConcept `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// Code or text describing the goal
	Description *CodeableConcept `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// high-priority | medium-priority | low-priority
	Priority *CodeableConcept `protobuf:"bytes,6,opt,name=priority,proto3" json:"priority,omitempty"`
	// When goal pursuit begins
	Start *CodeableConcept `protobuf:"bytes,7,opt,name=start,proto3" json:"start,omitempty"`
	// What does the goal address
	Addresses []*CodeableConcept `protobuf:"bytes,8,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// Supporting documentation for the goal
	Documentation        []*RelatedArtifact            `protobuf:"bytes,9,rep,name=documentation,proto3" json:"documentation,omitempty"`
	Target               []*PlanDefinition_Goal_Target `protobuf:"bytes,10,rep,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *PlanDefinition_Goal) Reset()         { *m = PlanDefinition_Goal{} }
func (m *PlanDefinition_Goal) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition_Goal) ProtoMessage()    {}
func (*PlanDefinition_Goal) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 0}
}

func (m *PlanDefinition_Goal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Goal.Unmarshal(m, b)
}
func (m *PlanDefinition_Goal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Goal.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Goal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Goal.Merge(m, src)
}
func (m *PlanDefinition_Goal) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Goal.Size(m)
}
func (m *PlanDefinition_Goal) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Goal.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Goal proto.InternalMessageInfo

func (m *PlanDefinition_Goal) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PlanDefinition_Goal) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PlanDefinition_Goal) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PlanDefinition_Goal) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *PlanDefinition_Goal) GetDescription() *CodeableConcept {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *PlanDefinition_Goal) GetPriority() *CodeableConcept {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *PlanDefinition_Goal) GetStart() *CodeableConcept {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *PlanDefinition_Goal) GetAddresses() []*CodeableConcept {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *PlanDefinition_Goal) GetDocumentation() []*RelatedArtifact {
	if m != nil {
		return m.Documentation
	}
	return nil
}

func (m *PlanDefinition_Goal) GetTarget() []*PlanDefinition_Goal_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

// Target outcome for the goal
type PlanDefinition_Goal_Target struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The parameter whose value is to be tracked
	Measure *CodeableConcept                   `protobuf:"bytes,4,opt,name=measure,proto3" json:"measure,omitempty"`
	Detail  *PlanDefinition_Goal_Target_Detail `protobuf:"bytes,5,opt,name=detail,proto3" json:"detail,omitempty"`
	// Reach goal within
	Due                  *Duration `protobuf:"bytes,6,opt,name=due,proto3" json:"due,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PlanDefinition_Goal_Target) Reset()         { *m = PlanDefinition_Goal_Target{} }
func (m *PlanDefinition_Goal_Target) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition_Goal_Target) ProtoMessage()    {}
func (*PlanDefinition_Goal_Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 0, 0}
}

func (m *PlanDefinition_Goal_Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Goal_Target.Unmarshal(m, b)
}
func (m *PlanDefinition_Goal_Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Goal_Target.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Goal_Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Goal_Target.Merge(m, src)
}
func (m *PlanDefinition_Goal_Target) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Goal_Target.Size(m)
}
func (m *PlanDefinition_Goal_Target) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Goal_Target.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Goal_Target proto.InternalMessageInfo

func (m *PlanDefinition_Goal_Target) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PlanDefinition_Goal_Target) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PlanDefinition_Goal_Target) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PlanDefinition_Goal_Target) GetMeasure() *CodeableConcept {
	if m != nil {
		return m.Measure
	}
	return nil
}

func (m *PlanDefinition_Goal_Target) GetDetail() *PlanDefinition_Goal_Target_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *PlanDefinition_Goal_Target) GetDue() *Duration {
	if m != nil {
		return m.Due
	}
	return nil
}

// The target value to be achieved
type PlanDefinition_Goal_Target_Detail struct {
	// Types that are valid to be assigned to Detail:
	//	*PlanDefinition_Goal_Target_Detail_Quantity
	//	*PlanDefinition_Goal_Target_Detail_Range
	//	*PlanDefinition_Goal_Target_Detail_CodeableConcept
	Detail               isPlanDefinition_Goal_Target_Detail_Detail `protobuf_oneof:"detail"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *PlanDefinition_Goal_Target_Detail) Reset()         { *m = PlanDefinition_Goal_Target_Detail{} }
func (m *PlanDefinition_Goal_Target_Detail) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition_Goal_Target_Detail) ProtoMessage()    {}
func (*PlanDefinition_Goal_Target_Detail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 0, 0, 0}
}

func (m *PlanDefinition_Goal_Target_Detail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Goal_Target_Detail.Unmarshal(m, b)
}
func (m *PlanDefinition_Goal_Target_Detail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Goal_Target_Detail.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Goal_Target_Detail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Goal_Target_Detail.Merge(m, src)
}
func (m *PlanDefinition_Goal_Target_Detail) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Goal_Target_Detail.Size(m)
}
func (m *PlanDefinition_Goal_Target_Detail) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Goal_Target_Detail.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Goal_Target_Detail proto.InternalMessageInfo

type isPlanDefinition_Goal_Target_Detail_Detail interface {
	isPlanDefinition_Goal_Target_Detail_Detail()
}

type PlanDefinition_Goal_Target_Detail_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type PlanDefinition_Goal_Target_Detail_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

type PlanDefinition_Goal_Target_Detail_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,3,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*PlanDefinition_Goal_Target_Detail_Quantity) isPlanDefinition_Goal_Target_Detail_Detail() {}

func (*PlanDefinition_Goal_Target_Detail_Range) isPlanDefinition_Goal_Target_Detail_Detail() {}

func (*PlanDefinition_Goal_Target_Detail_CodeableConcept) isPlanDefinition_Goal_Target_Detail_Detail() {
}

func (m *PlanDefinition_Goal_Target_Detail) GetDetail() isPlanDefinition_Goal_Target_Detail_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *PlanDefinition_Goal_Target_Detail) GetQuantity() *Quantity {
	if x, ok := m.GetDetail().(*PlanDefinition_Goal_Target_Detail_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *PlanDefinition_Goal_Target_Detail) GetRange() *Range {
	if x, ok := m.GetDetail().(*PlanDefinition_Goal_Target_Detail_Range); ok {
		return x.Range
	}
	return nil
}

func (m *PlanDefinition_Goal_Target_Detail) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetDetail().(*PlanDefinition_Goal_Target_Detail_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PlanDefinition_Goal_Target_Detail) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PlanDefinition_Goal_Target_Detail_OneofMarshaler, _PlanDefinition_Goal_Target_Detail_OneofUnmarshaler, _PlanDefinition_Goal_Target_Detail_OneofSizer, []interface{}{
		(*PlanDefinition_Goal_Target_Detail_Quantity)(nil),
		(*PlanDefinition_Goal_Target_Detail_Range)(nil),
		(*PlanDefinition_Goal_Target_Detail_CodeableConcept)(nil),
	}
}

func _PlanDefinition_Goal_Target_Detail_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PlanDefinition_Goal_Target_Detail)
	// detail
	switch x := m.Detail.(type) {
	case *PlanDefinition_Goal_Target_Detail_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *PlanDefinition_Goal_Target_Detail_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *PlanDefinition_Goal_Target_Detail_CodeableConcept:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PlanDefinition_Goal_Target_Detail.Detail has unexpected type %T", x)
	}
	return nil
}

func _PlanDefinition_Goal_Target_Detail_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PlanDefinition_Goal_Target_Detail)
	switch tag {
	case 1: // detail.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Detail = &PlanDefinition_Goal_Target_Detail_Quantity{msg}
		return true, err
	case 2: // detail.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Detail = &PlanDefinition_Goal_Target_Detail_Range{msg}
		return true, err
	case 3: // detail.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Detail = &PlanDefinition_Goal_Target_Detail_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PlanDefinition_Goal_Target_Detail_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PlanDefinition_Goal_Target_Detail)
	// detail
	switch x := m.Detail.(type) {
	case *PlanDefinition_Goal_Target_Detail_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlanDefinition_Goal_Target_Detail_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlanDefinition_Goal_Target_Detail_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Action defined by the plan
type PlanDefinition_Action struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// User-visible label for the action (e.g. 1. or A.)
	Label *String `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// User-visible title
	Title *String `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// Short description of the action
	Description *String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Static text equivalent of the action, used if the dynamic aspects cannot
	// be interpreted by the receiving system
	TextEquivalent *String `protobuf:"bytes,7,opt,name=text_equivalent,json=textEquivalent,proto3" json:"text_equivalent,omitempty"`
	// Code representing the meaning of the action or sub-actions
	Code []*CodeableConcept `protobuf:"bytes,8,rep,name=code,proto3" json:"code,omitempty"`
	// Why the action should be performed
	Reason []*CodeableConcept `protobuf:"bytes,9,rep,name=reason,proto3" json:"reason,omitempty"`
	// Supporting documentation for the intended performer of the action
	Documentation []*RelatedArtifact `protobuf:"bytes,10,rep,name=documentation,proto3" json:"documentation,omitempty"`
	// What goals this action supports
	GoalId []*Id `protobuf:"bytes,11,rep,name=goal_id,json=goalId,proto3" json:"goal_id,omitempty"`
	// When the action should be triggered
	TriggerDefinition []*TriggerDefinition               `protobuf:"bytes,12,rep,name=trigger_definition,json=triggerDefinition,proto3" json:"trigger_definition,omitempty"`
	Condition         []*PlanDefinition_Action_Condition `protobuf:"bytes,13,rep,name=condition,proto3" json:"condition,omitempty"`
	// Input data requirements
	Input []*DataRequirement `protobuf:"bytes,14,rep,name=input,proto3" json:"input,omitempty"`
	// Output data definition
	Output        []*DataRequirement                     `protobuf:"bytes,15,rep,name=output,proto3" json:"output,omitempty"`
	RelatedAction []*PlanDefinition_Action_RelatedAction `protobuf:"bytes,16,rep,name=related_action,json=relatedAction,proto3" json:"related_action,omitempty"`
	Timing        *PlanDefinition_Action_TimingType      `protobuf:"bytes,17,opt,name=timing,proto3" json:"timing,omitempty"`
	Participant   []*PlanDefinition_Action_Participant   `protobuf:"bytes,18,rep,name=participant,proto3" json:"participant,omitempty"`
	// create | update | remove | fire-event
	Type *Coding `protobuf:"bytes,19,opt,name=type,proto3" json:"type,omitempty"`
	// visual-group | logical-group | sentence-group
	GroupingBehavior *ActionGroupingBehaviorCode `protobuf:"bytes,20,opt,name=grouping_behavior,json=groupingBehavior,proto3" json:"grouping_behavior,omitempty"`
	// any | all | all-or-none | exactly-one | at-most-one | one-or-more
	SelectionBehavior *ActionSelectionBehaviorCode `protobuf:"bytes,21,opt,name=selection_behavior,json=selectionBehavior,proto3" json:"selection_behavior,omitempty"`
	// must | could | must-unless-documented
	RequiredBehavior *ActionRequiredBehaviorCode `protobuf:"bytes,22,opt,name=required_behavior,json=requiredBehavior,proto3" json:"required_behavior,omitempty"`
	// yes | no
	PrecheckBehavior *ActionPrecheckBehaviorCode `protobuf:"bytes,23,opt,name=precheck_behavior,json=precheckBehavior,proto3" json:"precheck_behavior,omitempty"`
	// single | multiple
	CardinalityBehavior *ActionCardinalityBehaviorCode `protobuf:"bytes,24,opt,name=cardinality_behavior,json=cardinalityBehavior,proto3" json:"cardinality_behavior,omitempty"`
	// Description of the activity to be performed
	Definition *Reference `protobuf:"bytes,25,opt,name=definition,proto3" json:"definition,omitempty"`
	// Transform to apply the template
	Transform    *Reference                            `protobuf:"bytes,26,opt,name=transform,proto3" json:"transform,omitempty"`
	DynamicValue []*PlanDefinition_Action_DynamicValue `protobuf:"bytes,27,rep,name=dynamic_value,json=dynamicValue,proto3" json:"dynamic_value,omitempty"`
	// A sub-action
	Action               []*PlanDefinition_Action `protobuf:"bytes,28,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PlanDefinition_Action) Reset()         { *m = PlanDefinition_Action{} }
func (m *PlanDefinition_Action) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition_Action) ProtoMessage()    {}
func (*PlanDefinition_Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 1}
}

func (m *PlanDefinition_Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Action.Unmarshal(m, b)
}
func (m *PlanDefinition_Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Action.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Action.Merge(m, src)
}
func (m *PlanDefinition_Action) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Action.Size(m)
}
func (m *PlanDefinition_Action) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Action.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Action proto.InternalMessageInfo

func (m *PlanDefinition_Action) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PlanDefinition_Action) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PlanDefinition_Action) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PlanDefinition_Action) GetLabel() *String {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *PlanDefinition_Action) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *PlanDefinition_Action) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *PlanDefinition_Action) GetTextEquivalent() *String {
	if m != nil {
		return m.TextEquivalent
	}
	return nil
}

func (m *PlanDefinition_Action) GetCode() []*CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *PlanDefinition_Action) GetReason() []*CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *PlanDefinition_Action) GetDocumentation() []*RelatedArtifact {
	if m != nil {
		return m.Documentation
	}
	return nil
}

func (m *PlanDefinition_Action) GetGoalId() []*Id {
	if m != nil {
		return m.GoalId
	}
	return nil
}

func (m *PlanDefinition_Action) GetTriggerDefinition() []*TriggerDefinition {
	if m != nil {
		return m.TriggerDefinition
	}
	return nil
}

func (m *PlanDefinition_Action) GetCondition() []*PlanDefinition_Action_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *PlanDefinition_Action) GetInput() []*DataRequirement {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *PlanDefinition_Action) GetOutput() []*DataRequirement {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *PlanDefinition_Action) GetRelatedAction() []*PlanDefinition_Action_RelatedAction {
	if m != nil {
		return m.RelatedAction
	}
	return nil
}

func (m *PlanDefinition_Action) GetTiming() *PlanDefinition_Action_TimingType {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *PlanDefinition_Action) GetParticipant() []*PlanDefinition_Action_Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *PlanDefinition_Action) GetType() *Coding {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PlanDefinition_Action) GetGroupingBehavior() *ActionGroupingBehaviorCode {
	if m != nil {
		return m.GroupingBehavior
	}
	return nil
}

func (m *PlanDefinition_Action) GetSelectionBehavior() *ActionSelectionBehaviorCode {
	if m != nil {
		return m.SelectionBehavior
	}
	return nil
}

func (m *PlanDefinition_Action) GetRequiredBehavior() *ActionRequiredBehaviorCode {
	if m != nil {
		return m.RequiredBehavior
	}
	return nil
}

func (m *PlanDefinition_Action) GetPrecheckBehavior() *ActionPrecheckBehaviorCode {
	if m != nil {
		return m.PrecheckBehavior
	}
	return nil
}

func (m *PlanDefinition_Action) GetCardinalityBehavior() *ActionCardinalityBehaviorCode {
	if m != nil {
		return m.CardinalityBehavior
	}
	return nil
}

func (m *PlanDefinition_Action) GetDefinition() *Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *PlanDefinition_Action) GetTransform() *Reference {
	if m != nil {
		return m.Transform
	}
	return nil
}

func (m *PlanDefinition_Action) GetDynamicValue() []*PlanDefinition_Action_DynamicValue {
	if m != nil {
		return m.DynamicValue
	}
	return nil
}

func (m *PlanDefinition_Action) GetAction() []*PlanDefinition_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

// Whether or not the action is applicable
type PlanDefinition_Action_Condition struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// applicability | start | stop
	Kind *ActionConditionKindCode `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	// Natural language description of the condition
	Description *String `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Language of the expression
	Language *String `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	// Boolean-valued expression
	Expression           *String  `protobuf:"bytes,7,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlanDefinition_Action_Condition) Reset()         { *m = PlanDefinition_Action_Condition{} }
func (m *PlanDefinition_Action_Condition) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition_Action_Condition) ProtoMessage()    {}
func (*PlanDefinition_Action_Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 1, 0}
}

func (m *PlanDefinition_Action_Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Action_Condition.Unmarshal(m, b)
}
func (m *PlanDefinition_Action_Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Action_Condition.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Action_Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Action_Condition.Merge(m, src)
}
func (m *PlanDefinition_Action_Condition) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Action_Condition.Size(m)
}
func (m *PlanDefinition_Action_Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Action_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Action_Condition proto.InternalMessageInfo

func (m *PlanDefinition_Action_Condition) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PlanDefinition_Action_Condition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PlanDefinition_Action_Condition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PlanDefinition_Action_Condition) GetKind() *ActionConditionKindCode {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *PlanDefinition_Action_Condition) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *PlanDefinition_Action_Condition) GetLanguage() *String {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *PlanDefinition_Action_Condition) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

// Relationship to another action
type PlanDefinition_Action_RelatedAction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What action is this related to
	ActionId *Id `protobuf:"bytes,4,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// before-start | before | before-end | concurrent-with-start | concurrent
	// | concurrent-with-end | after-start | after | after-end
	Relationship         *ActionRelationshipTypeCode                 `protobuf:"bytes,5,opt,name=relationship,proto3" json:"relationship,omitempty"`
	Offset               *PlanDefinition_Action_RelatedAction_Offset `protobuf:"bytes,6,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *PlanDefinition_Action_RelatedAction) Reset()         { *m = PlanDefinition_Action_RelatedAction{} }
func (m *PlanDefinition_Action_RelatedAction) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition_Action_RelatedAction) ProtoMessage()    {}
func (*PlanDefinition_Action_RelatedAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 1, 1}
}

func (m *PlanDefinition_Action_RelatedAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Action_RelatedAction.Unmarshal(m, b)
}
func (m *PlanDefinition_Action_RelatedAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Action_RelatedAction.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Action_RelatedAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Action_RelatedAction.Merge(m, src)
}
func (m *PlanDefinition_Action_RelatedAction) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Action_RelatedAction.Size(m)
}
func (m *PlanDefinition_Action_RelatedAction) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Action_RelatedAction.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Action_RelatedAction proto.InternalMessageInfo

func (m *PlanDefinition_Action_RelatedAction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PlanDefinition_Action_RelatedAction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PlanDefinition_Action_RelatedAction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PlanDefinition_Action_RelatedAction) GetActionId() *Id {
	if m != nil {
		return m.ActionId
	}
	return nil
}

func (m *PlanDefinition_Action_RelatedAction) GetRelationship() *ActionRelationshipTypeCode {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *PlanDefinition_Action_RelatedAction) GetOffset() *PlanDefinition_Action_RelatedAction_Offset {
	if m != nil {
		return m.Offset
	}
	return nil
}

// Time offset for the relationship
type PlanDefinition_Action_RelatedAction_Offset struct {
	// Types that are valid to be assigned to Offset:
	//	*PlanDefinition_Action_RelatedAction_Offset_Duration
	//	*PlanDefinition_Action_RelatedAction_Offset_Range
	Offset               isPlanDefinition_Action_RelatedAction_Offset_Offset `protobuf_oneof:"offset"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *PlanDefinition_Action_RelatedAction_Offset) Reset() {
	*m = PlanDefinition_Action_RelatedAction_Offset{}
}
func (m *PlanDefinition_Action_RelatedAction_Offset) String() string {
	return proto.CompactTextString(m)
}
func (*PlanDefinition_Action_RelatedAction_Offset) ProtoMessage() {}
func (*PlanDefinition_Action_RelatedAction_Offset) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 1, 1, 0}
}

func (m *PlanDefinition_Action_RelatedAction_Offset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Action_RelatedAction_Offset.Unmarshal(m, b)
}
func (m *PlanDefinition_Action_RelatedAction_Offset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Action_RelatedAction_Offset.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Action_RelatedAction_Offset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Action_RelatedAction_Offset.Merge(m, src)
}
func (m *PlanDefinition_Action_RelatedAction_Offset) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Action_RelatedAction_Offset.Size(m)
}
func (m *PlanDefinition_Action_RelatedAction_Offset) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Action_RelatedAction_Offset.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Action_RelatedAction_Offset proto.InternalMessageInfo

type isPlanDefinition_Action_RelatedAction_Offset_Offset interface {
	isPlanDefinition_Action_RelatedAction_Offset_Offset()
}

type PlanDefinition_Action_RelatedAction_Offset_Duration struct {
	Duration *Duration `protobuf:"bytes,1,opt,name=duration,proto3,oneof"`
}

type PlanDefinition_Action_RelatedAction_Offset_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*PlanDefinition_Action_RelatedAction_Offset_Duration) isPlanDefinition_Action_RelatedAction_Offset_Offset() {
}

func (*PlanDefinition_Action_RelatedAction_Offset_Range) isPlanDefinition_Action_RelatedAction_Offset_Offset() {
}

func (m *PlanDefinition_Action_RelatedAction_Offset) GetOffset() isPlanDefinition_Action_RelatedAction_Offset_Offset {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *PlanDefinition_Action_RelatedAction_Offset) GetDuration() *Duration {
	if x, ok := m.GetOffset().(*PlanDefinition_Action_RelatedAction_Offset_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *PlanDefinition_Action_RelatedAction_Offset) GetRange() *Range {
	if x, ok := m.GetOffset().(*PlanDefinition_Action_RelatedAction_Offset_Range); ok {
		return x.Range
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PlanDefinition_Action_RelatedAction_Offset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PlanDefinition_Action_RelatedAction_Offset_OneofMarshaler, _PlanDefinition_Action_RelatedAction_Offset_OneofUnmarshaler, _PlanDefinition_Action_RelatedAction_Offset_OneofSizer, []interface{}{
		(*PlanDefinition_Action_RelatedAction_Offset_Duration)(nil),
		(*PlanDefinition_Action_RelatedAction_Offset_Range)(nil),
	}
}

func _PlanDefinition_Action_RelatedAction_Offset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PlanDefinition_Action_RelatedAction_Offset)
	// offset
	switch x := m.Offset.(type) {
	case *PlanDefinition_Action_RelatedAction_Offset_Duration:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *PlanDefinition_Action_RelatedAction_Offset_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PlanDefinition_Action_RelatedAction_Offset.Offset has unexpected type %T", x)
	}
	return nil
}

func _PlanDefinition_Action_RelatedAction_Offset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PlanDefinition_Action_RelatedAction_Offset)
	switch tag {
	case 1: // offset.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Offset = &PlanDefinition_Action_RelatedAction_Offset_Duration{msg}
		return true, err
	case 2: // offset.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Offset = &PlanDefinition_Action_RelatedAction_Offset_Range{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PlanDefinition_Action_RelatedAction_Offset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PlanDefinition_Action_RelatedAction_Offset)
	// offset
	switch x := m.Offset.(type) {
	case *PlanDefinition_Action_RelatedAction_Offset_Duration:
		s := proto.Size(x.Duration)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlanDefinition_Action_RelatedAction_Offset_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// When the action should take place
type PlanDefinition_Action_TimingType struct {
	// Types that are valid to be assigned to Timing:
	//	*PlanDefinition_Action_TimingType_DateTime
	//	*PlanDefinition_Action_TimingType_Period
	//	*PlanDefinition_Action_TimingType_Duration
	//	*PlanDefinition_Action_TimingType_Range
	//	*PlanDefinition_Action_TimingType_TimingValue
	Timing               isPlanDefinition_Action_TimingType_Timing `protobuf_oneof:"timing"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *PlanDefinition_Action_TimingType) Reset()         { *m = PlanDefinition_Action_TimingType{} }
func (m *PlanDefinition_Action_TimingType) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition_Action_TimingType) ProtoMessage()    {}
func (*PlanDefinition_Action_TimingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 1, 2}
}

func (m *PlanDefinition_Action_TimingType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Action_TimingType.Unmarshal(m, b)
}
func (m *PlanDefinition_Action_TimingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Action_TimingType.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Action_TimingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Action_TimingType.Merge(m, src)
}
func (m *PlanDefinition_Action_TimingType) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Action_TimingType.Size(m)
}
func (m *PlanDefinition_Action_TimingType) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Action_TimingType.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Action_TimingType proto.InternalMessageInfo

type isPlanDefinition_Action_TimingType_Timing interface {
	isPlanDefinition_Action_TimingType_Timing()
}

type PlanDefinition_Action_TimingType_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type PlanDefinition_Action_TimingType_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type PlanDefinition_Action_TimingType_Duration struct {
	Duration *Duration `protobuf:"bytes,3,opt,name=duration,proto3,oneof"`
}

type PlanDefinition_Action_TimingType_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type PlanDefinition_Action_TimingType_TimingValue struct {
	TimingValue *Timing `protobuf:"bytes,5,opt,name=timing_value,json=timing,proto3,oneof"`
}

func (*PlanDefinition_Action_TimingType_DateTime) isPlanDefinition_Action_TimingType_Timing() {}

func (*PlanDefinition_Action_TimingType_Period) isPlanDefinition_Action_TimingType_Timing() {}

func (*PlanDefinition_Action_TimingType_Duration) isPlanDefinition_Action_TimingType_Timing() {}

func (*PlanDefinition_Action_TimingType_Range) isPlanDefinition_Action_TimingType_Timing() {}

func (*PlanDefinition_Action_TimingType_TimingValue) isPlanDefinition_Action_TimingType_Timing() {}

func (m *PlanDefinition_Action_TimingType) GetTiming() isPlanDefinition_Action_TimingType_Timing {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *PlanDefinition_Action_TimingType) GetDateTime() *DateTime {
	if x, ok := m.GetTiming().(*PlanDefinition_Action_TimingType_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *PlanDefinition_Action_TimingType) GetPeriod() *Period {
	if x, ok := m.GetTiming().(*PlanDefinition_Action_TimingType_Period); ok {
		return x.Period
	}
	return nil
}

func (m *PlanDefinition_Action_TimingType) GetDuration() *Duration {
	if x, ok := m.GetTiming().(*PlanDefinition_Action_TimingType_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *PlanDefinition_Action_TimingType) GetRange() *Range {
	if x, ok := m.GetTiming().(*PlanDefinition_Action_TimingType_Range); ok {
		return x.Range
	}
	return nil
}

func (m *PlanDefinition_Action_TimingType) GetTimingValue() *Timing {
	if x, ok := m.GetTiming().(*PlanDefinition_Action_TimingType_TimingValue); ok {
		return x.TimingValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PlanDefinition_Action_TimingType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PlanDefinition_Action_TimingType_OneofMarshaler, _PlanDefinition_Action_TimingType_OneofUnmarshaler, _PlanDefinition_Action_TimingType_OneofSizer, []interface{}{
		(*PlanDefinition_Action_TimingType_DateTime)(nil),
		(*PlanDefinition_Action_TimingType_Period)(nil),
		(*PlanDefinition_Action_TimingType_Duration)(nil),
		(*PlanDefinition_Action_TimingType_Range)(nil),
		(*PlanDefinition_Action_TimingType_TimingValue)(nil),
	}
}

func _PlanDefinition_Action_TimingType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PlanDefinition_Action_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *PlanDefinition_Action_TimingType_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *PlanDefinition_Action_TimingType_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *PlanDefinition_Action_TimingType_Duration:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *PlanDefinition_Action_TimingType_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *PlanDefinition_Action_TimingType_TimingValue:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimingValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PlanDefinition_Action_TimingType.Timing has unexpected type %T", x)
	}
	return nil
}

func _PlanDefinition_Action_TimingType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PlanDefinition_Action_TimingType)
	switch tag {
	case 1: // timing.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Timing = &PlanDefinition_Action_TimingType_DateTime{msg}
		return true, err
	case 2: // timing.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Timing = &PlanDefinition_Action_TimingType_Period{msg}
		return true, err
	case 3: // timing.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Timing = &PlanDefinition_Action_TimingType_Duration{msg}
		return true, err
	case 4: // timing.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Timing = &PlanDefinition_Action_TimingType_Range{msg}
		return true, err
	case 5: // timing.timing_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Timing = &PlanDefinition_Action_TimingType_TimingValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PlanDefinition_Action_TimingType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PlanDefinition_Action_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *PlanDefinition_Action_TimingType_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlanDefinition_Action_TimingType_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlanDefinition_Action_TimingType_Duration:
		s := proto.Size(x.Duration)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlanDefinition_Action_TimingType_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlanDefinition_Action_TimingType_TimingValue:
		s := proto.Size(x.TimingValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who should participate in the action
type PlanDefinition_Action_Participant struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// patient | practitioner | related-person
	Type *ActionParticipantTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// E.g. Nurse, Surgeon, Parent, etc
	Role                 *CodeableConcept `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PlanDefinition_Action_Participant) Reset()         { *m = PlanDefinition_Action_Participant{} }
func (m *PlanDefinition_Action_Participant) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition_Action_Participant) ProtoMessage()    {}
func (*PlanDefinition_Action_Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 1, 3}
}

func (m *PlanDefinition_Action_Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Action_Participant.Unmarshal(m, b)
}
func (m *PlanDefinition_Action_Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Action_Participant.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Action_Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Action_Participant.Merge(m, src)
}
func (m *PlanDefinition_Action_Participant) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Action_Participant.Size(m)
}
func (m *PlanDefinition_Action_Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Action_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Action_Participant proto.InternalMessageInfo

func (m *PlanDefinition_Action_Participant) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PlanDefinition_Action_Participant) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PlanDefinition_Action_Participant) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PlanDefinition_Action_Participant) GetType() *ActionParticipantTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PlanDefinition_Action_Participant) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

// Dynamic aspects of the definition
type PlanDefinition_Action_DynamicValue struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Natural language description of the dynamic value
	Description *String `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The path to the element to be set dynamically
	Path *String `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	// Language of the expression
	Language *String `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	// An expression that provides the dynamic value for the customization
	Expression           *String  `protobuf:"bytes,7,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlanDefinition_Action_DynamicValue) Reset()         { *m = PlanDefinition_Action_DynamicValue{} }
func (m *PlanDefinition_Action_DynamicValue) String() string { return proto.CompactTextString(m) }
func (*PlanDefinition_Action_DynamicValue) ProtoMessage()    {}
func (*PlanDefinition_Action_DynamicValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{84, 1, 4}
}

func (m *PlanDefinition_Action_DynamicValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanDefinition_Action_DynamicValue.Unmarshal(m, b)
}
func (m *PlanDefinition_Action_DynamicValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanDefinition_Action_DynamicValue.Marshal(b, m, deterministic)
}
func (m *PlanDefinition_Action_DynamicValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanDefinition_Action_DynamicValue.Merge(m, src)
}
func (m *PlanDefinition_Action_DynamicValue) XXX_Size() int {
	return xxx_messageInfo_PlanDefinition_Action_DynamicValue.Size(m)
}
func (m *PlanDefinition_Action_DynamicValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanDefinition_Action_DynamicValue.DiscardUnknown(m)
}

var xxx_messageInfo_PlanDefinition_Action_DynamicValue proto.InternalMessageInfo

func (m *PlanDefinition_Action_DynamicValue) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PlanDefinition_Action_DynamicValue) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PlanDefinition_Action_DynamicValue) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PlanDefinition_Action_DynamicValue) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *PlanDefinition_Action_DynamicValue) GetPath() *String {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *PlanDefinition_Action_DynamicValue) GetLanguage() *String {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *PlanDefinition_Action_DynamicValue) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

// Auto-generated from StructureDefinition for Practitioner, last updated
// 2017-04-19T07:44:43.294+10:00. A person with a  formal responsibility in the
// provisioning of healthcare or related services. See
// http://hl7.org/fhir/StructureDefinition/Practitioner
type Practitioner struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A identifier for the person as this agent
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this practitioner's record is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// The name(s) associated with the practitioner
	Name []*HumanName `protobuf:"bytes,11,rep,name=name,proto3" json:"name,omitempty"`
	// A contact detail for the practitioner (that apply to all roles)
	Telecom []*ContactPoint `protobuf:"bytes,12,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// Address(es) of the practitioner that are not role specific (typically home
	// address)
	Address []*Address `protobuf:"bytes,13,rep,name=address,proto3" json:"address,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode `protobuf:"bytes,14,opt,name=gender,proto3" json:"gender,omitempty"`
	// The date  on which the practitioner was born
	BirthDate *Date `protobuf:"bytes,15,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	// Image of the person
	Photo         []*Attachment                 `protobuf:"bytes,16,rep,name=photo,proto3" json:"photo,omitempty"`
	Qualification []*Practitioner_Qualification `protobuf:"bytes,17,rep,name=qualification,proto3" json:"qualification,omitempty"`
	// A language the practitioner is able to use in patient communication
	Communication        []*CodeableConcept `protobuf:"bytes,18,rep,name=communication,proto3" json:"communication,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Practitioner) Reset()         { *m = Practitioner{} }
func (m *Practitioner) String() string { return proto.CompactTextString(m) }
func (*Practitioner) ProtoMessage()    {}
func (*Practitioner) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{85}
}

func (m *Practitioner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Practitioner.Unmarshal(m, b)
}
func (m *Practitioner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Practitioner.Marshal(b, m, deterministic)
}
func (m *Practitioner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Practitioner.Merge(m, src)
}
func (m *Practitioner) XXX_Size() int {
	return xxx_messageInfo_Practitioner.Size(m)
}
func (m *Practitioner) XXX_DiscardUnknown() {
	xxx_messageInfo_Practitioner.DiscardUnknown(m)
}

var xxx_messageInfo_Practitioner proto.InternalMessageInfo

func (m *Practitioner) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Practitioner) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Practitioner) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Practitioner) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Practitioner) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Practitioner) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Practitioner) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Practitioner) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Practitioner) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Practitioner) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Practitioner) GetName() []*HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Practitioner) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *Practitioner) GetAddress() []*Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Practitioner) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *Practitioner) GetBirthDate() *Date {
	if m != nil {
		return m.BirthDate
	}
	return nil
}

func (m *Practitioner) GetPhoto() []*Attachment {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *Practitioner) GetQualification() []*Practitioner_Qualification {
	if m != nil {
		return m.Qualification
	}
	return nil
}

func (m *Practitioner) GetCommunication() []*CodeableConcept {
	if m != nil {
		return m.Communication
	}
	return nil
}

// Qualifications obtained by training and certification
type Practitioner_Qualification struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// An identifier for this qualification for the practitioner
	Identifier []*Identifier `protobuf:"bytes,4,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Coded representation of the qualification
	Code *CodeableConcept `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Period during which the qualification is valid
	Period *Period `protobuf:"bytes,6,opt,name=period,proto3" json:"period,omitempty"`
	// Organization that regulates and issues the qualification
	Issuer               *Reference `protobuf:"bytes,7,opt,name=issuer,proto3" json:"issuer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Practitioner_Qualification) Reset()         { *m = Practitioner_Qualification{} }
func (m *Practitioner_Qualification) String() string { return proto.CompactTextString(m) }
func (*Practitioner_Qualification) ProtoMessage()    {}
func (*Practitioner_Qualification) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{85, 0}
}

func (m *Practitioner_Qualification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Practitioner_Qualification.Unmarshal(m, b)
}
func (m *Practitioner_Qualification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Practitioner_Qualification.Marshal(b, m, deterministic)
}
func (m *Practitioner_Qualification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Practitioner_Qualification.Merge(m, src)
}
func (m *Practitioner_Qualification) XXX_Size() int {
	return xxx_messageInfo_Practitioner_Qualification.Size(m)
}
func (m *Practitioner_Qualification) XXX_DiscardUnknown() {
	xxx_messageInfo_Practitioner_Qualification.DiscardUnknown(m)
}

var xxx_messageInfo_Practitioner_Qualification proto.InternalMessageInfo

func (m *Practitioner_Qualification) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Practitioner_Qualification) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Practitioner_Qualification) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Practitioner_Qualification) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Practitioner_Qualification) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Practitioner_Qualification) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Practitioner_Qualification) GetIssuer() *Reference {
	if m != nil {
		return m.Issuer
	}
	return nil
}

// Auto-generated from StructureDefinition for PractitionerRole, last updated
// 2017-04-19T07:44:43.294+10:00. Roles/organizations the practitioner is
// associated with. See http://hl7.org/fhir/StructureDefinition/PractitionerRole
type PractitionerRole struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifiers that are specific to a role/location
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this practitioner's record is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// The period during which the practitioner is authorized to perform in these
	// role(s)
	Period *Period `protobuf:"bytes,11,opt,name=period,proto3" json:"period,omitempty"`
	// Practitioner that is able to provide the defined services for the
	// organation
	Practitioner *Reference `protobuf:"bytes,12,opt,name=practitioner,proto3" json:"practitioner,omitempty"`
	// Organization where the roles are available
	Organization *Reference `protobuf:"bytes,13,opt,name=organization,proto3" json:"organization,omitempty"`
	// Roles which this practitioner may perform
	Code []*CodeableConcept `protobuf:"bytes,14,rep,name=code,proto3" json:"code,omitempty"`
	// Specific specialty of the practitioner
	Specialty []*CodeableConcept `protobuf:"bytes,15,rep,name=specialty,proto3" json:"specialty,omitempty"`
	// The location(s) at which this practitioner provides care
	Location []*Reference `protobuf:"bytes,16,rep,name=location,proto3" json:"location,omitempty"`
	// The list of healthcare services that this worker provides for this role's
	// Organization/Location(s)
	HealthcareService []*Reference `protobuf:"bytes,17,rep,name=healthcare_service,json=healthcareService,proto3" json:"healthcare_service,omitempty"`
	// Contact details that are specific to the role/location/service
	Telecom       []*ContactPoint                   `protobuf:"bytes,18,rep,name=telecom,proto3" json:"telecom,omitempty"`
	AvailableTime []*PractitionerRole_AvailableTime `protobuf:"bytes,19,rep,name=available_time,json=availableTime,proto3" json:"available_time,omitempty"`
	NotAvailable  []*PractitionerRole_NotAvailable  `protobuf:"bytes,20,rep,name=not_available,json=notAvailable,proto3" json:"not_available,omitempty"`
	// Description of availability exceptions
	AvailabilityExceptions *String `protobuf:"bytes,21,opt,name=availability_exceptions,json=availabilityExceptions,proto3" json:"availability_exceptions,omitempty"`
	// Technical endpoints providing access to services operated for the
	// practitioner with this role
	Endpoint             []*Reference `protobuf:"bytes,22,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PractitionerRole) Reset()         { *m = PractitionerRole{} }
func (m *PractitionerRole) String() string { return proto.CompactTextString(m) }
func (*PractitionerRole) ProtoMessage()    {}
func (*PractitionerRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{86}
}

func (m *PractitionerRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PractitionerRole.Unmarshal(m, b)
}
func (m *PractitionerRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PractitionerRole.Marshal(b, m, deterministic)
}
func (m *PractitionerRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PractitionerRole.Merge(m, src)
}
func (m *PractitionerRole) XXX_Size() int {
	return xxx_messageInfo_PractitionerRole.Size(m)
}
func (m *PractitionerRole) XXX_DiscardUnknown() {
	xxx_messageInfo_PractitionerRole.DiscardUnknown(m)
}

var xxx_messageInfo_PractitionerRole proto.InternalMessageInfo

func (m *PractitionerRole) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PractitionerRole) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *PractitionerRole) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *PractitionerRole) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *PractitionerRole) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *PractitionerRole) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *PractitionerRole) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PractitionerRole) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PractitionerRole) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *PractitionerRole) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *PractitionerRole) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *PractitionerRole) GetPractitioner() *Reference {
	if m != nil {
		return m.Practitioner
	}
	return nil
}

func (m *PractitionerRole) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *PractitionerRole) GetCode() []*CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *PractitionerRole) GetSpecialty() []*CodeableConcept {
	if m != nil {
		return m.Specialty
	}
	return nil
}

func (m *PractitionerRole) GetLocation() []*Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *PractitionerRole) GetHealthcareService() []*Reference {
	if m != nil {
		return m.HealthcareService
	}
	return nil
}

func (m *PractitionerRole) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *PractitionerRole) GetAvailableTime() []*PractitionerRole_AvailableTime {
	if m != nil {
		return m.AvailableTime
	}
	return nil
}

func (m *PractitionerRole) GetNotAvailable() []*PractitionerRole_NotAvailable {
	if m != nil {
		return m.NotAvailable
	}
	return nil
}

func (m *PractitionerRole) GetAvailabilityExceptions() *String {
	if m != nil {
		return m.AvailabilityExceptions
	}
	return nil
}

func (m *PractitionerRole) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

// Times the Service Site is available
type PractitionerRole_AvailableTime struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// mon | tue | wed | thu | fri | sat | sun
	DaysOfWeek []*DaysOfWeekCode `protobuf:"bytes,4,rep,name=days_of_week,json=daysOfWeek,proto3" json:"days_of_week,omitempty"`
	// Always available? e.g. 24 hour service
	AllDay *Boolean `protobuf:"bytes,5,opt,name=all_day,json=allDay,proto3" json:"all_day,omitempty"`
	// Opening time of day (ignored if allDay = true)
	AvailableStartTime *Time `protobuf:"bytes,6,opt,name=available_start_time,json=availableStartTime,proto3" json:"available_start_time,omitempty"`
	// Closing time of day (ignored if allDay = true)
	AvailableEndTime     *Time    `protobuf:"bytes,7,opt,name=available_end_time,json=availableEndTime,proto3" json:"available_end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PractitionerRole_AvailableTime) Reset()         { *m = PractitionerRole_AvailableTime{} }
func (m *PractitionerRole_AvailableTime) String() string { return proto.CompactTextString(m) }
func (*PractitionerRole_AvailableTime) ProtoMessage()    {}
func (*PractitionerRole_AvailableTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{86, 0}
}

func (m *PractitionerRole_AvailableTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PractitionerRole_AvailableTime.Unmarshal(m, b)
}
func (m *PractitionerRole_AvailableTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PractitionerRole_AvailableTime.Marshal(b, m, deterministic)
}
func (m *PractitionerRole_AvailableTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PractitionerRole_AvailableTime.Merge(m, src)
}
func (m *PractitionerRole_AvailableTime) XXX_Size() int {
	return xxx_messageInfo_PractitionerRole_AvailableTime.Size(m)
}
func (m *PractitionerRole_AvailableTime) XXX_DiscardUnknown() {
	xxx_messageInfo_PractitionerRole_AvailableTime.DiscardUnknown(m)
}

var xxx_messageInfo_PractitionerRole_AvailableTime proto.InternalMessageInfo

func (m *PractitionerRole_AvailableTime) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PractitionerRole_AvailableTime) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PractitionerRole_AvailableTime) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PractitionerRole_AvailableTime) GetDaysOfWeek() []*DaysOfWeekCode {
	if m != nil {
		return m.DaysOfWeek
	}
	return nil
}

func (m *PractitionerRole_AvailableTime) GetAllDay() *Boolean {
	if m != nil {
		return m.AllDay
	}
	return nil
}

func (m *PractitionerRole_AvailableTime) GetAvailableStartTime() *Time {
	if m != nil {
		return m.AvailableStartTime
	}
	return nil
}

func (m *PractitionerRole_AvailableTime) GetAvailableEndTime() *Time {
	if m != nil {
		return m.AvailableEndTime
	}
	return nil
}

// Not available during this time due to provided reason
type PractitionerRole_NotAvailable struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reason presented to the user explaining why time not available
	Description *String `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Service not availablefrom this date
	During               *Period  `protobuf:"bytes,5,opt,name=during,proto3" json:"during,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PractitionerRole_NotAvailable) Reset()         { *m = PractitionerRole_NotAvailable{} }
func (m *PractitionerRole_NotAvailable) String() string { return proto.CompactTextString(m) }
func (*PractitionerRole_NotAvailable) ProtoMessage()    {}
func (*PractitionerRole_NotAvailable) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{86, 1}
}

func (m *PractitionerRole_NotAvailable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PractitionerRole_NotAvailable.Unmarshal(m, b)
}
func (m *PractitionerRole_NotAvailable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PractitionerRole_NotAvailable.Marshal(b, m, deterministic)
}
func (m *PractitionerRole_NotAvailable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PractitionerRole_NotAvailable.Merge(m, src)
}
func (m *PractitionerRole_NotAvailable) XXX_Size() int {
	return xxx_messageInfo_PractitionerRole_NotAvailable.Size(m)
}
func (m *PractitionerRole_NotAvailable) XXX_DiscardUnknown() {
	xxx_messageInfo_PractitionerRole_NotAvailable.DiscardUnknown(m)
}

var xxx_messageInfo_PractitionerRole_NotAvailable proto.InternalMessageInfo

func (m *PractitionerRole_NotAvailable) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PractitionerRole_NotAvailable) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PractitionerRole_NotAvailable) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *PractitionerRole_NotAvailable) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *PractitionerRole_NotAvailable) GetDuring() *Period {
	if m != nil {
		return m.During
	}
	return nil
}

// Auto-generated from StructureDefinition for Procedure, last updated
// 2017-04-19T07:44:43.294+10:00. An action that is being or was performed on a
// patient. See http://hl7.org/fhir/StructureDefinition/Procedure
type Procedure struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Identifiers for this procedure
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Instantiates protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// A request for this procedure
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Part of referenced event
	PartOf []*Reference `protobuf:"bytes,12,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// preparation | in-progress | suspended | aborted | completed |
	// entered-in-error | unknown
	Status *EventStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// True if procedure was not performed as scheduled
	NotDone *Boolean `protobuf:"bytes,14,opt,name=not_done,json=notDone,proto3" json:"not_done,omitempty"`
	// Reason procedure was not performed
	NotDoneReason *CodeableConcept `protobuf:"bytes,15,opt,name=not_done_reason,json=notDoneReason,proto3" json:"not_done_reason,omitempty"`
	// Classification of the procedure
	Category *CodeableConcept `protobuf:"bytes,16,opt,name=category,proto3" json:"category,omitempty"`
	// Identification of the procedure
	Code *CodeableConcept `protobuf:"bytes,17,opt,name=code,proto3" json:"code,omitempty"`
	// Who the procedure was performed on
	Subject *Reference `protobuf:"bytes,18,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or episode associated with the procedure
	Context   *Reference             `protobuf:"bytes,19,opt,name=context,proto3" json:"context,omitempty"`
	Performed *Procedure_Performed   `protobuf:"bytes,20,opt,name=performed,proto3" json:"performed,omitempty"`
	Performer []*Procedure_Performer `protobuf:"bytes,21,rep,name=performer,proto3" json:"performer,omitempty"`
	// Where the procedure happened
	Location *Reference `protobuf:"bytes,22,opt,name=location,proto3" json:"location,omitempty"`
	// Coded reason procedure performed
	ReasonCode []*CodeableConcept `protobuf:"bytes,23,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Condition that is the reason the procedure performed
	ReasonReference []*Reference `protobuf:"bytes,24,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Target body sites
	BodySite []*CodeableConcept `protobuf:"bytes,25,rep,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// The result of procedure
	Outcome *CodeableConcept `protobuf:"bytes,26,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Any report resulting from the procedure
	Report []*Reference `protobuf:"bytes,27,rep,name=report,proto3" json:"report,omitempty"`
	// Complication following the procedure
	Complication []*CodeableConcept `protobuf:"bytes,28,rep,name=complication,proto3" json:"complication,omitempty"`
	// A condition that is a result of the procedure
	ComplicationDetail []*Reference `protobuf:"bytes,29,rep,name=complication_detail,json=complicationDetail,proto3" json:"complication_detail,omitempty"`
	// Instructions for follow up
	FollowUp []*CodeableConcept `protobuf:"bytes,30,rep,name=follow_up,json=followUp,proto3" json:"follow_up,omitempty"`
	// Additional information about the procedure
	Note        []*Annotation            `protobuf:"bytes,31,rep,name=note,proto3" json:"note,omitempty"`
	FocalDevice []*Procedure_FocalDevice `protobuf:"bytes,32,rep,name=focal_device,json=focalDevice,proto3" json:"focal_device,omitempty"`
	// Items used during procedure
	UsedReference []*Reference `protobuf:"bytes,33,rep,name=used_reference,json=usedReference,proto3" json:"used_reference,omitempty"`
	// Coded items used during the procedure
	UsedCode             []*CodeableConcept `protobuf:"bytes,34,rep,name=used_code,json=usedCode,proto3" json:"used_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Procedure) Reset()         { *m = Procedure{} }
func (m *Procedure) String() string { return proto.CompactTextString(m) }
func (*Procedure) ProtoMessage()    {}
func (*Procedure) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{87}
}

func (m *Procedure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Procedure.Unmarshal(m, b)
}
func (m *Procedure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Procedure.Marshal(b, m, deterministic)
}
func (m *Procedure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Procedure.Merge(m, src)
}
func (m *Procedure) XXX_Size() int {
	return xxx_messageInfo_Procedure.Size(m)
}
func (m *Procedure) XXX_DiscardUnknown() {
	xxx_messageInfo_Procedure.DiscardUnknown(m)
}

var xxx_messageInfo_Procedure proto.InternalMessageInfo

func (m *Procedure) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Procedure) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Procedure) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Procedure) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Procedure) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Procedure) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Procedure) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Procedure) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Procedure) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Procedure) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *Procedure) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Procedure) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *Procedure) GetStatus() *EventStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Procedure) GetNotDone() *Boolean {
	if m != nil {
		return m.NotDone
	}
	return nil
}

func (m *Procedure) GetNotDoneReason() *CodeableConcept {
	if m != nil {
		return m.NotDoneReason
	}
	return nil
}

func (m *Procedure) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Procedure) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Procedure) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Procedure) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Procedure) GetPerformed() *Procedure_Performed {
	if m != nil {
		return m.Performed
	}
	return nil
}

func (m *Procedure) GetPerformer() []*Procedure_Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Procedure) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Procedure) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *Procedure) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *Procedure) GetBodySite() []*CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Procedure) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *Procedure) GetReport() []*Reference {
	if m != nil {
		return m.Report
	}
	return nil
}

func (m *Procedure) GetComplication() []*CodeableConcept {
	if m != nil {
		return m.Complication
	}
	return nil
}

func (m *Procedure) GetComplicationDetail() []*Reference {
	if m != nil {
		return m.ComplicationDetail
	}
	return nil
}

func (m *Procedure) GetFollowUp() []*CodeableConcept {
	if m != nil {
		return m.FollowUp
	}
	return nil
}

func (m *Procedure) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *Procedure) GetFocalDevice() []*Procedure_FocalDevice {
	if m != nil {
		return m.FocalDevice
	}
	return nil
}

func (m *Procedure) GetUsedReference() []*Reference {
	if m != nil {
		return m.UsedReference
	}
	return nil
}

func (m *Procedure) GetUsedCode() []*CodeableConcept {
	if m != nil {
		return m.UsedCode
	}
	return nil
}

// Date/Period the procedure was performed
type Procedure_Performed struct {
	// Types that are valid to be assigned to Performed:
	//	*Procedure_Performed_DateTime
	//	*Procedure_Performed_Period
	Performed            isProcedure_Performed_Performed `protobuf_oneof:"performed"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Procedure_Performed) Reset()         { *m = Procedure_Performed{} }
func (m *Procedure_Performed) String() string { return proto.CompactTextString(m) }
func (*Procedure_Performed) ProtoMessage()    {}
func (*Procedure_Performed) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{87, 0}
}

func (m *Procedure_Performed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Procedure_Performed.Unmarshal(m, b)
}
func (m *Procedure_Performed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Procedure_Performed.Marshal(b, m, deterministic)
}
func (m *Procedure_Performed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Procedure_Performed.Merge(m, src)
}
func (m *Procedure_Performed) XXX_Size() int {
	return xxx_messageInfo_Procedure_Performed.Size(m)
}
func (m *Procedure_Performed) XXX_DiscardUnknown() {
	xxx_messageInfo_Procedure_Performed.DiscardUnknown(m)
}

var xxx_messageInfo_Procedure_Performed proto.InternalMessageInfo

type isProcedure_Performed_Performed interface {
	isProcedure_Performed_Performed()
}

type Procedure_Performed_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Procedure_Performed_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Procedure_Performed_DateTime) isProcedure_Performed_Performed() {}

func (*Procedure_Performed_Period) isProcedure_Performed_Performed() {}

func (m *Procedure_Performed) GetPerformed() isProcedure_Performed_Performed {
	if m != nil {
		return m.Performed
	}
	return nil
}

func (m *Procedure_Performed) GetDateTime() *DateTime {
	if x, ok := m.GetPerformed().(*Procedure_Performed_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Procedure_Performed) GetPeriod() *Period {
	if x, ok := m.GetPerformed().(*Procedure_Performed_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Procedure_Performed) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Procedure_Performed_OneofMarshaler, _Procedure_Performed_OneofUnmarshaler, _Procedure_Performed_OneofSizer, []interface{}{
		(*Procedure_Performed_DateTime)(nil),
		(*Procedure_Performed_Period)(nil),
	}
}

func _Procedure_Performed_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Procedure_Performed)
	// performed
	switch x := m.Performed.(type) {
	case *Procedure_Performed_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Procedure_Performed_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Procedure_Performed.Performed has unexpected type %T", x)
	}
	return nil
}

func _Procedure_Performed_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Procedure_Performed)
	switch tag {
	case 1: // performed.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Performed = &Procedure_Performed_DateTime{msg}
		return true, err
	case 2: // performed.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Performed = &Procedure_Performed_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Procedure_Performed_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Procedure_Performed)
	// performed
	switch x := m.Performed.(type) {
	case *Procedure_Performed_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Procedure_Performed_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The people who performed the procedure
type Procedure_Performer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The role the actor was in
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// The reference to the practitioner
	Actor *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	// Organization the device or practitioner was acting for
	OnBehalfOf           *Reference `protobuf:"bytes,6,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Procedure_Performer) Reset()         { *m = Procedure_Performer{} }
func (m *Procedure_Performer) String() string { return proto.CompactTextString(m) }
func (*Procedure_Performer) ProtoMessage()    {}
func (*Procedure_Performer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{87, 1}
}

func (m *Procedure_Performer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Procedure_Performer.Unmarshal(m, b)
}
func (m *Procedure_Performer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Procedure_Performer.Marshal(b, m, deterministic)
}
func (m *Procedure_Performer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Procedure_Performer.Merge(m, src)
}
func (m *Procedure_Performer) XXX_Size() int {
	return xxx_messageInfo_Procedure_Performer.Size(m)
}
func (m *Procedure_Performer) XXX_DiscardUnknown() {
	xxx_messageInfo_Procedure_Performer.DiscardUnknown(m)
}

var xxx_messageInfo_Procedure_Performer proto.InternalMessageInfo

func (m *Procedure_Performer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Procedure_Performer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Procedure_Performer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Procedure_Performer) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Procedure_Performer) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *Procedure_Performer) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Device changed in procedure
type Procedure_FocalDevice struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Kind of change to device
	Action *CodeableConcept `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	// Device that was changed
	Manipulated          *Reference `protobuf:"bytes,5,opt,name=manipulated,proto3" json:"manipulated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Procedure_FocalDevice) Reset()         { *m = Procedure_FocalDevice{} }
func (m *Procedure_FocalDevice) String() string { return proto.CompactTextString(m) }
func (*Procedure_FocalDevice) ProtoMessage()    {}
func (*Procedure_FocalDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{87, 2}
}

func (m *Procedure_FocalDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Procedure_FocalDevice.Unmarshal(m, b)
}
func (m *Procedure_FocalDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Procedure_FocalDevice.Marshal(b, m, deterministic)
}
func (m *Procedure_FocalDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Procedure_FocalDevice.Merge(m, src)
}
func (m *Procedure_FocalDevice) XXX_Size() int {
	return xxx_messageInfo_Procedure_FocalDevice.Size(m)
}
func (m *Procedure_FocalDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_Procedure_FocalDevice.DiscardUnknown(m)
}

var xxx_messageInfo_Procedure_FocalDevice proto.InternalMessageInfo

func (m *Procedure_FocalDevice) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Procedure_FocalDevice) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Procedure_FocalDevice) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Procedure_FocalDevice) GetAction() *CodeableConcept {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Procedure_FocalDevice) GetManipulated() *Reference {
	if m != nil {
		return m.Manipulated
	}
	return nil
}

// Auto-generated from StructureDefinition for ProcedureRequest, last updated
// 2017-04-19T07:44:43.294+10:00. A request for a procedure or diagnostic to be
// performed. See http://hl7.org/fhir/StructureDefinition/ProcedureRequest
type ProcedureRequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifiers assigned to this order
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// What request fulfills
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// What request replaces
	Replaces []*Reference `protobuf:"bytes,12,rep,name=replaces,proto3" json:"replaces,omitempty"`
	// Composite Request ID
	Requisition *Identifier `protobuf:"bytes,13,opt,name=requisition,proto3" json:"requisition,omitempty"`
	// draft | active | suspended | completed | entered-in-error | cancelled
	Status *RequestStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// proposal | plan | order +
	Intent *RequestIntentCode `protobuf:"bytes,15,opt,name=intent,proto3" json:"intent,omitempty"`
	// routine | urgent | asap | stat
	Priority *RequestPriorityCode `protobuf:"bytes,16,opt,name=priority,proto3" json:"priority,omitempty"`
	// True if procedure should not be performed
	DoNotPerform *Boolean `protobuf:"bytes,17,opt,name=do_not_perform,json=doNotPerform,proto3" json:"do_not_perform,omitempty"`
	// Classification of procedure
	Category []*CodeableConcept `protobuf:"bytes,18,rep,name=category,proto3" json:"category,omitempty"`
	// What is being requested/ordered
	Code *CodeableConcept `protobuf:"bytes,19,opt,name=code,proto3" json:"code,omitempty"`
	// Individual the service is ordered for
	Subject *Reference `protobuf:"bytes,20,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or Episode during which request was created
	Context    *Reference                   `protobuf:"bytes,21,opt,name=context,proto3" json:"context,omitempty"`
	Occurrence *ProcedureRequest_Occurrence `protobuf:"bytes,22,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	AsNeeded   *ProcedureRequest_AsNeeded   `protobuf:"bytes,23,opt,name=as_needed,json=asNeeded,proto3" json:"as_needed,omitempty"`
	// Date request signed
	AuthoredOn *DateTime                   `protobuf:"bytes,24,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	Requester  *ProcedureRequest_Requester `protobuf:"bytes,25,opt,name=requester,proto3" json:"requester,omitempty"`
	// Performer role
	PerformerType *CodeableConcept `protobuf:"bytes,26,opt,name=performer_type,json=performerType,proto3" json:"performer_type,omitempty"`
	// Requested perfomer
	Performer *Reference `protobuf:"bytes,27,opt,name=performer,proto3" json:"performer,omitempty"`
	// Explanation/Justification for test
	ReasonCode []*CodeableConcept `protobuf:"bytes,28,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Explanation/Justification for test
	ReasonReference []*Reference `protobuf:"bytes,29,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Additional clinical information
	SupportingInfo []*Reference `protobuf:"bytes,30,rep,name=supporting_info,json=supportingInfo,proto3" json:"supporting_info,omitempty"`
	// Procedure Samples
	Specimen []*Reference `protobuf:"bytes,31,rep,name=specimen,proto3" json:"specimen,omitempty"`
	// Location on Body
	BodySite []*CodeableConcept `protobuf:"bytes,32,rep,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Comments
	Note []*Annotation `protobuf:"bytes,33,rep,name=note,proto3" json:"note,omitempty"`
	// Request provenance
	RelevantHistory      []*Reference `protobuf:"bytes,34,rep,name=relevant_history,json=relevantHistory,proto3" json:"relevant_history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ProcedureRequest) Reset()         { *m = ProcedureRequest{} }
func (m *ProcedureRequest) String() string { return proto.CompactTextString(m) }
func (*ProcedureRequest) ProtoMessage()    {}
func (*ProcedureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{88}
}

func (m *ProcedureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcedureRequest.Unmarshal(m, b)
}
func (m *ProcedureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcedureRequest.Marshal(b, m, deterministic)
}
func (m *ProcedureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcedureRequest.Merge(m, src)
}
func (m *ProcedureRequest) XXX_Size() int {
	return xxx_messageInfo_ProcedureRequest.Size(m)
}
func (m *ProcedureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcedureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProcedureRequest proto.InternalMessageInfo

func (m *ProcedureRequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProcedureRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ProcedureRequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ProcedureRequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ProcedureRequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ProcedureRequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ProcedureRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ProcedureRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ProcedureRequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ProcedureRequest) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *ProcedureRequest) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *ProcedureRequest) GetReplaces() []*Reference {
	if m != nil {
		return m.Replaces
	}
	return nil
}

func (m *ProcedureRequest) GetRequisition() *Identifier {
	if m != nil {
		return m.Requisition
	}
	return nil
}

func (m *ProcedureRequest) GetStatus() *RequestStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ProcedureRequest) GetIntent() *RequestIntentCode {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *ProcedureRequest) GetPriority() *RequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *ProcedureRequest) GetDoNotPerform() *Boolean {
	if m != nil {
		return m.DoNotPerform
	}
	return nil
}

func (m *ProcedureRequest) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ProcedureRequest) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ProcedureRequest) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *ProcedureRequest) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ProcedureRequest) GetOccurrence() *ProcedureRequest_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *ProcedureRequest) GetAsNeeded() *ProcedureRequest_AsNeeded {
	if m != nil {
		return m.AsNeeded
	}
	return nil
}

func (m *ProcedureRequest) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *ProcedureRequest) GetRequester() *ProcedureRequest_Requester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *ProcedureRequest) GetPerformerType() *CodeableConcept {
	if m != nil {
		return m.PerformerType
	}
	return nil
}

func (m *ProcedureRequest) GetPerformer() *Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *ProcedureRequest) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *ProcedureRequest) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *ProcedureRequest) GetSupportingInfo() []*Reference {
	if m != nil {
		return m.SupportingInfo
	}
	return nil
}

func (m *ProcedureRequest) GetSpecimen() []*Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *ProcedureRequest) GetBodySite() []*CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *ProcedureRequest) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *ProcedureRequest) GetRelevantHistory() []*Reference {
	if m != nil {
		return m.RelevantHistory
	}
	return nil
}

// When procedure should occur
type ProcedureRequest_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*ProcedureRequest_Occurrence_DateTime
	//	*ProcedureRequest_Occurrence_Period
	//	*ProcedureRequest_Occurrence_Timing
	Occurrence           isProcedureRequest_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *ProcedureRequest_Occurrence) Reset()         { *m = ProcedureRequest_Occurrence{} }
func (m *ProcedureRequest_Occurrence) String() string { return proto.CompactTextString(m) }
func (*ProcedureRequest_Occurrence) ProtoMessage()    {}
func (*ProcedureRequest_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{88, 0}
}

func (m *ProcedureRequest_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcedureRequest_Occurrence.Unmarshal(m, b)
}
func (m *ProcedureRequest_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcedureRequest_Occurrence.Marshal(b, m, deterministic)
}
func (m *ProcedureRequest_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcedureRequest_Occurrence.Merge(m, src)
}
func (m *ProcedureRequest_Occurrence) XXX_Size() int {
	return xxx_messageInfo_ProcedureRequest_Occurrence.Size(m)
}
func (m *ProcedureRequest_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcedureRequest_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_ProcedureRequest_Occurrence proto.InternalMessageInfo

type isProcedureRequest_Occurrence_Occurrence interface {
	isProcedureRequest_Occurrence_Occurrence()
}

type ProcedureRequest_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ProcedureRequest_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type ProcedureRequest_Occurrence_Timing struct {
	Timing *Timing `protobuf:"bytes,3,opt,name=timing,proto3,oneof"`
}

func (*ProcedureRequest_Occurrence_DateTime) isProcedureRequest_Occurrence_Occurrence() {}

func (*ProcedureRequest_Occurrence_Period) isProcedureRequest_Occurrence_Occurrence() {}

func (*ProcedureRequest_Occurrence_Timing) isProcedureRequest_Occurrence_Occurrence() {}

func (m *ProcedureRequest_Occurrence) GetOccurrence() isProcedureRequest_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *ProcedureRequest_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*ProcedureRequest_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ProcedureRequest_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*ProcedureRequest_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

func (m *ProcedureRequest_Occurrence) GetTiming() *Timing {
	if x, ok := m.GetOccurrence().(*ProcedureRequest_Occurrence_Timing); ok {
		return x.Timing
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProcedureRequest_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProcedureRequest_Occurrence_OneofMarshaler, _ProcedureRequest_Occurrence_OneofUnmarshaler, _ProcedureRequest_Occurrence_OneofSizer, []interface{}{
		(*ProcedureRequest_Occurrence_DateTime)(nil),
		(*ProcedureRequest_Occurrence_Period)(nil),
		(*ProcedureRequest_Occurrence_Timing)(nil),
	}
}

func _ProcedureRequest_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProcedureRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *ProcedureRequest_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ProcedureRequest_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *ProcedureRequest_Occurrence_Timing:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProcedureRequest_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _ProcedureRequest_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProcedureRequest_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ProcedureRequest_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ProcedureRequest_Occurrence_Period{msg}
		return true, err
	case 3: // occurrence.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ProcedureRequest_Occurrence_Timing{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProcedureRequest_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProcedureRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *ProcedureRequest_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ProcedureRequest_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ProcedureRequest_Occurrence_Timing:
		s := proto.Size(x.Timing)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Preconditions for procedure or diagnostic
type ProcedureRequest_AsNeeded struct {
	// Types that are valid to be assigned to AsNeeded:
	//	*ProcedureRequest_AsNeeded_Boolean
	//	*ProcedureRequest_AsNeeded_CodeableConcept
	AsNeeded             isProcedureRequest_AsNeeded_AsNeeded `protobuf_oneof:"as_needed"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ProcedureRequest_AsNeeded) Reset()         { *m = ProcedureRequest_AsNeeded{} }
func (m *ProcedureRequest_AsNeeded) String() string { return proto.CompactTextString(m) }
func (*ProcedureRequest_AsNeeded) ProtoMessage()    {}
func (*ProcedureRequest_AsNeeded) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{88, 1}
}

func (m *ProcedureRequest_AsNeeded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcedureRequest_AsNeeded.Unmarshal(m, b)
}
func (m *ProcedureRequest_AsNeeded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcedureRequest_AsNeeded.Marshal(b, m, deterministic)
}
func (m *ProcedureRequest_AsNeeded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcedureRequest_AsNeeded.Merge(m, src)
}
func (m *ProcedureRequest_AsNeeded) XXX_Size() int {
	return xxx_messageInfo_ProcedureRequest_AsNeeded.Size(m)
}
func (m *ProcedureRequest_AsNeeded) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcedureRequest_AsNeeded.DiscardUnknown(m)
}

var xxx_messageInfo_ProcedureRequest_AsNeeded proto.InternalMessageInfo

type isProcedureRequest_AsNeeded_AsNeeded interface {
	isProcedureRequest_AsNeeded_AsNeeded()
}

type ProcedureRequest_AsNeeded_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type ProcedureRequest_AsNeeded_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*ProcedureRequest_AsNeeded_Boolean) isProcedureRequest_AsNeeded_AsNeeded() {}

func (*ProcedureRequest_AsNeeded_CodeableConcept) isProcedureRequest_AsNeeded_AsNeeded() {}

func (m *ProcedureRequest_AsNeeded) GetAsNeeded() isProcedureRequest_AsNeeded_AsNeeded {
	if m != nil {
		return m.AsNeeded
	}
	return nil
}

func (m *ProcedureRequest_AsNeeded) GetBoolean() *Boolean {
	if x, ok := m.GetAsNeeded().(*ProcedureRequest_AsNeeded_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *ProcedureRequest_AsNeeded) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetAsNeeded().(*ProcedureRequest_AsNeeded_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProcedureRequest_AsNeeded) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProcedureRequest_AsNeeded_OneofMarshaler, _ProcedureRequest_AsNeeded_OneofUnmarshaler, _ProcedureRequest_AsNeeded_OneofSizer, []interface{}{
		(*ProcedureRequest_AsNeeded_Boolean)(nil),
		(*ProcedureRequest_AsNeeded_CodeableConcept)(nil),
	}
}

func _ProcedureRequest_AsNeeded_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProcedureRequest_AsNeeded)
	// as_needed
	switch x := m.AsNeeded.(type) {
	case *ProcedureRequest_AsNeeded_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *ProcedureRequest_AsNeeded_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProcedureRequest_AsNeeded.AsNeeded has unexpected type %T", x)
	}
	return nil
}

func _ProcedureRequest_AsNeeded_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProcedureRequest_AsNeeded)
	switch tag {
	case 1: // as_needed.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.AsNeeded = &ProcedureRequest_AsNeeded_Boolean{msg}
		return true, err
	case 2: // as_needed.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.AsNeeded = &ProcedureRequest_AsNeeded_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProcedureRequest_AsNeeded_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProcedureRequest_AsNeeded)
	// as_needed
	switch x := m.AsNeeded.(type) {
	case *ProcedureRequest_AsNeeded_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ProcedureRequest_AsNeeded_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who/what is requesting procedure or diagnostic
type ProcedureRequest_Requester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual making the request
	Agent *Reference `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// Organization agent is acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProcedureRequest_Requester) Reset()         { *m = ProcedureRequest_Requester{} }
func (m *ProcedureRequest_Requester) String() string { return proto.CompactTextString(m) }
func (*ProcedureRequest_Requester) ProtoMessage()    {}
func (*ProcedureRequest_Requester) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{88, 2}
}

func (m *ProcedureRequest_Requester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcedureRequest_Requester.Unmarshal(m, b)
}
func (m *ProcedureRequest_Requester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcedureRequest_Requester.Marshal(b, m, deterministic)
}
func (m *ProcedureRequest_Requester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcedureRequest_Requester.Merge(m, src)
}
func (m *ProcedureRequest_Requester) XXX_Size() int {
	return xxx_messageInfo_ProcedureRequest_Requester.Size(m)
}
func (m *ProcedureRequest_Requester) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcedureRequest_Requester.DiscardUnknown(m)
}

var xxx_messageInfo_ProcedureRequest_Requester proto.InternalMessageInfo

func (m *ProcedureRequest_Requester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProcedureRequest_Requester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ProcedureRequest_Requester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ProcedureRequest_Requester) GetAgent() *Reference {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *ProcedureRequest_Requester) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Auto-generated from StructureDefinition for ProcessRequest, last updated
// 2017-04-19T07:44:43.294+10:00. Request to perform some action on or in
// regards to an existing resource. See
// http://hl7.org/fhir/StructureDefinition/ProcessRequest
type ProcessRequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// cancel | poll | reprocess | status
	Action *ActionListCode `protobuf:"bytes,11,opt,name=action,proto3" json:"action,omitempty"`
	// Party which is the target of the request
	Target *Reference `protobuf:"bytes,12,opt,name=target,proto3" json:"target,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	// Responsible practitioner
	Provider *Reference `protobuf:"bytes,14,opt,name=provider,proto3" json:"provider,omitempty"`
	// Responsible organization
	Organization *Reference `protobuf:"bytes,15,opt,name=organization,proto3" json:"organization,omitempty"`
	// Reference to the Request resource
	Request *Reference `protobuf:"bytes,16,opt,name=request,proto3" json:"request,omitempty"`
	// Reference to the Response resource
	Response *Reference `protobuf:"bytes,17,opt,name=response,proto3" json:"response,omitempty"`
	// Remove history
	Nullify *Boolean `protobuf:"bytes,18,opt,name=nullify,proto3" json:"nullify,omitempty"`
	// Reference number/string
	Reference *String                 `protobuf:"bytes,19,opt,name=reference,proto3" json:"reference,omitempty"`
	Item      []*ProcessRequest_Items `protobuf:"bytes,20,rep,name=item,proto3" json:"item,omitempty"`
	// Resource type(s) to include
	Include []*String `protobuf:"bytes,21,rep,name=include,proto3" json:"include,omitempty"`
	// Resource type(s) to exclude
	Exclude []*String `protobuf:"bytes,22,rep,name=exclude,proto3" json:"exclude,omitempty"`
	// Selection period
	Period               *Period  `protobuf:"bytes,23,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessRequest) Reset()         { *m = ProcessRequest{} }
func (m *ProcessRequest) String() string { return proto.CompactTextString(m) }
func (*ProcessRequest) ProtoMessage()    {}
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{89}
}

func (m *ProcessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessRequest.Unmarshal(m, b)
}
func (m *ProcessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessRequest.Marshal(b, m, deterministic)
}
func (m *ProcessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessRequest.Merge(m, src)
}
func (m *ProcessRequest) XXX_Size() int {
	return xxx_messageInfo_ProcessRequest.Size(m)
}
func (m *ProcessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessRequest proto.InternalMessageInfo

func (m *ProcessRequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProcessRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ProcessRequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ProcessRequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ProcessRequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ProcessRequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ProcessRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ProcessRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ProcessRequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ProcessRequest) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ProcessRequest) GetAction() *ActionListCode {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ProcessRequest) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ProcessRequest) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ProcessRequest) GetProvider() *Reference {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *ProcessRequest) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *ProcessRequest) GetRequest() *Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ProcessRequest) GetResponse() *Reference {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *ProcessRequest) GetNullify() *Boolean {
	if m != nil {
		return m.Nullify
	}
	return nil
}

func (m *ProcessRequest) GetReference() *String {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *ProcessRequest) GetItem() []*ProcessRequest_Items {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ProcessRequest) GetInclude() []*String {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *ProcessRequest) GetExclude() []*String {
	if m != nil {
		return m.Exclude
	}
	return nil
}

func (m *ProcessRequest) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// Items to re-adjudicate
type ProcessRequest_Items struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Service instance
	SequenceLinkId       *Integer `protobuf:"bytes,4,opt,name=sequence_link_id,json=sequenceLinkId,proto3" json:"sequence_link_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessRequest_Items) Reset()         { *m = ProcessRequest_Items{} }
func (m *ProcessRequest_Items) String() string { return proto.CompactTextString(m) }
func (*ProcessRequest_Items) ProtoMessage()    {}
func (*ProcessRequest_Items) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{89, 0}
}

func (m *ProcessRequest_Items) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessRequest_Items.Unmarshal(m, b)
}
func (m *ProcessRequest_Items) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessRequest_Items.Marshal(b, m, deterministic)
}
func (m *ProcessRequest_Items) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessRequest_Items.Merge(m, src)
}
func (m *ProcessRequest_Items) XXX_Size() int {
	return xxx_messageInfo_ProcessRequest_Items.Size(m)
}
func (m *ProcessRequest_Items) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessRequest_Items.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessRequest_Items proto.InternalMessageInfo

func (m *ProcessRequest_Items) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProcessRequest_Items) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ProcessRequest_Items) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ProcessRequest_Items) GetSequenceLinkId() *Integer {
	if m != nil {
		return m.SequenceLinkId
	}
	return nil
}

// Auto-generated from StructureDefinition for ProcessResponse, last updated
// 2017-04-19T07:44:43.294+10:00. ProcessResponse resource. See
// http://hl7.org/fhir/StructureDefinition/ProcessResponse
type ProcessResponse struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Creation date
	Created *DateTime `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	// Authoring Organization
	Organization *Reference `protobuf:"bytes,12,opt,name=organization,proto3" json:"organization,omitempty"`
	// Request reference
	Request *Reference `protobuf:"bytes,13,opt,name=request,proto3" json:"request,omitempty"`
	// Processing outcome
	Outcome *CodeableConcept `protobuf:"bytes,14,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Disposition Message
	Disposition *String `protobuf:"bytes,15,opt,name=disposition,proto3" json:"disposition,omitempty"`
	// Responsible Practitioner
	RequestProvider *Reference `protobuf:"bytes,16,opt,name=request_provider,json=requestProvider,proto3" json:"request_provider,omitempty"`
	// Responsible organization
	RequestOrganization *Reference `protobuf:"bytes,17,opt,name=request_organization,json=requestOrganization,proto3" json:"request_organization,omitempty"`
	// Printed Form Identifier
	Form        *CodeableConcept               `protobuf:"bytes,18,opt,name=form,proto3" json:"form,omitempty"`
	ProcessNote []*ProcessResponse_ProcessNote `protobuf:"bytes,19,rep,name=process_note,json=processNote,proto3" json:"process_note,omitempty"`
	// Error code
	Error []*CodeableConcept `protobuf:"bytes,20,rep,name=error,proto3" json:"error,omitempty"`
	// Request for additional information
	CommunicationRequest []*Reference `protobuf:"bytes,21,rep,name=communication_request,json=communicationRequest,proto3" json:"communication_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ProcessResponse) Reset()         { *m = ProcessResponse{} }
func (m *ProcessResponse) String() string { return proto.CompactTextString(m) }
func (*ProcessResponse) ProtoMessage()    {}
func (*ProcessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{90}
}

func (m *ProcessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessResponse.Unmarshal(m, b)
}
func (m *ProcessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessResponse.Marshal(b, m, deterministic)
}
func (m *ProcessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessResponse.Merge(m, src)
}
func (m *ProcessResponse) XXX_Size() int {
	return xxx_messageInfo_ProcessResponse.Size(m)
}
func (m *ProcessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessResponse proto.InternalMessageInfo

func (m *ProcessResponse) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProcessResponse) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ProcessResponse) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ProcessResponse) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ProcessResponse) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ProcessResponse) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ProcessResponse) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ProcessResponse) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ProcessResponse) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ProcessResponse) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ProcessResponse) GetCreated() *DateTime {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ProcessResponse) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *ProcessResponse) GetRequest() *Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ProcessResponse) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *ProcessResponse) GetDisposition() *String {
	if m != nil {
		return m.Disposition
	}
	return nil
}

func (m *ProcessResponse) GetRequestProvider() *Reference {
	if m != nil {
		return m.RequestProvider
	}
	return nil
}

func (m *ProcessResponse) GetRequestOrganization() *Reference {
	if m != nil {
		return m.RequestOrganization
	}
	return nil
}

func (m *ProcessResponse) GetForm() *CodeableConcept {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *ProcessResponse) GetProcessNote() []*ProcessResponse_ProcessNote {
	if m != nil {
		return m.ProcessNote
	}
	return nil
}

func (m *ProcessResponse) GetError() []*CodeableConcept {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ProcessResponse) GetCommunicationRequest() []*Reference {
	if m != nil {
		return m.CommunicationRequest
	}
	return nil
}

// Processing comments or additional requirements
type ProcessResponse_ProcessNote struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// display | print | printoper
	Type *CodeableConcept `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Comment on the processing
	Text                 *String  `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessResponse_ProcessNote) Reset()         { *m = ProcessResponse_ProcessNote{} }
func (m *ProcessResponse_ProcessNote) String() string { return proto.CompactTextString(m) }
func (*ProcessResponse_ProcessNote) ProtoMessage()    {}
func (*ProcessResponse_ProcessNote) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{90, 0}
}

func (m *ProcessResponse_ProcessNote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessResponse_ProcessNote.Unmarshal(m, b)
}
func (m *ProcessResponse_ProcessNote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessResponse_ProcessNote.Marshal(b, m, deterministic)
}
func (m *ProcessResponse_ProcessNote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessResponse_ProcessNote.Merge(m, src)
}
func (m *ProcessResponse_ProcessNote) XXX_Size() int {
	return xxx_messageInfo_ProcessResponse_ProcessNote.Size(m)
}
func (m *ProcessResponse_ProcessNote) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessResponse_ProcessNote.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessResponse_ProcessNote proto.InternalMessageInfo

func (m *ProcessResponse_ProcessNote) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProcessResponse_ProcessNote) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ProcessResponse_ProcessNote) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ProcessResponse_ProcessNote) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ProcessResponse_ProcessNote) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Auto-generated from StructureDefinition for Provenance, last updated
// 2017-04-19T07:44:43.294+10:00. Who, What, When for a set of resources. See
// http://hl7.org/fhir/StructureDefinition/Provenance
type Provenance struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Target Reference(s) (usually version specific)
	Target []*Reference `protobuf:"bytes,9,rep,name=target,proto3" json:"target,omitempty"`
	// When the activity occurred
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3" json:"period,omitempty"`
	// When the activity was recorded / updated
	Recorded *Instant `protobuf:"bytes,11,opt,name=recorded,proto3" json:"recorded,omitempty"`
	// Policy or plan the activity was defined by
	Policy []*Uri `protobuf:"bytes,12,rep,name=policy,proto3" json:"policy,omitempty"`
	// Where the activity occurred, if relevant
	Location *Reference `protobuf:"bytes,13,opt,name=location,proto3" json:"location,omitempty"`
	// Reason the activity is occurring
	Reason []*Coding `protobuf:"bytes,14,rep,name=reason,proto3" json:"reason,omitempty"`
	// Activity that occurred
	Activity *Coding              `protobuf:"bytes,15,opt,name=activity,proto3" json:"activity,omitempty"`
	Agent    []*Provenance_Agent  `protobuf:"bytes,16,rep,name=agent,proto3" json:"agent,omitempty"`
	Entity   []*Provenance_Entity `protobuf:"bytes,17,rep,name=entity,proto3" json:"entity,omitempty"`
	// Signature on target
	Signature            []*Signature `protobuf:"bytes,18,rep,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Provenance) Reset()         { *m = Provenance{} }
func (m *Provenance) String() string { return proto.CompactTextString(m) }
func (*Provenance) ProtoMessage()    {}
func (*Provenance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{91}
}

func (m *Provenance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provenance.Unmarshal(m, b)
}
func (m *Provenance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provenance.Marshal(b, m, deterministic)
}
func (m *Provenance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provenance.Merge(m, src)
}
func (m *Provenance) XXX_Size() int {
	return xxx_messageInfo_Provenance.Size(m)
}
func (m *Provenance) XXX_DiscardUnknown() {
	xxx_messageInfo_Provenance.DiscardUnknown(m)
}

var xxx_messageInfo_Provenance proto.InternalMessageInfo

func (m *Provenance) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Provenance) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Provenance) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Provenance) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Provenance) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Provenance) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Provenance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Provenance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Provenance) GetTarget() []*Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Provenance) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Provenance) GetRecorded() *Instant {
	if m != nil {
		return m.Recorded
	}
	return nil
}

func (m *Provenance) GetPolicy() []*Uri {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *Provenance) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Provenance) GetReason() []*Coding {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Provenance) GetActivity() *Coding {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *Provenance) GetAgent() []*Provenance_Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *Provenance) GetEntity() []*Provenance_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *Provenance) GetSignature() []*Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Actor involved
type Provenance_Agent struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What the agents role was
	Role       []*CodeableConcept           `protobuf:"bytes,4,rep,name=role,proto3" json:"role,omitempty"`
	Who        *Provenance_Agent_Who        `protobuf:"bytes,5,opt,name=who,proto3" json:"who,omitempty"`
	OnBehalfOf *Provenance_Agent_OnBehalfOf `protobuf:"bytes,6,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	// Type of relationship between agents
	RelatedAgentType     *CodeableConcept `protobuf:"bytes,7,opt,name=related_agent_type,json=relatedAgentType,proto3" json:"related_agent_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Provenance_Agent) Reset()         { *m = Provenance_Agent{} }
func (m *Provenance_Agent) String() string { return proto.CompactTextString(m) }
func (*Provenance_Agent) ProtoMessage()    {}
func (*Provenance_Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{91, 0}
}

func (m *Provenance_Agent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provenance_Agent.Unmarshal(m, b)
}
func (m *Provenance_Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provenance_Agent.Marshal(b, m, deterministic)
}
func (m *Provenance_Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provenance_Agent.Merge(m, src)
}
func (m *Provenance_Agent) XXX_Size() int {
	return xxx_messageInfo_Provenance_Agent.Size(m)
}
func (m *Provenance_Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_Provenance_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_Provenance_Agent proto.InternalMessageInfo

func (m *Provenance_Agent) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Provenance_Agent) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Provenance_Agent) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Provenance_Agent) GetRole() []*CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Provenance_Agent) GetWho() *Provenance_Agent_Who {
	if m != nil {
		return m.Who
	}
	return nil
}

func (m *Provenance_Agent) GetOnBehalfOf() *Provenance_Agent_OnBehalfOf {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

func (m *Provenance_Agent) GetRelatedAgentType() *CodeableConcept {
	if m != nil {
		return m.RelatedAgentType
	}
	return nil
}

// Who participated
type Provenance_Agent_Who struct {
	// Types that are valid to be assigned to Who:
	//	*Provenance_Agent_Who_Uri
	//	*Provenance_Agent_Who_Reference
	Who                  isProvenance_Agent_Who_Who `protobuf_oneof:"who"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Provenance_Agent_Who) Reset()         { *m = Provenance_Agent_Who{} }
func (m *Provenance_Agent_Who) String() string { return proto.CompactTextString(m) }
func (*Provenance_Agent_Who) ProtoMessage()    {}
func (*Provenance_Agent_Who) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{91, 0, 0}
}

func (m *Provenance_Agent_Who) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provenance_Agent_Who.Unmarshal(m, b)
}
func (m *Provenance_Agent_Who) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provenance_Agent_Who.Marshal(b, m, deterministic)
}
func (m *Provenance_Agent_Who) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provenance_Agent_Who.Merge(m, src)
}
func (m *Provenance_Agent_Who) XXX_Size() int {
	return xxx_messageInfo_Provenance_Agent_Who.Size(m)
}
func (m *Provenance_Agent_Who) XXX_DiscardUnknown() {
	xxx_messageInfo_Provenance_Agent_Who.DiscardUnknown(m)
}

var xxx_messageInfo_Provenance_Agent_Who proto.InternalMessageInfo

type isProvenance_Agent_Who_Who interface {
	isProvenance_Agent_Who_Who()
}

type Provenance_Agent_Who_Uri struct {
	Uri *Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

type Provenance_Agent_Who_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Provenance_Agent_Who_Uri) isProvenance_Agent_Who_Who() {}

func (*Provenance_Agent_Who_Reference) isProvenance_Agent_Who_Who() {}

func (m *Provenance_Agent_Who) GetWho() isProvenance_Agent_Who_Who {
	if m != nil {
		return m.Who
	}
	return nil
}

func (m *Provenance_Agent_Who) GetUri() *Uri {
	if x, ok := m.GetWho().(*Provenance_Agent_Who_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Provenance_Agent_Who) GetReference() *Reference {
	if x, ok := m.GetWho().(*Provenance_Agent_Who_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Provenance_Agent_Who) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Provenance_Agent_Who_OneofMarshaler, _Provenance_Agent_Who_OneofUnmarshaler, _Provenance_Agent_Who_OneofSizer, []interface{}{
		(*Provenance_Agent_Who_Uri)(nil),
		(*Provenance_Agent_Who_Reference)(nil),
	}
}

func _Provenance_Agent_Who_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Provenance_Agent_Who)
	// who
	switch x := m.Who.(type) {
	case *Provenance_Agent_Who_Uri:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Provenance_Agent_Who_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Provenance_Agent_Who.Who has unexpected type %T", x)
	}
	return nil
}

func _Provenance_Agent_Who_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Provenance_Agent_Who)
	switch tag {
	case 1: // who.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Who = &Provenance_Agent_Who_Uri{msg}
		return true, err
	case 2: // who.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Who = &Provenance_Agent_Who_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Provenance_Agent_Who_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Provenance_Agent_Who)
	// who
	switch x := m.Who.(type) {
	case *Provenance_Agent_Who_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Provenance_Agent_Who_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who the agent is representing
type Provenance_Agent_OnBehalfOf struct {
	// Types that are valid to be assigned to OnBehalfOf:
	//	*Provenance_Agent_OnBehalfOf_Uri
	//	*Provenance_Agent_OnBehalfOf_Reference
	OnBehalfOf           isProvenance_Agent_OnBehalfOf_OnBehalfOf `protobuf_oneof:"on_behalf_of"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *Provenance_Agent_OnBehalfOf) Reset()         { *m = Provenance_Agent_OnBehalfOf{} }
func (m *Provenance_Agent_OnBehalfOf) String() string { return proto.CompactTextString(m) }
func (*Provenance_Agent_OnBehalfOf) ProtoMessage()    {}
func (*Provenance_Agent_OnBehalfOf) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{91, 0, 1}
}

func (m *Provenance_Agent_OnBehalfOf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provenance_Agent_OnBehalfOf.Unmarshal(m, b)
}
func (m *Provenance_Agent_OnBehalfOf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provenance_Agent_OnBehalfOf.Marshal(b, m, deterministic)
}
func (m *Provenance_Agent_OnBehalfOf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provenance_Agent_OnBehalfOf.Merge(m, src)
}
func (m *Provenance_Agent_OnBehalfOf) XXX_Size() int {
	return xxx_messageInfo_Provenance_Agent_OnBehalfOf.Size(m)
}
func (m *Provenance_Agent_OnBehalfOf) XXX_DiscardUnknown() {
	xxx_messageInfo_Provenance_Agent_OnBehalfOf.DiscardUnknown(m)
}

var xxx_messageInfo_Provenance_Agent_OnBehalfOf proto.InternalMessageInfo

type isProvenance_Agent_OnBehalfOf_OnBehalfOf interface {
	isProvenance_Agent_OnBehalfOf_OnBehalfOf()
}

type Provenance_Agent_OnBehalfOf_Uri struct {
	Uri *Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

type Provenance_Agent_OnBehalfOf_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Provenance_Agent_OnBehalfOf_Uri) isProvenance_Agent_OnBehalfOf_OnBehalfOf() {}

func (*Provenance_Agent_OnBehalfOf_Reference) isProvenance_Agent_OnBehalfOf_OnBehalfOf() {}

func (m *Provenance_Agent_OnBehalfOf) GetOnBehalfOf() isProvenance_Agent_OnBehalfOf_OnBehalfOf {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

func (m *Provenance_Agent_OnBehalfOf) GetUri() *Uri {
	if x, ok := m.GetOnBehalfOf().(*Provenance_Agent_OnBehalfOf_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Provenance_Agent_OnBehalfOf) GetReference() *Reference {
	if x, ok := m.GetOnBehalfOf().(*Provenance_Agent_OnBehalfOf_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Provenance_Agent_OnBehalfOf) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Provenance_Agent_OnBehalfOf_OneofMarshaler, _Provenance_Agent_OnBehalfOf_OneofUnmarshaler, _Provenance_Agent_OnBehalfOf_OneofSizer, []interface{}{
		(*Provenance_Agent_OnBehalfOf_Uri)(nil),
		(*Provenance_Agent_OnBehalfOf_Reference)(nil),
	}
}

func _Provenance_Agent_OnBehalfOf_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Provenance_Agent_OnBehalfOf)
	// on_behalf_of
	switch x := m.OnBehalfOf.(type) {
	case *Provenance_Agent_OnBehalfOf_Uri:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Provenance_Agent_OnBehalfOf_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Provenance_Agent_OnBehalfOf.OnBehalfOf has unexpected type %T", x)
	}
	return nil
}

func _Provenance_Agent_OnBehalfOf_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Provenance_Agent_OnBehalfOf)
	switch tag {
	case 1: // on_behalf_of.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.OnBehalfOf = &Provenance_Agent_OnBehalfOf_Uri{msg}
		return true, err
	case 2: // on_behalf_of.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.OnBehalfOf = &Provenance_Agent_OnBehalfOf_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Provenance_Agent_OnBehalfOf_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Provenance_Agent_OnBehalfOf)
	// on_behalf_of
	switch x := m.OnBehalfOf.(type) {
	case *Provenance_Agent_OnBehalfOf_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Provenance_Agent_OnBehalfOf_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// An entity used in this activity
type Provenance_Entity struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// derivation | revision | quotation | source | removal
	Role *ProvenanceEntityRoleCode `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	What *Provenance_Entity_What   `protobuf:"bytes,5,opt,name=what,proto3" json:"what,omitempty"`
	// Entity is attributed to this agent
	Agent                []*Provenance_Agent `protobuf:"bytes,6,rep,name=agent,proto3" json:"agent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Provenance_Entity) Reset()         { *m = Provenance_Entity{} }
func (m *Provenance_Entity) String() string { return proto.CompactTextString(m) }
func (*Provenance_Entity) ProtoMessage()    {}
func (*Provenance_Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{91, 1}
}

func (m *Provenance_Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provenance_Entity.Unmarshal(m, b)
}
func (m *Provenance_Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provenance_Entity.Marshal(b, m, deterministic)
}
func (m *Provenance_Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provenance_Entity.Merge(m, src)
}
func (m *Provenance_Entity) XXX_Size() int {
	return xxx_messageInfo_Provenance_Entity.Size(m)
}
func (m *Provenance_Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Provenance_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Provenance_Entity proto.InternalMessageInfo

func (m *Provenance_Entity) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Provenance_Entity) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Provenance_Entity) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Provenance_Entity) GetRole() *ProvenanceEntityRoleCode {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Provenance_Entity) GetWhat() *Provenance_Entity_What {
	if m != nil {
		return m.What
	}
	return nil
}

func (m *Provenance_Entity) GetAgent() []*Provenance_Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

// Identity of entity
type Provenance_Entity_What struct {
	// Types that are valid to be assigned to What:
	//	*Provenance_Entity_What_Uri
	//	*Provenance_Entity_What_Reference
	//	*Provenance_Entity_What_Identifier
	What                 isProvenance_Entity_What_What `protobuf_oneof:"what"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Provenance_Entity_What) Reset()         { *m = Provenance_Entity_What{} }
func (m *Provenance_Entity_What) String() string { return proto.CompactTextString(m) }
func (*Provenance_Entity_What) ProtoMessage()    {}
func (*Provenance_Entity_What) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{91, 1, 0}
}

func (m *Provenance_Entity_What) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provenance_Entity_What.Unmarshal(m, b)
}
func (m *Provenance_Entity_What) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provenance_Entity_What.Marshal(b, m, deterministic)
}
func (m *Provenance_Entity_What) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provenance_Entity_What.Merge(m, src)
}
func (m *Provenance_Entity_What) XXX_Size() int {
	return xxx_messageInfo_Provenance_Entity_What.Size(m)
}
func (m *Provenance_Entity_What) XXX_DiscardUnknown() {
	xxx_messageInfo_Provenance_Entity_What.DiscardUnknown(m)
}

var xxx_messageInfo_Provenance_Entity_What proto.InternalMessageInfo

type isProvenance_Entity_What_What interface {
	isProvenance_Entity_What_What()
}

type Provenance_Entity_What_Uri struct {
	Uri *Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

type Provenance_Entity_What_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

type Provenance_Entity_What_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,3,opt,name=identifier,proto3,oneof"`
}

func (*Provenance_Entity_What_Uri) isProvenance_Entity_What_What() {}

func (*Provenance_Entity_What_Reference) isProvenance_Entity_What_What() {}

func (*Provenance_Entity_What_Identifier) isProvenance_Entity_What_What() {}

func (m *Provenance_Entity_What) GetWhat() isProvenance_Entity_What_What {
	if m != nil {
		return m.What
	}
	return nil
}

func (m *Provenance_Entity_What) GetUri() *Uri {
	if x, ok := m.GetWhat().(*Provenance_Entity_What_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Provenance_Entity_What) GetReference() *Reference {
	if x, ok := m.GetWhat().(*Provenance_Entity_What_Reference); ok {
		return x.Reference
	}
	return nil
}

func (m *Provenance_Entity_What) GetIdentifier() *Identifier {
	if x, ok := m.GetWhat().(*Provenance_Entity_What_Identifier); ok {
		return x.Identifier
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Provenance_Entity_What) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Provenance_Entity_What_OneofMarshaler, _Provenance_Entity_What_OneofUnmarshaler, _Provenance_Entity_What_OneofSizer, []interface{}{
		(*Provenance_Entity_What_Uri)(nil),
		(*Provenance_Entity_What_Reference)(nil),
		(*Provenance_Entity_What_Identifier)(nil),
	}
}

func _Provenance_Entity_What_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Provenance_Entity_What)
	// what
	switch x := m.What.(type) {
	case *Provenance_Entity_What_Uri:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Provenance_Entity_What_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case *Provenance_Entity_What_Identifier:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Provenance_Entity_What.What has unexpected type %T", x)
	}
	return nil
}

func _Provenance_Entity_What_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Provenance_Entity_What)
	switch tag {
	case 1: // what.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.What = &Provenance_Entity_What_Uri{msg}
		return true, err
	case 2: // what.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.What = &Provenance_Entity_What_Reference{msg}
		return true, err
	case 3: // what.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.What = &Provenance_Entity_What_Identifier{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Provenance_Entity_What_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Provenance_Entity_What)
	// what
	switch x := m.What.(type) {
	case *Provenance_Entity_What_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Provenance_Entity_What_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Provenance_Entity_What_Identifier:
		s := proto.Size(x.Identifier)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Questionnaire, last updated
// 2017-04-19T07:44:43.294+10:00. A structured set of questions. See
// http://hl7.org/fhir/StructureDefinition/Questionnaire
type Questionnaire struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this questionnaire (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the questionnaire
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the questionnaire
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this questionnaire (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this questionnaire (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Natural language description of the questionnaire
	Description *Markdown `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Why this questionnaire is defined
	Purpose *Markdown `protobuf:"bytes,19,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// When the questionnaire was approved by publisher
	ApprovalDate *Date `protobuf:"bytes,20,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	// When the questionnaire was last reviewed
	LastReviewDate *Date `protobuf:"bytes,21,opt,name=last_review_date,json=lastReviewDate,proto3" json:"last_review_date,omitempty"`
	// When the questionnaire is expected to be used
	EffectivePeriod *Period `protobuf:"bytes,22,opt,name=effective_period,json=effectivePeriod,proto3" json:"effective_period,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,23,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for questionnaire (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,24,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,25,rep,name=contact,proto3" json:"contact,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,26,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Concept that represents the overall questionnaire
	Code []*Coding `protobuf:"bytes,27,rep,name=code,proto3" json:"code,omitempty"`
	// Resource that can be subject of QuestionnaireResponse
	SubjectType          []*ResourceTypeCode   `protobuf:"bytes,28,rep,name=subject_type,json=subjectType,proto3" json:"subject_type,omitempty"`
	Item                 []*Questionnaire_Item `protobuf:"bytes,29,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Questionnaire) Reset()         { *m = Questionnaire{} }
func (m *Questionnaire) String() string { return proto.CompactTextString(m) }
func (*Questionnaire) ProtoMessage()    {}
func (*Questionnaire) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{92}
}

func (m *Questionnaire) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Questionnaire.Unmarshal(m, b)
}
func (m *Questionnaire) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Questionnaire.Marshal(b, m, deterministic)
}
func (m *Questionnaire) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Questionnaire.Merge(m, src)
}
func (m *Questionnaire) XXX_Size() int {
	return xxx_messageInfo_Questionnaire.Size(m)
}
func (m *Questionnaire) XXX_DiscardUnknown() {
	xxx_messageInfo_Questionnaire.DiscardUnknown(m)
}

var xxx_messageInfo_Questionnaire proto.InternalMessageInfo

func (m *Questionnaire) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Questionnaire) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Questionnaire) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Questionnaire) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Questionnaire) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Questionnaire) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Questionnaire) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Questionnaire) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Questionnaire) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Questionnaire) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Questionnaire) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Questionnaire) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Questionnaire) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Questionnaire) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Questionnaire) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *Questionnaire) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Questionnaire) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *Questionnaire) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Questionnaire) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *Questionnaire) GetApprovalDate() *Date {
	if m != nil {
		return m.ApprovalDate
	}
	return nil
}

func (m *Questionnaire) GetLastReviewDate() *Date {
	if m != nil {
		return m.LastReviewDate
	}
	return nil
}

func (m *Questionnaire) GetEffectivePeriod() *Period {
	if m != nil {
		return m.EffectivePeriod
	}
	return nil
}

func (m *Questionnaire) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *Questionnaire) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *Questionnaire) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Questionnaire) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *Questionnaire) GetCode() []*Coding {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Questionnaire) GetSubjectType() []*ResourceTypeCode {
	if m != nil {
		return m.SubjectType
	}
	return nil
}

func (m *Questionnaire) GetItem() []*Questionnaire_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

// Questions and sections within the Questionnaire
type Questionnaire_Item struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique id for item in questionnaire
	LinkId *String `protobuf:"bytes,4,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	// ElementDefinition - details for the item
	Definition *Uri `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	// Corresponding concept for this item in a terminology
	Code []*Coding `protobuf:"bytes,6,rep,name=code,proto3" json:"code,omitempty"`
	// E.g. "1(a)", "2.5.3"
	Prefix *String `protobuf:"bytes,7,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Primary text for the item
	Text *String `protobuf:"bytes,8,opt,name=text,proto3" json:"text,omitempty"`
	// group | display | boolean | decimal | integer | date | dateTime +
	Type       *QuestionnaireItemTypeCode       `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	EnableWhen []*Questionnaire_Item_EnableWhen `protobuf:"bytes,10,rep,name=enable_when,json=enableWhen,proto3" json:"enable_when,omitempty"`
	// Whether the item must be included in data results
	Required *Boolean `protobuf:"bytes,11,opt,name=required,proto3" json:"required,omitempty"`
	// Whether the item may repeat
	Repeats *Boolean `protobuf:"bytes,12,opt,name=repeats,proto3" json:"repeats,omitempty"`
	// Don't allow human editing
	ReadOnly *Boolean `protobuf:"bytes,13,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// No more than this many characters
	MaxLength *Integer `protobuf:"bytes,14,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	// Valueset containing permitted answers
	Options *Reference                   `protobuf:"bytes,15,opt,name=options,proto3" json:"options,omitempty"`
	Option  []*Questionnaire_Item_Option `protobuf:"bytes,16,rep,name=option,proto3" json:"option,omitempty"`
	Initial *Questionnaire_Item_Initial  `protobuf:"bytes,17,opt,name=initial,proto3" json:"initial,omitempty"`
	// Nested questionnaire items
	Item                 []*Questionnaire_Item `protobuf:"bytes,18,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Questionnaire_Item) Reset()         { *m = Questionnaire_Item{} }
func (m *Questionnaire_Item) String() string { return proto.CompactTextString(m) }
func (*Questionnaire_Item) ProtoMessage()    {}
func (*Questionnaire_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{92, 0}
}

func (m *Questionnaire_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Questionnaire_Item.Unmarshal(m, b)
}
func (m *Questionnaire_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Questionnaire_Item.Marshal(b, m, deterministic)
}
func (m *Questionnaire_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Questionnaire_Item.Merge(m, src)
}
func (m *Questionnaire_Item) XXX_Size() int {
	return xxx_messageInfo_Questionnaire_Item.Size(m)
}
func (m *Questionnaire_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Questionnaire_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Questionnaire_Item proto.InternalMessageInfo

func (m *Questionnaire_Item) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Questionnaire_Item) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Questionnaire_Item) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Questionnaire_Item) GetLinkId() *String {
	if m != nil {
		return m.LinkId
	}
	return nil
}

func (m *Questionnaire_Item) GetDefinition() *Uri {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *Questionnaire_Item) GetCode() []*Coding {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Questionnaire_Item) GetPrefix() *String {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *Questionnaire_Item) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Questionnaire_Item) GetType() *QuestionnaireItemTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Questionnaire_Item) GetEnableWhen() []*Questionnaire_Item_EnableWhen {
	if m != nil {
		return m.EnableWhen
	}
	return nil
}

func (m *Questionnaire_Item) GetRequired() *Boolean {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *Questionnaire_Item) GetRepeats() *Boolean {
	if m != nil {
		return m.Repeats
	}
	return nil
}

func (m *Questionnaire_Item) GetReadOnly() *Boolean {
	if m != nil {
		return m.ReadOnly
	}
	return nil
}

func (m *Questionnaire_Item) GetMaxLength() *Integer {
	if m != nil {
		return m.MaxLength
	}
	return nil
}

func (m *Questionnaire_Item) GetOptions() *Reference {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Questionnaire_Item) GetOption() []*Questionnaire_Item_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *Questionnaire_Item) GetInitial() *Questionnaire_Item_Initial {
	if m != nil {
		return m.Initial
	}
	return nil
}

func (m *Questionnaire_Item) GetItem() []*Questionnaire_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

// Only allow data when
type Questionnaire_Item_EnableWhen struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Question that determines whether item is enabled
	Question *String `protobuf:"bytes,4,opt,name=question,proto3" json:"question,omitempty"`
	// Enable when answered or not
	HasAnswerValue       *Boolean                              `protobuf:"bytes,5,opt,name=has_answer_value,json=hasAnswer,proto3" json:"has_answer_value,omitempty"`
	Answer               *Questionnaire_Item_EnableWhen_Answer `protobuf:"bytes,6,opt,name=answer,proto3" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *Questionnaire_Item_EnableWhen) Reset()         { *m = Questionnaire_Item_EnableWhen{} }
func (m *Questionnaire_Item_EnableWhen) String() string { return proto.CompactTextString(m) }
func (*Questionnaire_Item_EnableWhen) ProtoMessage()    {}
func (*Questionnaire_Item_EnableWhen) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{92, 0, 0}
}

func (m *Questionnaire_Item_EnableWhen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Questionnaire_Item_EnableWhen.Unmarshal(m, b)
}
func (m *Questionnaire_Item_EnableWhen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Questionnaire_Item_EnableWhen.Marshal(b, m, deterministic)
}
func (m *Questionnaire_Item_EnableWhen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Questionnaire_Item_EnableWhen.Merge(m, src)
}
func (m *Questionnaire_Item_EnableWhen) XXX_Size() int {
	return xxx_messageInfo_Questionnaire_Item_EnableWhen.Size(m)
}
func (m *Questionnaire_Item_EnableWhen) XXX_DiscardUnknown() {
	xxx_messageInfo_Questionnaire_Item_EnableWhen.DiscardUnknown(m)
}

var xxx_messageInfo_Questionnaire_Item_EnableWhen proto.InternalMessageInfo

func (m *Questionnaire_Item_EnableWhen) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen) GetQuestion() *String {
	if m != nil {
		return m.Question
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen) GetHasAnswerValue() *Boolean {
	if m != nil {
		return m.HasAnswerValue
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen) GetAnswer() *Questionnaire_Item_EnableWhen_Answer {
	if m != nil {
		return m.Answer
	}
	return nil
}

// Value question must have
type Questionnaire_Item_EnableWhen_Answer struct {
	// Types that are valid to be assigned to Answer:
	//	*Questionnaire_Item_EnableWhen_Answer_Boolean
	//	*Questionnaire_Item_EnableWhen_Answer_Decimal
	//	*Questionnaire_Item_EnableWhen_Answer_Integer
	//	*Questionnaire_Item_EnableWhen_Answer_Date
	//	*Questionnaire_Item_EnableWhen_Answer_DateTime
	//	*Questionnaire_Item_EnableWhen_Answer_Time
	//	*Questionnaire_Item_EnableWhen_Answer_StringValue
	//	*Questionnaire_Item_EnableWhen_Answer_Uri
	//	*Questionnaire_Item_EnableWhen_Answer_Attachment
	//	*Questionnaire_Item_EnableWhen_Answer_Coding
	//	*Questionnaire_Item_EnableWhen_Answer_Quantity
	//	*Questionnaire_Item_EnableWhen_Answer_Reference
	Answer               isQuestionnaire_Item_EnableWhen_Answer_Answer `protobuf_oneof:"answer"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *Questionnaire_Item_EnableWhen_Answer) Reset()         { *m = Questionnaire_Item_EnableWhen_Answer{} }
func (m *Questionnaire_Item_EnableWhen_Answer) String() string { return proto.CompactTextString(m) }
func (*Questionnaire_Item_EnableWhen_Answer) ProtoMessage()    {}
func (*Questionnaire_Item_EnableWhen_Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{92, 0, 0, 0}
}

func (m *Questionnaire_Item_EnableWhen_Answer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Questionnaire_Item_EnableWhen_Answer.Unmarshal(m, b)
}
func (m *Questionnaire_Item_EnableWhen_Answer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Questionnaire_Item_EnableWhen_Answer.Marshal(b, m, deterministic)
}
func (m *Questionnaire_Item_EnableWhen_Answer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Questionnaire_Item_EnableWhen_Answer.Merge(m, src)
}
func (m *Questionnaire_Item_EnableWhen_Answer) XXX_Size() int {
	return xxx_messageInfo_Questionnaire_Item_EnableWhen_Answer.Size(m)
}
func (m *Questionnaire_Item_EnableWhen_Answer) XXX_DiscardUnknown() {
	xxx_messageInfo_Questionnaire_Item_EnableWhen_Answer.DiscardUnknown(m)
}

var xxx_messageInfo_Questionnaire_Item_EnableWhen_Answer proto.InternalMessageInfo

type isQuestionnaire_Item_EnableWhen_Answer_Answer interface {
	isQuestionnaire_Item_EnableWhen_Answer_Answer()
}

type Questionnaire_Item_EnableWhen_Answer_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,2,opt,name=decimal,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_Integer struct {
	Integer *Integer `protobuf:"bytes,3,opt,name=integer,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_Time struct {
	Time *Time `protobuf:"bytes,6,opt,name=time,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_StringValue struct {
	StringValue *String `protobuf:"bytes,7,opt,name=string_value,json=string,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_Uri struct {
	Uri *Uri `protobuf:"bytes,8,opt,name=uri,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,9,opt,name=attachment,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_Coding struct {
	Coding *Coding `protobuf:"bytes,10,opt,name=coding,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,11,opt,name=quantity,proto3,oneof"`
}

type Questionnaire_Item_EnableWhen_Answer_Reference struct {
	Reference *Reference `protobuf:"bytes,12,opt,name=reference,proto3,oneof"`
}

func (*Questionnaire_Item_EnableWhen_Answer_Boolean) isQuestionnaire_Item_EnableWhen_Answer_Answer() {}

func (*Questionnaire_Item_EnableWhen_Answer_Decimal) isQuestionnaire_Item_EnableWhen_Answer_Answer() {}

func (*Questionnaire_Item_EnableWhen_Answer_Integer) isQuestionnaire_Item_EnableWhen_Answer_Answer() {}

func (*Questionnaire_Item_EnableWhen_Answer_Date) isQuestionnaire_Item_EnableWhen_Answer_Answer() {}

func (*Questionnaire_Item_EnableWhen_Answer_DateTime) isQuestionnaire_Item_EnableWhen_Answer_Answer() {
}

func (*Questionnaire_Item_EnableWhen_Answer_Time) isQuestionnaire_Item_EnableWhen_Answer_Answer() {}

func (*Questionnaire_Item_EnableWhen_Answer_StringValue) isQuestionnaire_Item_EnableWhen_Answer_Answer() {
}

func (*Questionnaire_Item_EnableWhen_Answer_Uri) isQuestionnaire_Item_EnableWhen_Answer_Answer() {}

func (*Questionnaire_Item_EnableWhen_Answer_Attachment) isQuestionnaire_Item_EnableWhen_Answer_Answer() {
}

func (*Questionnaire_Item_EnableWhen_Answer_Coding) isQuestionnaire_Item_EnableWhen_Answer_Answer() {}

func (*Questionnaire_Item_EnableWhen_Answer_Quantity) isQuestionnaire_Item_EnableWhen_Answer_Answer() {
}

func (*Questionnaire_Item_EnableWhen_Answer_Reference) isQuestionnaire_Item_EnableWhen_Answer_Answer() {
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetAnswer() isQuestionnaire_Item_EnableWhen_Answer_Answer {
	if m != nil {
		return m.Answer
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetBoolean() *Boolean {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetDecimal() *Decimal {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetInteger() *Integer {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetDate() *Date {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetDateTime() *DateTime {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetTime() *Time {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetStringValue() *String {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetUri() *Uri {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetAttachment() *Attachment {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetCoding() *Coding {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetQuantity() *Quantity {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Questionnaire_Item_EnableWhen_Answer) GetReference() *Reference {
	if x, ok := m.GetAnswer().(*Questionnaire_Item_EnableWhen_Answer_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Questionnaire_Item_EnableWhen_Answer) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Questionnaire_Item_EnableWhen_Answer_OneofMarshaler, _Questionnaire_Item_EnableWhen_Answer_OneofUnmarshaler, _Questionnaire_Item_EnableWhen_Answer_OneofSizer, []interface{}{
		(*Questionnaire_Item_EnableWhen_Answer_Boolean)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_Decimal)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_Integer)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_Date)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_DateTime)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_Time)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_StringValue)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_Uri)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_Attachment)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_Coding)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_Quantity)(nil),
		(*Questionnaire_Item_EnableWhen_Answer_Reference)(nil),
	}
}

func _Questionnaire_Item_EnableWhen_Answer_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Questionnaire_Item_EnableWhen_Answer)
	// answer
	switch x := m.Answer.(type) {
	case *Questionnaire_Item_EnableWhen_Answer_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_Decimal:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_Integer:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_DateTime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_Time:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_StringValue:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_Uri:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_Attachment:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_Coding:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_Quantity:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Questionnaire_Item_EnableWhen_Answer_Reference:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Questionnaire_Item_EnableWhen_Answer.Answer has unexpected type %T", x)
	}
	return nil
}

func _Questionnaire_Item_EnableWhen_Answer_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Questionnaire_Item_EnableWhen_Answer)
	switch tag {
	case 1: // answer.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Boolean{msg}
		return true, err
	case 2: // answer.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Decimal{msg}
		return true, err
	case 3: // answer.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Integer{msg}
		return true, err
	case 4: // answer.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Date{msg}
		return true, err
	case 5: // answer.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_DateTime{msg}
		return true, err
	case 6: // answer.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Time{msg}
		return true, err
	case 7: // answer.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_StringValue{msg}
		return true, err
	case 8: // answer.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Uri{msg}
		return true, err
	case 9: // answer.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Attachment{msg}
		return true, err
	case 10: // answer.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Coding{msg}
		return true, err
	case 11: // answer.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Quantity{msg}
		return true, err
	case 12: // answer.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Answer = &Questionnaire_Item_EnableWhen_Answer_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Questionnaire_Item_EnableWhen_Answer_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Questionnaire_Item_EnableWhen_Answer)
	// answer
	switch x := m.Answer.(type) {
	case *Questionnaire_Item_EnableWhen_Answer_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_Coding:
		s := proto.Size(x.Coding)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_EnableWhen_Answer_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Permitted answer
type Questionnaire_Item_Option struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                     `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Value                *Questionnaire_Item_Option_Value `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Questionnaire_Item_Option) Reset()         { *m = Questionnaire_Item_Option{} }
func (m *Questionnaire_Item_Option) String() string { return proto.CompactTextString(m) }
func (*Questionnaire_Item_Option) ProtoMessage()    {}
func (*Questionnaire_Item_Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{92, 0, 1}
}

func (m *Questionnaire_Item_Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Questionnaire_Item_Option.Unmarshal(m, b)
}
func (m *Questionnaire_Item_Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Questionnaire_Item_Option.Marshal(b, m, deterministic)
}
func (m *Questionnaire_Item_Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Questionnaire_Item_Option.Merge(m, src)
}
func (m *Questionnaire_Item_Option) XXX_Size() int {
	return xxx_messageInfo_Questionnaire_Item_Option.Size(m)
}
func (m *Questionnaire_Item_Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Questionnaire_Item_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Questionnaire_Item_Option proto.InternalMessageInfo

func (m *Questionnaire_Item_Option) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Questionnaire_Item_Option) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Questionnaire_Item_Option) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Questionnaire_Item_Option) GetValue() *Questionnaire_Item_Option_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Answer value
type Questionnaire_Item_Option_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Questionnaire_Item_Option_Value_Integer
	//	*Questionnaire_Item_Option_Value_Date
	//	*Questionnaire_Item_Option_Value_Time
	//	*Questionnaire_Item_Option_Value_StringValue
	//	*Questionnaire_Item_Option_Value_Coding
	Value                isQuestionnaire_Item_Option_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *Questionnaire_Item_Option_Value) Reset()         { *m = Questionnaire_Item_Option_Value{} }
func (m *Questionnaire_Item_Option_Value) String() string { return proto.CompactTextString(m) }
func (*Questionnaire_Item_Option_Value) ProtoMessage()    {}
func (*Questionnaire_Item_Option_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{92, 0, 1, 0}
}

func (m *Questionnaire_Item_Option_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Questionnaire_Item_Option_Value.Unmarshal(m, b)
}
func (m *Questionnaire_Item_Option_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Questionnaire_Item_Option_Value.Marshal(b, m, deterministic)
}
func (m *Questionnaire_Item_Option_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Questionnaire_Item_Option_Value.Merge(m, src)
}
func (m *Questionnaire_Item_Option_Value) XXX_Size() int {
	return xxx_messageInfo_Questionnaire_Item_Option_Value.Size(m)
}
func (m *Questionnaire_Item_Option_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Questionnaire_Item_Option_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Questionnaire_Item_Option_Value proto.InternalMessageInfo

type isQuestionnaire_Item_Option_Value_Value interface {
	isQuestionnaire_Item_Option_Value_Value()
}

type Questionnaire_Item_Option_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,1,opt,name=integer,proto3,oneof"`
}

type Questionnaire_Item_Option_Value_Date struct {
	Date *Date `protobuf:"bytes,2,opt,name=date,proto3,oneof"`
}

type Questionnaire_Item_Option_Value_Time struct {
	Time *Time `protobuf:"bytes,3,opt,name=time,proto3,oneof"`
}

type Questionnaire_Item_Option_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,4,opt,name=string_value,json=string,proto3,oneof"`
}

type Questionnaire_Item_Option_Value_Coding struct {
	Coding *Coding `protobuf:"bytes,5,opt,name=coding,proto3,oneof"`
}

func (*Questionnaire_Item_Option_Value_Integer) isQuestionnaire_Item_Option_Value_Value() {}

func (*Questionnaire_Item_Option_Value_Date) isQuestionnaire_Item_Option_Value_Value() {}

func (*Questionnaire_Item_Option_Value_Time) isQuestionnaire_Item_Option_Value_Value() {}

func (*Questionnaire_Item_Option_Value_StringValue) isQuestionnaire_Item_Option_Value_Value() {}

func (*Questionnaire_Item_Option_Value_Coding) isQuestionnaire_Item_Option_Value_Value() {}

func (m *Questionnaire_Item_Option_Value) GetValue() isQuestionnaire_Item_Option_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Questionnaire_Item_Option_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*Questionnaire_Item_Option_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *Questionnaire_Item_Option_Value) GetDate() *Date {
	if x, ok := m.GetValue().(*Questionnaire_Item_Option_Value_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Questionnaire_Item_Option_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Questionnaire_Item_Option_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Questionnaire_Item_Option_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Questionnaire_Item_Option_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Questionnaire_Item_Option_Value) GetCoding() *Coding {
	if x, ok := m.GetValue().(*Questionnaire_Item_Option_Value_Coding); ok {
		return x.Coding
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Questionnaire_Item_Option_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Questionnaire_Item_Option_Value_OneofMarshaler, _Questionnaire_Item_Option_Value_OneofUnmarshaler, _Questionnaire_Item_Option_Value_OneofSizer, []interface{}{
		(*Questionnaire_Item_Option_Value_Integer)(nil),
		(*Questionnaire_Item_Option_Value_Date)(nil),
		(*Questionnaire_Item_Option_Value_Time)(nil),
		(*Questionnaire_Item_Option_Value_StringValue)(nil),
		(*Questionnaire_Item_Option_Value_Coding)(nil),
	}
}

func _Questionnaire_Item_Option_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Questionnaire_Item_Option_Value)
	// value
	switch x := m.Value.(type) {
	case *Questionnaire_Item_Option_Value_Integer:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *Questionnaire_Item_Option_Value_Date:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Questionnaire_Item_Option_Value_Time:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Questionnaire_Item_Option_Value_StringValue:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Questionnaire_Item_Option_Value_Coding:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Questionnaire_Item_Option_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Questionnaire_Item_Option_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Questionnaire_Item_Option_Value)
	switch tag {
	case 1: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &Questionnaire_Item_Option_Value_Integer{msg}
		return true, err
	case 2: // value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Value = &Questionnaire_Item_Option_Value_Date{msg}
		return true, err
	case 3: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Questionnaire_Item_Option_Value_Time{msg}
		return true, err
	case 4: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Questionnaire_Item_Option_Value_StringValue{msg}
		return true, err
	case 5: // value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Value = &Questionnaire_Item_Option_Value_Coding{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Questionnaire_Item_Option_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Questionnaire_Item_Option_Value)
	// value
	switch x := m.Value.(type) {
	case *Questionnaire_Item_Option_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Option_Value_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Option_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Option_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Option_Value_Coding:
		s := proto.Size(x.Coding)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Default value when item is first rendered
type Questionnaire_Item_Initial struct {
	// Types that are valid to be assigned to Initial:
	//	*Questionnaire_Item_Initial_Boolean
	//	*Questionnaire_Item_Initial_Decimal
	//	*Questionnaire_Item_Initial_Integer
	//	*Questionnaire_Item_Initial_Date
	//	*Questionnaire_Item_Initial_DateTime
	//	*Questionnaire_Item_Initial_Time
	//	*Questionnaire_Item_Initial_StringValue
	//	*Questionnaire_Item_Initial_Uri
	//	*Questionnaire_Item_Initial_Attachment
	//	*Questionnaire_Item_Initial_Coding
	//	*Questionnaire_Item_Initial_Quantity
	//	*Questionnaire_Item_Initial_Reference
	Initial              isQuestionnaire_Item_Initial_Initial `protobuf_oneof:"initial"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Questionnaire_Item_Initial) Reset()         { *m = Questionnaire_Item_Initial{} }
func (m *Questionnaire_Item_Initial) String() string { return proto.CompactTextString(m) }
func (*Questionnaire_Item_Initial) ProtoMessage()    {}
func (*Questionnaire_Item_Initial) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{92, 0, 2}
}

func (m *Questionnaire_Item_Initial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Questionnaire_Item_Initial.Unmarshal(m, b)
}
func (m *Questionnaire_Item_Initial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Questionnaire_Item_Initial.Marshal(b, m, deterministic)
}
func (m *Questionnaire_Item_Initial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Questionnaire_Item_Initial.Merge(m, src)
}
func (m *Questionnaire_Item_Initial) XXX_Size() int {
	return xxx_messageInfo_Questionnaire_Item_Initial.Size(m)
}
func (m *Questionnaire_Item_Initial) XXX_DiscardUnknown() {
	xxx_messageInfo_Questionnaire_Item_Initial.DiscardUnknown(m)
}

var xxx_messageInfo_Questionnaire_Item_Initial proto.InternalMessageInfo

type isQuestionnaire_Item_Initial_Initial interface {
	isQuestionnaire_Item_Initial_Initial()
}

type Questionnaire_Item_Initial_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type Questionnaire_Item_Initial_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,2,opt,name=decimal,proto3,oneof"`
}

type Questionnaire_Item_Initial_Integer struct {
	Integer *Integer `protobuf:"bytes,3,opt,name=integer,proto3,oneof"`
}

type Questionnaire_Item_Initial_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type Questionnaire_Item_Initial_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Questionnaire_Item_Initial_Time struct {
	Time *Time `protobuf:"bytes,6,opt,name=time,proto3,oneof"`
}

type Questionnaire_Item_Initial_StringValue struct {
	StringValue *String `protobuf:"bytes,7,opt,name=string_value,json=string,proto3,oneof"`
}

type Questionnaire_Item_Initial_Uri struct {
	Uri *Uri `protobuf:"bytes,8,opt,name=uri,proto3,oneof"`
}

type Questionnaire_Item_Initial_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,9,opt,name=attachment,proto3,oneof"`
}

type Questionnaire_Item_Initial_Coding struct {
	Coding *Coding `protobuf:"bytes,10,opt,name=coding,proto3,oneof"`
}

type Questionnaire_Item_Initial_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,11,opt,name=quantity,proto3,oneof"`
}

type Questionnaire_Item_Initial_Reference struct {
	Reference *Reference `protobuf:"bytes,12,opt,name=reference,proto3,oneof"`
}

func (*Questionnaire_Item_Initial_Boolean) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_Decimal) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_Integer) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_Date) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_DateTime) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_Time) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_StringValue) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_Uri) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_Attachment) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_Coding) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_Quantity) isQuestionnaire_Item_Initial_Initial() {}

func (*Questionnaire_Item_Initial_Reference) isQuestionnaire_Item_Initial_Initial() {}

func (m *Questionnaire_Item_Initial) GetInitial() isQuestionnaire_Item_Initial_Initial {
	if m != nil {
		return m.Initial
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetBoolean() *Boolean {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetDecimal() *Decimal {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetInteger() *Integer {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetDate() *Date {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetDateTime() *DateTime {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetTime() *Time {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetStringValue() *String {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetUri() *Uri {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetAttachment() *Attachment {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetCoding() *Coding {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetQuantity() *Quantity {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Questionnaire_Item_Initial) GetReference() *Reference {
	if x, ok := m.GetInitial().(*Questionnaire_Item_Initial_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Questionnaire_Item_Initial) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Questionnaire_Item_Initial_OneofMarshaler, _Questionnaire_Item_Initial_OneofUnmarshaler, _Questionnaire_Item_Initial_OneofSizer, []interface{}{
		(*Questionnaire_Item_Initial_Boolean)(nil),
		(*Questionnaire_Item_Initial_Decimal)(nil),
		(*Questionnaire_Item_Initial_Integer)(nil),
		(*Questionnaire_Item_Initial_Date)(nil),
		(*Questionnaire_Item_Initial_DateTime)(nil),
		(*Questionnaire_Item_Initial_Time)(nil),
		(*Questionnaire_Item_Initial_StringValue)(nil),
		(*Questionnaire_Item_Initial_Uri)(nil),
		(*Questionnaire_Item_Initial_Attachment)(nil),
		(*Questionnaire_Item_Initial_Coding)(nil),
		(*Questionnaire_Item_Initial_Quantity)(nil),
		(*Questionnaire_Item_Initial_Reference)(nil),
	}
}

func _Questionnaire_Item_Initial_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Questionnaire_Item_Initial)
	// initial
	switch x := m.Initial.(type) {
	case *Questionnaire_Item_Initial_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_Decimal:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_Integer:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_DateTime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_Time:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_StringValue:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_Uri:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_Attachment:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_Coding:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_Quantity:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Questionnaire_Item_Initial_Reference:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Questionnaire_Item_Initial.Initial has unexpected type %T", x)
	}
	return nil
}

func _Questionnaire_Item_Initial_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Questionnaire_Item_Initial)
	switch tag {
	case 1: // initial.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Boolean{msg}
		return true, err
	case 2: // initial.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Decimal{msg}
		return true, err
	case 3: // initial.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Integer{msg}
		return true, err
	case 4: // initial.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Date{msg}
		return true, err
	case 5: // initial.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_DateTime{msg}
		return true, err
	case 6: // initial.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Time{msg}
		return true, err
	case 7: // initial.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_StringValue{msg}
		return true, err
	case 8: // initial.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Uri{msg}
		return true, err
	case 9: // initial.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Attachment{msg}
		return true, err
	case 10: // initial.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Coding{msg}
		return true, err
	case 11: // initial.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Quantity{msg}
		return true, err
	case 12: // initial.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Initial = &Questionnaire_Item_Initial_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Questionnaire_Item_Initial_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Questionnaire_Item_Initial)
	// initial
	switch x := m.Initial.(type) {
	case *Questionnaire_Item_Initial_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_Coding:
		s := proto.Size(x.Coding)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Questionnaire_Item_Initial_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for QuestionnaireResponse, last
// updated 2017-04-19T07:44:43.294+10:00. A structured set of questions and
// their answers. See
// http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse
type QuestionnaireResponse struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique id for this set of answers
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Request fulfilled by this QuestionnaireResponse
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Part of this action
	Parent []*Reference `protobuf:"bytes,11,rep,name=parent,proto3" json:"parent,omitempty"`
	// Form being answered
	Questionnaire *Reference `protobuf:"bytes,12,opt,name=questionnaire,proto3" json:"questionnaire,omitempty"`
	// in-progress | completed | amended | entered-in-error | stopped
	Status *QuestionnaireResponseStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// The subject of the questions
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or Episode during which questionnaire was completed
	Context *Reference `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	// Date the answers were gathered
	Authored *DateTime `protobuf:"bytes,16,opt,name=authored,proto3" json:"authored,omitempty"`
	// Person who received and recorded the answers
	Author *Reference `protobuf:"bytes,17,opt,name=author,proto3" json:"author,omitempty"`
	// The person who answered the questions
	Source               *Reference                    `protobuf:"bytes,18,opt,name=source,proto3" json:"source,omitempty"`
	Item                 []*QuestionnaireResponse_Item `protobuf:"bytes,19,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *QuestionnaireResponse) Reset()         { *m = QuestionnaireResponse{} }
func (m *QuestionnaireResponse) String() string { return proto.CompactTextString(m) }
func (*QuestionnaireResponse) ProtoMessage()    {}
func (*QuestionnaireResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{93}
}

func (m *QuestionnaireResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuestionnaireResponse.Unmarshal(m, b)
}
func (m *QuestionnaireResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuestionnaireResponse.Marshal(b, m, deterministic)
}
func (m *QuestionnaireResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuestionnaireResponse.Merge(m, src)
}
func (m *QuestionnaireResponse) XXX_Size() int {
	return xxx_messageInfo_QuestionnaireResponse.Size(m)
}
func (m *QuestionnaireResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuestionnaireResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuestionnaireResponse proto.InternalMessageInfo

func (m *QuestionnaireResponse) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *QuestionnaireResponse) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *QuestionnaireResponse) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *QuestionnaireResponse) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *QuestionnaireResponse) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *QuestionnaireResponse) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *QuestionnaireResponse) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *QuestionnaireResponse) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *QuestionnaireResponse) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *QuestionnaireResponse) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *QuestionnaireResponse) GetParent() []*Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *QuestionnaireResponse) GetQuestionnaire() *Reference {
	if m != nil {
		return m.Questionnaire
	}
	return nil
}

func (m *QuestionnaireResponse) GetStatus() *QuestionnaireResponseStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *QuestionnaireResponse) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *QuestionnaireResponse) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *QuestionnaireResponse) GetAuthored() *DateTime {
	if m != nil {
		return m.Authored
	}
	return nil
}

func (m *QuestionnaireResponse) GetAuthor() *Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *QuestionnaireResponse) GetSource() *Reference {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *QuestionnaireResponse) GetItem() []*QuestionnaireResponse_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

// Groups and questions
type QuestionnaireResponse_Item struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Pointer to specific item from Questionnaire
	LinkId *String `protobuf:"bytes,4,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	// ElementDefinition - details for the item
	Definition *Uri `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	// Name for group or question text
	Text *String `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	// The subject this group's answers are about
	Subject *Reference                           `protobuf:"bytes,7,opt,name=subject,proto3" json:"subject,omitempty"`
	Answer  []*QuestionnaireResponse_Item_Answer `protobuf:"bytes,8,rep,name=answer,proto3" json:"answer,omitempty"`
	// Nested questionnaire response items
	Item                 []*QuestionnaireResponse_Item `protobuf:"bytes,9,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *QuestionnaireResponse_Item) Reset()         { *m = QuestionnaireResponse_Item{} }
func (m *QuestionnaireResponse_Item) String() string { return proto.CompactTextString(m) }
func (*QuestionnaireResponse_Item) ProtoMessage()    {}
func (*QuestionnaireResponse_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{93, 0}
}

func (m *QuestionnaireResponse_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuestionnaireResponse_Item.Unmarshal(m, b)
}
func (m *QuestionnaireResponse_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuestionnaireResponse_Item.Marshal(b, m, deterministic)
}
func (m *QuestionnaireResponse_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuestionnaireResponse_Item.Merge(m, src)
}
func (m *QuestionnaireResponse_Item) XXX_Size() int {
	return xxx_messageInfo_QuestionnaireResponse_Item.Size(m)
}
func (m *QuestionnaireResponse_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_QuestionnaireResponse_Item.DiscardUnknown(m)
}

var xxx_messageInfo_QuestionnaireResponse_Item proto.InternalMessageInfo

func (m *QuestionnaireResponse_Item) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *QuestionnaireResponse_Item) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *QuestionnaireResponse_Item) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *QuestionnaireResponse_Item) GetLinkId() *String {
	if m != nil {
		return m.LinkId
	}
	return nil
}

func (m *QuestionnaireResponse_Item) GetDefinition() *Uri {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *QuestionnaireResponse_Item) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *QuestionnaireResponse_Item) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *QuestionnaireResponse_Item) GetAnswer() []*QuestionnaireResponse_Item_Answer {
	if m != nil {
		return m.Answer
	}
	return nil
}

func (m *QuestionnaireResponse_Item) GetItem() []*QuestionnaireResponse_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

// The response(s) to the question
type QuestionnaireResponse_Item_Answer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                             `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Value             *QuestionnaireResponse_Item_Answer_Value `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// Nested groups and questions
	Item                 []*QuestionnaireResponse_Item `protobuf:"bytes,5,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *QuestionnaireResponse_Item_Answer) Reset()         { *m = QuestionnaireResponse_Item_Answer{} }
func (m *QuestionnaireResponse_Item_Answer) String() string { return proto.CompactTextString(m) }
func (*QuestionnaireResponse_Item_Answer) ProtoMessage()    {}
func (*QuestionnaireResponse_Item_Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{93, 0, 0}
}

func (m *QuestionnaireResponse_Item_Answer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuestionnaireResponse_Item_Answer.Unmarshal(m, b)
}
func (m *QuestionnaireResponse_Item_Answer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuestionnaireResponse_Item_Answer.Marshal(b, m, deterministic)
}
func (m *QuestionnaireResponse_Item_Answer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuestionnaireResponse_Item_Answer.Merge(m, src)
}
func (m *QuestionnaireResponse_Item_Answer) XXX_Size() int {
	return xxx_messageInfo_QuestionnaireResponse_Item_Answer.Size(m)
}
func (m *QuestionnaireResponse_Item_Answer) XXX_DiscardUnknown() {
	xxx_messageInfo_QuestionnaireResponse_Item_Answer.DiscardUnknown(m)
}

var xxx_messageInfo_QuestionnaireResponse_Item_Answer proto.InternalMessageInfo

func (m *QuestionnaireResponse_Item_Answer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer) GetValue() *QuestionnaireResponse_Item_Answer_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer) GetItem() []*QuestionnaireResponse_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

// Single-valued answer to the question
type QuestionnaireResponse_Item_Answer_Value struct {
	// Types that are valid to be assigned to Value:
	//	*QuestionnaireResponse_Item_Answer_Value_Boolean
	//	*QuestionnaireResponse_Item_Answer_Value_Decimal
	//	*QuestionnaireResponse_Item_Answer_Value_Integer
	//	*QuestionnaireResponse_Item_Answer_Value_Date
	//	*QuestionnaireResponse_Item_Answer_Value_DateTime
	//	*QuestionnaireResponse_Item_Answer_Value_Time
	//	*QuestionnaireResponse_Item_Answer_Value_StringValue
	//	*QuestionnaireResponse_Item_Answer_Value_Uri
	//	*QuestionnaireResponse_Item_Answer_Value_Attachment
	//	*QuestionnaireResponse_Item_Answer_Value_Coding
	//	*QuestionnaireResponse_Item_Answer_Value_Quantity
	//	*QuestionnaireResponse_Item_Answer_Value_Reference
	Value                isQuestionnaireResponse_Item_Answer_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *QuestionnaireResponse_Item_Answer_Value) Reset() {
	*m = QuestionnaireResponse_Item_Answer_Value{}
}
func (m *QuestionnaireResponse_Item_Answer_Value) String() string { return proto.CompactTextString(m) }
func (*QuestionnaireResponse_Item_Answer_Value) ProtoMessage()    {}
func (*QuestionnaireResponse_Item_Answer_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{93, 0, 0, 0}
}

func (m *QuestionnaireResponse_Item_Answer_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuestionnaireResponse_Item_Answer_Value.Unmarshal(m, b)
}
func (m *QuestionnaireResponse_Item_Answer_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuestionnaireResponse_Item_Answer_Value.Marshal(b, m, deterministic)
}
func (m *QuestionnaireResponse_Item_Answer_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuestionnaireResponse_Item_Answer_Value.Merge(m, src)
}
func (m *QuestionnaireResponse_Item_Answer_Value) XXX_Size() int {
	return xxx_messageInfo_QuestionnaireResponse_Item_Answer_Value.Size(m)
}
func (m *QuestionnaireResponse_Item_Answer_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_QuestionnaireResponse_Item_Answer_Value.DiscardUnknown(m)
}

var xxx_messageInfo_QuestionnaireResponse_Item_Answer_Value proto.InternalMessageInfo

type isQuestionnaireResponse_Item_Answer_Value_Value interface {
	isQuestionnaireResponse_Item_Answer_Value_Value()
}

type QuestionnaireResponse_Item_Answer_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,2,opt,name=decimal,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,3,opt,name=integer,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_Time struct {
	Time *Time `protobuf:"bytes,6,opt,name=time,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,7,opt,name=string_value,json=string,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_Uri struct {
	Uri *Uri `protobuf:"bytes,8,opt,name=uri,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,9,opt,name=attachment,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_Coding struct {
	Coding *Coding `protobuf:"bytes,10,opt,name=coding,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,11,opt,name=quantity,proto3,oneof"`
}

type QuestionnaireResponse_Item_Answer_Value_Reference struct {
	Reference *Reference `protobuf:"bytes,12,opt,name=reference,proto3,oneof"`
}

func (*QuestionnaireResponse_Item_Answer_Value_Boolean) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_Decimal) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_Integer) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_Date) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_DateTime) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_Time) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_StringValue) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_Uri) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_Attachment) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_Coding) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_Quantity) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (*QuestionnaireResponse_Item_Answer_Value_Reference) isQuestionnaireResponse_Item_Answer_Value_Value() {
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetValue() isQuestionnaireResponse_Item_Answer_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetDecimal() *Decimal {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetDate() *Date {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Date); ok {
		return x.Date
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetUri() *Uri {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetCoding() *Coding {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *QuestionnaireResponse_Item_Answer_Value) GetReference() *Reference {
	if x, ok := m.GetValue().(*QuestionnaireResponse_Item_Answer_Value_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*QuestionnaireResponse_Item_Answer_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _QuestionnaireResponse_Item_Answer_Value_OneofMarshaler, _QuestionnaireResponse_Item_Answer_Value_OneofUnmarshaler, _QuestionnaireResponse_Item_Answer_Value_OneofSizer, []interface{}{
		(*QuestionnaireResponse_Item_Answer_Value_Boolean)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_Decimal)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_Integer)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_Date)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_DateTime)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_Time)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_StringValue)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_Uri)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_Attachment)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_Coding)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_Quantity)(nil),
		(*QuestionnaireResponse_Item_Answer_Value_Reference)(nil),
	}
}

func _QuestionnaireResponse_Item_Answer_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*QuestionnaireResponse_Item_Answer_Value)
	// value
	switch x := m.Value.(type) {
	case *QuestionnaireResponse_Item_Answer_Value_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_Decimal:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_Integer:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_DateTime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_Time:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_StringValue:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_Uri:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_Attachment:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_Coding:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_Quantity:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *QuestionnaireResponse_Item_Answer_Value_Reference:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("QuestionnaireResponse_Item_Answer_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _QuestionnaireResponse_Item_Answer_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*QuestionnaireResponse_Item_Answer_Value)
	switch tag {
	case 1: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Boolean{msg}
		return true, err
	case 2: // value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Decimal{msg}
		return true, err
	case 3: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Integer{msg}
		return true, err
	case 4: // value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Date{msg}
		return true, err
	case 5: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_DateTime{msg}
		return true, err
	case 6: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Time{msg}
		return true, err
	case 7: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_StringValue{msg}
		return true, err
	case 8: // value.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Uri{msg}
		return true, err
	case 9: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Attachment{msg}
		return true, err
	case 10: // value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Coding{msg}
		return true, err
	case 11: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Quantity{msg}
		return true, err
	case 12: // value.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Value = &QuestionnaireResponse_Item_Answer_Value_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _QuestionnaireResponse_Item_Answer_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*QuestionnaireResponse_Item_Answer_Value)
	// value
	switch x := m.Value.(type) {
	case *QuestionnaireResponse_Item_Answer_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_Coding:
		s := proto.Size(x.Coding)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QuestionnaireResponse_Item_Answer_Value_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for ReferralRequest, last updated
// 2017-04-19T07:44:43.294+10:00. A request for referral or transfer of care.
// See http://hl7.org/fhir/StructureDefinition/ReferralRequest
type ReferralRequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Instantiates protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// Request fulfilled by this request
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Request(s) replaced by this request
	Replaces []*Reference `protobuf:"bytes,12,rep,name=replaces,proto3" json:"replaces,omitempty"`
	// Composite request this is part of
	GroupIdentifier *Identifier `protobuf:"bytes,13,opt,name=group_identifier,json=groupIdentifier,proto3" json:"group_identifier,omitempty"`
	// draft | active | suspended | cancelled | completed | entered-in-error |
	// unknown
	Status *RequestStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// proposal | plan | order
	Intent *RequestIntentCode `protobuf:"bytes,15,opt,name=intent,proto3" json:"intent,omitempty"`
	// Referral/Transition of care request type
	Type *CodeableConcept `protobuf:"bytes,16,opt,name=type,proto3" json:"type,omitempty"`
	// Urgency of referral / transfer of care request
	Priority *RequestPriorityCode `protobuf:"bytes,17,opt,name=priority,proto3" json:"priority,omitempty"`
	// Actions requested as part of the referral
	ServiceRequested []*CodeableConcept `protobuf:"bytes,18,rep,name=service_requested,json=serviceRequested,proto3" json:"service_requested,omitempty"`
	// Patient referred to care or transfer
	Subject *Reference `protobuf:"bytes,19,opt,name=subject,proto3" json:"subject,omitempty"`
	// Originating encounter
	Context    *Reference                  `protobuf:"bytes,20,opt,name=context,proto3" json:"context,omitempty"`
	Occurrence *ReferralRequest_Occurrence `protobuf:"bytes,21,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	// Date of creation/activation
	AuthoredOn *DateTime                  `protobuf:"bytes,22,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	Requester  *ReferralRequest_Requester `protobuf:"bytes,23,opt,name=requester,proto3" json:"requester,omitempty"`
	// The clinical specialty (discipline) that the referral is requested for
	Specialty *CodeableConcept `protobuf:"bytes,24,opt,name=specialty,proto3" json:"specialty,omitempty"`
	// Receiver of referral / transfer of care request
	Recipient []*Reference `protobuf:"bytes,25,rep,name=recipient,proto3" json:"recipient,omitempty"`
	// Reason for referral / transfer of care request
	ReasonCode []*CodeableConcept `protobuf:"bytes,26,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Why is service needed?
	ReasonReference []*Reference `protobuf:"bytes,27,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// A textual description of the referral
	Description *String `protobuf:"bytes,28,opt,name=description,proto3" json:"description,omitempty"`
	// Additonal information to support referral or transfer of care request
	SupportingInfo []*Reference `protobuf:"bytes,29,rep,name=supporting_info,json=supportingInfo,proto3" json:"supporting_info,omitempty"`
	// Comments made about referral request
	Note []*Annotation `protobuf:"bytes,30,rep,name=note,proto3" json:"note,omitempty"`
	// Key events in history of request
	RelevantHistory      []*Reference `protobuf:"bytes,31,rep,name=relevant_history,json=relevantHistory,proto3" json:"relevant_history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReferralRequest) Reset()         { *m = ReferralRequest{} }
func (m *ReferralRequest) String() string { return proto.CompactTextString(m) }
func (*ReferralRequest) ProtoMessage()    {}
func (*ReferralRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{94}
}

func (m *ReferralRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferralRequest.Unmarshal(m, b)
}
func (m *ReferralRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferralRequest.Marshal(b, m, deterministic)
}
func (m *ReferralRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferralRequest.Merge(m, src)
}
func (m *ReferralRequest) XXX_Size() int {
	return xxx_messageInfo_ReferralRequest.Size(m)
}
func (m *ReferralRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferralRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReferralRequest proto.InternalMessageInfo

func (m *ReferralRequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ReferralRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ReferralRequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ReferralRequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ReferralRequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ReferralRequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ReferralRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ReferralRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ReferralRequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ReferralRequest) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *ReferralRequest) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *ReferralRequest) GetReplaces() []*Reference {
	if m != nil {
		return m.Replaces
	}
	return nil
}

func (m *ReferralRequest) GetGroupIdentifier() *Identifier {
	if m != nil {
		return m.GroupIdentifier
	}
	return nil
}

func (m *ReferralRequest) GetStatus() *RequestStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReferralRequest) GetIntent() *RequestIntentCode {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *ReferralRequest) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ReferralRequest) GetPriority() *RequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *ReferralRequest) GetServiceRequested() []*CodeableConcept {
	if m != nil {
		return m.ServiceRequested
	}
	return nil
}

func (m *ReferralRequest) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *ReferralRequest) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ReferralRequest) GetOccurrence() *ReferralRequest_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *ReferralRequest) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *ReferralRequest) GetRequester() *ReferralRequest_Requester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *ReferralRequest) GetSpecialty() *CodeableConcept {
	if m != nil {
		return m.Specialty
	}
	return nil
}

func (m *ReferralRequest) GetRecipient() []*Reference {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *ReferralRequest) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *ReferralRequest) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *ReferralRequest) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ReferralRequest) GetSupportingInfo() []*Reference {
	if m != nil {
		return m.SupportingInfo
	}
	return nil
}

func (m *ReferralRequest) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *ReferralRequest) GetRelevantHistory() []*Reference {
	if m != nil {
		return m.RelevantHistory
	}
	return nil
}

// When the service(s) requested in the referral should occur
type ReferralRequest_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*ReferralRequest_Occurrence_DateTime
	//	*ReferralRequest_Occurrence_Period
	Occurrence           isReferralRequest_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ReferralRequest_Occurrence) Reset()         { *m = ReferralRequest_Occurrence{} }
func (m *ReferralRequest_Occurrence) String() string { return proto.CompactTextString(m) }
func (*ReferralRequest_Occurrence) ProtoMessage()    {}
func (*ReferralRequest_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{94, 0}
}

func (m *ReferralRequest_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferralRequest_Occurrence.Unmarshal(m, b)
}
func (m *ReferralRequest_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferralRequest_Occurrence.Marshal(b, m, deterministic)
}
func (m *ReferralRequest_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferralRequest_Occurrence.Merge(m, src)
}
func (m *ReferralRequest_Occurrence) XXX_Size() int {
	return xxx_messageInfo_ReferralRequest_Occurrence.Size(m)
}
func (m *ReferralRequest_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferralRequest_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_ReferralRequest_Occurrence proto.InternalMessageInfo

type isReferralRequest_Occurrence_Occurrence interface {
	isReferralRequest_Occurrence_Occurrence()
}

type ReferralRequest_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ReferralRequest_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*ReferralRequest_Occurrence_DateTime) isReferralRequest_Occurrence_Occurrence() {}

func (*ReferralRequest_Occurrence_Period) isReferralRequest_Occurrence_Occurrence() {}

func (m *ReferralRequest_Occurrence) GetOccurrence() isReferralRequest_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *ReferralRequest_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*ReferralRequest_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ReferralRequest_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*ReferralRequest_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReferralRequest_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReferralRequest_Occurrence_OneofMarshaler, _ReferralRequest_Occurrence_OneofUnmarshaler, _ReferralRequest_Occurrence_OneofSizer, []interface{}{
		(*ReferralRequest_Occurrence_DateTime)(nil),
		(*ReferralRequest_Occurrence_Period)(nil),
	}
}

func _ReferralRequest_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReferralRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *ReferralRequest_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ReferralRequest_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReferralRequest_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _ReferralRequest_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReferralRequest_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ReferralRequest_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ReferralRequest_Occurrence_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ReferralRequest_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReferralRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *ReferralRequest_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReferralRequest_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who/what is requesting service
type ReferralRequest_Requester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual making the request
	Agent *Reference `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// Organization agent is acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReferralRequest_Requester) Reset()         { *m = ReferralRequest_Requester{} }
func (m *ReferralRequest_Requester) String() string { return proto.CompactTextString(m) }
func (*ReferralRequest_Requester) ProtoMessage()    {}
func (*ReferralRequest_Requester) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{94, 1}
}

func (m *ReferralRequest_Requester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferralRequest_Requester.Unmarshal(m, b)
}
func (m *ReferralRequest_Requester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferralRequest_Requester.Marshal(b, m, deterministic)
}
func (m *ReferralRequest_Requester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferralRequest_Requester.Merge(m, src)
}
func (m *ReferralRequest_Requester) XXX_Size() int {
	return xxx_messageInfo_ReferralRequest_Requester.Size(m)
}
func (m *ReferralRequest_Requester) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferralRequest_Requester.DiscardUnknown(m)
}

var xxx_messageInfo_ReferralRequest_Requester proto.InternalMessageInfo

func (m *ReferralRequest_Requester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ReferralRequest_Requester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ReferralRequest_Requester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ReferralRequest_Requester) GetAgent() *Reference {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *ReferralRequest_Requester) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Auto-generated from StructureDefinition for RelatedPerson, last updated
// 2017-04-19T07:44:43.294+10:00. An person that is related to a patient, but
// who is not a direct target of care. See
// http://hl7.org/fhir/StructureDefinition/RelatedPerson
type RelatedPerson struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A human identifier for this person
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this related person's record is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// The patient this person is related to
	Patient *Reference `protobuf:"bytes,11,opt,name=patient,proto3" json:"patient,omitempty"`
	// The nature of the relationship
	Relationship *CodeableConcept `protobuf:"bytes,12,opt,name=relationship,proto3" json:"relationship,omitempty"`
	// A name associated with the person
	Name []*HumanName `protobuf:"bytes,13,rep,name=name,proto3" json:"name,omitempty"`
	// A contact detail for the person
	Telecom []*ContactPoint `protobuf:"bytes,14,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode `protobuf:"bytes,15,opt,name=gender,proto3" json:"gender,omitempty"`
	// The date on which the related person was born
	BirthDate *Date `protobuf:"bytes,16,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	// Address where the related person can be contacted or visited
	Address []*Address `protobuf:"bytes,17,rep,name=address,proto3" json:"address,omitempty"`
	// Image of the person
	Photo []*Attachment `protobuf:"bytes,18,rep,name=photo,proto3" json:"photo,omitempty"`
	// Period of time that this relationship is considered valid
	Period               *Period  `protobuf:"bytes,19,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelatedPerson) Reset()         { *m = RelatedPerson{} }
func (m *RelatedPerson) String() string { return proto.CompactTextString(m) }
func (*RelatedPerson) ProtoMessage()    {}
func (*RelatedPerson) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{95}
}

func (m *RelatedPerson) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelatedPerson.Unmarshal(m, b)
}
func (m *RelatedPerson) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelatedPerson.Marshal(b, m, deterministic)
}
func (m *RelatedPerson) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelatedPerson.Merge(m, src)
}
func (m *RelatedPerson) XXX_Size() int {
	return xxx_messageInfo_RelatedPerson.Size(m)
}
func (m *RelatedPerson) XXX_DiscardUnknown() {
	xxx_messageInfo_RelatedPerson.DiscardUnknown(m)
}

var xxx_messageInfo_RelatedPerson proto.InternalMessageInfo

func (m *RelatedPerson) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RelatedPerson) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *RelatedPerson) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *RelatedPerson) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *RelatedPerson) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *RelatedPerson) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *RelatedPerson) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *RelatedPerson) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *RelatedPerson) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *RelatedPerson) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *RelatedPerson) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *RelatedPerson) GetRelationship() *CodeableConcept {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *RelatedPerson) GetName() []*HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *RelatedPerson) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *RelatedPerson) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *RelatedPerson) GetBirthDate() *Date {
	if m != nil {
		return m.BirthDate
	}
	return nil
}

func (m *RelatedPerson) GetAddress() []*Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *RelatedPerson) GetPhoto() []*Attachment {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *RelatedPerson) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// Auto-generated from StructureDefinition for RequestGroup, last updated
// 2017-04-19T07:44:43.294+10:00. A group of related requests. See
// http://hl7.org/fhir/StructureDefinition/RequestGroup
type RequestGroup struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Instantiates protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// Fulfills plan, proposal, or order
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Request(s) replaced by this request
	Replaces []*Reference `protobuf:"bytes,12,rep,name=replaces,proto3" json:"replaces,omitempty"`
	// Composite request this is part of
	GroupIdentifier *Identifier `protobuf:"bytes,13,opt,name=group_identifier,json=groupIdentifier,proto3" json:"group_identifier,omitempty"`
	// draft | active | suspended | cancelled | completed | entered-in-error |
	// unknown
	Status *RequestStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// proposal | plan | order
	Intent *RequestIntentCode `protobuf:"bytes,15,opt,name=intent,proto3" json:"intent,omitempty"`
	// routine | urgent | asap | stat
	Priority *RequestPriorityCode `protobuf:"bytes,16,opt,name=priority,proto3" json:"priority,omitempty"`
	// Who the request group is about
	Subject *Reference `protobuf:"bytes,17,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or Episode for the request group
	Context *Reference `protobuf:"bytes,18,opt,name=context,proto3" json:"context,omitempty"`
	// When the request group was authored
	AuthoredOn *DateTime `protobuf:"bytes,19,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	// Device or practitioner that authored the request group
	Author *Reference           `protobuf:"bytes,20,opt,name=author,proto3" json:"author,omitempty"`
	Reason *RequestGroup_Reason `protobuf:"bytes,21,opt,name=reason,proto3" json:"reason,omitempty"`
	// Additional notes about the response
	Note                 []*Annotation          `protobuf:"bytes,22,rep,name=note,proto3" json:"note,omitempty"`
	Action               []*RequestGroup_Action `protobuf:"bytes,23,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RequestGroup) Reset()         { *m = RequestGroup{} }
func (m *RequestGroup) String() string { return proto.CompactTextString(m) }
func (*RequestGroup) ProtoMessage()    {}
func (*RequestGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{96}
}

func (m *RequestGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGroup.Unmarshal(m, b)
}
func (m *RequestGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGroup.Marshal(b, m, deterministic)
}
func (m *RequestGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGroup.Merge(m, src)
}
func (m *RequestGroup) XXX_Size() int {
	return xxx_messageInfo_RequestGroup.Size(m)
}
func (m *RequestGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGroup.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGroup proto.InternalMessageInfo

func (m *RequestGroup) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestGroup) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *RequestGroup) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *RequestGroup) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *RequestGroup) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *RequestGroup) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *RequestGroup) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *RequestGroup) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *RequestGroup) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *RequestGroup) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *RequestGroup) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *RequestGroup) GetReplaces() []*Reference {
	if m != nil {
		return m.Replaces
	}
	return nil
}

func (m *RequestGroup) GetGroupIdentifier() *Identifier {
	if m != nil {
		return m.GroupIdentifier
	}
	return nil
}

func (m *RequestGroup) GetStatus() *RequestStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RequestGroup) GetIntent() *RequestIntentCode {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *RequestGroup) GetPriority() *RequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *RequestGroup) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *RequestGroup) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *RequestGroup) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *RequestGroup) GetAuthor() *Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *RequestGroup) GetReason() *RequestGroup_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *RequestGroup) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *RequestGroup) GetAction() []*RequestGroup_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

// Reason for the request group
type RequestGroup_Reason struct {
	// Types that are valid to be assigned to Reason:
	//	*RequestGroup_Reason_CodeableConcept
	//	*RequestGroup_Reason_Reference
	Reason               isRequestGroup_Reason_Reason `protobuf_oneof:"reason"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RequestGroup_Reason) Reset()         { *m = RequestGroup_Reason{} }
func (m *RequestGroup_Reason) String() string { return proto.CompactTextString(m) }
func (*RequestGroup_Reason) ProtoMessage()    {}
func (*RequestGroup_Reason) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{96, 0}
}

func (m *RequestGroup_Reason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGroup_Reason.Unmarshal(m, b)
}
func (m *RequestGroup_Reason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGroup_Reason.Marshal(b, m, deterministic)
}
func (m *RequestGroup_Reason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGroup_Reason.Merge(m, src)
}
func (m *RequestGroup_Reason) XXX_Size() int {
	return xxx_messageInfo_RequestGroup_Reason.Size(m)
}
func (m *RequestGroup_Reason) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGroup_Reason.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGroup_Reason proto.InternalMessageInfo

type isRequestGroup_Reason_Reason interface {
	isRequestGroup_Reason_Reason()
}

type RequestGroup_Reason_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type RequestGroup_Reason_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*RequestGroup_Reason_CodeableConcept) isRequestGroup_Reason_Reason() {}

func (*RequestGroup_Reason_Reference) isRequestGroup_Reason_Reason() {}

func (m *RequestGroup_Reason) GetReason() isRequestGroup_Reason_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *RequestGroup_Reason) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetReason().(*RequestGroup_Reason_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *RequestGroup_Reason) GetReference() *Reference {
	if x, ok := m.GetReason().(*RequestGroup_Reason_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestGroup_Reason) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestGroup_Reason_OneofMarshaler, _RequestGroup_Reason_OneofUnmarshaler, _RequestGroup_Reason_OneofSizer, []interface{}{
		(*RequestGroup_Reason_CodeableConcept)(nil),
		(*RequestGroup_Reason_Reference)(nil),
	}
}

func _RequestGroup_Reason_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestGroup_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *RequestGroup_Reason_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *RequestGroup_Reason_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RequestGroup_Reason.Reason has unexpected type %T", x)
	}
	return nil
}

func _RequestGroup_Reason_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestGroup_Reason)
	switch tag {
	case 1: // reason.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Reason = &RequestGroup_Reason_CodeableConcept{msg}
		return true, err
	case 2: // reason.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Reason = &RequestGroup_Reason_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RequestGroup_Reason_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestGroup_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *RequestGroup_Reason_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestGroup_Reason_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Proposed actions, if any
type RequestGroup_Action struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// User-visible label for the action (e.g. 1. or A.)
	Label *String `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// User-visible title
	Title *String `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// Short description of the action
	Description *String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Static text equivalent of the action, used if the dynamic aspects cannot
	// be interpreted by the receiving system
	TextEquivalent *String `protobuf:"bytes,7,opt,name=text_equivalent,json=textEquivalent,proto3" json:"text_equivalent,omitempty"`
	// Code representing the meaning of the action or sub-actions
	Code []*CodeableConcept `protobuf:"bytes,8,rep,name=code,proto3" json:"code,omitempty"`
	// Supporting documentation for the intended performer of the action
	Documentation []*RelatedArtifact                   `protobuf:"bytes,9,rep,name=documentation,proto3" json:"documentation,omitempty"`
	Condition     []*RequestGroup_Action_Condition     `protobuf:"bytes,10,rep,name=condition,proto3" json:"condition,omitempty"`
	RelatedAction []*RequestGroup_Action_RelatedAction `protobuf:"bytes,11,rep,name=related_action,json=relatedAction,proto3" json:"related_action,omitempty"`
	Timing        *RequestGroup_Action_TimingType      `protobuf:"bytes,12,opt,name=timing,proto3" json:"timing,omitempty"`
	// Who should perform the action
	Participant []*Reference `protobuf:"bytes,13,rep,name=participant,proto3" json:"participant,omitempty"`
	// create | update | remove | fire-event
	Type *Coding `protobuf:"bytes,14,opt,name=type,proto3" json:"type,omitempty"`
	// visual-group | logical-group | sentence-group
	GroupingBehavior *ActionGroupingBehaviorCode `protobuf:"bytes,15,opt,name=grouping_behavior,json=groupingBehavior,proto3" json:"grouping_behavior,omitempty"`
	// any | all | all-or-none | exactly-one | at-most-one | one-or-more
	SelectionBehavior *ActionSelectionBehaviorCode `protobuf:"bytes,16,opt,name=selection_behavior,json=selectionBehavior,proto3" json:"selection_behavior,omitempty"`
	// must | could | must-unless-documented
	RequiredBehavior *ActionRequiredBehaviorCode `protobuf:"bytes,17,opt,name=required_behavior,json=requiredBehavior,proto3" json:"required_behavior,omitempty"`
	// yes | no
	PrecheckBehavior *ActionPrecheckBehaviorCode `protobuf:"bytes,18,opt,name=precheck_behavior,json=precheckBehavior,proto3" json:"precheck_behavior,omitempty"`
	// single | multiple
	CardinalityBehavior *ActionCardinalityBehaviorCode `protobuf:"bytes,19,opt,name=cardinality_behavior,json=cardinalityBehavior,proto3" json:"cardinality_behavior,omitempty"`
	// The target of the action
	Resource *Reference `protobuf:"bytes,20,opt,name=resource,proto3" json:"resource,omitempty"`
	// Sub action
	Action               []*RequestGroup_Action `protobuf:"bytes,21,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RequestGroup_Action) Reset()         { *m = RequestGroup_Action{} }
func (m *RequestGroup_Action) String() string { return proto.CompactTextString(m) }
func (*RequestGroup_Action) ProtoMessage()    {}
func (*RequestGroup_Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{96, 1}
}

func (m *RequestGroup_Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGroup_Action.Unmarshal(m, b)
}
func (m *RequestGroup_Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGroup_Action.Marshal(b, m, deterministic)
}
func (m *RequestGroup_Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGroup_Action.Merge(m, src)
}
func (m *RequestGroup_Action) XXX_Size() int {
	return xxx_messageInfo_RequestGroup_Action.Size(m)
}
func (m *RequestGroup_Action) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGroup_Action.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGroup_Action proto.InternalMessageInfo

func (m *RequestGroup_Action) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestGroup_Action) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *RequestGroup_Action) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *RequestGroup_Action) GetLabel() *String {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *RequestGroup_Action) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *RequestGroup_Action) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *RequestGroup_Action) GetTextEquivalent() *String {
	if m != nil {
		return m.TextEquivalent
	}
	return nil
}

func (m *RequestGroup_Action) GetCode() []*CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *RequestGroup_Action) GetDocumentation() []*RelatedArtifact {
	if m != nil {
		return m.Documentation
	}
	return nil
}

func (m *RequestGroup_Action) GetCondition() []*RequestGroup_Action_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *RequestGroup_Action) GetRelatedAction() []*RequestGroup_Action_RelatedAction {
	if m != nil {
		return m.RelatedAction
	}
	return nil
}

func (m *RequestGroup_Action) GetTiming() *RequestGroup_Action_TimingType {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *RequestGroup_Action) GetParticipant() []*Reference {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *RequestGroup_Action) GetType() *Coding {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *RequestGroup_Action) GetGroupingBehavior() *ActionGroupingBehaviorCode {
	if m != nil {
		return m.GroupingBehavior
	}
	return nil
}

func (m *RequestGroup_Action) GetSelectionBehavior() *ActionSelectionBehaviorCode {
	if m != nil {
		return m.SelectionBehavior
	}
	return nil
}

func (m *RequestGroup_Action) GetRequiredBehavior() *ActionRequiredBehaviorCode {
	if m != nil {
		return m.RequiredBehavior
	}
	return nil
}

func (m *RequestGroup_Action) GetPrecheckBehavior() *ActionPrecheckBehaviorCode {
	if m != nil {
		return m.PrecheckBehavior
	}
	return nil
}

func (m *RequestGroup_Action) GetCardinalityBehavior() *ActionCardinalityBehaviorCode {
	if m != nil {
		return m.CardinalityBehavior
	}
	return nil
}

func (m *RequestGroup_Action) GetResource() *Reference {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *RequestGroup_Action) GetAction() []*RequestGroup_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

// Whether or not the action is applicable
type RequestGroup_Action_Condition struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// applicability | start | stop
	Kind *ActionConditionKindCode `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	// Natural language description of the condition
	Description *String `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Language of the expression
	Language *String `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	// Boolean-valued expression
	Expression           *String  `protobuf:"bytes,7,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestGroup_Action_Condition) Reset()         { *m = RequestGroup_Action_Condition{} }
func (m *RequestGroup_Action_Condition) String() string { return proto.CompactTextString(m) }
func (*RequestGroup_Action_Condition) ProtoMessage()    {}
func (*RequestGroup_Action_Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{96, 1, 0}
}

func (m *RequestGroup_Action_Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGroup_Action_Condition.Unmarshal(m, b)
}
func (m *RequestGroup_Action_Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGroup_Action_Condition.Marshal(b, m, deterministic)
}
func (m *RequestGroup_Action_Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGroup_Action_Condition.Merge(m, src)
}
func (m *RequestGroup_Action_Condition) XXX_Size() int {
	return xxx_messageInfo_RequestGroup_Action_Condition.Size(m)
}
func (m *RequestGroup_Action_Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGroup_Action_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGroup_Action_Condition proto.InternalMessageInfo

func (m *RequestGroup_Action_Condition) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestGroup_Action_Condition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *RequestGroup_Action_Condition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *RequestGroup_Action_Condition) GetKind() *ActionConditionKindCode {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *RequestGroup_Action_Condition) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *RequestGroup_Action_Condition) GetLanguage() *String {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *RequestGroup_Action_Condition) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

// Relationship to another action
type RequestGroup_Action_RelatedAction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What action this is related to
	ActionId *Id `protobuf:"bytes,4,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// before-start | before | before-end | concurrent-with-start | concurrent
	// | concurrent-with-end | after-start | after | after-end
	Relationship         *ActionRelationshipTypeCode               `protobuf:"bytes,5,opt,name=relationship,proto3" json:"relationship,omitempty"`
	Offset               *RequestGroup_Action_RelatedAction_Offset `protobuf:"bytes,6,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *RequestGroup_Action_RelatedAction) Reset()         { *m = RequestGroup_Action_RelatedAction{} }
func (m *RequestGroup_Action_RelatedAction) String() string { return proto.CompactTextString(m) }
func (*RequestGroup_Action_RelatedAction) ProtoMessage()    {}
func (*RequestGroup_Action_RelatedAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{96, 1, 1}
}

func (m *RequestGroup_Action_RelatedAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGroup_Action_RelatedAction.Unmarshal(m, b)
}
func (m *RequestGroup_Action_RelatedAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGroup_Action_RelatedAction.Marshal(b, m, deterministic)
}
func (m *RequestGroup_Action_RelatedAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGroup_Action_RelatedAction.Merge(m, src)
}
func (m *RequestGroup_Action_RelatedAction) XXX_Size() int {
	return xxx_messageInfo_RequestGroup_Action_RelatedAction.Size(m)
}
func (m *RequestGroup_Action_RelatedAction) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGroup_Action_RelatedAction.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGroup_Action_RelatedAction proto.InternalMessageInfo

func (m *RequestGroup_Action_RelatedAction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestGroup_Action_RelatedAction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *RequestGroup_Action_RelatedAction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *RequestGroup_Action_RelatedAction) GetActionId() *Id {
	if m != nil {
		return m.ActionId
	}
	return nil
}

func (m *RequestGroup_Action_RelatedAction) GetRelationship() *ActionRelationshipTypeCode {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *RequestGroup_Action_RelatedAction) GetOffset() *RequestGroup_Action_RelatedAction_Offset {
	if m != nil {
		return m.Offset
	}
	return nil
}

// Time offset for the relationship
type RequestGroup_Action_RelatedAction_Offset struct {
	// Types that are valid to be assigned to Offset:
	//	*RequestGroup_Action_RelatedAction_Offset_Duration
	//	*RequestGroup_Action_RelatedAction_Offset_Range
	Offset               isRequestGroup_Action_RelatedAction_Offset_Offset `protobuf_oneof:"offset"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *RequestGroup_Action_RelatedAction_Offset) Reset() {
	*m = RequestGroup_Action_RelatedAction_Offset{}
}
func (m *RequestGroup_Action_RelatedAction_Offset) String() string { return proto.CompactTextString(m) }
func (*RequestGroup_Action_RelatedAction_Offset) ProtoMessage()    {}
func (*RequestGroup_Action_RelatedAction_Offset) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{96, 1, 1, 0}
}

func (m *RequestGroup_Action_RelatedAction_Offset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGroup_Action_RelatedAction_Offset.Unmarshal(m, b)
}
func (m *RequestGroup_Action_RelatedAction_Offset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGroup_Action_RelatedAction_Offset.Marshal(b, m, deterministic)
}
func (m *RequestGroup_Action_RelatedAction_Offset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGroup_Action_RelatedAction_Offset.Merge(m, src)
}
func (m *RequestGroup_Action_RelatedAction_Offset) XXX_Size() int {
	return xxx_messageInfo_RequestGroup_Action_RelatedAction_Offset.Size(m)
}
func (m *RequestGroup_Action_RelatedAction_Offset) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGroup_Action_RelatedAction_Offset.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGroup_Action_RelatedAction_Offset proto.InternalMessageInfo

type isRequestGroup_Action_RelatedAction_Offset_Offset interface {
	isRequestGroup_Action_RelatedAction_Offset_Offset()
}

type RequestGroup_Action_RelatedAction_Offset_Duration struct {
	Duration *Duration `protobuf:"bytes,1,opt,name=duration,proto3,oneof"`
}

type RequestGroup_Action_RelatedAction_Offset_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*RequestGroup_Action_RelatedAction_Offset_Duration) isRequestGroup_Action_RelatedAction_Offset_Offset() {
}

func (*RequestGroup_Action_RelatedAction_Offset_Range) isRequestGroup_Action_RelatedAction_Offset_Offset() {
}

func (m *RequestGroup_Action_RelatedAction_Offset) GetOffset() isRequestGroup_Action_RelatedAction_Offset_Offset {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *RequestGroup_Action_RelatedAction_Offset) GetDuration() *Duration {
	if x, ok := m.GetOffset().(*RequestGroup_Action_RelatedAction_Offset_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *RequestGroup_Action_RelatedAction_Offset) GetRange() *Range {
	if x, ok := m.GetOffset().(*RequestGroup_Action_RelatedAction_Offset_Range); ok {
		return x.Range
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestGroup_Action_RelatedAction_Offset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestGroup_Action_RelatedAction_Offset_OneofMarshaler, _RequestGroup_Action_RelatedAction_Offset_OneofUnmarshaler, _RequestGroup_Action_RelatedAction_Offset_OneofSizer, []interface{}{
		(*RequestGroup_Action_RelatedAction_Offset_Duration)(nil),
		(*RequestGroup_Action_RelatedAction_Offset_Range)(nil),
	}
}

func _RequestGroup_Action_RelatedAction_Offset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestGroup_Action_RelatedAction_Offset)
	// offset
	switch x := m.Offset.(type) {
	case *RequestGroup_Action_RelatedAction_Offset_Duration:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *RequestGroup_Action_RelatedAction_Offset_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RequestGroup_Action_RelatedAction_Offset.Offset has unexpected type %T", x)
	}
	return nil
}

func _RequestGroup_Action_RelatedAction_Offset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestGroup_Action_RelatedAction_Offset)
	switch tag {
	case 1: // offset.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Offset = &RequestGroup_Action_RelatedAction_Offset_Duration{msg}
		return true, err
	case 2: // offset.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Offset = &RequestGroup_Action_RelatedAction_Offset_Range{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RequestGroup_Action_RelatedAction_Offset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestGroup_Action_RelatedAction_Offset)
	// offset
	switch x := m.Offset.(type) {
	case *RequestGroup_Action_RelatedAction_Offset_Duration:
		s := proto.Size(x.Duration)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestGroup_Action_RelatedAction_Offset_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// When the action should take place
type RequestGroup_Action_TimingType struct {
	// Types that are valid to be assigned to Timing:
	//	*RequestGroup_Action_TimingType_DateTime
	//	*RequestGroup_Action_TimingType_Period
	//	*RequestGroup_Action_TimingType_Duration
	//	*RequestGroup_Action_TimingType_Range
	//	*RequestGroup_Action_TimingType_TimingValue
	Timing               isRequestGroup_Action_TimingType_Timing `protobuf_oneof:"timing"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *RequestGroup_Action_TimingType) Reset()         { *m = RequestGroup_Action_TimingType{} }
func (m *RequestGroup_Action_TimingType) String() string { return proto.CompactTextString(m) }
func (*RequestGroup_Action_TimingType) ProtoMessage()    {}
func (*RequestGroup_Action_TimingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{96, 1, 2}
}

func (m *RequestGroup_Action_TimingType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGroup_Action_TimingType.Unmarshal(m, b)
}
func (m *RequestGroup_Action_TimingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGroup_Action_TimingType.Marshal(b, m, deterministic)
}
func (m *RequestGroup_Action_TimingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGroup_Action_TimingType.Merge(m, src)
}
func (m *RequestGroup_Action_TimingType) XXX_Size() int {
	return xxx_messageInfo_RequestGroup_Action_TimingType.Size(m)
}
func (m *RequestGroup_Action_TimingType) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGroup_Action_TimingType.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGroup_Action_TimingType proto.InternalMessageInfo

type isRequestGroup_Action_TimingType_Timing interface {
	isRequestGroup_Action_TimingType_Timing()
}

type RequestGroup_Action_TimingType_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type RequestGroup_Action_TimingType_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type RequestGroup_Action_TimingType_Duration struct {
	Duration *Duration `protobuf:"bytes,3,opt,name=duration,proto3,oneof"`
}

type RequestGroup_Action_TimingType_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type RequestGroup_Action_TimingType_TimingValue struct {
	TimingValue *Timing `protobuf:"bytes,5,opt,name=timing_value,json=timing,proto3,oneof"`
}

func (*RequestGroup_Action_TimingType_DateTime) isRequestGroup_Action_TimingType_Timing() {}

func (*RequestGroup_Action_TimingType_Period) isRequestGroup_Action_TimingType_Timing() {}

func (*RequestGroup_Action_TimingType_Duration) isRequestGroup_Action_TimingType_Timing() {}

func (*RequestGroup_Action_TimingType_Range) isRequestGroup_Action_TimingType_Timing() {}

func (*RequestGroup_Action_TimingType_TimingValue) isRequestGroup_Action_TimingType_Timing() {}

func (m *RequestGroup_Action_TimingType) GetTiming() isRequestGroup_Action_TimingType_Timing {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *RequestGroup_Action_TimingType) GetDateTime() *DateTime {
	if x, ok := m.GetTiming().(*RequestGroup_Action_TimingType_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *RequestGroup_Action_TimingType) GetPeriod() *Period {
	if x, ok := m.GetTiming().(*RequestGroup_Action_TimingType_Period); ok {
		return x.Period
	}
	return nil
}

func (m *RequestGroup_Action_TimingType) GetDuration() *Duration {
	if x, ok := m.GetTiming().(*RequestGroup_Action_TimingType_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *RequestGroup_Action_TimingType) GetRange() *Range {
	if x, ok := m.GetTiming().(*RequestGroup_Action_TimingType_Range); ok {
		return x.Range
	}
	return nil
}

func (m *RequestGroup_Action_TimingType) GetTimingValue() *Timing {
	if x, ok := m.GetTiming().(*RequestGroup_Action_TimingType_TimingValue); ok {
		return x.TimingValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestGroup_Action_TimingType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestGroup_Action_TimingType_OneofMarshaler, _RequestGroup_Action_TimingType_OneofUnmarshaler, _RequestGroup_Action_TimingType_OneofSizer, []interface{}{
		(*RequestGroup_Action_TimingType_DateTime)(nil),
		(*RequestGroup_Action_TimingType_Period)(nil),
		(*RequestGroup_Action_TimingType_Duration)(nil),
		(*RequestGroup_Action_TimingType_Range)(nil),
		(*RequestGroup_Action_TimingType_TimingValue)(nil),
	}
}

func _RequestGroup_Action_TimingType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestGroup_Action_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *RequestGroup_Action_TimingType_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *RequestGroup_Action_TimingType_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *RequestGroup_Action_TimingType_Duration:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *RequestGroup_Action_TimingType_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *RequestGroup_Action_TimingType_TimingValue:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimingValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RequestGroup_Action_TimingType.Timing has unexpected type %T", x)
	}
	return nil
}

func _RequestGroup_Action_TimingType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestGroup_Action_TimingType)
	switch tag {
	case 1: // timing.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Timing = &RequestGroup_Action_TimingType_DateTime{msg}
		return true, err
	case 2: // timing.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Timing = &RequestGroup_Action_TimingType_Period{msg}
		return true, err
	case 3: // timing.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Timing = &RequestGroup_Action_TimingType_Duration{msg}
		return true, err
	case 4: // timing.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Timing = &RequestGroup_Action_TimingType_Range{msg}
		return true, err
	case 5: // timing.timing_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Timing = &RequestGroup_Action_TimingType_TimingValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RequestGroup_Action_TimingType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestGroup_Action_TimingType)
	// timing
	switch x := m.Timing.(type) {
	case *RequestGroup_Action_TimingType_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestGroup_Action_TimingType_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestGroup_Action_TimingType_Duration:
		s := proto.Size(x.Duration)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestGroup_Action_TimingType_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestGroup_Action_TimingType_TimingValue:
		s := proto.Size(x.TimingValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for ResearchStudy, last updated
// 2017-04-19T07:44:43.294+10:00. Investigation to increase healthcare-related
// patient-independent knowledge. See
// http://hl7.org/fhir/StructureDefinition/ResearchStudy
type ResearchStudy struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for study
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Name for this study
	Title *String `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// Steps followed in executing study
	Protocol []*Reference `protobuf:"bytes,11,rep,name=protocol,proto3" json:"protocol,omitempty"`
	// Part of larger study
	PartOf []*Reference `protobuf:"bytes,12,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// draft | in-progress | suspended | stopped | completed | entered-in-error
	Status *ResearchStudyStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// Classifications for the study
	Category []*CodeableConcept `protobuf:"bytes,14,rep,name=category,proto3" json:"category,omitempty"`
	// Drugs, devices, conditions, etc. under study
	Focus []*CodeableConcept `protobuf:"bytes,15,rep,name=focus,proto3" json:"focus,omitempty"`
	// Contact details for the study
	Contact []*ContactDetail `protobuf:"bytes,16,rep,name=contact,proto3" json:"contact,omitempty"`
	// References and dependencies
	RelatedArtifact []*RelatedArtifact `protobuf:"bytes,17,rep,name=related_artifact,json=relatedArtifact,proto3" json:"related_artifact,omitempty"`
	// Used to search for the study
	Keyword []*CodeableConcept `protobuf:"bytes,18,rep,name=keyword,proto3" json:"keyword,omitempty"`
	// Geographic region(s) for study
	Jurisdiction []*CodeableConcept `protobuf:"bytes,19,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// What this is study doing
	Description *Markdown `protobuf:"bytes,20,opt,name=description,proto3" json:"description,omitempty"`
	// Inclusion & exclusion criteria
	Enrollment []*Reference `protobuf:"bytes,21,rep,name=enrollment,proto3" json:"enrollment,omitempty"`
	// When the study began and ended
	Period *Period `protobuf:"bytes,22,opt,name=period,proto3" json:"period,omitempty"`
	// Organization responsible for the study
	Sponsor *Reference `protobuf:"bytes,23,opt,name=sponsor,proto3" json:"sponsor,omitempty"`
	// The individual responsible for the study
	PrincipalInvestigator *Reference `protobuf:"bytes,24,opt,name=principal_investigator,json=principalInvestigator,proto3" json:"principal_investigator,omitempty"`
	// Location involved in study execution
	Site []*Reference `protobuf:"bytes,25,rep,name=site,proto3" json:"site,omitempty"`
	// Reason for terminating study early
	ReasonStopped *CodeableConcept `protobuf:"bytes,26,opt,name=reason_stopped,json=reasonStopped,proto3" json:"reason_stopped,omitempty"`
	// Comments made about the event
	Note                 []*Annotation        `protobuf:"bytes,27,rep,name=note,proto3" json:"note,omitempty"`
	Arm                  []*ResearchStudy_Arm `protobuf:"bytes,28,rep,name=arm,proto3" json:"arm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResearchStudy) Reset()         { *m = ResearchStudy{} }
func (m *ResearchStudy) String() string { return proto.CompactTextString(m) }
func (*ResearchStudy) ProtoMessage()    {}
func (*ResearchStudy) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{97}
}

func (m *ResearchStudy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResearchStudy.Unmarshal(m, b)
}
func (m *ResearchStudy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResearchStudy.Marshal(b, m, deterministic)
}
func (m *ResearchStudy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResearchStudy.Merge(m, src)
}
func (m *ResearchStudy) XXX_Size() int {
	return xxx_messageInfo_ResearchStudy.Size(m)
}
func (m *ResearchStudy) XXX_DiscardUnknown() {
	xxx_messageInfo_ResearchStudy.DiscardUnknown(m)
}

var xxx_messageInfo_ResearchStudy proto.InternalMessageInfo

func (m *ResearchStudy) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResearchStudy) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ResearchStudy) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ResearchStudy) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ResearchStudy) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ResearchStudy) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ResearchStudy) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ResearchStudy) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ResearchStudy) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ResearchStudy) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *ResearchStudy) GetProtocol() []*Reference {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *ResearchStudy) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *ResearchStudy) GetStatus() *ResearchStudyStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ResearchStudy) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ResearchStudy) GetFocus() []*CodeableConcept {
	if m != nil {
		return m.Focus
	}
	return nil
}

func (m *ResearchStudy) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *ResearchStudy) GetRelatedArtifact() []*RelatedArtifact {
	if m != nil {
		return m.RelatedArtifact
	}
	return nil
}

func (m *ResearchStudy) GetKeyword() []*CodeableConcept {
	if m != nil {
		return m.Keyword
	}
	return nil
}

func (m *ResearchStudy) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *ResearchStudy) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ResearchStudy) GetEnrollment() []*Reference {
	if m != nil {
		return m.Enrollment
	}
	return nil
}

func (m *ResearchStudy) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *ResearchStudy) GetSponsor() *Reference {
	if m != nil {
		return m.Sponsor
	}
	return nil
}

func (m *ResearchStudy) GetPrincipalInvestigator() *Reference {
	if m != nil {
		return m.PrincipalInvestigator
	}
	return nil
}

func (m *ResearchStudy) GetSite() []*Reference {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *ResearchStudy) GetReasonStopped() *CodeableConcept {
	if m != nil {
		return m.ReasonStopped
	}
	return nil
}

func (m *ResearchStudy) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *ResearchStudy) GetArm() []*ResearchStudy_Arm {
	if m != nil {
		return m.Arm
	}
	return nil
}

// Defined path through the study for a subject
type ResearchStudy_Arm struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Label for study arm
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Categorization of study arm
	Code *CodeableConcept `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Short explanation of study path
	Description          *String  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResearchStudy_Arm) Reset()         { *m = ResearchStudy_Arm{} }
func (m *ResearchStudy_Arm) String() string { return proto.CompactTextString(m) }
func (*ResearchStudy_Arm) ProtoMessage()    {}
func (*ResearchStudy_Arm) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{97, 0}
}

func (m *ResearchStudy_Arm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResearchStudy_Arm.Unmarshal(m, b)
}
func (m *ResearchStudy_Arm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResearchStudy_Arm.Marshal(b, m, deterministic)
}
func (m *ResearchStudy_Arm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResearchStudy_Arm.Merge(m, src)
}
func (m *ResearchStudy_Arm) XXX_Size() int {
	return xxx_messageInfo_ResearchStudy_Arm.Size(m)
}
func (m *ResearchStudy_Arm) XXX_DiscardUnknown() {
	xxx_messageInfo_ResearchStudy_Arm.DiscardUnknown(m)
}

var xxx_messageInfo_ResearchStudy_Arm proto.InternalMessageInfo

func (m *ResearchStudy_Arm) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResearchStudy_Arm) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ResearchStudy_Arm) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ResearchStudy_Arm) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ResearchStudy_Arm) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ResearchStudy_Arm) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

// Auto-generated from StructureDefinition for ResearchSubject, last updated
// 2017-04-19T07:44:43.294+10:00. Investigation to increase healthcare-related
// patient-independent knowledge. See
// http://hl7.org/fhir/StructureDefinition/ResearchSubject
type ResearchSubject struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for research subject
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// candidate | enrolled | active | suspended | withdrawn | completed
	Status *ResearchSubjectStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Start and end of participation
	Period *Period `protobuf:"bytes,11,opt,name=period,proto3" json:"period,omitempty"`
	// Study subject is part of
	Study *Reference `protobuf:"bytes,12,opt,name=study,proto3" json:"study,omitempty"`
	// Who is part of study
	Individual *Reference `protobuf:"bytes,13,opt,name=individual,proto3" json:"individual,omitempty"`
	// What path should be followed
	AssignedArm *String `protobuf:"bytes,14,opt,name=assigned_arm,json=assignedArm,proto3" json:"assigned_arm,omitempty"`
	// What path was followed
	ActualArm *String `protobuf:"bytes,15,opt,name=actual_arm,json=actualArm,proto3" json:"actual_arm,omitempty"`
	// Agreement to participate in study
	Consent              *Reference `protobuf:"bytes,16,opt,name=consent,proto3" json:"consent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ResearchSubject) Reset()         { *m = ResearchSubject{} }
func (m *ResearchSubject) String() string { return proto.CompactTextString(m) }
func (*ResearchSubject) ProtoMessage()    {}
func (*ResearchSubject) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{98}
}

func (m *ResearchSubject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResearchSubject.Unmarshal(m, b)
}
func (m *ResearchSubject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResearchSubject.Marshal(b, m, deterministic)
}
func (m *ResearchSubject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResearchSubject.Merge(m, src)
}
func (m *ResearchSubject) XXX_Size() int {
	return xxx_messageInfo_ResearchSubject.Size(m)
}
func (m *ResearchSubject) XXX_DiscardUnknown() {
	xxx_messageInfo_ResearchSubject.DiscardUnknown(m)
}

var xxx_messageInfo_ResearchSubject proto.InternalMessageInfo

func (m *ResearchSubject) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResearchSubject) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ResearchSubject) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ResearchSubject) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ResearchSubject) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ResearchSubject) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ResearchSubject) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ResearchSubject) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ResearchSubject) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ResearchSubject) GetStatus() *ResearchSubjectStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ResearchSubject) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *ResearchSubject) GetStudy() *Reference {
	if m != nil {
		return m.Study
	}
	return nil
}

func (m *ResearchSubject) GetIndividual() *Reference {
	if m != nil {
		return m.Individual
	}
	return nil
}

func (m *ResearchSubject) GetAssignedArm() *String {
	if m != nil {
		return m.AssignedArm
	}
	return nil
}

func (m *ResearchSubject) GetActualArm() *String {
	if m != nil {
		return m.ActualArm
	}
	return nil
}

func (m *ResearchSubject) GetConsent() *Reference {
	if m != nil {
		return m.Consent
	}
	return nil
}

// Auto-generated from StructureDefinition for RiskAssessment, last updated
// 2017-04-19T07:44:43.294+10:00. Potential outcomes for a subject with
// likelihood. See http://hl7.org/fhir/StructureDefinition/RiskAssessment
type RiskAssessment struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique identifier for the assessment
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Request fulfilled by this assessment
	BasedOn *Reference `protobuf:"bytes,10,opt,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Part of this occurrence
	Parent *Reference `protobuf:"bytes,11,opt,name=parent,proto3" json:"parent,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// Evaluation mechanism
	Method *CodeableConcept `protobuf:"bytes,13,opt,name=method,proto3" json:"method,omitempty"`
	// Type of assessment
	Code *CodeableConcept `protobuf:"bytes,14,opt,name=code,proto3" json:"code,omitempty"`
	// Who/what does assessment apply to?
	Subject *Reference `protobuf:"bytes,15,opt,name=subject,proto3" json:"subject,omitempty"`
	// Where was assessment performed?
	Context    *Reference                 `protobuf:"bytes,16,opt,name=context,proto3" json:"context,omitempty"`
	Occurrence *RiskAssessment_Occurrence `protobuf:"bytes,17,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	// Condition assessed
	Condition *Reference `protobuf:"bytes,18,opt,name=condition,proto3" json:"condition,omitempty"`
	// Who did assessment?
	Performer *Reference             `protobuf:"bytes,19,opt,name=performer,proto3" json:"performer,omitempty"`
	Reason    *RiskAssessment_Reason `protobuf:"bytes,20,opt,name=reason,proto3" json:"reason,omitempty"`
	// Information used in assessment
	Basis      []*Reference                 `protobuf:"bytes,21,rep,name=basis,proto3" json:"basis,omitempty"`
	Prediction []*RiskAssessment_Prediction `protobuf:"bytes,22,rep,name=prediction,proto3" json:"prediction,omitempty"`
	// How to reduce risk
	Mitigation *String `protobuf:"bytes,23,opt,name=mitigation,proto3" json:"mitigation,omitempty"`
	// Comments on the risk assessment
	Comment              *String  `protobuf:"bytes,24,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RiskAssessment) Reset()         { *m = RiskAssessment{} }
func (m *RiskAssessment) String() string { return proto.CompactTextString(m) }
func (*RiskAssessment) ProtoMessage()    {}
func (*RiskAssessment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{99}
}

func (m *RiskAssessment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskAssessment.Unmarshal(m, b)
}
func (m *RiskAssessment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskAssessment.Marshal(b, m, deterministic)
}
func (m *RiskAssessment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskAssessment.Merge(m, src)
}
func (m *RiskAssessment) XXX_Size() int {
	return xxx_messageInfo_RiskAssessment.Size(m)
}
func (m *RiskAssessment) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskAssessment.DiscardUnknown(m)
}

var xxx_messageInfo_RiskAssessment proto.InternalMessageInfo

func (m *RiskAssessment) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RiskAssessment) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *RiskAssessment) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *RiskAssessment) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *RiskAssessment) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *RiskAssessment) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *RiskAssessment) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *RiskAssessment) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *RiskAssessment) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *RiskAssessment) GetBasedOn() *Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *RiskAssessment) GetParent() *Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *RiskAssessment) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RiskAssessment) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *RiskAssessment) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *RiskAssessment) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *RiskAssessment) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *RiskAssessment) GetOccurrence() *RiskAssessment_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *RiskAssessment) GetCondition() *Reference {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *RiskAssessment) GetPerformer() *Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *RiskAssessment) GetReason() *RiskAssessment_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *RiskAssessment) GetBasis() []*Reference {
	if m != nil {
		return m.Basis
	}
	return nil
}

func (m *RiskAssessment) GetPrediction() []*RiskAssessment_Prediction {
	if m != nil {
		return m.Prediction
	}
	return nil
}

func (m *RiskAssessment) GetMitigation() *String {
	if m != nil {
		return m.Mitigation
	}
	return nil
}

func (m *RiskAssessment) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

// When was assessment made?
type RiskAssessment_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*RiskAssessment_Occurrence_DateTime
	//	*RiskAssessment_Occurrence_Period
	Occurrence           isRiskAssessment_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *RiskAssessment_Occurrence) Reset()         { *m = RiskAssessment_Occurrence{} }
func (m *RiskAssessment_Occurrence) String() string { return proto.CompactTextString(m) }
func (*RiskAssessment_Occurrence) ProtoMessage()    {}
func (*RiskAssessment_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{99, 0}
}

func (m *RiskAssessment_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskAssessment_Occurrence.Unmarshal(m, b)
}
func (m *RiskAssessment_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskAssessment_Occurrence.Marshal(b, m, deterministic)
}
func (m *RiskAssessment_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskAssessment_Occurrence.Merge(m, src)
}
func (m *RiskAssessment_Occurrence) XXX_Size() int {
	return xxx_messageInfo_RiskAssessment_Occurrence.Size(m)
}
func (m *RiskAssessment_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskAssessment_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_RiskAssessment_Occurrence proto.InternalMessageInfo

type isRiskAssessment_Occurrence_Occurrence interface {
	isRiskAssessment_Occurrence_Occurrence()
}

type RiskAssessment_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type RiskAssessment_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*RiskAssessment_Occurrence_DateTime) isRiskAssessment_Occurrence_Occurrence() {}

func (*RiskAssessment_Occurrence_Period) isRiskAssessment_Occurrence_Occurrence() {}

func (m *RiskAssessment_Occurrence) GetOccurrence() isRiskAssessment_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *RiskAssessment_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*RiskAssessment_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *RiskAssessment_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*RiskAssessment_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RiskAssessment_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RiskAssessment_Occurrence_OneofMarshaler, _RiskAssessment_Occurrence_OneofUnmarshaler, _RiskAssessment_Occurrence_OneofSizer, []interface{}{
		(*RiskAssessment_Occurrence_DateTime)(nil),
		(*RiskAssessment_Occurrence_Period)(nil),
	}
}

func _RiskAssessment_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RiskAssessment_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *RiskAssessment_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *RiskAssessment_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RiskAssessment_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _RiskAssessment_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RiskAssessment_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &RiskAssessment_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &RiskAssessment_Occurrence_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RiskAssessment_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RiskAssessment_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *RiskAssessment_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RiskAssessment_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Why the assessment was necessary?
type RiskAssessment_Reason struct {
	// Types that are valid to be assigned to Reason:
	//	*RiskAssessment_Reason_CodeableConcept
	//	*RiskAssessment_Reason_Reference
	Reason               isRiskAssessment_Reason_Reason `protobuf_oneof:"reason"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RiskAssessment_Reason) Reset()         { *m = RiskAssessment_Reason{} }
func (m *RiskAssessment_Reason) String() string { return proto.CompactTextString(m) }
func (*RiskAssessment_Reason) ProtoMessage()    {}
func (*RiskAssessment_Reason) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{99, 1}
}

func (m *RiskAssessment_Reason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskAssessment_Reason.Unmarshal(m, b)
}
func (m *RiskAssessment_Reason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskAssessment_Reason.Marshal(b, m, deterministic)
}
func (m *RiskAssessment_Reason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskAssessment_Reason.Merge(m, src)
}
func (m *RiskAssessment_Reason) XXX_Size() int {
	return xxx_messageInfo_RiskAssessment_Reason.Size(m)
}
func (m *RiskAssessment_Reason) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskAssessment_Reason.DiscardUnknown(m)
}

var xxx_messageInfo_RiskAssessment_Reason proto.InternalMessageInfo

type isRiskAssessment_Reason_Reason interface {
	isRiskAssessment_Reason_Reason()
}

type RiskAssessment_Reason_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type RiskAssessment_Reason_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*RiskAssessment_Reason_CodeableConcept) isRiskAssessment_Reason_Reason() {}

func (*RiskAssessment_Reason_Reference) isRiskAssessment_Reason_Reason() {}

func (m *RiskAssessment_Reason) GetReason() isRiskAssessment_Reason_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *RiskAssessment_Reason) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetReason().(*RiskAssessment_Reason_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *RiskAssessment_Reason) GetReference() *Reference {
	if x, ok := m.GetReason().(*RiskAssessment_Reason_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RiskAssessment_Reason) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RiskAssessment_Reason_OneofMarshaler, _RiskAssessment_Reason_OneofUnmarshaler, _RiskAssessment_Reason_OneofSizer, []interface{}{
		(*RiskAssessment_Reason_CodeableConcept)(nil),
		(*RiskAssessment_Reason_Reference)(nil),
	}
}

func _RiskAssessment_Reason_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RiskAssessment_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *RiskAssessment_Reason_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *RiskAssessment_Reason_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RiskAssessment_Reason.Reason has unexpected type %T", x)
	}
	return nil
}

func _RiskAssessment_Reason_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RiskAssessment_Reason)
	switch tag {
	case 1: // reason.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Reason = &RiskAssessment_Reason_CodeableConcept{msg}
		return true, err
	case 2: // reason.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Reason = &RiskAssessment_Reason_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RiskAssessment_Reason_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RiskAssessment_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *RiskAssessment_Reason_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RiskAssessment_Reason_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Outcome predicted
type RiskAssessment_Prediction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Possible outcome for the subject
	Outcome     *CodeableConcept                       `protobuf:"bytes,4,opt,name=outcome,proto3" json:"outcome,omitempty"`
	Probability *RiskAssessment_Prediction_Probability `protobuf:"bytes,5,opt,name=probability,proto3" json:"probability,omitempty"`
	// Likelihood of specified outcome as a qualitative value
	QualitativeRisk *CodeableConcept `protobuf:"bytes,6,opt,name=qualitative_risk,json=qualitativeRisk,proto3" json:"qualitative_risk,omitempty"`
	// Relative likelihood
	RelativeRisk *Decimal                        `protobuf:"bytes,7,opt,name=relative_risk,json=relativeRisk,proto3" json:"relative_risk,omitempty"`
	When         *RiskAssessment_Prediction_When `protobuf:"bytes,8,opt,name=when,proto3" json:"when,omitempty"`
	// Explanation of prediction
	Rationale            *String  `protobuf:"bytes,9,opt,name=rationale,proto3" json:"rationale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RiskAssessment_Prediction) Reset()         { *m = RiskAssessment_Prediction{} }
func (m *RiskAssessment_Prediction) String() string { return proto.CompactTextString(m) }
func (*RiskAssessment_Prediction) ProtoMessage()    {}
func (*RiskAssessment_Prediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{99, 2}
}

func (m *RiskAssessment_Prediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskAssessment_Prediction.Unmarshal(m, b)
}
func (m *RiskAssessment_Prediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskAssessment_Prediction.Marshal(b, m, deterministic)
}
func (m *RiskAssessment_Prediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskAssessment_Prediction.Merge(m, src)
}
func (m *RiskAssessment_Prediction) XXX_Size() int {
	return xxx_messageInfo_RiskAssessment_Prediction.Size(m)
}
func (m *RiskAssessment_Prediction) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskAssessment_Prediction.DiscardUnknown(m)
}

var xxx_messageInfo_RiskAssessment_Prediction proto.InternalMessageInfo

func (m *RiskAssessment_Prediction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RiskAssessment_Prediction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *RiskAssessment_Prediction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *RiskAssessment_Prediction) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *RiskAssessment_Prediction) GetProbability() *RiskAssessment_Prediction_Probability {
	if m != nil {
		return m.Probability
	}
	return nil
}

func (m *RiskAssessment_Prediction) GetQualitativeRisk() *CodeableConcept {
	if m != nil {
		return m.QualitativeRisk
	}
	return nil
}

func (m *RiskAssessment_Prediction) GetRelativeRisk() *Decimal {
	if m != nil {
		return m.RelativeRisk
	}
	return nil
}

func (m *RiskAssessment_Prediction) GetWhen() *RiskAssessment_Prediction_When {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *RiskAssessment_Prediction) GetRationale() *String {
	if m != nil {
		return m.Rationale
	}
	return nil
}

// Likelihood of specified outcome
type RiskAssessment_Prediction_Probability struct {
	// Types that are valid to be assigned to Probability:
	//	*RiskAssessment_Prediction_Probability_Decimal
	//	*RiskAssessment_Prediction_Probability_Range
	Probability          isRiskAssessment_Prediction_Probability_Probability `protobuf_oneof:"probability"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *RiskAssessment_Prediction_Probability) Reset()         { *m = RiskAssessment_Prediction_Probability{} }
func (m *RiskAssessment_Prediction_Probability) String() string { return proto.CompactTextString(m) }
func (*RiskAssessment_Prediction_Probability) ProtoMessage()    {}
func (*RiskAssessment_Prediction_Probability) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{99, 2, 0}
}

func (m *RiskAssessment_Prediction_Probability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskAssessment_Prediction_Probability.Unmarshal(m, b)
}
func (m *RiskAssessment_Prediction_Probability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskAssessment_Prediction_Probability.Marshal(b, m, deterministic)
}
func (m *RiskAssessment_Prediction_Probability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskAssessment_Prediction_Probability.Merge(m, src)
}
func (m *RiskAssessment_Prediction_Probability) XXX_Size() int {
	return xxx_messageInfo_RiskAssessment_Prediction_Probability.Size(m)
}
func (m *RiskAssessment_Prediction_Probability) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskAssessment_Prediction_Probability.DiscardUnknown(m)
}

var xxx_messageInfo_RiskAssessment_Prediction_Probability proto.InternalMessageInfo

type isRiskAssessment_Prediction_Probability_Probability interface {
	isRiskAssessment_Prediction_Probability_Probability()
}

type RiskAssessment_Prediction_Probability_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,1,opt,name=decimal,proto3,oneof"`
}

type RiskAssessment_Prediction_Probability_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*RiskAssessment_Prediction_Probability_Decimal) isRiskAssessment_Prediction_Probability_Probability() {
}

func (*RiskAssessment_Prediction_Probability_Range) isRiskAssessment_Prediction_Probability_Probability() {
}

func (m *RiskAssessment_Prediction_Probability) GetProbability() isRiskAssessment_Prediction_Probability_Probability {
	if m != nil {
		return m.Probability
	}
	return nil
}

func (m *RiskAssessment_Prediction_Probability) GetDecimal() *Decimal {
	if x, ok := m.GetProbability().(*RiskAssessment_Prediction_Probability_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *RiskAssessment_Prediction_Probability) GetRange() *Range {
	if x, ok := m.GetProbability().(*RiskAssessment_Prediction_Probability_Range); ok {
		return x.Range
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RiskAssessment_Prediction_Probability) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RiskAssessment_Prediction_Probability_OneofMarshaler, _RiskAssessment_Prediction_Probability_OneofUnmarshaler, _RiskAssessment_Prediction_Probability_OneofSizer, []interface{}{
		(*RiskAssessment_Prediction_Probability_Decimal)(nil),
		(*RiskAssessment_Prediction_Probability_Range)(nil),
	}
}

func _RiskAssessment_Prediction_Probability_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RiskAssessment_Prediction_Probability)
	// probability
	switch x := m.Probability.(type) {
	case *RiskAssessment_Prediction_Probability_Decimal:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *RiskAssessment_Prediction_Probability_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RiskAssessment_Prediction_Probability.Probability has unexpected type %T", x)
	}
	return nil
}

func _RiskAssessment_Prediction_Probability_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RiskAssessment_Prediction_Probability)
	switch tag {
	case 1: // probability.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Probability = &RiskAssessment_Prediction_Probability_Decimal{msg}
		return true, err
	case 2: // probability.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Probability = &RiskAssessment_Prediction_Probability_Range{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RiskAssessment_Prediction_Probability_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RiskAssessment_Prediction_Probability)
	// probability
	switch x := m.Probability.(type) {
	case *RiskAssessment_Prediction_Probability_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RiskAssessment_Prediction_Probability_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Timeframe or age range
type RiskAssessment_Prediction_When struct {
	// Types that are valid to be assigned to When:
	//	*RiskAssessment_Prediction_When_Period
	//	*RiskAssessment_Prediction_When_Range
	When                 isRiskAssessment_Prediction_When_When `protobuf_oneof:"when"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *RiskAssessment_Prediction_When) Reset()         { *m = RiskAssessment_Prediction_When{} }
func (m *RiskAssessment_Prediction_When) String() string { return proto.CompactTextString(m) }
func (*RiskAssessment_Prediction_When) ProtoMessage()    {}
func (*RiskAssessment_Prediction_When) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{99, 2, 1}
}

func (m *RiskAssessment_Prediction_When) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskAssessment_Prediction_When.Unmarshal(m, b)
}
func (m *RiskAssessment_Prediction_When) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskAssessment_Prediction_When.Marshal(b, m, deterministic)
}
func (m *RiskAssessment_Prediction_When) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskAssessment_Prediction_When.Merge(m, src)
}
func (m *RiskAssessment_Prediction_When) XXX_Size() int {
	return xxx_messageInfo_RiskAssessment_Prediction_When.Size(m)
}
func (m *RiskAssessment_Prediction_When) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskAssessment_Prediction_When.DiscardUnknown(m)
}

var xxx_messageInfo_RiskAssessment_Prediction_When proto.InternalMessageInfo

type isRiskAssessment_Prediction_When_When interface {
	isRiskAssessment_Prediction_When_When()
}

type RiskAssessment_Prediction_When_Period struct {
	Period *Period `protobuf:"bytes,1,opt,name=period,proto3,oneof"`
}

type RiskAssessment_Prediction_When_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*RiskAssessment_Prediction_When_Period) isRiskAssessment_Prediction_When_When() {}

func (*RiskAssessment_Prediction_When_Range) isRiskAssessment_Prediction_When_When() {}

func (m *RiskAssessment_Prediction_When) GetWhen() isRiskAssessment_Prediction_When_When {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *RiskAssessment_Prediction_When) GetPeriod() *Period {
	if x, ok := m.GetWhen().(*RiskAssessment_Prediction_When_Period); ok {
		return x.Period
	}
	return nil
}

func (m *RiskAssessment_Prediction_When) GetRange() *Range {
	if x, ok := m.GetWhen().(*RiskAssessment_Prediction_When_Range); ok {
		return x.Range
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RiskAssessment_Prediction_When) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RiskAssessment_Prediction_When_OneofMarshaler, _RiskAssessment_Prediction_When_OneofUnmarshaler, _RiskAssessment_Prediction_When_OneofSizer, []interface{}{
		(*RiskAssessment_Prediction_When_Period)(nil),
		(*RiskAssessment_Prediction_When_Range)(nil),
	}
}

func _RiskAssessment_Prediction_When_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RiskAssessment_Prediction_When)
	// when
	switch x := m.When.(type) {
	case *RiskAssessment_Prediction_When_Period:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *RiskAssessment_Prediction_When_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RiskAssessment_Prediction_When.When has unexpected type %T", x)
	}
	return nil
}

func _RiskAssessment_Prediction_When_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RiskAssessment_Prediction_When)
	switch tag {
	case 1: // when.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.When = &RiskAssessment_Prediction_When_Period{msg}
		return true, err
	case 2: // when.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.When = &RiskAssessment_Prediction_When_Range{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RiskAssessment_Prediction_When_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RiskAssessment_Prediction_When)
	// when
	switch x := m.When.(type) {
	case *RiskAssessment_Prediction_When_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RiskAssessment_Prediction_When_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Schedule, last updated
// 2017-04-19T07:44:43.294+10:00. A container for slots of time that may be
// available for booking appointments. See
// http://hl7.org/fhir/StructureDefinition/Schedule
type Schedule struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this item
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this schedule is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// A broad categorisation of the service that is to be performed during this
	// appointment
	ServiceCategory *CodeableConcept `protobuf:"bytes,11,opt,name=service_category,json=serviceCategory,proto3" json:"service_category,omitempty"`
	// The specific service that is to be performed during this appointment
	ServiceType []*CodeableConcept `protobuf:"bytes,12,rep,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	// The specialty of a practitioner that would be required to perform the
	// service requested in this appointment
	Specialty []*CodeableConcept `protobuf:"bytes,13,rep,name=specialty,proto3" json:"specialty,omitempty"`
	// The resource this Schedule resource is providing availability information
	// for. These are expected to usually be one of HealthcareService, Location,
	// Practitioner, PractitionerRole, Device, Patient or RelatedPerson
	Actor []*Reference `protobuf:"bytes,14,rep,name=actor,proto3" json:"actor,omitempty"`
	// The period of time that the slots that are attached to this Schedule
	// resource cover (even if none exist). These  cover the amount of time that
	// an organization's planning horizon; the interval for which they are
	// currently accepting appointments. This does not define a "template" for
	// planning outside these dates
	PlanningHorizon *Period `protobuf:"bytes,15,opt,name=planning_horizon,json=planningHorizon,proto3" json:"planning_horizon,omitempty"`
	// Comments on the availability to describe any extended information. Such as
	// custom constraints on the slots that may be associated
	Comment              *String  `protobuf:"bytes,16,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schedule) Reset()         { *m = Schedule{} }
func (m *Schedule) String() string { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()    {}
func (*Schedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{100}
}

func (m *Schedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schedule.Unmarshal(m, b)
}
func (m *Schedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schedule.Marshal(b, m, deterministic)
}
func (m *Schedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schedule.Merge(m, src)
}
func (m *Schedule) XXX_Size() int {
	return xxx_messageInfo_Schedule.Size(m)
}
func (m *Schedule) XXX_DiscardUnknown() {
	xxx_messageInfo_Schedule.DiscardUnknown(m)
}

var xxx_messageInfo_Schedule proto.InternalMessageInfo

func (m *Schedule) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Schedule) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Schedule) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Schedule) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Schedule) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Schedule) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Schedule) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Schedule) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Schedule) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Schedule) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Schedule) GetServiceCategory() *CodeableConcept {
	if m != nil {
		return m.ServiceCategory
	}
	return nil
}

func (m *Schedule) GetServiceType() []*CodeableConcept {
	if m != nil {
		return m.ServiceType
	}
	return nil
}

func (m *Schedule) GetSpecialty() []*CodeableConcept {
	if m != nil {
		return m.Specialty
	}
	return nil
}

func (m *Schedule) GetActor() []*Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *Schedule) GetPlanningHorizon() *Period {
	if m != nil {
		return m.PlanningHorizon
	}
	return nil
}

func (m *Schedule) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

// Auto-generated from StructureDefinition for SearchParameter, last updated
// 2017-04-19T07:44:43.294+10:00. Search Parameter for a resource. See
// http://hl7.org/fhir/StructureDefinition/SearchParameter
type SearchParameter struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this search parameter (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Business version of the search parameter
	Version *String `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this search parameter (computer friendly)
	Name *String `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,13,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,14,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,15,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,16,rep,name=contact,proto3" json:"contact,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,17,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for search parameter (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,18,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this search parameter is defined
	Purpose *Markdown `protobuf:"bytes,19,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Code used in URL
	Code *Code `protobuf:"bytes,20,opt,name=code,proto3" json:"code,omitempty"`
	// The resource type(s) this search parameter applies to
	Base []*ResourceTypeCode `protobuf:"bytes,21,rep,name=base,proto3" json:"base,omitempty"`
	// number | date | string | token | reference | composite | quantity | uri
	Type *SearchParamTypeCode `protobuf:"bytes,22,opt,name=type,proto3" json:"type,omitempty"`
	// Original Definition for the search parameter
	DerivedFrom *Uri `protobuf:"bytes,23,opt,name=derived_from,json=derivedFrom,proto3" json:"derived_from,omitempty"`
	// Natural language description of the search parameter
	Description *Markdown `protobuf:"bytes,24,opt,name=description,proto3" json:"description,omitempty"`
	// FHIRPath expression that extracts the values
	Expression *String `protobuf:"bytes,25,opt,name=expression,proto3" json:"expression,omitempty"`
	// XPath that extracts the values
	Xpath *String `protobuf:"bytes,26,opt,name=xpath,proto3" json:"xpath,omitempty"`
	// normal | phonetic | nearby | distance | other
	XpathUsage *XPathUsageTypeCode `protobuf:"bytes,27,opt,name=xpath_usage,json=xpathUsage,proto3" json:"xpath_usage,omitempty"`
	// Types of resource (if a resource reference)
	Target []*ResourceTypeCode `protobuf:"bytes,28,rep,name=target,proto3" json:"target,omitempty"`
	// eq | ne | gt | lt | ge | le | sa | eb | ap
	Comparator []*SearchComparatorCode `protobuf:"bytes,29,rep,name=comparator,proto3" json:"comparator,omitempty"`
	// missing | exact | contains | not | text | in | not-in | below | above |
	// type
	Modifier []*SearchModifierCodeCode `protobuf:"bytes,30,rep,name=modifier,proto3" json:"modifier,omitempty"`
	// Chained names supported
	Chain                []*String                    `protobuf:"bytes,31,rep,name=chain,proto3" json:"chain,omitempty"`
	Component            []*SearchParameter_Component `protobuf:"bytes,32,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SearchParameter) Reset()         { *m = SearchParameter{} }
func (m *SearchParameter) String() string { return proto.CompactTextString(m) }
func (*SearchParameter) ProtoMessage()    {}
func (*SearchParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{101}
}

func (m *SearchParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchParameter.Unmarshal(m, b)
}
func (m *SearchParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchParameter.Marshal(b, m, deterministic)
}
func (m *SearchParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchParameter.Merge(m, src)
}
func (m *SearchParameter) XXX_Size() int {
	return xxx_messageInfo_SearchParameter.Size(m)
}
func (m *SearchParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchParameter.DiscardUnknown(m)
}

var xxx_messageInfo_SearchParameter proto.InternalMessageInfo

func (m *SearchParameter) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SearchParameter) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *SearchParameter) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *SearchParameter) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *SearchParameter) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *SearchParameter) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *SearchParameter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *SearchParameter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *SearchParameter) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *SearchParameter) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *SearchParameter) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SearchParameter) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SearchParameter) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *SearchParameter) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *SearchParameter) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *SearchParameter) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *SearchParameter) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *SearchParameter) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *SearchParameter) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *SearchParameter) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *SearchParameter) GetBase() []*ResourceTypeCode {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SearchParameter) GetType() *SearchParamTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *SearchParameter) GetDerivedFrom() *Uri {
	if m != nil {
		return m.DerivedFrom
	}
	return nil
}

func (m *SearchParameter) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *SearchParameter) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

func (m *SearchParameter) GetXpath() *String {
	if m != nil {
		return m.Xpath
	}
	return nil
}

func (m *SearchParameter) GetXpathUsage() *XPathUsageTypeCode {
	if m != nil {
		return m.XpathUsage
	}
	return nil
}

func (m *SearchParameter) GetTarget() []*ResourceTypeCode {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *SearchParameter) GetComparator() []*SearchComparatorCode {
	if m != nil {
		return m.Comparator
	}
	return nil
}

func (m *SearchParameter) GetModifier() []*SearchModifierCodeCode {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func (m *SearchParameter) GetChain() []*String {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (m *SearchParameter) GetComponent() []*SearchParameter_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// For Composite resources to define the parts
type SearchParameter_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Defines how the part works
	Definition *Reference `protobuf:"bytes,4,opt,name=definition,proto3" json:"definition,omitempty"`
	// Subexpression relative to main expression
	Expression           *String  `protobuf:"bytes,5,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchParameter_Component) Reset()         { *m = SearchParameter_Component{} }
func (m *SearchParameter_Component) String() string { return proto.CompactTextString(m) }
func (*SearchParameter_Component) ProtoMessage()    {}
func (*SearchParameter_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{101, 0}
}

func (m *SearchParameter_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchParameter_Component.Unmarshal(m, b)
}
func (m *SearchParameter_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchParameter_Component.Marshal(b, m, deterministic)
}
func (m *SearchParameter_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchParameter_Component.Merge(m, src)
}
func (m *SearchParameter_Component) XXX_Size() int {
	return xxx_messageInfo_SearchParameter_Component.Size(m)
}
func (m *SearchParameter_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchParameter_Component.DiscardUnknown(m)
}

var xxx_messageInfo_SearchParameter_Component proto.InternalMessageInfo

func (m *SearchParameter_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SearchParameter_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *SearchParameter_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *SearchParameter_Component) GetDefinition() *Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *SearchParameter_Component) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

// Auto-generated from StructureDefinition for Sequence, last updated
// 2017-04-19T07:44:43.294+10:00. Information about a biological sequence. See
// http://hl7.org/fhir/StructureDefinition/Sequence
type Sequence struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique ID for this particular sequence. This is a FHIR-defined id
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// aa | dna | rna
	Type *SequenceTypeCode `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// Base number of coordinate system (0 for 0-based numbering or coordinates,
	// inclusive start, exclusive end, 1 for 1-based numbering, inclusive start,
	// inclusive end)
	CoordinateSystem *Integer `protobuf:"bytes,11,opt,name=coordinate_system,json=coordinateSystem,proto3" json:"coordinate_system,omitempty"`
	// Who and/or what this is about
	Patient *Reference `protobuf:"bytes,12,opt,name=patient,proto3" json:"patient,omitempty"`
	// Specimen used for sequencing
	Specimen *Reference `protobuf:"bytes,13,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// The method for sequencing
	Device *Reference `protobuf:"bytes,14,opt,name=device,proto3" json:"device,omitempty"`
	// Who should be responsible for test result
	Performer *Reference `protobuf:"bytes,15,opt,name=performer,proto3" json:"performer,omitempty"`
	// The number of copies of the seqeunce of interest.  (RNASeq)
	Quantity     *Quantity              `protobuf:"bytes,16,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ReferenceSeq *Sequence_ReferenceSeq `protobuf:"bytes,17,opt,name=reference_seq,json=referenceSeq,proto3" json:"reference_seq,omitempty"`
	Variant      []*Sequence_Variant    `protobuf:"bytes,18,rep,name=variant,proto3" json:"variant,omitempty"`
	// Sequence that was observed
	ObservedSeq *String             `protobuf:"bytes,19,opt,name=observed_seq,json=observedSeq,proto3" json:"observed_seq,omitempty"`
	Quality     []*Sequence_Quality `protobuf:"bytes,20,rep,name=quality,proto3" json:"quality,omitempty"`
	// Average number of reads representing a given nucleotide in the
	// reconstructed sequence
	ReadCoverage *Integer               `protobuf:"bytes,21,opt,name=read_coverage,json=readCoverage,proto3" json:"read_coverage,omitempty"`
	Repository   []*Sequence_Repository `protobuf:"bytes,22,rep,name=repository,proto3" json:"repository,omitempty"`
	// Pointer to next atomic sequence
	Pointer              []*Reference `protobuf:"bytes,23,rep,name=pointer,proto3" json:"pointer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Sequence) Reset()         { *m = Sequence{} }
func (m *Sequence) String() string { return proto.CompactTextString(m) }
func (*Sequence) ProtoMessage()    {}
func (*Sequence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{102}
}

func (m *Sequence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sequence.Unmarshal(m, b)
}
func (m *Sequence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sequence.Marshal(b, m, deterministic)
}
func (m *Sequence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sequence.Merge(m, src)
}
func (m *Sequence) XXX_Size() int {
	return xxx_messageInfo_Sequence.Size(m)
}
func (m *Sequence) XXX_DiscardUnknown() {
	xxx_messageInfo_Sequence.DiscardUnknown(m)
}

var xxx_messageInfo_Sequence proto.InternalMessageInfo

func (m *Sequence) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Sequence) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Sequence) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Sequence) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Sequence) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Sequence) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Sequence) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Sequence) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Sequence) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Sequence) GetType() *SequenceTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Sequence) GetCoordinateSystem() *Integer {
	if m != nil {
		return m.CoordinateSystem
	}
	return nil
}

func (m *Sequence) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *Sequence) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Sequence) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Sequence) GetPerformer() *Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Sequence) GetQuantity() *Quantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Sequence) GetReferenceSeq() *Sequence_ReferenceSeq {
	if m != nil {
		return m.ReferenceSeq
	}
	return nil
}

func (m *Sequence) GetVariant() []*Sequence_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (m *Sequence) GetObservedSeq() *String {
	if m != nil {
		return m.ObservedSeq
	}
	return nil
}

func (m *Sequence) GetQuality() []*Sequence_Quality {
	if m != nil {
		return m.Quality
	}
	return nil
}

func (m *Sequence) GetReadCoverage() *Integer {
	if m != nil {
		return m.ReadCoverage
	}
	return nil
}

func (m *Sequence) GetRepository() []*Sequence_Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *Sequence) GetPointer() []*Reference {
	if m != nil {
		return m.Pointer
	}
	return nil
}

// A sequence used as reference
type Sequence_ReferenceSeq struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Chromosome containing genetic finding
	Chromosome *CodeableConcept `protobuf:"bytes,4,opt,name=chromosome,proto3" json:"chromosome,omitempty"`
	// The Genome Build used for reference, following GRCh build versions e.g.
	// 'GRCh 37'
	GenomeBuild *String `protobuf:"bytes,5,opt,name=genome_build,json=genomeBuild,proto3" json:"genome_build,omitempty"`
	// Reference identifier
	ReferenceSeqId *CodeableConcept `protobuf:"bytes,6,opt,name=reference_seq_id,json=referenceSeqId,proto3" json:"reference_seq_id,omitempty"`
	// A Pointer to another Sequence entity as reference sequence
	ReferenceSeqPointer *Reference `protobuf:"bytes,7,opt,name=reference_seq_pointer,json=referenceSeqPointer,proto3" json:"reference_seq_pointer,omitempty"`
	// A string to represent reference sequence
	ReferenceSeqString *String `protobuf:"bytes,8,opt,name=reference_seq_string,json=referenceSeqString,proto3" json:"reference_seq_string,omitempty"`
	// Directionality of DNA ( +1/-1)
	Strand *Integer `protobuf:"bytes,9,opt,name=strand,proto3" json:"strand,omitempty"`
	// Start position of the window on the  reference sequence
	WindowStart *Integer `protobuf:"bytes,10,opt,name=window_start,json=windowStart,proto3" json:"window_start,omitempty"`
	// End position of the window on the reference sequence
	WindowEnd            *Integer `protobuf:"bytes,11,opt,name=window_end,json=windowEnd,proto3" json:"window_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sequence_ReferenceSeq) Reset()         { *m = Sequence_ReferenceSeq{} }
func (m *Sequence_ReferenceSeq) String() string { return proto.CompactTextString(m) }
func (*Sequence_ReferenceSeq) ProtoMessage()    {}
func (*Sequence_ReferenceSeq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{102, 0}
}

func (m *Sequence_ReferenceSeq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sequence_ReferenceSeq.Unmarshal(m, b)
}
func (m *Sequence_ReferenceSeq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sequence_ReferenceSeq.Marshal(b, m, deterministic)
}
func (m *Sequence_ReferenceSeq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sequence_ReferenceSeq.Merge(m, src)
}
func (m *Sequence_ReferenceSeq) XXX_Size() int {
	return xxx_messageInfo_Sequence_ReferenceSeq.Size(m)
}
func (m *Sequence_ReferenceSeq) XXX_DiscardUnknown() {
	xxx_messageInfo_Sequence_ReferenceSeq.DiscardUnknown(m)
}

var xxx_messageInfo_Sequence_ReferenceSeq proto.InternalMessageInfo

func (m *Sequence_ReferenceSeq) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetChromosome() *CodeableConcept {
	if m != nil {
		return m.Chromosome
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetGenomeBuild() *String {
	if m != nil {
		return m.GenomeBuild
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetReferenceSeqId() *CodeableConcept {
	if m != nil {
		return m.ReferenceSeqId
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetReferenceSeqPointer() *Reference {
	if m != nil {
		return m.ReferenceSeqPointer
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetReferenceSeqString() *String {
	if m != nil {
		return m.ReferenceSeqString
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetStrand() *Integer {
	if m != nil {
		return m.Strand
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetWindowStart() *Integer {
	if m != nil {
		return m.WindowStart
	}
	return nil
}

func (m *Sequence_ReferenceSeq) GetWindowEnd() *Integer {
	if m != nil {
		return m.WindowEnd
	}
	return nil
}

// Variant in sequence
type Sequence_Variant struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Start position of the variant on the  reference sequence
	Start *Integer `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	// End position of the variant on the reference sequence
	End *Integer `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	// Allele that was observed
	ObservedAllele *String `protobuf:"bytes,6,opt,name=observed_allele,json=observedAllele,proto3" json:"observed_allele,omitempty"`
	// Allele in the reference sequence
	ReferenceAllele *String `protobuf:"bytes,7,opt,name=reference_allele,json=referenceAllele,proto3" json:"reference_allele,omitempty"`
	// Extended CIGAR string for aligning the sequence with reference bases
	Cigar *String `protobuf:"bytes,8,opt,name=cigar,proto3" json:"cigar,omitempty"`
	// Pointer to observed variant information
	VariantPointer       *Reference `protobuf:"bytes,9,opt,name=variant_pointer,json=variantPointer,proto3" json:"variant_pointer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Sequence_Variant) Reset()         { *m = Sequence_Variant{} }
func (m *Sequence_Variant) String() string { return proto.CompactTextString(m) }
func (*Sequence_Variant) ProtoMessage()    {}
func (*Sequence_Variant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{102, 1}
}

func (m *Sequence_Variant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sequence_Variant.Unmarshal(m, b)
}
func (m *Sequence_Variant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sequence_Variant.Marshal(b, m, deterministic)
}
func (m *Sequence_Variant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sequence_Variant.Merge(m, src)
}
func (m *Sequence_Variant) XXX_Size() int {
	return xxx_messageInfo_Sequence_Variant.Size(m)
}
func (m *Sequence_Variant) XXX_DiscardUnknown() {
	xxx_messageInfo_Sequence_Variant.DiscardUnknown(m)
}

var xxx_messageInfo_Sequence_Variant proto.InternalMessageInfo

func (m *Sequence_Variant) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Sequence_Variant) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Sequence_Variant) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Sequence_Variant) GetStart() *Integer {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Sequence_Variant) GetEnd() *Integer {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Sequence_Variant) GetObservedAllele() *String {
	if m != nil {
		return m.ObservedAllele
	}
	return nil
}

func (m *Sequence_Variant) GetReferenceAllele() *String {
	if m != nil {
		return m.ReferenceAllele
	}
	return nil
}

func (m *Sequence_Variant) GetCigar() *String {
	if m != nil {
		return m.Cigar
	}
	return nil
}

func (m *Sequence_Variant) GetVariantPointer() *Reference {
	if m != nil {
		return m.VariantPointer
	}
	return nil
}

// An set of value as quality of sequence
type Sequence_Quality struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// indel | snp | unknown
	Type *QualityTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Standard sequence for comparison
	StandardSequence *CodeableConcept `protobuf:"bytes,5,opt,name=standard_sequence,json=standardSequence,proto3" json:"standard_sequence,omitempty"`
	// Start position of the sequence
	Start *Integer `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
	// End position of the sequence
	End *Integer `protobuf:"bytes,7,opt,name=end,proto3" json:"end,omitempty"`
	// Quality score for the comparison
	Score *Quantity `protobuf:"bytes,8,opt,name=score,proto3" json:"score,omitempty"`
	// Method to get quality
	Method *CodeableConcept `protobuf:"bytes,9,opt,name=method,proto3" json:"method,omitempty"`
	// True positives from the perspective of the truth data
	TruthTP *Decimal `protobuf:"bytes,10,opt,name=truth_t_p,json=truthTP,proto3" json:"truth_t_p,omitempty"`
	// True positives from the perspective of the query data
	QueryTP *Decimal `protobuf:"bytes,11,opt,name=query_t_p,json=queryTP,proto3" json:"query_t_p,omitempty"`
	// False negatives
	TruthFN *Decimal `protobuf:"bytes,12,opt,name=truth_f_n,json=truthFN,proto3" json:"truth_f_n,omitempty"`
	// False positives
	QueryFP *Decimal `protobuf:"bytes,13,opt,name=query_f_p,json=queryFP,proto3" json:"query_f_p,omitempty"`
	// False positives where the non-REF alleles in the Truth and Query Call
	// Sets match
	GtFP *Decimal `protobuf:"bytes,14,opt,name=gt_f_p,json=gtFP,proto3" json:"gt_f_p,omitempty"`
	// Precision of comparison
	Precision *Decimal `protobuf:"bytes,15,opt,name=precision,proto3" json:"precision,omitempty"`
	// Recall of comparison
	Recall *Decimal `protobuf:"bytes,16,opt,name=recall,proto3" json:"recall,omitempty"`
	// F-score
	FScore               *Decimal `protobuf:"bytes,17,opt,name=f_score,json=fScore,proto3" json:"f_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sequence_Quality) Reset()         { *m = Sequence_Quality{} }
func (m *Sequence_Quality) String() string { return proto.CompactTextString(m) }
func (*Sequence_Quality) ProtoMessage()    {}
func (*Sequence_Quality) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{102, 2}
}

func (m *Sequence_Quality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sequence_Quality.Unmarshal(m, b)
}
func (m *Sequence_Quality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sequence_Quality.Marshal(b, m, deterministic)
}
func (m *Sequence_Quality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sequence_Quality.Merge(m, src)
}
func (m *Sequence_Quality) XXX_Size() int {
	return xxx_messageInfo_Sequence_Quality.Size(m)
}
func (m *Sequence_Quality) XXX_DiscardUnknown() {
	xxx_messageInfo_Sequence_Quality.DiscardUnknown(m)
}

var xxx_messageInfo_Sequence_Quality proto.InternalMessageInfo

func (m *Sequence_Quality) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Sequence_Quality) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Sequence_Quality) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Sequence_Quality) GetType() *QualityTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Sequence_Quality) GetStandardSequence() *CodeableConcept {
	if m != nil {
		return m.StandardSequence
	}
	return nil
}

func (m *Sequence_Quality) GetStart() *Integer {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Sequence_Quality) GetEnd() *Integer {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Sequence_Quality) GetScore() *Quantity {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *Sequence_Quality) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Sequence_Quality) GetTruthTP() *Decimal {
	if m != nil {
		return m.TruthTP
	}
	return nil
}

func (m *Sequence_Quality) GetQueryTP() *Decimal {
	if m != nil {
		return m.QueryTP
	}
	return nil
}

func (m *Sequence_Quality) GetTruthFN() *Decimal {
	if m != nil {
		return m.TruthFN
	}
	return nil
}

func (m *Sequence_Quality) GetQueryFP() *Decimal {
	if m != nil {
		return m.QueryFP
	}
	return nil
}

func (m *Sequence_Quality) GetGtFP() *Decimal {
	if m != nil {
		return m.GtFP
	}
	return nil
}

func (m *Sequence_Quality) GetPrecision() *Decimal {
	if m != nil {
		return m.Precision
	}
	return nil
}

func (m *Sequence_Quality) GetRecall() *Decimal {
	if m != nil {
		return m.Recall
	}
	return nil
}

func (m *Sequence_Quality) GetFScore() *Decimal {
	if m != nil {
		return m.FScore
	}
	return nil
}

// External repository which contains detailed report related with observedSeq
// in this resource
type Sequence_Repository struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// directlink | openapi | login | oauth | other
	Type *RepositoryTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// URI of the repository
	Url *Uri `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// Repository's name
	Name *String `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Id of the dataset that used to call for dataset in repository
	DatasetId *String `protobuf:"bytes,7,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Id of the variantset that used to call for variantset in repository
	VariantsetId *String `protobuf:"bytes,8,opt,name=variantset_id,json=variantsetId,proto3" json:"variantset_id,omitempty"`
	// Id of the read
	ReadsetId            *String  `protobuf:"bytes,9,opt,name=readset_id,json=readsetId,proto3" json:"readset_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sequence_Repository) Reset()         { *m = Sequence_Repository{} }
func (m *Sequence_Repository) String() string { return proto.CompactTextString(m) }
func (*Sequence_Repository) ProtoMessage()    {}
func (*Sequence_Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{102, 3}
}

func (m *Sequence_Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sequence_Repository.Unmarshal(m, b)
}
func (m *Sequence_Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sequence_Repository.Marshal(b, m, deterministic)
}
func (m *Sequence_Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sequence_Repository.Merge(m, src)
}
func (m *Sequence_Repository) XXX_Size() int {
	return xxx_messageInfo_Sequence_Repository.Size(m)
}
func (m *Sequence_Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Sequence_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Sequence_Repository proto.InternalMessageInfo

func (m *Sequence_Repository) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Sequence_Repository) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Sequence_Repository) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Sequence_Repository) GetType() *RepositoryTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Sequence_Repository) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Sequence_Repository) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Sequence_Repository) GetDatasetId() *String {
	if m != nil {
		return m.DatasetId
	}
	return nil
}

func (m *Sequence_Repository) GetVariantsetId() *String {
	if m != nil {
		return m.VariantsetId
	}
	return nil
}

func (m *Sequence_Repository) GetReadsetId() *String {
	if m != nil {
		return m.ReadsetId
	}
	return nil
}

// Auto-generated from StructureDefinition for ServiceDefinition, last updated
// 2017-04-19T07:44:43.294+10:00. A description of decision support service
// functionality. See http://hl7.org/fhir/StructureDefinition/ServiceDefinition
type ServiceDefinition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this service definition (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the service definition
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the service definition
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this service definition (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this service definition (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Natural language description of the service definition
	Description *Markdown `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Why this service definition is defined
	Purpose *Markdown `protobuf:"bytes,19,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Describes the clinical usage of the module
	Usage *String `protobuf:"bytes,20,opt,name=usage,proto3" json:"usage,omitempty"`
	// When the service definition was approved by publisher
	ApprovalDate *Date `protobuf:"bytes,21,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	// When the service definition was last reviewed
	LastReviewDate *Date `protobuf:"bytes,22,opt,name=last_review_date,json=lastReviewDate,proto3" json:"last_review_date,omitempty"`
	// When the service definition is expected to be used
	EffectivePeriod *Period `protobuf:"bytes,23,opt,name=effective_period,json=effectivePeriod,proto3" json:"effective_period,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,24,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for service definition (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,25,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// E.g. Education, Treatment, Assessment, etc
	Topic []*CodeableConcept `protobuf:"bytes,26,rep,name=topic,proto3" json:"topic,omitempty"`
	// A content contributor
	Contributor []*Contributor `protobuf:"bytes,27,rep,name=contributor,proto3" json:"contributor,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,28,rep,name=contact,proto3" json:"contact,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,29,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Additional documentation, citations, etc
	RelatedArtifact []*RelatedArtifact `protobuf:"bytes,30,rep,name=related_artifact,json=relatedArtifact,proto3" json:"related_artifact,omitempty"`
	// "when" the module should be invoked
	Trigger []*TriggerDefinition `protobuf:"bytes,31,rep,name=trigger,proto3" json:"trigger,omitempty"`
	// What data is used by the module
	DataRequirement []*DataRequirement `protobuf:"bytes,32,rep,name=data_requirement,json=dataRequirement,proto3" json:"data_requirement,omitempty"`
	// Operation to invoke
	OperationDefinition  *Reference `protobuf:"bytes,33,opt,name=operation_definition,json=operationDefinition,proto3" json:"operation_definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ServiceDefinition) Reset()         { *m = ServiceDefinition{} }
func (m *ServiceDefinition) String() string { return proto.CompactTextString(m) }
func (*ServiceDefinition) ProtoMessage()    {}
func (*ServiceDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{103}
}

func (m *ServiceDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceDefinition.Unmarshal(m, b)
}
func (m *ServiceDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceDefinition.Marshal(b, m, deterministic)
}
func (m *ServiceDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceDefinition.Merge(m, src)
}
func (m *ServiceDefinition) XXX_Size() int {
	return xxx_messageInfo_ServiceDefinition.Size(m)
}
func (m *ServiceDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceDefinition proto.InternalMessageInfo

func (m *ServiceDefinition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ServiceDefinition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ServiceDefinition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ServiceDefinition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ServiceDefinition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ServiceDefinition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ServiceDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ServiceDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ServiceDefinition) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *ServiceDefinition) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ServiceDefinition) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ServiceDefinition) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ServiceDefinition) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *ServiceDefinition) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ServiceDefinition) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *ServiceDefinition) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ServiceDefinition) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *ServiceDefinition) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ServiceDefinition) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *ServiceDefinition) GetUsage() *String {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *ServiceDefinition) GetApprovalDate() *Date {
	if m != nil {
		return m.ApprovalDate
	}
	return nil
}

func (m *ServiceDefinition) GetLastReviewDate() *Date {
	if m != nil {
		return m.LastReviewDate
	}
	return nil
}

func (m *ServiceDefinition) GetEffectivePeriod() *Period {
	if m != nil {
		return m.EffectivePeriod
	}
	return nil
}

func (m *ServiceDefinition) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *ServiceDefinition) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *ServiceDefinition) GetTopic() []*CodeableConcept {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *ServiceDefinition) GetContributor() []*Contributor {
	if m != nil {
		return m.Contributor
	}
	return nil
}

func (m *ServiceDefinition) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *ServiceDefinition) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *ServiceDefinition) GetRelatedArtifact() []*RelatedArtifact {
	if m != nil {
		return m.RelatedArtifact
	}
	return nil
}

func (m *ServiceDefinition) GetTrigger() []*TriggerDefinition {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *ServiceDefinition) GetDataRequirement() []*DataRequirement {
	if m != nil {
		return m.DataRequirement
	}
	return nil
}

func (m *ServiceDefinition) GetOperationDefinition() *Reference {
	if m != nil {
		return m.OperationDefinition
	}
	return nil
}

// Auto-generated from StructureDefinition for Slot, last updated
// 2017-04-19T07:44:43.294+10:00. A slot of time on a schedule that may be
// available for booking appointments. See
// http://hl7.org/fhir/StructureDefinition/Slot
type Slot struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this item
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// A broad categorisation of the service that is to be performed during this
	// appointment
	ServiceCategory *CodeableConcept `protobuf:"bytes,10,opt,name=service_category,json=serviceCategory,proto3" json:"service_category,omitempty"`
	// The type of appointments that can be booked into this slot (ideally this
	// would be an identifiable service - which is at a location, rather than the
	// location itself). If provided then this overrides the value provided on the
	// availability resource
	ServiceType []*CodeableConcept `protobuf:"bytes,11,rep,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	// The specialty of a practitioner that would be required to perform the
	// service requested in this appointment
	Specialty []*CodeableConcept `protobuf:"bytes,12,rep,name=specialty,proto3" json:"specialty,omitempty"`
	// The style of appointment or patient that may be booked in the slot (not
	// service type)
	AppointmentType *CodeableConcept `protobuf:"bytes,13,opt,name=appointment_type,json=appointmentType,proto3" json:"appointment_type,omitempty"`
	// The schedule resource that this slot defines an interval of status
	// information
	Schedule *Reference `protobuf:"bytes,14,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// busy | free | busy-unavailable | busy-tentative | entered-in-error
	Status *SlotStatusCode `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	// Date/Time that the slot is to begin
	Start *Instant `protobuf:"bytes,16,opt,name=start,proto3" json:"start,omitempty"`
	// Date/Time that the slot is to conclude
	End *Instant `protobuf:"bytes,17,opt,name=end,proto3" json:"end,omitempty"`
	// This slot has already been overbooked, appointments are unlikely to be
	// accepted for this time
	Overbooked *Boolean `protobuf:"bytes,18,opt,name=overbooked,proto3" json:"overbooked,omitempty"`
	// Comments on the slot to describe any extended information. Such as custom
	// constraints on the slot
	Comment              *String  `protobuf:"bytes,19,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Slot) Reset()         { *m = Slot{} }
func (m *Slot) String() string { return proto.CompactTextString(m) }
func (*Slot) ProtoMessage()    {}
func (*Slot) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{104}
}

func (m *Slot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Slot.Unmarshal(m, b)
}
func (m *Slot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Slot.Marshal(b, m, deterministic)
}
func (m *Slot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Slot.Merge(m, src)
}
func (m *Slot) XXX_Size() int {
	return xxx_messageInfo_Slot.Size(m)
}
func (m *Slot) XXX_DiscardUnknown() {
	xxx_messageInfo_Slot.DiscardUnknown(m)
}

var xxx_messageInfo_Slot proto.InternalMessageInfo

func (m *Slot) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Slot) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Slot) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Slot) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Slot) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Slot) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Slot) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Slot) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Slot) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Slot) GetServiceCategory() *CodeableConcept {
	if m != nil {
		return m.ServiceCategory
	}
	return nil
}

func (m *Slot) GetServiceType() []*CodeableConcept {
	if m != nil {
		return m.ServiceType
	}
	return nil
}

func (m *Slot) GetSpecialty() []*CodeableConcept {
	if m != nil {
		return m.Specialty
	}
	return nil
}

func (m *Slot) GetAppointmentType() *CodeableConcept {
	if m != nil {
		return m.AppointmentType
	}
	return nil
}

func (m *Slot) GetSchedule() *Reference {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *Slot) GetStatus() *SlotStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Slot) GetStart() *Instant {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Slot) GetEnd() *Instant {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Slot) GetOverbooked() *Boolean {
	if m != nil {
		return m.Overbooked
	}
	return nil
}

func (m *Slot) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

// Auto-generated from StructureDefinition for Specimen, last updated
// 2017-04-19T07:44:43.294+10:00. Sample for analysis. See
// http://hl7.org/fhir/StructureDefinition/Specimen
type Specimen struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Identifier assigned by the lab
	AccessionIdentifier *Identifier `protobuf:"bytes,10,opt,name=accession_identifier,json=accessionIdentifier,proto3" json:"accession_identifier,omitempty"`
	// available | unavailable | unsatisfactory | entered-in-error
	Status *SpecimenStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Kind of material that forms the specimen
	Type *CodeableConcept `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	// Where the specimen came from. This may be from the patient(s) or from the
	// environment or a device
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// The time when specimen was received for processing
	ReceivedTime *DateTime `protobuf:"bytes,14,opt,name=received_time,json=receivedTime,proto3" json:"received_time,omitempty"`
	// Specimen from which this specimen originated
	Parent []*Reference `protobuf:"bytes,15,rep,name=parent,proto3" json:"parent,omitempty"`
	// Why the specimen was collected
	Request    []*Reference           `protobuf:"bytes,16,rep,name=request,proto3" json:"request,omitempty"`
	Collection *Specimen_Collection   `protobuf:"bytes,17,opt,name=collection,proto3" json:"collection,omitempty"`
	Processing []*Specimen_Processing `protobuf:"bytes,18,rep,name=processing,proto3" json:"processing,omitempty"`
	Container  []*Specimen_Container  `protobuf:"bytes,19,rep,name=container,proto3" json:"container,omitempty"`
	// Comments
	Note                 []*Annotation `protobuf:"bytes,20,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Specimen) Reset()         { *m = Specimen{} }
func (m *Specimen) String() string { return proto.CompactTextString(m) }
func (*Specimen) ProtoMessage()    {}
func (*Specimen) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{105}
}

func (m *Specimen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specimen.Unmarshal(m, b)
}
func (m *Specimen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specimen.Marshal(b, m, deterministic)
}
func (m *Specimen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specimen.Merge(m, src)
}
func (m *Specimen) XXX_Size() int {
	return xxx_messageInfo_Specimen.Size(m)
}
func (m *Specimen) XXX_DiscardUnknown() {
	xxx_messageInfo_Specimen.DiscardUnknown(m)
}

var xxx_messageInfo_Specimen proto.InternalMessageInfo

func (m *Specimen) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Specimen) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Specimen) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Specimen) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Specimen) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Specimen) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Specimen) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Specimen) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Specimen) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Specimen) GetAccessionIdentifier() *Identifier {
	if m != nil {
		return m.AccessionIdentifier
	}
	return nil
}

func (m *Specimen) GetStatus() *SpecimenStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Specimen) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Specimen) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Specimen) GetReceivedTime() *DateTime {
	if m != nil {
		return m.ReceivedTime
	}
	return nil
}

func (m *Specimen) GetParent() []*Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *Specimen) GetRequest() []*Reference {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Specimen) GetCollection() *Specimen_Collection {
	if m != nil {
		return m.Collection
	}
	return nil
}

func (m *Specimen) GetProcessing() []*Specimen_Processing {
	if m != nil {
		return m.Processing
	}
	return nil
}

func (m *Specimen) GetContainer() []*Specimen_Container {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *Specimen) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Collection details
type Specimen_Collection struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Who collected the specimen
	Collector *Reference                     `protobuf:"bytes,4,opt,name=collector,proto3" json:"collector,omitempty"`
	Collected *Specimen_Collection_Collected `protobuf:"bytes,5,opt,name=collected,proto3" json:"collected,omitempty"`
	// The quantity of specimen collected
	Quantity *SimpleQuantity `protobuf:"bytes,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Technique used to perform collection
	Method *CodeableConcept `protobuf:"bytes,7,opt,name=method,proto3" json:"method,omitempty"`
	// Anatomical collection site
	BodySite             *CodeableConcept `protobuf:"bytes,8,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Specimen_Collection) Reset()         { *m = Specimen_Collection{} }
func (m *Specimen_Collection) String() string { return proto.CompactTextString(m) }
func (*Specimen_Collection) ProtoMessage()    {}
func (*Specimen_Collection) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{105, 0}
}

func (m *Specimen_Collection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specimen_Collection.Unmarshal(m, b)
}
func (m *Specimen_Collection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specimen_Collection.Marshal(b, m, deterministic)
}
func (m *Specimen_Collection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specimen_Collection.Merge(m, src)
}
func (m *Specimen_Collection) XXX_Size() int {
	return xxx_messageInfo_Specimen_Collection.Size(m)
}
func (m *Specimen_Collection) XXX_DiscardUnknown() {
	xxx_messageInfo_Specimen_Collection.DiscardUnknown(m)
}

var xxx_messageInfo_Specimen_Collection proto.InternalMessageInfo

func (m *Specimen_Collection) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Specimen_Collection) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Specimen_Collection) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Specimen_Collection) GetCollector() *Reference {
	if m != nil {
		return m.Collector
	}
	return nil
}

func (m *Specimen_Collection) GetCollected() *Specimen_Collection_Collected {
	if m != nil {
		return m.Collected
	}
	return nil
}

func (m *Specimen_Collection) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Specimen_Collection) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Specimen_Collection) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

// Collection time
type Specimen_Collection_Collected struct {
	// Types that are valid to be assigned to Collected:
	//	*Specimen_Collection_Collected_DateTime
	//	*Specimen_Collection_Collected_Period
	Collected            isSpecimen_Collection_Collected_Collected `protobuf_oneof:"collected"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *Specimen_Collection_Collected) Reset()         { *m = Specimen_Collection_Collected{} }
func (m *Specimen_Collection_Collected) String() string { return proto.CompactTextString(m) }
func (*Specimen_Collection_Collected) ProtoMessage()    {}
func (*Specimen_Collection_Collected) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{105, 0, 0}
}

func (m *Specimen_Collection_Collected) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specimen_Collection_Collected.Unmarshal(m, b)
}
func (m *Specimen_Collection_Collected) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specimen_Collection_Collected.Marshal(b, m, deterministic)
}
func (m *Specimen_Collection_Collected) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specimen_Collection_Collected.Merge(m, src)
}
func (m *Specimen_Collection_Collected) XXX_Size() int {
	return xxx_messageInfo_Specimen_Collection_Collected.Size(m)
}
func (m *Specimen_Collection_Collected) XXX_DiscardUnknown() {
	xxx_messageInfo_Specimen_Collection_Collected.DiscardUnknown(m)
}

var xxx_messageInfo_Specimen_Collection_Collected proto.InternalMessageInfo

type isSpecimen_Collection_Collected_Collected interface {
	isSpecimen_Collection_Collected_Collected()
}

type Specimen_Collection_Collected_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Specimen_Collection_Collected_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Specimen_Collection_Collected_DateTime) isSpecimen_Collection_Collected_Collected() {}

func (*Specimen_Collection_Collected_Period) isSpecimen_Collection_Collected_Collected() {}

func (m *Specimen_Collection_Collected) GetCollected() isSpecimen_Collection_Collected_Collected {
	if m != nil {
		return m.Collected
	}
	return nil
}

func (m *Specimen_Collection_Collected) GetDateTime() *DateTime {
	if x, ok := m.GetCollected().(*Specimen_Collection_Collected_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Specimen_Collection_Collected) GetPeriod() *Period {
	if x, ok := m.GetCollected().(*Specimen_Collection_Collected_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Specimen_Collection_Collected) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Specimen_Collection_Collected_OneofMarshaler, _Specimen_Collection_Collected_OneofUnmarshaler, _Specimen_Collection_Collected_OneofSizer, []interface{}{
		(*Specimen_Collection_Collected_DateTime)(nil),
		(*Specimen_Collection_Collected_Period)(nil),
	}
}

func _Specimen_Collection_Collected_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Specimen_Collection_Collected)
	// collected
	switch x := m.Collected.(type) {
	case *Specimen_Collection_Collected_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Specimen_Collection_Collected_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Specimen_Collection_Collected.Collected has unexpected type %T", x)
	}
	return nil
}

func _Specimen_Collection_Collected_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Specimen_Collection_Collected)
	switch tag {
	case 1: // collected.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Collected = &Specimen_Collection_Collected_DateTime{msg}
		return true, err
	case 2: // collected.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Collected = &Specimen_Collection_Collected_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Specimen_Collection_Collected_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Specimen_Collection_Collected)
	// collected
	switch x := m.Collected.(type) {
	case *Specimen_Collection_Collected_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Specimen_Collection_Collected_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Processing and processing step details
type Specimen_Processing struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Textual description of procedure
	Description *String `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Indicates the treatment step  applied to the specimen
	Procedure *CodeableConcept `protobuf:"bytes,5,opt,name=procedure,proto3" json:"procedure,omitempty"`
	// Material used in the processing step
	Additive             []*Reference              `protobuf:"bytes,6,rep,name=additive,proto3" json:"additive,omitempty"`
	Time                 *Specimen_Processing_Time `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Specimen_Processing) Reset()         { *m = Specimen_Processing{} }
func (m *Specimen_Processing) String() string { return proto.CompactTextString(m) }
func (*Specimen_Processing) ProtoMessage()    {}
func (*Specimen_Processing) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{105, 1}
}

func (m *Specimen_Processing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specimen_Processing.Unmarshal(m, b)
}
func (m *Specimen_Processing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specimen_Processing.Marshal(b, m, deterministic)
}
func (m *Specimen_Processing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specimen_Processing.Merge(m, src)
}
func (m *Specimen_Processing) XXX_Size() int {
	return xxx_messageInfo_Specimen_Processing.Size(m)
}
func (m *Specimen_Processing) XXX_DiscardUnknown() {
	xxx_messageInfo_Specimen_Processing.DiscardUnknown(m)
}

var xxx_messageInfo_Specimen_Processing proto.InternalMessageInfo

func (m *Specimen_Processing) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Specimen_Processing) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Specimen_Processing) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Specimen_Processing) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Specimen_Processing) GetProcedure() *CodeableConcept {
	if m != nil {
		return m.Procedure
	}
	return nil
}

func (m *Specimen_Processing) GetAdditive() []*Reference {
	if m != nil {
		return m.Additive
	}
	return nil
}

func (m *Specimen_Processing) GetTime() *Specimen_Processing_Time {
	if m != nil {
		return m.Time
	}
	return nil
}

// Date and time of specimen processing
type Specimen_Processing_Time struct {
	// Types that are valid to be assigned to Time:
	//	*Specimen_Processing_Time_DateTime
	//	*Specimen_Processing_Time_Period
	Time                 isSpecimen_Processing_Time_Time `protobuf_oneof:"time"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Specimen_Processing_Time) Reset()         { *m = Specimen_Processing_Time{} }
func (m *Specimen_Processing_Time) String() string { return proto.CompactTextString(m) }
func (*Specimen_Processing_Time) ProtoMessage()    {}
func (*Specimen_Processing_Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{105, 1, 0}
}

func (m *Specimen_Processing_Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specimen_Processing_Time.Unmarshal(m, b)
}
func (m *Specimen_Processing_Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specimen_Processing_Time.Marshal(b, m, deterministic)
}
func (m *Specimen_Processing_Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specimen_Processing_Time.Merge(m, src)
}
func (m *Specimen_Processing_Time) XXX_Size() int {
	return xxx_messageInfo_Specimen_Processing_Time.Size(m)
}
func (m *Specimen_Processing_Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Specimen_Processing_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Specimen_Processing_Time proto.InternalMessageInfo

type isSpecimen_Processing_Time_Time interface {
	isSpecimen_Processing_Time_Time()
}

type Specimen_Processing_Time_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Specimen_Processing_Time_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Specimen_Processing_Time_DateTime) isSpecimen_Processing_Time_Time() {}

func (*Specimen_Processing_Time_Period) isSpecimen_Processing_Time_Time() {}

func (m *Specimen_Processing_Time) GetTime() isSpecimen_Processing_Time_Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Specimen_Processing_Time) GetDateTime() *DateTime {
	if x, ok := m.GetTime().(*Specimen_Processing_Time_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Specimen_Processing_Time) GetPeriod() *Period {
	if x, ok := m.GetTime().(*Specimen_Processing_Time_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Specimen_Processing_Time) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Specimen_Processing_Time_OneofMarshaler, _Specimen_Processing_Time_OneofUnmarshaler, _Specimen_Processing_Time_OneofSizer, []interface{}{
		(*Specimen_Processing_Time_DateTime)(nil),
		(*Specimen_Processing_Time_Period)(nil),
	}
}

func _Specimen_Processing_Time_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Specimen_Processing_Time)
	// time
	switch x := m.Time.(type) {
	case *Specimen_Processing_Time_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Specimen_Processing_Time_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Specimen_Processing_Time.Time has unexpected type %T", x)
	}
	return nil
}

func _Specimen_Processing_Time_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Specimen_Processing_Time)
	switch tag {
	case 1: // time.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Time = &Specimen_Processing_Time_DateTime{msg}
		return true, err
	case 2: // time.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Time = &Specimen_Processing_Time_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Specimen_Processing_Time_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Specimen_Processing_Time)
	// time
	switch x := m.Time.(type) {
	case *Specimen_Processing_Time_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Specimen_Processing_Time_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Direct container of specimen (tube/slide, etc.)
type Specimen_Container struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Id for the container
	Identifier []*Identifier `protobuf:"bytes,4,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Textual description of the container
	Description *String `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Kind of container directly associated with specimen
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Container volume or size
	Capacity *SimpleQuantity `protobuf:"bytes,7,opt,name=capacity,proto3" json:"capacity,omitempty"`
	// Quantity of specimen within container
	SpecimenQuantity     *SimpleQuantity              `protobuf:"bytes,8,opt,name=specimen_quantity,json=specimenQuantity,proto3" json:"specimen_quantity,omitempty"`
	Additive             *Specimen_Container_Additive `protobuf:"bytes,9,opt,name=additive,proto3" json:"additive,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Specimen_Container) Reset()         { *m = Specimen_Container{} }
func (m *Specimen_Container) String() string { return proto.CompactTextString(m) }
func (*Specimen_Container) ProtoMessage()    {}
func (*Specimen_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{105, 2}
}

func (m *Specimen_Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specimen_Container.Unmarshal(m, b)
}
func (m *Specimen_Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specimen_Container.Marshal(b, m, deterministic)
}
func (m *Specimen_Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specimen_Container.Merge(m, src)
}
func (m *Specimen_Container) XXX_Size() int {
	return xxx_messageInfo_Specimen_Container.Size(m)
}
func (m *Specimen_Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Specimen_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Specimen_Container proto.InternalMessageInfo

func (m *Specimen_Container) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Specimen_Container) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Specimen_Container) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Specimen_Container) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Specimen_Container) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Specimen_Container) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Specimen_Container) GetCapacity() *SimpleQuantity {
	if m != nil {
		return m.Capacity
	}
	return nil
}

func (m *Specimen_Container) GetSpecimenQuantity() *SimpleQuantity {
	if m != nil {
		return m.SpecimenQuantity
	}
	return nil
}

func (m *Specimen_Container) GetAdditive() *Specimen_Container_Additive {
	if m != nil {
		return m.Additive
	}
	return nil
}

// Additive associated with container
type Specimen_Container_Additive struct {
	// Types that are valid to be assigned to Additive:
	//	*Specimen_Container_Additive_CodeableConcept
	//	*Specimen_Container_Additive_Reference
	Additive             isSpecimen_Container_Additive_Additive `protobuf_oneof:"additive"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *Specimen_Container_Additive) Reset()         { *m = Specimen_Container_Additive{} }
func (m *Specimen_Container_Additive) String() string { return proto.CompactTextString(m) }
func (*Specimen_Container_Additive) ProtoMessage()    {}
func (*Specimen_Container_Additive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{105, 2, 0}
}

func (m *Specimen_Container_Additive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specimen_Container_Additive.Unmarshal(m, b)
}
func (m *Specimen_Container_Additive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specimen_Container_Additive.Marshal(b, m, deterministic)
}
func (m *Specimen_Container_Additive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specimen_Container_Additive.Merge(m, src)
}
func (m *Specimen_Container_Additive) XXX_Size() int {
	return xxx_messageInfo_Specimen_Container_Additive.Size(m)
}
func (m *Specimen_Container_Additive) XXX_DiscardUnknown() {
	xxx_messageInfo_Specimen_Container_Additive.DiscardUnknown(m)
}

var xxx_messageInfo_Specimen_Container_Additive proto.InternalMessageInfo

type isSpecimen_Container_Additive_Additive interface {
	isSpecimen_Container_Additive_Additive()
}

type Specimen_Container_Additive_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Specimen_Container_Additive_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Specimen_Container_Additive_CodeableConcept) isSpecimen_Container_Additive_Additive() {}

func (*Specimen_Container_Additive_Reference) isSpecimen_Container_Additive_Additive() {}

func (m *Specimen_Container_Additive) GetAdditive() isSpecimen_Container_Additive_Additive {
	if m != nil {
		return m.Additive
	}
	return nil
}

func (m *Specimen_Container_Additive) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetAdditive().(*Specimen_Container_Additive_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Specimen_Container_Additive) GetReference() *Reference {
	if x, ok := m.GetAdditive().(*Specimen_Container_Additive_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Specimen_Container_Additive) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Specimen_Container_Additive_OneofMarshaler, _Specimen_Container_Additive_OneofUnmarshaler, _Specimen_Container_Additive_OneofSizer, []interface{}{
		(*Specimen_Container_Additive_CodeableConcept)(nil),
		(*Specimen_Container_Additive_Reference)(nil),
	}
}

func _Specimen_Container_Additive_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Specimen_Container_Additive)
	// additive
	switch x := m.Additive.(type) {
	case *Specimen_Container_Additive_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Specimen_Container_Additive_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Specimen_Container_Additive.Additive has unexpected type %T", x)
	}
	return nil
}

func _Specimen_Container_Additive_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Specimen_Container_Additive)
	switch tag {
	case 1: // additive.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Additive = &Specimen_Container_Additive_CodeableConcept{msg}
		return true, err
	case 2: // additive.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Additive = &Specimen_Container_Additive_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Specimen_Container_Additive_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Specimen_Container_Additive)
	// additive
	switch x := m.Additive.(type) {
	case *Specimen_Container_Additive_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Specimen_Container_Additive_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for StructureDefinition, last updated
// 2017-04-19T07:44:43.294+10:00. Structural Definition. See
// http://hl7.org/fhir/StructureDefinition/StructureDefinition
type StructureDefinition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this structure definition (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the structure definition
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the structure definition
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this structure definition (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this structure definition (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the structure definition
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,20,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for structure definition (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,21,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this structure definition is defined
	Purpose *Markdown `protobuf:"bytes,22,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,23,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Assist with indexing and finding
	Keyword []*Coding `protobuf:"bytes,24,rep,name=keyword,proto3" json:"keyword,omitempty"`
	// FHIR Version this StructureDefinition targets
	FhirVersion *Id                            `protobuf:"bytes,25,opt,name=fhir_version,json=fhirVersion,proto3" json:"fhir_version,omitempty"`
	Mapping     []*StructureDefinition_Mapping `protobuf:"bytes,26,rep,name=mapping,proto3" json:"mapping,omitempty"`
	// primitive-type | complex-type | resource | logical
	Kind *StructureDefinitionKindCode `protobuf:"bytes,27,opt,name=kind,proto3" json:"kind,omitempty"`
	// Whether the structure is abstract
	Abstract *Boolean `protobuf:"bytes,28,opt,name=abstract,proto3" json:"abstract,omitempty"`
	// resource | datatype | extension
	ContextType *ExtensionContextCode `protobuf:"bytes,29,opt,name=context_type,json=contextType,proto3" json:"context_type,omitempty"`
	// Where the extension can be used in instances
	Context []*String `protobuf:"bytes,30,rep,name=context,proto3" json:"context,omitempty"`
	// FHIRPath invariants - when the extension can be used
	ContextInvariant []*String `protobuf:"bytes,31,rep,name=context_invariant,json=contextInvariant,proto3" json:"context_invariant,omitempty"`
	// Type defined or constrained by this structure
	Type *FHIRDefinedTypeExtCode `protobuf:"bytes,32,opt,name=type,proto3" json:"type,omitempty"`
	// Definition that this type is constrained/specialized from
	BaseDefinition *Uri `protobuf:"bytes,33,opt,name=base_definition,json=baseDefinition,proto3" json:"base_definition,omitempty"`
	// specialization | constraint - How relates to base definition
	Derivation           *TypeDerivationRuleCode           `protobuf:"bytes,34,opt,name=derivation,proto3" json:"derivation,omitempty"`
	Snapshot             *StructureDefinition_Snapshot     `protobuf:"bytes,35,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Differential         *StructureDefinition_Differential `protobuf:"bytes,36,opt,name=differential,proto3" json:"differential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *StructureDefinition) Reset()         { *m = StructureDefinition{} }
func (m *StructureDefinition) String() string { return proto.CompactTextString(m) }
func (*StructureDefinition) ProtoMessage()    {}
func (*StructureDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{106}
}

func (m *StructureDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureDefinition.Unmarshal(m, b)
}
func (m *StructureDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureDefinition.Marshal(b, m, deterministic)
}
func (m *StructureDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureDefinition.Merge(m, src)
}
func (m *StructureDefinition) XXX_Size() int {
	return xxx_messageInfo_StructureDefinition.Size(m)
}
func (m *StructureDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_StructureDefinition proto.InternalMessageInfo

func (m *StructureDefinition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureDefinition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *StructureDefinition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *StructureDefinition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *StructureDefinition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *StructureDefinition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *StructureDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureDefinition) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *StructureDefinition) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *StructureDefinition) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *StructureDefinition) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *StructureDefinition) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *StructureDefinition) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StructureDefinition) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *StructureDefinition) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *StructureDefinition) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *StructureDefinition) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *StructureDefinition) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *StructureDefinition) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *StructureDefinition) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *StructureDefinition) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *StructureDefinition) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *StructureDefinition) GetKeyword() []*Coding {
	if m != nil {
		return m.Keyword
	}
	return nil
}

func (m *StructureDefinition) GetFhirVersion() *Id {
	if m != nil {
		return m.FhirVersion
	}
	return nil
}

func (m *StructureDefinition) GetMapping() []*StructureDefinition_Mapping {
	if m != nil {
		return m.Mapping
	}
	return nil
}

func (m *StructureDefinition) GetKind() *StructureDefinitionKindCode {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *StructureDefinition) GetAbstract() *Boolean {
	if m != nil {
		return m.Abstract
	}
	return nil
}

func (m *StructureDefinition) GetContextType() *ExtensionContextCode {
	if m != nil {
		return m.ContextType
	}
	return nil
}

func (m *StructureDefinition) GetContext() []*String {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *StructureDefinition) GetContextInvariant() []*String {
	if m != nil {
		return m.ContextInvariant
	}
	return nil
}

func (m *StructureDefinition) GetType() *FHIRDefinedTypeExtCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *StructureDefinition) GetBaseDefinition() *Uri {
	if m != nil {
		return m.BaseDefinition
	}
	return nil
}

func (m *StructureDefinition) GetDerivation() *TypeDerivationRuleCode {
	if m != nil {
		return m.Derivation
	}
	return nil
}

func (m *StructureDefinition) GetSnapshot() *StructureDefinition_Snapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

func (m *StructureDefinition) GetDifferential() *StructureDefinition_Differential {
	if m != nil {
		return m.Differential
	}
	return nil
}

// External specification that the content is mapped to
type StructureDefinition_Mapping struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Internal id when this mapping is used
	Identity *Id `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
	// Identifies what this mapping refers to
	Uri *Uri `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// Names what this mapping refers to
	Name *String `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Versions, Issues, Scope limitations etc.
	Comment              *String  `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StructureDefinition_Mapping) Reset()         { *m = StructureDefinition_Mapping{} }
func (m *StructureDefinition_Mapping) String() string { return proto.CompactTextString(m) }
func (*StructureDefinition_Mapping) ProtoMessage()    {}
func (*StructureDefinition_Mapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{106, 0}
}

func (m *StructureDefinition_Mapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureDefinition_Mapping.Unmarshal(m, b)
}
func (m *StructureDefinition_Mapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureDefinition_Mapping.Marshal(b, m, deterministic)
}
func (m *StructureDefinition_Mapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureDefinition_Mapping.Merge(m, src)
}
func (m *StructureDefinition_Mapping) XXX_Size() int {
	return xxx_messageInfo_StructureDefinition_Mapping.Size(m)
}
func (m *StructureDefinition_Mapping) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureDefinition_Mapping.DiscardUnknown(m)
}

var xxx_messageInfo_StructureDefinition_Mapping proto.InternalMessageInfo

func (m *StructureDefinition_Mapping) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureDefinition_Mapping) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureDefinition_Mapping) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureDefinition_Mapping) GetIdentity() *Id {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *StructureDefinition_Mapping) GetUri() *Uri {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *StructureDefinition_Mapping) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *StructureDefinition_Mapping) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

// Snapshot view of the structure
type StructureDefinition_Snapshot struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Definition of elements in the resource (if no StructureDefinition)
	Element              []*ElementDefinition `protobuf:"bytes,4,rep,name=element,proto3" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StructureDefinition_Snapshot) Reset()         { *m = StructureDefinition_Snapshot{} }
func (m *StructureDefinition_Snapshot) String() string { return proto.CompactTextString(m) }
func (*StructureDefinition_Snapshot) ProtoMessage()    {}
func (*StructureDefinition_Snapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{106, 1}
}

func (m *StructureDefinition_Snapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureDefinition_Snapshot.Unmarshal(m, b)
}
func (m *StructureDefinition_Snapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureDefinition_Snapshot.Marshal(b, m, deterministic)
}
func (m *StructureDefinition_Snapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureDefinition_Snapshot.Merge(m, src)
}
func (m *StructureDefinition_Snapshot) XXX_Size() int {
	return xxx_messageInfo_StructureDefinition_Snapshot.Size(m)
}
func (m *StructureDefinition_Snapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureDefinition_Snapshot.DiscardUnknown(m)
}

var xxx_messageInfo_StructureDefinition_Snapshot proto.InternalMessageInfo

func (m *StructureDefinition_Snapshot) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureDefinition_Snapshot) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureDefinition_Snapshot) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureDefinition_Snapshot) GetElement() []*ElementDefinition {
	if m != nil {
		return m.Element
	}
	return nil
}

// Differential view of the structure
type StructureDefinition_Differential struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Definition of elements in the resource (if no StructureDefinition)
	Element              []*ElementDefinition `protobuf:"bytes,4,rep,name=element,proto3" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StructureDefinition_Differential) Reset()         { *m = StructureDefinition_Differential{} }
func (m *StructureDefinition_Differential) String() string { return proto.CompactTextString(m) }
func (*StructureDefinition_Differential) ProtoMessage()    {}
func (*StructureDefinition_Differential) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{106, 2}
}

func (m *StructureDefinition_Differential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureDefinition_Differential.Unmarshal(m, b)
}
func (m *StructureDefinition_Differential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureDefinition_Differential.Marshal(b, m, deterministic)
}
func (m *StructureDefinition_Differential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureDefinition_Differential.Merge(m, src)
}
func (m *StructureDefinition_Differential) XXX_Size() int {
	return xxx_messageInfo_StructureDefinition_Differential.Size(m)
}
func (m *StructureDefinition_Differential) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureDefinition_Differential.DiscardUnknown(m)
}

var xxx_messageInfo_StructureDefinition_Differential proto.InternalMessageInfo

func (m *StructureDefinition_Differential) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureDefinition_Differential) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureDefinition_Differential) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureDefinition_Differential) GetElement() []*ElementDefinition {
	if m != nil {
		return m.Element
	}
	return nil
}

// Auto-generated from StructureDefinition for StructureMap, last updated
// 2017-04-19T07:44:43.294+10:00. A Map of relationships between 2 structures
// that can be used to transform data. See
// http://hl7.org/fhir/StructureDefinition/StructureMap
type StructureMap struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this structure map (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the structure map
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the structure map
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this structure map (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this structure map (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the structure map
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,20,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for structure map (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,21,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this structure map is defined
	Purpose *Markdown `protobuf:"bytes,22,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown                 `protobuf:"bytes,23,opt,name=copyright,proto3" json:"copyright,omitempty"`
	Structure []*StructureMap_Structure `protobuf:"bytes,24,rep,name=structure,proto3" json:"structure,omitempty"`
	// Other maps used by this map (canonical URLs)
	Import               []*Uri                `protobuf:"bytes,25,rep,name=import,proto3" json:"import,omitempty"`
	Group                []*StructureMap_Group `protobuf:"bytes,26,rep,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StructureMap) Reset()         { *m = StructureMap{} }
func (m *StructureMap) String() string { return proto.CompactTextString(m) }
func (*StructureMap) ProtoMessage()    {}
func (*StructureMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107}
}

func (m *StructureMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap.Unmarshal(m, b)
}
func (m *StructureMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap.Marshal(b, m, deterministic)
}
func (m *StructureMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap.Merge(m, src)
}
func (m *StructureMap) XXX_Size() int {
	return xxx_messageInfo_StructureMap.Size(m)
}
func (m *StructureMap) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap proto.InternalMessageInfo

func (m *StructureMap) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureMap) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *StructureMap) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *StructureMap) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *StructureMap) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *StructureMap) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *StructureMap) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureMap) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureMap) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *StructureMap) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *StructureMap) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *StructureMap) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *StructureMap) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *StructureMap) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StructureMap) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *StructureMap) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *StructureMap) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *StructureMap) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *StructureMap) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *StructureMap) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *StructureMap) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *StructureMap) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *StructureMap) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *StructureMap) GetStructure() []*StructureMap_Structure {
	if m != nil {
		return m.Structure
	}
	return nil
}

func (m *StructureMap) GetImport() []*Uri {
	if m != nil {
		return m.Import
	}
	return nil
}

func (m *StructureMap) GetGroup() []*StructureMap_Group {
	if m != nil {
		return m.Group
	}
	return nil
}

// Structure Definition used by this map
type StructureMap_Structure struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Canonical URL for structure definition
	Url *Uri `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// source | queried | target | produced
	Mode *StructureMapModelModeCode `protobuf:"bytes,5,opt,name=mode,proto3" json:"mode,omitempty"`
	// Name for type in this map
	Alias *String `protobuf:"bytes,6,opt,name=alias,proto3" json:"alias,omitempty"`
	// Documentation on use of structure
	Documentation        *String  `protobuf:"bytes,7,opt,name=documentation,proto3" json:"documentation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StructureMap_Structure) Reset()         { *m = StructureMap_Structure{} }
func (m *StructureMap_Structure) String() string { return proto.CompactTextString(m) }
func (*StructureMap_Structure) ProtoMessage()    {}
func (*StructureMap_Structure) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 0}
}

func (m *StructureMap_Structure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Structure.Unmarshal(m, b)
}
func (m *StructureMap_Structure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Structure.Marshal(b, m, deterministic)
}
func (m *StructureMap_Structure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Structure.Merge(m, src)
}
func (m *StructureMap_Structure) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Structure.Size(m)
}
func (m *StructureMap_Structure) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Structure.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Structure proto.InternalMessageInfo

func (m *StructureMap_Structure) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureMap_Structure) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureMap_Structure) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureMap_Structure) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *StructureMap_Structure) GetMode() *StructureMapModelModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *StructureMap_Structure) GetAlias() *String {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *StructureMap_Structure) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

// Named sections for reader convenience
type StructureMap_Group struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Human-readable label
	Name *Id `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Another group that this group adds rules to
	Extends *Id `protobuf:"bytes,5,opt,name=extends,proto3" json:"extends,omitempty"`
	// none | types | type-and-types
	TypeMode *StructureMapGroupTypeModeCode `protobuf:"bytes,6,opt,name=type_mode,json=typeMode,proto3" json:"type_mode,omitempty"`
	// Additional description/explaination for group
	Documentation        *String                     `protobuf:"bytes,7,opt,name=documentation,proto3" json:"documentation,omitempty"`
	Input                []*StructureMap_Group_Input `protobuf:"bytes,8,rep,name=input,proto3" json:"input,omitempty"`
	Rule                 []*StructureMap_Group_Rule  `protobuf:"bytes,9,rep,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *StructureMap_Group) Reset()         { *m = StructureMap_Group{} }
func (m *StructureMap_Group) String() string { return proto.CompactTextString(m) }
func (*StructureMap_Group) ProtoMessage()    {}
func (*StructureMap_Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 1}
}

func (m *StructureMap_Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Group.Unmarshal(m, b)
}
func (m *StructureMap_Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Group.Marshal(b, m, deterministic)
}
func (m *StructureMap_Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Group.Merge(m, src)
}
func (m *StructureMap_Group) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Group.Size(m)
}
func (m *StructureMap_Group) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Group.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Group proto.InternalMessageInfo

func (m *StructureMap_Group) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureMap_Group) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureMap_Group) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureMap_Group) GetName() *Id {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *StructureMap_Group) GetExtends() *Id {
	if m != nil {
		return m.Extends
	}
	return nil
}

func (m *StructureMap_Group) GetTypeMode() *StructureMapGroupTypeModeCode {
	if m != nil {
		return m.TypeMode
	}
	return nil
}

func (m *StructureMap_Group) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

func (m *StructureMap_Group) GetInput() []*StructureMap_Group_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *StructureMap_Group) GetRule() []*StructureMap_Group_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

// Named instance provided when invoking the map
type StructureMap_Group_Input struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name for this instance of data
	Name *Id `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Type for this instance of data
	Type *String `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// source | target
	Mode *StructureMapInputModeCode `protobuf:"bytes,6,opt,name=mode,proto3" json:"mode,omitempty"`
	// Documentation for this instance of data
	Documentation        *String  `protobuf:"bytes,7,opt,name=documentation,proto3" json:"documentation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StructureMap_Group_Input) Reset()         { *m = StructureMap_Group_Input{} }
func (m *StructureMap_Group_Input) String() string { return proto.CompactTextString(m) }
func (*StructureMap_Group_Input) ProtoMessage()    {}
func (*StructureMap_Group_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 1, 0}
}

func (m *StructureMap_Group_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Group_Input.Unmarshal(m, b)
}
func (m *StructureMap_Group_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Group_Input.Marshal(b, m, deterministic)
}
func (m *StructureMap_Group_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Group_Input.Merge(m, src)
}
func (m *StructureMap_Group_Input) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Group_Input.Size(m)
}
func (m *StructureMap_Group_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Group_Input.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Group_Input proto.InternalMessageInfo

func (m *StructureMap_Group_Input) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureMap_Group_Input) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureMap_Group_Input) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureMap_Group_Input) GetName() *Id {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *StructureMap_Group_Input) GetType() *String {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *StructureMap_Group_Input) GetMode() *StructureMapInputModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *StructureMap_Group_Input) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

// Transform Rule from source to target
type StructureMap_Group_Rule struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name of the rule for internal references
	Name   *Id                               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Source []*StructureMap_Group_Rule_Source `protobuf:"bytes,5,rep,name=source,proto3" json:"source,omitempty"`
	Target []*StructureMap_Group_Rule_Target `protobuf:"bytes,6,rep,name=target,proto3" json:"target,omitempty"`
	// Rules contained in this rule
	Rule      []*StructureMap_Group_Rule           `protobuf:"bytes,7,rep,name=rule,proto3" json:"rule,omitempty"`
	Dependent []*StructureMap_Group_Rule_Dependent `protobuf:"bytes,8,rep,name=dependent,proto3" json:"dependent,omitempty"`
	// Documentation for this instance of data
	Documentation        *String  `protobuf:"bytes,9,opt,name=documentation,proto3" json:"documentation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StructureMap_Group_Rule) Reset()         { *m = StructureMap_Group_Rule{} }
func (m *StructureMap_Group_Rule) String() string { return proto.CompactTextString(m) }
func (*StructureMap_Group_Rule) ProtoMessage()    {}
func (*StructureMap_Group_Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 1, 1}
}

func (m *StructureMap_Group_Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Group_Rule.Unmarshal(m, b)
}
func (m *StructureMap_Group_Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Group_Rule.Marshal(b, m, deterministic)
}
func (m *StructureMap_Group_Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Group_Rule.Merge(m, src)
}
func (m *StructureMap_Group_Rule) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Group_Rule.Size(m)
}
func (m *StructureMap_Group_Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Group_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Group_Rule proto.InternalMessageInfo

func (m *StructureMap_Group_Rule) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureMap_Group_Rule) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureMap_Group_Rule) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureMap_Group_Rule) GetName() *Id {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *StructureMap_Group_Rule) GetSource() []*StructureMap_Group_Rule_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *StructureMap_Group_Rule) GetTarget() []*StructureMap_Group_Rule_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *StructureMap_Group_Rule) GetRule() []*StructureMap_Group_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *StructureMap_Group_Rule) GetDependent() []*StructureMap_Group_Rule_Dependent {
	if m != nil {
		return m.Dependent
	}
	return nil
}

func (m *StructureMap_Group_Rule) GetDocumentation() *String {
	if m != nil {
		return m.Documentation
	}
	return nil
}

// Source inputs to the mapping
type StructureMap_Group_Rule_Source struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type or variable this rule applies to
	Context *Id `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
	// Specified minimum cardinality
	Min *Integer `protobuf:"bytes,5,opt,name=min,proto3" json:"min,omitempty"`
	// Specified maximum cardinality (number or *)
	Max *String `protobuf:"bytes,6,opt,name=max,proto3" json:"max,omitempty"`
	// Rule only applies if source has this type
	Type         *String                                      `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	DefaultValue *StructureMap_Group_Rule_Source_DefaultValue `protobuf:"bytes,8,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Optional field for this source
	Element *String `protobuf:"bytes,9,opt,name=element,proto3" json:"element,omitempty"`
	// first | not_first | last | not_last | only_one
	ListMode *StructureMapSourceListModeCode `protobuf:"bytes,10,opt,name=list_mode,json=listMode,proto3" json:"list_mode,omitempty"`
	// Named context for field, if a field is specified
	Variable *Id `protobuf:"bytes,11,opt,name=variable,proto3" json:"variable,omitempty"`
	// FHIRPath expression  - must be true or the rule does not apply
	Condition *String `protobuf:"bytes,12,opt,name=condition,proto3" json:"condition,omitempty"`
	// FHIRPath expression  - must be true or the mapping engine throws an
	// error instead of completing
	Check                *String  `protobuf:"bytes,13,opt,name=check,proto3" json:"check,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StructureMap_Group_Rule_Source) Reset()         { *m = StructureMap_Group_Rule_Source{} }
func (m *StructureMap_Group_Rule_Source) String() string { return proto.CompactTextString(m) }
func (*StructureMap_Group_Rule_Source) ProtoMessage()    {}
func (*StructureMap_Group_Rule_Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 1, 1, 0}
}

func (m *StructureMap_Group_Rule_Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Group_Rule_Source.Unmarshal(m, b)
}
func (m *StructureMap_Group_Rule_Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Group_Rule_Source.Marshal(b, m, deterministic)
}
func (m *StructureMap_Group_Rule_Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Group_Rule_Source.Merge(m, src)
}
func (m *StructureMap_Group_Rule_Source) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Group_Rule_Source.Size(m)
}
func (m *StructureMap_Group_Rule_Source) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Group_Rule_Source.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Group_Rule_Source proto.InternalMessageInfo

func (m *StructureMap_Group_Rule_Source) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetContext() *Id {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetMin() *Integer {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetMax() *String {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetType() *String {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetDefaultValue() *StructureMap_Group_Rule_Source_DefaultValue {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetElement() *String {
	if m != nil {
		return m.Element
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetListMode() *StructureMapSourceListModeCode {
	if m != nil {
		return m.ListMode
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetVariable() *Id {
	if m != nil {
		return m.Variable
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetCondition() *String {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source) GetCheck() *String {
	if m != nil {
		return m.Check
	}
	return nil
}

// Default value if no value exists
type StructureMap_Group_Rule_Source_DefaultValue struct {
	// Types that are valid to be assigned to DefaultValue:
	//	*StructureMap_Group_Rule_Source_DefaultValue_Base64Binary
	//	*StructureMap_Group_Rule_Source_DefaultValue_Boolean
	//	*StructureMap_Group_Rule_Source_DefaultValue_Code
	//	*StructureMap_Group_Rule_Source_DefaultValue_Date
	//	*StructureMap_Group_Rule_Source_DefaultValue_DateTime
	//	*StructureMap_Group_Rule_Source_DefaultValue_Decimal
	//	*StructureMap_Group_Rule_Source_DefaultValue_Id
	//	*StructureMap_Group_Rule_Source_DefaultValue_Instant
	//	*StructureMap_Group_Rule_Source_DefaultValue_Integer
	//	*StructureMap_Group_Rule_Source_DefaultValue_Markdown
	//	*StructureMap_Group_Rule_Source_DefaultValue_Oid
	//	*StructureMap_Group_Rule_Source_DefaultValue_PositiveInt
	//	*StructureMap_Group_Rule_Source_DefaultValue_StringValue
	//	*StructureMap_Group_Rule_Source_DefaultValue_Time
	//	*StructureMap_Group_Rule_Source_DefaultValue_UnsignedInt
	//	*StructureMap_Group_Rule_Source_DefaultValue_Uri
	//	*StructureMap_Group_Rule_Source_DefaultValue_Address
	//	*StructureMap_Group_Rule_Source_DefaultValue_Age
	//	*StructureMap_Group_Rule_Source_DefaultValue_Annotation
	//	*StructureMap_Group_Rule_Source_DefaultValue_Attachment
	//	*StructureMap_Group_Rule_Source_DefaultValue_CodeableConcept
	//	*StructureMap_Group_Rule_Source_DefaultValue_Coding
	//	*StructureMap_Group_Rule_Source_DefaultValue_ContactPoint
	//	*StructureMap_Group_Rule_Source_DefaultValue_Count
	//	*StructureMap_Group_Rule_Source_DefaultValue_Distance
	//	*StructureMap_Group_Rule_Source_DefaultValue_Duration
	//	*StructureMap_Group_Rule_Source_DefaultValue_HumanName
	//	*StructureMap_Group_Rule_Source_DefaultValue_Identifier
	//	*StructureMap_Group_Rule_Source_DefaultValue_Money
	//	*StructureMap_Group_Rule_Source_DefaultValue_Period
	//	*StructureMap_Group_Rule_Source_DefaultValue_Quantity
	//	*StructureMap_Group_Rule_Source_DefaultValue_Range
	//	*StructureMap_Group_Rule_Source_DefaultValue_Ratio
	//	*StructureMap_Group_Rule_Source_DefaultValue_Reference
	//	*StructureMap_Group_Rule_Source_DefaultValue_SampledData
	//	*StructureMap_Group_Rule_Source_DefaultValue_Signature
	//	*StructureMap_Group_Rule_Source_DefaultValue_Timing
	//	*StructureMap_Group_Rule_Source_DefaultValue_Meta
	DefaultValue         isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue `protobuf_oneof:"default_value"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) Reset() {
	*m = StructureMap_Group_Rule_Source_DefaultValue{}
}
func (m *StructureMap_Group_Rule_Source_DefaultValue) String() string {
	return proto.CompactTextString(m)
}
func (*StructureMap_Group_Rule_Source_DefaultValue) ProtoMessage() {}
func (*StructureMap_Group_Rule_Source_DefaultValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 1, 1, 0, 0}
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Group_Rule_Source_DefaultValue.Unmarshal(m, b)
}
func (m *StructureMap_Group_Rule_Source_DefaultValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Group_Rule_Source_DefaultValue.Marshal(b, m, deterministic)
}
func (m *StructureMap_Group_Rule_Source_DefaultValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Group_Rule_Source_DefaultValue.Merge(m, src)
}
func (m *StructureMap_Group_Rule_Source_DefaultValue) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Group_Rule_Source_DefaultValue.Size(m)
}
func (m *StructureMap_Group_Rule_Source_DefaultValue) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Group_Rule_Source_DefaultValue.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Group_Rule_Source_DefaultValue proto.InternalMessageInfo

type isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue interface {
	isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue()
}

type StructureMap_Group_Rule_Source_DefaultValue_Base64Binary struct {
	Base64Binary *Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Code struct {
	Code *Code `protobuf:"bytes,3,opt,name=code,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,6,opt,name=decimal,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Id struct {
	Id *Id `protobuf:"bytes,7,opt,name=id,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Instant struct {
	Instant *Instant `protobuf:"bytes,8,opt,name=instant,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Integer struct {
	Integer *Integer `protobuf:"bytes,9,opt,name=integer,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Markdown struct {
	Markdown *Markdown `protobuf:"bytes,10,opt,name=markdown,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Oid struct {
	Oid *Oid `protobuf:"bytes,11,opt,name=oid,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_PositiveInt struct {
	PositiveInt *PositiveInt `protobuf:"bytes,12,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_StringValue struct {
	StringValue *String `protobuf:"bytes,13,opt,name=string_value,json=string,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Time struct {
	Time *Time `protobuf:"bytes,14,opt,name=time,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,15,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Uri struct {
	Uri *Uri `protobuf:"bytes,16,opt,name=uri,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Address struct {
	Address *Address `protobuf:"bytes,17,opt,name=address,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Age struct {
	Age *Age `protobuf:"bytes,18,opt,name=age,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Annotation struct {
	Annotation *Annotation `protobuf:"bytes,19,opt,name=annotation,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,20,opt,name=attachment,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,21,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Coding struct {
	Coding *Coding `protobuf:"bytes,22,opt,name=coding,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_ContactPoint struct {
	ContactPoint *ContactPoint `protobuf:"bytes,23,opt,name=contact_point,json=contactPoint,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Count struct {
	Count *Count `protobuf:"bytes,24,opt,name=count,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Distance struct {
	Distance *Distance `protobuf:"bytes,25,opt,name=distance,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Duration struct {
	Duration *Duration `protobuf:"bytes,26,opt,name=duration,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_HumanName struct {
	HumanName *HumanName `protobuf:"bytes,27,opt,name=human_name,json=humanName,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,28,opt,name=identifier,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Money struct {
	Money *Money `protobuf:"bytes,29,opt,name=money,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Period struct {
	Period *Period `protobuf:"bytes,30,opt,name=period,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,31,opt,name=quantity,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Range struct {
	Range *Range `protobuf:"bytes,32,opt,name=range,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,33,opt,name=ratio,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Reference struct {
	Reference *Reference `protobuf:"bytes,34,opt,name=reference,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,35,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Signature struct {
	Signature *Signature `protobuf:"bytes,36,opt,name=signature,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Timing struct {
	Timing *Timing `protobuf:"bytes,37,opt,name=timing,proto3,oneof"`
}

type StructureMap_Group_Rule_Source_DefaultValue_Meta struct {
	Meta *Meta `protobuf:"bytes,38,opt,name=meta,proto3,oneof"`
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Base64Binary) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Boolean) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Code) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Date) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_DateTime) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Decimal) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Id) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Instant) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Integer) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Markdown) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Oid) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_PositiveInt) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_StringValue) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Time) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_UnsignedInt) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Uri) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Address) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Age) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Annotation) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Attachment) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_CodeableConcept) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Coding) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_ContactPoint) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Count) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Distance) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Duration) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_HumanName) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Identifier) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Money) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Period) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Quantity) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Range) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Ratio) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Reference) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_SampledData) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Signature) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Timing) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (*StructureMap_Group_Rule_Source_DefaultValue_Meta) isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue() {
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetDefaultValue() isStructureMap_Group_Rule_Source_DefaultValue_DefaultValue {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetBase64Binary() *Base64Binary {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetBoolean() *Boolean {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetCode() *Code {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Code); ok {
		return x.Code
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetDate() *Date {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Date); ok {
		return x.Date
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetDateTime() *DateTime {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetDecimal() *Decimal {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetId() *Id {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Id); ok {
		return x.Id
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetInstant() *Instant {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Instant); ok {
		return x.Instant
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetInteger() *Integer {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetMarkdown() *Markdown {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetOid() *Oid {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Oid); ok {
		return x.Oid
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetPositiveInt() *PositiveInt {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetStringValue() *String {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetTime() *Time {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Time); ok {
		return x.Time
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetUri() *Uri {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetAddress() *Address {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Address); ok {
		return x.Address
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetAge() *Age {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Age); ok {
		return x.Age
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetAnnotation() *Annotation {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetAttachment() *Attachment {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetCoding() *Coding {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetContactPoint() *ContactPoint {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_ContactPoint); ok {
		return x.ContactPoint
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetCount() *Count {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Count); ok {
		return x.Count
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetDistance() *Distance {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Distance); ok {
		return x.Distance
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetDuration() *Duration {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetHumanName() *HumanName {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_HumanName); ok {
		return x.HumanName
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetIdentifier() *Identifier {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetMoney() *Money {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Money); ok {
		return x.Money
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetPeriod() *Period {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Period); ok {
		return x.Period
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetQuantity() *Quantity {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetRange() *Range {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Range); ok {
		return x.Range
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetRatio() *Ratio {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetReference() *Reference {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Reference); ok {
		return x.Reference
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetSampledData() *SampledData {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetSignature() *Signature {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Signature); ok {
		return x.Signature
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetTiming() *Timing {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Timing); ok {
		return x.Timing
	}
	return nil
}

func (m *StructureMap_Group_Rule_Source_DefaultValue) GetMeta() *Meta {
	if x, ok := m.GetDefaultValue().(*StructureMap_Group_Rule_Source_DefaultValue_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StructureMap_Group_Rule_Source_DefaultValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StructureMap_Group_Rule_Source_DefaultValue_OneofMarshaler, _StructureMap_Group_Rule_Source_DefaultValue_OneofUnmarshaler, _StructureMap_Group_Rule_Source_DefaultValue_OneofSizer, []interface{}{
		(*StructureMap_Group_Rule_Source_DefaultValue_Base64Binary)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Boolean)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Code)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Date)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_DateTime)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Decimal)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Id)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Instant)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Integer)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Markdown)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Oid)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_PositiveInt)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_StringValue)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Time)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_UnsignedInt)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Uri)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Address)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Age)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Annotation)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Attachment)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_CodeableConcept)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Coding)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_ContactPoint)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Count)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Distance)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Duration)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_HumanName)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Identifier)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Money)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Period)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Quantity)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Range)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Ratio)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Reference)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_SampledData)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Signature)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Timing)(nil),
		(*StructureMap_Group_Rule_Source_DefaultValue_Meta)(nil),
	}
}

func _StructureMap_Group_Rule_Source_DefaultValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StructureMap_Group_Rule_Source_DefaultValue)
	// default_value
	switch x := m.DefaultValue.(type) {
	case *StructureMap_Group_Rule_Source_DefaultValue_Base64Binary:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Base64Binary); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Boolean:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Code:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_DateTime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Decimal:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Id:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Id); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Instant:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instant); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Integer:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Markdown:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Markdown); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Oid:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oid); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_PositiveInt:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PositiveInt); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_StringValue:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Time:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_UnsignedInt:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Uri:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Address:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Age:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Annotation:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Annotation); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Attachment:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_CodeableConcept:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Coding:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_ContactPoint:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContactPoint); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Count:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Count); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Distance:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Distance); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Duration:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_HumanName:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HumanName); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Identifier:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Money:
		b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Period:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Quantity:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Range:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Ratio:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Reference:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_SampledData:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Signature:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Signature); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Timing:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Source_DefaultValue_Meta:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Meta); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StructureMap_Group_Rule_Source_DefaultValue.DefaultValue has unexpected type %T", x)
	}
	return nil
}

func _StructureMap_Group_Rule_Source_DefaultValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StructureMap_Group_Rule_Source_DefaultValue)
	switch tag {
	case 1: // default_value.base64_binary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Base64Binary)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Base64Binary{msg}
		return true, err
	case 2: // default_value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Boolean{msg}
		return true, err
	case 3: // default_value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Code{msg}
		return true, err
	case 4: // default_value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Date{msg}
		return true, err
	case 5: // default_value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_DateTime{msg}
		return true, err
	case 6: // default_value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Decimal{msg}
		return true, err
	case 7: // default_value.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Id)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Id{msg}
		return true, err
	case 8: // default_value.instant
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Instant)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Instant{msg}
		return true, err
	case 9: // default_value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Integer{msg}
		return true, err
	case 10: // default_value.markdown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Markdown)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Markdown{msg}
		return true, err
	case 11: // default_value.oid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oid)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Oid{msg}
		return true, err
	case 12: // default_value.positive_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PositiveInt)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_PositiveInt{msg}
		return true, err
	case 13: // default_value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_StringValue{msg}
		return true, err
	case 14: // default_value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Time{msg}
		return true, err
	case 15: // default_value.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_UnsignedInt{msg}
		return true, err
	case 16: // default_value.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Uri{msg}
		return true, err
	case 17: // default_value.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Address{msg}
		return true, err
	case 18: // default_value.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Age{msg}
		return true, err
	case 19: // default_value.annotation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Annotation)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Annotation{msg}
		return true, err
	case 20: // default_value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Attachment{msg}
		return true, err
	case 21: // default_value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_CodeableConcept{msg}
		return true, err
	case 22: // default_value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Coding{msg}
		return true, err
	case 23: // default_value.contact_point
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContactPoint)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_ContactPoint{msg}
		return true, err
	case 24: // default_value.count
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Count)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Count{msg}
		return true, err
	case 25: // default_value.distance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Distance)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Distance{msg}
		return true, err
	case 26: // default_value.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Duration{msg}
		return true, err
	case 27: // default_value.human_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HumanName)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_HumanName{msg}
		return true, err
	case 28: // default_value.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Identifier{msg}
		return true, err
	case 29: // default_value.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Money{msg}
		return true, err
	case 30: // default_value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Period{msg}
		return true, err
	case 31: // default_value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Quantity{msg}
		return true, err
	case 32: // default_value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Range{msg}
		return true, err
	case 33: // default_value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Ratio{msg}
		return true, err
	case 34: // default_value.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Reference{msg}
		return true, err
	case 35: // default_value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_SampledData{msg}
		return true, err
	case 36: // default_value.signature
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Signature)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Signature{msg}
		return true, err
	case 37: // default_value.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Timing{msg}
		return true, err
	case 38: // default_value.meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Meta)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &StructureMap_Group_Rule_Source_DefaultValue_Meta{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StructureMap_Group_Rule_Source_DefaultValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StructureMap_Group_Rule_Source_DefaultValue)
	// default_value
	switch x := m.DefaultValue.(type) {
	case *StructureMap_Group_Rule_Source_DefaultValue_Base64Binary:
		s := proto.Size(x.Base64Binary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Id:
		s := proto.Size(x.Id)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Instant:
		s := proto.Size(x.Instant)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Markdown:
		s := proto.Size(x.Markdown)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Oid:
		s := proto.Size(x.Oid)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_PositiveInt:
		s := proto.Size(x.PositiveInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Uri:
		s := proto.Size(x.Uri)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Address:
		s := proto.Size(x.Address)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Age:
		s := proto.Size(x.Age)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Annotation:
		s := proto.Size(x.Annotation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Attachment:
		s := proto.Size(x.Attachment)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Coding:
		s := proto.Size(x.Coding)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_ContactPoint:
		s := proto.Size(x.ContactPoint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Count:
		s := proto.Size(x.Count)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Distance:
		s := proto.Size(x.Distance)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Duration:
		s := proto.Size(x.Duration)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_HumanName:
		s := proto.Size(x.HumanName)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Identifier:
		s := proto.Size(x.Identifier)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Money:
		s := proto.Size(x.Money)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Period:
		s := proto.Size(x.Period)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Quantity:
		s := proto.Size(x.Quantity)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Range:
		s := proto.Size(x.Range)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Ratio:
		s := proto.Size(x.Ratio)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Reference:
		s := proto.Size(x.Reference)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_SampledData:
		s := proto.Size(x.SampledData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Signature:
		s := proto.Size(x.Signature)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Timing:
		s := proto.Size(x.Timing)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Source_DefaultValue_Meta:
		s := proto.Size(x.Meta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Content to create because of this mapping rule
type StructureMap_Group_Rule_Target struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type or variable this rule applies to
	Context *Id `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
	// type | variable
	ContextType *StructureMapContextTypeCode `protobuf:"bytes,5,opt,name=context_type,json=contextType,proto3" json:"context_type,omitempty"`
	// Field to create in the context
	Element *String `protobuf:"bytes,6,opt,name=element,proto3" json:"element,omitempty"`
	// Named context for field, if desired, and a field is specified
	Variable *Id `protobuf:"bytes,7,opt,name=variable,proto3" json:"variable,omitempty"`
	// first | share | last | collate
	ListMode []*StructureMapTargetListModeCode `protobuf:"bytes,8,rep,name=list_mode,json=listMode,proto3" json:"list_mode,omitempty"`
	// Internal rule reference for shared list items
	ListRuleId *Id `protobuf:"bytes,9,opt,name=list_rule_id,json=listRuleId,proto3" json:"list_rule_id,omitempty"`
	// create | copy +
	Transform            *StructureMapTransformCode                  `protobuf:"bytes,10,opt,name=transform,proto3" json:"transform,omitempty"`
	Parameter            []*StructureMap_Group_Rule_Target_Parameter `protobuf:"bytes,11,rep,name=parameter,proto3" json:"parameter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *StructureMap_Group_Rule_Target) Reset()         { *m = StructureMap_Group_Rule_Target{} }
func (m *StructureMap_Group_Rule_Target) String() string { return proto.CompactTextString(m) }
func (*StructureMap_Group_Rule_Target) ProtoMessage()    {}
func (*StructureMap_Group_Rule_Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 1, 1, 1}
}

func (m *StructureMap_Group_Rule_Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Group_Rule_Target.Unmarshal(m, b)
}
func (m *StructureMap_Group_Rule_Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Group_Rule_Target.Marshal(b, m, deterministic)
}
func (m *StructureMap_Group_Rule_Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Group_Rule_Target.Merge(m, src)
}
func (m *StructureMap_Group_Rule_Target) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Group_Rule_Target.Size(m)
}
func (m *StructureMap_Group_Rule_Target) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Group_Rule_Target.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Group_Rule_Target proto.InternalMessageInfo

func (m *StructureMap_Group_Rule_Target) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetContext() *Id {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetContextType() *StructureMapContextTypeCode {
	if m != nil {
		return m.ContextType
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetElement() *String {
	if m != nil {
		return m.Element
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetVariable() *Id {
	if m != nil {
		return m.Variable
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetListMode() []*StructureMapTargetListModeCode {
	if m != nil {
		return m.ListMode
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetListRuleId() *Id {
	if m != nil {
		return m.ListRuleId
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetTransform() *StructureMapTransformCode {
	if m != nil {
		return m.Transform
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target) GetParameter() []*StructureMap_Group_Rule_Target_Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

// Parameters to the transform
type StructureMap_Group_Rule_Target_Parameter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                                    `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Value                *StructureMap_Group_Rule_Target_Parameter_Value `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *StructureMap_Group_Rule_Target_Parameter) Reset() {
	*m = StructureMap_Group_Rule_Target_Parameter{}
}
func (m *StructureMap_Group_Rule_Target_Parameter) String() string { return proto.CompactTextString(m) }
func (*StructureMap_Group_Rule_Target_Parameter) ProtoMessage()    {}
func (*StructureMap_Group_Rule_Target_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 1, 1, 1, 0}
}

func (m *StructureMap_Group_Rule_Target_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter.Unmarshal(m, b)
}
func (m *StructureMap_Group_Rule_Target_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter.Marshal(b, m, deterministic)
}
func (m *StructureMap_Group_Rule_Target_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter.Merge(m, src)
}
func (m *StructureMap_Group_Rule_Target_Parameter) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter.Size(m)
}
func (m *StructureMap_Group_Rule_Target_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter proto.InternalMessageInfo

func (m *StructureMap_Group_Rule_Target_Parameter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target_Parameter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target_Parameter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target_Parameter) GetValue() *StructureMap_Group_Rule_Target_Parameter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Parameter value - variable or literal
type StructureMap_Group_Rule_Target_Parameter_Value struct {
	// Types that are valid to be assigned to Value:
	//	*StructureMap_Group_Rule_Target_Parameter_Value_Id
	//	*StructureMap_Group_Rule_Target_Parameter_Value_StringValue
	//	*StructureMap_Group_Rule_Target_Parameter_Value_Boolean
	//	*StructureMap_Group_Rule_Target_Parameter_Value_Integer
	//	*StructureMap_Group_Rule_Target_Parameter_Value_Decimal
	Value                isStructureMap_Group_Rule_Target_Parameter_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_unrecognized     []byte                                                 `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *StructureMap_Group_Rule_Target_Parameter_Value) Reset() {
	*m = StructureMap_Group_Rule_Target_Parameter_Value{}
}
func (m *StructureMap_Group_Rule_Target_Parameter_Value) String() string {
	return proto.CompactTextString(m)
}
func (*StructureMap_Group_Rule_Target_Parameter_Value) ProtoMessage() {}
func (*StructureMap_Group_Rule_Target_Parameter_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 1, 1, 1, 0, 0}
}

func (m *StructureMap_Group_Rule_Target_Parameter_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter_Value.Unmarshal(m, b)
}
func (m *StructureMap_Group_Rule_Target_Parameter_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter_Value.Marshal(b, m, deterministic)
}
func (m *StructureMap_Group_Rule_Target_Parameter_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter_Value.Merge(m, src)
}
func (m *StructureMap_Group_Rule_Target_Parameter_Value) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter_Value.Size(m)
}
func (m *StructureMap_Group_Rule_Target_Parameter_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter_Value.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Group_Rule_Target_Parameter_Value proto.InternalMessageInfo

type isStructureMap_Group_Rule_Target_Parameter_Value_Value interface {
	isStructureMap_Group_Rule_Target_Parameter_Value_Value()
}

type StructureMap_Group_Rule_Target_Parameter_Value_Id struct {
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type StructureMap_Group_Rule_Target_Parameter_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,2,opt,name=string_value,json=string,proto3,oneof"`
}

type StructureMap_Group_Rule_Target_Parameter_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,3,opt,name=boolean,proto3,oneof"`
}

type StructureMap_Group_Rule_Target_Parameter_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,4,opt,name=integer,proto3,oneof"`
}

type StructureMap_Group_Rule_Target_Parameter_Value_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,5,opt,name=decimal,proto3,oneof"`
}

func (*StructureMap_Group_Rule_Target_Parameter_Value_Id) isStructureMap_Group_Rule_Target_Parameter_Value_Value() {
}

func (*StructureMap_Group_Rule_Target_Parameter_Value_StringValue) isStructureMap_Group_Rule_Target_Parameter_Value_Value() {
}

func (*StructureMap_Group_Rule_Target_Parameter_Value_Boolean) isStructureMap_Group_Rule_Target_Parameter_Value_Value() {
}

func (*StructureMap_Group_Rule_Target_Parameter_Value_Integer) isStructureMap_Group_Rule_Target_Parameter_Value_Value() {
}

func (*StructureMap_Group_Rule_Target_Parameter_Value_Decimal) isStructureMap_Group_Rule_Target_Parameter_Value_Value() {
}

func (m *StructureMap_Group_Rule_Target_Parameter_Value) GetValue() isStructureMap_Group_Rule_Target_Parameter_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target_Parameter_Value) GetId() *Id {
	if x, ok := m.GetValue().(*StructureMap_Group_Rule_Target_Parameter_Value_Id); ok {
		return x.Id
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target_Parameter_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*StructureMap_Group_Rule_Target_Parameter_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target_Parameter_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*StructureMap_Group_Rule_Target_Parameter_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target_Parameter_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*StructureMap_Group_Rule_Target_Parameter_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *StructureMap_Group_Rule_Target_Parameter_Value) GetDecimal() *Decimal {
	if x, ok := m.GetValue().(*StructureMap_Group_Rule_Target_Parameter_Value_Decimal); ok {
		return x.Decimal
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StructureMap_Group_Rule_Target_Parameter_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StructureMap_Group_Rule_Target_Parameter_Value_OneofMarshaler, _StructureMap_Group_Rule_Target_Parameter_Value_OneofUnmarshaler, _StructureMap_Group_Rule_Target_Parameter_Value_OneofSizer, []interface{}{
		(*StructureMap_Group_Rule_Target_Parameter_Value_Id)(nil),
		(*StructureMap_Group_Rule_Target_Parameter_Value_StringValue)(nil),
		(*StructureMap_Group_Rule_Target_Parameter_Value_Boolean)(nil),
		(*StructureMap_Group_Rule_Target_Parameter_Value_Integer)(nil),
		(*StructureMap_Group_Rule_Target_Parameter_Value_Decimal)(nil),
	}
}

func _StructureMap_Group_Rule_Target_Parameter_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StructureMap_Group_Rule_Target_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *StructureMap_Group_Rule_Target_Parameter_Value_Id:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Id); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Target_Parameter_Value_StringValue:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Target_Parameter_Value_Boolean:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Target_Parameter_Value_Integer:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *StructureMap_Group_Rule_Target_Parameter_Value_Decimal:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StructureMap_Group_Rule_Target_Parameter_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _StructureMap_Group_Rule_Target_Parameter_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StructureMap_Group_Rule_Target_Parameter_Value)
	switch tag {
	case 1: // value.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Id)
		err := b.DecodeMessage(msg)
		m.Value = &StructureMap_Group_Rule_Target_Parameter_Value_Id{msg}
		return true, err
	case 2: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &StructureMap_Group_Rule_Target_Parameter_Value_StringValue{msg}
		return true, err
	case 3: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &StructureMap_Group_Rule_Target_Parameter_Value_Boolean{msg}
		return true, err
	case 4: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &StructureMap_Group_Rule_Target_Parameter_Value_Integer{msg}
		return true, err
	case 5: // value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Value = &StructureMap_Group_Rule_Target_Parameter_Value_Decimal{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StructureMap_Group_Rule_Target_Parameter_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StructureMap_Group_Rule_Target_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *StructureMap_Group_Rule_Target_Parameter_Value_Id:
		s := proto.Size(x.Id)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Target_Parameter_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Target_Parameter_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Target_Parameter_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StructureMap_Group_Rule_Target_Parameter_Value_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Which other rules to apply in the context of this rule
type StructureMap_Group_Rule_Dependent struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name of a rule or group to apply
	Name *Id `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Variable to pass to the rule or group
	Variable             []*String `protobuf:"bytes,5,rep,name=variable,proto3" json:"variable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StructureMap_Group_Rule_Dependent) Reset()         { *m = StructureMap_Group_Rule_Dependent{} }
func (m *StructureMap_Group_Rule_Dependent) String() string { return proto.CompactTextString(m) }
func (*StructureMap_Group_Rule_Dependent) ProtoMessage()    {}
func (*StructureMap_Group_Rule_Dependent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{107, 1, 1, 2}
}

func (m *StructureMap_Group_Rule_Dependent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructureMap_Group_Rule_Dependent.Unmarshal(m, b)
}
func (m *StructureMap_Group_Rule_Dependent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructureMap_Group_Rule_Dependent.Marshal(b, m, deterministic)
}
func (m *StructureMap_Group_Rule_Dependent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructureMap_Group_Rule_Dependent.Merge(m, src)
}
func (m *StructureMap_Group_Rule_Dependent) XXX_Size() int {
	return xxx_messageInfo_StructureMap_Group_Rule_Dependent.Size(m)
}
func (m *StructureMap_Group_Rule_Dependent) XXX_DiscardUnknown() {
	xxx_messageInfo_StructureMap_Group_Rule_Dependent.DiscardUnknown(m)
}

var xxx_messageInfo_StructureMap_Group_Rule_Dependent proto.InternalMessageInfo

func (m *StructureMap_Group_Rule_Dependent) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StructureMap_Group_Rule_Dependent) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *StructureMap_Group_Rule_Dependent) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *StructureMap_Group_Rule_Dependent) GetName() *Id {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *StructureMap_Group_Rule_Dependent) GetVariable() []*String {
	if m != nil {
		return m.Variable
	}
	return nil
}

// Auto-generated from StructureDefinition for Subscription, last updated
// 2017-04-19T07:44:43.294+10:00. A server push subscription criteria. See
// http://hl7.org/fhir/StructureDefinition/Subscription
type Subscription struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// requested | active | error | off
	Status *SubscriptionStatusCode `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	// Contact details for source (e.g. troubleshooting)
	Contact []*ContactPoint `protobuf:"bytes,10,rep,name=contact,proto3" json:"contact,omitempty"`
	// When to automatically delete the subscription
	End *Instant `protobuf:"bytes,11,opt,name=end,proto3" json:"end,omitempty"`
	// Description of why this subscription was created
	Reason *String `protobuf:"bytes,12,opt,name=reason,proto3" json:"reason,omitempty"`
	// Rule for server push criteria
	Criteria *String `protobuf:"bytes,13,opt,name=criteria,proto3" json:"criteria,omitempty"`
	// Latest error note
	Error   *String               `protobuf:"bytes,14,opt,name=error,proto3" json:"error,omitempty"`
	Channel *Subscription_Channel `protobuf:"bytes,15,opt,name=channel,proto3" json:"channel,omitempty"`
	// A tag to add to matching resources
	Tag                  []*Coding `protobuf:"bytes,16,rep,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{108}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Subscription) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Subscription) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Subscription) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Subscription) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Subscription) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Subscription) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Subscription) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Subscription) GetStatus() *SubscriptionStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Subscription) GetContact() []*ContactPoint {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Subscription) GetEnd() *Instant {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Subscription) GetReason() *String {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Subscription) GetCriteria() *String {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (m *Subscription) GetError() *String {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Subscription) GetChannel() *Subscription_Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *Subscription) GetTag() []*Coding {
	if m != nil {
		return m.Tag
	}
	return nil
}

// The channel on which to report matches to the criteria
type Subscription_Channel struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// rest-hook | websocket | email | sms | message
	Type *SubscriptionChannelTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Where the channel points to
	Endpoint *Uri `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Mimetype to send, or omit for no payload
	Payload *String `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	// Usage depends on the channel type
	Header               []*String `protobuf:"bytes,7,rep,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Subscription_Channel) Reset()         { *m = Subscription_Channel{} }
func (m *Subscription_Channel) String() string { return proto.CompactTextString(m) }
func (*Subscription_Channel) ProtoMessage()    {}
func (*Subscription_Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{108, 0}
}

func (m *Subscription_Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription_Channel.Unmarshal(m, b)
}
func (m *Subscription_Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription_Channel.Marshal(b, m, deterministic)
}
func (m *Subscription_Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription_Channel.Merge(m, src)
}
func (m *Subscription_Channel) XXX_Size() int {
	return xxx_messageInfo_Subscription_Channel.Size(m)
}
func (m *Subscription_Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription_Channel proto.InternalMessageInfo

func (m *Subscription_Channel) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Subscription_Channel) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Subscription_Channel) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Subscription_Channel) GetType() *SubscriptionChannelTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Subscription_Channel) GetEndpoint() *Uri {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *Subscription_Channel) GetPayload() *String {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Subscription_Channel) GetHeader() []*String {
	if m != nil {
		return m.Header
	}
	return nil
}

// Auto-generated from StructureDefinition for Substance, last updated
// 2017-04-19T07:44:43.294+10:00. A homogeneous material with a definite
// composition. See http://hl7.org/fhir/StructureDefinition/Substance
type Substance struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | inactive | entered-in-error
	Status *FHIRSubstanceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// What class/type of substance this is
	Category []*CodeableConcept `protobuf:"bytes,11,rep,name=category,proto3" json:"category,omitempty"`
	// What substance this is
	Code *CodeableConcept `protobuf:"bytes,12,opt,name=code,proto3" json:"code,omitempty"`
	// Textual description of the substance, comments
	Description          *String                 `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	Instance             []*Substance_Instance   `protobuf:"bytes,14,rep,name=instance,proto3" json:"instance,omitempty"`
	Ingredient           []*Substance_Ingredient `protobuf:"bytes,15,rep,name=ingredient,proto3" json:"ingredient,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Substance) Reset()         { *m = Substance{} }
func (m *Substance) String() string { return proto.CompactTextString(m) }
func (*Substance) ProtoMessage()    {}
func (*Substance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{109}
}

func (m *Substance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Substance.Unmarshal(m, b)
}
func (m *Substance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Substance.Marshal(b, m, deterministic)
}
func (m *Substance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Substance.Merge(m, src)
}
func (m *Substance) XXX_Size() int {
	return xxx_messageInfo_Substance.Size(m)
}
func (m *Substance) XXX_DiscardUnknown() {
	xxx_messageInfo_Substance.DiscardUnknown(m)
}

var xxx_messageInfo_Substance proto.InternalMessageInfo

func (m *Substance) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Substance) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Substance) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Substance) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Substance) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Substance) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Substance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Substance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Substance) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Substance) GetStatus() *FHIRSubstanceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Substance) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Substance) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Substance) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Substance) GetInstance() []*Substance_Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *Substance) GetIngredient() []*Substance_Ingredient {
	if m != nil {
		return m.Ingredient
	}
	return nil
}

// If this describes a specific package/container of the substance
type Substance_Instance struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifier of the package/container
	Identifier *Identifier `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// When no longer valid to use
	Expiry *DateTime `protobuf:"bytes,5,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// Amount of substance in the package
	Quantity             *SimpleQuantity `protobuf:"bytes,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Substance_Instance) Reset()         { *m = Substance_Instance{} }
func (m *Substance_Instance) String() string { return proto.CompactTextString(m) }
func (*Substance_Instance) ProtoMessage()    {}
func (*Substance_Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{109, 0}
}

func (m *Substance_Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Substance_Instance.Unmarshal(m, b)
}
func (m *Substance_Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Substance_Instance.Marshal(b, m, deterministic)
}
func (m *Substance_Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Substance_Instance.Merge(m, src)
}
func (m *Substance_Instance) XXX_Size() int {
	return xxx_messageInfo_Substance_Instance.Size(m)
}
func (m *Substance_Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Substance_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Substance_Instance proto.InternalMessageInfo

func (m *Substance_Instance) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Substance_Instance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Substance_Instance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Substance_Instance) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Substance_Instance) GetExpiry() *DateTime {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func (m *Substance_Instance) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

// Composition information about the substance
type Substance_Ingredient struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Optional amount (concentration)
	Quantity             *Ratio                              `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Substance            *Substance_Ingredient_SubstanceType `protobuf:"bytes,5,opt,name=substance,proto3" json:"substance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Substance_Ingredient) Reset()         { *m = Substance_Ingredient{} }
func (m *Substance_Ingredient) String() string { return proto.CompactTextString(m) }
func (*Substance_Ingredient) ProtoMessage()    {}
func (*Substance_Ingredient) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{109, 1}
}

func (m *Substance_Ingredient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Substance_Ingredient.Unmarshal(m, b)
}
func (m *Substance_Ingredient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Substance_Ingredient.Marshal(b, m, deterministic)
}
func (m *Substance_Ingredient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Substance_Ingredient.Merge(m, src)
}
func (m *Substance_Ingredient) XXX_Size() int {
	return xxx_messageInfo_Substance_Ingredient.Size(m)
}
func (m *Substance_Ingredient) XXX_DiscardUnknown() {
	xxx_messageInfo_Substance_Ingredient.DiscardUnknown(m)
}

var xxx_messageInfo_Substance_Ingredient proto.InternalMessageInfo

func (m *Substance_Ingredient) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Substance_Ingredient) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Substance_Ingredient) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Substance_Ingredient) GetQuantity() *Ratio {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Substance_Ingredient) GetSubstance() *Substance_Ingredient_SubstanceType {
	if m != nil {
		return m.Substance
	}
	return nil
}

// A component of the substance
type Substance_Ingredient_SubstanceType struct {
	// Types that are valid to be assigned to Substance:
	//	*Substance_Ingredient_SubstanceType_CodeableConcept
	//	*Substance_Ingredient_SubstanceType_Reference
	Substance            isSubstance_Ingredient_SubstanceType_Substance `protobuf_oneof:"substance"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *Substance_Ingredient_SubstanceType) Reset()         { *m = Substance_Ingredient_SubstanceType{} }
func (m *Substance_Ingredient_SubstanceType) String() string { return proto.CompactTextString(m) }
func (*Substance_Ingredient_SubstanceType) ProtoMessage()    {}
func (*Substance_Ingredient_SubstanceType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{109, 1, 0}
}

func (m *Substance_Ingredient_SubstanceType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Substance_Ingredient_SubstanceType.Unmarshal(m, b)
}
func (m *Substance_Ingredient_SubstanceType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Substance_Ingredient_SubstanceType.Marshal(b, m, deterministic)
}
func (m *Substance_Ingredient_SubstanceType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Substance_Ingredient_SubstanceType.Merge(m, src)
}
func (m *Substance_Ingredient_SubstanceType) XXX_Size() int {
	return xxx_messageInfo_Substance_Ingredient_SubstanceType.Size(m)
}
func (m *Substance_Ingredient_SubstanceType) XXX_DiscardUnknown() {
	xxx_messageInfo_Substance_Ingredient_SubstanceType.DiscardUnknown(m)
}

var xxx_messageInfo_Substance_Ingredient_SubstanceType proto.InternalMessageInfo

type isSubstance_Ingredient_SubstanceType_Substance interface {
	isSubstance_Ingredient_SubstanceType_Substance()
}

type Substance_Ingredient_SubstanceType_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Substance_Ingredient_SubstanceType_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Substance_Ingredient_SubstanceType_CodeableConcept) isSubstance_Ingredient_SubstanceType_Substance() {
}

func (*Substance_Ingredient_SubstanceType_Reference) isSubstance_Ingredient_SubstanceType_Substance() {
}

func (m *Substance_Ingredient_SubstanceType) GetSubstance() isSubstance_Ingredient_SubstanceType_Substance {
	if m != nil {
		return m.Substance
	}
	return nil
}

func (m *Substance_Ingredient_SubstanceType) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetSubstance().(*Substance_Ingredient_SubstanceType_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Substance_Ingredient_SubstanceType) GetReference() *Reference {
	if x, ok := m.GetSubstance().(*Substance_Ingredient_SubstanceType_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Substance_Ingredient_SubstanceType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Substance_Ingredient_SubstanceType_OneofMarshaler, _Substance_Ingredient_SubstanceType_OneofUnmarshaler, _Substance_Ingredient_SubstanceType_OneofSizer, []interface{}{
		(*Substance_Ingredient_SubstanceType_CodeableConcept)(nil),
		(*Substance_Ingredient_SubstanceType_Reference)(nil),
	}
}

func _Substance_Ingredient_SubstanceType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Substance_Ingredient_SubstanceType)
	// substance
	switch x := m.Substance.(type) {
	case *Substance_Ingredient_SubstanceType_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Substance_Ingredient_SubstanceType_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Substance_Ingredient_SubstanceType.Substance has unexpected type %T", x)
	}
	return nil
}

func _Substance_Ingredient_SubstanceType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Substance_Ingredient_SubstanceType)
	switch tag {
	case 1: // substance.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Substance = &Substance_Ingredient_SubstanceType_CodeableConcept{msg}
		return true, err
	case 2: // substance.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Substance = &Substance_Ingredient_SubstanceType_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Substance_Ingredient_SubstanceType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Substance_Ingredient_SubstanceType)
	// substance
	switch x := m.Substance.(type) {
	case *Substance_Ingredient_SubstanceType_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Substance_Ingredient_SubstanceType_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for SupplyDelivery, last updated
// 2017-04-19T07:44:43.294+10:00. Delivery of bulk Supplies. See
// http://hl7.org/fhir/StructureDefinition/SupplyDelivery
type SupplyDelivery struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External identifier
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Part of referenced event
	PartOf []*Reference `protobuf:"bytes,11,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// in-progress | completed | abandoned | entered-in-error
	Status *SupplyDeliveryStatusCode `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// Patient for whom the item is supplied
	Patient *Reference `protobuf:"bytes,13,opt,name=patient,proto3" json:"patient,omitempty"`
	// Category of dispense event
	Type         *CodeableConcept             `protobuf:"bytes,14,opt,name=type,proto3" json:"type,omitempty"`
	SuppliedItem *SupplyDelivery_SuppliedItem `protobuf:"bytes,15,opt,name=supplied_item,json=suppliedItem,proto3" json:"supplied_item,omitempty"`
	Occurrence   *SupplyDelivery_Occurrence   `protobuf:"bytes,16,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	// Dispenser
	Supplier *Reference `protobuf:"bytes,17,opt,name=supplier,proto3" json:"supplier,omitempty"`
	// Where the Supply was sent
	Destination *Reference `protobuf:"bytes,18,opt,name=destination,proto3" json:"destination,omitempty"`
	// Who collected the Supply
	Receiver             []*Reference `protobuf:"bytes,19,rep,name=receiver,proto3" json:"receiver,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SupplyDelivery) Reset()         { *m = SupplyDelivery{} }
func (m *SupplyDelivery) String() string { return proto.CompactTextString(m) }
func (*SupplyDelivery) ProtoMessage()    {}
func (*SupplyDelivery) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{110}
}

func (m *SupplyDelivery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyDelivery.Unmarshal(m, b)
}
func (m *SupplyDelivery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyDelivery.Marshal(b, m, deterministic)
}
func (m *SupplyDelivery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyDelivery.Merge(m, src)
}
func (m *SupplyDelivery) XXX_Size() int {
	return xxx_messageInfo_SupplyDelivery.Size(m)
}
func (m *SupplyDelivery) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyDelivery.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyDelivery proto.InternalMessageInfo

func (m *SupplyDelivery) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SupplyDelivery) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *SupplyDelivery) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *SupplyDelivery) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *SupplyDelivery) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *SupplyDelivery) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *SupplyDelivery) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *SupplyDelivery) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *SupplyDelivery) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *SupplyDelivery) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *SupplyDelivery) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *SupplyDelivery) GetStatus() *SupplyDeliveryStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SupplyDelivery) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *SupplyDelivery) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *SupplyDelivery) GetSuppliedItem() *SupplyDelivery_SuppliedItem {
	if m != nil {
		return m.SuppliedItem
	}
	return nil
}

func (m *SupplyDelivery) GetOccurrence() *SupplyDelivery_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *SupplyDelivery) GetSupplier() *Reference {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *SupplyDelivery) GetDestination() *Reference {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *SupplyDelivery) GetReceiver() []*Reference {
	if m != nil {
		return m.Receiver
	}
	return nil
}

// The item that is delivered or supplied
type SupplyDelivery_SuppliedItem struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Amount dispensed
	Quantity             *SimpleQuantity                   `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Item                 *SupplyDelivery_SuppliedItem_Item `protobuf:"bytes,5,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SupplyDelivery_SuppliedItem) Reset()         { *m = SupplyDelivery_SuppliedItem{} }
func (m *SupplyDelivery_SuppliedItem) String() string { return proto.CompactTextString(m) }
func (*SupplyDelivery_SuppliedItem) ProtoMessage()    {}
func (*SupplyDelivery_SuppliedItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{110, 0}
}

func (m *SupplyDelivery_SuppliedItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyDelivery_SuppliedItem.Unmarshal(m, b)
}
func (m *SupplyDelivery_SuppliedItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyDelivery_SuppliedItem.Marshal(b, m, deterministic)
}
func (m *SupplyDelivery_SuppliedItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyDelivery_SuppliedItem.Merge(m, src)
}
func (m *SupplyDelivery_SuppliedItem) XXX_Size() int {
	return xxx_messageInfo_SupplyDelivery_SuppliedItem.Size(m)
}
func (m *SupplyDelivery_SuppliedItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyDelivery_SuppliedItem.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyDelivery_SuppliedItem proto.InternalMessageInfo

func (m *SupplyDelivery_SuppliedItem) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SupplyDelivery_SuppliedItem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *SupplyDelivery_SuppliedItem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *SupplyDelivery_SuppliedItem) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *SupplyDelivery_SuppliedItem) GetItem() *SupplyDelivery_SuppliedItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

// Medication, Substance, or Device supplied
type SupplyDelivery_SuppliedItem_Item struct {
	// Types that are valid to be assigned to Item:
	//	*SupplyDelivery_SuppliedItem_Item_CodeableConcept
	//	*SupplyDelivery_SuppliedItem_Item_Reference
	Item                 isSupplyDelivery_SuppliedItem_Item_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *SupplyDelivery_SuppliedItem_Item) Reset()         { *m = SupplyDelivery_SuppliedItem_Item{} }
func (m *SupplyDelivery_SuppliedItem_Item) String() string { return proto.CompactTextString(m) }
func (*SupplyDelivery_SuppliedItem_Item) ProtoMessage()    {}
func (*SupplyDelivery_SuppliedItem_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{110, 0, 0}
}

func (m *SupplyDelivery_SuppliedItem_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyDelivery_SuppliedItem_Item.Unmarshal(m, b)
}
func (m *SupplyDelivery_SuppliedItem_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyDelivery_SuppliedItem_Item.Marshal(b, m, deterministic)
}
func (m *SupplyDelivery_SuppliedItem_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyDelivery_SuppliedItem_Item.Merge(m, src)
}
func (m *SupplyDelivery_SuppliedItem_Item) XXX_Size() int {
	return xxx_messageInfo_SupplyDelivery_SuppliedItem_Item.Size(m)
}
func (m *SupplyDelivery_SuppliedItem_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyDelivery_SuppliedItem_Item.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyDelivery_SuppliedItem_Item proto.InternalMessageInfo

type isSupplyDelivery_SuppliedItem_Item_Item interface {
	isSupplyDelivery_SuppliedItem_Item_Item()
}

type SupplyDelivery_SuppliedItem_Item_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type SupplyDelivery_SuppliedItem_Item_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*SupplyDelivery_SuppliedItem_Item_CodeableConcept) isSupplyDelivery_SuppliedItem_Item_Item() {}

func (*SupplyDelivery_SuppliedItem_Item_Reference) isSupplyDelivery_SuppliedItem_Item_Item() {}

func (m *SupplyDelivery_SuppliedItem_Item) GetItem() isSupplyDelivery_SuppliedItem_Item_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *SupplyDelivery_SuppliedItem_Item) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetItem().(*SupplyDelivery_SuppliedItem_Item_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *SupplyDelivery_SuppliedItem_Item) GetReference() *Reference {
	if x, ok := m.GetItem().(*SupplyDelivery_SuppliedItem_Item_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SupplyDelivery_SuppliedItem_Item) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SupplyDelivery_SuppliedItem_Item_OneofMarshaler, _SupplyDelivery_SuppliedItem_Item_OneofUnmarshaler, _SupplyDelivery_SuppliedItem_Item_OneofSizer, []interface{}{
		(*SupplyDelivery_SuppliedItem_Item_CodeableConcept)(nil),
		(*SupplyDelivery_SuppliedItem_Item_Reference)(nil),
	}
}

func _SupplyDelivery_SuppliedItem_Item_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SupplyDelivery_SuppliedItem_Item)
	// item
	switch x := m.Item.(type) {
	case *SupplyDelivery_SuppliedItem_Item_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *SupplyDelivery_SuppliedItem_Item_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SupplyDelivery_SuppliedItem_Item.Item has unexpected type %T", x)
	}
	return nil
}

func _SupplyDelivery_SuppliedItem_Item_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SupplyDelivery_SuppliedItem_Item)
	switch tag {
	case 1: // item.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Item = &SupplyDelivery_SuppliedItem_Item_CodeableConcept{msg}
		return true, err
	case 2: // item.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Item = &SupplyDelivery_SuppliedItem_Item_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SupplyDelivery_SuppliedItem_Item_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SupplyDelivery_SuppliedItem_Item)
	// item
	switch x := m.Item.(type) {
	case *SupplyDelivery_SuppliedItem_Item_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SupplyDelivery_SuppliedItem_Item_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// When event occurred
type SupplyDelivery_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*SupplyDelivery_Occurrence_DateTime
	//	*SupplyDelivery_Occurrence_Period
	//	*SupplyDelivery_Occurrence_Timing
	Occurrence           isSupplyDelivery_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *SupplyDelivery_Occurrence) Reset()         { *m = SupplyDelivery_Occurrence{} }
func (m *SupplyDelivery_Occurrence) String() string { return proto.CompactTextString(m) }
func (*SupplyDelivery_Occurrence) ProtoMessage()    {}
func (*SupplyDelivery_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{110, 1}
}

func (m *SupplyDelivery_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyDelivery_Occurrence.Unmarshal(m, b)
}
func (m *SupplyDelivery_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyDelivery_Occurrence.Marshal(b, m, deterministic)
}
func (m *SupplyDelivery_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyDelivery_Occurrence.Merge(m, src)
}
func (m *SupplyDelivery_Occurrence) XXX_Size() int {
	return xxx_messageInfo_SupplyDelivery_Occurrence.Size(m)
}
func (m *SupplyDelivery_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyDelivery_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyDelivery_Occurrence proto.InternalMessageInfo

type isSupplyDelivery_Occurrence_Occurrence interface {
	isSupplyDelivery_Occurrence_Occurrence()
}

type SupplyDelivery_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type SupplyDelivery_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type SupplyDelivery_Occurrence_Timing struct {
	Timing *Timing `protobuf:"bytes,3,opt,name=timing,proto3,oneof"`
}

func (*SupplyDelivery_Occurrence_DateTime) isSupplyDelivery_Occurrence_Occurrence() {}

func (*SupplyDelivery_Occurrence_Period) isSupplyDelivery_Occurrence_Occurrence() {}

func (*SupplyDelivery_Occurrence_Timing) isSupplyDelivery_Occurrence_Occurrence() {}

func (m *SupplyDelivery_Occurrence) GetOccurrence() isSupplyDelivery_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *SupplyDelivery_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*SupplyDelivery_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *SupplyDelivery_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*SupplyDelivery_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

func (m *SupplyDelivery_Occurrence) GetTiming() *Timing {
	if x, ok := m.GetOccurrence().(*SupplyDelivery_Occurrence_Timing); ok {
		return x.Timing
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SupplyDelivery_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SupplyDelivery_Occurrence_OneofMarshaler, _SupplyDelivery_Occurrence_OneofUnmarshaler, _SupplyDelivery_Occurrence_OneofSizer, []interface{}{
		(*SupplyDelivery_Occurrence_DateTime)(nil),
		(*SupplyDelivery_Occurrence_Period)(nil),
		(*SupplyDelivery_Occurrence_Timing)(nil),
	}
}

func _SupplyDelivery_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SupplyDelivery_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *SupplyDelivery_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *SupplyDelivery_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *SupplyDelivery_Occurrence_Timing:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SupplyDelivery_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _SupplyDelivery_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SupplyDelivery_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &SupplyDelivery_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &SupplyDelivery_Occurrence_Period{msg}
		return true, err
	case 3: // occurrence.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Occurrence = &SupplyDelivery_Occurrence_Timing{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SupplyDelivery_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SupplyDelivery_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *SupplyDelivery_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SupplyDelivery_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SupplyDelivery_Occurrence_Timing:
		s := proto.Size(x.Timing)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for SupplyRequest, last updated
// 2017-04-19T07:44:43.294+10:00. Request for a medication, substance or device.
// See http://hl7.org/fhir/StructureDefinition/SupplyRequest
type SupplyRequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique identifier
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// draft | active | suspended +
	Status *SupplyRequestStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// The kind of supply (central, non-stock, etc.)
	Category *CodeableConcept `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`
	// routine | urgent | asap | stat
	Priority    *RequestPriorityCode       `protobuf:"bytes,12,opt,name=priority,proto3" json:"priority,omitempty"`
	OrderedItem *SupplyRequest_OrderedItem `protobuf:"bytes,13,opt,name=ordered_item,json=orderedItem,proto3" json:"ordered_item,omitempty"`
	Occurrence  *SupplyRequest_Occurrence  `protobuf:"bytes,14,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	// When the request was made
	AuthoredOn *DateTime                `protobuf:"bytes,15,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	Requester  *SupplyRequest_Requester `protobuf:"bytes,16,opt,name=requester,proto3" json:"requester,omitempty"`
	// Who is intended to fulfill the request
	Supplier []*Reference          `protobuf:"bytes,17,rep,name=supplier,proto3" json:"supplier,omitempty"`
	Reason   *SupplyRequest_Reason `protobuf:"bytes,18,opt,name=reason,proto3" json:"reason,omitempty"`
	// The origin of the supply
	DeliverFrom *Reference `protobuf:"bytes,19,opt,name=deliver_from,json=deliverFrom,proto3" json:"deliver_from,omitempty"`
	// The destination of the supply
	DeliverTo            *Reference `protobuf:"bytes,20,opt,name=deliver_to,json=deliverTo,proto3" json:"deliver_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SupplyRequest) Reset()         { *m = SupplyRequest{} }
func (m *SupplyRequest) String() string { return proto.CompactTextString(m) }
func (*SupplyRequest) ProtoMessage()    {}
func (*SupplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{111}
}

func (m *SupplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyRequest.Unmarshal(m, b)
}
func (m *SupplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyRequest.Marshal(b, m, deterministic)
}
func (m *SupplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyRequest.Merge(m, src)
}
func (m *SupplyRequest) XXX_Size() int {
	return xxx_messageInfo_SupplyRequest.Size(m)
}
func (m *SupplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyRequest proto.InternalMessageInfo

func (m *SupplyRequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SupplyRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *SupplyRequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *SupplyRequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *SupplyRequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *SupplyRequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *SupplyRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *SupplyRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *SupplyRequest) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *SupplyRequest) GetStatus() *SupplyRequestStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SupplyRequest) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *SupplyRequest) GetPriority() *RequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *SupplyRequest) GetOrderedItem() *SupplyRequest_OrderedItem {
	if m != nil {
		return m.OrderedItem
	}
	return nil
}

func (m *SupplyRequest) GetOccurrence() *SupplyRequest_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *SupplyRequest) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *SupplyRequest) GetRequester() *SupplyRequest_Requester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *SupplyRequest) GetSupplier() []*Reference {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *SupplyRequest) GetReason() *SupplyRequest_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *SupplyRequest) GetDeliverFrom() *Reference {
	if m != nil {
		return m.DeliverFrom
	}
	return nil
}

func (m *SupplyRequest) GetDeliverTo() *Reference {
	if m != nil {
		return m.DeliverTo
	}
	return nil
}

// The item being requested
type SupplyRequest_OrderedItem struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The requested amount of the item indicated
	Quantity             *Quantity                       `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Item                 *SupplyRequest_OrderedItem_Item `protobuf:"bytes,5,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SupplyRequest_OrderedItem) Reset()         { *m = SupplyRequest_OrderedItem{} }
func (m *SupplyRequest_OrderedItem) String() string { return proto.CompactTextString(m) }
func (*SupplyRequest_OrderedItem) ProtoMessage()    {}
func (*SupplyRequest_OrderedItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{111, 0}
}

func (m *SupplyRequest_OrderedItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyRequest_OrderedItem.Unmarshal(m, b)
}
func (m *SupplyRequest_OrderedItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyRequest_OrderedItem.Marshal(b, m, deterministic)
}
func (m *SupplyRequest_OrderedItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyRequest_OrderedItem.Merge(m, src)
}
func (m *SupplyRequest_OrderedItem) XXX_Size() int {
	return xxx_messageInfo_SupplyRequest_OrderedItem.Size(m)
}
func (m *SupplyRequest_OrderedItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyRequest_OrderedItem.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyRequest_OrderedItem proto.InternalMessageInfo

func (m *SupplyRequest_OrderedItem) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SupplyRequest_OrderedItem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *SupplyRequest_OrderedItem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *SupplyRequest_OrderedItem) GetQuantity() *Quantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *SupplyRequest_OrderedItem) GetItem() *SupplyRequest_OrderedItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

// Medication, Substance, or Device requested to be supplied
type SupplyRequest_OrderedItem_Item struct {
	// Types that are valid to be assigned to Item:
	//	*SupplyRequest_OrderedItem_Item_CodeableConcept
	//	*SupplyRequest_OrderedItem_Item_Reference
	Item                 isSupplyRequest_OrderedItem_Item_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *SupplyRequest_OrderedItem_Item) Reset()         { *m = SupplyRequest_OrderedItem_Item{} }
func (m *SupplyRequest_OrderedItem_Item) String() string { return proto.CompactTextString(m) }
func (*SupplyRequest_OrderedItem_Item) ProtoMessage()    {}
func (*SupplyRequest_OrderedItem_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{111, 0, 0}
}

func (m *SupplyRequest_OrderedItem_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyRequest_OrderedItem_Item.Unmarshal(m, b)
}
func (m *SupplyRequest_OrderedItem_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyRequest_OrderedItem_Item.Marshal(b, m, deterministic)
}
func (m *SupplyRequest_OrderedItem_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyRequest_OrderedItem_Item.Merge(m, src)
}
func (m *SupplyRequest_OrderedItem_Item) XXX_Size() int {
	return xxx_messageInfo_SupplyRequest_OrderedItem_Item.Size(m)
}
func (m *SupplyRequest_OrderedItem_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyRequest_OrderedItem_Item.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyRequest_OrderedItem_Item proto.InternalMessageInfo

type isSupplyRequest_OrderedItem_Item_Item interface {
	isSupplyRequest_OrderedItem_Item_Item()
}

type SupplyRequest_OrderedItem_Item_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type SupplyRequest_OrderedItem_Item_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*SupplyRequest_OrderedItem_Item_CodeableConcept) isSupplyRequest_OrderedItem_Item_Item() {}

func (*SupplyRequest_OrderedItem_Item_Reference) isSupplyRequest_OrderedItem_Item_Item() {}

func (m *SupplyRequest_OrderedItem_Item) GetItem() isSupplyRequest_OrderedItem_Item_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *SupplyRequest_OrderedItem_Item) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetItem().(*SupplyRequest_OrderedItem_Item_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *SupplyRequest_OrderedItem_Item) GetReference() *Reference {
	if x, ok := m.GetItem().(*SupplyRequest_OrderedItem_Item_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SupplyRequest_OrderedItem_Item) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SupplyRequest_OrderedItem_Item_OneofMarshaler, _SupplyRequest_OrderedItem_Item_OneofUnmarshaler, _SupplyRequest_OrderedItem_Item_OneofSizer, []interface{}{
		(*SupplyRequest_OrderedItem_Item_CodeableConcept)(nil),
		(*SupplyRequest_OrderedItem_Item_Reference)(nil),
	}
}

func _SupplyRequest_OrderedItem_Item_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SupplyRequest_OrderedItem_Item)
	// item
	switch x := m.Item.(type) {
	case *SupplyRequest_OrderedItem_Item_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *SupplyRequest_OrderedItem_Item_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SupplyRequest_OrderedItem_Item.Item has unexpected type %T", x)
	}
	return nil
}

func _SupplyRequest_OrderedItem_Item_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SupplyRequest_OrderedItem_Item)
	switch tag {
	case 1: // item.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Item = &SupplyRequest_OrderedItem_Item_CodeableConcept{msg}
		return true, err
	case 2: // item.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Item = &SupplyRequest_OrderedItem_Item_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SupplyRequest_OrderedItem_Item_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SupplyRequest_OrderedItem_Item)
	// item
	switch x := m.Item.(type) {
	case *SupplyRequest_OrderedItem_Item_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SupplyRequest_OrderedItem_Item_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// When the request should be fulfilled
type SupplyRequest_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*SupplyRequest_Occurrence_DateTime
	//	*SupplyRequest_Occurrence_Period
	//	*SupplyRequest_Occurrence_Timing
	Occurrence           isSupplyRequest_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *SupplyRequest_Occurrence) Reset()         { *m = SupplyRequest_Occurrence{} }
func (m *SupplyRequest_Occurrence) String() string { return proto.CompactTextString(m) }
func (*SupplyRequest_Occurrence) ProtoMessage()    {}
func (*SupplyRequest_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{111, 1}
}

func (m *SupplyRequest_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyRequest_Occurrence.Unmarshal(m, b)
}
func (m *SupplyRequest_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyRequest_Occurrence.Marshal(b, m, deterministic)
}
func (m *SupplyRequest_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyRequest_Occurrence.Merge(m, src)
}
func (m *SupplyRequest_Occurrence) XXX_Size() int {
	return xxx_messageInfo_SupplyRequest_Occurrence.Size(m)
}
func (m *SupplyRequest_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyRequest_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyRequest_Occurrence proto.InternalMessageInfo

type isSupplyRequest_Occurrence_Occurrence interface {
	isSupplyRequest_Occurrence_Occurrence()
}

type SupplyRequest_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type SupplyRequest_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type SupplyRequest_Occurrence_Timing struct {
	Timing *Timing `protobuf:"bytes,3,opt,name=timing,proto3,oneof"`
}

func (*SupplyRequest_Occurrence_DateTime) isSupplyRequest_Occurrence_Occurrence() {}

func (*SupplyRequest_Occurrence_Period) isSupplyRequest_Occurrence_Occurrence() {}

func (*SupplyRequest_Occurrence_Timing) isSupplyRequest_Occurrence_Occurrence() {}

func (m *SupplyRequest_Occurrence) GetOccurrence() isSupplyRequest_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *SupplyRequest_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*SupplyRequest_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *SupplyRequest_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*SupplyRequest_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

func (m *SupplyRequest_Occurrence) GetTiming() *Timing {
	if x, ok := m.GetOccurrence().(*SupplyRequest_Occurrence_Timing); ok {
		return x.Timing
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SupplyRequest_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SupplyRequest_Occurrence_OneofMarshaler, _SupplyRequest_Occurrence_OneofUnmarshaler, _SupplyRequest_Occurrence_OneofSizer, []interface{}{
		(*SupplyRequest_Occurrence_DateTime)(nil),
		(*SupplyRequest_Occurrence_Period)(nil),
		(*SupplyRequest_Occurrence_Timing)(nil),
	}
}

func _SupplyRequest_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SupplyRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *SupplyRequest_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *SupplyRequest_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *SupplyRequest_Occurrence_Timing:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SupplyRequest_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _SupplyRequest_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SupplyRequest_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &SupplyRequest_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &SupplyRequest_Occurrence_Period{msg}
		return true, err
	case 3: // occurrence.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Occurrence = &SupplyRequest_Occurrence_Timing{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SupplyRequest_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SupplyRequest_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *SupplyRequest_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SupplyRequest_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SupplyRequest_Occurrence_Timing:
		s := proto.Size(x.Timing)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who/what is requesting service
type SupplyRequest_Requester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual making the request
	Agent *Reference `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// Organization agent is acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SupplyRequest_Requester) Reset()         { *m = SupplyRequest_Requester{} }
func (m *SupplyRequest_Requester) String() string { return proto.CompactTextString(m) }
func (*SupplyRequest_Requester) ProtoMessage()    {}
func (*SupplyRequest_Requester) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{111, 2}
}

func (m *SupplyRequest_Requester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyRequest_Requester.Unmarshal(m, b)
}
func (m *SupplyRequest_Requester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyRequest_Requester.Marshal(b, m, deterministic)
}
func (m *SupplyRequest_Requester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyRequest_Requester.Merge(m, src)
}
func (m *SupplyRequest_Requester) XXX_Size() int {
	return xxx_messageInfo_SupplyRequest_Requester.Size(m)
}
func (m *SupplyRequest_Requester) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyRequest_Requester.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyRequest_Requester proto.InternalMessageInfo

func (m *SupplyRequest_Requester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SupplyRequest_Requester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *SupplyRequest_Requester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *SupplyRequest_Requester) GetAgent() *Reference {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *SupplyRequest_Requester) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Why the supply item was requested
type SupplyRequest_Reason struct {
	// Types that are valid to be assigned to Reason:
	//	*SupplyRequest_Reason_CodeableConcept
	//	*SupplyRequest_Reason_Reference
	Reason               isSupplyRequest_Reason_Reason `protobuf_oneof:"reason"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SupplyRequest_Reason) Reset()         { *m = SupplyRequest_Reason{} }
func (m *SupplyRequest_Reason) String() string { return proto.CompactTextString(m) }
func (*SupplyRequest_Reason) ProtoMessage()    {}
func (*SupplyRequest_Reason) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{111, 3}
}

func (m *SupplyRequest_Reason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplyRequest_Reason.Unmarshal(m, b)
}
func (m *SupplyRequest_Reason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplyRequest_Reason.Marshal(b, m, deterministic)
}
func (m *SupplyRequest_Reason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplyRequest_Reason.Merge(m, src)
}
func (m *SupplyRequest_Reason) XXX_Size() int {
	return xxx_messageInfo_SupplyRequest_Reason.Size(m)
}
func (m *SupplyRequest_Reason) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplyRequest_Reason.DiscardUnknown(m)
}

var xxx_messageInfo_SupplyRequest_Reason proto.InternalMessageInfo

type isSupplyRequest_Reason_Reason interface {
	isSupplyRequest_Reason_Reason()
}

type SupplyRequest_Reason_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type SupplyRequest_Reason_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*SupplyRequest_Reason_CodeableConcept) isSupplyRequest_Reason_Reason() {}

func (*SupplyRequest_Reason_Reference) isSupplyRequest_Reason_Reason() {}

func (m *SupplyRequest_Reason) GetReason() isSupplyRequest_Reason_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *SupplyRequest_Reason) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetReason().(*SupplyRequest_Reason_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *SupplyRequest_Reason) GetReference() *Reference {
	if x, ok := m.GetReason().(*SupplyRequest_Reason_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SupplyRequest_Reason) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SupplyRequest_Reason_OneofMarshaler, _SupplyRequest_Reason_OneofUnmarshaler, _SupplyRequest_Reason_OneofSizer, []interface{}{
		(*SupplyRequest_Reason_CodeableConcept)(nil),
		(*SupplyRequest_Reason_Reference)(nil),
	}
}

func _SupplyRequest_Reason_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SupplyRequest_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *SupplyRequest_Reason_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *SupplyRequest_Reason_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SupplyRequest_Reason.Reason has unexpected type %T", x)
	}
	return nil
}

func _SupplyRequest_Reason_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SupplyRequest_Reason)
	switch tag {
	case 1: // reason.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Reason = &SupplyRequest_Reason_CodeableConcept{msg}
		return true, err
	case 2: // reason.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Reason = &SupplyRequest_Reason_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SupplyRequest_Reason_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SupplyRequest_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *SupplyRequest_Reason_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SupplyRequest_Reason_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Task, last updated
// 2017-04-19T07:44:43.294+10:00. A task to be performed. See
// http://hl7.org/fhir/StructureDefinition/Task
type Task struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Task Instance Identifier
	Identifier []*Identifier    `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	Definition *Task_Definition `protobuf:"bytes,10,opt,name=definition,proto3" json:"definition,omitempty"`
	// Request fulfilled by this task
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Requisition or grouper id
	GroupIdentifier *Identifier `protobuf:"bytes,12,opt,name=group_identifier,json=groupIdentifier,proto3" json:"group_identifier,omitempty"`
	// Composite task
	PartOf []*Reference `protobuf:"bytes,13,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// draft | requested | received | accepted | +
	Status *TaskStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// Reason for current status
	StatusReason *CodeableConcept `protobuf:"bytes,15,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	// E.g. "Specimen collected", "IV prepped"
	BusinessStatus *CodeableConcept `protobuf:"bytes,16,opt,name=business_status,json=businessStatus,proto3" json:"business_status,omitempty"`
	// proposal | plan | order +
	Intent *RequestIntentCode `protobuf:"bytes,17,opt,name=intent,proto3" json:"intent,omitempty"`
	// normal | urgent | asap | stat
	Priority *RequestPriorityCode `protobuf:"bytes,18,opt,name=priority,proto3" json:"priority,omitempty"`
	// Task Type
	Code *CodeableConcept `protobuf:"bytes,19,opt,name=code,proto3" json:"code,omitempty"`
	// Human-readable explanation of task
	Description *String `protobuf:"bytes,20,opt,name=description,proto3" json:"description,omitempty"`
	// What task is acting on
	Focus *Reference `protobuf:"bytes,21,opt,name=focus,proto3" json:"focus,omitempty"`
	// Beneficiary of the Task
	ForValue *Reference `protobuf:"bytes,22,opt,name=for_value,json=for,proto3" json:"for_value,omitempty"`
	// Healthcare event during which this task originated
	Context *Reference `protobuf:"bytes,23,opt,name=context,proto3" json:"context,omitempty"`
	// Start and end time of execution
	ExecutionPeriod *Period `protobuf:"bytes,24,opt,name=execution_period,json=executionPeriod,proto3" json:"execution_period,omitempty"`
	// Task Creation Date
	AuthoredOn *DateTime `protobuf:"bytes,25,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	// Task Last Modified Date
	LastModified *DateTime       `protobuf:"bytes,26,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	Requester    *Task_Requester `protobuf:"bytes,27,opt,name=requester,proto3" json:"requester,omitempty"`
	// requester | dispatcher | scheduler | performer | monitor | manager |
	// acquirer | reviewer
	PerformerType []*CodeableConcept `protobuf:"bytes,28,rep,name=performer_type,json=performerType,proto3" json:"performer_type,omitempty"`
	// Responsible individual
	Owner *Reference `protobuf:"bytes,29,opt,name=owner,proto3" json:"owner,omitempty"`
	// Why task is needed
	Reason *CodeableConcept `protobuf:"bytes,30,opt,name=reason,proto3" json:"reason,omitempty"`
	// Comments made about the task
	Note []*Annotation `protobuf:"bytes,31,rep,name=note,proto3" json:"note,omitempty"`
	// Key events in history of the Task
	RelevantHistory      []*Reference      `protobuf:"bytes,32,rep,name=relevant_history,json=relevantHistory,proto3" json:"relevant_history,omitempty"`
	Restriction          *Task_Restriction `protobuf:"bytes,33,opt,name=restriction,proto3" json:"restriction,omitempty"`
	Input                []*Task_Parameter `protobuf:"bytes,34,rep,name=input,proto3" json:"input,omitempty"`
	Output               []*Task_Output    `protobuf:"bytes,35,rep,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{112}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Task) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Task) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Task) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Task) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Task) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Task) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Task) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Task) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Task) GetDefinition() *Task_Definition {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *Task) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Task) GetGroupIdentifier() *Identifier {
	if m != nil {
		return m.GroupIdentifier
	}
	return nil
}

func (m *Task) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *Task) GetStatus() *TaskStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Task) GetStatusReason() *CodeableConcept {
	if m != nil {
		return m.StatusReason
	}
	return nil
}

func (m *Task) GetBusinessStatus() *CodeableConcept {
	if m != nil {
		return m.BusinessStatus
	}
	return nil
}

func (m *Task) GetIntent() *RequestIntentCode {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *Task) GetPriority() *RequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *Task) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Task) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Task) GetFocus() *Reference {
	if m != nil {
		return m.Focus
	}
	return nil
}

func (m *Task) GetForValue() *Reference {
	if m != nil {
		return m.ForValue
	}
	return nil
}

func (m *Task) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Task) GetExecutionPeriod() *Period {
	if m != nil {
		return m.ExecutionPeriod
	}
	return nil
}

func (m *Task) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *Task) GetLastModified() *DateTime {
	if m != nil {
		return m.LastModified
	}
	return nil
}

func (m *Task) GetRequester() *Task_Requester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *Task) GetPerformerType() []*CodeableConcept {
	if m != nil {
		return m.PerformerType
	}
	return nil
}

func (m *Task) GetOwner() *Reference {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Task) GetReason() *CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Task) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *Task) GetRelevantHistory() []*Reference {
	if m != nil {
		return m.RelevantHistory
	}
	return nil
}

func (m *Task) GetRestriction() *Task_Restriction {
	if m != nil {
		return m.Restriction
	}
	return nil
}

func (m *Task) GetInput() []*Task_Parameter {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Task) GetOutput() []*Task_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

// Formal definition of task
type Task_Definition struct {
	// Types that are valid to be assigned to Definition:
	//	*Task_Definition_Uri
	//	*Task_Definition_Reference
	Definition           isTask_Definition_Definition `protobuf_oneof:"definition"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Task_Definition) Reset()         { *m = Task_Definition{} }
func (m *Task_Definition) String() string { return proto.CompactTextString(m) }
func (*Task_Definition) ProtoMessage()    {}
func (*Task_Definition) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{112, 0}
}

func (m *Task_Definition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_Definition.Unmarshal(m, b)
}
func (m *Task_Definition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_Definition.Marshal(b, m, deterministic)
}
func (m *Task_Definition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_Definition.Merge(m, src)
}
func (m *Task_Definition) XXX_Size() int {
	return xxx_messageInfo_Task_Definition.Size(m)
}
func (m *Task_Definition) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_Definition.DiscardUnknown(m)
}

var xxx_messageInfo_Task_Definition proto.InternalMessageInfo

type isTask_Definition_Definition interface {
	isTask_Definition_Definition()
}

type Task_Definition_Uri struct {
	Uri *Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

type Task_Definition_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Task_Definition_Uri) isTask_Definition_Definition() {}

func (*Task_Definition_Reference) isTask_Definition_Definition() {}

func (m *Task_Definition) GetDefinition() isTask_Definition_Definition {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *Task_Definition) GetUri() *Uri {
	if x, ok := m.GetDefinition().(*Task_Definition_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Task_Definition) GetReference() *Reference {
	if x, ok := m.GetDefinition().(*Task_Definition_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Task_Definition) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Task_Definition_OneofMarshaler, _Task_Definition_OneofUnmarshaler, _Task_Definition_OneofSizer, []interface{}{
		(*Task_Definition_Uri)(nil),
		(*Task_Definition_Reference)(nil),
	}
}

func _Task_Definition_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Task_Definition)
	// definition
	switch x := m.Definition.(type) {
	case *Task_Definition_Uri:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Task_Definition_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Task_Definition.Definition has unexpected type %T", x)
	}
	return nil
}

func _Task_Definition_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Task_Definition)
	switch tag {
	case 1: // definition.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Definition = &Task_Definition_Uri{msg}
		return true, err
	case 2: // definition.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Definition = &Task_Definition_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Task_Definition_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Task_Definition)
	// definition
	switch x := m.Definition.(type) {
	case *Task_Definition_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Definition_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who is asking for task to be done
type Task_Requester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual asking for task
	Agent *Reference `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// Organization individual is acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Task_Requester) Reset()         { *m = Task_Requester{} }
func (m *Task_Requester) String() string { return proto.CompactTextString(m) }
func (*Task_Requester) ProtoMessage()    {}
func (*Task_Requester) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{112, 1}
}

func (m *Task_Requester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_Requester.Unmarshal(m, b)
}
func (m *Task_Requester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_Requester.Marshal(b, m, deterministic)
}
func (m *Task_Requester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_Requester.Merge(m, src)
}
func (m *Task_Requester) XXX_Size() int {
	return xxx_messageInfo_Task_Requester.Size(m)
}
func (m *Task_Requester) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_Requester.DiscardUnknown(m)
}

var xxx_messageInfo_Task_Requester proto.InternalMessageInfo

func (m *Task_Requester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Task_Requester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Task_Requester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Task_Requester) GetAgent() *Reference {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *Task_Requester) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Constraints on fulfillment tasks
type Task_Restriction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// How many times to repeat
	Repetitions *PositiveInt `protobuf:"bytes,4,opt,name=repetitions,proto3" json:"repetitions,omitempty"`
	// When fulfillment sought
	Period *Period `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	// For whom is fulfillment sought?
	Recipient            []*Reference `protobuf:"bytes,6,rep,name=recipient,proto3" json:"recipient,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Task_Restriction) Reset()         { *m = Task_Restriction{} }
func (m *Task_Restriction) String() string { return proto.CompactTextString(m) }
func (*Task_Restriction) ProtoMessage()    {}
func (*Task_Restriction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{112, 2}
}

func (m *Task_Restriction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_Restriction.Unmarshal(m, b)
}
func (m *Task_Restriction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_Restriction.Marshal(b, m, deterministic)
}
func (m *Task_Restriction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_Restriction.Merge(m, src)
}
func (m *Task_Restriction) XXX_Size() int {
	return xxx_messageInfo_Task_Restriction.Size(m)
}
func (m *Task_Restriction) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_Restriction.DiscardUnknown(m)
}

var xxx_messageInfo_Task_Restriction proto.InternalMessageInfo

func (m *Task_Restriction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Task_Restriction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Task_Restriction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Task_Restriction) GetRepetitions() *PositiveInt {
	if m != nil {
		return m.Repetitions
	}
	return nil
}

func (m *Task_Restriction) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Task_Restriction) GetRecipient() []*Reference {
	if m != nil {
		return m.Recipient
	}
	return nil
}

// Information used to perform task
type Task_Parameter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Label for the input
	Type                 *CodeableConcept      `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Value                *Task_Parameter_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Task_Parameter) Reset()         { *m = Task_Parameter{} }
func (m *Task_Parameter) String() string { return proto.CompactTextString(m) }
func (*Task_Parameter) ProtoMessage()    {}
func (*Task_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{112, 3}
}

func (m *Task_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_Parameter.Unmarshal(m, b)
}
func (m *Task_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_Parameter.Marshal(b, m, deterministic)
}
func (m *Task_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_Parameter.Merge(m, src)
}
func (m *Task_Parameter) XXX_Size() int {
	return xxx_messageInfo_Task_Parameter.Size(m)
}
func (m *Task_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Task_Parameter proto.InternalMessageInfo

func (m *Task_Parameter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Task_Parameter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Task_Parameter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Task_Parameter) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Task_Parameter) GetValue() *Task_Parameter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Content to use in performing the task
type Task_Parameter_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Task_Parameter_Value_Base64Binary
	//	*Task_Parameter_Value_Boolean
	//	*Task_Parameter_Value_Code
	//	*Task_Parameter_Value_Date
	//	*Task_Parameter_Value_DateTime
	//	*Task_Parameter_Value_Decimal
	//	*Task_Parameter_Value_Id
	//	*Task_Parameter_Value_Instant
	//	*Task_Parameter_Value_Integer
	//	*Task_Parameter_Value_Markdown
	//	*Task_Parameter_Value_Oid
	//	*Task_Parameter_Value_PositiveInt
	//	*Task_Parameter_Value_StringValue
	//	*Task_Parameter_Value_Time
	//	*Task_Parameter_Value_UnsignedInt
	//	*Task_Parameter_Value_Uri
	//	*Task_Parameter_Value_Address
	//	*Task_Parameter_Value_Age
	//	*Task_Parameter_Value_Annotation
	//	*Task_Parameter_Value_Attachment
	//	*Task_Parameter_Value_CodeableConcept
	//	*Task_Parameter_Value_Coding
	//	*Task_Parameter_Value_ContactPoint
	//	*Task_Parameter_Value_Count
	//	*Task_Parameter_Value_Distance
	//	*Task_Parameter_Value_Duration
	//	*Task_Parameter_Value_HumanName
	//	*Task_Parameter_Value_Identifier
	//	*Task_Parameter_Value_Money
	//	*Task_Parameter_Value_Period
	//	*Task_Parameter_Value_Quantity
	//	*Task_Parameter_Value_Range
	//	*Task_Parameter_Value_Ratio
	//	*Task_Parameter_Value_Reference
	//	*Task_Parameter_Value_SampledData
	//	*Task_Parameter_Value_Signature
	//	*Task_Parameter_Value_Timing
	//	*Task_Parameter_Value_Meta
	Value                isTask_Parameter_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Task_Parameter_Value) Reset()         { *m = Task_Parameter_Value{} }
func (m *Task_Parameter_Value) String() string { return proto.CompactTextString(m) }
func (*Task_Parameter_Value) ProtoMessage()    {}
func (*Task_Parameter_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{112, 3, 0}
}

func (m *Task_Parameter_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_Parameter_Value.Unmarshal(m, b)
}
func (m *Task_Parameter_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_Parameter_Value.Marshal(b, m, deterministic)
}
func (m *Task_Parameter_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_Parameter_Value.Merge(m, src)
}
func (m *Task_Parameter_Value) XXX_Size() int {
	return xxx_messageInfo_Task_Parameter_Value.Size(m)
}
func (m *Task_Parameter_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_Parameter_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Task_Parameter_Value proto.InternalMessageInfo

type isTask_Parameter_Value_Value interface {
	isTask_Parameter_Value_Value()
}

type Task_Parameter_Value_Base64Binary struct {
	Base64Binary *Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type Task_Parameter_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type Task_Parameter_Value_Code struct {
	Code *Code `protobuf:"bytes,3,opt,name=code,proto3,oneof"`
}

type Task_Parameter_Value_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type Task_Parameter_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Task_Parameter_Value_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,6,opt,name=decimal,proto3,oneof"`
}

type Task_Parameter_Value_Id struct {
	Id *Id `protobuf:"bytes,7,opt,name=id,proto3,oneof"`
}

type Task_Parameter_Value_Instant struct {
	Instant *Instant `protobuf:"bytes,8,opt,name=instant,proto3,oneof"`
}

type Task_Parameter_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,9,opt,name=integer,proto3,oneof"`
}

type Task_Parameter_Value_Markdown struct {
	Markdown *Markdown `protobuf:"bytes,10,opt,name=markdown,proto3,oneof"`
}

type Task_Parameter_Value_Oid struct {
	Oid *Oid `protobuf:"bytes,11,opt,name=oid,proto3,oneof"`
}

type Task_Parameter_Value_PositiveInt struct {
	PositiveInt *PositiveInt `protobuf:"bytes,12,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type Task_Parameter_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,13,opt,name=string_value,json=string,proto3,oneof"`
}

type Task_Parameter_Value_Time struct {
	Time *Time `protobuf:"bytes,14,opt,name=time,proto3,oneof"`
}

type Task_Parameter_Value_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,15,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type Task_Parameter_Value_Uri struct {
	Uri *Uri `protobuf:"bytes,16,opt,name=uri,proto3,oneof"`
}

type Task_Parameter_Value_Address struct {
	Address *Address `protobuf:"bytes,17,opt,name=address,proto3,oneof"`
}

type Task_Parameter_Value_Age struct {
	Age *Age `protobuf:"bytes,18,opt,name=age,proto3,oneof"`
}

type Task_Parameter_Value_Annotation struct {
	Annotation *Annotation `protobuf:"bytes,19,opt,name=annotation,proto3,oneof"`
}

type Task_Parameter_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,20,opt,name=attachment,proto3,oneof"`
}

type Task_Parameter_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,21,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Task_Parameter_Value_Coding struct {
	Coding *Coding `protobuf:"bytes,22,opt,name=coding,proto3,oneof"`
}

type Task_Parameter_Value_ContactPoint struct {
	ContactPoint *ContactPoint `protobuf:"bytes,23,opt,name=contact_point,json=contactPoint,proto3,oneof"`
}

type Task_Parameter_Value_Count struct {
	Count *Count `protobuf:"bytes,24,opt,name=count,proto3,oneof"`
}

type Task_Parameter_Value_Distance struct {
	Distance *Distance `protobuf:"bytes,25,opt,name=distance,proto3,oneof"`
}

type Task_Parameter_Value_Duration struct {
	Duration *Duration `protobuf:"bytes,26,opt,name=duration,proto3,oneof"`
}

type Task_Parameter_Value_HumanName struct {
	HumanName *HumanName `protobuf:"bytes,27,opt,name=human_name,json=humanName,proto3,oneof"`
}

type Task_Parameter_Value_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,28,opt,name=identifier,proto3,oneof"`
}

type Task_Parameter_Value_Money struct {
	Money *Money `protobuf:"bytes,29,opt,name=money,proto3,oneof"`
}

type Task_Parameter_Value_Period struct {
	Period *Period `protobuf:"bytes,30,opt,name=period,proto3,oneof"`
}

type Task_Parameter_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,31,opt,name=quantity,proto3,oneof"`
}

type Task_Parameter_Value_Range struct {
	Range *Range `protobuf:"bytes,32,opt,name=range,proto3,oneof"`
}

type Task_Parameter_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,33,opt,name=ratio,proto3,oneof"`
}

type Task_Parameter_Value_Reference struct {
	Reference *Reference `protobuf:"bytes,34,opt,name=reference,proto3,oneof"`
}

type Task_Parameter_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,35,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Task_Parameter_Value_Signature struct {
	Signature *Signature `protobuf:"bytes,36,opt,name=signature,proto3,oneof"`
}

type Task_Parameter_Value_Timing struct {
	Timing *Timing `protobuf:"bytes,37,opt,name=timing,proto3,oneof"`
}

type Task_Parameter_Value_Meta struct {
	Meta *Meta `protobuf:"bytes,38,opt,name=meta,proto3,oneof"`
}

func (*Task_Parameter_Value_Base64Binary) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Boolean) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Code) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Date) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_DateTime) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Decimal) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Id) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Instant) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Integer) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Markdown) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Oid) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_PositiveInt) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_StringValue) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Time) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_UnsignedInt) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Uri) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Address) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Age) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Annotation) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Attachment) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_CodeableConcept) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Coding) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_ContactPoint) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Count) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Distance) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Duration) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_HumanName) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Identifier) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Money) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Period) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Quantity) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Range) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Ratio) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Reference) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_SampledData) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Signature) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Timing) isTask_Parameter_Value_Value() {}

func (*Task_Parameter_Value_Meta) isTask_Parameter_Value_Value() {}

func (m *Task_Parameter_Value) GetValue() isTask_Parameter_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Task_Parameter_Value) GetBase64Binary() *Base64Binary {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (m *Task_Parameter_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Task_Parameter_Value) GetCode() *Code {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Code); ok {
		return x.Code
	}
	return nil
}

func (m *Task_Parameter_Value) GetDate() *Date {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Task_Parameter_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Task_Parameter_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Task_Parameter_Value) GetDecimal() *Decimal {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *Task_Parameter_Value) GetId() *Id {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Id); ok {
		return x.Id
	}
	return nil
}

func (m *Task_Parameter_Value) GetInstant() *Instant {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Instant); ok {
		return x.Instant
	}
	return nil
}

func (m *Task_Parameter_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *Task_Parameter_Value) GetMarkdown() *Markdown {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (m *Task_Parameter_Value) GetOid() *Oid {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Oid); ok {
		return x.Oid
	}
	return nil
}

func (m *Task_Parameter_Value) GetPositiveInt() *PositiveInt {
	if x, ok := m.GetValue().(*Task_Parameter_Value_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (m *Task_Parameter_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Task_Parameter_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Task_Parameter_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Task_Parameter_Value) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetValue().(*Task_Parameter_Value_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *Task_Parameter_Value) GetUri() *Uri {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Task_Parameter_Value) GetAddress() *Address {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Address); ok {
		return x.Address
	}
	return nil
}

func (m *Task_Parameter_Value) GetAge() *Age {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Age); ok {
		return x.Age
	}
	return nil
}

func (m *Task_Parameter_Value) GetAnnotation() *Annotation {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (m *Task_Parameter_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Task_Parameter_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Task_Parameter_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Task_Parameter_Value) GetCoding() *Coding {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *Task_Parameter_Value) GetContactPoint() *ContactPoint {
	if x, ok := m.GetValue().(*Task_Parameter_Value_ContactPoint); ok {
		return x.ContactPoint
	}
	return nil
}

func (m *Task_Parameter_Value) GetCount() *Count {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Count); ok {
		return x.Count
	}
	return nil
}

func (m *Task_Parameter_Value) GetDistance() *Distance {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Distance); ok {
		return x.Distance
	}
	return nil
}

func (m *Task_Parameter_Value) GetDuration() *Duration {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *Task_Parameter_Value) GetHumanName() *HumanName {
	if x, ok := m.GetValue().(*Task_Parameter_Value_HumanName); ok {
		return x.HumanName
	}
	return nil
}

func (m *Task_Parameter_Value) GetIdentifier() *Identifier {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (m *Task_Parameter_Value) GetMoney() *Money {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Money); ok {
		return x.Money
	}
	return nil
}

func (m *Task_Parameter_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Period); ok {
		return x.Period
	}
	return nil
}

func (m *Task_Parameter_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Task_Parameter_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Task_Parameter_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Task_Parameter_Value) GetReference() *Reference {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Reference); ok {
		return x.Reference
	}
	return nil
}

func (m *Task_Parameter_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Task_Parameter_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Task_Parameter_Value) GetSignature() *Signature {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Signature); ok {
		return x.Signature
	}
	return nil
}

func (m *Task_Parameter_Value) GetTiming() *Timing {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Timing); ok {
		return x.Timing
	}
	return nil
}

func (m *Task_Parameter_Value) GetMeta() *Meta {
	if x, ok := m.GetValue().(*Task_Parameter_Value_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Task_Parameter_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Task_Parameter_Value_OneofMarshaler, _Task_Parameter_Value_OneofUnmarshaler, _Task_Parameter_Value_OneofSizer, []interface{}{
		(*Task_Parameter_Value_Base64Binary)(nil),
		(*Task_Parameter_Value_Boolean)(nil),
		(*Task_Parameter_Value_Code)(nil),
		(*Task_Parameter_Value_Date)(nil),
		(*Task_Parameter_Value_DateTime)(nil),
		(*Task_Parameter_Value_Decimal)(nil),
		(*Task_Parameter_Value_Id)(nil),
		(*Task_Parameter_Value_Instant)(nil),
		(*Task_Parameter_Value_Integer)(nil),
		(*Task_Parameter_Value_Markdown)(nil),
		(*Task_Parameter_Value_Oid)(nil),
		(*Task_Parameter_Value_PositiveInt)(nil),
		(*Task_Parameter_Value_StringValue)(nil),
		(*Task_Parameter_Value_Time)(nil),
		(*Task_Parameter_Value_UnsignedInt)(nil),
		(*Task_Parameter_Value_Uri)(nil),
		(*Task_Parameter_Value_Address)(nil),
		(*Task_Parameter_Value_Age)(nil),
		(*Task_Parameter_Value_Annotation)(nil),
		(*Task_Parameter_Value_Attachment)(nil),
		(*Task_Parameter_Value_CodeableConcept)(nil),
		(*Task_Parameter_Value_Coding)(nil),
		(*Task_Parameter_Value_ContactPoint)(nil),
		(*Task_Parameter_Value_Count)(nil),
		(*Task_Parameter_Value_Distance)(nil),
		(*Task_Parameter_Value_Duration)(nil),
		(*Task_Parameter_Value_HumanName)(nil),
		(*Task_Parameter_Value_Identifier)(nil),
		(*Task_Parameter_Value_Money)(nil),
		(*Task_Parameter_Value_Period)(nil),
		(*Task_Parameter_Value_Quantity)(nil),
		(*Task_Parameter_Value_Range)(nil),
		(*Task_Parameter_Value_Ratio)(nil),
		(*Task_Parameter_Value_Reference)(nil),
		(*Task_Parameter_Value_SampledData)(nil),
		(*Task_Parameter_Value_Signature)(nil),
		(*Task_Parameter_Value_Timing)(nil),
		(*Task_Parameter_Value_Meta)(nil),
	}
}

func _Task_Parameter_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Task_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *Task_Parameter_Value_Base64Binary:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Base64Binary); err != nil {
			return err
		}
	case *Task_Parameter_Value_Boolean:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Task_Parameter_Value_Code:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case *Task_Parameter_Value_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Task_Parameter_Value_DateTime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Task_Parameter_Value_Decimal:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *Task_Parameter_Value_Id:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Id); err != nil {
			return err
		}
	case *Task_Parameter_Value_Instant:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instant); err != nil {
			return err
		}
	case *Task_Parameter_Value_Integer:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *Task_Parameter_Value_Markdown:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Markdown); err != nil {
			return err
		}
	case *Task_Parameter_Value_Oid:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oid); err != nil {
			return err
		}
	case *Task_Parameter_Value_PositiveInt:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PositiveInt); err != nil {
			return err
		}
	case *Task_Parameter_Value_StringValue:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Task_Parameter_Value_Time:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Task_Parameter_Value_UnsignedInt:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *Task_Parameter_Value_Uri:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Task_Parameter_Value_Address:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *Task_Parameter_Value_Age:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *Task_Parameter_Value_Annotation:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Annotation); err != nil {
			return err
		}
	case *Task_Parameter_Value_Attachment:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Task_Parameter_Value_CodeableConcept:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Task_Parameter_Value_Coding:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *Task_Parameter_Value_ContactPoint:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContactPoint); err != nil {
			return err
		}
	case *Task_Parameter_Value_Count:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Count); err != nil {
			return err
		}
	case *Task_Parameter_Value_Distance:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Distance); err != nil {
			return err
		}
	case *Task_Parameter_Value_Duration:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *Task_Parameter_Value_HumanName:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HumanName); err != nil {
			return err
		}
	case *Task_Parameter_Value_Identifier:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case *Task_Parameter_Value_Money:
		b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case *Task_Parameter_Value_Period:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *Task_Parameter_Value_Quantity:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Task_Parameter_Value_Range:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Task_Parameter_Value_Ratio:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Task_Parameter_Value_Reference:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case *Task_Parameter_Value_SampledData:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Task_Parameter_Value_Signature:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Signature); err != nil {
			return err
		}
	case *Task_Parameter_Value_Timing:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case *Task_Parameter_Value_Meta:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Meta); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Task_Parameter_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Task_Parameter_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Task_Parameter_Value)
	switch tag {
	case 1: // value.base64_binary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Base64Binary)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Base64Binary{msg}
		return true, err
	case 2: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Boolean{msg}
		return true, err
	case 3: // value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Code{msg}
		return true, err
	case 4: // value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Date{msg}
		return true, err
	case 5: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_DateTime{msg}
		return true, err
	case 6: // value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Decimal{msg}
		return true, err
	case 7: // value.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Id)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Id{msg}
		return true, err
	case 8: // value.instant
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Instant)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Instant{msg}
		return true, err
	case 9: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Integer{msg}
		return true, err
	case 10: // value.markdown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Markdown)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Markdown{msg}
		return true, err
	case 11: // value.oid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oid)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Oid{msg}
		return true, err
	case 12: // value.positive_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PositiveInt)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_PositiveInt{msg}
		return true, err
	case 13: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_StringValue{msg}
		return true, err
	case 14: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Time{msg}
		return true, err
	case 15: // value.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_UnsignedInt{msg}
		return true, err
	case 16: // value.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Uri{msg}
		return true, err
	case 17: // value.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Address{msg}
		return true, err
	case 18: // value.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Age{msg}
		return true, err
	case 19: // value.annotation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Annotation)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Annotation{msg}
		return true, err
	case 20: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Attachment{msg}
		return true, err
	case 21: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_CodeableConcept{msg}
		return true, err
	case 22: // value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Coding{msg}
		return true, err
	case 23: // value.contact_point
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContactPoint)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_ContactPoint{msg}
		return true, err
	case 24: // value.count
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Count)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Count{msg}
		return true, err
	case 25: // value.distance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Distance)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Distance{msg}
		return true, err
	case 26: // value.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Duration{msg}
		return true, err
	case 27: // value.human_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HumanName)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_HumanName{msg}
		return true, err
	case 28: // value.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Identifier{msg}
		return true, err
	case 29: // value.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Money{msg}
		return true, err
	case 30: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Period{msg}
		return true, err
	case 31: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Quantity{msg}
		return true, err
	case 32: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Range{msg}
		return true, err
	case 33: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Ratio{msg}
		return true, err
	case 34: // value.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Reference{msg}
		return true, err
	case 35: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_SampledData{msg}
		return true, err
	case 36: // value.signature
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Signature)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Signature{msg}
		return true, err
	case 37: // value.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Timing{msg}
		return true, err
	case 38: // value.meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Meta)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Parameter_Value_Meta{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Task_Parameter_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Task_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *Task_Parameter_Value_Base64Binary:
		s := proto.Size(x.Base64Binary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Id:
		s := proto.Size(x.Id)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Instant:
		s := proto.Size(x.Instant)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Markdown:
		s := proto.Size(x.Markdown)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Oid:
		s := proto.Size(x.Oid)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_PositiveInt:
		s := proto.Size(x.PositiveInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Uri:
		s := proto.Size(x.Uri)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Address:
		s := proto.Size(x.Address)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Age:
		s := proto.Size(x.Age)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Annotation:
		s := proto.Size(x.Annotation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Coding:
		s := proto.Size(x.Coding)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_ContactPoint:
		s := proto.Size(x.ContactPoint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Count:
		s := proto.Size(x.Count)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Distance:
		s := proto.Size(x.Distance)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Duration:
		s := proto.Size(x.Duration)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_HumanName:
		s := proto.Size(x.HumanName)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Identifier:
		s := proto.Size(x.Identifier)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Money:
		s := proto.Size(x.Money)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Period:
		s := proto.Size(x.Period)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Range:
		s := proto.Size(x.Range)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Reference:
		s := proto.Size(x.Reference)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Signature:
		s := proto.Size(x.Signature)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Timing:
		s := proto.Size(x.Timing)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Parameter_Value_Meta:
		s := proto.Size(x.Meta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Information produced as part of task
type Task_Output struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Label for output
	Type                 *CodeableConcept   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Value                *Task_Output_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Task_Output) Reset()         { *m = Task_Output{} }
func (m *Task_Output) String() string { return proto.CompactTextString(m) }
func (*Task_Output) ProtoMessage()    {}
func (*Task_Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{112, 4}
}

func (m *Task_Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_Output.Unmarshal(m, b)
}
func (m *Task_Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_Output.Marshal(b, m, deterministic)
}
func (m *Task_Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_Output.Merge(m, src)
}
func (m *Task_Output) XXX_Size() int {
	return xxx_messageInfo_Task_Output.Size(m)
}
func (m *Task_Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Task_Output proto.InternalMessageInfo

func (m *Task_Output) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Task_Output) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Task_Output) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Task_Output) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Task_Output) GetValue() *Task_Output_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Result of output
type Task_Output_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Task_Output_Value_Base64Binary
	//	*Task_Output_Value_Boolean
	//	*Task_Output_Value_Code
	//	*Task_Output_Value_Date
	//	*Task_Output_Value_DateTime
	//	*Task_Output_Value_Decimal
	//	*Task_Output_Value_Id
	//	*Task_Output_Value_Instant
	//	*Task_Output_Value_Integer
	//	*Task_Output_Value_Markdown
	//	*Task_Output_Value_Oid
	//	*Task_Output_Value_PositiveInt
	//	*Task_Output_Value_StringValue
	//	*Task_Output_Value_Time
	//	*Task_Output_Value_UnsignedInt
	//	*Task_Output_Value_Uri
	//	*Task_Output_Value_Address
	//	*Task_Output_Value_Age
	//	*Task_Output_Value_Annotation
	//	*Task_Output_Value_Attachment
	//	*Task_Output_Value_CodeableConcept
	//	*Task_Output_Value_Coding
	//	*Task_Output_Value_ContactPoint
	//	*Task_Output_Value_Count
	//	*Task_Output_Value_Distance
	//	*Task_Output_Value_Duration
	//	*Task_Output_Value_HumanName
	//	*Task_Output_Value_Identifier
	//	*Task_Output_Value_Money
	//	*Task_Output_Value_Period
	//	*Task_Output_Value_Quantity
	//	*Task_Output_Value_Range
	//	*Task_Output_Value_Ratio
	//	*Task_Output_Value_Reference
	//	*Task_Output_Value_SampledData
	//	*Task_Output_Value_Signature
	//	*Task_Output_Value_Timing
	//	*Task_Output_Value_Meta
	Value                isTask_Output_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Task_Output_Value) Reset()         { *m = Task_Output_Value{} }
func (m *Task_Output_Value) String() string { return proto.CompactTextString(m) }
func (*Task_Output_Value) ProtoMessage()    {}
func (*Task_Output_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{112, 4, 0}
}

func (m *Task_Output_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_Output_Value.Unmarshal(m, b)
}
func (m *Task_Output_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_Output_Value.Marshal(b, m, deterministic)
}
func (m *Task_Output_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_Output_Value.Merge(m, src)
}
func (m *Task_Output_Value) XXX_Size() int {
	return xxx_messageInfo_Task_Output_Value.Size(m)
}
func (m *Task_Output_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_Output_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Task_Output_Value proto.InternalMessageInfo

type isTask_Output_Value_Value interface {
	isTask_Output_Value_Value()
}

type Task_Output_Value_Base64Binary struct {
	Base64Binary *Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type Task_Output_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type Task_Output_Value_Code struct {
	Code *Code `protobuf:"bytes,3,opt,name=code,proto3,oneof"`
}

type Task_Output_Value_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type Task_Output_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Task_Output_Value_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,6,opt,name=decimal,proto3,oneof"`
}

type Task_Output_Value_Id struct {
	Id *Id `protobuf:"bytes,7,opt,name=id,proto3,oneof"`
}

type Task_Output_Value_Instant struct {
	Instant *Instant `protobuf:"bytes,8,opt,name=instant,proto3,oneof"`
}

type Task_Output_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,9,opt,name=integer,proto3,oneof"`
}

type Task_Output_Value_Markdown struct {
	Markdown *Markdown `protobuf:"bytes,10,opt,name=markdown,proto3,oneof"`
}

type Task_Output_Value_Oid struct {
	Oid *Oid `protobuf:"bytes,11,opt,name=oid,proto3,oneof"`
}

type Task_Output_Value_PositiveInt struct {
	PositiveInt *PositiveInt `protobuf:"bytes,12,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type Task_Output_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,13,opt,name=string_value,json=string,proto3,oneof"`
}

type Task_Output_Value_Time struct {
	Time *Time `protobuf:"bytes,14,opt,name=time,proto3,oneof"`
}

type Task_Output_Value_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,15,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type Task_Output_Value_Uri struct {
	Uri *Uri `protobuf:"bytes,16,opt,name=uri,proto3,oneof"`
}

type Task_Output_Value_Address struct {
	Address *Address `protobuf:"bytes,17,opt,name=address,proto3,oneof"`
}

type Task_Output_Value_Age struct {
	Age *Age `protobuf:"bytes,18,opt,name=age,proto3,oneof"`
}

type Task_Output_Value_Annotation struct {
	Annotation *Annotation `protobuf:"bytes,19,opt,name=annotation,proto3,oneof"`
}

type Task_Output_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,20,opt,name=attachment,proto3,oneof"`
}

type Task_Output_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,21,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Task_Output_Value_Coding struct {
	Coding *Coding `protobuf:"bytes,22,opt,name=coding,proto3,oneof"`
}

type Task_Output_Value_ContactPoint struct {
	ContactPoint *ContactPoint `protobuf:"bytes,23,opt,name=contact_point,json=contactPoint,proto3,oneof"`
}

type Task_Output_Value_Count struct {
	Count *Count `protobuf:"bytes,24,opt,name=count,proto3,oneof"`
}

type Task_Output_Value_Distance struct {
	Distance *Distance `protobuf:"bytes,25,opt,name=distance,proto3,oneof"`
}

type Task_Output_Value_Duration struct {
	Duration *Duration `protobuf:"bytes,26,opt,name=duration,proto3,oneof"`
}

type Task_Output_Value_HumanName struct {
	HumanName *HumanName `protobuf:"bytes,27,opt,name=human_name,json=humanName,proto3,oneof"`
}

type Task_Output_Value_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,28,opt,name=identifier,proto3,oneof"`
}

type Task_Output_Value_Money struct {
	Money *Money `protobuf:"bytes,29,opt,name=money,proto3,oneof"`
}

type Task_Output_Value_Period struct {
	Period *Period `protobuf:"bytes,30,opt,name=period,proto3,oneof"`
}

type Task_Output_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,31,opt,name=quantity,proto3,oneof"`
}

type Task_Output_Value_Range struct {
	Range *Range `protobuf:"bytes,32,opt,name=range,proto3,oneof"`
}

type Task_Output_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,33,opt,name=ratio,proto3,oneof"`
}

type Task_Output_Value_Reference struct {
	Reference *Reference `protobuf:"bytes,34,opt,name=reference,proto3,oneof"`
}

type Task_Output_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,35,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Task_Output_Value_Signature struct {
	Signature *Signature `protobuf:"bytes,36,opt,name=signature,proto3,oneof"`
}

type Task_Output_Value_Timing struct {
	Timing *Timing `protobuf:"bytes,37,opt,name=timing,proto3,oneof"`
}

type Task_Output_Value_Meta struct {
	Meta *Meta `protobuf:"bytes,38,opt,name=meta,proto3,oneof"`
}

func (*Task_Output_Value_Base64Binary) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Boolean) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Code) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Date) isTask_Output_Value_Value() {}

func (*Task_Output_Value_DateTime) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Decimal) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Id) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Instant) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Integer) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Markdown) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Oid) isTask_Output_Value_Value() {}

func (*Task_Output_Value_PositiveInt) isTask_Output_Value_Value() {}

func (*Task_Output_Value_StringValue) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Time) isTask_Output_Value_Value() {}

func (*Task_Output_Value_UnsignedInt) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Uri) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Address) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Age) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Annotation) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Attachment) isTask_Output_Value_Value() {}

func (*Task_Output_Value_CodeableConcept) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Coding) isTask_Output_Value_Value() {}

func (*Task_Output_Value_ContactPoint) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Count) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Distance) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Duration) isTask_Output_Value_Value() {}

func (*Task_Output_Value_HumanName) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Identifier) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Money) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Period) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Quantity) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Range) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Ratio) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Reference) isTask_Output_Value_Value() {}

func (*Task_Output_Value_SampledData) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Signature) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Timing) isTask_Output_Value_Value() {}

func (*Task_Output_Value_Meta) isTask_Output_Value_Value() {}

func (m *Task_Output_Value) GetValue() isTask_Output_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Task_Output_Value) GetBase64Binary() *Base64Binary {
	if x, ok := m.GetValue().(*Task_Output_Value_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (m *Task_Output_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*Task_Output_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Task_Output_Value) GetCode() *Code {
	if x, ok := m.GetValue().(*Task_Output_Value_Code); ok {
		return x.Code
	}
	return nil
}

func (m *Task_Output_Value) GetDate() *Date {
	if x, ok := m.GetValue().(*Task_Output_Value_Date); ok {
		return x.Date
	}
	return nil
}

func (m *Task_Output_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Task_Output_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Task_Output_Value) GetDecimal() *Decimal {
	if x, ok := m.GetValue().(*Task_Output_Value_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *Task_Output_Value) GetId() *Id {
	if x, ok := m.GetValue().(*Task_Output_Value_Id); ok {
		return x.Id
	}
	return nil
}

func (m *Task_Output_Value) GetInstant() *Instant {
	if x, ok := m.GetValue().(*Task_Output_Value_Instant); ok {
		return x.Instant
	}
	return nil
}

func (m *Task_Output_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*Task_Output_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *Task_Output_Value) GetMarkdown() *Markdown {
	if x, ok := m.GetValue().(*Task_Output_Value_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (m *Task_Output_Value) GetOid() *Oid {
	if x, ok := m.GetValue().(*Task_Output_Value_Oid); ok {
		return x.Oid
	}
	return nil
}

func (m *Task_Output_Value) GetPositiveInt() *PositiveInt {
	if x, ok := m.GetValue().(*Task_Output_Value_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (m *Task_Output_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Task_Output_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Task_Output_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Task_Output_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Task_Output_Value) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetValue().(*Task_Output_Value_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *Task_Output_Value) GetUri() *Uri {
	if x, ok := m.GetValue().(*Task_Output_Value_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Task_Output_Value) GetAddress() *Address {
	if x, ok := m.GetValue().(*Task_Output_Value_Address); ok {
		return x.Address
	}
	return nil
}

func (m *Task_Output_Value) GetAge() *Age {
	if x, ok := m.GetValue().(*Task_Output_Value_Age); ok {
		return x.Age
	}
	return nil
}

func (m *Task_Output_Value) GetAnnotation() *Annotation {
	if x, ok := m.GetValue().(*Task_Output_Value_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (m *Task_Output_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Task_Output_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Task_Output_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Task_Output_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Task_Output_Value) GetCoding() *Coding {
	if x, ok := m.GetValue().(*Task_Output_Value_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *Task_Output_Value) GetContactPoint() *ContactPoint {
	if x, ok := m.GetValue().(*Task_Output_Value_ContactPoint); ok {
		return x.ContactPoint
	}
	return nil
}

func (m *Task_Output_Value) GetCount() *Count {
	if x, ok := m.GetValue().(*Task_Output_Value_Count); ok {
		return x.Count
	}
	return nil
}

func (m *Task_Output_Value) GetDistance() *Distance {
	if x, ok := m.GetValue().(*Task_Output_Value_Distance); ok {
		return x.Distance
	}
	return nil
}

func (m *Task_Output_Value) GetDuration() *Duration {
	if x, ok := m.GetValue().(*Task_Output_Value_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *Task_Output_Value) GetHumanName() *HumanName {
	if x, ok := m.GetValue().(*Task_Output_Value_HumanName); ok {
		return x.HumanName
	}
	return nil
}

func (m *Task_Output_Value) GetIdentifier() *Identifier {
	if x, ok := m.GetValue().(*Task_Output_Value_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (m *Task_Output_Value) GetMoney() *Money {
	if x, ok := m.GetValue().(*Task_Output_Value_Money); ok {
		return x.Money
	}
	return nil
}

func (m *Task_Output_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Task_Output_Value_Period); ok {
		return x.Period
	}
	return nil
}

func (m *Task_Output_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Task_Output_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Task_Output_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Task_Output_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Task_Output_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Task_Output_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Task_Output_Value) GetReference() *Reference {
	if x, ok := m.GetValue().(*Task_Output_Value_Reference); ok {
		return x.Reference
	}
	return nil
}

func (m *Task_Output_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Task_Output_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Task_Output_Value) GetSignature() *Signature {
	if x, ok := m.GetValue().(*Task_Output_Value_Signature); ok {
		return x.Signature
	}
	return nil
}

func (m *Task_Output_Value) GetTiming() *Timing {
	if x, ok := m.GetValue().(*Task_Output_Value_Timing); ok {
		return x.Timing
	}
	return nil
}

func (m *Task_Output_Value) GetMeta() *Meta {
	if x, ok := m.GetValue().(*Task_Output_Value_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Task_Output_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Task_Output_Value_OneofMarshaler, _Task_Output_Value_OneofUnmarshaler, _Task_Output_Value_OneofSizer, []interface{}{
		(*Task_Output_Value_Base64Binary)(nil),
		(*Task_Output_Value_Boolean)(nil),
		(*Task_Output_Value_Code)(nil),
		(*Task_Output_Value_Date)(nil),
		(*Task_Output_Value_DateTime)(nil),
		(*Task_Output_Value_Decimal)(nil),
		(*Task_Output_Value_Id)(nil),
		(*Task_Output_Value_Instant)(nil),
		(*Task_Output_Value_Integer)(nil),
		(*Task_Output_Value_Markdown)(nil),
		(*Task_Output_Value_Oid)(nil),
		(*Task_Output_Value_PositiveInt)(nil),
		(*Task_Output_Value_StringValue)(nil),
		(*Task_Output_Value_Time)(nil),
		(*Task_Output_Value_UnsignedInt)(nil),
		(*Task_Output_Value_Uri)(nil),
		(*Task_Output_Value_Address)(nil),
		(*Task_Output_Value_Age)(nil),
		(*Task_Output_Value_Annotation)(nil),
		(*Task_Output_Value_Attachment)(nil),
		(*Task_Output_Value_CodeableConcept)(nil),
		(*Task_Output_Value_Coding)(nil),
		(*Task_Output_Value_ContactPoint)(nil),
		(*Task_Output_Value_Count)(nil),
		(*Task_Output_Value_Distance)(nil),
		(*Task_Output_Value_Duration)(nil),
		(*Task_Output_Value_HumanName)(nil),
		(*Task_Output_Value_Identifier)(nil),
		(*Task_Output_Value_Money)(nil),
		(*Task_Output_Value_Period)(nil),
		(*Task_Output_Value_Quantity)(nil),
		(*Task_Output_Value_Range)(nil),
		(*Task_Output_Value_Ratio)(nil),
		(*Task_Output_Value_Reference)(nil),
		(*Task_Output_Value_SampledData)(nil),
		(*Task_Output_Value_Signature)(nil),
		(*Task_Output_Value_Timing)(nil),
		(*Task_Output_Value_Meta)(nil),
	}
}

func _Task_Output_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Task_Output_Value)
	// value
	switch x := m.Value.(type) {
	case *Task_Output_Value_Base64Binary:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Base64Binary); err != nil {
			return err
		}
	case *Task_Output_Value_Boolean:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Task_Output_Value_Code:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case *Task_Output_Value_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *Task_Output_Value_DateTime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Task_Output_Value_Decimal:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *Task_Output_Value_Id:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Id); err != nil {
			return err
		}
	case *Task_Output_Value_Instant:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instant); err != nil {
			return err
		}
	case *Task_Output_Value_Integer:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *Task_Output_Value_Markdown:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Markdown); err != nil {
			return err
		}
	case *Task_Output_Value_Oid:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oid); err != nil {
			return err
		}
	case *Task_Output_Value_PositiveInt:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PositiveInt); err != nil {
			return err
		}
	case *Task_Output_Value_StringValue:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Task_Output_Value_Time:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Task_Output_Value_UnsignedInt:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *Task_Output_Value_Uri:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Task_Output_Value_Address:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *Task_Output_Value_Age:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *Task_Output_Value_Annotation:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Annotation); err != nil {
			return err
		}
	case *Task_Output_Value_Attachment:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Task_Output_Value_CodeableConcept:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Task_Output_Value_Coding:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *Task_Output_Value_ContactPoint:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContactPoint); err != nil {
			return err
		}
	case *Task_Output_Value_Count:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Count); err != nil {
			return err
		}
	case *Task_Output_Value_Distance:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Distance); err != nil {
			return err
		}
	case *Task_Output_Value_Duration:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *Task_Output_Value_HumanName:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HumanName); err != nil {
			return err
		}
	case *Task_Output_Value_Identifier:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case *Task_Output_Value_Money:
		b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case *Task_Output_Value_Period:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *Task_Output_Value_Quantity:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Task_Output_Value_Range:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Task_Output_Value_Ratio:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Task_Output_Value_Reference:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case *Task_Output_Value_SampledData:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Task_Output_Value_Signature:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Signature); err != nil {
			return err
		}
	case *Task_Output_Value_Timing:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case *Task_Output_Value_Meta:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Meta); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Task_Output_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Task_Output_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Task_Output_Value)
	switch tag {
	case 1: // value.base64_binary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Base64Binary)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Base64Binary{msg}
		return true, err
	case 2: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Boolean{msg}
		return true, err
	case 3: // value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Code{msg}
		return true, err
	case 4: // value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Date{msg}
		return true, err
	case 5: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_DateTime{msg}
		return true, err
	case 6: // value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Decimal{msg}
		return true, err
	case 7: // value.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Id)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Id{msg}
		return true, err
	case 8: // value.instant
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Instant)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Instant{msg}
		return true, err
	case 9: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Integer{msg}
		return true, err
	case 10: // value.markdown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Markdown)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Markdown{msg}
		return true, err
	case 11: // value.oid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oid)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Oid{msg}
		return true, err
	case 12: // value.positive_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PositiveInt)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_PositiveInt{msg}
		return true, err
	case 13: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_StringValue{msg}
		return true, err
	case 14: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Time{msg}
		return true, err
	case 15: // value.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_UnsignedInt{msg}
		return true, err
	case 16: // value.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Uri{msg}
		return true, err
	case 17: // value.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Address{msg}
		return true, err
	case 18: // value.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Age{msg}
		return true, err
	case 19: // value.annotation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Annotation)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Annotation{msg}
		return true, err
	case 20: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Attachment{msg}
		return true, err
	case 21: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_CodeableConcept{msg}
		return true, err
	case 22: // value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Coding{msg}
		return true, err
	case 23: // value.contact_point
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContactPoint)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_ContactPoint{msg}
		return true, err
	case 24: // value.count
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Count)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Count{msg}
		return true, err
	case 25: // value.distance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Distance)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Distance{msg}
		return true, err
	case 26: // value.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Duration{msg}
		return true, err
	case 27: // value.human_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HumanName)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_HumanName{msg}
		return true, err
	case 28: // value.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Identifier{msg}
		return true, err
	case 29: // value.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Money{msg}
		return true, err
	case 30: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Period{msg}
		return true, err
	case 31: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Quantity{msg}
		return true, err
	case 32: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Range{msg}
		return true, err
	case 33: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Ratio{msg}
		return true, err
	case 34: // value.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Reference{msg}
		return true, err
	case 35: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_SampledData{msg}
		return true, err
	case 36: // value.signature
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Signature)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Signature{msg}
		return true, err
	case 37: // value.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Timing{msg}
		return true, err
	case 38: // value.meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Meta)
		err := b.DecodeMessage(msg)
		m.Value = &Task_Output_Value_Meta{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Task_Output_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Task_Output_Value)
	// value
	switch x := m.Value.(type) {
	case *Task_Output_Value_Base64Binary:
		s := proto.Size(x.Base64Binary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Id:
		s := proto.Size(x.Id)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Instant:
		s := proto.Size(x.Instant)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Markdown:
		s := proto.Size(x.Markdown)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Oid:
		s := proto.Size(x.Oid)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_PositiveInt:
		s := proto.Size(x.PositiveInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Uri:
		s := proto.Size(x.Uri)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Address:
		s := proto.Size(x.Address)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Age:
		s := proto.Size(x.Age)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Annotation:
		s := proto.Size(x.Annotation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Coding:
		s := proto.Size(x.Coding)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_ContactPoint:
		s := proto.Size(x.ContactPoint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Count:
		s := proto.Size(x.Count)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Distance:
		s := proto.Size(x.Distance)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Duration:
		s := proto.Size(x.Duration)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_HumanName:
		s := proto.Size(x.HumanName)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Identifier:
		s := proto.Size(x.Identifier)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Money:
		s := proto.Size(x.Money)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Period:
		s := proto.Size(x.Period)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Range:
		s := proto.Size(x.Range)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Reference:
		s := proto.Size(x.Reference)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Signature:
		s := proto.Size(x.Signature)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Timing:
		s := proto.Size(x.Timing)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Output_Value_Meta:
		s := proto.Size(x.Meta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for TestReport, last updated
// 2017-04-19T07:44:43.294+10:00. Describes the results of a TestScript
// execution. See http://hl7.org/fhir/StructureDefinition/TestReport
type TestReport struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External identifier
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Informal name of the executed TestScript
	Name *String `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// completed | in-progress | waiting | stopped | entered-in-error
	Status *TestReportStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Reference to the  version-specific TestScript that was executed to produce
	// this TestReport
	TestScript *Reference `protobuf:"bytes,12,opt,name=test_script,json=testScript,proto3" json:"test_script,omitempty"`
	// pass | fail | pending
	Result *TestReportResultCode `protobuf:"bytes,13,opt,name=result,proto3" json:"result,omitempty"`
	// The final score (percentage of tests passed) resulting from the execution
	// of the TestScript
	Score *Decimal `protobuf:"bytes,14,opt,name=score,proto3" json:"score,omitempty"`
	// Name of the tester producing this report (Organization or individual)
	Tester *String `protobuf:"bytes,15,opt,name=tester,proto3" json:"tester,omitempty"`
	// When the TestScript was executed and this TestReport was generated
	Issued               *DateTime                 `protobuf:"bytes,16,opt,name=issued,proto3" json:"issued,omitempty"`
	Participant          []*TestReport_Participant `protobuf:"bytes,17,rep,name=participant,proto3" json:"participant,omitempty"`
	Setup                *TestReport_Setup         `protobuf:"bytes,18,opt,name=setup,proto3" json:"setup,omitempty"`
	Test                 []*TestReport_Test        `protobuf:"bytes,19,rep,name=test,proto3" json:"test,omitempty"`
	Teardown             *TestReport_Teardown      `protobuf:"bytes,20,opt,name=teardown,proto3" json:"teardown,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *TestReport) Reset()         { *m = TestReport{} }
func (m *TestReport) String() string { return proto.CompactTextString(m) }
func (*TestReport) ProtoMessage()    {}
func (*TestReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113}
}

func (m *TestReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport.Unmarshal(m, b)
}
func (m *TestReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport.Marshal(b, m, deterministic)
}
func (m *TestReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport.Merge(m, src)
}
func (m *TestReport) XXX_Size() int {
	return xxx_messageInfo_TestReport.Size(m)
}
func (m *TestReport) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport proto.InternalMessageInfo

func (m *TestReport) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *TestReport) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *TestReport) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *TestReport) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *TestReport) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *TestReport) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *TestReport) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TestReport) GetStatus() *TestReportStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *TestReport) GetTestScript() *Reference {
	if m != nil {
		return m.TestScript
	}
	return nil
}

func (m *TestReport) GetResult() *TestReportResultCode {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *TestReport) GetScore() *Decimal {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *TestReport) GetTester() *String {
	if m != nil {
		return m.Tester
	}
	return nil
}

func (m *TestReport) GetIssued() *DateTime {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *TestReport) GetParticipant() []*TestReport_Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *TestReport) GetSetup() *TestReport_Setup {
	if m != nil {
		return m.Setup
	}
	return nil
}

func (m *TestReport) GetTest() []*TestReport_Test {
	if m != nil {
		return m.Test
	}
	return nil
}

func (m *TestReport) GetTeardown() *TestReport_Teardown {
	if m != nil {
		return m.Teardown
	}
	return nil
}

// A participant in the test execution, either the execution engine, a client,
// or a server
type TestReport_Participant struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// test-engine | client | server
	Type *TestReportParticipantTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// The uri of the participant. An absolute URL is preferred
	Uri *Uri `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// The display name of the participant
	Display              *String  `protobuf:"bytes,6,opt,name=display,proto3" json:"display,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestReport_Participant) Reset()         { *m = TestReport_Participant{} }
func (m *TestReport_Participant) String() string { return proto.CompactTextString(m) }
func (*TestReport_Participant) ProtoMessage()    {}
func (*TestReport_Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113, 0}
}

func (m *TestReport_Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport_Participant.Unmarshal(m, b)
}
func (m *TestReport_Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport_Participant.Marshal(b, m, deterministic)
}
func (m *TestReport_Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport_Participant.Merge(m, src)
}
func (m *TestReport_Participant) XXX_Size() int {
	return xxx_messageInfo_TestReport_Participant.Size(m)
}
func (m *TestReport_Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport_Participant proto.InternalMessageInfo

func (m *TestReport_Participant) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport_Participant) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport_Participant) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport_Participant) GetType() *TestReportParticipantTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *TestReport_Participant) GetUri() *Uri {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *TestReport_Participant) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

// The results of the series of required setup operations before the tests
// were executed
type TestReport_Setup struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                    `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Action               []*TestReport_Setup_SetupAction `protobuf:"bytes,4,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *TestReport_Setup) Reset()         { *m = TestReport_Setup{} }
func (m *TestReport_Setup) String() string { return proto.CompactTextString(m) }
func (*TestReport_Setup) ProtoMessage()    {}
func (*TestReport_Setup) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113, 1}
}

func (m *TestReport_Setup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport_Setup.Unmarshal(m, b)
}
func (m *TestReport_Setup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport_Setup.Marshal(b, m, deterministic)
}
func (m *TestReport_Setup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport_Setup.Merge(m, src)
}
func (m *TestReport_Setup) XXX_Size() int {
	return xxx_messageInfo_TestReport_Setup.Size(m)
}
func (m *TestReport_Setup) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport_Setup.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport_Setup proto.InternalMessageInfo

func (m *TestReport_Setup) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport_Setup) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport_Setup) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport_Setup) GetAction() []*TestReport_Setup_SetupAction {
	if m != nil {
		return m.Action
	}
	return nil
}

// A setup operation or assert that was executed
type TestReport_Setup_SetupAction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                            `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Operation            *TestReport_Setup_SetupAction_Operation `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	AssertValue          *TestReport_Setup_SetupAction_Assert    `protobuf:"bytes,5,opt,name=assert_value,json=assert,proto3" json:"assert_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *TestReport_Setup_SetupAction) Reset()         { *m = TestReport_Setup_SetupAction{} }
func (m *TestReport_Setup_SetupAction) String() string { return proto.CompactTextString(m) }
func (*TestReport_Setup_SetupAction) ProtoMessage()    {}
func (*TestReport_Setup_SetupAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113, 1, 0}
}

func (m *TestReport_Setup_SetupAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport_Setup_SetupAction.Unmarshal(m, b)
}
func (m *TestReport_Setup_SetupAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport_Setup_SetupAction.Marshal(b, m, deterministic)
}
func (m *TestReport_Setup_SetupAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport_Setup_SetupAction.Merge(m, src)
}
func (m *TestReport_Setup_SetupAction) XXX_Size() int {
	return xxx_messageInfo_TestReport_Setup_SetupAction.Size(m)
}
func (m *TestReport_Setup_SetupAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport_Setup_SetupAction.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport_Setup_SetupAction proto.InternalMessageInfo

func (m *TestReport_Setup_SetupAction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport_Setup_SetupAction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport_Setup_SetupAction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport_Setup_SetupAction) GetOperation() *TestReport_Setup_SetupAction_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *TestReport_Setup_SetupAction) GetAssertValue() *TestReport_Setup_SetupAction_Assert {
	if m != nil {
		return m.AssertValue
	}
	return nil
}

// The operation to perform
type TestReport_Setup_SetupAction_Operation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// pass | skip | fail | warning | error
	Result *TestReportActionResultCode `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	// A message associated with the result
	Message *Markdown `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// A link to further details on the result
	Detail               *Uri     `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestReport_Setup_SetupAction_Operation) Reset() {
	*m = TestReport_Setup_SetupAction_Operation{}
}
func (m *TestReport_Setup_SetupAction_Operation) String() string { return proto.CompactTextString(m) }
func (*TestReport_Setup_SetupAction_Operation) ProtoMessage()    {}
func (*TestReport_Setup_SetupAction_Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113, 1, 0, 0}
}

func (m *TestReport_Setup_SetupAction_Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport_Setup_SetupAction_Operation.Unmarshal(m, b)
}
func (m *TestReport_Setup_SetupAction_Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport_Setup_SetupAction_Operation.Marshal(b, m, deterministic)
}
func (m *TestReport_Setup_SetupAction_Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport_Setup_SetupAction_Operation.Merge(m, src)
}
func (m *TestReport_Setup_SetupAction_Operation) XXX_Size() int {
	return xxx_messageInfo_TestReport_Setup_SetupAction_Operation.Size(m)
}
func (m *TestReport_Setup_SetupAction_Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport_Setup_SetupAction_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport_Setup_SetupAction_Operation proto.InternalMessageInfo

func (m *TestReport_Setup_SetupAction_Operation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Operation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Operation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Operation) GetResult() *TestReportActionResultCode {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Operation) GetMessage() *Markdown {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Operation) GetDetail() *Uri {
	if m != nil {
		return m.Detail
	}
	return nil
}

// The assertion to perform
type TestReport_Setup_SetupAction_Assert struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// pass | skip | fail | warning | error
	Result *TestReportActionResultCode `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	// A message associated with the result
	Message *Markdown `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// A link to further details on the result
	Detail               *String  `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestReport_Setup_SetupAction_Assert) Reset()         { *m = TestReport_Setup_SetupAction_Assert{} }
func (m *TestReport_Setup_SetupAction_Assert) String() string { return proto.CompactTextString(m) }
func (*TestReport_Setup_SetupAction_Assert) ProtoMessage()    {}
func (*TestReport_Setup_SetupAction_Assert) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113, 1, 0, 1}
}

func (m *TestReport_Setup_SetupAction_Assert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport_Setup_SetupAction_Assert.Unmarshal(m, b)
}
func (m *TestReport_Setup_SetupAction_Assert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport_Setup_SetupAction_Assert.Marshal(b, m, deterministic)
}
func (m *TestReport_Setup_SetupAction_Assert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport_Setup_SetupAction_Assert.Merge(m, src)
}
func (m *TestReport_Setup_SetupAction_Assert) XXX_Size() int {
	return xxx_messageInfo_TestReport_Setup_SetupAction_Assert.Size(m)
}
func (m *TestReport_Setup_SetupAction_Assert) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport_Setup_SetupAction_Assert.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport_Setup_SetupAction_Assert proto.InternalMessageInfo

func (m *TestReport_Setup_SetupAction_Assert) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Assert) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Assert) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Assert) GetResult() *TestReportActionResultCode {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Assert) GetMessage() *Markdown {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TestReport_Setup_SetupAction_Assert) GetDetail() *String {
	if m != nil {
		return m.Detail
	}
	return nil
}

// A test executed from the test script
type TestReport_Test struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Tracking/logging name of this test
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Tracking/reporting short description of the test
	Description          *String                       `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Action               []*TestReport_Test_TestAction `protobuf:"bytes,6,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TestReport_Test) Reset()         { *m = TestReport_Test{} }
func (m *TestReport_Test) String() string { return proto.CompactTextString(m) }
func (*TestReport_Test) ProtoMessage()    {}
func (*TestReport_Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113, 2}
}

func (m *TestReport_Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport_Test.Unmarshal(m, b)
}
func (m *TestReport_Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport_Test.Marshal(b, m, deterministic)
}
func (m *TestReport_Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport_Test.Merge(m, src)
}
func (m *TestReport_Test) XXX_Size() int {
	return xxx_messageInfo_TestReport_Test.Size(m)
}
func (m *TestReport_Test) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport_Test.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport_Test proto.InternalMessageInfo

func (m *TestReport_Test) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport_Test) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport_Test) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport_Test) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TestReport_Test) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *TestReport_Test) GetAction() []*TestReport_Test_TestAction {
	if m != nil {
		return m.Action
	}
	return nil
}

// A test operation or assert that was performed
type TestReport_Test_TestAction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The operation performed
	Operation *TestReport_Setup_SetupAction_Operation `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	// The assertion performed
	AssertValue          *TestReport_Setup_SetupAction_Assert `protobuf:"bytes,5,opt,name=assert_value,json=assert,proto3" json:"assert_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *TestReport_Test_TestAction) Reset()         { *m = TestReport_Test_TestAction{} }
func (m *TestReport_Test_TestAction) String() string { return proto.CompactTextString(m) }
func (*TestReport_Test_TestAction) ProtoMessage()    {}
func (*TestReport_Test_TestAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113, 2, 0}
}

func (m *TestReport_Test_TestAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport_Test_TestAction.Unmarshal(m, b)
}
func (m *TestReport_Test_TestAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport_Test_TestAction.Marshal(b, m, deterministic)
}
func (m *TestReport_Test_TestAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport_Test_TestAction.Merge(m, src)
}
func (m *TestReport_Test_TestAction) XXX_Size() int {
	return xxx_messageInfo_TestReport_Test_TestAction.Size(m)
}
func (m *TestReport_Test_TestAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport_Test_TestAction.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport_Test_TestAction proto.InternalMessageInfo

func (m *TestReport_Test_TestAction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport_Test_TestAction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport_Test_TestAction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport_Test_TestAction) GetOperation() *TestReport_Setup_SetupAction_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *TestReport_Test_TestAction) GetAssertValue() *TestReport_Setup_SetupAction_Assert {
	if m != nil {
		return m.AssertValue
	}
	return nil
}

// The results of running the series of required clean up steps
type TestReport_Teardown struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                          `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Action               []*TestReport_Teardown_TeardownAction `protobuf:"bytes,4,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *TestReport_Teardown) Reset()         { *m = TestReport_Teardown{} }
func (m *TestReport_Teardown) String() string { return proto.CompactTextString(m) }
func (*TestReport_Teardown) ProtoMessage()    {}
func (*TestReport_Teardown) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113, 3}
}

func (m *TestReport_Teardown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport_Teardown.Unmarshal(m, b)
}
func (m *TestReport_Teardown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport_Teardown.Marshal(b, m, deterministic)
}
func (m *TestReport_Teardown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport_Teardown.Merge(m, src)
}
func (m *TestReport_Teardown) XXX_Size() int {
	return xxx_messageInfo_TestReport_Teardown.Size(m)
}
func (m *TestReport_Teardown) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport_Teardown.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport_Teardown proto.InternalMessageInfo

func (m *TestReport_Teardown) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport_Teardown) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport_Teardown) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport_Teardown) GetAction() []*TestReport_Teardown_TeardownAction {
	if m != nil {
		return m.Action
	}
	return nil
}

// One or more teardown operations performed
type TestReport_Teardown_TeardownAction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The teardown operation performed
	Operation            *TestReport_Setup_SetupAction_Operation `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *TestReport_Teardown_TeardownAction) Reset()         { *m = TestReport_Teardown_TeardownAction{} }
func (m *TestReport_Teardown_TeardownAction) String() string { return proto.CompactTextString(m) }
func (*TestReport_Teardown_TeardownAction) ProtoMessage()    {}
func (*TestReport_Teardown_TeardownAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{113, 3, 0}
}

func (m *TestReport_Teardown_TeardownAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReport_Teardown_TeardownAction.Unmarshal(m, b)
}
func (m *TestReport_Teardown_TeardownAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReport_Teardown_TeardownAction.Marshal(b, m, deterministic)
}
func (m *TestReport_Teardown_TeardownAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReport_Teardown_TeardownAction.Merge(m, src)
}
func (m *TestReport_Teardown_TeardownAction) XXX_Size() int {
	return xxx_messageInfo_TestReport_Teardown_TeardownAction.Size(m)
}
func (m *TestReport_Teardown_TeardownAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReport_Teardown_TeardownAction.DiscardUnknown(m)
}

var xxx_messageInfo_TestReport_Teardown_TeardownAction proto.InternalMessageInfo

func (m *TestReport_Teardown_TeardownAction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestReport_Teardown_TeardownAction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestReport_Teardown_TeardownAction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestReport_Teardown_TeardownAction) GetOperation() *TestReport_Setup_SetupAction_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

// Auto-generated from StructureDefinition for TestScript, last updated
// 2017-04-19T07:44:43.294+10:00. Describes a set of tests. See
// http://hl7.org/fhir/StructureDefinition/TestScript
type TestScript struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this test script (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the test script
	Identifier *Identifier `protobuf:"bytes,10,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the test script
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this test script (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this test script (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the test script
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,20,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for test script (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,21,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this test script is defined
	Purpose *Markdown `protobuf:"bytes,22,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright   *Markdown                 `protobuf:"bytes,23,opt,name=copyright,proto3" json:"copyright,omitempty"`
	Origin      []*TestScript_Origin      `protobuf:"bytes,24,rep,name=origin,proto3" json:"origin,omitempty"`
	Destination []*TestScript_Destination `protobuf:"bytes,25,rep,name=destination,proto3" json:"destination,omitempty"`
	Metadata    *TestScript_Metadata      `protobuf:"bytes,26,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Fixture     []*TestScript_Fixture     `protobuf:"bytes,27,rep,name=fixture,proto3" json:"fixture,omitempty"`
	// Reference of the validation profile
	Profile              []*Reference           `protobuf:"bytes,28,rep,name=profile,proto3" json:"profile,omitempty"`
	Variable             []*TestScript_Variable `protobuf:"bytes,29,rep,name=variable,proto3" json:"variable,omitempty"`
	Rule                 []*TestScript_Rule     `protobuf:"bytes,30,rep,name=rule,proto3" json:"rule,omitempty"`
	Ruleset              []*TestScript_Ruleset  `protobuf:"bytes,31,rep,name=ruleset,proto3" json:"ruleset,omitempty"`
	Setup                *TestScript_Setup      `protobuf:"bytes,32,opt,name=setup,proto3" json:"setup,omitempty"`
	Test                 []*TestScript_Test     `protobuf:"bytes,33,rep,name=test,proto3" json:"test,omitempty"`
	Teardown             *TestScript_Teardown   `protobuf:"bytes,34,opt,name=teardown,proto3" json:"teardown,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TestScript) Reset()         { *m = TestScript{} }
func (m *TestScript) String() string { return proto.CompactTextString(m) }
func (*TestScript) ProtoMessage()    {}
func (*TestScript) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114}
}

func (m *TestScript) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript.Unmarshal(m, b)
}
func (m *TestScript) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript.Marshal(b, m, deterministic)
}
func (m *TestScript) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript.Merge(m, src)
}
func (m *TestScript) XXX_Size() int {
	return xxx_messageInfo_TestScript.Size(m)
}
func (m *TestScript) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript proto.InternalMessageInfo

func (m *TestScript) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *TestScript) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *TestScript) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *TestScript) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *TestScript) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *TestScript) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *TestScript) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *TestScript) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *TestScript) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TestScript) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *TestScript) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *TestScript) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *TestScript) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *TestScript) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *TestScript) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *TestScript) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *TestScript) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *TestScript) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *TestScript) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *TestScript) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *TestScript) GetOrigin() []*TestScript_Origin {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *TestScript) GetDestination() []*TestScript_Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *TestScript) GetMetadata() *TestScript_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *TestScript) GetFixture() []*TestScript_Fixture {
	if m != nil {
		return m.Fixture
	}
	return nil
}

func (m *TestScript) GetProfile() []*Reference {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *TestScript) GetVariable() []*TestScript_Variable {
	if m != nil {
		return m.Variable
	}
	return nil
}

func (m *TestScript) GetRule() []*TestScript_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *TestScript) GetRuleset() []*TestScript_Ruleset {
	if m != nil {
		return m.Ruleset
	}
	return nil
}

func (m *TestScript) GetSetup() *TestScript_Setup {
	if m != nil {
		return m.Setup
	}
	return nil
}

func (m *TestScript) GetTest() []*TestScript_Test {
	if m != nil {
		return m.Test
	}
	return nil
}

func (m *TestScript) GetTeardown() *TestScript_Teardown {
	if m != nil {
		return m.Teardown
	}
	return nil
}

// An abstract server representing a client or sender in a message exchange
type TestScript_Origin struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The index of the abstract origin server starting at 1
	Index *Integer `protobuf:"bytes,4,opt,name=index,proto3" json:"index,omitempty"`
	// FHIR-Client | FHIR-SDC-FormFiller
	Profile              *Coding  `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Origin) Reset()         { *m = TestScript_Origin{} }
func (m *TestScript_Origin) String() string { return proto.CompactTextString(m) }
func (*TestScript_Origin) ProtoMessage()    {}
func (*TestScript_Origin) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 0}
}

func (m *TestScript_Origin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Origin.Unmarshal(m, b)
}
func (m *TestScript_Origin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Origin.Marshal(b, m, deterministic)
}
func (m *TestScript_Origin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Origin.Merge(m, src)
}
func (m *TestScript_Origin) XXX_Size() int {
	return xxx_messageInfo_TestScript_Origin.Size(m)
}
func (m *TestScript_Origin) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Origin.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Origin proto.InternalMessageInfo

func (m *TestScript_Origin) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Origin) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Origin) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Origin) GetIndex() *Integer {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *TestScript_Origin) GetProfile() *Coding {
	if m != nil {
		return m.Profile
	}
	return nil
}

// An abstract server representing a destination or receiver in a message
// exchange
type TestScript_Destination struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The index of the abstract destination server starting at 1
	Index *Integer `protobuf:"bytes,4,opt,name=index,proto3" json:"index,omitempty"`
	// FHIR-Server | FHIR-SDC-FormManager | FHIR-SDC-FormReceiver |
	// FHIR-SDC-FormProcessor
	Profile              *Coding  `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Destination) Reset()         { *m = TestScript_Destination{} }
func (m *TestScript_Destination) String() string { return proto.CompactTextString(m) }
func (*TestScript_Destination) ProtoMessage()    {}
func (*TestScript_Destination) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 1}
}

func (m *TestScript_Destination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Destination.Unmarshal(m, b)
}
func (m *TestScript_Destination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Destination.Marshal(b, m, deterministic)
}
func (m *TestScript_Destination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Destination.Merge(m, src)
}
func (m *TestScript_Destination) XXX_Size() int {
	return xxx_messageInfo_TestScript_Destination.Size(m)
}
func (m *TestScript_Destination) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Destination.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Destination proto.InternalMessageInfo

func (m *TestScript_Destination) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Destination) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Destination) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Destination) GetIndex() *Integer {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *TestScript_Destination) GetProfile() *Coding {
	if m != nil {
		return m.Profile
	}
	return nil
}

// Required capability that is assumed to function correctly on the FHIR
// server being tested
type TestScript_Metadata struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                      `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Link                 []*TestScript_Metadata_Link       `protobuf:"bytes,4,rep,name=link,proto3" json:"link,omitempty"`
	Capability           []*TestScript_Metadata_Capability `protobuf:"bytes,5,rep,name=capability,proto3" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *TestScript_Metadata) Reset()         { *m = TestScript_Metadata{} }
func (m *TestScript_Metadata) String() string { return proto.CompactTextString(m) }
func (*TestScript_Metadata) ProtoMessage()    {}
func (*TestScript_Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 2}
}

func (m *TestScript_Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Metadata.Unmarshal(m, b)
}
func (m *TestScript_Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Metadata.Marshal(b, m, deterministic)
}
func (m *TestScript_Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Metadata.Merge(m, src)
}
func (m *TestScript_Metadata) XXX_Size() int {
	return xxx_messageInfo_TestScript_Metadata.Size(m)
}
func (m *TestScript_Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Metadata proto.InternalMessageInfo

func (m *TestScript_Metadata) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Metadata) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Metadata) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Metadata) GetLink() []*TestScript_Metadata_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *TestScript_Metadata) GetCapability() []*TestScript_Metadata_Capability {
	if m != nil {
		return m.Capability
	}
	return nil
}

// Links to the FHIR specification
type TestScript_Metadata_Link struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// URL to the specification
	Url *Uri `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// Short description
	Description          *String  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Metadata_Link) Reset()         { *m = TestScript_Metadata_Link{} }
func (m *TestScript_Metadata_Link) String() string { return proto.CompactTextString(m) }
func (*TestScript_Metadata_Link) ProtoMessage()    {}
func (*TestScript_Metadata_Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 2, 0}
}

func (m *TestScript_Metadata_Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Metadata_Link.Unmarshal(m, b)
}
func (m *TestScript_Metadata_Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Metadata_Link.Marshal(b, m, deterministic)
}
func (m *TestScript_Metadata_Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Metadata_Link.Merge(m, src)
}
func (m *TestScript_Metadata_Link) XXX_Size() int {
	return xxx_messageInfo_TestScript_Metadata_Link.Size(m)
}
func (m *TestScript_Metadata_Link) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Metadata_Link.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Metadata_Link proto.InternalMessageInfo

func (m *TestScript_Metadata_Link) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Metadata_Link) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Metadata_Link) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Metadata_Link) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *TestScript_Metadata_Link) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

// Capabilities  that are assumed to function correctly on the FHIR server
// being tested
type TestScript_Metadata_Capability struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Are the capabilities required?
	Required *Boolean `protobuf:"bytes,4,opt,name=required,proto3" json:"required,omitempty"`
	// Are the capabilities validated?
	Validated *Boolean `protobuf:"bytes,5,opt,name=validated,proto3" json:"validated,omitempty"`
	// The expected capabilities of the server
	Description *String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Which origin server these requirements apply to
	Origin []*Integer `protobuf:"bytes,7,rep,name=origin,proto3" json:"origin,omitempty"`
	// Which server these requirements apply to
	Destination *Integer `protobuf:"bytes,8,opt,name=destination,proto3" json:"destination,omitempty"`
	// Links to the FHIR specification
	Link []*Uri `protobuf:"bytes,9,rep,name=link,proto3" json:"link,omitempty"`
	// Required Capability Statement
	Capabilities         *Reference `protobuf:"bytes,10,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TestScript_Metadata_Capability) Reset()         { *m = TestScript_Metadata_Capability{} }
func (m *TestScript_Metadata_Capability) String() string { return proto.CompactTextString(m) }
func (*TestScript_Metadata_Capability) ProtoMessage()    {}
func (*TestScript_Metadata_Capability) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 2, 1}
}

func (m *TestScript_Metadata_Capability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Metadata_Capability.Unmarshal(m, b)
}
func (m *TestScript_Metadata_Capability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Metadata_Capability.Marshal(b, m, deterministic)
}
func (m *TestScript_Metadata_Capability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Metadata_Capability.Merge(m, src)
}
func (m *TestScript_Metadata_Capability) XXX_Size() int {
	return xxx_messageInfo_TestScript_Metadata_Capability.Size(m)
}
func (m *TestScript_Metadata_Capability) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Metadata_Capability.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Metadata_Capability proto.InternalMessageInfo

func (m *TestScript_Metadata_Capability) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Metadata_Capability) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Metadata_Capability) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Metadata_Capability) GetRequired() *Boolean {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *TestScript_Metadata_Capability) GetValidated() *Boolean {
	if m != nil {
		return m.Validated
	}
	return nil
}

func (m *TestScript_Metadata_Capability) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *TestScript_Metadata_Capability) GetOrigin() []*Integer {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *TestScript_Metadata_Capability) GetDestination() *Integer {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *TestScript_Metadata_Capability) GetLink() []*Uri {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *TestScript_Metadata_Capability) GetCapabilities() *Reference {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

// Fixture in the test script - by reference (uri)
type TestScript_Fixture struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Whether or not to implicitly create the fixture during setup
	Autocreate *Boolean `protobuf:"bytes,4,opt,name=autocreate,proto3" json:"autocreate,omitempty"`
	// Whether or not to implicitly delete the fixture during teardown
	Autodelete *Boolean `protobuf:"bytes,5,opt,name=autodelete,proto3" json:"autodelete,omitempty"`
	// Reference of the resource
	Resource             *Reference `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TestScript_Fixture) Reset()         { *m = TestScript_Fixture{} }
func (m *TestScript_Fixture) String() string { return proto.CompactTextString(m) }
func (*TestScript_Fixture) ProtoMessage()    {}
func (*TestScript_Fixture) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 3}
}

func (m *TestScript_Fixture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Fixture.Unmarshal(m, b)
}
func (m *TestScript_Fixture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Fixture.Marshal(b, m, deterministic)
}
func (m *TestScript_Fixture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Fixture.Merge(m, src)
}
func (m *TestScript_Fixture) XXX_Size() int {
	return xxx_messageInfo_TestScript_Fixture.Size(m)
}
func (m *TestScript_Fixture) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Fixture.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Fixture proto.InternalMessageInfo

func (m *TestScript_Fixture) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Fixture) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Fixture) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Fixture) GetAutocreate() *Boolean {
	if m != nil {
		return m.Autocreate
	}
	return nil
}

func (m *TestScript_Fixture) GetAutodelete() *Boolean {
	if m != nil {
		return m.Autodelete
	}
	return nil
}

func (m *TestScript_Fixture) GetResource() *Reference {
	if m != nil {
		return m.Resource
	}
	return nil
}

// Placeholder for evaluated elements
type TestScript_Variable struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Descriptive name for this variable
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Default, hard-coded, or user-defined value for this variable
	DefaultValue *String `protobuf:"bytes,5,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Natural language description of the variable
	Description *String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// The fluentpath expression against the fixture body
	Expression *String `protobuf:"bytes,7,opt,name=expression,proto3" json:"expression,omitempty"`
	// HTTP header field name for source
	HeaderField *String `protobuf:"bytes,8,opt,name=header_field,json=headerField,proto3" json:"header_field,omitempty"`
	// Hint help text for default value to enter
	Hint *String `protobuf:"bytes,9,opt,name=hint,proto3" json:"hint,omitempty"`
	// XPath or JSONPath against the fixture body
	Path *String `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
	// Fixture Id of source expression or headerField within this variable
	SourceId             *Id      `protobuf:"bytes,11,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Variable) Reset()         { *m = TestScript_Variable{} }
func (m *TestScript_Variable) String() string { return proto.CompactTextString(m) }
func (*TestScript_Variable) ProtoMessage()    {}
func (*TestScript_Variable) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 4}
}

func (m *TestScript_Variable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Variable.Unmarshal(m, b)
}
func (m *TestScript_Variable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Variable.Marshal(b, m, deterministic)
}
func (m *TestScript_Variable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Variable.Merge(m, src)
}
func (m *TestScript_Variable) XXX_Size() int {
	return xxx_messageInfo_TestScript_Variable.Size(m)
}
func (m *TestScript_Variable) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Variable.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Variable proto.InternalMessageInfo

func (m *TestScript_Variable) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Variable) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Variable) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Variable) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TestScript_Variable) GetDefaultValue() *String {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *TestScript_Variable) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *TestScript_Variable) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

func (m *TestScript_Variable) GetHeaderField() *String {
	if m != nil {
		return m.HeaderField
	}
	return nil
}

func (m *TestScript_Variable) GetHint() *String {
	if m != nil {
		return m.Hint
	}
	return nil
}

func (m *TestScript_Variable) GetPath() *String {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *TestScript_Variable) GetSourceId() *Id {
	if m != nil {
		return m.SourceId
	}
	return nil
}

// Assert rule used within the test script
type TestScript_Rule struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Assert rule resource reference
	Resource             *Reference                   `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	Param                []*TestScript_Rule_RuleParam `protobuf:"bytes,5,rep,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TestScript_Rule) Reset()         { *m = TestScript_Rule{} }
func (m *TestScript_Rule) String() string { return proto.CompactTextString(m) }
func (*TestScript_Rule) ProtoMessage()    {}
func (*TestScript_Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 5}
}

func (m *TestScript_Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Rule.Unmarshal(m, b)
}
func (m *TestScript_Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Rule.Marshal(b, m, deterministic)
}
func (m *TestScript_Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Rule.Merge(m, src)
}
func (m *TestScript_Rule) XXX_Size() int {
	return xxx_messageInfo_TestScript_Rule.Size(m)
}
func (m *TestScript_Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Rule proto.InternalMessageInfo

func (m *TestScript_Rule) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Rule) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Rule) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Rule) GetResource() *Reference {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *TestScript_Rule) GetParam() []*TestScript_Rule_RuleParam {
	if m != nil {
		return m.Param
	}
	return nil
}

// Rule parameter template
type TestScript_Rule_RuleParam struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Parameter name matching external assert rule parameter
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Parameter value defined either explicitly or dynamically
	Value                *String  `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Rule_RuleParam) Reset()         { *m = TestScript_Rule_RuleParam{} }
func (m *TestScript_Rule_RuleParam) String() string { return proto.CompactTextString(m) }
func (*TestScript_Rule_RuleParam) ProtoMessage()    {}
func (*TestScript_Rule_RuleParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 5, 0}
}

func (m *TestScript_Rule_RuleParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Rule_RuleParam.Unmarshal(m, b)
}
func (m *TestScript_Rule_RuleParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Rule_RuleParam.Marshal(b, m, deterministic)
}
func (m *TestScript_Rule_RuleParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Rule_RuleParam.Merge(m, src)
}
func (m *TestScript_Rule_RuleParam) XXX_Size() int {
	return xxx_messageInfo_TestScript_Rule_RuleParam.Size(m)
}
func (m *TestScript_Rule_RuleParam) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Rule_RuleParam.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Rule_RuleParam proto.InternalMessageInfo

func (m *TestScript_Rule_RuleParam) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Rule_RuleParam) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Rule_RuleParam) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Rule_RuleParam) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TestScript_Rule_RuleParam) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// Assert ruleset used within the test script
type TestScript_Ruleset struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Assert ruleset resource reference
	Resource             *Reference                        `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	Rule                 []*TestScript_Ruleset_RulesetRule `protobuf:"bytes,5,rep,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *TestScript_Ruleset) Reset()         { *m = TestScript_Ruleset{} }
func (m *TestScript_Ruleset) String() string { return proto.CompactTextString(m) }
func (*TestScript_Ruleset) ProtoMessage()    {}
func (*TestScript_Ruleset) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 6}
}

func (m *TestScript_Ruleset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Ruleset.Unmarshal(m, b)
}
func (m *TestScript_Ruleset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Ruleset.Marshal(b, m, deterministic)
}
func (m *TestScript_Ruleset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Ruleset.Merge(m, src)
}
func (m *TestScript_Ruleset) XXX_Size() int {
	return xxx_messageInfo_TestScript_Ruleset.Size(m)
}
func (m *TestScript_Ruleset) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Ruleset.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Ruleset proto.InternalMessageInfo

func (m *TestScript_Ruleset) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Ruleset) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Ruleset) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Ruleset) GetResource() *Reference {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *TestScript_Ruleset) GetRule() []*TestScript_Ruleset_RulesetRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

// The referenced rule within the ruleset
type TestScript_Ruleset_RulesetRule struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Id of referenced rule within the ruleset
	RuleId               *Id                                                `protobuf:"bytes,4,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Param                []*TestScript_Ruleset_RulesetRule_RulesetRuleParam `protobuf:"bytes,5,rep,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *TestScript_Ruleset_RulesetRule) Reset()         { *m = TestScript_Ruleset_RulesetRule{} }
func (m *TestScript_Ruleset_RulesetRule) String() string { return proto.CompactTextString(m) }
func (*TestScript_Ruleset_RulesetRule) ProtoMessage()    {}
func (*TestScript_Ruleset_RulesetRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 6, 0}
}

func (m *TestScript_Ruleset_RulesetRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Ruleset_RulesetRule.Unmarshal(m, b)
}
func (m *TestScript_Ruleset_RulesetRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Ruleset_RulesetRule.Marshal(b, m, deterministic)
}
func (m *TestScript_Ruleset_RulesetRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Ruleset_RulesetRule.Merge(m, src)
}
func (m *TestScript_Ruleset_RulesetRule) XXX_Size() int {
	return xxx_messageInfo_TestScript_Ruleset_RulesetRule.Size(m)
}
func (m *TestScript_Ruleset_RulesetRule) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Ruleset_RulesetRule.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Ruleset_RulesetRule proto.InternalMessageInfo

func (m *TestScript_Ruleset_RulesetRule) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Ruleset_RulesetRule) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Ruleset_RulesetRule) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Ruleset_RulesetRule) GetRuleId() *Id {
	if m != nil {
		return m.RuleId
	}
	return nil
}

func (m *TestScript_Ruleset_RulesetRule) GetParam() []*TestScript_Ruleset_RulesetRule_RulesetRuleParam {
	if m != nil {
		return m.Param
	}
	return nil
}

// Ruleset rule parameter template
type TestScript_Ruleset_RulesetRule_RulesetRuleParam struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Parameter name matching external assert ruleset rule parameter
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Parameter value defined either explicitly or dynamically
	Value                *String  `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) Reset() {
	*m = TestScript_Ruleset_RulesetRule_RulesetRuleParam{}
}
func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) String() string {
	return proto.CompactTextString(m)
}
func (*TestScript_Ruleset_RulesetRule_RulesetRuleParam) ProtoMessage() {}
func (*TestScript_Ruleset_RulesetRule_RulesetRuleParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 6, 0, 0}
}

func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Ruleset_RulesetRule_RulesetRuleParam.Unmarshal(m, b)
}
func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Ruleset_RulesetRule_RulesetRuleParam.Marshal(b, m, deterministic)
}
func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Ruleset_RulesetRule_RulesetRuleParam.Merge(m, src)
}
func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) XXX_Size() int {
	return xxx_messageInfo_TestScript_Ruleset_RulesetRule_RulesetRuleParam.Size(m)
}
func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Ruleset_RulesetRule_RulesetRuleParam.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Ruleset_RulesetRule_RulesetRuleParam proto.InternalMessageInfo

func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TestScript_Ruleset_RulesetRule_RulesetRuleParam) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// A series of required setup operations before tests are executed
type TestScript_Setup struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                    `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Action               []*TestScript_Setup_SetupAction `protobuf:"bytes,4,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *TestScript_Setup) Reset()         { *m = TestScript_Setup{} }
func (m *TestScript_Setup) String() string { return proto.CompactTextString(m) }
func (*TestScript_Setup) ProtoMessage()    {}
func (*TestScript_Setup) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7}
}

func (m *TestScript_Setup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup.Unmarshal(m, b)
}
func (m *TestScript_Setup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup.Merge(m, src)
}
func (m *TestScript_Setup) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup.Size(m)
}
func (m *TestScript_Setup) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup proto.InternalMessageInfo

func (m *TestScript_Setup) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup) GetAction() []*TestScript_Setup_SetupAction {
	if m != nil {
		return m.Action
	}
	return nil
}

// A setup operation or assert to perform
type TestScript_Setup_SetupAction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                            `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Operation            *TestScript_Setup_SetupAction_Operation `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	AssertValue          *TestScript_Setup_SetupAction_Assert    `protobuf:"bytes,5,opt,name=assert_value,json=assert,proto3" json:"assert_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *TestScript_Setup_SetupAction) Reset()         { *m = TestScript_Setup_SetupAction{} }
func (m *TestScript_Setup_SetupAction) String() string { return proto.CompactTextString(m) }
func (*TestScript_Setup_SetupAction) ProtoMessage()    {}
func (*TestScript_Setup_SetupAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7, 0}
}

func (m *TestScript_Setup_SetupAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup_SetupAction.Unmarshal(m, b)
}
func (m *TestScript_Setup_SetupAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup_SetupAction.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup_SetupAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup_SetupAction.Merge(m, src)
}
func (m *TestScript_Setup_SetupAction) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup_SetupAction.Size(m)
}
func (m *TestScript_Setup_SetupAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup_SetupAction.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup_SetupAction proto.InternalMessageInfo

func (m *TestScript_Setup_SetupAction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup_SetupAction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction) GetOperation() *TestScript_Setup_SetupAction_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *TestScript_Setup_SetupAction) GetAssertValue() *TestScript_Setup_SetupAction_Assert {
	if m != nil {
		return m.AssertValue
	}
	return nil
}

// The setup operation to perform
type TestScript_Setup_SetupAction_Operation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The operation code type that will be executed
	Type *Coding `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource type
	Resource *FHIRDefinedTypeCode `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	// Tracking/logging operation label
	Label *String `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// Tracking/reporting operation description
	Description *String `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// xml | json | ttl | none
	Accept *ContentTypeCode `protobuf:"bytes,8,opt,name=accept,proto3" json:"accept,omitempty"`
	// xml | json | ttl | none
	ContentType *ContentTypeCode `protobuf:"bytes,9,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Server responding to the request
	Destination *Integer `protobuf:"bytes,10,opt,name=destination,proto3" json:"destination,omitempty"`
	// Whether or not to send the request url in encoded format
	EncodeRequestUrl *Boolean `protobuf:"bytes,11,opt,name=encode_request_url,json=encodeRequestUrl,proto3" json:"encode_request_url,omitempty"`
	// Server initiating the request
	Origin *Integer `protobuf:"bytes,12,opt,name=origin,proto3" json:"origin,omitempty"`
	// Explicitly defined path parameters
	Params        *String                                                 `protobuf:"bytes,13,opt,name=params,proto3" json:"params,omitempty"`
	RequestHeader []*TestScript_Setup_SetupAction_Operation_RequestHeader `protobuf:"bytes,14,rep,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// Fixture Id of mapped request
	RequestId *Id `protobuf:"bytes,15,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Fixture Id of mapped response
	ResponseId *Id `protobuf:"bytes,16,opt,name=response_id,json=responseId,proto3" json:"response_id,omitempty"`
	// Fixture Id of body for PUT and POST requests
	SourceId *Id `protobuf:"bytes,17,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	// Id of fixture used for extracting the [id],  [type], and [vid] for
	// GET requests
	TargetId *Id `protobuf:"bytes,18,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	// Request URL
	Url                  *String  `protobuf:"bytes,19,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Setup_SetupAction_Operation) Reset() {
	*m = TestScript_Setup_SetupAction_Operation{}
}
func (m *TestScript_Setup_SetupAction_Operation) String() string { return proto.CompactTextString(m) }
func (*TestScript_Setup_SetupAction_Operation) ProtoMessage()    {}
func (*TestScript_Setup_SetupAction_Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7, 0, 0}
}

func (m *TestScript_Setup_SetupAction_Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Operation.Unmarshal(m, b)
}
func (m *TestScript_Setup_SetupAction_Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Operation.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup_SetupAction_Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup_SetupAction_Operation.Merge(m, src)
}
func (m *TestScript_Setup_SetupAction_Operation) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Operation.Size(m)
}
func (m *TestScript_Setup_SetupAction_Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup_SetupAction_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup_SetupAction_Operation proto.InternalMessageInfo

func (m *TestScript_Setup_SetupAction_Operation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetType() *Coding {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetResource() *FHIRDefinedTypeCode {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetLabel() *String {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetAccept() *ContentTypeCode {
	if m != nil {
		return m.Accept
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetContentType() *ContentTypeCode {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetDestination() *Integer {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetEncodeRequestUrl() *Boolean {
	if m != nil {
		return m.EncodeRequestUrl
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetOrigin() *Integer {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetParams() *String {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetRequestHeader() []*TestScript_Setup_SetupAction_Operation_RequestHeader {
	if m != nil {
		return m.RequestHeader
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetRequestId() *Id {
	if m != nil {
		return m.RequestId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetResponseId() *Id {
	if m != nil {
		return m.ResponseId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetSourceId() *Id {
	if m != nil {
		return m.SourceId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetTargetId() *Id {
	if m != nil {
		return m.TargetId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation) GetUrl() *String {
	if m != nil {
		return m.Url
	}
	return nil
}

// Each operation can have one or more header elements
type TestScript_Setup_SetupAction_Operation_RequestHeader struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// HTTP header field name
	Field *String `protobuf:"bytes,4,opt,name=field,proto3" json:"field,omitempty"`
	// HTTP headerfield value
	Value                *String  `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) Reset() {
	*m = TestScript_Setup_SetupAction_Operation_RequestHeader{}
}
func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) String() string {
	return proto.CompactTextString(m)
}
func (*TestScript_Setup_SetupAction_Operation_RequestHeader) ProtoMessage() {}
func (*TestScript_Setup_SetupAction_Operation_RequestHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7, 0, 0, 0}
}

func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Operation_RequestHeader.Unmarshal(m, b)
}
func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Operation_RequestHeader.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup_SetupAction_Operation_RequestHeader.Merge(m, src)
}
func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Operation_RequestHeader.Size(m)
}
func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup_SetupAction_Operation_RequestHeader.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup_SetupAction_Operation_RequestHeader proto.InternalMessageInfo

func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) GetField() *String {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Operation_RequestHeader) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// The assertion to perform
type TestScript_Setup_SetupAction_Assert struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Tracking/logging assertion label
	Label *String `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// Tracking/reporting assertion description
	Description *String `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// response | request
	Direction *AssertionDirectionTypeCode `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	// Id of the source fixture to be evaluated
	CompareToSourceId *String `protobuf:"bytes,7,opt,name=compare_to_source_id,json=compareToSourceId,proto3" json:"compare_to_source_id,omitempty"`
	// The fluentpath expression to evaluate against the source fixture
	CompareToSourceExpression *String `protobuf:"bytes,8,opt,name=compare_to_source_expression,json=compareToSourceExpression,proto3" json:"compare_to_source_expression,omitempty"`
	// XPath or JSONPath expression to evaluate against the source fixture
	CompareToSourcePath *String `protobuf:"bytes,9,opt,name=compare_to_source_path,json=compareToSourcePath,proto3" json:"compare_to_source_path,omitempty"`
	// xml | json | ttl | none
	ContentType *ContentTypeCode `protobuf:"bytes,10,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// The fluentpath expression to be evaluated
	Expression *String `protobuf:"bytes,11,opt,name=expression,proto3" json:"expression,omitempty"`
	// HTTP header field name
	HeaderField *String `protobuf:"bytes,12,opt,name=header_field,json=headerField,proto3" json:"header_field,omitempty"`
	// Fixture Id of minimum content resource
	MinimumId *String `protobuf:"bytes,13,opt,name=minimum_id,json=minimumId,proto3" json:"minimum_id,omitempty"`
	// Perform validation on navigation links?
	NavigationLinks *Boolean `protobuf:"bytes,14,opt,name=navigation_links,json=navigationLinks,proto3" json:"navigation_links,omitempty"`
	// equals | notEquals | in | notIn | greaterThan | lessThan | empty |
	// notEmpty | contains | notContains | eval
	Operator *AssertionOperatorTypeCode `protobuf:"bytes,15,opt,name=operator,proto3" json:"operator,omitempty"`
	// XPath or JSONPath expression
	Path *String `protobuf:"bytes,16,opt,name=path,proto3" json:"path,omitempty"`
	// delete | get | options | patch | post | put
	RequestMethod *TestScriptRequestMethodCodeCode `protobuf:"bytes,17,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`
	// Request URL comparison value
	RequestURL *String `protobuf:"bytes,18,opt,name=request_u_r_l,json=requestURL,proto3" json:"request_u_r_l,omitempty"`
	// Resource type
	Resource *FHIRDefinedTypeCode `protobuf:"bytes,19,opt,name=resource,proto3" json:"resource,omitempty"`
	// okay | created | noContent | notModified | bad | forbidden | notFound
	// | methodNotAllowed | conflict | gone | preconditionFailed |
	// unprocessable
	Response *AssertionResponseTypesCode `protobuf:"bytes,20,opt,name=response,proto3" json:"response,omitempty"`
	// HTTP response code to test
	ResponseCode *String                                                  `protobuf:"bytes,21,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	Rule         *TestScript_Setup_SetupAction_Assert_ActionAssertRule    `protobuf:"bytes,22,opt,name=rule,proto3" json:"rule,omitempty"`
	Ruleset      *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset `protobuf:"bytes,23,opt,name=ruleset,proto3" json:"ruleset,omitempty"`
	// Fixture Id of source expression or headerField
	SourceId *Id `protobuf:"bytes,24,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	// Profile Id of validation profile reference
	ValidateProfileId *Id `protobuf:"bytes,25,opt,name=validate_profile_id,json=validateProfileId,proto3" json:"validate_profile_id,omitempty"`
	// The value to compare to
	Value *String `protobuf:"bytes,26,opt,name=value,proto3" json:"value,omitempty"`
	// Will this assert produce a warning only on error?
	WarningOnly          *Boolean `protobuf:"bytes,27,opt,name=warning_only,json=warningOnly,proto3" json:"warning_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Setup_SetupAction_Assert) Reset()         { *m = TestScript_Setup_SetupAction_Assert{} }
func (m *TestScript_Setup_SetupAction_Assert) String() string { return proto.CompactTextString(m) }
func (*TestScript_Setup_SetupAction_Assert) ProtoMessage()    {}
func (*TestScript_Setup_SetupAction_Assert) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7, 0, 1}
}

func (m *TestScript_Setup_SetupAction_Assert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert.Unmarshal(m, b)
}
func (m *TestScript_Setup_SetupAction_Assert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup_SetupAction_Assert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert.Merge(m, src)
}
func (m *TestScript_Setup_SetupAction_Assert) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert.Size(m)
}
func (m *TestScript_Setup_SetupAction_Assert) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup_SetupAction_Assert proto.InternalMessageInfo

func (m *TestScript_Setup_SetupAction_Assert) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetLabel() *String {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetDirection() *AssertionDirectionTypeCode {
	if m != nil {
		return m.Direction
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetCompareToSourceId() *String {
	if m != nil {
		return m.CompareToSourceId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetCompareToSourceExpression() *String {
	if m != nil {
		return m.CompareToSourceExpression
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetCompareToSourcePath() *String {
	if m != nil {
		return m.CompareToSourcePath
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetContentType() *ContentTypeCode {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetHeaderField() *String {
	if m != nil {
		return m.HeaderField
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetMinimumId() *String {
	if m != nil {
		return m.MinimumId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetNavigationLinks() *Boolean {
	if m != nil {
		return m.NavigationLinks
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetOperator() *AssertionOperatorTypeCode {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetPath() *String {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetRequestMethod() *TestScriptRequestMethodCodeCode {
	if m != nil {
		return m.RequestMethod
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetRequestURL() *String {
	if m != nil {
		return m.RequestURL
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetResource() *FHIRDefinedTypeCode {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetResponse() *AssertionResponseTypesCode {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetResponseCode() *String {
	if m != nil {
		return m.ResponseCode
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetRule() *TestScript_Setup_SetupAction_Assert_ActionAssertRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetRuleset() *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset {
	if m != nil {
		return m.Ruleset
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetSourceId() *Id {
	if m != nil {
		return m.SourceId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetValidateProfileId() *Id {
	if m != nil {
		return m.ValidateProfileId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert) GetWarningOnly() *Boolean {
	if m != nil {
		return m.WarningOnly
	}
	return nil
}

// The reference to a TestScript.rule
type TestScript_Setup_SetupAction_Assert_ActionAssertRule struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Id of the TestScript.rule
	RuleId               *Id                                                                           `protobuf:"bytes,4,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Param                []*TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam `protobuf:"bytes,5,rep,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                        `json:"-"`
	XXX_sizecache        int32                                                                         `json:"-"`
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) Reset() {
	*m = TestScript_Setup_SetupAction_Assert_ActionAssertRule{}
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) String() string {
	return proto.CompactTextString(m)
}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRule) ProtoMessage() {}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7, 0, 1, 0}
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule.Unmarshal(m, b)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule.Merge(m, src)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule.Size(m)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule proto.InternalMessageInfo

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) GetRuleId() *Id {
	if m != nil {
		return m.RuleId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule) GetParam() []*TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam {
	if m != nil {
		return m.Param
	}
	return nil
}

// Rule parameter template
type TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Parameter name matching external assert rule parameter
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Parameter value defined either explicitly or dynamically
	Value                *String  `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) Reset() {
	*m = TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam{}
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) String() string {
	return proto.CompactTextString(m)
}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) ProtoMessage() {}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7, 0, 1, 0, 0}
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam.Unmarshal(m, b)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam.Merge(m, src)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam.Size(m)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam proto.InternalMessageInfo

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// The reference to a TestScript.ruleset
type TestScript_Setup_SetupAction_Assert_ActionAssertRuleset struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Id of the TestScript.ruleset
	RulesetId            *Id                                                                                `protobuf:"bytes,4,opt,name=ruleset_id,json=rulesetId,proto3" json:"ruleset_id,omitempty"`
	Rule                 []*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule `protobuf:"bytes,5,rep,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                             `json:"-"`
	XXX_sizecache        int32                                                                              `json:"-"`
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) Reset() {
	*m = TestScript_Setup_SetupAction_Assert_ActionAssertRuleset{}
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) String() string {
	return proto.CompactTextString(m)
}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) ProtoMessage() {}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7, 0, 1, 1}
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset.Unmarshal(m, b)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset.Merge(m, src)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset.Size(m)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset proto.InternalMessageInfo

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) GetRulesetId() *Id {
	if m != nil {
		return m.RulesetId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset) GetRule() []*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

// The referenced rule within the ruleset
type TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Id of referenced rule within the ruleset
	RuleId               *Id                                                                                      `protobuf:"bytes,4,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Param                []*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param `protobuf:"bytes,5,rep,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                    `json:"-"`
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) Reset() {
	*m = TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule{}
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) String() string {
	return proto.CompactTextString(m)
}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) ProtoMessage() {
}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7, 0, 1, 1, 0}
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule.Unmarshal(m, b)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule.Merge(m, src)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule.Size(m)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule proto.InternalMessageInfo

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) GetRuleId() *Id {
	if m != nil {
		return m.RuleId
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule) GetParam() []*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

// Rule parameter template
type TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Parameter name matching external assert ruleset rule parameter
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Parameter value defined either explicitly or dynamically
	Value                *String  `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) Reset() {
	*m = TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param{}
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) String() string {
	return proto.CompactTextString(m)
}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) ProtoMessage() {
}
func (*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 7, 0, 1, 1, 0, 0}
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param.Unmarshal(m, b)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param.Marshal(b, m, deterministic)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param.Merge(m, src)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) XXX_Size() int {
	return xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param.Size(m)
}
func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param proto.InternalMessageInfo

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// A test in this script
type TestScript_Test struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Tracking/logging name of this test
	Name *String `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Tracking/reporting short description of the test
	Description          *String                       `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Action               []*TestScript_Test_TestAction `protobuf:"bytes,6,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TestScript_Test) Reset()         { *m = TestScript_Test{} }
func (m *TestScript_Test) String() string { return proto.CompactTextString(m) }
func (*TestScript_Test) ProtoMessage()    {}
func (*TestScript_Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 8}
}

func (m *TestScript_Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Test.Unmarshal(m, b)
}
func (m *TestScript_Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Test.Marshal(b, m, deterministic)
}
func (m *TestScript_Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Test.Merge(m, src)
}
func (m *TestScript_Test) XXX_Size() int {
	return xxx_messageInfo_TestScript_Test.Size(m)
}
func (m *TestScript_Test) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Test.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Test proto.InternalMessageInfo

func (m *TestScript_Test) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Test) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Test) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Test) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TestScript_Test) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *TestScript_Test) GetAction() []*TestScript_Test_TestAction {
	if m != nil {
		return m.Action
	}
	return nil
}

// A test operation or assert to perform
type TestScript_Test_TestAction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The setup operation to perform
	Operation *TestScript_Setup_SetupAction_Operation `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	// The setup assertion to perform
	AssertValue          *TestScript_Setup_SetupAction_Assert `protobuf:"bytes,5,opt,name=assert_value,json=assert,proto3" json:"assert_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *TestScript_Test_TestAction) Reset()         { *m = TestScript_Test_TestAction{} }
func (m *TestScript_Test_TestAction) String() string { return proto.CompactTextString(m) }
func (*TestScript_Test_TestAction) ProtoMessage()    {}
func (*TestScript_Test_TestAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 8, 0}
}

func (m *TestScript_Test_TestAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Test_TestAction.Unmarshal(m, b)
}
func (m *TestScript_Test_TestAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Test_TestAction.Marshal(b, m, deterministic)
}
func (m *TestScript_Test_TestAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Test_TestAction.Merge(m, src)
}
func (m *TestScript_Test_TestAction) XXX_Size() int {
	return xxx_messageInfo_TestScript_Test_TestAction.Size(m)
}
func (m *TestScript_Test_TestAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Test_TestAction.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Test_TestAction proto.InternalMessageInfo

func (m *TestScript_Test_TestAction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Test_TestAction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Test_TestAction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Test_TestAction) GetOperation() *TestScript_Setup_SetupAction_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *TestScript_Test_TestAction) GetAssertValue() *TestScript_Setup_SetupAction_Assert {
	if m != nil {
		return m.AssertValue
	}
	return nil
}

// A series of required clean up steps
type TestScript_Teardown struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension    []*Extension                          `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Action               []*TestScript_Teardown_TeardownAction `protobuf:"bytes,4,rep,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *TestScript_Teardown) Reset()         { *m = TestScript_Teardown{} }
func (m *TestScript_Teardown) String() string { return proto.CompactTextString(m) }
func (*TestScript_Teardown) ProtoMessage()    {}
func (*TestScript_Teardown) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 9}
}

func (m *TestScript_Teardown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Teardown.Unmarshal(m, b)
}
func (m *TestScript_Teardown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Teardown.Marshal(b, m, deterministic)
}
func (m *TestScript_Teardown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Teardown.Merge(m, src)
}
func (m *TestScript_Teardown) XXX_Size() int {
	return xxx_messageInfo_TestScript_Teardown.Size(m)
}
func (m *TestScript_Teardown) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Teardown.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Teardown proto.InternalMessageInfo

func (m *TestScript_Teardown) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Teardown) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Teardown) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Teardown) GetAction() []*TestScript_Teardown_TeardownAction {
	if m != nil {
		return m.Action
	}
	return nil
}

// One or more teardown operations to perform
type TestScript_Teardown_TeardownAction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The teardown operation to perform
	Operation            *TestScript_Setup_SetupAction_Operation `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *TestScript_Teardown_TeardownAction) Reset()         { *m = TestScript_Teardown_TeardownAction{} }
func (m *TestScript_Teardown_TeardownAction) String() string { return proto.CompactTextString(m) }
func (*TestScript_Teardown_TeardownAction) ProtoMessage()    {}
func (*TestScript_Teardown_TeardownAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{114, 9, 0}
}

func (m *TestScript_Teardown_TeardownAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestScript_Teardown_TeardownAction.Unmarshal(m, b)
}
func (m *TestScript_Teardown_TeardownAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestScript_Teardown_TeardownAction.Marshal(b, m, deterministic)
}
func (m *TestScript_Teardown_TeardownAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestScript_Teardown_TeardownAction.Merge(m, src)
}
func (m *TestScript_Teardown_TeardownAction) XXX_Size() int {
	return xxx_messageInfo_TestScript_Teardown_TeardownAction.Size(m)
}
func (m *TestScript_Teardown_TeardownAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TestScript_Teardown_TeardownAction.DiscardUnknown(m)
}

var xxx_messageInfo_TestScript_Teardown_TeardownAction proto.InternalMessageInfo

func (m *TestScript_Teardown_TeardownAction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TestScript_Teardown_TeardownAction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *TestScript_Teardown_TeardownAction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *TestScript_Teardown_TeardownAction) GetOperation() *TestScript_Setup_SetupAction_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

// Auto-generated from StructureDefinition for ValueSet, last updated
// 2017-04-19T07:44:43.294+10:00. A set of codes drawn from one or more code
// systems. See http://hl7.org/fhir/StructureDefinition/ValueSet
type ValueSet struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this value set (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the value set
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the value set
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this value set (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this value set (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the value set
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,20,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for value set (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,21,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Indicates whether or not any change to the content logical definition may
	// occur
	Immutable *Boolean `protobuf:"bytes,22,opt,name=immutable,proto3" json:"immutable,omitempty"`
	// Why this value set is defined
	Purpose *Markdown `protobuf:"bytes,23,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,24,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Whether this is intended to be used with an extensible binding
	Extensible           *Boolean            `protobuf:"bytes,25,opt,name=extensible,proto3" json:"extensible,omitempty"`
	Compose              *ValueSet_Compose   `protobuf:"bytes,26,opt,name=compose,proto3" json:"compose,omitempty"`
	Expansion            *ValueSet_Expansion `protobuf:"bytes,27,opt,name=expansion,proto3" json:"expansion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ValueSet) Reset()         { *m = ValueSet{} }
func (m *ValueSet) String() string { return proto.CompactTextString(m) }
func (*ValueSet) ProtoMessage()    {}
func (*ValueSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115}
}

func (m *ValueSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet.Unmarshal(m, b)
}
func (m *ValueSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet.Marshal(b, m, deterministic)
}
func (m *ValueSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet.Merge(m, src)
}
func (m *ValueSet) XXX_Size() int {
	return xxx_messageInfo_ValueSet.Size(m)
}
func (m *ValueSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet proto.InternalMessageInfo

func (m *ValueSet) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ValueSet) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ValueSet) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ValueSet) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ValueSet) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ValueSet) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ValueSet) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ValueSet) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ValueSet) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *ValueSet) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ValueSet) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ValueSet) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ValueSet) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *ValueSet) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ValueSet) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *ValueSet) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ValueSet) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *ValueSet) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *ValueSet) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ValueSet) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *ValueSet) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *ValueSet) GetImmutable() *Boolean {
	if m != nil {
		return m.Immutable
	}
	return nil
}

func (m *ValueSet) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *ValueSet) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *ValueSet) GetExtensible() *Boolean {
	if m != nil {
		return m.Extensible
	}
	return nil
}

func (m *ValueSet) GetCompose() *ValueSet_Compose {
	if m != nil {
		return m.Compose
	}
	return nil
}

func (m *ValueSet) GetExpansion() *ValueSet_Expansion {
	if m != nil {
		return m.Expansion
	}
	return nil
}

// Definition of the content of the value set (CLD)
type ValueSet_Compose struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Fixed date for version-less references (transitive)
	LockedDate *Date `protobuf:"bytes,4,opt,name=locked_date,json=lockedDate,proto3" json:"locked_date,omitempty"`
	// Whether inactive codes are in the value set
	Inactive *Boolean                       `protobuf:"bytes,5,opt,name=inactive,proto3" json:"inactive,omitempty"`
	Include  []*ValueSet_Compose_ConceptSet `protobuf:"bytes,6,rep,name=include,proto3" json:"include,omitempty"`
	// Explicitly exclude codes from a code system or other value sets
	Exclude              []*ValueSet_Compose_ConceptSet `protobuf:"bytes,7,rep,name=exclude,proto3" json:"exclude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ValueSet_Compose) Reset()         { *m = ValueSet_Compose{} }
func (m *ValueSet_Compose) String() string { return proto.CompactTextString(m) }
func (*ValueSet_Compose) ProtoMessage()    {}
func (*ValueSet_Compose) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115, 0}
}

func (m *ValueSet_Compose) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet_Compose.Unmarshal(m, b)
}
func (m *ValueSet_Compose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet_Compose.Marshal(b, m, deterministic)
}
func (m *ValueSet_Compose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet_Compose.Merge(m, src)
}
func (m *ValueSet_Compose) XXX_Size() int {
	return xxx_messageInfo_ValueSet_Compose.Size(m)
}
func (m *ValueSet_Compose) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet_Compose.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet_Compose proto.InternalMessageInfo

func (m *ValueSet_Compose) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ValueSet_Compose) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ValueSet_Compose) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ValueSet_Compose) GetLockedDate() *Date {
	if m != nil {
		return m.LockedDate
	}
	return nil
}

func (m *ValueSet_Compose) GetInactive() *Boolean {
	if m != nil {
		return m.Inactive
	}
	return nil
}

func (m *ValueSet_Compose) GetInclude() []*ValueSet_Compose_ConceptSet {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *ValueSet_Compose) GetExclude() []*ValueSet_Compose_ConceptSet {
	if m != nil {
		return m.Exclude
	}
	return nil
}

// Include one or more codes from a code system or other value set(s)
type ValueSet_Compose_ConceptSet struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The system the codes come from
	System *Uri `protobuf:"bytes,4,opt,name=system,proto3" json:"system,omitempty"`
	// Specific version of the code system referred to
	Version *String                                         `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Concept []*ValueSet_Compose_ConceptSet_ConceptReference `protobuf:"bytes,6,rep,name=concept,proto3" json:"concept,omitempty"`
	Filter  []*ValueSet_Compose_ConceptSet_Filter           `protobuf:"bytes,7,rep,name=filter,proto3" json:"filter,omitempty"`
	// Select only contents included in this value set
	ValueSet             []*Uri   `protobuf:"bytes,8,rep,name=value_set,json=valueSet,proto3" json:"value_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueSet_Compose_ConceptSet) Reset()         { *m = ValueSet_Compose_ConceptSet{} }
func (m *ValueSet_Compose_ConceptSet) String() string { return proto.CompactTextString(m) }
func (*ValueSet_Compose_ConceptSet) ProtoMessage()    {}
func (*ValueSet_Compose_ConceptSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115, 0, 0}
}

func (m *ValueSet_Compose_ConceptSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet.Unmarshal(m, b)
}
func (m *ValueSet_Compose_ConceptSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet.Marshal(b, m, deterministic)
}
func (m *ValueSet_Compose_ConceptSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet_Compose_ConceptSet.Merge(m, src)
}
func (m *ValueSet_Compose_ConceptSet) XXX_Size() int {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet.Size(m)
}
func (m *ValueSet_Compose_ConceptSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet_Compose_ConceptSet.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet_Compose_ConceptSet proto.InternalMessageInfo

func (m *ValueSet_Compose_ConceptSet) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet) GetSystem() *Uri {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet) GetConcept() []*ValueSet_Compose_ConceptSet_ConceptReference {
	if m != nil {
		return m.Concept
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet) GetFilter() []*ValueSet_Compose_ConceptSet_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet) GetValueSet() []*Uri {
	if m != nil {
		return m.ValueSet
	}
	return nil
}

// A concept defined in the system
type ValueSet_Compose_ConceptSet_ConceptReference struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code or expression from system
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Text to display for this code for this value set in this valueset
	Display              *String                                                     `protobuf:"bytes,5,opt,name=display,proto3" json:"display,omitempty"`
	Designation          []*ValueSet_Compose_ConceptSet_ConceptReference_Designation `protobuf:"bytes,6,rep,name=designation,proto3" json:"designation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                    `json:"-"`
	XXX_unrecognized     []byte                                                      `json:"-"`
	XXX_sizecache        int32                                                       `json:"-"`
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference) Reset() {
	*m = ValueSet_Compose_ConceptSet_ConceptReference{}
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference) String() string {
	return proto.CompactTextString(m)
}
func (*ValueSet_Compose_ConceptSet_ConceptReference) ProtoMessage() {}
func (*ValueSet_Compose_ConceptSet_ConceptReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115, 0, 0, 0}
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference.Unmarshal(m, b)
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference.Marshal(b, m, deterministic)
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference.Merge(m, src)
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference) XXX_Size() int {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference.Size(m)
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference proto.InternalMessageInfo

func (m *ValueSet_Compose_ConceptSet_ConceptReference) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference) GetDesignation() []*ValueSet_Compose_ConceptSet_ConceptReference_Designation {
	if m != nil {
		return m.Designation
	}
	return nil
}

// Additional representations for this concept
type ValueSet_Compose_ConceptSet_ConceptReference_Designation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Human language of the designation
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Details how this designation would be used
	Use *Coding `protobuf:"bytes,5,opt,name=use,proto3" json:"use,omitempty"`
	// The text value for this designation
	Value                *String  `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) Reset() {
	*m = ValueSet_Compose_ConceptSet_ConceptReference_Designation{}
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) String() string {
	return proto.CompactTextString(m)
}
func (*ValueSet_Compose_ConceptSet_ConceptReference_Designation) ProtoMessage() {}
func (*ValueSet_Compose_ConceptSet_ConceptReference_Designation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115, 0, 0, 0, 0}
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference_Designation.Unmarshal(m, b)
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference_Designation.Marshal(b, m, deterministic)
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference_Designation.Merge(m, src)
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) XXX_Size() int {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference_Designation.Size(m)
}
func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference_Designation.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet_Compose_ConceptSet_ConceptReference_Designation proto.InternalMessageInfo

func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) GetUse() *Coding {
	if m != nil {
		return m.Use
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_ConceptReference_Designation) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// Select codes/concepts by their properties (including relationships)
type ValueSet_Compose_ConceptSet_Filter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A property defined by the code system
	Property *Code `protobuf:"bytes,4,opt,name=property,proto3" json:"property,omitempty"`
	// = | is-a | descendent-of | is-not-a | regex | in | not-in |
	// generalizes | exists
	Op *FilterOperatorCode `protobuf:"bytes,5,opt,name=op,proto3" json:"op,omitempty"`
	// Code from the system, or regex criteria, or boolean value for exists
	Value                *Code    `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueSet_Compose_ConceptSet_Filter) Reset()         { *m = ValueSet_Compose_ConceptSet_Filter{} }
func (m *ValueSet_Compose_ConceptSet_Filter) String() string { return proto.CompactTextString(m) }
func (*ValueSet_Compose_ConceptSet_Filter) ProtoMessage()    {}
func (*ValueSet_Compose_ConceptSet_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115, 0, 0, 1}
}

func (m *ValueSet_Compose_ConceptSet_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet_Filter.Unmarshal(m, b)
}
func (m *ValueSet_Compose_ConceptSet_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet_Filter.Marshal(b, m, deterministic)
}
func (m *ValueSet_Compose_ConceptSet_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet_Compose_ConceptSet_Filter.Merge(m, src)
}
func (m *ValueSet_Compose_ConceptSet_Filter) XXX_Size() int {
	return xxx_messageInfo_ValueSet_Compose_ConceptSet_Filter.Size(m)
}
func (m *ValueSet_Compose_ConceptSet_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet_Compose_ConceptSet_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet_Compose_ConceptSet_Filter proto.InternalMessageInfo

func (m *ValueSet_Compose_ConceptSet_Filter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_Filter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_Filter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_Filter) GetProperty() *Code {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_Filter) GetOp() *FilterOperatorCode {
	if m != nil {
		return m.Op
	}
	return nil
}

func (m *ValueSet_Compose_ConceptSet_Filter) GetValue() *Code {
	if m != nil {
		return m.Value
	}
	return nil
}

// Used when the value set is "expanded"
type ValueSet_Expansion struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Uniquely identifies this expansion
	Identifier *Uri `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Time ValueSet expansion happened
	Timestamp *DateTime `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Total number of codes in the expansion
	Total *Integer `protobuf:"bytes,6,opt,name=total,proto3" json:"total,omitempty"`
	// Offset at which this resource starts
	Offset               *Integer                        `protobuf:"bytes,7,opt,name=offset,proto3" json:"offset,omitempty"`
	Parameter            []*ValueSet_Expansion_Parameter `protobuf:"bytes,8,rep,name=parameter,proto3" json:"parameter,omitempty"`
	Contains             []*ValueSet_Expansion_Contains  `protobuf:"bytes,9,rep,name=contains,proto3" json:"contains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ValueSet_Expansion) Reset()         { *m = ValueSet_Expansion{} }
func (m *ValueSet_Expansion) String() string { return proto.CompactTextString(m) }
func (*ValueSet_Expansion) ProtoMessage()    {}
func (*ValueSet_Expansion) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115, 1}
}

func (m *ValueSet_Expansion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet_Expansion.Unmarshal(m, b)
}
func (m *ValueSet_Expansion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet_Expansion.Marshal(b, m, deterministic)
}
func (m *ValueSet_Expansion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet_Expansion.Merge(m, src)
}
func (m *ValueSet_Expansion) XXX_Size() int {
	return xxx_messageInfo_ValueSet_Expansion.Size(m)
}
func (m *ValueSet_Expansion) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet_Expansion.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet_Expansion proto.InternalMessageInfo

func (m *ValueSet_Expansion) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ValueSet_Expansion) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ValueSet_Expansion) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ValueSet_Expansion) GetIdentifier() *Uri {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ValueSet_Expansion) GetTimestamp() *DateTime {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *ValueSet_Expansion) GetTotal() *Integer {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *ValueSet_Expansion) GetOffset() *Integer {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *ValueSet_Expansion) GetParameter() []*ValueSet_Expansion_Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *ValueSet_Expansion) GetContains() []*ValueSet_Expansion_Contains {
	if m != nil {
		return m.Contains
	}
	return nil
}

// Parameter that controlled the expansion process
type ValueSet_Expansion_Parameter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name as assigned by the server
	Name                 *String                             `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Value                *ValueSet_Expansion_Parameter_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ValueSet_Expansion_Parameter) Reset()         { *m = ValueSet_Expansion_Parameter{} }
func (m *ValueSet_Expansion_Parameter) String() string { return proto.CompactTextString(m) }
func (*ValueSet_Expansion_Parameter) ProtoMessage()    {}
func (*ValueSet_Expansion_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115, 1, 0}
}

func (m *ValueSet_Expansion_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet_Expansion_Parameter.Unmarshal(m, b)
}
func (m *ValueSet_Expansion_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet_Expansion_Parameter.Marshal(b, m, deterministic)
}
func (m *ValueSet_Expansion_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet_Expansion_Parameter.Merge(m, src)
}
func (m *ValueSet_Expansion_Parameter) XXX_Size() int {
	return xxx_messageInfo_ValueSet_Expansion_Parameter.Size(m)
}
func (m *ValueSet_Expansion_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet_Expansion_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet_Expansion_Parameter proto.InternalMessageInfo

func (m *ValueSet_Expansion_Parameter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter) GetValue() *ValueSet_Expansion_Parameter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Value of the named parameter
type ValueSet_Expansion_Parameter_Value struct {
	// Types that are valid to be assigned to Value:
	//	*ValueSet_Expansion_Parameter_Value_StringValue
	//	*ValueSet_Expansion_Parameter_Value_Boolean
	//	*ValueSet_Expansion_Parameter_Value_Integer
	//	*ValueSet_Expansion_Parameter_Value_Decimal
	//	*ValueSet_Expansion_Parameter_Value_Uri
	//	*ValueSet_Expansion_Parameter_Value_Code
	Value                isValueSet_Expansion_Parameter_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *ValueSet_Expansion_Parameter_Value) Reset()         { *m = ValueSet_Expansion_Parameter_Value{} }
func (m *ValueSet_Expansion_Parameter_Value) String() string { return proto.CompactTextString(m) }
func (*ValueSet_Expansion_Parameter_Value) ProtoMessage()    {}
func (*ValueSet_Expansion_Parameter_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115, 1, 0, 0}
}

func (m *ValueSet_Expansion_Parameter_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet_Expansion_Parameter_Value.Unmarshal(m, b)
}
func (m *ValueSet_Expansion_Parameter_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet_Expansion_Parameter_Value.Marshal(b, m, deterministic)
}
func (m *ValueSet_Expansion_Parameter_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet_Expansion_Parameter_Value.Merge(m, src)
}
func (m *ValueSet_Expansion_Parameter_Value) XXX_Size() int {
	return xxx_messageInfo_ValueSet_Expansion_Parameter_Value.Size(m)
}
func (m *ValueSet_Expansion_Parameter_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet_Expansion_Parameter_Value.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet_Expansion_Parameter_Value proto.InternalMessageInfo

type isValueSet_Expansion_Parameter_Value_Value interface {
	isValueSet_Expansion_Parameter_Value_Value()
}

type ValueSet_Expansion_Parameter_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,1,opt,name=string_value,json=string,proto3,oneof"`
}

type ValueSet_Expansion_Parameter_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type ValueSet_Expansion_Parameter_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,3,opt,name=integer,proto3,oneof"`
}

type ValueSet_Expansion_Parameter_Value_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,4,opt,name=decimal,proto3,oneof"`
}

type ValueSet_Expansion_Parameter_Value_Uri struct {
	Uri *Uri `protobuf:"bytes,5,opt,name=uri,proto3,oneof"`
}

type ValueSet_Expansion_Parameter_Value_Code struct {
	Code *Code `protobuf:"bytes,6,opt,name=code,proto3,oneof"`
}

func (*ValueSet_Expansion_Parameter_Value_StringValue) isValueSet_Expansion_Parameter_Value_Value() {}

func (*ValueSet_Expansion_Parameter_Value_Boolean) isValueSet_Expansion_Parameter_Value_Value() {}

func (*ValueSet_Expansion_Parameter_Value_Integer) isValueSet_Expansion_Parameter_Value_Value() {}

func (*ValueSet_Expansion_Parameter_Value_Decimal) isValueSet_Expansion_Parameter_Value_Value() {}

func (*ValueSet_Expansion_Parameter_Value_Uri) isValueSet_Expansion_Parameter_Value_Value() {}

func (*ValueSet_Expansion_Parameter_Value_Code) isValueSet_Expansion_Parameter_Value_Value() {}

func (m *ValueSet_Expansion_Parameter_Value) GetValue() isValueSet_Expansion_Parameter_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*ValueSet_Expansion_Parameter_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*ValueSet_Expansion_Parameter_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*ValueSet_Expansion_Parameter_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter_Value) GetDecimal() *Decimal {
	if x, ok := m.GetValue().(*ValueSet_Expansion_Parameter_Value_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter_Value) GetUri() *Uri {
	if x, ok := m.GetValue().(*ValueSet_Expansion_Parameter_Value_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *ValueSet_Expansion_Parameter_Value) GetCode() *Code {
	if x, ok := m.GetValue().(*ValueSet_Expansion_Parameter_Value_Code); ok {
		return x.Code
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ValueSet_Expansion_Parameter_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ValueSet_Expansion_Parameter_Value_OneofMarshaler, _ValueSet_Expansion_Parameter_Value_OneofUnmarshaler, _ValueSet_Expansion_Parameter_Value_OneofSizer, []interface{}{
		(*ValueSet_Expansion_Parameter_Value_StringValue)(nil),
		(*ValueSet_Expansion_Parameter_Value_Boolean)(nil),
		(*ValueSet_Expansion_Parameter_Value_Integer)(nil),
		(*ValueSet_Expansion_Parameter_Value_Decimal)(nil),
		(*ValueSet_Expansion_Parameter_Value_Uri)(nil),
		(*ValueSet_Expansion_Parameter_Value_Code)(nil),
	}
}

func _ValueSet_Expansion_Parameter_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ValueSet_Expansion_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *ValueSet_Expansion_Parameter_Value_StringValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *ValueSet_Expansion_Parameter_Value_Boolean:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *ValueSet_Expansion_Parameter_Value_Integer:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *ValueSet_Expansion_Parameter_Value_Decimal:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *ValueSet_Expansion_Parameter_Value_Uri:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *ValueSet_Expansion_Parameter_Value_Code:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ValueSet_Expansion_Parameter_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _ValueSet_Expansion_Parameter_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ValueSet_Expansion_Parameter_Value)
	switch tag {
	case 1: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &ValueSet_Expansion_Parameter_Value_StringValue{msg}
		return true, err
	case 2: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &ValueSet_Expansion_Parameter_Value_Boolean{msg}
		return true, err
	case 3: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &ValueSet_Expansion_Parameter_Value_Integer{msg}
		return true, err
	case 4: // value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Value = &ValueSet_Expansion_Parameter_Value_Decimal{msg}
		return true, err
	case 5: // value.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Value = &ValueSet_Expansion_Parameter_Value_Uri{msg}
		return true, err
	case 6: // value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.Value = &ValueSet_Expansion_Parameter_Value_Code{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ValueSet_Expansion_Parameter_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ValueSet_Expansion_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *ValueSet_Expansion_Parameter_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValueSet_Expansion_Parameter_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValueSet_Expansion_Parameter_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValueSet_Expansion_Parameter_Value_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValueSet_Expansion_Parameter_Value_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValueSet_Expansion_Parameter_Value_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Codes in the value set
type ValueSet_Expansion_Contains struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// System value for the code
	System *Uri `protobuf:"bytes,4,opt,name=system,proto3" json:"system,omitempty"`
	// If user cannot select this entry
	Abstract *Boolean `protobuf:"bytes,5,opt,name=abstract,proto3" json:"abstract,omitempty"`
	// If concept is inactive in the code system
	Inactive *Boolean `protobuf:"bytes,6,opt,name=inactive,proto3" json:"inactive,omitempty"`
	// Version in which this code/display is defined
	Version *String `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	// Code - if blank, this is not a selectable code
	Code *Code `protobuf:"bytes,8,opt,name=code,proto3" json:"code,omitempty"`
	// User display for the concept
	Display *String `protobuf:"bytes,9,opt,name=display,proto3" json:"display,omitempty"`
	// Additional representations for this item
	Designation []*ValueSet_Compose_ConceptSet_ConceptReference_Designation `protobuf:"bytes,10,rep,name=designation,proto3" json:"designation,omitempty"`
	// Codes contained under this entry
	Contains             []*ValueSet_Expansion_Contains `protobuf:"bytes,11,rep,name=contains,proto3" json:"contains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ValueSet_Expansion_Contains) Reset()         { *m = ValueSet_Expansion_Contains{} }
func (m *ValueSet_Expansion_Contains) String() string { return proto.CompactTextString(m) }
func (*ValueSet_Expansion_Contains) ProtoMessage()    {}
func (*ValueSet_Expansion_Contains) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{115, 1, 1}
}

func (m *ValueSet_Expansion_Contains) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet_Expansion_Contains.Unmarshal(m, b)
}
func (m *ValueSet_Expansion_Contains) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet_Expansion_Contains.Marshal(b, m, deterministic)
}
func (m *ValueSet_Expansion_Contains) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet_Expansion_Contains.Merge(m, src)
}
func (m *ValueSet_Expansion_Contains) XXX_Size() int {
	return xxx_messageInfo_ValueSet_Expansion_Contains.Size(m)
}
func (m *ValueSet_Expansion_Contains) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet_Expansion_Contains.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet_Expansion_Contains proto.InternalMessageInfo

func (m *ValueSet_Expansion_Contains) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetSystem() *Uri {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetAbstract() *Boolean {
	if m != nil {
		return m.Abstract
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetInactive() *Boolean {
	if m != nil {
		return m.Inactive
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetDesignation() []*ValueSet_Compose_ConceptSet_ConceptReference_Designation {
	if m != nil {
		return m.Designation
	}
	return nil
}

func (m *ValueSet_Expansion_Contains) GetContains() []*ValueSet_Expansion_Contains {
	if m != nil {
		return m.Contains
	}
	return nil
}

// Auto-generated from StructureDefinition for VisionPrescription, last updated
// 2017-04-19T07:44:43.294+10:00. Prescription for vision correction products
// for a patient. See http://hl7.org/fhir/StructureDefinition/VisionPrescription
type VisionPrescription struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | cancelled | draft | entered-in-error
	Status *FinancialResourceStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Who prescription is for
	Patient *Reference `protobuf:"bytes,11,opt,name=patient,proto3" json:"patient,omitempty"`
	// Created during encounter / admission / stay
	Encounter *Reference `protobuf:"bytes,12,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// When prescription was authorized
	DateWritten *DateTime `protobuf:"bytes,13,opt,name=date_written,json=dateWritten,proto3" json:"date_written,omitempty"`
	// Who authorizes the vision product
	Prescriber           *Reference                     `protobuf:"bytes,14,opt,name=prescriber,proto3" json:"prescriber,omitempty"`
	Reason               *VisionPrescription_Reason     `protobuf:"bytes,15,opt,name=reason,proto3" json:"reason,omitempty"`
	Dispense             []*VisionPrescription_Dispense `protobuf:"bytes,16,rep,name=dispense,proto3" json:"dispense,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *VisionPrescription) Reset()         { *m = VisionPrescription{} }
func (m *VisionPrescription) String() string { return proto.CompactTextString(m) }
func (*VisionPrescription) ProtoMessage()    {}
func (*VisionPrescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{116}
}

func (m *VisionPrescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VisionPrescription.Unmarshal(m, b)
}
func (m *VisionPrescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VisionPrescription.Marshal(b, m, deterministic)
}
func (m *VisionPrescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VisionPrescription.Merge(m, src)
}
func (m *VisionPrescription) XXX_Size() int {
	return xxx_messageInfo_VisionPrescription.Size(m)
}
func (m *VisionPrescription) XXX_DiscardUnknown() {
	xxx_messageInfo_VisionPrescription.DiscardUnknown(m)
}

var xxx_messageInfo_VisionPrescription proto.InternalMessageInfo

func (m *VisionPrescription) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *VisionPrescription) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *VisionPrescription) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *VisionPrescription) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *VisionPrescription) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *VisionPrescription) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *VisionPrescription) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *VisionPrescription) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *VisionPrescription) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *VisionPrescription) GetStatus() *FinancialResourceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *VisionPrescription) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *VisionPrescription) GetEncounter() *Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *VisionPrescription) GetDateWritten() *DateTime {
	if m != nil {
		return m.DateWritten
	}
	return nil
}

func (m *VisionPrescription) GetPrescriber() *Reference {
	if m != nil {
		return m.Prescriber
	}
	return nil
}

func (m *VisionPrescription) GetReason() *VisionPrescription_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *VisionPrescription) GetDispense() []*VisionPrescription_Dispense {
	if m != nil {
		return m.Dispense
	}
	return nil
}

// Reason or indication for writing the prescription
type VisionPrescription_Reason struct {
	// Types that are valid to be assigned to Reason:
	//	*VisionPrescription_Reason_CodeableConcept
	//	*VisionPrescription_Reason_Reference
	Reason               isVisionPrescription_Reason_Reason `protobuf_oneof:"reason"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *VisionPrescription_Reason) Reset()         { *m = VisionPrescription_Reason{} }
func (m *VisionPrescription_Reason) String() string { return proto.CompactTextString(m) }
func (*VisionPrescription_Reason) ProtoMessage()    {}
func (*VisionPrescription_Reason) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{116, 0}
}

func (m *VisionPrescription_Reason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VisionPrescription_Reason.Unmarshal(m, b)
}
func (m *VisionPrescription_Reason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VisionPrescription_Reason.Marshal(b, m, deterministic)
}
func (m *VisionPrescription_Reason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VisionPrescription_Reason.Merge(m, src)
}
func (m *VisionPrescription_Reason) XXX_Size() int {
	return xxx_messageInfo_VisionPrescription_Reason.Size(m)
}
func (m *VisionPrescription_Reason) XXX_DiscardUnknown() {
	xxx_messageInfo_VisionPrescription_Reason.DiscardUnknown(m)
}

var xxx_messageInfo_VisionPrescription_Reason proto.InternalMessageInfo

type isVisionPrescription_Reason_Reason interface {
	isVisionPrescription_Reason_Reason()
}

type VisionPrescription_Reason_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type VisionPrescription_Reason_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*VisionPrescription_Reason_CodeableConcept) isVisionPrescription_Reason_Reason() {}

func (*VisionPrescription_Reason_Reference) isVisionPrescription_Reason_Reason() {}

func (m *VisionPrescription_Reason) GetReason() isVisionPrescription_Reason_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *VisionPrescription_Reason) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetReason().(*VisionPrescription_Reason_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *VisionPrescription_Reason) GetReference() *Reference {
	if x, ok := m.GetReason().(*VisionPrescription_Reason_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*VisionPrescription_Reason) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _VisionPrescription_Reason_OneofMarshaler, _VisionPrescription_Reason_OneofUnmarshaler, _VisionPrescription_Reason_OneofSizer, []interface{}{
		(*VisionPrescription_Reason_CodeableConcept)(nil),
		(*VisionPrescription_Reason_Reference)(nil),
	}
}

func _VisionPrescription_Reason_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*VisionPrescription_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *VisionPrescription_Reason_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *VisionPrescription_Reason_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VisionPrescription_Reason.Reason has unexpected type %T", x)
	}
	return nil
}

func _VisionPrescription_Reason_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*VisionPrescription_Reason)
	switch tag {
	case 1: // reason.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Reason = &VisionPrescription_Reason_CodeableConcept{msg}
		return true, err
	case 2: // reason.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Reason = &VisionPrescription_Reason_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _VisionPrescription_Reason_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*VisionPrescription_Reason)
	// reason
	switch x := m.Reason.(type) {
	case *VisionPrescription_Reason_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VisionPrescription_Reason_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vision supply authorization
type VisionPrescription_Dispense struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Product to be supplied
	Product *CodeableConcept `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
	// right | left
	Eye *VisionEyesCode `protobuf:"bytes,5,opt,name=eye,proto3" json:"eye,omitempty"`
	// Lens sphere
	Sphere *Decimal `protobuf:"bytes,6,opt,name=sphere,proto3" json:"sphere,omitempty"`
	// Lens cylinder
	Cylinder *Decimal `protobuf:"bytes,7,opt,name=cylinder,proto3" json:"cylinder,omitempty"`
	// Lens axis
	Axis *Integer `protobuf:"bytes,8,opt,name=axis,proto3" json:"axis,omitempty"`
	// Lens prism
	Prism *Decimal `protobuf:"bytes,9,opt,name=prism,proto3" json:"prism,omitempty"`
	// up | down | in | out
	Base *VisionBaseCode `protobuf:"bytes,10,opt,name=base,proto3" json:"base,omitempty"`
	// Lens add
	Add *Decimal `protobuf:"bytes,11,opt,name=add,proto3" json:"add,omitempty"`
	// Contact lens power
	Power *Decimal `protobuf:"bytes,12,opt,name=power,proto3" json:"power,omitempty"`
	// Contact lens back curvature
	BackCurve *Decimal `protobuf:"bytes,13,opt,name=back_curve,json=backCurve,proto3" json:"back_curve,omitempty"`
	// Contact lens diameter
	Diameter *Decimal `protobuf:"bytes,14,opt,name=diameter,proto3" json:"diameter,omitempty"`
	// Lens wear duration
	Duration *SimpleQuantity `protobuf:"bytes,15,opt,name=duration,proto3" json:"duration,omitempty"`
	// Color required
	Color *String `protobuf:"bytes,16,opt,name=color,proto3" json:"color,omitempty"`
	// Brand required
	Brand *String `protobuf:"bytes,17,opt,name=brand,proto3" json:"brand,omitempty"`
	// Notes for coatings
	Note                 []*Annotation `protobuf:"bytes,18,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VisionPrescription_Dispense) Reset()         { *m = VisionPrescription_Dispense{} }
func (m *VisionPrescription_Dispense) String() string { return proto.CompactTextString(m) }
func (*VisionPrescription_Dispense) ProtoMessage()    {}
func (*VisionPrescription_Dispense) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{116, 1}
}

func (m *VisionPrescription_Dispense) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VisionPrescription_Dispense.Unmarshal(m, b)
}
func (m *VisionPrescription_Dispense) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VisionPrescription_Dispense.Marshal(b, m, deterministic)
}
func (m *VisionPrescription_Dispense) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VisionPrescription_Dispense.Merge(m, src)
}
func (m *VisionPrescription_Dispense) XXX_Size() int {
	return xxx_messageInfo_VisionPrescription_Dispense.Size(m)
}
func (m *VisionPrescription_Dispense) XXX_DiscardUnknown() {
	xxx_messageInfo_VisionPrescription_Dispense.DiscardUnknown(m)
}

var xxx_messageInfo_VisionPrescription_Dispense proto.InternalMessageInfo

func (m *VisionPrescription_Dispense) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetProduct() *CodeableConcept {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetEye() *VisionEyesCode {
	if m != nil {
		return m.Eye
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetSphere() *Decimal {
	if m != nil {
		return m.Sphere
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetCylinder() *Decimal {
	if m != nil {
		return m.Cylinder
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetAxis() *Integer {
	if m != nil {
		return m.Axis
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetPrism() *Decimal {
	if m != nil {
		return m.Prism
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetBase() *VisionBaseCode {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetAdd() *Decimal {
	if m != nil {
		return m.Add
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetPower() *Decimal {
	if m != nil {
		return m.Power
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetBackCurve() *Decimal {
	if m != nil {
		return m.BackCurve
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetDiameter() *Decimal {
	if m != nil {
		return m.Diameter
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetDuration() *SimpleQuantity {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetColor() *String {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetBrand() *String {
	if m != nil {
		return m.Brand
	}
	return nil
}

func (m *VisionPrescription_Dispense) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

type ContainedResource struct {
	// Types that are valid to be assigned to OneofResource:
	//	*ContainedResource_Account
	//	*ContainedResource_ActivityDefinition
	//	*ContainedResource_AdverseEvent
	//	*ContainedResource_AllergyIntolerance
	//	*ContainedResource_Appointment
	//	*ContainedResource_AppointmentResponse
	//	*ContainedResource_AuditEvent
	//	*ContainedResource_Basic
	//	*ContainedResource_Binary
	//	*ContainedResource_BodySite
	//	*ContainedResource_Bundle
	//	*ContainedResource_CapabilityStatement
	//	*ContainedResource_CarePlan
	//	*ContainedResource_CareTeam
	//	*ContainedResource_ChargeItem
	//	*ContainedResource_Claim
	//	*ContainedResource_ClaimResponse
	//	*ContainedResource_ClinicalImpression
	//	*ContainedResource_CodeSystem
	//	*ContainedResource_Communication
	//	*ContainedResource_CommunicationRequest
	//	*ContainedResource_CompartmentDefinition
	//	*ContainedResource_Composition
	//	*ContainedResource_ConceptMap
	//	*ContainedResource_Condition
	//	*ContainedResource_Consent
	//	*ContainedResource_Contract
	//	*ContainedResource_Coverage
	//	*ContainedResource_DataElement
	//	*ContainedResource_DetectedIssue
	//	*ContainedResource_Device
	//	*ContainedResource_DeviceComponent
	//	*ContainedResource_DeviceMetric
	//	*ContainedResource_DeviceRequest
	//	*ContainedResource_DeviceUseStatement
	//	*ContainedResource_DiagnosticReport
	//	*ContainedResource_DocumentManifest
	//	*ContainedResource_DocumentReference
	//	*ContainedResource_EligibilityRequest
	//	*ContainedResource_EligibilityResponse
	//	*ContainedResource_Encounter
	//	*ContainedResource_Endpoint
	//	*ContainedResource_EnrollmentRequest
	//	*ContainedResource_EnrollmentResponse
	//	*ContainedResource_EpisodeOfCare
	//	*ContainedResource_ExpansionProfile
	//	*ContainedResource_ExplanationOfBenefit
	//	*ContainedResource_FamilyMemberHistory
	//	*ContainedResource_Flag
	//	*ContainedResource_Goal
	//	*ContainedResource_GraphDefinition
	//	*ContainedResource_Group
	//	*ContainedResource_GuidanceResponse
	//	*ContainedResource_HealthcareService
	//	*ContainedResource_ImagingManifest
	//	*ContainedResource_ImagingStudy
	//	*ContainedResource_Immunization
	//	*ContainedResource_ImmunizationRecommendation
	//	*ContainedResource_ImplementationGuide
	//	*ContainedResource_Library
	//	*ContainedResource_Linkage
	//	*ContainedResource_List
	//	*ContainedResource_Location
	//	*ContainedResource_Measure
	//	*ContainedResource_MeasureReport
	//	*ContainedResource_Media
	//	*ContainedResource_Medication
	//	*ContainedResource_MedicationAdministration
	//	*ContainedResource_MedicationDispense
	//	*ContainedResource_MedicationRequest
	//	*ContainedResource_MedicationStatement
	//	*ContainedResource_MessageDefinition
	//	*ContainedResource_MessageHeader
	//	*ContainedResource_NamingSystem
	//	*ContainedResource_NutritionOrder
	//	*ContainedResource_Observation
	//	*ContainedResource_OperationDefinition
	//	*ContainedResource_OperationOutcome
	//	*ContainedResource_Organization
	//	*ContainedResource_Parameters
	//	*ContainedResource_Patient
	//	*ContainedResource_PaymentNotice
	//	*ContainedResource_PaymentReconciliation
	//	*ContainedResource_Person
	//	*ContainedResource_PlanDefinition
	//	*ContainedResource_Practitioner
	//	*ContainedResource_PractitionerRole
	//	*ContainedResource_Procedure
	//	*ContainedResource_ProcedureRequest
	//	*ContainedResource_ProcessRequest
	//	*ContainedResource_ProcessResponse
	//	*ContainedResource_Provenance
	//	*ContainedResource_Questionnaire
	//	*ContainedResource_QuestionnaireResponse
	//	*ContainedResource_ReferralRequest
	//	*ContainedResource_RelatedPerson
	//	*ContainedResource_RequestGroup
	//	*ContainedResource_ResearchStudy
	//	*ContainedResource_ResearchSubject
	//	*ContainedResource_RiskAssessment
	//	*ContainedResource_Schedule
	//	*ContainedResource_SearchParameter
	//	*ContainedResource_Sequence
	//	*ContainedResource_ServiceDefinition
	//	*ContainedResource_Slot
	//	*ContainedResource_Specimen
	//	*ContainedResource_StructureDefinition
	//	*ContainedResource_StructureMap
	//	*ContainedResource_Subscription
	//	*ContainedResource_Substance
	//	*ContainedResource_SupplyDelivery
	//	*ContainedResource_SupplyRequest
	//	*ContainedResource_Task
	//	*ContainedResource_TestReport
	//	*ContainedResource_TestScript
	//	*ContainedResource_ValueSet
	//	*ContainedResource_VisionPrescription
	OneofResource        isContainedResource_OneofResource `protobuf_oneof:"oneof_resource"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ContainedResource) Reset()         { *m = ContainedResource{} }
func (m *ContainedResource) String() string { return proto.CompactTextString(m) }
func (*ContainedResource) ProtoMessage()    {}
func (*ContainedResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_9302f8eabd8b1c44, []int{117}
}

func (m *ContainedResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainedResource.Unmarshal(m, b)
}
func (m *ContainedResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainedResource.Marshal(b, m, deterministic)
}
func (m *ContainedResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainedResource.Merge(m, src)
}
func (m *ContainedResource) XXX_Size() int {
	return xxx_messageInfo_ContainedResource.Size(m)
}
func (m *ContainedResource) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainedResource.DiscardUnknown(m)
}

var xxx_messageInfo_ContainedResource proto.InternalMessageInfo

type isContainedResource_OneofResource interface {
	isContainedResource_OneofResource()
}

type ContainedResource_Account struct {
	Account *Account `protobuf:"bytes,1,opt,name=account,proto3,oneof"`
}

type ContainedResource_ActivityDefinition struct {
	ActivityDefinition *ActivityDefinition `protobuf:"bytes,2,opt,name=activity_definition,json=activityDefinition,proto3,oneof"`
}

type ContainedResource_AdverseEvent struct {
	AdverseEvent *AdverseEvent `protobuf:"bytes,3,opt,name=adverse_event,json=adverseEvent,proto3,oneof"`
}

type ContainedResource_AllergyIntolerance struct {
	AllergyIntolerance *AllergyIntolerance `protobuf:"bytes,4,opt,name=allergy_intolerance,json=allergyIntolerance,proto3,oneof"`
}

type ContainedResource_Appointment struct {
	Appointment *Appointment `protobuf:"bytes,5,opt,name=appointment,proto3,oneof"`
}

type ContainedResource_AppointmentResponse struct {
	AppointmentResponse *AppointmentResponse `protobuf:"bytes,6,opt,name=appointment_response,json=appointmentResponse,proto3,oneof"`
}

type ContainedResource_AuditEvent struct {
	AuditEvent *AuditEvent `protobuf:"bytes,7,opt,name=audit_event,json=auditEvent,proto3,oneof"`
}

type ContainedResource_Basic struct {
	Basic *Basic `protobuf:"bytes,8,opt,name=basic,proto3,oneof"`
}

type ContainedResource_Binary struct {
	Binary *Binary `protobuf:"bytes,9,opt,name=binary,proto3,oneof"`
}

type ContainedResource_BodySite struct {
	BodySite *BodySite `protobuf:"bytes,10,opt,name=body_site,json=bodySite,proto3,oneof"`
}

type ContainedResource_Bundle struct {
	Bundle *Bundle `protobuf:"bytes,11,opt,name=bundle,proto3,oneof"`
}

type ContainedResource_CapabilityStatement struct {
	CapabilityStatement *CapabilityStatement `protobuf:"bytes,12,opt,name=capability_statement,json=capabilityStatement,proto3,oneof"`
}

type ContainedResource_CarePlan struct {
	CarePlan *CarePlan `protobuf:"bytes,13,opt,name=care_plan,json=carePlan,proto3,oneof"`
}

type ContainedResource_CareTeam struct {
	CareTeam *CareTeam `protobuf:"bytes,14,opt,name=care_team,json=careTeam,proto3,oneof"`
}

type ContainedResource_ChargeItem struct {
	ChargeItem *ChargeItem `protobuf:"bytes,15,opt,name=charge_item,json=chargeItem,proto3,oneof"`
}

type ContainedResource_Claim struct {
	Claim *Claim `protobuf:"bytes,16,opt,name=claim,proto3,oneof"`
}

type ContainedResource_ClaimResponse struct {
	ClaimResponse *ClaimResponse `protobuf:"bytes,17,opt,name=claim_response,json=claimResponse,proto3,oneof"`
}

type ContainedResource_ClinicalImpression struct {
	ClinicalImpression *ClinicalImpression `protobuf:"bytes,18,opt,name=clinical_impression,json=clinicalImpression,proto3,oneof"`
}

type ContainedResource_CodeSystem struct {
	CodeSystem *CodeSystem `protobuf:"bytes,19,opt,name=code_system,json=codeSystem,proto3,oneof"`
}

type ContainedResource_Communication struct {
	Communication *Communication `protobuf:"bytes,20,opt,name=communication,proto3,oneof"`
}

type ContainedResource_CommunicationRequest struct {
	CommunicationRequest *CommunicationRequest `protobuf:"bytes,21,opt,name=communication_request,json=communicationRequest,proto3,oneof"`
}

type ContainedResource_CompartmentDefinition struct {
	CompartmentDefinition *CompartmentDefinition `protobuf:"bytes,22,opt,name=compartment_definition,json=compartmentDefinition,proto3,oneof"`
}

type ContainedResource_Composition struct {
	Composition *Composition `protobuf:"bytes,23,opt,name=composition,proto3,oneof"`
}

type ContainedResource_ConceptMap struct {
	ConceptMap *ConceptMap `protobuf:"bytes,24,opt,name=concept_map,json=conceptMap,proto3,oneof"`
}

type ContainedResource_Condition struct {
	Condition *Condition `protobuf:"bytes,25,opt,name=condition,proto3,oneof"`
}

type ContainedResource_Consent struct {
	Consent *Consent `protobuf:"bytes,26,opt,name=consent,proto3,oneof"`
}

type ContainedResource_Contract struct {
	Contract *Contract `protobuf:"bytes,27,opt,name=contract,proto3,oneof"`
}

type ContainedResource_Coverage struct {
	Coverage *Coverage `protobuf:"bytes,28,opt,name=coverage,proto3,oneof"`
}

type ContainedResource_DataElement struct {
	DataElement *DataElement `protobuf:"bytes,29,opt,name=data_element,json=dataElement,proto3,oneof"`
}

type ContainedResource_DetectedIssue struct {
	DetectedIssue *DetectedIssue `protobuf:"bytes,30,opt,name=detected_issue,json=detectedIssue,proto3,oneof"`
}

type ContainedResource_Device struct {
	Device *Device `protobuf:"bytes,31,opt,name=device,proto3,oneof"`
}

type ContainedResource_DeviceComponent struct {
	DeviceComponent *DeviceComponent `protobuf:"bytes,32,opt,name=device_component,json=deviceComponent,proto3,oneof"`
}

type ContainedResource_DeviceMetric struct {
	DeviceMetric *DeviceMetric `protobuf:"bytes,33,opt,name=device_metric,json=deviceMetric,proto3,oneof"`
}

type ContainedResource_DeviceRequest struct {
	DeviceRequest *DeviceRequest `protobuf:"bytes,34,opt,name=device_request,json=deviceRequest,proto3,oneof"`
}

type ContainedResource_DeviceUseStatement struct {
	DeviceUseStatement *DeviceUseStatement `protobuf:"bytes,35,opt,name=device_use_statement,json=deviceUseStatement,proto3,oneof"`
}

type ContainedResource_DiagnosticReport struct {
	DiagnosticReport *DiagnosticReport `protobuf:"bytes,36,opt,name=diagnostic_report,json=diagnosticReport,proto3,oneof"`
}

type ContainedResource_DocumentManifest struct {
	DocumentManifest *DocumentManifest `protobuf:"bytes,37,opt,name=document_manifest,json=documentManifest,proto3,oneof"`
}

type ContainedResource_DocumentReference struct {
	DocumentReference *DocumentReference `protobuf:"bytes,38,opt,name=document_reference,json=documentReference,proto3,oneof"`
}

type ContainedResource_EligibilityRequest struct {
	EligibilityRequest *EligibilityRequest `protobuf:"bytes,39,opt,name=eligibility_request,json=eligibilityRequest,proto3,oneof"`
}

type ContainedResource_EligibilityResponse struct {
	EligibilityResponse *EligibilityResponse `protobuf:"bytes,40,opt,name=eligibility_response,json=eligibilityResponse,proto3,oneof"`
}

type ContainedResource_Encounter struct {
	Encounter *Encounter `protobuf:"bytes,41,opt,name=encounter,proto3,oneof"`
}

type ContainedResource_Endpoint struct {
	Endpoint *Endpoint `protobuf:"bytes,42,opt,name=endpoint,proto3,oneof"`
}

type ContainedResource_EnrollmentRequest struct {
	EnrollmentRequest *EnrollmentRequest `protobuf:"bytes,43,opt,name=enrollment_request,json=enrollmentRequest,proto3,oneof"`
}

type ContainedResource_EnrollmentResponse struct {
	EnrollmentResponse *EnrollmentResponse `protobuf:"bytes,44,opt,name=enrollment_response,json=enrollmentResponse,proto3,oneof"`
}

type ContainedResource_EpisodeOfCare struct {
	EpisodeOfCare *EpisodeOfCare `protobuf:"bytes,45,opt,name=episode_of_care,json=episodeOfCare,proto3,oneof"`
}

type ContainedResource_ExpansionProfile struct {
	ExpansionProfile *ExpansionProfile `protobuf:"bytes,46,opt,name=expansion_profile,json=expansionProfile,proto3,oneof"`
}

type ContainedResource_ExplanationOfBenefit struct {
	ExplanationOfBenefit *ExplanationOfBenefit `protobuf:"bytes,47,opt,name=explanation_of_benefit,json=explanationOfBenefit,proto3,oneof"`
}

type ContainedResource_FamilyMemberHistory struct {
	FamilyMemberHistory *FamilyMemberHistory `protobuf:"bytes,48,opt,name=family_member_history,json=familyMemberHistory,proto3,oneof"`
}

type ContainedResource_Flag struct {
	Flag *Flag `protobuf:"bytes,49,opt,name=flag,proto3,oneof"`
}

type ContainedResource_Goal struct {
	Goal *Goal `protobuf:"bytes,50,opt,name=goal,proto3,oneof"`
}

type ContainedResource_GraphDefinition struct {
	GraphDefinition *GraphDefinition `protobuf:"bytes,51,opt,name=graph_definition,json=graphDefinition,proto3,oneof"`
}

type ContainedResource_Group struct {
	Group *Group `protobuf:"bytes,52,opt,name=group,proto3,oneof"`
}

type ContainedResource_GuidanceResponse struct {
	GuidanceResponse *GuidanceResponse `protobuf:"bytes,53,opt,name=guidance_response,json=guidanceResponse,proto3,oneof"`
}

type ContainedResource_HealthcareService struct {
	HealthcareService *HealthcareService `protobuf:"bytes,54,opt,name=healthcare_service,json=healthcareService,proto3,oneof"`
}

type ContainedResource_ImagingManifest struct {
	ImagingManifest *ImagingManifest `protobuf:"bytes,55,opt,name=imaging_manifest,json=imagingManifest,proto3,oneof"`
}

type ContainedResource_ImagingStudy struct {
	ImagingStudy *ImagingStudy `protobuf:"bytes,56,opt,name=imaging_study,json=imagingStudy,proto3,oneof"`
}

type ContainedResource_Immunization struct {
	Immunization *Immunization `protobuf:"bytes,57,opt,name=immunization,proto3,oneof"`
}

type ContainedResource_ImmunizationRecommendation struct {
	ImmunizationRecommendation *ImmunizationRecommendation `protobuf:"bytes,58,opt,name=immunization_recommendation,json=immunizationRecommendation,proto3,oneof"`
}

type ContainedResource_ImplementationGuide struct {
	ImplementationGuide *ImplementationGuide `protobuf:"bytes,59,opt,name=implementation_guide,json=implementationGuide,proto3,oneof"`
}

type ContainedResource_Library struct {
	Library *Library `protobuf:"bytes,60,opt,name=library,proto3,oneof"`
}

type ContainedResource_Linkage struct {
	Linkage *Linkage `protobuf:"bytes,61,opt,name=linkage,proto3,oneof"`
}

type ContainedResource_List struct {
	List *List `protobuf:"bytes,62,opt,name=list,proto3,oneof"`
}

type ContainedResource_Location struct {
	Location *Location `protobuf:"bytes,63,opt,name=location,proto3,oneof"`
}

type ContainedResource_Measure struct {
	Measure *Measure `protobuf:"bytes,64,opt,name=measure,proto3,oneof"`
}

type ContainedResource_MeasureReport struct {
	MeasureReport *MeasureReport `protobuf:"bytes,65,opt,name=measure_report,json=measureReport,proto3,oneof"`
}

type ContainedResource_Media struct {
	Media *Media `protobuf:"bytes,66,opt,name=media,proto3,oneof"`
}

type ContainedResource_Medication struct {
	Medication *Medication `protobuf:"bytes,67,opt,name=medication,proto3,oneof"`
}

type ContainedResource_MedicationAdministration struct {
	MedicationAdministration *MedicationAdministration `protobuf:"bytes,68,opt,name=medication_administration,json=medicationAdministration,proto3,oneof"`
}

type ContainedResource_MedicationDispense struct {
	MedicationDispense *MedicationDispense `protobuf:"bytes,69,opt,name=medication_dispense,json=medicationDispense,proto3,oneof"`
}

type ContainedResource_MedicationRequest struct {
	MedicationRequest *MedicationRequest `protobuf:"bytes,70,opt,name=medication_request,json=medicationRequest,proto3,oneof"`
}

type ContainedResource_MedicationStatement struct {
	MedicationStatement *MedicationStatement `protobuf:"bytes,71,opt,name=medication_statement,json=medicationStatement,proto3,oneof"`
}

type ContainedResource_MessageDefinition struct {
	MessageDefinition *MessageDefinition `protobuf:"bytes,72,opt,name=message_definition,json=messageDefinition,proto3,oneof"`
}

type ContainedResource_MessageHeader struct {
	MessageHeader *MessageHeader `protobuf:"bytes,73,opt,name=message_header,json=messageHeader,proto3,oneof"`
}

type ContainedResource_NamingSystem struct {
	NamingSystem *NamingSystem `protobuf:"bytes,74,opt,name=naming_system,json=namingSystem,proto3,oneof"`
}

type ContainedResource_NutritionOrder struct {
	NutritionOrder *NutritionOrder `protobuf:"bytes,75,opt,name=nutrition_order,json=nutritionOrder,proto3,oneof"`
}

type ContainedResource_Observation struct {
	Observation *Observation `protobuf:"bytes,76,opt,name=observation,proto3,oneof"`
}

type ContainedResource_OperationDefinition struct {
	OperationDefinition *OperationDefinition `protobuf:"bytes,77,opt,name=operation_definition,json=operationDefinition,proto3,oneof"`
}

type ContainedResource_OperationOutcome struct {
	OperationOutcome *OperationOutcome `protobuf:"bytes,78,opt,name=operation_outcome,json=operationOutcome,proto3,oneof"`
}

type ContainedResource_Organization struct {
	Organization *Organization `protobuf:"bytes,79,opt,name=organization,proto3,oneof"`
}

type ContainedResource_Parameters struct {
	Parameters *Parameters `protobuf:"bytes,80,opt,name=parameters,proto3,oneof"`
}

type ContainedResource_Patient struct {
	Patient *Patient `protobuf:"bytes,81,opt,name=patient,proto3,oneof"`
}

type ContainedResource_PaymentNotice struct {
	PaymentNotice *PaymentNotice `protobuf:"bytes,82,opt,name=payment_notice,json=paymentNotice,proto3,oneof"`
}

type ContainedResource_PaymentReconciliation struct {
	PaymentReconciliation *PaymentReconciliation `protobuf:"bytes,83,opt,name=payment_reconciliation,json=paymentReconciliation,proto3,oneof"`
}

type ContainedResource_Person struct {
	Person *Person `protobuf:"bytes,84,opt,name=person,proto3,oneof"`
}

type ContainedResource_PlanDefinition struct {
	PlanDefinition *PlanDefinition `protobuf:"bytes,85,opt,name=plan_definition,json=planDefinition,proto3,oneof"`
}

type ContainedResource_Practitioner struct {
	Practitioner *Practitioner `protobuf:"bytes,86,opt,name=practitioner,proto3,oneof"`
}

type ContainedResource_PractitionerRole struct {
	PractitionerRole *PractitionerRole `protobuf:"bytes,87,opt,name=practitioner_role,json=practitionerRole,proto3,oneof"`
}

type ContainedResource_Procedure struct {
	Procedure *Procedure `protobuf:"bytes,88,opt,name=procedure,proto3,oneof"`
}

type ContainedResource_ProcedureRequest struct {
	ProcedureRequest *ProcedureRequest `protobuf:"bytes,89,opt,name=procedure_request,json=procedureRequest,proto3,oneof"`
}

type ContainedResource_ProcessRequest struct {
	ProcessRequest *ProcessRequest `protobuf:"bytes,90,opt,name=process_request,json=processRequest,proto3,oneof"`
}

type ContainedResource_ProcessResponse struct {
	ProcessResponse *ProcessResponse `protobuf:"bytes,91,opt,name=process_response,json=processResponse,proto3,oneof"`
}

type ContainedResource_Provenance struct {
	Provenance *Provenance `protobuf:"bytes,92,opt,name=provenance,proto3,oneof"`
}

type ContainedResource_Questionnaire struct {
	Questionnaire *Questionnaire `protobuf:"bytes,93,opt,name=questionnaire,proto3,oneof"`
}

type ContainedResource_QuestionnaireResponse struct {
	QuestionnaireResponse *QuestionnaireResponse `protobuf:"bytes,94,opt,name=questionnaire_response,json=questionnaireResponse,proto3,oneof"`
}

type ContainedResource_ReferralRequest struct {
	ReferralRequest *ReferralRequest `protobuf:"bytes,95,opt,name=referral_request,json=referralRequest,proto3,oneof"`
}

type ContainedResource_RelatedPerson struct {
	RelatedPerson *RelatedPerson `protobuf:"bytes,96,opt,name=related_person,json=relatedPerson,proto3,oneof"`
}

type ContainedResource_RequestGroup struct {
	RequestGroup *RequestGroup `protobuf:"bytes,97,opt,name=request_group,json=requestGroup,proto3,oneof"`
}

type ContainedResource_ResearchStudy struct {
	ResearchStudy *ResearchStudy `protobuf:"bytes,98,opt,name=research_study,json=researchStudy,proto3,oneof"`
}

type ContainedResource_ResearchSubject struct {
	ResearchSubject *ResearchSubject `protobuf:"bytes,99,opt,name=research_subject,json=researchSubject,proto3,oneof"`
}

type ContainedResource_RiskAssessment struct {
	RiskAssessment *RiskAssessment `protobuf:"bytes,100,opt,name=risk_assessment,json=riskAssessment,proto3,oneof"`
}

type ContainedResource_Schedule struct {
	Schedule *Schedule `protobuf:"bytes,101,opt,name=schedule,proto3,oneof"`
}

type ContainedResource_SearchParameter struct {
	SearchParameter *SearchParameter `protobuf:"bytes,102,opt,name=search_parameter,json=searchParameter,proto3,oneof"`
}

type ContainedResource_Sequence struct {
	Sequence *Sequence `protobuf:"bytes,103,opt,name=sequence,proto3,oneof"`
}

type ContainedResource_ServiceDefinition struct {
	ServiceDefinition *ServiceDefinition `protobuf:"bytes,104,opt,name=service_definition,json=serviceDefinition,proto3,oneof"`
}

type ContainedResource_Slot struct {
	Slot *Slot `protobuf:"bytes,105,opt,name=slot,proto3,oneof"`
}

type ContainedResource_Specimen struct {
	Specimen *Specimen `protobuf:"bytes,106,opt,name=specimen,proto3,oneof"`
}

type ContainedResource_StructureDefinition struct {
	StructureDefinition *StructureDefinition `protobuf:"bytes,107,opt,name=structure_definition,json=structureDefinition,proto3,oneof"`
}

type ContainedResource_StructureMap struct {
	StructureMap *StructureMap `protobuf:"bytes,108,opt,name=structure_map,json=structureMap,proto3,oneof"`
}

type ContainedResource_Subscription struct {
	Subscription *Subscription `protobuf:"bytes,109,opt,name=subscription,proto3,oneof"`
}

type ContainedResource_Substance struct {
	Substance *Substance `protobuf:"bytes,110,opt,name=substance,proto3,oneof"`
}

type ContainedResource_SupplyDelivery struct {
	SupplyDelivery *SupplyDelivery `protobuf:"bytes,111,opt,name=supply_delivery,json=supplyDelivery,proto3,oneof"`
}

type ContainedResource_SupplyRequest struct {
	SupplyRequest *SupplyRequest `protobuf:"bytes,112,opt,name=supply_request,json=supplyRequest,proto3,oneof"`
}

type ContainedResource_Task struct {
	Task *Task `protobuf:"bytes,113,opt,name=task,proto3,oneof"`
}

type ContainedResource_TestReport struct {
	TestReport *TestReport `protobuf:"bytes,114,opt,name=test_report,json=testReport,proto3,oneof"`
}

type ContainedResource_TestScript struct {
	TestScript *TestScript `protobuf:"bytes,115,opt,name=test_script,json=testScript,proto3,oneof"`
}

type ContainedResource_ValueSet struct {
	ValueSet *ValueSet `protobuf:"bytes,116,opt,name=value_set,json=valueSet,proto3,oneof"`
}

type ContainedResource_VisionPrescription struct {
	VisionPrescription *VisionPrescription `protobuf:"bytes,117,opt,name=vision_prescription,json=visionPrescription,proto3,oneof"`
}

func (*ContainedResource_Account) isContainedResource_OneofResource() {}

func (*ContainedResource_ActivityDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_AdverseEvent) isContainedResource_OneofResource() {}

func (*ContainedResource_AllergyIntolerance) isContainedResource_OneofResource() {}

func (*ContainedResource_Appointment) isContainedResource_OneofResource() {}

func (*ContainedResource_AppointmentResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_AuditEvent) isContainedResource_OneofResource() {}

func (*ContainedResource_Basic) isContainedResource_OneofResource() {}

func (*ContainedResource_Binary) isContainedResource_OneofResource() {}

func (*ContainedResource_BodySite) isContainedResource_OneofResource() {}

func (*ContainedResource_Bundle) isContainedResource_OneofResource() {}

func (*ContainedResource_CapabilityStatement) isContainedResource_OneofResource() {}

func (*ContainedResource_CarePlan) isContainedResource_OneofResource() {}

func (*ContainedResource_CareTeam) isContainedResource_OneofResource() {}

func (*ContainedResource_ChargeItem) isContainedResource_OneofResource() {}

func (*ContainedResource_Claim) isContainedResource_OneofResource() {}

func (*ContainedResource_ClaimResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_ClinicalImpression) isContainedResource_OneofResource() {}

func (*ContainedResource_CodeSystem) isContainedResource_OneofResource() {}

func (*ContainedResource_Communication) isContainedResource_OneofResource() {}

func (*ContainedResource_CommunicationRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_CompartmentDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_Composition) isContainedResource_OneofResource() {}

func (*ContainedResource_ConceptMap) isContainedResource_OneofResource() {}

func (*ContainedResource_Condition) isContainedResource_OneofResource() {}

func (*ContainedResource_Consent) isContainedResource_OneofResource() {}

func (*ContainedResource_Contract) isContainedResource_OneofResource() {}

func (*ContainedResource_Coverage) isContainedResource_OneofResource() {}

func (*ContainedResource_DataElement) isContainedResource_OneofResource() {}

func (*ContainedResource_DetectedIssue) isContainedResource_OneofResource() {}

func (*ContainedResource_Device) isContainedResource_OneofResource() {}

func (*ContainedResource_DeviceComponent) isContainedResource_OneofResource() {}

func (*ContainedResource_DeviceMetric) isContainedResource_OneofResource() {}

func (*ContainedResource_DeviceRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_DeviceUseStatement) isContainedResource_OneofResource() {}

func (*ContainedResource_DiagnosticReport) isContainedResource_OneofResource() {}

func (*ContainedResource_DocumentManifest) isContainedResource_OneofResource() {}

func (*ContainedResource_DocumentReference) isContainedResource_OneofResource() {}

func (*ContainedResource_EligibilityRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_EligibilityResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_Encounter) isContainedResource_OneofResource() {}

func (*ContainedResource_Endpoint) isContainedResource_OneofResource() {}

func (*ContainedResource_EnrollmentRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_EnrollmentResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_EpisodeOfCare) isContainedResource_OneofResource() {}

func (*ContainedResource_ExpansionProfile) isContainedResource_OneofResource() {}

func (*ContainedResource_ExplanationOfBenefit) isContainedResource_OneofResource() {}

func (*ContainedResource_FamilyMemberHistory) isContainedResource_OneofResource() {}

func (*ContainedResource_Flag) isContainedResource_OneofResource() {}

func (*ContainedResource_Goal) isContainedResource_OneofResource() {}

func (*ContainedResource_GraphDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_Group) isContainedResource_OneofResource() {}

func (*ContainedResource_GuidanceResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_HealthcareService) isContainedResource_OneofResource() {}

func (*ContainedResource_ImagingManifest) isContainedResource_OneofResource() {}

func (*ContainedResource_ImagingStudy) isContainedResource_OneofResource() {}

func (*ContainedResource_Immunization) isContainedResource_OneofResource() {}

func (*ContainedResource_ImmunizationRecommendation) isContainedResource_OneofResource() {}

func (*ContainedResource_ImplementationGuide) isContainedResource_OneofResource() {}

func (*ContainedResource_Library) isContainedResource_OneofResource() {}

func (*ContainedResource_Linkage) isContainedResource_OneofResource() {}

func (*ContainedResource_List) isContainedResource_OneofResource() {}

func (*ContainedResource_Location) isContainedResource_OneofResource() {}

func (*ContainedResource_Measure) isContainedResource_OneofResource() {}

func (*ContainedResource_MeasureReport) isContainedResource_OneofResource() {}

func (*ContainedResource_Media) isContainedResource_OneofResource() {}

func (*ContainedResource_Medication) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicationAdministration) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicationDispense) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicationRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicationStatement) isContainedResource_OneofResource() {}

func (*ContainedResource_MessageDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_MessageHeader) isContainedResource_OneofResource() {}

func (*ContainedResource_NamingSystem) isContainedResource_OneofResource() {}

func (*ContainedResource_NutritionOrder) isContainedResource_OneofResource() {}

func (*ContainedResource_Observation) isContainedResource_OneofResource() {}

func (*ContainedResource_OperationDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_OperationOutcome) isContainedResource_OneofResource() {}

func (*ContainedResource_Organization) isContainedResource_OneofResource() {}

func (*ContainedResource_Parameters) isContainedResource_OneofResource() {}

func (*ContainedResource_Patient) isContainedResource_OneofResource() {}

func (*ContainedResource_PaymentNotice) isContainedResource_OneofResource() {}

func (*ContainedResource_PaymentReconciliation) isContainedResource_OneofResource() {}

func (*ContainedResource_Person) isContainedResource_OneofResource() {}

func (*ContainedResource_PlanDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_Practitioner) isContainedResource_OneofResource() {}

func (*ContainedResource_PractitionerRole) isContainedResource_OneofResource() {}

func (*ContainedResource_Procedure) isContainedResource_OneofResource() {}

func (*ContainedResource_ProcedureRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_ProcessRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_ProcessResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_Provenance) isContainedResource_OneofResource() {}

func (*ContainedResource_Questionnaire) isContainedResource_OneofResource() {}

func (*ContainedResource_QuestionnaireResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_ReferralRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_RelatedPerson) isContainedResource_OneofResource() {}

func (*ContainedResource_RequestGroup) isContainedResource_OneofResource() {}

func (*ContainedResource_ResearchStudy) isContainedResource_OneofResource() {}

func (*ContainedResource_ResearchSubject) isContainedResource_OneofResource() {}

func (*ContainedResource_RiskAssessment) isContainedResource_OneofResource() {}

func (*ContainedResource_Schedule) isContainedResource_OneofResource() {}

func (*ContainedResource_SearchParameter) isContainedResource_OneofResource() {}

func (*ContainedResource_Sequence) isContainedResource_OneofResource() {}

func (*ContainedResource_ServiceDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_Slot) isContainedResource_OneofResource() {}

func (*ContainedResource_Specimen) isContainedResource_OneofResource() {}

func (*ContainedResource_StructureDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_StructureMap) isContainedResource_OneofResource() {}

func (*ContainedResource_Subscription) isContainedResource_OneofResource() {}

func (*ContainedResource_Substance) isContainedResource_OneofResource() {}

func (*ContainedResource_SupplyDelivery) isContainedResource_OneofResource() {}

func (*ContainedResource_SupplyRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_Task) isContainedResource_OneofResource() {}

func (*ContainedResource_TestReport) isContainedResource_OneofResource() {}

func (*ContainedResource_TestScript) isContainedResource_OneofResource() {}

func (*ContainedResource_ValueSet) isContainedResource_OneofResource() {}

func (*ContainedResource_VisionPrescription) isContainedResource_OneofResource() {}

func (m *ContainedResource) GetOneofResource() isContainedResource_OneofResource {
	if m != nil {
		return m.OneofResource
	}
	return nil
}

func (m *ContainedResource) GetAccount() *Account {
	if x, ok := m.GetOneofResource().(*ContainedResource_Account); ok {
		return x.Account
	}
	return nil
}

func (m *ContainedResource) GetActivityDefinition() *ActivityDefinition {
	if x, ok := m.GetOneofResource().(*ContainedResource_ActivityDefinition); ok {
		return x.ActivityDefinition
	}
	return nil
}

func (m *ContainedResource) GetAdverseEvent() *AdverseEvent {
	if x, ok := m.GetOneofResource().(*ContainedResource_AdverseEvent); ok {
		return x.AdverseEvent
	}
	return nil
}

func (m *ContainedResource) GetAllergyIntolerance() *AllergyIntolerance {
	if x, ok := m.GetOneofResource().(*ContainedResource_AllergyIntolerance); ok {
		return x.AllergyIntolerance
	}
	return nil
}

func (m *ContainedResource) GetAppointment() *Appointment {
	if x, ok := m.GetOneofResource().(*ContainedResource_Appointment); ok {
		return x.Appointment
	}
	return nil
}

func (m *ContainedResource) GetAppointmentResponse() *AppointmentResponse {
	if x, ok := m.GetOneofResource().(*ContainedResource_AppointmentResponse); ok {
		return x.AppointmentResponse
	}
	return nil
}

func (m *ContainedResource) GetAuditEvent() *AuditEvent {
	if x, ok := m.GetOneofResource().(*ContainedResource_AuditEvent); ok {
		return x.AuditEvent
	}
	return nil
}

func (m *ContainedResource) GetBasic() *Basic {
	if x, ok := m.GetOneofResource().(*ContainedResource_Basic); ok {
		return x.Basic
	}
	return nil
}

func (m *ContainedResource) GetBinary() *Binary {
	if x, ok := m.GetOneofResource().(*ContainedResource_Binary); ok {
		return x.Binary
	}
	return nil
}

func (m *ContainedResource) GetBodySite() *BodySite {
	if x, ok := m.GetOneofResource().(*ContainedResource_BodySite); ok {
		return x.BodySite
	}
	return nil
}

func (m *ContainedResource) GetBundle() *Bundle {
	if x, ok := m.GetOneofResource().(*ContainedResource_Bundle); ok {
		return x.Bundle
	}
	return nil
}

func (m *ContainedResource) GetCapabilityStatement() *CapabilityStatement {
	if x, ok := m.GetOneofResource().(*ContainedResource_CapabilityStatement); ok {
		return x.CapabilityStatement
	}
	return nil
}

func (m *ContainedResource) GetCarePlan() *CarePlan {
	if x, ok := m.GetOneofResource().(*ContainedResource_CarePlan); ok {
		return x.CarePlan
	}
	return nil
}

func (m *ContainedResource) GetCareTeam() *CareTeam {
	if x, ok := m.GetOneofResource().(*ContainedResource_CareTeam); ok {
		return x.CareTeam
	}
	return nil
}

func (m *ContainedResource) GetChargeItem() *ChargeItem {
	if x, ok := m.GetOneofResource().(*ContainedResource_ChargeItem); ok {
		return x.ChargeItem
	}
	return nil
}

func (m *ContainedResource) GetClaim() *Claim {
	if x, ok := m.GetOneofResource().(*ContainedResource_Claim); ok {
		return x.Claim
	}
	return nil
}

func (m *ContainedResource) GetClaimResponse() *ClaimResponse {
	if x, ok := m.GetOneofResource().(*ContainedResource_ClaimResponse); ok {
		return x.ClaimResponse
	}
	return nil
}

func (m *ContainedResource) GetClinicalImpression() *ClinicalImpression {
	if x, ok := m.GetOneofResource().(*ContainedResource_ClinicalImpression); ok {
		return x.ClinicalImpression
	}
	return nil
}

func (m *ContainedResource) GetCodeSystem() *CodeSystem {
	if x, ok := m.GetOneofResource().(*ContainedResource_CodeSystem); ok {
		return x.CodeSystem
	}
	return nil
}

func (m *ContainedResource) GetCommunication() *Communication {
	if x, ok := m.GetOneofResource().(*ContainedResource_Communication); ok {
		return x.Communication
	}
	return nil
}

func (m *ContainedResource) GetCommunicationRequest() *CommunicationRequest {
	if x, ok := m.GetOneofResource().(*ContainedResource_CommunicationRequest); ok {
		return x.CommunicationRequest
	}
	return nil
}

func (m *ContainedResource) GetCompartmentDefinition() *CompartmentDefinition {
	if x, ok := m.GetOneofResource().(*ContainedResource_CompartmentDefinition); ok {
		return x.CompartmentDefinition
	}
	return nil
}

func (m *ContainedResource) GetComposition() *Composition {
	if x, ok := m.GetOneofResource().(*ContainedResource_Composition); ok {
		return x.Composition
	}
	return nil
}

func (m *ContainedResource) GetConceptMap() *ConceptMap {
	if x, ok := m.GetOneofResource().(*ContainedResource_ConceptMap); ok {
		return x.ConceptMap
	}
	return nil
}

func (m *ContainedResource) GetCondition() *Condition {
	if x, ok := m.GetOneofResource().(*ContainedResource_Condition); ok {
		return x.Condition
	}
	return nil
}

func (m *ContainedResource) GetConsent() *Consent {
	if x, ok := m.GetOneofResource().(*ContainedResource_Consent); ok {
		return x.Consent
	}
	return nil
}

func (m *ContainedResource) GetContract() *Contract {
	if x, ok := m.GetOneofResource().(*ContainedResource_Contract); ok {
		return x.Contract
	}
	return nil
}

func (m *ContainedResource) GetCoverage() *Coverage {
	if x, ok := m.GetOneofResource().(*ContainedResource_Coverage); ok {
		return x.Coverage
	}
	return nil
}

func (m *ContainedResource) GetDataElement() *DataElement {
	if x, ok := m.GetOneofResource().(*ContainedResource_DataElement); ok {
		return x.DataElement
	}
	return nil
}

func (m *ContainedResource) GetDetectedIssue() *DetectedIssue {
	if x, ok := m.GetOneofResource().(*ContainedResource_DetectedIssue); ok {
		return x.DetectedIssue
	}
	return nil
}

func (m *ContainedResource) GetDevice() *Device {
	if x, ok := m.GetOneofResource().(*ContainedResource_Device); ok {
		return x.Device
	}
	return nil
}

func (m *ContainedResource) GetDeviceComponent() *DeviceComponent {
	if x, ok := m.GetOneofResource().(*ContainedResource_DeviceComponent); ok {
		return x.DeviceComponent
	}
	return nil
}

func (m *ContainedResource) GetDeviceMetric() *DeviceMetric {
	if x, ok := m.GetOneofResource().(*ContainedResource_DeviceMetric); ok {
		return x.DeviceMetric
	}
	return nil
}

func (m *ContainedResource) GetDeviceRequest() *DeviceRequest {
	if x, ok := m.GetOneofResource().(*ContainedResource_DeviceRequest); ok {
		return x.DeviceRequest
	}
	return nil
}

func (m *ContainedResource) GetDeviceUseStatement() *DeviceUseStatement {
	if x, ok := m.GetOneofResource().(*ContainedResource_DeviceUseStatement); ok {
		return x.DeviceUseStatement
	}
	return nil
}

func (m *ContainedResource) GetDiagnosticReport() *DiagnosticReport {
	if x, ok := m.GetOneofResource().(*ContainedResource_DiagnosticReport); ok {
		return x.DiagnosticReport
	}
	return nil
}

func (m *ContainedResource) GetDocumentManifest() *DocumentManifest {
	if x, ok := m.GetOneofResource().(*ContainedResource_DocumentManifest); ok {
		return x.DocumentManifest
	}
	return nil
}

func (m *ContainedResource) GetDocumentReference() *DocumentReference {
	if x, ok := m.GetOneofResource().(*ContainedResource_DocumentReference); ok {
		return x.DocumentReference
	}
	return nil
}

func (m *ContainedResource) GetEligibilityRequest() *EligibilityRequest {
	if x, ok := m.GetOneofResource().(*ContainedResource_EligibilityRequest); ok {
		return x.EligibilityRequest
	}
	return nil
}

func (m *ContainedResource) GetEligibilityResponse() *EligibilityResponse {
	if x, ok := m.GetOneofResource().(*ContainedResource_EligibilityResponse); ok {
		return x.EligibilityResponse
	}
	return nil
}

func (m *ContainedResource) GetEncounter() *Encounter {
	if x, ok := m.GetOneofResource().(*ContainedResource_Encounter); ok {
		return x.Encounter
	}
	return nil
}

func (m *ContainedResource) GetEndpoint() *Endpoint {
	if x, ok := m.GetOneofResource().(*ContainedResource_Endpoint); ok {
		return x.Endpoint
	}
	return nil
}

func (m *ContainedResource) GetEnrollmentRequest() *EnrollmentRequest {
	if x, ok := m.GetOneofResource().(*ContainedResource_EnrollmentRequest); ok {
		return x.EnrollmentRequest
	}
	return nil
}

func (m *ContainedResource) GetEnrollmentResponse() *EnrollmentResponse {
	if x, ok := m.GetOneofResource().(*ContainedResource_EnrollmentResponse); ok {
		return x.EnrollmentResponse
	}
	return nil
}

func (m *ContainedResource) GetEpisodeOfCare() *EpisodeOfCare {
	if x, ok := m.GetOneofResource().(*ContainedResource_EpisodeOfCare); ok {
		return x.EpisodeOfCare
	}
	return nil
}

func (m *ContainedResource) GetExpansionProfile() *ExpansionProfile {
	if x, ok := m.GetOneofResource().(*ContainedResource_ExpansionProfile); ok {
		return x.ExpansionProfile
	}
	return nil
}

func (m *ContainedResource) GetExplanationOfBenefit() *ExplanationOfBenefit {
	if x, ok := m.GetOneofResource().(*ContainedResource_ExplanationOfBenefit); ok {
		return x.ExplanationOfBenefit
	}
	return nil
}

func (m *ContainedResource) GetFamilyMemberHistory() *FamilyMemberHistory {
	if x, ok := m.GetOneofResource().(*ContainedResource_FamilyMemberHistory); ok {
		return x.FamilyMemberHistory
	}
	return nil
}

func (m *ContainedResource) GetFlag() *Flag {
	if x, ok := m.GetOneofResource().(*ContainedResource_Flag); ok {
		return x.Flag
	}
	return nil
}

func (m *ContainedResource) GetGoal() *Goal {
	if x, ok := m.GetOneofResource().(*ContainedResource_Goal); ok {
		return x.Goal
	}
	return nil
}

func (m *ContainedResource) GetGraphDefinition() *GraphDefinition {
	if x, ok := m.GetOneofResource().(*ContainedResource_GraphDefinition); ok {
		return x.GraphDefinition
	}
	return nil
}

func (m *ContainedResource) GetGroup() *Group {
	if x, ok := m.GetOneofResource().(*ContainedResource_Group); ok {
		return x.Group
	}
	return nil
}

func (m *ContainedResource) GetGuidanceResponse() *GuidanceResponse {
	if x, ok := m.GetOneofResource().(*ContainedResource_GuidanceResponse); ok {
		return x.GuidanceResponse
	}
	return nil
}

func (m *ContainedResource) GetHealthcareService() *HealthcareService {
	if x, ok := m.GetOneofResource().(*ContainedResource_HealthcareService); ok {
		return x.HealthcareService
	}
	return nil
}

func (m *ContainedResource) GetImagingManifest() *ImagingManifest {
	if x, ok := m.GetOneofResource().(*ContainedResource_ImagingManifest); ok {
		return x.ImagingManifest
	}
	return nil
}

func (m *ContainedResource) GetImagingStudy() *ImagingStudy {
	if x, ok := m.GetOneofResource().(*ContainedResource_ImagingStudy); ok {
		return x.ImagingStudy
	}
	return nil
}

func (m *ContainedResource) GetImmunization() *Immunization {
	if x, ok := m.GetOneofResource().(*ContainedResource_Immunization); ok {
		return x.Immunization
	}
	return nil
}

func (m *ContainedResource) GetImmunizationRecommendation() *ImmunizationRecommendation {
	if x, ok := m.GetOneofResource().(*ContainedResource_ImmunizationRecommendation); ok {
		return x.ImmunizationRecommendation
	}
	return nil
}

func (m *ContainedResource) GetImplementationGuide() *ImplementationGuide {
	if x, ok := m.GetOneofResource().(*ContainedResource_ImplementationGuide); ok {
		return x.ImplementationGuide
	}
	return nil
}

func (m *ContainedResource) GetLibrary() *Library {
	if x, ok := m.GetOneofResource().(*ContainedResource_Library); ok {
		return x.Library
	}
	return nil
}

func (m *ContainedResource) GetLinkage() *Linkage {
	if x, ok := m.GetOneofResource().(*ContainedResource_Linkage); ok {
		return x.Linkage
	}
	return nil
}

func (m *ContainedResource) GetList() *List {
	if x, ok := m.GetOneofResource().(*ContainedResource_List); ok {
		return x.List
	}
	return nil
}

func (m *ContainedResource) GetLocation() *Location {
	if x, ok := m.GetOneofResource().(*ContainedResource_Location); ok {
		return x.Location
	}
	return nil
}

func (m *ContainedResource) GetMeasure() *Measure {
	if x, ok := m.GetOneofResource().(*ContainedResource_Measure); ok {
		return x.Measure
	}
	return nil
}

func (m *ContainedResource) GetMeasureReport() *MeasureReport {
	if x, ok := m.GetOneofResource().(*ContainedResource_MeasureReport); ok {
		return x.MeasureReport
	}
	return nil
}

func (m *ContainedResource) GetMedia() *Media {
	if x, ok := m.GetOneofResource().(*ContainedResource_Media); ok {
		return x.Media
	}
	return nil
}

func (m *ContainedResource) GetMedication() *Medication {
	if x, ok := m.GetOneofResource().(*ContainedResource_Medication); ok {
		return x.Medication
	}
	return nil
}

func (m *ContainedResource) GetMedicationAdministration() *MedicationAdministration {
	if x, ok := m.GetOneofResource().(*ContainedResource_MedicationAdministration); ok {
		return x.MedicationAdministration
	}
	return nil
}

func (m *ContainedResource) GetMedicationDispense() *MedicationDispense {
	if x, ok := m.GetOneofResource().(*ContainedResource_MedicationDispense); ok {
		return x.MedicationDispense
	}
	return nil
}

func (m *ContainedResource) GetMedicationRequest() *MedicationRequest {
	if x, ok := m.GetOneofResource().(*ContainedResource_MedicationRequest); ok {
		return x.MedicationRequest
	}
	return nil
}

func (m *ContainedResource) GetMedicationStatement() *MedicationStatement {
	if x, ok := m.GetOneofResource().(*ContainedResource_MedicationStatement); ok {
		return x.MedicationStatement
	}
	return nil
}

func (m *ContainedResource) GetMessageDefinition() *MessageDefinition {
	if x, ok := m.GetOneofResource().(*ContainedResource_MessageDefinition); ok {
		return x.MessageDefinition
	}
	return nil
}

func (m *ContainedResource) GetMessageHeader() *MessageHeader {
	if x, ok := m.GetOneofResource().(*ContainedResource_MessageHeader); ok {
		return x.MessageHeader
	}
	return nil
}

func (m *ContainedResource) GetNamingSystem() *NamingSystem {
	if x, ok := m.GetOneofResource().(*ContainedResource_NamingSystem); ok {
		return x.NamingSystem
	}
	return nil
}

func (m *ContainedResource) GetNutritionOrder() *NutritionOrder {
	if x, ok := m.GetOneofResource().(*ContainedResource_NutritionOrder); ok {
		return x.NutritionOrder
	}
	return nil
}

func (m *ContainedResource) GetObservation() *Observation {
	if x, ok := m.GetOneofResource().(*ContainedResource_Observation); ok {
		return x.Observation
	}
	return nil
}

func (m *ContainedResource) GetOperationDefinition() *OperationDefinition {
	if x, ok := m.GetOneofResource().(*ContainedResource_OperationDefinition); ok {
		return x.OperationDefinition
	}
	return nil
}

func (m *ContainedResource) GetOperationOutcome() *OperationOutcome {
	if x, ok := m.GetOneofResource().(*ContainedResource_OperationOutcome); ok {
		return x.OperationOutcome
	}
	return nil
}

func (m *ContainedResource) GetOrganization() *Organization {
	if x, ok := m.GetOneofResource().(*ContainedResource_Organization); ok {
		return x.Organization
	}
	return nil
}

func (m *ContainedResource) GetParameters() *Parameters {
	if x, ok := m.GetOneofResource().(*ContainedResource_Parameters); ok {
		return x.Parameters
	}
	return nil
}

func (m *ContainedResource) GetPatient() *Patient {
	if x, ok := m.GetOneofResource().(*ContainedResource_Patient); ok {
		return x.Patient
	}
	return nil
}

func (m *ContainedResource) GetPaymentNotice() *PaymentNotice {
	if x, ok := m.GetOneofResource().(*ContainedResource_PaymentNotice); ok {
		return x.PaymentNotice
	}
	return nil
}

func (m *ContainedResource) GetPaymentReconciliation() *PaymentReconciliation {
	if x, ok := m.GetOneofResource().(*ContainedResource_PaymentReconciliation); ok {
		return x.PaymentReconciliation
	}
	return nil
}

func (m *ContainedResource) GetPerson() *Person {
	if x, ok := m.GetOneofResource().(*ContainedResource_Person); ok {
		return x.Person
	}
	return nil
}

func (m *ContainedResource) GetPlanDefinition() *PlanDefinition {
	if x, ok := m.GetOneofResource().(*ContainedResource_PlanDefinition); ok {
		return x.PlanDefinition
	}
	return nil
}

func (m *ContainedResource) GetPractitioner() *Practitioner {
	if x, ok := m.GetOneofResource().(*ContainedResource_Practitioner); ok {
		return x.Practitioner
	}
	return nil
}

func (m *ContainedResource) GetPractitionerRole() *PractitionerRole {
	if x, ok := m.GetOneofResource().(*ContainedResource_PractitionerRole); ok {
		return x.PractitionerRole
	}
	return nil
}

func (m *ContainedResource) GetProcedure() *Procedure {
	if x, ok := m.GetOneofResource().(*ContainedResource_Procedure); ok {
		return x.Procedure
	}
	return nil
}

func (m *ContainedResource) GetProcedureRequest() *ProcedureRequest {
	if x, ok := m.GetOneofResource().(*ContainedResource_ProcedureRequest); ok {
		return x.ProcedureRequest
	}
	return nil
}

func (m *ContainedResource) GetProcessRequest() *ProcessRequest {
	if x, ok := m.GetOneofResource().(*ContainedResource_ProcessRequest); ok {
		return x.ProcessRequest
	}
	return nil
}

func (m *ContainedResource) GetProcessResponse() *ProcessResponse {
	if x, ok := m.GetOneofResource().(*ContainedResource_ProcessResponse); ok {
		return x.ProcessResponse
	}
	return nil
}

func (m *ContainedResource) GetProvenance() *Provenance {
	if x, ok := m.GetOneofResource().(*ContainedResource_Provenance); ok {
		return x.Provenance
	}
	return nil
}

func (m *ContainedResource) GetQuestionnaire() *Questionnaire {
	if x, ok := m.GetOneofResource().(*ContainedResource_Questionnaire); ok {
		return x.Questionnaire
	}
	return nil
}

func (m *ContainedResource) GetQuestionnaireResponse() *QuestionnaireResponse {
	if x, ok := m.GetOneofResource().(*ContainedResource_QuestionnaireResponse); ok {
		return x.QuestionnaireResponse
	}
	return nil
}

func (m *ContainedResource) GetReferralRequest() *ReferralRequest {
	if x, ok := m.GetOneofResource().(*ContainedResource_ReferralRequest); ok {
		return x.ReferralRequest
	}
	return nil
}

func (m *ContainedResource) GetRelatedPerson() *RelatedPerson {
	if x, ok := m.GetOneofResource().(*ContainedResource_RelatedPerson); ok {
		return x.RelatedPerson
	}
	return nil
}

func (m *ContainedResource) GetRequestGroup() *RequestGroup {
	if x, ok := m.GetOneofResource().(*ContainedResource_RequestGroup); ok {
		return x.RequestGroup
	}
	return nil
}

func (m *ContainedResource) GetResearchStudy() *ResearchStudy {
	if x, ok := m.GetOneofResource().(*ContainedResource_ResearchStudy); ok {
		return x.ResearchStudy
	}
	return nil
}

func (m *ContainedResource) GetResearchSubject() *ResearchSubject {
	if x, ok := m.GetOneofResource().(*ContainedResource_ResearchSubject); ok {
		return x.ResearchSubject
	}
	return nil
}

func (m *ContainedResource) GetRiskAssessment() *RiskAssessment {
	if x, ok := m.GetOneofResource().(*ContainedResource_RiskAssessment); ok {
		return x.RiskAssessment
	}
	return nil
}

func (m *ContainedResource) GetSchedule() *Schedule {
	if x, ok := m.GetOneofResource().(*ContainedResource_Schedule); ok {
		return x.Schedule
	}
	return nil
}

func (m *ContainedResource) GetSearchParameter() *SearchParameter {
	if x, ok := m.GetOneofResource().(*ContainedResource_SearchParameter); ok {
		return x.SearchParameter
	}
	return nil
}

func (m *ContainedResource) GetSequence() *Sequence {
	if x, ok := m.GetOneofResource().(*ContainedResource_Sequence); ok {
		return x.Sequence
	}
	return nil
}

func (m *ContainedResource) GetServiceDefinition() *ServiceDefinition {
	if x, ok := m.GetOneofResource().(*ContainedResource_ServiceDefinition); ok {
		return x.ServiceDefinition
	}
	return nil
}

func (m *ContainedResource) GetSlot() *Slot {
	if x, ok := m.GetOneofResource().(*ContainedResource_Slot); ok {
		return x.Slot
	}
	return nil
}

func (m *ContainedResource) GetSpecimen() *Specimen {
	if x, ok := m.GetOneofResource().(*ContainedResource_Specimen); ok {
		return x.Specimen
	}
	return nil
}

func (m *ContainedResource) GetStructureDefinition() *StructureDefinition {
	if x, ok := m.GetOneofResource().(*ContainedResource_StructureDefinition); ok {
		return x.StructureDefinition
	}
	return nil
}

func (m *ContainedResource) GetStructureMap() *StructureMap {
	if x, ok := m.GetOneofResource().(*ContainedResource_StructureMap); ok {
		return x.StructureMap
	}
	return nil
}

func (m *ContainedResource) GetSubscription() *Subscription {
	if x, ok := m.GetOneofResource().(*ContainedResource_Subscription); ok {
		return x.Subscription
	}
	return nil
}

func (m *ContainedResource) GetSubstance() *Substance {
	if x, ok := m.GetOneofResource().(*ContainedResource_Substance); ok {
		return x.Substance
	}
	return nil
}

func (m *ContainedResource) GetSupplyDelivery() *SupplyDelivery {
	if x, ok := m.GetOneofResource().(*ContainedResource_SupplyDelivery); ok {
		return x.SupplyDelivery
	}
	return nil
}

func (m *ContainedResource) GetSupplyRequest() *SupplyRequest {
	if x, ok := m.GetOneofResource().(*ContainedResource_SupplyRequest); ok {
		return x.SupplyRequest
	}
	return nil
}

func (m *ContainedResource) GetTask() *Task {
	if x, ok := m.GetOneofResource().(*ContainedResource_Task); ok {
		return x.Task
	}
	return nil
}

func (m *ContainedResource) GetTestReport() *TestReport {
	if x, ok := m.GetOneofResource().(*ContainedResource_TestReport); ok {
		return x.TestReport
	}
	return nil
}

func (m *ContainedResource) GetTestScript() *TestScript {
	if x, ok := m.GetOneofResource().(*ContainedResource_TestScript); ok {
		return x.TestScript
	}
	return nil
}

func (m *ContainedResource) GetValueSet() *ValueSet {
	if x, ok := m.GetOneofResource().(*ContainedResource_ValueSet); ok {
		return x.ValueSet
	}
	return nil
}

func (m *ContainedResource) GetVisionPrescription() *VisionPrescription {
	if x, ok := m.GetOneofResource().(*ContainedResource_VisionPrescription); ok {
		return x.VisionPrescription
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ContainedResource) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ContainedResource_OneofMarshaler, _ContainedResource_OneofUnmarshaler, _ContainedResource_OneofSizer, []interface{}{
		(*ContainedResource_Account)(nil),
		(*ContainedResource_ActivityDefinition)(nil),
		(*ContainedResource_AdverseEvent)(nil),
		(*ContainedResource_AllergyIntolerance)(nil),
		(*ContainedResource_Appointment)(nil),
		(*ContainedResource_AppointmentResponse)(nil),
		(*ContainedResource_AuditEvent)(nil),
		(*ContainedResource_Basic)(nil),
		(*ContainedResource_Binary)(nil),
		(*ContainedResource_BodySite)(nil),
		(*ContainedResource_Bundle)(nil),
		(*ContainedResource_CapabilityStatement)(nil),
		(*ContainedResource_CarePlan)(nil),
		(*ContainedResource_CareTeam)(nil),
		(*ContainedResource_ChargeItem)(nil),
		(*ContainedResource_Claim)(nil),
		(*ContainedResource_ClaimResponse)(nil),
		(*ContainedResource_ClinicalImpression)(nil),
		(*ContainedResource_CodeSystem)(nil),
		(*ContainedResource_Communication)(nil),
		(*ContainedResource_CommunicationRequest)(nil),
		(*ContainedResource_CompartmentDefinition)(nil),
		(*ContainedResource_Composition)(nil),
		(*ContainedResource_ConceptMap)(nil),
		(*ContainedResource_Condition)(nil),
		(*ContainedResource_Consent)(nil),
		(*ContainedResource_Contract)(nil),
		(*ContainedResource_Coverage)(nil),
		(*ContainedResource_DataElement)(nil),
		(*ContainedResource_DetectedIssue)(nil),
		(*ContainedResource_Device)(nil),
		(*ContainedResource_DeviceComponent)(nil),
		(*ContainedResource_DeviceMetric)(nil),
		(*ContainedResource_DeviceRequest)(nil),
		(*ContainedResource_DeviceUseStatement)(nil),
		(*ContainedResource_DiagnosticReport)(nil),
		(*ContainedResource_DocumentManifest)(nil),
		(*ContainedResource_DocumentReference)(nil),
		(*ContainedResource_EligibilityRequest)(nil),
		(*ContainedResource_EligibilityResponse)(nil),
		(*ContainedResource_Encounter)(nil),
		(*ContainedResource_Endpoint)(nil),
		(*ContainedResource_EnrollmentRequest)(nil),
		(*ContainedResource_EnrollmentResponse)(nil),
		(*ContainedResource_EpisodeOfCare)(nil),
		(*ContainedResource_ExpansionProfile)(nil),
		(*ContainedResource_ExplanationOfBenefit)(nil),
		(*ContainedResource_FamilyMemberHistory)(nil),
		(*ContainedResource_Flag)(nil),
		(*ContainedResource_Goal)(nil),
		(*ContainedResource_GraphDefinition)(nil),
		(*ContainedResource_Group)(nil),
		(*ContainedResource_GuidanceResponse)(nil),
		(*ContainedResource_HealthcareService)(nil),
		(*ContainedResource_ImagingManifest)(nil),
		(*ContainedResource_ImagingStudy)(nil),
		(*ContainedResource_Immunization)(nil),
		(*ContainedResource_ImmunizationRecommendation)(nil),
		(*ContainedResource_ImplementationGuide)(nil),
		(*ContainedResource_Library)(nil),
		(*ContainedResource_Linkage)(nil),
		(*ContainedResource_List)(nil),
		(*ContainedResource_Location)(nil),
		(*ContainedResource_Measure)(nil),
		(*ContainedResource_MeasureReport)(nil),
		(*ContainedResource_Media)(nil),
		(*ContainedResource_Medication)(nil),
		(*ContainedResource_MedicationAdministration)(nil),
		(*ContainedResource_MedicationDispense)(nil),
		(*ContainedResource_MedicationRequest)(nil),
		(*ContainedResource_MedicationStatement)(nil),
		(*ContainedResource_MessageDefinition)(nil),
		(*ContainedResource_MessageHeader)(nil),
		(*ContainedResource_NamingSystem)(nil),
		(*ContainedResource_NutritionOrder)(nil),
		(*ContainedResource_Observation)(nil),
		(*ContainedResource_OperationDefinition)(nil),
		(*ContainedResource_OperationOutcome)(nil),
		(*ContainedResource_Organization)(nil),
		(*ContainedResource_Parameters)(nil),
		(*ContainedResource_Patient)(nil),
		(*ContainedResource_PaymentNotice)(nil),
		(*ContainedResource_PaymentReconciliation)(nil),
		(*ContainedResource_Person)(nil),
		(*ContainedResource_PlanDefinition)(nil),
		(*ContainedResource_Practitioner)(nil),
		(*ContainedResource_PractitionerRole)(nil),
		(*ContainedResource_Procedure)(nil),
		(*ContainedResource_ProcedureRequest)(nil),
		(*ContainedResource_ProcessRequest)(nil),
		(*ContainedResource_ProcessResponse)(nil),
		(*ContainedResource_Provenance)(nil),
		(*ContainedResource_Questionnaire)(nil),
		(*ContainedResource_QuestionnaireResponse)(nil),
		(*ContainedResource_ReferralRequest)(nil),
		(*ContainedResource_RelatedPerson)(nil),
		(*ContainedResource_RequestGroup)(nil),
		(*ContainedResource_ResearchStudy)(nil),
		(*ContainedResource_ResearchSubject)(nil),
		(*ContainedResource_RiskAssessment)(nil),
		(*ContainedResource_Schedule)(nil),
		(*ContainedResource_SearchParameter)(nil),
		(*ContainedResource_Sequence)(nil),
		(*ContainedResource_ServiceDefinition)(nil),
		(*ContainedResource_Slot)(nil),
		(*ContainedResource_Specimen)(nil),
		(*ContainedResource_StructureDefinition)(nil),
		(*ContainedResource_StructureMap)(nil),
		(*ContainedResource_Subscription)(nil),
		(*ContainedResource_Substance)(nil),
		(*ContainedResource_SupplyDelivery)(nil),
		(*ContainedResource_SupplyRequest)(nil),
		(*ContainedResource_Task)(nil),
		(*ContainedResource_TestReport)(nil),
		(*ContainedResource_TestScript)(nil),
		(*ContainedResource_ValueSet)(nil),
		(*ContainedResource_VisionPrescription)(nil),
	}
}

func _ContainedResource_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ContainedResource)
	// oneof_resource
	switch x := m.OneofResource.(type) {
	case *ContainedResource_Account:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Account); err != nil {
			return err
		}
	case *ContainedResource_ActivityDefinition:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActivityDefinition); err != nil {
			return err
		}
	case *ContainedResource_AdverseEvent:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdverseEvent); err != nil {
			return err
		}
	case *ContainedResource_AllergyIntolerance:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AllergyIntolerance); err != nil {
			return err
		}
	case *ContainedResource_Appointment:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Appointment); err != nil {
			return err
		}
	case *ContainedResource_AppointmentResponse:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AppointmentResponse); err != nil {
			return err
		}
	case *ContainedResource_AuditEvent:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AuditEvent); err != nil {
			return err
		}
	case *ContainedResource_Basic:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Basic); err != nil {
			return err
		}
	case *ContainedResource_Binary:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Binary); err != nil {
			return err
		}
	case *ContainedResource_BodySite:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BodySite); err != nil {
			return err
		}
	case *ContainedResource_Bundle:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Bundle); err != nil {
			return err
		}
	case *ContainedResource_CapabilityStatement:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CapabilityStatement); err != nil {
			return err
		}
	case *ContainedResource_CarePlan:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CarePlan); err != nil {
			return err
		}
	case *ContainedResource_CareTeam:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CareTeam); err != nil {
			return err
		}
	case *ContainedResource_ChargeItem:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChargeItem); err != nil {
			return err
		}
	case *ContainedResource_Claim:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Claim); err != nil {
			return err
		}
	case *ContainedResource_ClaimResponse:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClaimResponse); err != nil {
			return err
		}
	case *ContainedResource_ClinicalImpression:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClinicalImpression); err != nil {
			return err
		}
	case *ContainedResource_CodeSystem:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeSystem); err != nil {
			return err
		}
	case *ContainedResource_Communication:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Communication); err != nil {
			return err
		}
	case *ContainedResource_CommunicationRequest:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CommunicationRequest); err != nil {
			return err
		}
	case *ContainedResource_CompartmentDefinition:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CompartmentDefinition); err != nil {
			return err
		}
	case *ContainedResource_Composition:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Composition); err != nil {
			return err
		}
	case *ContainedResource_ConceptMap:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConceptMap); err != nil {
			return err
		}
	case *ContainedResource_Condition:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Condition); err != nil {
			return err
		}
	case *ContainedResource_Consent:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Consent); err != nil {
			return err
		}
	case *ContainedResource_Contract:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Contract); err != nil {
			return err
		}
	case *ContainedResource_Coverage:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coverage); err != nil {
			return err
		}
	case *ContainedResource_DataElement:
		b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DataElement); err != nil {
			return err
		}
	case *ContainedResource_DetectedIssue:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DetectedIssue); err != nil {
			return err
		}
	case *ContainedResource_Device:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Device); err != nil {
			return err
		}
	case *ContainedResource_DeviceComponent:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceComponent); err != nil {
			return err
		}
	case *ContainedResource_DeviceMetric:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceMetric); err != nil {
			return err
		}
	case *ContainedResource_DeviceRequest:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceRequest); err != nil {
			return err
		}
	case *ContainedResource_DeviceUseStatement:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceUseStatement); err != nil {
			return err
		}
	case *ContainedResource_DiagnosticReport:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DiagnosticReport); err != nil {
			return err
		}
	case *ContainedResource_DocumentManifest:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DocumentManifest); err != nil {
			return err
		}
	case *ContainedResource_DocumentReference:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DocumentReference); err != nil {
			return err
		}
	case *ContainedResource_EligibilityRequest:
		b.EncodeVarint(39<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EligibilityRequest); err != nil {
			return err
		}
	case *ContainedResource_EligibilityResponse:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EligibilityResponse); err != nil {
			return err
		}
	case *ContainedResource_Encounter:
		b.EncodeVarint(41<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Encounter); err != nil {
			return err
		}
	case *ContainedResource_Endpoint:
		b.EncodeVarint(42<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Endpoint); err != nil {
			return err
		}
	case *ContainedResource_EnrollmentRequest:
		b.EncodeVarint(43<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EnrollmentRequest); err != nil {
			return err
		}
	case *ContainedResource_EnrollmentResponse:
		b.EncodeVarint(44<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EnrollmentResponse); err != nil {
			return err
		}
	case *ContainedResource_EpisodeOfCare:
		b.EncodeVarint(45<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EpisodeOfCare); err != nil {
			return err
		}
	case *ContainedResource_ExpansionProfile:
		b.EncodeVarint(46<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ExpansionProfile); err != nil {
			return err
		}
	case *ContainedResource_ExplanationOfBenefit:
		b.EncodeVarint(47<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ExplanationOfBenefit); err != nil {
			return err
		}
	case *ContainedResource_FamilyMemberHistory:
		b.EncodeVarint(48<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FamilyMemberHistory); err != nil {
			return err
		}
	case *ContainedResource_Flag:
		b.EncodeVarint(49<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Flag); err != nil {
			return err
		}
	case *ContainedResource_Goal:
		b.EncodeVarint(50<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Goal); err != nil {
			return err
		}
	case *ContainedResource_GraphDefinition:
		b.EncodeVarint(51<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GraphDefinition); err != nil {
			return err
		}
	case *ContainedResource_Group:
		b.EncodeVarint(52<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Group); err != nil {
			return err
		}
	case *ContainedResource_GuidanceResponse:
		b.EncodeVarint(53<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GuidanceResponse); err != nil {
			return err
		}
	case *ContainedResource_HealthcareService:
		b.EncodeVarint(54<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HealthcareService); err != nil {
			return err
		}
	case *ContainedResource_ImagingManifest:
		b.EncodeVarint(55<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ImagingManifest); err != nil {
			return err
		}
	case *ContainedResource_ImagingStudy:
		b.EncodeVarint(56<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ImagingStudy); err != nil {
			return err
		}
	case *ContainedResource_Immunization:
		b.EncodeVarint(57<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Immunization); err != nil {
			return err
		}
	case *ContainedResource_ImmunizationRecommendation:
		b.EncodeVarint(58<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ImmunizationRecommendation); err != nil {
			return err
		}
	case *ContainedResource_ImplementationGuide:
		b.EncodeVarint(59<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ImplementationGuide); err != nil {
			return err
		}
	case *ContainedResource_Library:
		b.EncodeVarint(60<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Library); err != nil {
			return err
		}
	case *ContainedResource_Linkage:
		b.EncodeVarint(61<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Linkage); err != nil {
			return err
		}
	case *ContainedResource_List:
		b.EncodeVarint(62<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case *ContainedResource_Location:
		b.EncodeVarint(63<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Location); err != nil {
			return err
		}
	case *ContainedResource_Measure:
		b.EncodeVarint(64<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Measure); err != nil {
			return err
		}
	case *ContainedResource_MeasureReport:
		b.EncodeVarint(65<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MeasureReport); err != nil {
			return err
		}
	case *ContainedResource_Media:
		b.EncodeVarint(66<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Media); err != nil {
			return err
		}
	case *ContainedResource_Medication:
		b.EncodeVarint(67<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Medication); err != nil {
			return err
		}
	case *ContainedResource_MedicationAdministration:
		b.EncodeVarint(68<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MedicationAdministration); err != nil {
			return err
		}
	case *ContainedResource_MedicationDispense:
		b.EncodeVarint(69<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MedicationDispense); err != nil {
			return err
		}
	case *ContainedResource_MedicationRequest:
		b.EncodeVarint(70<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MedicationRequest); err != nil {
			return err
		}
	case *ContainedResource_MedicationStatement:
		b.EncodeVarint(71<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MedicationStatement); err != nil {
			return err
		}
	case *ContainedResource_MessageDefinition:
		b.EncodeVarint(72<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MessageDefinition); err != nil {
			return err
		}
	case *ContainedResource_MessageHeader:
		b.EncodeVarint(73<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MessageHeader); err != nil {
			return err
		}
	case *ContainedResource_NamingSystem:
		b.EncodeVarint(74<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NamingSystem); err != nil {
			return err
		}
	case *ContainedResource_NutritionOrder:
		b.EncodeVarint(75<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NutritionOrder); err != nil {
			return err
		}
	case *ContainedResource_Observation:
		b.EncodeVarint(76<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Observation); err != nil {
			return err
		}
	case *ContainedResource_OperationDefinition:
		b.EncodeVarint(77<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OperationDefinition); err != nil {
			return err
		}
	case *ContainedResource_OperationOutcome:
		b.EncodeVarint(78<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OperationOutcome); err != nil {
			return err
		}
	case *ContainedResource_Organization:
		b.EncodeVarint(79<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Organization); err != nil {
			return err
		}
	case *ContainedResource_Parameters:
		b.EncodeVarint(80<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameters); err != nil {
			return err
		}
	case *ContainedResource_Patient:
		b.EncodeVarint(81<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Patient); err != nil {
			return err
		}
	case *ContainedResource_PaymentNotice:
		b.EncodeVarint(82<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PaymentNotice); err != nil {
			return err
		}
	case *ContainedResource_PaymentReconciliation:
		b.EncodeVarint(83<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PaymentReconciliation); err != nil {
			return err
		}
	case *ContainedResource_Person:
		b.EncodeVarint(84<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Person); err != nil {
			return err
		}
	case *ContainedResource_PlanDefinition:
		b.EncodeVarint(85<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlanDefinition); err != nil {
			return err
		}
	case *ContainedResource_Practitioner:
		b.EncodeVarint(86<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Practitioner); err != nil {
			return err
		}
	case *ContainedResource_PractitionerRole:
		b.EncodeVarint(87<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PractitionerRole); err != nil {
			return err
		}
	case *ContainedResource_Procedure:
		b.EncodeVarint(88<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Procedure); err != nil {
			return err
		}
	case *ContainedResource_ProcedureRequest:
		b.EncodeVarint(89<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProcedureRequest); err != nil {
			return err
		}
	case *ContainedResource_ProcessRequest:
		b.EncodeVarint(90<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProcessRequest); err != nil {
			return err
		}
	case *ContainedResource_ProcessResponse:
		b.EncodeVarint(91<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProcessResponse); err != nil {
			return err
		}
	case *ContainedResource_Provenance:
		b.EncodeVarint(92<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Provenance); err != nil {
			return err
		}
	case *ContainedResource_Questionnaire:
		b.EncodeVarint(93<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Questionnaire); err != nil {
			return err
		}
	case *ContainedResource_QuestionnaireResponse:
		b.EncodeVarint(94<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QuestionnaireResponse); err != nil {
			return err
		}
	case *ContainedResource_ReferralRequest:
		b.EncodeVarint(95<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReferralRequest); err != nil {
			return err
		}
	case *ContainedResource_RelatedPerson:
		b.EncodeVarint(96<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RelatedPerson); err != nil {
			return err
		}
	case *ContainedResource_RequestGroup:
		b.EncodeVarint(97<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestGroup); err != nil {
			return err
		}
	case *ContainedResource_ResearchStudy:
		b.EncodeVarint(98<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResearchStudy); err != nil {
			return err
		}
	case *ContainedResource_ResearchSubject:
		b.EncodeVarint(99<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResearchSubject); err != nil {
			return err
		}
	case *ContainedResource_RiskAssessment:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RiskAssessment); err != nil {
			return err
		}
	case *ContainedResource_Schedule:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Schedule); err != nil {
			return err
		}
	case *ContainedResource_SearchParameter:
		b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SearchParameter); err != nil {
			return err
		}
	case *ContainedResource_Sequence:
		b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sequence); err != nil {
			return err
		}
	case *ContainedResource_ServiceDefinition:
		b.EncodeVarint(104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ServiceDefinition); err != nil {
			return err
		}
	case *ContainedResource_Slot:
		b.EncodeVarint(105<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Slot); err != nil {
			return err
		}
	case *ContainedResource_Specimen:
		b.EncodeVarint(106<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Specimen); err != nil {
			return err
		}
	case *ContainedResource_StructureDefinition:
		b.EncodeVarint(107<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StructureDefinition); err != nil {
			return err
		}
	case *ContainedResource_StructureMap:
		b.EncodeVarint(108<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StructureMap); err != nil {
			return err
		}
	case *ContainedResource_Subscription:
		b.EncodeVarint(109<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Subscription); err != nil {
			return err
		}
	case *ContainedResource_Substance:
		b.EncodeVarint(110<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Substance); err != nil {
			return err
		}
	case *ContainedResource_SupplyDelivery:
		b.EncodeVarint(111<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SupplyDelivery); err != nil {
			return err
		}
	case *ContainedResource_SupplyRequest:
		b.EncodeVarint(112<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SupplyRequest); err != nil {
			return err
		}
	case *ContainedResource_Task:
		b.EncodeVarint(113<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Task); err != nil {
			return err
		}
	case *ContainedResource_TestReport:
		b.EncodeVarint(114<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TestReport); err != nil {
			return err
		}
	case *ContainedResource_TestScript:
		b.EncodeVarint(115<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TestScript); err != nil {
			return err
		}
	case *ContainedResource_ValueSet:
		b.EncodeVarint(116<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ValueSet); err != nil {
			return err
		}
	case *ContainedResource_VisionPrescription:
		b.EncodeVarint(117<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VisionPrescription); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ContainedResource.OneofResource has unexpected type %T", x)
	}
	return nil
}

func _ContainedResource_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ContainedResource)
	switch tag {
	case 1: // oneof_resource.account
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Account)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Account{msg}
		return true, err
	case 2: // oneof_resource.activity_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActivityDefinition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ActivityDefinition{msg}
		return true, err
	case 3: // oneof_resource.adverse_event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdverseEvent)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_AdverseEvent{msg}
		return true, err
	case 4: // oneof_resource.allergy_intolerance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AllergyIntolerance)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_AllergyIntolerance{msg}
		return true, err
	case 5: // oneof_resource.appointment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Appointment)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Appointment{msg}
		return true, err
	case 6: // oneof_resource.appointment_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AppointmentResponse)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_AppointmentResponse{msg}
		return true, err
	case 7: // oneof_resource.audit_event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AuditEvent)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_AuditEvent{msg}
		return true, err
	case 8: // oneof_resource.basic
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Basic)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Basic{msg}
		return true, err
	case 9: // oneof_resource.binary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Binary)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Binary{msg}
		return true, err
	case 10: // oneof_resource.body_site
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BodySite)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_BodySite{msg}
		return true, err
	case 11: // oneof_resource.bundle
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Bundle)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Bundle{msg}
		return true, err
	case 12: // oneof_resource.capability_statement
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CapabilityStatement)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_CapabilityStatement{msg}
		return true, err
	case 13: // oneof_resource.care_plan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CarePlan)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_CarePlan{msg}
		return true, err
	case 14: // oneof_resource.care_team
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CareTeam)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_CareTeam{msg}
		return true, err
	case 15: // oneof_resource.charge_item
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChargeItem)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ChargeItem{msg}
		return true, err
	case 16: // oneof_resource.claim
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Claim)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Claim{msg}
		return true, err
	case 17: // oneof_resource.claim_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClaimResponse)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ClaimResponse{msg}
		return true, err
	case 18: // oneof_resource.clinical_impression
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClinicalImpression)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ClinicalImpression{msg}
		return true, err
	case 19: // oneof_resource.code_system
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeSystem)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_CodeSystem{msg}
		return true, err
	case 20: // oneof_resource.communication
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Communication)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Communication{msg}
		return true, err
	case 21: // oneof_resource.communication_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CommunicationRequest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_CommunicationRequest{msg}
		return true, err
	case 22: // oneof_resource.compartment_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CompartmentDefinition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_CompartmentDefinition{msg}
		return true, err
	case 23: // oneof_resource.composition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Composition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Composition{msg}
		return true, err
	case 24: // oneof_resource.concept_map
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConceptMap)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ConceptMap{msg}
		return true, err
	case 25: // oneof_resource.condition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Condition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Condition{msg}
		return true, err
	case 26: // oneof_resource.consent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Consent)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Consent{msg}
		return true, err
	case 27: // oneof_resource.contract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Contract)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Contract{msg}
		return true, err
	case 28: // oneof_resource.coverage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coverage)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Coverage{msg}
		return true, err
	case 29: // oneof_resource.data_element
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DataElement)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_DataElement{msg}
		return true, err
	case 30: // oneof_resource.detected_issue
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DetectedIssue)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_DetectedIssue{msg}
		return true, err
	case 31: // oneof_resource.device
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Device)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Device{msg}
		return true, err
	case 32: // oneof_resource.device_component
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceComponent)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_DeviceComponent{msg}
		return true, err
	case 33: // oneof_resource.device_metric
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceMetric)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_DeviceMetric{msg}
		return true, err
	case 34: // oneof_resource.device_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceRequest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_DeviceRequest{msg}
		return true, err
	case 35: // oneof_resource.device_use_statement
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceUseStatement)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_DeviceUseStatement{msg}
		return true, err
	case 36: // oneof_resource.diagnostic_report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DiagnosticReport)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_DiagnosticReport{msg}
		return true, err
	case 37: // oneof_resource.document_manifest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DocumentManifest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_DocumentManifest{msg}
		return true, err
	case 38: // oneof_resource.document_reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DocumentReference)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_DocumentReference{msg}
		return true, err
	case 39: // oneof_resource.eligibility_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EligibilityRequest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_EligibilityRequest{msg}
		return true, err
	case 40: // oneof_resource.eligibility_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EligibilityResponse)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_EligibilityResponse{msg}
		return true, err
	case 41: // oneof_resource.encounter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Encounter)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Encounter{msg}
		return true, err
	case 42: // oneof_resource.endpoint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Endpoint)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Endpoint{msg}
		return true, err
	case 43: // oneof_resource.enrollment_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EnrollmentRequest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_EnrollmentRequest{msg}
		return true, err
	case 44: // oneof_resource.enrollment_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EnrollmentResponse)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_EnrollmentResponse{msg}
		return true, err
	case 45: // oneof_resource.episode_of_care
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EpisodeOfCare)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_EpisodeOfCare{msg}
		return true, err
	case 46: // oneof_resource.expansion_profile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExpansionProfile)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ExpansionProfile{msg}
		return true, err
	case 47: // oneof_resource.explanation_of_benefit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExplanationOfBenefit)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ExplanationOfBenefit{msg}
		return true, err
	case 48: // oneof_resource.family_member_history
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FamilyMemberHistory)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_FamilyMemberHistory{msg}
		return true, err
	case 49: // oneof_resource.flag
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Flag)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Flag{msg}
		return true, err
	case 50: // oneof_resource.goal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Goal)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Goal{msg}
		return true, err
	case 51: // oneof_resource.graph_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GraphDefinition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_GraphDefinition{msg}
		return true, err
	case 52: // oneof_resource.group
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Group)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Group{msg}
		return true, err
	case 53: // oneof_resource.guidance_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GuidanceResponse)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_GuidanceResponse{msg}
		return true, err
	case 54: // oneof_resource.healthcare_service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HealthcareService)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_HealthcareService{msg}
		return true, err
	case 55: // oneof_resource.imaging_manifest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImagingManifest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ImagingManifest{msg}
		return true, err
	case 56: // oneof_resource.imaging_study
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImagingStudy)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ImagingStudy{msg}
		return true, err
	case 57: // oneof_resource.immunization
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Immunization)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Immunization{msg}
		return true, err
	case 58: // oneof_resource.immunization_recommendation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImmunizationRecommendation)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ImmunizationRecommendation{msg}
		return true, err
	case 59: // oneof_resource.implementation_guide
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImplementationGuide)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ImplementationGuide{msg}
		return true, err
	case 60: // oneof_resource.library
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Library)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Library{msg}
		return true, err
	case 61: // oneof_resource.linkage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Linkage)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Linkage{msg}
		return true, err
	case 62: // oneof_resource.list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(List)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_List{msg}
		return true, err
	case 63: // oneof_resource.location
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Location)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Location{msg}
		return true, err
	case 64: // oneof_resource.measure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Measure)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Measure{msg}
		return true, err
	case 65: // oneof_resource.measure_report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MeasureReport)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_MeasureReport{msg}
		return true, err
	case 66: // oneof_resource.media
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Media)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Media{msg}
		return true, err
	case 67: // oneof_resource.medication
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Medication)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Medication{msg}
		return true, err
	case 68: // oneof_resource.medication_administration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MedicationAdministration)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_MedicationAdministration{msg}
		return true, err
	case 69: // oneof_resource.medication_dispense
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MedicationDispense)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_MedicationDispense{msg}
		return true, err
	case 70: // oneof_resource.medication_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MedicationRequest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_MedicationRequest{msg}
		return true, err
	case 71: // oneof_resource.medication_statement
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MedicationStatement)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_MedicationStatement{msg}
		return true, err
	case 72: // oneof_resource.message_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MessageDefinition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_MessageDefinition{msg}
		return true, err
	case 73: // oneof_resource.message_header
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MessageHeader)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_MessageHeader{msg}
		return true, err
	case 74: // oneof_resource.naming_system
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NamingSystem)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_NamingSystem{msg}
		return true, err
	case 75: // oneof_resource.nutrition_order
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NutritionOrder)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_NutritionOrder{msg}
		return true, err
	case 76: // oneof_resource.observation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Observation)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Observation{msg}
		return true, err
	case 77: // oneof_resource.operation_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OperationDefinition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_OperationDefinition{msg}
		return true, err
	case 78: // oneof_resource.operation_outcome
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OperationOutcome)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_OperationOutcome{msg}
		return true, err
	case 79: // oneof_resource.organization
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Organization)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Organization{msg}
		return true, err
	case 80: // oneof_resource.parameters
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Parameters)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Parameters{msg}
		return true, err
	case 81: // oneof_resource.patient
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Patient)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Patient{msg}
		return true, err
	case 82: // oneof_resource.payment_notice
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PaymentNotice)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_PaymentNotice{msg}
		return true, err
	case 83: // oneof_resource.payment_reconciliation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PaymentReconciliation)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_PaymentReconciliation{msg}
		return true, err
	case 84: // oneof_resource.person
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Person)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Person{msg}
		return true, err
	case 85: // oneof_resource.plan_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlanDefinition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_PlanDefinition{msg}
		return true, err
	case 86: // oneof_resource.practitioner
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Practitioner)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Practitioner{msg}
		return true, err
	case 87: // oneof_resource.practitioner_role
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PractitionerRole)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_PractitionerRole{msg}
		return true, err
	case 88: // oneof_resource.procedure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Procedure)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Procedure{msg}
		return true, err
	case 89: // oneof_resource.procedure_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProcedureRequest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ProcedureRequest{msg}
		return true, err
	case 90: // oneof_resource.process_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProcessRequest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ProcessRequest{msg}
		return true, err
	case 91: // oneof_resource.process_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProcessResponse)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ProcessResponse{msg}
		return true, err
	case 92: // oneof_resource.provenance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Provenance)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Provenance{msg}
		return true, err
	case 93: // oneof_resource.questionnaire
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Questionnaire)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Questionnaire{msg}
		return true, err
	case 94: // oneof_resource.questionnaire_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QuestionnaireResponse)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_QuestionnaireResponse{msg}
		return true, err
	case 95: // oneof_resource.referral_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReferralRequest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ReferralRequest{msg}
		return true, err
	case 96: // oneof_resource.related_person
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RelatedPerson)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_RelatedPerson{msg}
		return true, err
	case 97: // oneof_resource.request_group
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGroup)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_RequestGroup{msg}
		return true, err
	case 98: // oneof_resource.research_study
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResearchStudy)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ResearchStudy{msg}
		return true, err
	case 99: // oneof_resource.research_subject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResearchSubject)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ResearchSubject{msg}
		return true, err
	case 100: // oneof_resource.risk_assessment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RiskAssessment)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_RiskAssessment{msg}
		return true, err
	case 101: // oneof_resource.schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Schedule)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Schedule{msg}
		return true, err
	case 102: // oneof_resource.search_parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SearchParameter)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_SearchParameter{msg}
		return true, err
	case 103: // oneof_resource.sequence
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sequence)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Sequence{msg}
		return true, err
	case 104: // oneof_resource.service_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceDefinition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ServiceDefinition{msg}
		return true, err
	case 105: // oneof_resource.slot
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Slot)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Slot{msg}
		return true, err
	case 106: // oneof_resource.specimen
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Specimen)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Specimen{msg}
		return true, err
	case 107: // oneof_resource.structure_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StructureDefinition)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_StructureDefinition{msg}
		return true, err
	case 108: // oneof_resource.structure_map
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StructureMap)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_StructureMap{msg}
		return true, err
	case 109: // oneof_resource.subscription
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Subscription)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Subscription{msg}
		return true, err
	case 110: // oneof_resource.substance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Substance)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Substance{msg}
		return true, err
	case 111: // oneof_resource.supply_delivery
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SupplyDelivery)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_SupplyDelivery{msg}
		return true, err
	case 112: // oneof_resource.supply_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SupplyRequest)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_SupplyRequest{msg}
		return true, err
	case 113: // oneof_resource.task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Task)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_Task{msg}
		return true, err
	case 114: // oneof_resource.test_report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TestReport)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_TestReport{msg}
		return true, err
	case 115: // oneof_resource.test_script
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TestScript)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_TestScript{msg}
		return true, err
	case 116: // oneof_resource.value_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValueSet)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_ValueSet{msg}
		return true, err
	case 117: // oneof_resource.vision_prescription
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VisionPrescription)
		err := b.DecodeMessage(msg)
		m.OneofResource = &ContainedResource_VisionPrescription{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ContainedResource_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ContainedResource)
	// oneof_resource
	switch x := m.OneofResource.(type) {
	case *ContainedResource_Account:
		s := proto.Size(x.Account)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ActivityDefinition:
		s := proto.Size(x.ActivityDefinition)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_AdverseEvent:
		s := proto.Size(x.AdverseEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_AllergyIntolerance:
		s := proto.Size(x.AllergyIntolerance)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Appointment:
		s := proto.Size(x.Appointment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_AppointmentResponse:
		s := proto.Size(x.AppointmentResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_AuditEvent:
		s := proto.Size(x.AuditEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Basic:
		s := proto.Size(x.Basic)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Binary:
		s := proto.Size(x.Binary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_BodySite:
		s := proto.Size(x.BodySite)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Bundle:
		s := proto.Size(x.Bundle)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_CapabilityStatement:
		s := proto.Size(x.CapabilityStatement)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_CarePlan:
		s := proto.Size(x.CarePlan)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_CareTeam:
		s := proto.Size(x.CareTeam)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ChargeItem:
		s := proto.Size(x.ChargeItem)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Claim:
		s := proto.Size(x.Claim)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ClaimResponse:
		s := proto.Size(x.ClaimResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ClinicalImpression:
		s := proto.Size(x.ClinicalImpression)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_CodeSystem:
		s := proto.Size(x.CodeSystem)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Communication:
		s := proto.Size(x.Communication)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_CommunicationRequest:
		s := proto.Size(x.CommunicationRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_CompartmentDefinition:
		s := proto.Size(x.CompartmentDefinition)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Composition:
		s := proto.Size(x.Composition)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ConceptMap:
		s := proto.Size(x.ConceptMap)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Condition:
		s := proto.Size(x.Condition)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Consent:
		s := proto.Size(x.Consent)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Contract:
		s := proto.Size(x.Contract)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Coverage:
		s := proto.Size(x.Coverage)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_DataElement:
		s := proto.Size(x.DataElement)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_DetectedIssue:
		s := proto.Size(x.DetectedIssue)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Device:
		s := proto.Size(x.Device)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_DeviceComponent:
		s := proto.Size(x.DeviceComponent)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_DeviceMetric:
		s := proto.Size(x.DeviceMetric)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_DeviceRequest:
		s := proto.Size(x.DeviceRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_DeviceUseStatement:
		s := proto.Size(x.DeviceUseStatement)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_DiagnosticReport:
		s := proto.Size(x.DiagnosticReport)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_DocumentManifest:
		s := proto.Size(x.DocumentManifest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_DocumentReference:
		s := proto.Size(x.DocumentReference)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_EligibilityRequest:
		s := proto.Size(x.EligibilityRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_EligibilityResponse:
		s := proto.Size(x.EligibilityResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Encounter:
		s := proto.Size(x.Encounter)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Endpoint:
		s := proto.Size(x.Endpoint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_EnrollmentRequest:
		s := proto.Size(x.EnrollmentRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_EnrollmentResponse:
		s := proto.Size(x.EnrollmentResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_EpisodeOfCare:
		s := proto.Size(x.EpisodeOfCare)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ExpansionProfile:
		s := proto.Size(x.ExpansionProfile)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ExplanationOfBenefit:
		s := proto.Size(x.ExplanationOfBenefit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_FamilyMemberHistory:
		s := proto.Size(x.FamilyMemberHistory)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Flag:
		s := proto.Size(x.Flag)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Goal:
		s := proto.Size(x.Goal)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_GraphDefinition:
		s := proto.Size(x.GraphDefinition)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Group:
		s := proto.Size(x.Group)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_GuidanceResponse:
		s := proto.Size(x.GuidanceResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_HealthcareService:
		s := proto.Size(x.HealthcareService)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ImagingManifest:
		s := proto.Size(x.ImagingManifest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ImagingStudy:
		s := proto.Size(x.ImagingStudy)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Immunization:
		s := proto.Size(x.Immunization)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ImmunizationRecommendation:
		s := proto.Size(x.ImmunizationRecommendation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ImplementationGuide:
		s := proto.Size(x.ImplementationGuide)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Library:
		s := proto.Size(x.Library)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Linkage:
		s := proto.Size(x.Linkage)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_List:
		s := proto.Size(x.List)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Location:
		s := proto.Size(x.Location)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Measure:
		s := proto.Size(x.Measure)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_MeasureReport:
		s := proto.Size(x.MeasureReport)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Media:
		s := proto.Size(x.Media)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Medication:
		s := proto.Size(x.Medication)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_MedicationAdministration:
		s := proto.Size(x.MedicationAdministration)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_MedicationDispense:
		s := proto.Size(x.MedicationDispense)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_MedicationRequest:
		s := proto.Size(x.MedicationRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_MedicationStatement:
		s := proto.Size(x.MedicationStatement)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_MessageDefinition:
		s := proto.Size(x.MessageDefinition)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_MessageHeader:
		s := proto.Size(x.MessageHeader)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_NamingSystem:
		s := proto.Size(x.NamingSystem)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_NutritionOrder:
		s := proto.Size(x.NutritionOrder)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Observation:
		s := proto.Size(x.Observation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_OperationDefinition:
		s := proto.Size(x.OperationDefinition)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_OperationOutcome:
		s := proto.Size(x.OperationOutcome)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Organization:
		s := proto.Size(x.Organization)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Parameters:
		s := proto.Size(x.Parameters)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Patient:
		s := proto.Size(x.Patient)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_PaymentNotice:
		s := proto.Size(x.PaymentNotice)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_PaymentReconciliation:
		s := proto.Size(x.PaymentReconciliation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Person:
		s := proto.Size(x.Person)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_PlanDefinition:
		s := proto.Size(x.PlanDefinition)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Practitioner:
		s := proto.Size(x.Practitioner)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_PractitionerRole:
		s := proto.Size(x.PractitionerRole)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Procedure:
		s := proto.Size(x.Procedure)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ProcedureRequest:
		s := proto.Size(x.ProcedureRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ProcessRequest:
		s := proto.Size(x.ProcessRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ProcessResponse:
		s := proto.Size(x.ProcessResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Provenance:
		s := proto.Size(x.Provenance)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Questionnaire:
		s := proto.Size(x.Questionnaire)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_QuestionnaireResponse:
		s := proto.Size(x.QuestionnaireResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ReferralRequest:
		s := proto.Size(x.ReferralRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_RelatedPerson:
		s := proto.Size(x.RelatedPerson)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_RequestGroup:
		s := proto.Size(x.RequestGroup)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ResearchStudy:
		s := proto.Size(x.ResearchStudy)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ResearchSubject:
		s := proto.Size(x.ResearchSubject)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_RiskAssessment:
		s := proto.Size(x.RiskAssessment)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Schedule:
		s := proto.Size(x.Schedule)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_SearchParameter:
		s := proto.Size(x.SearchParameter)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Sequence:
		s := proto.Size(x.Sequence)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ServiceDefinition:
		s := proto.Size(x.ServiceDefinition)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Slot:
		s := proto.Size(x.Slot)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Specimen:
		s := proto.Size(x.Specimen)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_StructureDefinition:
		s := proto.Size(x.StructureDefinition)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_StructureMap:
		s := proto.Size(x.StructureMap)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Subscription:
		s := proto.Size(x.Subscription)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Substance:
		s := proto.Size(x.Substance)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_SupplyDelivery:
		s := proto.Size(x.SupplyDelivery)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_SupplyRequest:
		s := proto.Size(x.SupplyRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_Task:
		s := proto.Size(x.Task)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_TestReport:
		s := proto.Size(x.TestReport)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_TestScript:
		s := proto.Size(x.TestScript)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_ValueSet:
		s := proto.Size(x.ValueSet)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainedResource_VisionPrescription:
		s := proto.Size(x.VisionPrescription)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Account)(nil), "google.fhir.stu3.proto.Account")
	proto.RegisterType((*Account_Coverage)(nil), "google.fhir.stu3.proto.Account.Coverage")
	proto.RegisterType((*Account_Guarantor)(nil), "google.fhir.stu3.proto.Account.Guarantor")
	proto.RegisterType((*ActivityDefinition)(nil), "google.fhir.stu3.proto.ActivityDefinition")
	proto.RegisterType((*ActivityDefinition_TimingType)(nil), "google.fhir.stu3.proto.ActivityDefinition.TimingType")
	proto.RegisterType((*ActivityDefinition_Participant)(nil), "google.fhir.stu3.proto.ActivityDefinition.Participant")
	proto.RegisterType((*ActivityDefinition_Product)(nil), "google.fhir.stu3.proto.ActivityDefinition.Product")
	proto.RegisterType((*ActivityDefinition_DynamicValue)(nil), "google.fhir.stu3.proto.ActivityDefinition.DynamicValue")
	proto.RegisterType((*AdverseEvent)(nil), "google.fhir.stu3.proto.AdverseEvent")
	proto.RegisterType((*AdverseEvent_SuspectEntity)(nil), "google.fhir.stu3.proto.AdverseEvent.SuspectEntity")
	proto.RegisterType((*AllergyIntolerance)(nil), "google.fhir.stu3.proto.AllergyIntolerance")
	proto.RegisterType((*AllergyIntolerance_Onset)(nil), "google.fhir.stu3.proto.AllergyIntolerance.Onset")
	proto.RegisterType((*AllergyIntolerance_Reaction)(nil), "google.fhir.stu3.proto.AllergyIntolerance.Reaction")
	proto.RegisterType((*Appointment)(nil), "google.fhir.stu3.proto.Appointment")
	proto.RegisterType((*Appointment_Participant)(nil), "google.fhir.stu3.proto.Appointment.Participant")
	proto.RegisterType((*AppointmentResponse)(nil), "google.fhir.stu3.proto.AppointmentResponse")
	proto.RegisterType((*AuditEvent)(nil), "google.fhir.stu3.proto.AuditEvent")
	proto.RegisterType((*AuditEvent_Agent)(nil), "google.fhir.stu3.proto.AuditEvent.Agent")
	proto.RegisterType((*AuditEvent_Agent_Network)(nil), "google.fhir.stu3.proto.AuditEvent.Agent.Network")
	proto.RegisterType((*AuditEvent_Source)(nil), "google.fhir.stu3.proto.AuditEvent.Source")
	proto.RegisterType((*AuditEvent_Entity)(nil), "google.fhir.stu3.proto.AuditEvent.Entity")
	proto.RegisterType((*AuditEvent_Entity_Detail)(nil), "google.fhir.stu3.proto.AuditEvent.Entity.Detail")
	proto.RegisterType((*Basic)(nil), "google.fhir.stu3.proto.Basic")
	proto.RegisterType((*Binary)(nil), "google.fhir.stu3.proto.Binary")
	proto.RegisterType((*BodySite)(nil), "google.fhir.stu3.proto.BodySite")
	proto.RegisterType((*Bundle)(nil), "google.fhir.stu3.proto.Bundle")
	proto.RegisterType((*Bundle_Link)(nil), "google.fhir.stu3.proto.Bundle.Link")
	proto.RegisterType((*Bundle_Entry)(nil), "google.fhir.stu3.proto.Bundle.Entry")
	proto.RegisterType((*Bundle_Entry_Search)(nil), "google.fhir.stu3.proto.Bundle.Entry.Search")
	proto.RegisterType((*Bundle_Entry_Request)(nil), "google.fhir.stu3.proto.Bundle.Entry.Request")
	proto.RegisterType((*Bundle_Entry_Response)(nil), "google.fhir.stu3.proto.Bundle.Entry.Response")
	proto.RegisterType((*CapabilityStatement)(nil), "google.fhir.stu3.proto.CapabilityStatement")
	proto.RegisterType((*CapabilityStatement_Software)(nil), "google.fhir.stu3.proto.CapabilityStatement.Software")
	proto.RegisterType((*CapabilityStatement_Implementation)(nil), "google.fhir.stu3.proto.CapabilityStatement.Implementation")
	proto.RegisterType((*CapabilityStatement_Rest)(nil), "google.fhir.stu3.proto.CapabilityStatement.Rest")
	proto.RegisterType((*CapabilityStatement_Rest_Security)(nil), "google.fhir.stu3.proto.CapabilityStatement.Rest.Security")
	proto.RegisterType((*CapabilityStatement_Rest_Security_Certificate)(nil), "google.fhir.stu3.proto.CapabilityStatement.Rest.Security.Certificate")
	proto.RegisterType((*CapabilityStatement_Rest_Resource)(nil), "google.fhir.stu3.proto.CapabilityStatement.Rest.Resource")
	proto.RegisterType((*CapabilityStatement_Rest_Resource_ResourceInteraction)(nil), "google.fhir.stu3.proto.CapabilityStatement.Rest.Resource.ResourceInteraction")
	proto.RegisterType((*CapabilityStatement_Rest_Resource_SearchParam)(nil), "google.fhir.stu3.proto.CapabilityStatement.Rest.Resource.SearchParam")
	proto.RegisterType((*CapabilityStatement_Rest_SystemInteraction)(nil), "google.fhir.stu3.proto.CapabilityStatement.Rest.SystemInteraction")
	proto.RegisterType((*CapabilityStatement_Rest_Operation)(nil), "google.fhir.stu3.proto.CapabilityStatement.Rest.Operation")
	proto.RegisterType((*CapabilityStatement_Messaging)(nil), "google.fhir.stu3.proto.CapabilityStatement.Messaging")
	proto.RegisterType((*CapabilityStatement_Messaging_Endpoint)(nil), "google.fhir.stu3.proto.CapabilityStatement.Messaging.Endpoint")
	proto.RegisterType((*CapabilityStatement_Messaging_SupportedMessage)(nil), "google.fhir.stu3.proto.CapabilityStatement.Messaging.SupportedMessage")
	proto.RegisterType((*CapabilityStatement_Messaging_Event)(nil), "google.fhir.stu3.proto.CapabilityStatement.Messaging.Event")
	proto.RegisterType((*CapabilityStatement_Document)(nil), "google.fhir.stu3.proto.CapabilityStatement.Document")
	proto.RegisterType((*CarePlan)(nil), "google.fhir.stu3.proto.CarePlan")
	proto.RegisterType((*CarePlan_Activity)(nil), "google.fhir.stu3.proto.CarePlan.Activity")
	proto.RegisterType((*CarePlan_Activity_Detail)(nil), "google.fhir.stu3.proto.CarePlan.Activity.Detail")
	proto.RegisterType((*CarePlan_Activity_Detail_Scheduled)(nil), "google.fhir.stu3.proto.CarePlan.Activity.Detail.Scheduled")
	proto.RegisterType((*CarePlan_Activity_Detail_Product)(nil), "google.fhir.stu3.proto.CarePlan.Activity.Detail.Product")
	proto.RegisterType((*CareTeam)(nil), "google.fhir.stu3.proto.CareTeam")
	proto.RegisterType((*CareTeam_Participant)(nil), "google.fhir.stu3.proto.CareTeam.Participant")
	proto.RegisterType((*ChargeItem)(nil), "google.fhir.stu3.proto.ChargeItem")
	proto.RegisterType((*ChargeItem_Occurrence)(nil), "google.fhir.stu3.proto.ChargeItem.Occurrence")
	proto.RegisterType((*ChargeItem_Participant)(nil), "google.fhir.stu3.proto.ChargeItem.Participant")
	proto.RegisterType((*Claim)(nil), "google.fhir.stu3.proto.Claim")
	proto.RegisterType((*Claim_RelatedClaim)(nil), "google.fhir.stu3.proto.Claim.RelatedClaim")
	proto.RegisterType((*Claim_Payee)(nil), "google.fhir.stu3.proto.Claim.Payee")
	proto.RegisterType((*Claim_CareTeam)(nil), "google.fhir.stu3.proto.Claim.CareTeam")
	proto.RegisterType((*Claim_SpecialCondition)(nil), "google.fhir.stu3.proto.Claim.SpecialCondition")
	proto.RegisterType((*Claim_SpecialCondition_TimingType)(nil), "google.fhir.stu3.proto.Claim.SpecialCondition.TimingType")
	proto.RegisterType((*Claim_SpecialCondition_Value)(nil), "google.fhir.stu3.proto.Claim.SpecialCondition.Value")
	proto.RegisterType((*Claim_Diagnosis)(nil), "google.fhir.stu3.proto.Claim.Diagnosis")
	proto.RegisterType((*Claim_Diagnosis_DiagnosisType)(nil), "google.fhir.stu3.proto.Claim.Diagnosis.DiagnosisType")
	proto.RegisterType((*Claim_Procedure)(nil), "google.fhir.stu3.proto.Claim.Procedure")
	proto.RegisterType((*Claim_Procedure_ProcedureType)(nil), "google.fhir.stu3.proto.Claim.Procedure.ProcedureType")
	proto.RegisterType((*Claim_Insurance)(nil), "google.fhir.stu3.proto.Claim.Insurance")
	proto.RegisterType((*Claim_Accident)(nil), "google.fhir.stu3.proto.Claim.Accident")
	proto.RegisterType((*Claim_Accident_Location)(nil), "google.fhir.stu3.proto.Claim.Accident.Location")
	proto.RegisterType((*Claim_Item)(nil), "google.fhir.stu3.proto.Claim.Item")
	proto.RegisterType((*Claim_Item_Serviced)(nil), "google.fhir.stu3.proto.Claim.Item.Serviced")
	proto.RegisterType((*Claim_Item_Location)(nil), "google.fhir.stu3.proto.Claim.Item.Location")
	proto.RegisterType((*Claim_Item_Detail)(nil), "google.fhir.stu3.proto.Claim.Item.Detail")
	proto.RegisterType((*Claim_Item_Detail_SubDetail)(nil), "google.fhir.stu3.proto.Claim.Item.Detail.SubDetail")
	proto.RegisterType((*ClaimResponse)(nil), "google.fhir.stu3.proto.ClaimResponse")
	proto.RegisterType((*ClaimResponse_Item)(nil), "google.fhir.stu3.proto.ClaimResponse.Item")
	proto.RegisterType((*ClaimResponse_Item_Adjudication)(nil), "google.fhir.stu3.proto.ClaimResponse.Item.Adjudication")
	proto.RegisterType((*ClaimResponse_Item_ItemDetail)(nil), "google.fhir.stu3.proto.ClaimResponse.Item.ItemDetail")
	proto.RegisterType((*ClaimResponse_Item_ItemDetail_SubDetail)(nil), "google.fhir.stu3.proto.ClaimResponse.Item.ItemDetail.SubDetail")
	proto.RegisterType((*ClaimResponse_AddedItem)(nil), "google.fhir.stu3.proto.ClaimResponse.AddedItem")
	proto.RegisterType((*ClaimResponse_AddedItem_AddedItemsDetail)(nil), "google.fhir.stu3.proto.ClaimResponse.AddedItem.AddedItemsDetail")
	proto.RegisterType((*ClaimResponse_Error)(nil), "google.fhir.stu3.proto.ClaimResponse.Error")
	proto.RegisterType((*ClaimResponse_Payment)(nil), "google.fhir.stu3.proto.ClaimResponse.Payment")
	proto.RegisterType((*ClaimResponse_Note)(nil), "google.fhir.stu3.proto.ClaimResponse.Note")
	proto.RegisterType((*ClaimResponse_Insurance)(nil), "google.fhir.stu3.proto.ClaimResponse.Insurance")
	proto.RegisterType((*ClinicalImpression)(nil), "google.fhir.stu3.proto.ClinicalImpression")
	proto.RegisterType((*ClinicalImpression_Effective)(nil), "google.fhir.stu3.proto.ClinicalImpression.Effective")
	proto.RegisterType((*ClinicalImpression_Investigation)(nil), "google.fhir.stu3.proto.ClinicalImpression.Investigation")
	proto.RegisterType((*ClinicalImpression_Finding)(nil), "google.fhir.stu3.proto.ClinicalImpression.Finding")
	proto.RegisterType((*ClinicalImpression_Finding_Item)(nil), "google.fhir.stu3.proto.ClinicalImpression.Finding.Item")
	proto.RegisterType((*CodeSystem)(nil), "google.fhir.stu3.proto.CodeSystem")
	proto.RegisterType((*CodeSystem_Filter)(nil), "google.fhir.stu3.proto.CodeSystem.Filter")
	proto.RegisterType((*CodeSystem_Property)(nil), "google.fhir.stu3.proto.CodeSystem.Property")
	proto.RegisterType((*CodeSystem_ConceptDefinition)(nil), "google.fhir.stu3.proto.CodeSystem.ConceptDefinition")
	proto.RegisterType((*CodeSystem_ConceptDefinition_Designation)(nil), "google.fhir.stu3.proto.CodeSystem.ConceptDefinition.Designation")
	proto.RegisterType((*CodeSystem_ConceptDefinition_ConceptProperty)(nil), "google.fhir.stu3.proto.CodeSystem.ConceptDefinition.ConceptProperty")
	proto.RegisterType((*CodeSystem_ConceptDefinition_ConceptProperty_Value)(nil), "google.fhir.stu3.proto.CodeSystem.ConceptDefinition.ConceptProperty.Value")
	proto.RegisterType((*Communication)(nil), "google.fhir.stu3.proto.Communication")
	proto.RegisterType((*Communication_Payload)(nil), "google.fhir.stu3.proto.Communication.Payload")
	proto.RegisterType((*Communication_Payload_Content)(nil), "google.fhir.stu3.proto.Communication.Payload.Content")
	proto.RegisterType((*CommunicationRequest)(nil), "google.fhir.stu3.proto.CommunicationRequest")
	proto.RegisterType((*CommunicationRequest_Payload)(nil), "google.fhir.stu3.proto.CommunicationRequest.Payload")
	proto.RegisterType((*CommunicationRequest_Payload_Content)(nil), "google.fhir.stu3.proto.CommunicationRequest.Payload.Content")
	proto.RegisterType((*CommunicationRequest_Occurrence)(nil), "google.fhir.stu3.proto.CommunicationRequest.Occurrence")
	proto.RegisterType((*CommunicationRequest_Requester)(nil), "google.fhir.stu3.proto.CommunicationRequest.Requester")
	proto.RegisterType((*CompartmentDefinition)(nil), "google.fhir.stu3.proto.CompartmentDefinition")
	proto.RegisterType((*CompartmentDefinition_Resource)(nil), "google.fhir.stu3.proto.CompartmentDefinition.Resource")
	proto.RegisterType((*Composition)(nil), "google.fhir.stu3.proto.Composition")
	proto.RegisterType((*Composition_Attester)(nil), "google.fhir.stu3.proto.Composition.Attester")
	proto.RegisterType((*Composition_RelatesTo)(nil), "google.fhir.stu3.proto.Composition.RelatesTo")
	proto.RegisterType((*Composition_RelatesTo_Target)(nil), "google.fhir.stu3.proto.Composition.RelatesTo.Target")
	proto.RegisterType((*Composition_Event)(nil), "google.fhir.stu3.proto.Composition.Event")
	proto.RegisterType((*Composition_Section)(nil), "google.fhir.stu3.proto.Composition.Section")
	proto.RegisterType((*ConceptMap)(nil), "google.fhir.stu3.proto.ConceptMap")
	proto.RegisterType((*ConceptMap_Source)(nil), "google.fhir.stu3.proto.ConceptMap.Source")
	proto.RegisterType((*ConceptMap_Target)(nil), "google.fhir.stu3.proto.ConceptMap.Target")
	proto.RegisterType((*ConceptMap_Group)(nil), "google.fhir.stu3.proto.ConceptMap.Group")
	proto.RegisterType((*ConceptMap_Group_SourceElement)(nil), "google.fhir.stu3.proto.ConceptMap.Group.SourceElement")
	proto.RegisterType((*ConceptMap_Group_SourceElement_TargetElement)(nil), "google.fhir.stu3.proto.ConceptMap.Group.SourceElement.TargetElement")
	proto.RegisterType((*ConceptMap_Group_SourceElement_TargetElement_OtherElement)(nil), "google.fhir.stu3.proto.ConceptMap.Group.SourceElement.TargetElement.OtherElement")
	proto.RegisterType((*ConceptMap_Group_Unmapped)(nil), "google.fhir.stu3.proto.ConceptMap.Group.Unmapped")
	proto.RegisterType((*Condition)(nil), "google.fhir.stu3.proto.Condition")
	proto.RegisterType((*Condition_Onset)(nil), "google.fhir.stu3.proto.Condition.Onset")
	proto.RegisterType((*Condition_Abatement)(nil), "google.fhir.stu3.proto.Condition.Abatement")
	proto.RegisterType((*Condition_Stage)(nil), "google.fhir.stu3.proto.Condition.Stage")
	proto.RegisterType((*Condition_Evidence)(nil), "google.fhir.stu3.proto.Condition.Evidence")
	proto.RegisterType((*Consent)(nil), "google.fhir.stu3.proto.Consent")
	proto.RegisterType((*Consent_Actor)(nil), "google.fhir.stu3.proto.Consent.Actor")
	proto.RegisterType((*Consent_Source)(nil), "google.fhir.stu3.proto.Consent.Source")
	proto.RegisterType((*Consent_Policy)(nil), "google.fhir.stu3.proto.Consent.Policy")
	proto.RegisterType((*Consent_Data)(nil), "google.fhir.stu3.proto.Consent.Data")
	proto.RegisterType((*Consent_Except)(nil), "google.fhir.stu3.proto.Consent.Except")
	proto.RegisterType((*Consent_Except_ExceptActor)(nil), "google.fhir.stu3.proto.Consent.Except.ExceptActor")
	proto.RegisterType((*Consent_Except_ExceptData)(nil), "google.fhir.stu3.proto.Consent.Except.ExceptData")
	proto.RegisterType((*Contract)(nil), "google.fhir.stu3.proto.Contract")
	proto.RegisterType((*Contract_Agent)(nil), "google.fhir.stu3.proto.Contract.Agent")
	proto.RegisterType((*Contract_Signatory)(nil), "google.fhir.stu3.proto.Contract.Signatory")
	proto.RegisterType((*Contract_ValuedItem)(nil), "google.fhir.stu3.proto.Contract.ValuedItem")
	proto.RegisterType((*Contract_ValuedItem_Entity)(nil), "google.fhir.stu3.proto.Contract.ValuedItem.Entity")
	proto.RegisterType((*Contract_Term)(nil), "google.fhir.stu3.proto.Contract.Term")
	proto.RegisterType((*Contract_Term_TermAgent)(nil), "google.fhir.stu3.proto.Contract.Term.TermAgent")
	proto.RegisterType((*Contract_Term_TermValuedItem)(nil), "google.fhir.stu3.proto.Contract.Term.TermValuedItem")
	proto.RegisterType((*Contract_Term_TermValuedItem_Entity)(nil), "google.fhir.stu3.proto.Contract.Term.TermValuedItem.Entity")
	proto.RegisterType((*Contract_Binding)(nil), "google.fhir.stu3.proto.Contract.Binding")
	proto.RegisterType((*Contract_FriendlyLanguage)(nil), "google.fhir.stu3.proto.Contract.FriendlyLanguage")
	proto.RegisterType((*Contract_FriendlyLanguage_Content)(nil), "google.fhir.stu3.proto.Contract.FriendlyLanguage.Content")
	proto.RegisterType((*Contract_LegalLanguage)(nil), "google.fhir.stu3.proto.Contract.LegalLanguage")
	proto.RegisterType((*Contract_LegalLanguage_Content)(nil), "google.fhir.stu3.proto.Contract.LegalLanguage.Content")
	proto.RegisterType((*Contract_ComputableLanguage)(nil), "google.fhir.stu3.proto.Contract.ComputableLanguage")
	proto.RegisterType((*Contract_ComputableLanguage_Content)(nil), "google.fhir.stu3.proto.Contract.ComputableLanguage.Content")
	proto.RegisterType((*Coverage)(nil), "google.fhir.stu3.proto.Coverage")
	proto.RegisterType((*Coverage_Group)(nil), "google.fhir.stu3.proto.Coverage.Group")
	proto.RegisterType((*DataElement)(nil), "google.fhir.stu3.proto.DataElement")
	proto.RegisterType((*DataElement_Mapping)(nil), "google.fhir.stu3.proto.DataElement.Mapping")
	proto.RegisterType((*DetectedIssue)(nil), "google.fhir.stu3.proto.DetectedIssue")
	proto.RegisterType((*DetectedIssue_Mitigation)(nil), "google.fhir.stu3.proto.DetectedIssue.Mitigation")
	proto.RegisterType((*Device)(nil), "google.fhir.stu3.proto.Device")
	proto.RegisterType((*Device_Udi)(nil), "google.fhir.stu3.proto.Device.Udi")
	proto.RegisterType((*DeviceComponent)(nil), "google.fhir.stu3.proto.DeviceComponent")
	proto.RegisterType((*DeviceComponent_ProductionSpecification)(nil), "google.fhir.stu3.proto.DeviceComponent.ProductionSpecification")
	proto.RegisterType((*DeviceMetric)(nil), "google.fhir.stu3.proto.DeviceMetric")
	proto.RegisterType((*DeviceMetric_Calibration)(nil), "google.fhir.stu3.proto.DeviceMetric.Calibration")
	proto.RegisterType((*DeviceRequest)(nil), "google.fhir.stu3.proto.DeviceRequest")
	proto.RegisterType((*DeviceRequest_Code)(nil), "google.fhir.stu3.proto.DeviceRequest.Code")
	proto.RegisterType((*DeviceRequest_Occurrence)(nil), "google.fhir.stu3.proto.DeviceRequest.Occurrence")
	proto.RegisterType((*DeviceRequest_Requester)(nil), "google.fhir.stu3.proto.DeviceRequest.Requester")
	proto.RegisterType((*DeviceUseStatement)(nil), "google.fhir.stu3.proto.DeviceUseStatement")
	proto.RegisterType((*DeviceUseStatement_TimingType)(nil), "google.fhir.stu3.proto.DeviceUseStatement.TimingType")
	proto.RegisterType((*DiagnosticReport)(nil), "google.fhir.stu3.proto.DiagnosticReport")
	proto.RegisterType((*DiagnosticReport_Effective)(nil), "google.fhir.stu3.proto.DiagnosticReport.Effective")
	proto.RegisterType((*DiagnosticReport_Performer)(nil), "google.fhir.stu3.proto.DiagnosticReport.Performer")
	proto.RegisterType((*DiagnosticReport_Image)(nil), "google.fhir.stu3.proto.DiagnosticReport.Image")
	proto.RegisterType((*DocumentManifest)(nil), "google.fhir.stu3.proto.DocumentManifest")
	proto.RegisterType((*DocumentManifest_Content)(nil), "google.fhir.stu3.proto.DocumentManifest.Content")
	proto.RegisterType((*DocumentManifest_Content_P)(nil), "google.fhir.stu3.proto.DocumentManifest.Content.P")
	proto.RegisterType((*DocumentManifest_Related)(nil), "google.fhir.stu3.proto.DocumentManifest.Related")
	proto.RegisterType((*DocumentReference)(nil), "google.fhir.stu3.proto.DocumentReference")
	proto.RegisterType((*DocumentReference_RelatesTo)(nil), "google.fhir.stu3.proto.DocumentReference.RelatesTo")
	proto.RegisterType((*DocumentReference_Content)(nil), "google.fhir.stu3.proto.DocumentReference.Content")
	proto.RegisterType((*DocumentReference_Context)(nil), "google.fhir.stu3.proto.DocumentReference.Context")
	proto.RegisterType((*DocumentReference_Context_Related)(nil), "google.fhir.stu3.proto.DocumentReference.Context.Related")
	proto.RegisterType((*EligibilityRequest)(nil), "google.fhir.stu3.proto.EligibilityRequest")
	proto.RegisterType((*EligibilityRequest_Serviced)(nil), "google.fhir.stu3.proto.EligibilityRequest.Serviced")
	proto.RegisterType((*EligibilityResponse)(nil), "google.fhir.stu3.proto.EligibilityResponse")
	proto.RegisterType((*EligibilityResponse_Insurance)(nil), "google.fhir.stu3.proto.EligibilityResponse.Insurance")
	proto.RegisterType((*EligibilityResponse_Insurance_Benefits)(nil), "google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits")
	proto.RegisterType((*EligibilityResponse_Insurance_Benefits_Benefit)(nil), "google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit")
	proto.RegisterType((*EligibilityResponse_Insurance_Benefits_Benefit_Allowed)(nil), "google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Allowed")
	proto.RegisterType((*EligibilityResponse_Insurance_Benefits_Benefit_Used)(nil), "google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Used")
	proto.RegisterType((*EligibilityResponse_Errors)(nil), "google.fhir.stu3.proto.EligibilityResponse.Errors")
	proto.RegisterType((*Encounter)(nil), "google.fhir.stu3.proto.Encounter")
	proto.RegisterType((*Encounter_StatusHistory)(nil), "google.fhir.stu3.proto.Encounter.StatusHistory")
	proto.RegisterType((*Encounter_ClassHistory)(nil), "google.fhir.stu3.proto.Encounter.ClassHistory")
	proto.RegisterType((*Encounter_Participant)(nil), "google.fhir.stu3.proto.Encounter.Participant")
	proto.RegisterType((*Encounter_Diagnosis)(nil), "google.fhir.stu3.proto.Encounter.Diagnosis")
	proto.RegisterType((*Encounter_Hospitalization)(nil), "google.fhir.stu3.proto.Encounter.Hospitalization")
	proto.RegisterType((*Encounter_Location)(nil), "google.fhir.stu3.proto.Encounter.Location")
	proto.RegisterType((*Endpoint)(nil), "google.fhir.stu3.proto.Endpoint")
	proto.RegisterType((*EnrollmentRequest)(nil), "google.fhir.stu3.proto.EnrollmentRequest")
	proto.RegisterType((*EnrollmentResponse)(nil), "google.fhir.stu3.proto.EnrollmentResponse")
	proto.RegisterType((*EpisodeOfCare)(nil), "google.fhir.stu3.proto.EpisodeOfCare")
	proto.RegisterType((*EpisodeOfCare_StatusHistory)(nil), "google.fhir.stu3.proto.EpisodeOfCare.StatusHistory")
	proto.RegisterType((*EpisodeOfCare_Diagnosis)(nil), "google.fhir.stu3.proto.EpisodeOfCare.Diagnosis")
	proto.RegisterType((*ExpansionProfile)(nil), "google.fhir.stu3.proto.ExpansionProfile")
	proto.RegisterType((*ExpansionProfile_FixedVersion)(nil), "google.fhir.stu3.proto.ExpansionProfile.FixedVersion")
	proto.RegisterType((*ExpansionProfile_ExcludedSystem)(nil), "google.fhir.stu3.proto.ExpansionProfile.ExcludedSystem")
	proto.RegisterType((*ExpansionProfile_Designation)(nil), "google.fhir.stu3.proto.ExpansionProfile.Designation")
	proto.RegisterType((*ExpansionProfile_Designation_DesignationInclude)(nil), "google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationInclude")
	proto.RegisterType((*ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation)(nil), "google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationInclude.DesignationIncludeDesignation")
	proto.RegisterType((*ExpansionProfile_Designation_DesignationExclude)(nil), "google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationExclude")
	proto.RegisterType((*ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation)(nil), "google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationExclude.DesignationExcludeDesignation")
	proto.RegisterType((*ExplanationOfBenefit)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit")
	proto.RegisterType((*ExplanationOfBenefit_RelatedClaim)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.RelatedClaim")
	proto.RegisterType((*ExplanationOfBenefit_Payee)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Payee")
	proto.RegisterType((*ExplanationOfBenefit_SupportingInformation)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation")
	proto.RegisterType((*ExplanationOfBenefit_SupportingInformation_TimingType)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.TimingType")
	proto.RegisterType((*ExplanationOfBenefit_SupportingInformation_Value)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.Value")
	proto.RegisterType((*ExplanationOfBenefit_CareTeam)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.CareTeam")
	proto.RegisterType((*ExplanationOfBenefit_Diagnosis)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Diagnosis")
	proto.RegisterType((*ExplanationOfBenefit_Diagnosis_DiagnosisType)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Diagnosis.DiagnosisType")
	proto.RegisterType((*ExplanationOfBenefit_Procedure)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Procedure")
	proto.RegisterType((*ExplanationOfBenefit_Procedure_ProcedureType)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Procedure.ProcedureType")
	proto.RegisterType((*ExplanationOfBenefit_Insurance)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Insurance")
	proto.RegisterType((*ExplanationOfBenefit_Accident)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Accident")
	proto.RegisterType((*ExplanationOfBenefit_Accident_Location)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Accident.Location")
	proto.RegisterType((*ExplanationOfBenefit_Item)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Item")
	proto.RegisterType((*ExplanationOfBenefit_Item_Serviced)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Serviced")
	proto.RegisterType((*ExplanationOfBenefit_Item_Location)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Location")
	proto.RegisterType((*ExplanationOfBenefit_Item_Adjudication)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Adjudication")
	proto.RegisterType((*ExplanationOfBenefit_Item_Detail)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Detail")
	proto.RegisterType((*ExplanationOfBenefit_Item_Detail_SubDetail)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Detail.SubDetail")
	proto.RegisterType((*ExplanationOfBenefit_AddedItem)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.AddedItem")
	proto.RegisterType((*ExplanationOfBenefit_AddedItem_AddedItemsDetail)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.AddedItem.AddedItemsDetail")
	proto.RegisterType((*ExplanationOfBenefit_Payment)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Payment")
	proto.RegisterType((*ExplanationOfBenefit_Note)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.Note")
	proto.RegisterType((*ExplanationOfBenefit_BenefitBalance)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance")
	proto.RegisterType((*ExplanationOfBenefit_BenefitBalance_Benefit)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit")
	proto.RegisterType((*ExplanationOfBenefit_BenefitBalance_Benefit_Allowed)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Allowed")
	proto.RegisterType((*ExplanationOfBenefit_BenefitBalance_Benefit_Used)(nil), "google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Used")
	proto.RegisterType((*FamilyMemberHistory)(nil), "google.fhir.stu3.proto.FamilyMemberHistory")
	proto.RegisterType((*FamilyMemberHistory_Born)(nil), "google.fhir.stu3.proto.FamilyMemberHistory.Born")
	proto.RegisterType((*FamilyMemberHistory_AgeType)(nil), "google.fhir.stu3.proto.FamilyMemberHistory.AgeType")
	proto.RegisterType((*FamilyMemberHistory_Deceased)(nil), "google.fhir.stu3.proto.FamilyMemberHistory.Deceased")
	proto.RegisterType((*FamilyMemberHistory_Condition)(nil), "google.fhir.stu3.proto.FamilyMemberHistory.Condition")
	proto.RegisterType((*FamilyMemberHistory_Condition_Onset)(nil), "google.fhir.stu3.proto.FamilyMemberHistory.Condition.Onset")
	proto.RegisterType((*Flag)(nil), "google.fhir.stu3.proto.Flag")
	proto.RegisterType((*Goal)(nil), "google.fhir.stu3.proto.Goal")
	proto.RegisterType((*Goal_Start)(nil), "google.fhir.stu3.proto.Goal.Start")
	proto.RegisterType((*Goal_Target)(nil), "google.fhir.stu3.proto.Goal.Target")
	proto.RegisterType((*Goal_Target_Detail)(nil), "google.fhir.stu3.proto.Goal.Target.Detail")
	proto.RegisterType((*Goal_Target_Due)(nil), "google.fhir.stu3.proto.Goal.Target.Due")
	proto.RegisterType((*GraphDefinition)(nil), "google.fhir.stu3.proto.GraphDefinition")
	proto.RegisterType((*GraphDefinition_Link)(nil), "google.fhir.stu3.proto.GraphDefinition.Link")
	proto.RegisterType((*GraphDefinition_Link_Target)(nil), "google.fhir.stu3.proto.GraphDefinition.Link.Target")
	proto.RegisterType((*GraphDefinition_Link_Target_Compartment)(nil), "google.fhir.stu3.proto.GraphDefinition.Link.Target.Compartment")
	proto.RegisterType((*Group)(nil), "google.fhir.stu3.proto.Group")
	proto.RegisterType((*Group_Characteristic)(nil), "google.fhir.stu3.proto.Group.Characteristic")
	proto.RegisterType((*Group_Characteristic_Value)(nil), "google.fhir.stu3.proto.Group.Characteristic.Value")
	proto.RegisterType((*Group_Member)(nil), "google.fhir.stu3.proto.Group.Member")
	proto.RegisterType((*GuidanceResponse)(nil), "google.fhir.stu3.proto.GuidanceResponse")
	proto.RegisterType((*GuidanceResponse_Reason)(nil), "google.fhir.stu3.proto.GuidanceResponse.Reason")
	proto.RegisterType((*HealthcareService)(nil), "google.fhir.stu3.proto.HealthcareService")
	proto.RegisterType((*HealthcareService_AvailableTime)(nil), "google.fhir.stu3.proto.HealthcareService.AvailableTime")
	proto.RegisterType((*HealthcareService_NotAvailable)(nil), "google.fhir.stu3.proto.HealthcareService.NotAvailable")
	proto.RegisterType((*ImagingManifest)(nil), "google.fhir.stu3.proto.ImagingManifest")
	proto.RegisterType((*ImagingManifest_Study)(nil), "google.fhir.stu3.proto.ImagingManifest.Study")
	proto.RegisterType((*ImagingManifest_Study_Series)(nil), "google.fhir.stu3.proto.ImagingManifest.Study.Series")
	proto.RegisterType((*ImagingManifest_Study_Series_Instance)(nil), "google.fhir.stu3.proto.ImagingManifest.Study.Series.Instance")
	proto.RegisterType((*ImagingStudy)(nil), "google.fhir.stu3.proto.ImagingStudy")
	proto.RegisterType((*ImagingStudy_Series)(nil), "google.fhir.stu3.proto.ImagingStudy.Series")
	proto.RegisterType((*ImagingStudy_Series_Instance)(nil), "google.fhir.stu3.proto.ImagingStudy.Series.Instance")
	proto.RegisterType((*Immunization)(nil), "google.fhir.stu3.proto.Immunization")
	proto.RegisterType((*Immunization_Practitioner)(nil), "google.fhir.stu3.proto.Immunization.Practitioner")
	proto.RegisterType((*Immunization_Explanation)(nil), "google.fhir.stu3.proto.Immunization.Explanation")
	proto.RegisterType((*Immunization_Reaction)(nil), "google.fhir.stu3.proto.Immunization.Reaction")
	proto.RegisterType((*Immunization_VaccinationProtocol)(nil), "google.fhir.stu3.proto.Immunization.VaccinationProtocol")
	proto.RegisterType((*ImmunizationRecommendation)(nil), "google.fhir.stu3.proto.ImmunizationRecommendation")
	proto.RegisterType((*ImmunizationRecommendation_Recommendation)(nil), "google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation")
	proto.RegisterType((*ImmunizationRecommendation_Recommendation_DateCriterion)(nil), "google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation.DateCriterion")
	proto.RegisterType((*ImmunizationRecommendation_Recommendation_Protocol)(nil), "google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation.Protocol")
	proto.RegisterType((*ImplementationGuide)(nil), "google.fhir.stu3.proto.ImplementationGuide")
	proto.RegisterType((*ImplementationGuide_Dependency)(nil), "google.fhir.stu3.proto.ImplementationGuide.Dependency")
	proto.RegisterType((*ImplementationGuide_Package)(nil), "google.fhir.stu3.proto.ImplementationGuide.Package")
	proto.RegisterType((*ImplementationGuide_Package_Resource)(nil), "google.fhir.stu3.proto.ImplementationGuide.Package.Resource")
	proto.RegisterType((*ImplementationGuide_Package_Resource_Source)(nil), "google.fhir.stu3.proto.ImplementationGuide.Package.Resource.Source")
	proto.RegisterType((*ImplementationGuide_Global)(nil), "google.fhir.stu3.proto.ImplementationGuide.Global")
	proto.RegisterType((*ImplementationGuide_Page)(nil), "google.fhir.stu3.proto.ImplementationGuide.Page")
	proto.RegisterType((*Library)(nil), "google.fhir.stu3.proto.Library")
	proto.RegisterType((*Linkage)(nil), "google.fhir.stu3.proto.Linkage")
	proto.RegisterType((*Linkage_Item)(nil), "google.fhir.stu3.proto.Linkage.Item")
	proto.RegisterType((*List)(nil), "google.fhir.stu3.proto.List")
	proto.RegisterType((*List_Entry)(nil), "google.fhir.stu3.proto.List.Entry")
	proto.RegisterType((*Location)(nil), "google.fhir.stu3.proto.Location")
	proto.RegisterType((*Location_Position)(nil), "google.fhir.stu3.proto.Location.Position")
	proto.RegisterType((*Measure)(nil), "google.fhir.stu3.proto.Measure")
	proto.RegisterType((*Measure_Group)(nil), "google.fhir.stu3.proto.Measure.Group")
	proto.RegisterType((*Measure_Group_Population)(nil), "google.fhir.stu3.proto.Measure.Group.Population")
	proto.RegisterType((*Measure_Group_Stratifier)(nil), "google.fhir.stu3.proto.Measure.Group.Stratifier")
	proto.RegisterType((*Measure_SupplementalData)(nil), "google.fhir.stu3.proto.Measure.SupplementalData")
	proto.RegisterType((*MeasureReport)(nil), "google.fhir.stu3.proto.MeasureReport")
	proto.RegisterType((*MeasureReport_Group)(nil), "google.fhir.stu3.proto.MeasureReport.Group")
	proto.RegisterType((*MeasureReport_Group_Population)(nil), "google.fhir.stu3.proto.MeasureReport.Group.Population")
	proto.RegisterType((*MeasureReport_Group_Stratifier)(nil), "google.fhir.stu3.proto.MeasureReport.Group.Stratifier")
	proto.RegisterType((*MeasureReport_Group_Stratifier_StratifierGroup)(nil), "google.fhir.stu3.proto.MeasureReport.Group.Stratifier.StratifierGroup")
	proto.RegisterType((*MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation)(nil), "google.fhir.stu3.proto.MeasureReport.Group.Stratifier.StratifierGroup.StratifierGroupPopulation")
	proto.RegisterType((*Media)(nil), "google.fhir.stu3.proto.Media")
	proto.RegisterType((*Media_Occurrence)(nil), "google.fhir.stu3.proto.Media.Occurrence")
	proto.RegisterType((*Medication)(nil), "google.fhir.stu3.proto.Medication")
	proto.RegisterType((*Medication_Ingredient)(nil), "google.fhir.stu3.proto.Medication.Ingredient")
	proto.RegisterType((*Medication_Ingredient_Item)(nil), "google.fhir.stu3.proto.Medication.Ingredient.Item")
	proto.RegisterType((*Medication_Package)(nil), "google.fhir.stu3.proto.Medication.Package")
	proto.RegisterType((*Medication_Package_Content)(nil), "google.fhir.stu3.proto.Medication.Package.Content")
	proto.RegisterType((*Medication_Package_Content_Item)(nil), "google.fhir.stu3.proto.Medication.Package.Content.Item")
	proto.RegisterType((*Medication_Package_Batch)(nil), "google.fhir.stu3.proto.Medication.Package.Batch")
	proto.RegisterType((*MedicationAdministration)(nil), "google.fhir.stu3.proto.MedicationAdministration")
	proto.RegisterType((*MedicationAdministration_Medication)(nil), "google.fhir.stu3.proto.MedicationAdministration.Medication")
	proto.RegisterType((*MedicationAdministration_Effective)(nil), "google.fhir.stu3.proto.MedicationAdministration.Effective")
	proto.RegisterType((*MedicationAdministration_Performer)(nil), "google.fhir.stu3.proto.MedicationAdministration.Performer")
	proto.RegisterType((*MedicationAdministration_Dosage)(nil), "google.fhir.stu3.proto.MedicationAdministration.Dosage")
	proto.RegisterType((*MedicationAdministration_Dosage_Rate)(nil), "google.fhir.stu3.proto.MedicationAdministration.Dosage.Rate")
	proto.RegisterType((*MedicationDispense)(nil), "google.fhir.stu3.proto.MedicationDispense")
	proto.RegisterType((*MedicationDispense_Medication)(nil), "google.fhir.stu3.proto.MedicationDispense.Medication")
	proto.RegisterType((*MedicationDispense_Performer)(nil), "google.fhir.stu3.proto.MedicationDispense.Performer")
	proto.RegisterType((*MedicationDispense_Substitution)(nil), "google.fhir.stu3.proto.MedicationDispense.Substitution")
	proto.RegisterType((*MedicationDispense_NotDoneReason)(nil), "google.fhir.stu3.proto.MedicationDispense.NotDoneReason")
	proto.RegisterType((*MedicationRequest)(nil), "google.fhir.stu3.proto.MedicationRequest")
	proto.RegisterType((*MedicationRequest_Medication)(nil), "google.fhir.stu3.proto.MedicationRequest.Medication")
	proto.RegisterType((*MedicationRequest_Requester)(nil), "google.fhir.stu3.proto.MedicationRequest.Requester")
	proto.RegisterType((*MedicationRequest_DispenseRequest)(nil), "google.fhir.stu3.proto.MedicationRequest.DispenseRequest")
	proto.RegisterType((*MedicationRequest_Substitution)(nil), "google.fhir.stu3.proto.MedicationRequest.Substitution")
	proto.RegisterType((*MedicationStatement)(nil), "google.fhir.stu3.proto.MedicationStatement")
	proto.RegisterType((*MedicationStatement_Medication)(nil), "google.fhir.stu3.proto.MedicationStatement.Medication")
	proto.RegisterType((*MedicationStatement_Effective)(nil), "google.fhir.stu3.proto.MedicationStatement.Effective")
	proto.RegisterType((*MessageDefinition)(nil), "google.fhir.stu3.proto.MessageDefinition")
	proto.RegisterType((*MessageDefinition_Focus)(nil), "google.fhir.stu3.proto.MessageDefinition.Focus")
	proto.RegisterType((*MessageDefinition_AllowedResponse)(nil), "google.fhir.stu3.proto.MessageDefinition.AllowedResponse")
	proto.RegisterType((*MessageHeader)(nil), "google.fhir.stu3.proto.MessageHeader")
	proto.RegisterType((*MessageHeader_MessageDestination)(nil), "google.fhir.stu3.proto.MessageHeader.MessageDestination")
	proto.RegisterType((*MessageHeader_MessageSource)(nil), "google.fhir.stu3.proto.MessageHeader.MessageSource")
	proto.RegisterType((*MessageHeader_Response)(nil), "google.fhir.stu3.proto.MessageHeader.Response")
	proto.RegisterType((*NamingSystem)(nil), "google.fhir.stu3.proto.NamingSystem")
	proto.RegisterType((*NamingSystem_UniqueId)(nil), "google.fhir.stu3.proto.NamingSystem.UniqueId")
	proto.RegisterType((*NutritionOrder)(nil), "google.fhir.stu3.proto.NutritionOrder")
	proto.RegisterType((*NutritionOrder_OralDiet)(nil), "google.fhir.stu3.proto.NutritionOrder.OralDiet")
	proto.RegisterType((*NutritionOrder_OralDiet_Nutrient)(nil), "google.fhir.stu3.proto.NutritionOrder.OralDiet.Nutrient")
	proto.RegisterType((*NutritionOrder_OralDiet_Texture)(nil), "google.fhir.stu3.proto.NutritionOrder.OralDiet.Texture")
	proto.RegisterType((*NutritionOrder_Supplement)(nil), "google.fhir.stu3.proto.NutritionOrder.Supplement")
	proto.RegisterType((*NutritionOrder_EnteralFormula)(nil), "google.fhir.stu3.proto.NutritionOrder.EnteralFormula")
	proto.RegisterType((*NutritionOrder_EnteralFormula_Administration)(nil), "google.fhir.stu3.proto.NutritionOrder.EnteralFormula.Administration")
	proto.RegisterType((*NutritionOrder_EnteralFormula_Administration_Rate)(nil), "google.fhir.stu3.proto.NutritionOrder.EnteralFormula.Administration.Rate")
	proto.RegisterType((*Observation)(nil), "google.fhir.stu3.proto.Observation")
	proto.RegisterType((*Observation_Effective)(nil), "google.fhir.stu3.proto.Observation.Effective")
	proto.RegisterType((*Observation_Value)(nil), "google.fhir.stu3.proto.Observation.Value")
	proto.RegisterType((*Observation_ReferenceRange)(nil), "google.fhir.stu3.proto.Observation.ReferenceRange")
	proto.RegisterType((*Observation_Related)(nil), "google.fhir.stu3.proto.Observation.Related")
	proto.RegisterType((*Observation_Component)(nil), "google.fhir.stu3.proto.Observation.Component")
	proto.RegisterType((*Observation_Component_Value)(nil), "google.fhir.stu3.proto.Observation.Component.Value")
	proto.RegisterType((*OperationDefinition)(nil), "google.fhir.stu3.proto.OperationDefinition")
	proto.RegisterType((*OperationDefinition_Parameter)(nil), "google.fhir.stu3.proto.OperationDefinition.Parameter")
	proto.RegisterType((*OperationDefinition_Parameter_Binding)(nil), "google.fhir.stu3.proto.OperationDefinition.Parameter.Binding")
	proto.RegisterType((*OperationDefinition_Parameter_Binding_ValueSet)(nil), "google.fhir.stu3.proto.OperationDefinition.Parameter.Binding.ValueSet")
	proto.RegisterType((*OperationDefinition_Overload)(nil), "google.fhir.stu3.proto.OperationDefinition.Overload")
	proto.RegisterType((*OperationOutcome)(nil), "google.fhir.stu3.proto.OperationOutcome")
	proto.RegisterType((*OperationOutcome_Issue)(nil), "google.fhir.stu3.proto.OperationOutcome.Issue")
	proto.RegisterType((*Organization)(nil), "google.fhir.stu3.proto.Organization")
	proto.RegisterType((*Organization_Contact)(nil), "google.fhir.stu3.proto.Organization.Contact")
	proto.RegisterType((*Parameters)(nil), "google.fhir.stu3.proto.Parameters")
	proto.RegisterType((*Parameters_Parameter)(nil), "google.fhir.stu3.proto.Parameters.Parameter")
	proto.RegisterType((*Parameters_Parameter_Value)(nil), "google.fhir.stu3.proto.Parameters.Parameter.Value")
	proto.RegisterType((*Patient)(nil), "google.fhir.stu3.proto.Patient")
	proto.RegisterType((*Patient_Deceased)(nil), "google.fhir.stu3.proto.Patient.Deceased")
	proto.RegisterType((*Patient_MultipleBirth)(nil), "google.fhir.stu3.proto.Patient.MultipleBirth")
	proto.RegisterType((*Patient_Contact)(nil), "google.fhir.stu3.proto.Patient.Contact")
	proto.RegisterType((*Patient_Animal)(nil), "google.fhir.stu3.proto.Patient.Animal")
	proto.RegisterType((*Patient_Communication)(nil), "google.fhir.stu3.proto.Patient.Communication")
	proto.RegisterType((*Patient_Link)(nil), "google.fhir.stu3.proto.Patient.Link")
	proto.RegisterType((*PaymentNotice)(nil), "google.fhir.stu3.proto.PaymentNotice")
	proto.RegisterType((*PaymentReconciliation)(nil), "google.fhir.stu3.proto.PaymentReconciliation")
	proto.RegisterType((*PaymentReconciliation_Details)(nil), "google.fhir.stu3.proto.PaymentReconciliation.Details")
	proto.RegisterType((*PaymentReconciliation_Notes)(nil), "google.fhir.stu3.proto.PaymentReconciliation.Notes")
	proto.RegisterType((*Person)(nil), "google.fhir.stu3.proto.Person")
	proto.RegisterType((*Person_Link)(nil), "google.fhir.stu3.proto.Person.Link")
	proto.RegisterType((*PlanDefinition)(nil), "google.fhir.stu3.proto.PlanDefinition")
	proto.RegisterType((*PlanDefinition_Goal)(nil), "google.fhir.stu3.proto.PlanDefinition.Goal")
	proto.RegisterType((*PlanDefinition_Goal_Target)(nil), "google.fhir.stu3.proto.PlanDefinition.Goal.Target")
	proto.RegisterType((*PlanDefinition_Goal_Target_Detail)(nil), "google.fhir.stu3.proto.PlanDefinition.Goal.Target.Detail")
	proto.RegisterType((*PlanDefinition_Action)(nil), "google.fhir.stu3.proto.PlanDefinition.Action")
	proto.RegisterType((*PlanDefinition_Action_Condition)(nil), "google.fhir.stu3.proto.PlanDefinition.Action.Condition")
	proto.RegisterType((*PlanDefinition_Action_RelatedAction)(nil), "google.fhir.stu3.proto.PlanDefinition.Action.RelatedAction")
	proto.RegisterType((*PlanDefinition_Action_RelatedAction_Offset)(nil), "google.fhir.stu3.proto.PlanDefinition.Action.RelatedAction.Offset")
	proto.RegisterType((*PlanDefinition_Action_TimingType)(nil), "google.fhir.stu3.proto.PlanDefinition.Action.TimingType")
	proto.RegisterType((*PlanDefinition_Action_Participant)(nil), "google.fhir.stu3.proto.PlanDefinition.Action.Participant")
	proto.RegisterType((*PlanDefinition_Action_DynamicValue)(nil), "google.fhir.stu3.proto.PlanDefinition.Action.DynamicValue")
	proto.RegisterType((*Practitioner)(nil), "google.fhir.stu3.proto.Practitioner")
	proto.RegisterType((*Practitioner_Qualification)(nil), "google.fhir.stu3.proto.Practitioner.Qualification")
	proto.RegisterType((*PractitionerRole)(nil), "google.fhir.stu3.proto.PractitionerRole")
	proto.RegisterType((*PractitionerRole_AvailableTime)(nil), "google.fhir.stu3.proto.PractitionerRole.AvailableTime")
	proto.RegisterType((*PractitionerRole_NotAvailable)(nil), "google.fhir.stu3.proto.PractitionerRole.NotAvailable")
	proto.RegisterType((*Procedure)(nil), "google.fhir.stu3.proto.Procedure")
	proto.RegisterType((*Procedure_Performed)(nil), "google.fhir.stu3.proto.Procedure.Performed")
	proto.RegisterType((*Procedure_Performer)(nil), "google.fhir.stu3.proto.Procedure.Performer")
	proto.RegisterType((*Procedure_FocalDevice)(nil), "google.fhir.stu3.proto.Procedure.FocalDevice")
	proto.RegisterType((*ProcedureRequest)(nil), "google.fhir.stu3.proto.ProcedureRequest")
	proto.RegisterType((*ProcedureRequest_Occurrence)(nil), "google.fhir.stu3.proto.ProcedureRequest.Occurrence")
	proto.RegisterType((*ProcedureRequest_AsNeeded)(nil), "google.fhir.stu3.proto.ProcedureRequest.AsNeeded")
	proto.RegisterType((*ProcedureRequest_Requester)(nil), "google.fhir.stu3.proto.ProcedureRequest.Requester")
	proto.RegisterType((*ProcessRequest)(nil), "google.fhir.stu3.proto.ProcessRequest")
	proto.RegisterType((*ProcessRequest_Items)(nil), "google.fhir.stu3.proto.ProcessRequest.Items")
	proto.RegisterType((*ProcessResponse)(nil), "google.fhir.stu3.proto.ProcessResponse")
	proto.RegisterType((*ProcessResponse_ProcessNote)(nil), "google.fhir.stu3.proto.ProcessResponse.ProcessNote")
	proto.RegisterType((*Provenance)(nil), "google.fhir.stu3.proto.Provenance")
	proto.RegisterType((*Provenance_Agent)(nil), "google.fhir.stu3.proto.Provenance.Agent")
	proto.RegisterType((*Provenance_Agent_Who)(nil), "google.fhir.stu3.proto.Provenance.Agent.Who")
	proto.RegisterType((*Provenance_Agent_OnBehalfOf)(nil), "google.fhir.stu3.proto.Provenance.Agent.OnBehalfOf")
	proto.RegisterType((*Provenance_Entity)(nil), "google.fhir.stu3.proto.Provenance.Entity")
	proto.RegisterType((*Provenance_Entity_What)(nil), "google.fhir.stu3.proto.Provenance.Entity.What")
	proto.RegisterType((*Questionnaire)(nil), "google.fhir.stu3.proto.Questionnaire")
	proto.RegisterType((*Questionnaire_Item)(nil), "google.fhir.stu3.proto.Questionnaire.Item")
	proto.RegisterType((*Questionnaire_Item_EnableWhen)(nil), "google.fhir.stu3.proto.Questionnaire.Item.EnableWhen")
	proto.RegisterType((*Questionnaire_Item_EnableWhen_Answer)(nil), "google.fhir.stu3.proto.Questionnaire.Item.EnableWhen.Answer")
	proto.RegisterType((*Questionnaire_Item_Option)(nil), "google.fhir.stu3.proto.Questionnaire.Item.Option")
	proto.RegisterType((*Questionnaire_Item_Option_Value)(nil), "google.fhir.stu3.proto.Questionnaire.Item.Option.Value")
	proto.RegisterType((*Questionnaire_Item_Initial)(nil), "google.fhir.stu3.proto.Questionnaire.Item.Initial")
	proto.RegisterType((*QuestionnaireResponse)(nil), "google.fhir.stu3.proto.QuestionnaireResponse")
	proto.RegisterType((*QuestionnaireResponse_Item)(nil), "google.fhir.stu3.proto.QuestionnaireResponse.Item")
	proto.RegisterType((*QuestionnaireResponse_Item_Answer)(nil), "google.fhir.stu3.proto.QuestionnaireResponse.Item.Answer")
	proto.RegisterType((*QuestionnaireResponse_Item_Answer_Value)(nil), "google.fhir.stu3.proto.QuestionnaireResponse.Item.Answer.Value")
	proto.RegisterType((*ReferralRequest)(nil), "google.fhir.stu3.proto.ReferralRequest")
	proto.RegisterType((*ReferralRequest_Occurrence)(nil), "google.fhir.stu3.proto.ReferralRequest.Occurrence")
	proto.RegisterType((*ReferralRequest_Requester)(nil), "google.fhir.stu3.proto.ReferralRequest.Requester")
	proto.RegisterType((*RelatedPerson)(nil), "google.fhir.stu3.proto.RelatedPerson")
	proto.RegisterType((*RequestGroup)(nil), "google.fhir.stu3.proto.RequestGroup")
	proto.RegisterType((*RequestGroup_Reason)(nil), "google.fhir.stu3.proto.RequestGroup.Reason")
	proto.RegisterType((*RequestGroup_Action)(nil), "google.fhir.stu3.proto.RequestGroup.Action")
	proto.RegisterType((*RequestGroup_Action_Condition)(nil), "google.fhir.stu3.proto.RequestGroup.Action.Condition")
	proto.RegisterType((*RequestGroup_Action_RelatedAction)(nil), "google.fhir.stu3.proto.RequestGroup.Action.RelatedAction")
	proto.RegisterType((*RequestGroup_Action_RelatedAction_Offset)(nil), "google.fhir.stu3.proto.RequestGroup.Action.RelatedAction.Offset")
	proto.RegisterType((*RequestGroup_Action_TimingType)(nil), "google.fhir.stu3.proto.RequestGroup.Action.TimingType")
	proto.RegisterType((*ResearchStudy)(nil), "google.fhir.stu3.proto.ResearchStudy")
	proto.RegisterType((*ResearchStudy_Arm)(nil), "google.fhir.stu3.proto.ResearchStudy.Arm")
	proto.RegisterType((*ResearchSubject)(nil), "google.fhir.stu3.proto.ResearchSubject")
	proto.RegisterType((*RiskAssessment)(nil), "google.fhir.stu3.proto.RiskAssessment")
	proto.RegisterType((*RiskAssessment_Occurrence)(nil), "google.fhir.stu3.proto.RiskAssessment.Occurrence")
	proto.RegisterType((*RiskAssessment_Reason)(nil), "google.fhir.stu3.proto.RiskAssessment.Reason")
	proto.RegisterType((*RiskAssessment_Prediction)(nil), "google.fhir.stu3.proto.RiskAssessment.Prediction")
	proto.RegisterType((*RiskAssessment_Prediction_Probability)(nil), "google.fhir.stu3.proto.RiskAssessment.Prediction.Probability")
	proto.RegisterType((*RiskAssessment_Prediction_When)(nil), "google.fhir.stu3.proto.RiskAssessment.Prediction.When")
	proto.RegisterType((*Schedule)(nil), "google.fhir.stu3.proto.Schedule")
	proto.RegisterType((*SearchParameter)(nil), "google.fhir.stu3.proto.SearchParameter")
	proto.RegisterType((*SearchParameter_Component)(nil), "google.fhir.stu3.proto.SearchParameter.Component")
	proto.RegisterType((*Sequence)(nil), "google.fhir.stu3.proto.Sequence")
	proto.RegisterType((*Sequence_ReferenceSeq)(nil), "google.fhir.stu3.proto.Sequence.ReferenceSeq")
	proto.RegisterType((*Sequence_Variant)(nil), "google.fhir.stu3.proto.Sequence.Variant")
	proto.RegisterType((*Sequence_Quality)(nil), "google.fhir.stu3.proto.Sequence.Quality")
	proto.RegisterType((*Sequence_Repository)(nil), "google.fhir.stu3.proto.Sequence.Repository")
	proto.RegisterType((*ServiceDefinition)(nil), "google.fhir.stu3.proto.ServiceDefinition")
	proto.RegisterType((*Slot)(nil), "google.fhir.stu3.proto.Slot")
	proto.RegisterType((*Specimen)(nil), "google.fhir.stu3.proto.Specimen")
	proto.RegisterType((*Specimen_Collection)(nil), "google.fhir.stu3.proto.Specimen.Collection")
	proto.RegisterType((*Specimen_Collection_Collected)(nil), "google.fhir.stu3.proto.Specimen.Collection.Collected")
	proto.RegisterType((*Specimen_Processing)(nil), "google.fhir.stu3.proto.Specimen.Processing")
	proto.RegisterType((*Specimen_Processing_Time)(nil), "google.fhir.stu3.proto.Specimen.Processing.Time")
	proto.RegisterType((*Specimen_Container)(nil), "google.fhir.stu3.proto.Specimen.Container")
	proto.RegisterType((*Specimen_Container_Additive)(nil), "google.fhir.stu3.proto.Specimen.Container.Additive")
	proto.RegisterType((*StructureDefinition)(nil), "google.fhir.stu3.proto.StructureDefinition")
	proto.RegisterType((*StructureDefinition_Mapping)(nil), "google.fhir.stu3.proto.StructureDefinition.Mapping")
	proto.RegisterType((*StructureDefinition_Snapshot)(nil), "google.fhir.stu3.proto.StructureDefinition.Snapshot")
	proto.RegisterType((*StructureDefinition_Differential)(nil), "google.fhir.stu3.proto.StructureDefinition.Differential")
	proto.RegisterType((*StructureMap)(nil), "google.fhir.stu3.proto.StructureMap")
	proto.RegisterType((*StructureMap_Structure)(nil), "google.fhir.stu3.proto.StructureMap.Structure")
	proto.RegisterType((*StructureMap_Group)(nil), "google.fhir.stu3.proto.StructureMap.Group")
	proto.RegisterType((*StructureMap_Group_Input)(nil), "google.fhir.stu3.proto.StructureMap.Group.Input")
	proto.RegisterType((*StructureMap_Group_Rule)(nil), "google.fhir.stu3.proto.StructureMap.Group.Rule")
	proto.RegisterType((*StructureMap_Group_Rule_Source)(nil), "google.fhir.stu3.proto.StructureMap.Group.Rule.Source")
	proto.RegisterType((*StructureMap_Group_Rule_Source_DefaultValue)(nil), "google.fhir.stu3.proto.StructureMap.Group.Rule.Source.DefaultValue")
	proto.RegisterType((*StructureMap_Group_Rule_Target)(nil), "google.fhir.stu3.proto.StructureMap.Group.Rule.Target")
	proto.RegisterType((*StructureMap_Group_Rule_Target_Parameter)(nil), "google.fhir.stu3.proto.StructureMap.Group.Rule.Target.Parameter")
	proto.RegisterType((*StructureMap_Group_Rule_Target_Parameter_Value)(nil), "google.fhir.stu3.proto.StructureMap.Group.Rule.Target.Parameter.Value")
	proto.RegisterType((*StructureMap_Group_Rule_Dependent)(nil), "google.fhir.stu3.proto.StructureMap.Group.Rule.Dependent")
	proto.RegisterType((*Subscription)(nil), "google.fhir.stu3.proto.Subscription")
	proto.RegisterType((*Subscription_Channel)(nil), "google.fhir.stu3.proto.Subscription.Channel")
	proto.RegisterType((*Substance)(nil), "google.fhir.stu3.proto.Substance")
	proto.RegisterType((*Substance_Instance)(nil), "google.fhir.stu3.proto.Substance.Instance")
	proto.RegisterType((*Substance_Ingredient)(nil), "google.fhir.stu3.proto.Substance.Ingredient")
	proto.RegisterType((*Substance_Ingredient_SubstanceType)(nil), "google.fhir.stu3.proto.Substance.Ingredient.SubstanceType")
	proto.RegisterType((*SupplyDelivery)(nil), "google.fhir.stu3.proto.SupplyDelivery")
	proto.RegisterType((*SupplyDelivery_SuppliedItem)(nil), "google.fhir.stu3.proto.SupplyDelivery.SuppliedItem")
	proto.RegisterType((*SupplyDelivery_SuppliedItem_Item)(nil), "google.fhir.stu3.proto.SupplyDelivery.SuppliedItem.Item")
	proto.RegisterType((*SupplyDelivery_Occurrence)(nil), "google.fhir.stu3.proto.SupplyDelivery.Occurrence")
	proto.RegisterType((*SupplyRequest)(nil), "google.fhir.stu3.proto.SupplyRequest")
	proto.RegisterType((*SupplyRequest_OrderedItem)(nil), "google.fhir.stu3.proto.SupplyRequest.OrderedItem")
	proto.RegisterType((*SupplyRequest_OrderedItem_Item)(nil), "google.fhir.stu3.proto.SupplyRequest.OrderedItem.Item")
	proto.RegisterType((*SupplyRequest_Occurrence)(nil), "google.fhir.stu3.proto.SupplyRequest.Occurrence")
	proto.RegisterType((*SupplyRequest_Requester)(nil), "google.fhir.stu3.proto.SupplyRequest.Requester")
	proto.RegisterType((*SupplyRequest_Reason)(nil), "google.fhir.stu3.proto.SupplyRequest.Reason")
	proto.RegisterType((*Task)(nil), "google.fhir.stu3.proto.Task")
	proto.RegisterType((*Task_Definition)(nil), "google.fhir.stu3.proto.Task.Definition")
	proto.RegisterType((*Task_Requester)(nil), "google.fhir.stu3.proto.Task.Requester")
	proto.RegisterType((*Task_Restriction)(nil), "google.fhir.stu3.proto.Task.Restriction")
	proto.RegisterType((*Task_Parameter)(nil), "google.fhir.stu3.proto.Task.Parameter")
	proto.RegisterType((*Task_Parameter_Value)(nil), "google.fhir.stu3.proto.Task.Parameter.Value")
	proto.RegisterType((*Task_Output)(nil), "google.fhir.stu3.proto.Task.Output")
	proto.RegisterType((*Task_Output_Value)(nil), "google.fhir.stu3.proto.Task.Output.Value")
	proto.RegisterType((*TestReport)(nil), "google.fhir.stu3.proto.TestReport")
	proto.RegisterType((*TestReport_Participant)(nil), "google.fhir.stu3.proto.TestReport.Participant")
	proto.RegisterType((*TestReport_Setup)(nil), "google.fhir.stu3.proto.TestReport.Setup")
	proto.RegisterType((*TestReport_Setup_SetupAction)(nil), "google.fhir.stu3.proto.TestReport.Setup.SetupAction")
	proto.RegisterType((*TestReport_Setup_SetupAction_Operation)(nil), "google.fhir.stu3.proto.TestReport.Setup.SetupAction.Operation")
	proto.RegisterType((*TestReport_Setup_SetupAction_Assert)(nil), "google.fhir.stu3.proto.TestReport.Setup.SetupAction.Assert")
	proto.RegisterType((*TestReport_Test)(nil), "google.fhir.stu3.proto.TestReport.Test")
	proto.RegisterType((*TestReport_Test_TestAction)(nil), "google.fhir.stu3.proto.TestReport.Test.TestAction")
	proto.RegisterType((*TestReport_Teardown)(nil), "google.fhir.stu3.proto.TestReport.Teardown")
	proto.RegisterType((*TestReport_Teardown_TeardownAction)(nil), "google.fhir.stu3.proto.TestReport.Teardown.TeardownAction")
	proto.RegisterType((*TestScript)(nil), "google.fhir.stu3.proto.TestScript")
	proto.RegisterType((*TestScript_Origin)(nil), "google.fhir.stu3.proto.TestScript.Origin")
	proto.RegisterType((*TestScript_Destination)(nil), "google.fhir.stu3.proto.TestScript.Destination")
	proto.RegisterType((*TestScript_Metadata)(nil), "google.fhir.stu3.proto.TestScript.Metadata")
	proto.RegisterType((*TestScript_Metadata_Link)(nil), "google.fhir.stu3.proto.TestScript.Metadata.Link")
	proto.RegisterType((*TestScript_Metadata_Capability)(nil), "google.fhir.stu3.proto.TestScript.Metadata.Capability")
	proto.RegisterType((*TestScript_Fixture)(nil), "google.fhir.stu3.proto.TestScript.Fixture")
	proto.RegisterType((*TestScript_Variable)(nil), "google.fhir.stu3.proto.TestScript.Variable")
	proto.RegisterType((*TestScript_Rule)(nil), "google.fhir.stu3.proto.TestScript.Rule")
	proto.RegisterType((*TestScript_Rule_RuleParam)(nil), "google.fhir.stu3.proto.TestScript.Rule.RuleParam")
	proto.RegisterType((*TestScript_Ruleset)(nil), "google.fhir.stu3.proto.TestScript.Ruleset")
	proto.RegisterType((*TestScript_Ruleset_RulesetRule)(nil), "google.fhir.stu3.proto.TestScript.Ruleset.RulesetRule")
	proto.RegisterType((*TestScript_Ruleset_RulesetRule_RulesetRuleParam)(nil), "google.fhir.stu3.proto.TestScript.Ruleset.RulesetRule.RulesetRuleParam")
	proto.RegisterType((*TestScript_Setup)(nil), "google.fhir.stu3.proto.TestScript.Setup")
	proto.RegisterType((*TestScript_Setup_SetupAction)(nil), "google.fhir.stu3.proto.TestScript.Setup.SetupAction")
	proto.RegisterType((*TestScript_Setup_SetupAction_Operation)(nil), "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation")
	proto.RegisterType((*TestScript_Setup_SetupAction_Operation_RequestHeader)(nil), "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation.RequestHeader")
	proto.RegisterType((*TestScript_Setup_SetupAction_Assert)(nil), "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert")
	proto.RegisterType((*TestScript_Setup_SetupAction_Assert_ActionAssertRule)(nil), "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRule")
	proto.RegisterType((*TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam)(nil), "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRule.ActionAssertRuleParam")
	proto.RegisterType((*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset)(nil), "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset")
	proto.RegisterType((*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule)(nil), "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset.ActionAssertRulesetRule")
	proto.RegisterType((*TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param)(nil), "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset.ActionAssertRulesetRule.Param")
	proto.RegisterType((*TestScript_Test)(nil), "google.fhir.stu3.proto.TestScript.Test")
	proto.RegisterType((*TestScript_Test_TestAction)(nil), "google.fhir.stu3.proto.TestScript.Test.TestAction")
	proto.RegisterType((*TestScript_Teardown)(nil), "google.fhir.stu3.proto.TestScript.Teardown")
	proto.RegisterType((*TestScript_Teardown_TeardownAction)(nil), "google.fhir.stu3.proto.TestScript.Teardown.TeardownAction")
	proto.RegisterType((*ValueSet)(nil), "google.fhir.stu3.proto.ValueSet")
	proto.RegisterType((*ValueSet_Compose)(nil), "google.fhir.stu3.proto.ValueSet.Compose")
	proto.RegisterType((*ValueSet_Compose_ConceptSet)(nil), "google.fhir.stu3.proto.ValueSet.Compose.ConceptSet")
	proto.RegisterType((*ValueSet_Compose_ConceptSet_ConceptReference)(nil), "google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.ConceptReference")
	proto.RegisterType((*ValueSet_Compose_ConceptSet_ConceptReference_Designation)(nil), "google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.ConceptReference.Designation")
	proto.RegisterType((*ValueSet_Compose_ConceptSet_Filter)(nil), "google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.Filter")
	proto.RegisterType((*ValueSet_Expansion)(nil), "google.fhir.stu3.proto.ValueSet.Expansion")
	proto.RegisterType((*ValueSet_Expansion_Parameter)(nil), "google.fhir.stu3.proto.ValueSet.Expansion.Parameter")
	proto.RegisterType((*ValueSet_Expansion_Parameter_Value)(nil), "google.fhir.stu3.proto.ValueSet.Expansion.Parameter.Value")
	proto.RegisterType((*ValueSet_Expansion_Contains)(nil), "google.fhir.stu3.proto.ValueSet.Expansion.Contains")
	proto.RegisterType((*VisionPrescription)(nil), "google.fhir.stu3.proto.VisionPrescription")
	proto.RegisterType((*VisionPrescription_Reason)(nil), "google.fhir.stu3.proto.VisionPrescription.Reason")
	proto.RegisterType((*VisionPrescription_Dispense)(nil), "google.fhir.stu3.proto.VisionPrescription.Dispense")
	proto.RegisterType((*ContainedResource)(nil), "google.fhir.stu3.proto.ContainedResource")
}

func init() { proto.RegisterFile("proto/stu3/resources.proto", fileDescriptor_9302f8eabd8b1c44) }

var fileDescriptor_9302f8eabd8b1c44 = []byte{
	// 56472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xfd, 0x7b, 0x74, 0x24, 0x59,
	0x5a, 0x18, 0x88, 0x57, 0x2a, 0xdf, 0x5f, 0x66, 0x2a, 0xa5, 0x5b, 0x55, 0xdd, 0x9a, 0x9c, 0xee,
	0x79, 0x68, 0x1e, 0xcc, 0xab, 0xd5, 0xdd, 0xd5, 0x5d, 0x8f, 0x56, 0x55, 0x57, 0xb5, 0x5e, 0x55,
	0x52, 0x75, 0xa9, 0xa4, 0x0e, 0x55, 0xf5, 0x6f, 0x66, 0xc0, 0x24, 0xa1, 0x88, 0x2b, 0x29, 0xa6,
	0x32, 0x23, 0xb2, 0x23, 0x22, 0x55, 0xa5, 0x19, 0x0c, 0x0c, 0xbf, 0xc1, 0xcc, 0x59, 0x96, 0x65,
	0x6c, 0x2f, 0x1e, 0xcc, 0xfa, 0x30, 0x36, 0x06, 0xef, 0x01, 0xdb, 0xd8, 0x66, 0xd6, 0x0f, 0x30,
	0x0c, 0xb6, 0xc1, 0x2c, 0x18, 0x1b, 0x30, 0x0b, 0xb3, 0x78, 0x17, 0x3f, 0x67, 0x96, 0xe5, 0xb0,
	0x6b, 0xd6, 0xef, 0xe3, 0x35, 0xb6, 0xd9, 0x13, 0xf7, 0x15, 0x37, 0x53, 0xca, 0xcc, 0x7b, 0x23,
	0x25, 0xd5, 0x74, 0x76, 0xfe, 0x53, 0x95, 0x99, 0xba, 0xdf, 0x77, 0x23, 0xee, 0xe3, 0x7b, 0x3f,
	0xa0, 0xd6, 0xf2, 0xbd, 0xd0, 0x7b, 0x36, 0x08, 0xdb, 0x2f, 0x3c, 0xeb, 0xe3, 0xc0, 0x6b, 0xfb,
	0x16, 0x0e, 0xe6, 0xc8, 0x8f, 0xe8, 0x89, 0x5d, 0xcf, 0xdb, 0x6d, 0xe0, 0xb9, 0x9d, 0x3d, 0xc7,
	0x9f, 0x8b, 0x46, 0xd0, 0xdf, 0x6b, 0x4f, 0x49, 0x30, 0xa6, 0xeb, 0x7a, 0xa1, 0x19, 0x3a, 0x9e,
	0xcb, 0xa0, 0x6a, 0x4f, 0x48, 0x7f, 0xb5, 0x3c, 0x9b, 0x63, 0xab, 0xc9, 0x33, 0xd9, 0x66, 0x68,
	0x86, 0x07, 0x2d, 0xf1, 0xb7, 0x77, 0x48, 0x7f, 0x6b, 0xe2, 0xd0, 0xec, 0xfa, 0xfb, 0xec, 0xbf,
	0x3f, 0x07, 0xf9, 0x05, 0xcb, 0xf2, 0xda, 0x6e, 0x88, 0x3e, 0x04, 0x13, 0x8e, 0x3d, 0x93, 0x7a,
	0x57, 0xea, 0x03, 0xa5, 0x0b, 0xb5, 0xb9, 0xa3, 0x1f, 0x71, 0x6e, 0xcd, 0x36, 0x26, 0x1c, 0x1b,
	0x3d, 0x07, 0x99, 0x08, 0xdd, 0xcc, 0x04, 0x19, 0xfd, 0x54, 0xaf, 0xd1, 0xeb, 0x38, 0x34, 0x0d,
	0x32, 0x12, 0x2d, 0xc2, 0xa4, 0xd3, 0x6c, 0x35, 0x1c, 0xcb, 0x09, 0xeb, 0x7e, 0xbb, 0x81, 0x83,
	0x99, 0x34, 0x81, 0x7d, 0x7b, 0x2f, 0xd8, 0xfb, 0xbe, 0x63, 0x54, 0x38, 0x88, 0x11, 0x41, 0xa0,
	0x57, 0xa0, 0xd0, 0x30, 0xdd, 0xdd, 0xb6, 0xb9, 0x8b, 0x67, 0x32, 0x04, 0xfa, 0xbd, 0xbd, 0xa0,
	0xef, 0xb0, 0x71, 0x4b, 0x9e, 0x8d, 0x0d, 0x01, 0x85, 0x2e, 0x42, 0x26, 0xc4, 0x8f, 0xc2, 0x99,
	0x2c, 0x81, 0x7e, 0x77, 0x2f, 0xe8, 0xbb, 0xa6, 0xef, 0x9b, 0xa1, 0xb3, 0x8f, 0x0d, 0x32, 0x1c,
	0xdd, 0x82, 0xa2, 0xe5, 0xb9, 0xa1, 0xe9, 0xb8, 0xd8, 0x9e, 0xc9, 0xbd, 0x2b, 0xfd, 0x81, 0xd2,
	0x85, 0x0f, 0xf6, 0x82, 0x5d, 0xe2, 0x03, 0x0d, 0xb6, 0xeb, 0x46, 0x0c, 0x8b, 0x6e, 0x40, 0x11,
	0x3f, 0x0a, 0xb1, 0x1b, 0x38, 0x9e, 0x3b, 0x93, 0x27, 0x88, 0x7a, 0x3e, 0xc4, 0x0a, 0x1f, 0x68,
	0xc4, 0x30, 0x68, 0x13, 0x50, 0xd3, 0xb3, 0x9d, 0x1d, 0x07, 0xfb, 0xf5, 0x18, 0x53, 0x41, 0x15,
	0xd3, 0x34, 0x07, 0x16, 0x3f, 0xa1, 0x45, 0x00, 0xc7, 0xc6, 0x6e, 0x48, 0x7e, 0x9e, 0x29, 0x12,
	0x4c, 0xb3, 0xbd, 0xb7, 0x9f, 0x8f, 0x34, 0x24, 0x28, 0xb4, 0x00, 0xb9, 0x20, 0x34, 0xc3, 0x76,
	0x30, 0x03, 0x64, 0x61, 0x7b, 0x2e, 0x0e, 0x3b, 0x6b, 0x5b, 0x64, 0x30, 0xd9, 0x1b, 0x06, 0x88,
	0xae, 0x42, 0x26, 0x3a, 0x98, 0x33, 0x25, 0x82, 0xe0, 0xeb, 0x7a, 0xaf, 0xae, 0x8d, 0xcd, 0xed,
	0x06, 0x5e, 0xf2, 0x5c, 0x0b, 0xb7, 0x42, 0x83, 0x00, 0xa1, 0x0b, 0x90, 0x71, 0xcd, 0x26, 0x9e,
	0x29, 0x13, 0xe0, 0x77, 0xf4, 0x02, 0xde, 0x0a, 0x7d, 0xc7, 0xdd, 0x35, 0xc8, 0x58, 0xf4, 0xb9,
	0x34, 0xe4, 0x83, 0xf6, 0xf6, 0x27, 0xb0, 0x15, 0xce, 0x54, 0xfa, 0x1f, 0x07, 0x03, 0xef, 0x60,
	0x1f, 0xbb, 0x16, 0x5e, 0xfc, 0xb5, 0x89, 0x7f, 0xf3, 0x07, 0xff, 0xf9, 0xef, 0xe4, 0x9e, 0xdd,
	0x0b, 0xc3, 0xd6, 0xfc, 0xb3, 0xcf, 0xee, 0x35, 0x2e, 0xcf, 0x79, 0xfe, 0xee, 0xb3, 0x11, 0xc0,
	0xb3, 0x5b, 0xa1, 0xdf, 0xb6, 0xc2, 0xb6, 0x8f, 0x97, 0xf1, 0x8e, 0xe3, 0x3a, 0xd1, 0xd5, 0x7d,
	0x76, 0xd3, 0x0c, 0x1d, 0xec, 0x86, 0x04, 0x68, 0x4e, 0x15, 0x68, 0x19, 0xef, 0x3b, 0x16, 0x26,
	0x30, 0x2f, 0x2a, 0x4f, 0xe4, 0x9b, 0x56, 0x48, 0x3e, 0x62, 0x9f, 0x40, 0x3e, 0xa7, 0x0a, 0x79,
	0xc7, 0xb3, 0x08, 0x99, 0x21, 0x50, 0x2f, 0xa9, 0x42, 0xad, 0x62, 0xb3, 0x11, 0xee, 0x59, 0xa6,
	0x8f, 0xb7, 0xb0, 0xaf, 0xff, 0xb8, 0x1b, 0xfe, 0xae, 0xe9, 0x3a, 0x9f, 0x24, 0x13, 0x1b, 0x7c,
	0x1b, 0xd0, 0x25, 0xc8, 0xb5, 0xb0, 0xef, 0x78, 0xf6, 0xcc, 0x64, 0xff, 0x8d, 0xdc, 0x24, 0xa3,
	0x0c, 0x36, 0x3a, 0x82, 0x8b, 0xde, 0x7e, 0x1f, 0xcf, 0x54, 0xd5, 0xe0, 0xe8, 0x68, 0x74, 0x19,
	0xf2, 0xdb, 0x66, 0xc3, 0x74, 0x2d, 0x3c, 0x33, 0x45, 0x00, 0x9f, 0xee, 0x49, 0xc8, 0x3c, 0x17,
	0x1f, 0x18, 0x7c, 0x34, 0x5a, 0x86, 0x82, 0xe5, 0xed, 0x63, 0x3f, 0x22, 0x44, 0xd3, 0xe4, 0xc6,
	0x7c, 0x60, 0xc0, 0x89, 0x9f, 0x5b, 0x62, 0xe3, 0x0d, 0x01, 0x89, 0x02, 0xc8, 0x7a, 0x0f, 0x5d,
	0xec, 0xcf, 0x20, 0xd5, 0xe3, 0x37, 0x3f, 0xc4, 0x2a, 0xd3, 0xb9, 0xd0, 0x2b, 0x50, 0xb2, 0x71,
	0x60, 0xf9, 0x4e, 0x2b, 0xfa, 0x75, 0xe6, 0xac, 0xd2, 0x8d, 0x91, 0x41, 0x22, 0x62, 0xb8, 0xdb,
	0x36, 0x7d, 0xd3, 0x0d, 0x3d, 0x7f, 0xe6, 0x5c, 0x7f, 0x62, 0xc8, 0xdf, 0xfe, 0x16, 0x07, 0x30,
	0x62, 0xd8, 0xda, 0x77, 0xa5, 0xa1, 0xc0, 0x97, 0x05, 0xcd, 0x49, 0xdc, 0x67, 0xd0, 0xe3, 0x44,
	0x1c, 0xa8, 0x83, 0x92, 0x4e, 0x1c, 0x1b, 0x25, 0x4d, 0x0f, 0x41, 0x49, 0x3f, 0x25, 0x9d, 0x8a,
	0x8c, 0xea, 0x96, 0x5e, 0xfb, 0x57, 0xbf, 0xfa, 0x9d, 0xff, 0x57, 0x26, 0xa5, 0x77, 0x67, 0x8f,
	0x38, 0x4c, 0x37, 0xa0, 0xd0, 0xf2, 0x1d, 0xcf, 0x77, 0xc2, 0x03, 0xc6, 0xdd, 0xde, 0xd3, 0xf3,
	0x16, 0x78, 0x81, 0x13, 0x9d, 0xff, 0x35, 0x37, 0x34, 0x04, 0x50, 0xed, 0x2f, 0x66, 0xa0, 0x28,
	0xb6, 0x69, 0x14, 0xb6, 0xe3, 0x77, 0x53, 0x90, 0x6d, 0x99, 0x7e, 0x78, 0xa0, 0xbe, 0x19, 0x7f,
	0x39, 0x25, 0xed, 0x46, 0x22, 0x22, 0x7f, 0x51, 0x15, 0xc8, 0xc0, 0x0d, 0x33, 0xc4, 0xf6, 0x26,
	0xf6, 0x03, 0x46, 0x7b, 0x13, 0x5e, 0x6b, 0xf2, 0x8a, 0xe8, 0x0a, 0xe4, 0x3d, 0xb7, 0xbe, 0xe7,
	0x35, 0x6c, 0xb6, 0xfb, 0xef, 0xec, 0xf5, 0xb6, 0x8b, 0x9e, 0xd7, 0xc0, 0xa6, 0x6b, 0xe4, 0x3c,
	0x77, 0xd5, 0x6b, 0xd8, 0x12, 0xd1, 0xcd, 0xe9, 0x10, 0xdd, 0xf9, 0xab, 0x7f, 0xeb, 0x0b, 0x5f,
	0xf9, 0x6b, 0xd9, 0xf4, 0x8f, 0xff, 0xd7, 0xaf, 0x7e, 0x5e, 0x7d, 0xa9, 0x18, 0x3d, 0x98, 0xfd,
	0xc5, 0x59, 0x40, 0x0b, 0x11, 0x11, 0x76, 0xc2, 0x83, 0xf8, 0xcf, 0x63, 0x11, 0xf4, 0xad, 0x29,
	0x82, 0x3e, 0x03, 0xe9, 0xb6, 0xdf, 0x98, 0x29, 0x0e, 0xde, 0x8d, 0x68, 0x5c, 0x97, 0xc4, 0x0a,
	0x89, 0x24, 0xd6, 0x2b, 0x90, 0xdf, 0xc7, 0x3e, 0x79, 0xf2, 0x92, 0x12, 0x91, 0xe3, 0xc3, 0x13,
	0xc9, 0x9a, 0x2f, 0x42, 0x36, 0x74, 0xc2, 0x06, 0x66, 0x82, 0xe6, 0x20, 0x20, 0x3a, 0x18, 0xad,
	0x0b, 0xa9, 0x9a, 0x8a, 0x43, 0xcf, 0xf4, 0xbc, 0x99, 0xed, 0xed, 0x86, 0x43, 0xa5, 0xb8, 0x58,
	0xb2, 0x5e, 0xcc, 0x51, 0x5a, 0x26, 0x24, 0xec, 0x25, 0x28, 0xe3, 0x47, 0xd1, 0xe5, 0x6d, 0x62,
	0x37, 0x34, 0x1b, 0x4c, 0x56, 0x1a, 0x48, 0x27, 0x3a, 0x80, 0xd0, 0x8b, 0x90, 0xb1, 0xcd, 0x90,
	0xcb, 0x4b, 0xef, 0xea, 0x05, 0xbc, 0x6c, 0x86, 0xf8, 0x9e, 0xd3, 0xc4, 0x06, 0x19, 0x8d, 0xae,
	0x41, 0xb1, 0x15, 0x3d, 0x63, 0xb0, 0x87, 0xfd, 0x99, 0x69, 0xa5, 0x35, 0x88, 0x01, 0xd0, 0x62,
	0xa7, 0xc8, 0x82, 0xfa, 0x4f, 0xbd, 0x6e, 0xfa, 0x0f, 0x6c, 0xef, 0xa1, 0xdb, 0x29, 0xb4, 0xcc,
	0x43, 0xbe, 0xd5, 0xf6, 0x5b, 0x5e, 0x80, 0x99, 0xc8, 0x33, 0x18, 0x9e, 0x03, 0x44, 0xbb, 0xd7,
	0x0e, 0xa2, 0x0b, 0x7f, 0x4e, 0x6d, 0xf7, 0xc8, 0x60, 0xb4, 0x00, 0x15, 0xb3, 0xd5, 0xf2, 0xbd,
	0x7d, 0xb3, 0x51, 0x27, 0x4b, 0x76, 0xbe, 0x3f, 0xa1, 0x8a, 0x96, 0xcc, 0x28, 0x73, 0x90, 0xe8,
	0x1b, 0xba, 0x09, 0x53, 0x0d, 0x33, 0x08, 0xeb, 0x3e, 0xde, 0x77, 0xf0, 0x43, 0x8a, 0xe5, 0x09,
	0x05, 0x2c, 0x93, 0x11, 0x94, 0x41, 0x80, 0x08, 0x9e, 0x35, 0x98, 0xc2, 0x3b, 0x3b, 0x98, 0x08,
	0xbd, 0x75, 0x46, 0xec, 0x9f, 0x54, 0x22, 0xf6, 0x55, 0x01, 0x47, 0x7f, 0x40, 0x2b, 0x50, 0x6a,
	0x07, 0xb8, 0x1e, 0x91, 0x93, 0x88, 0x88, 0xcd, 0x90, 0xcb, 0xd7, 0x93, 0x04, 0xde, 0x0f, 0x08,
	0xfd, 0x23, 0x63, 0x0d, 0x68, 0x07, 0xfc, 0x33, 0x7a, 0x15, 0xca, 0x9f, 0x68, 0xfb, 0x4e, 0x60,
	0x3b, 0x16, 0xd9, 0xd3, 0xb7, 0x11, 0x3c, 0xca, 0x5a, 0x5f, 0x07, 0x30, 0x7a, 0x19, 0xb2, 0xa1,
	0xd7, 0x72, 0xac, 0x99, 0x9a, 0x1e, 0x16, 0x0a, 0x15, 0xbd, 0x52, 0xf4, 0x3a, 0xbe, 0xb3, 0xdd,
	0x8e, 0x24, 0xda, 0xb7, 0x13, 0x24, 0xef, 0xe9, 0x47, 0x5b, 0xd9, 0x50, 0x43, 0x86, 0x43, 0x37,
	0x20, 0x4f, 0x88, 0xac, 0x15, 0xce, 0x3c, 0x45, 0x50, 0xbc, 0xaf, 0x2f, 0x79, 0xb6, 0xc2, 0x65,
	0x1c, 0x9a, 0x4e, 0xc3, 0xe0, 0x50, 0xe8, 0x7a, 0x44, 0xe1, 0x5b, 0x07, 0xbe, 0xb3, 0xbb, 0x17,
	0xce, 0x3c, 0xad, 0x78, 0x48, 0x63, 0x10, 0x64, 0xc0, 0x94, 0x4f, 0x85, 0x8a, 0xba, 0xe9, 0x87,
	0xce, 0x4e, 0xf4, 0x24, 0xef, 0xe8, 0xbf, 0x22, 0x4c, 0x08, 0x59, 0x60, 0xc3, 0x8d, 0xaa, 0xdf,
	0xf9, 0x03, 0xf2, 0x21, 0xdf, 0x70, 0xb6, 0x7d, 0xd3, 0x3f, 0x98, 0x79, 0x67, 0x7f, 0x02, 0x1f,
	0x0b, 0x51, 0x17, 0xf5, 0xa4, 0xa7, 0x3b, 0x14, 0xbf, 0xc1, 0x27, 0x42, 0xd7, 0x20, 0xf3, 0xc0,
	0x71, 0xed, 0x99, 0x77, 0x91, 0x25, 0xf8, 0x40, 0xef, 0x09, 0x29, 0x6f, 0xbb, 0x77, 0xd0, 0xa2,
	0x2c, 0x96, 0x40, 0xa1, 0xab, 0x90, 0xb1, 0x3c, 0x1b, 0xcf, 0xbc, 0x5b, 0xd3, 0x8e, 0x10, 0x01,
	0xa1, 0xfb, 0x90, 0x0b, 0x9d, 0xa6, 0xe3, 0xee, 0xce, 0xcc, 0x12, 0xf0, 0x8b, 0xbd, 0xf5, 0x9a,
	0x6e, 0xd9, 0x65, 0xee, 0x1e, 0x01, 0x8c, 0x9e, 0x66, 0x31, 0xf7, 0x1f, 0xff, 0xf9, 0x57, 0x7e,
	0x31, 0x9b, 0x32, 0x18, 0x32, 0xd4, 0x86, 0x42, 0x83, 0x69, 0xd9, 0x33, 0xef, 0x51, 0x95, 0x45,
	0x2f, 0x25, 0x53, 0xe3, 0x0d, 0x31, 0x15, 0xfa, 0x28, 0x94, 0x22, 0xe1, 0xd0, 0xb1, 0x9c, 0x96,
	0xe9, 0x86, 0x33, 0xef, 0x25, 0x1b, 0x78, 0x49, 0xe3, 0x95, 0x36, 0x63, 0x68, 0x43, 0x46, 0x85,
	0xee, 0x41, 0xbe, 0xe5, 0x7b, 0x76, 0xdb, 0x0a, 0x67, 0xde, 0x47, 0xde, 0xe7, 0x82, 0x0e, 0x56,
	0x0a, 0x29, 0x56, 0x89, 0xa3, 0x42, 0x8b, 0x50, 0x78, 0xa3, 0x6d, 0xba, 0x61, 0xa4, 0xc2, 0xbc,
	0x9f, 0xa0, 0x7d, 0x7f, 0x4f, 0x52, 0x1b, 0x49, 0x65, 0xf8, 0x35, 0x36, 0xda, 0x10, 0x70, 0x91,
	0x34, 0x6b, 0x7b, 0x84, 0x58, 0x7f, 0x1d, 0x79, 0xdd, 0x9e, 0x04, 0x6e, 0x99, 0x8c, 0x32, 0xd8,
	0x68, 0xb4, 0x0c, 0xc5, 0x6d, 0xcf, 0x3e, 0xa8, 0x07, 0x4e, 0x88, 0x67, 0x3e, 0xa0, 0x47, 0x47,
	0x0a, 0x11, 0xe4, 0x96, 0x13, 0x62, 0xf4, 0x29, 0x28, 0x86, 0xbe, 0xe9, 0x06, 0x3b, 0x9e, 0xdf,
	0x9c, 0xf9, 0xe0, 0x09, 0x69, 0xf5, 0xe2, 0xb7, 0x75, 0xb3, 0x65, 0xc4, 0xf3, 0xa1, 0x6f, 0x80,
	0x8a, 0x7d, 0xe0, 0x9a, 0x4d, 0xc7, 0xaa, 0xef, 0x9b, 0x8d, 0x36, 0x9e, 0xf9, 0x10, 0x79, 0x8d,
	0xcb, 0x1a, 0x5b, 0xb3, 0x4c, 0xe1, 0x5f, 0x8f, 0xc0, 0x8d, 0xb2, 0x2d, 0x7d, 0xab, 0x7d, 0x76,
	0x02, 0x20, 0x3e, 0xe2, 0xe8, 0x3a, 0x94, 0xe9, 0xe1, 0x66, 0x73, 0x0d, 0xd0, 0x14, 0x29, 0xe4,
	0xea, 0x19, 0x71, 0x25, 0x6e, 0x40, 0x31, 0x62, 0x67, 0xf5, 0xd0, 0x69, 0x62, 0x26, 0xc2, 0x0f,
	0x14, 0x26, 0x56, 0xcf, 0x18, 0x05, 0x9b, 0x7d, 0x46, 0x57, 0x84, 0xda, 0x92, 0x56, 0xe1, 0x64,
	0xd1, 0xd4, 0xcc, 0x5a, 0x74, 0x11, 0xb2, 0xbe, 0xe9, 0x0a, 0xf9, 0xbd, 0xa7, 0xcd, 0xc7, 0x88,
	0x06, 0xad, 0x9e, 0x31, 0xe8, 0xe8, 0xc5, 0x02, 0xa7, 0x0d, 0xb5, 0xdf, 0x9a, 0x80, 0x92, 0x74,
	0x35, 0x46, 0x41, 0x57, 0x5e, 0x67, 0xd6, 0x57, 0xba, 0x24, 0xcf, 0xf7, 0x3b, 0x32, 0x9e, 0x2b,
	0xbd, 0x3b, 0x27, 0xbe, 0x42, 0xd8, 0xa4, 0xf6, 0xd8, 0xab, 0x90, 0xf1, 0xbd, 0x06, 0x66, 0x3a,
	0x8e, 0x3a, 0x11, 0x8e, 0x80, 0x6a, 0x5f, 0x98, 0x80, 0x3c, 0xa3, 0x11, 0xe8, 0xc7, 0x53, 0x50,
	0xf4, 0xf9, 0x45, 0x61, 0x4b, 0xac, 0x70, 0xa3, 0x3c, 0x72, 0xa3, 0x2e, 0xa8, 0xde, 0xa8, 0x75,
	0x6c, 0x3b, 0x92, 0x11, 0xf4, 0x79, 0xe5, 0x9b, 0xd8, 0xde, 0x0e, 0x42, 0xd3, 0xb5, 0xa2, 0x53,
	0x12, 0x3f, 0x26, 0xba, 0x07, 0x53, 0x16, 0x7b, 0xb3, 0x48, 0x50, 0x8a, 0x5e, 0x8d, 0x1d, 0x71,
	0xd5, 0x95, 0x58, 0x3d, 0x63, 0x54, 0xad, 0xce, 0x9f, 0x16, 0x8b, 0x82, 0xe6, 0xd6, 0x7e, 0x36,
	0x0d, 0x65, 0xf9, 0xaa, 0x8e, 0xc2, 0x09, 0xec, 0xb2, 0x4b, 0x66, 0xf4, 0xed, 0x92, 0x17, 0x20,
	0xd3, 0x32, 0xc3, 0x3d, 0x76, 0xe8, 0x06, 0x2a, 0x66, 0xd1, 0x58, 0x34, 0x2f, 0xa9, 0xf3, 0x39,
	0x25, 0xb8, 0x58, 0x91, 0xbf, 0x0e, 0x80, 0x1f, 0xb5, 0x7c, 0x1c, 0x30, 0x4d, 0x5a, 0x05, 0x5a,
	0x82, 0x98, 0xbf, 0x29, 0x19, 0x50, 0xe6, 0xd5, 0x0d, 0x28, 0xdd, 0x44, 0x7b, 0xf6, 0x17, 0xde,
	0x09, 0xe5, 0x05, 0x3b, 0x52, 0x4f, 0xf1, 0xca, 0x3e, 0x1e, 0x3b, 0xf2, 0xc6, 0x8e, 0x3c, 0xea,
	0xc8, 0x4b, 0x25, 0x30, 0x8b, 0xdc, 0x81, 0x82, 0x65, 0x86, 0x78, 0xd7, 0xf3, 0x0f, 0x98, 0x2b,
	0xef, 0xb9, 0x9e, 0xbc, 0x40, 0x3a, 0x72, 0x4b, 0x0c, 0x86, 0x6e, 0x12, 0xc7, 0x30, 0x9c, 0x4f,
	0xef, 0x4f, 0x4d, 0xc4, 0xfe, 0xb9, 0xb2, 0x2a, 0xe1, 0xff, 0x27, 0x43, 0x98, 0x6e, 0x2f, 0xab,
	0x9b, 0x6e, 0x03, 0x6c, 0xfa, 0xd6, 0xde, 0x16, 0x7d, 0xba, 0xa1, 0x78, 0x8d, 0xa6, 0x53, 0x30,
	0xf6, 0x95, 0x71, 0x43, 0x4c, 0x45, 0xcb, 0x10, 0xb3, 0x0f, 0x05, 0x1f, 0x9b, 0x54, 0xe7, 0x9e,
	0x54, 0x55, 0xe8, 0x2e, 0xeb, 0x71, 0xc5, 0x25, 0xcf, 0xb5, 0x1d, 0xaa, 0x8a, 0xf0, 0xb9, 0x3a,
	0x34, 0xa0, 0xea, 0xe9, 0x69, 0x40, 0x6b, 0x50, 0x0a, 0x22, 0xa1, 0xaf, 0x1d, 0xb8, 0x38, 0x08,
	0x98, 0xd1, 0x4a, 0xf9, 0x1c, 0xca, 0xb0, 0x68, 0x01, 0xf2, 0x5e, 0x3b, 0xb4, 0xbc, 0x26, 0x66,
	0x06, 0x2c, 0x65, 0x34, 0x1c, 0x0e, 0xfd, 0x6e, 0x2a, 0x5a, 0x7d, 0xcb, 0xf3, 0x6d, 0x1d, 0x9f,
	0xdf, 0x8f, 0x0e, 0x71, 0xa4, 0x93, 0xbb, 0x8f, 0x93, 0xf9, 0x31, 0x0c, 0xf1, 0x7e, 0xe8, 0x4b,
	0x29, 0x98, 0xc6, 0x11, 0x6d, 0xa8, 0xcb, 0x3a, 0xe8, 0x59, 0xd5, 0xb7, 0x76, 0x87, 0x7c, 0x7e,
	0xdd, 0x7b, 0x35, 0x45, 0x9e, 0x55, 0x96, 0xea, 0xbb, 0x04, 0x92, 0x73, 0xfa, 0x02, 0xc9, 0xc7,
	0x60, 0x32, 0x68, 0x07, 0x2d, 0x6c, 0x85, 0x75, 0x4c, 0xb5, 0xda, 0xf3, 0xe4, 0xca, 0x5d, 0x50,
	0x21, 0xa9, 0x73, 0x5b, 0x14, 0x74, 0x85, 0x6a, 0xb8, 0x95, 0x40, 0xfe, 0x8a, 0xbe, 0x94, 0x86,
	0x27, 0x19, 0x25, 0xa8, 0x37, 0x09, 0x45, 0x69, 0xd4, 0xf7, 0x9c, 0x20, 0x8c, 0xe8, 0xf6, 0x13,
	0xaa, 0xf7, 0xfa, 0x5f, 0x4c, 0x24, 0xbc, 0xd8, 0x04, 0xec, 0x05, 0x65, 0x77, 0xd5, 0x76, 0x80,
	0xfd, 0xfd, 0x98, 0xe4, 0xa9, 0xcb, 0x3a, 0x8d, 0x06, 0xf6, 0x77, 0x0f, 0xd6, 0xdc, 0xd0, 0x6b,
	0x60, 0x3f, 0x92, 0xb3, 0x09, 0xfc, 0x55, 0x55, 0xf8, 0x9b, 0x66, 0xd3, 0x69, 0x1c, 0xac, 0xe3,
	0xe6, 0x36, 0xf6, 0x57, 0xe9, 0xe2, 0xe8, 0x9d, 0xaa, 0xb5, 0x66, 0xb3, 0xcd, 0x1d, 0x6d, 0x7a,
	0x4b, 0xb5, 0xe9, 0x7b, 0x16, 0xb6, 0xdb, 0x3e, 0x36, 0xce, 0xb3, 0x6d, 0xa2, 0x74, 0xbf, 0xc1,
	0x9e, 0x03, 0xfd, 0xd1, 0x14, 0x20, 0xa1, 0x31, 0xd4, 0x6d, 0xcf, 0x6a, 0x37, 0xb1, 0x1b, 0xce,
	0x3c, 0xa9, 0xba, 0x77, 0x37, 0xf4, 0xc2, 0x35, 0x96, 0xd9, 0x04, 0x02, 0x81, 0x31, 0x2d, 0x66,
	0xe7, 0x7f, 0x43, 0x21, 0x64, 0x83, 0xb0, 0x6d, 0x1f, 0x30, 0xab, 0xae, 0xc2, 0x53, 0x5c, 0xd5,
	0xa5, 0x15, 0x8c, 0x71, 0x46, 0xb3, 0x18, 0x74, 0xb2, 0xda, 0xff, 0x5c, 0x84, 0x4a, 0xc7, 0x59,
	0x1f, 0x05, 0x6d, 0xe6, 0x5f, 0x4d, 0x40, 0xc1, 0x71, 0xa9, 0x72, 0xa8, 0xe1, 0x7e, 0x9e, 0x90,
	0xdc, 0xcf, 0xfa, 0x5a, 0xe8, 0x50, 0x82, 0xc8, 0x2b, 0xfa, 0x70, 0x0b, 0x76, 0xd3, 0x71, 0x9d,
	0x20, 0xf4, 0x63, 0x2c, 0x57, 0xf5, 0xb1, 0x6c, 0x85, 0x66, 0x88, 0x9b, 0x09, 0x83, 0xa4, 0x0c,
	0xb1, 0xca, 0x68, 0x03, 0x8a, 0x96, 0xd9, 0x0e, 0xcc, 0x46, 0x1c, 0x01, 0xf1, 0xbc, 0x9a, 0xec,
	0xca, 0x80, 0x88, 0xf0, 0x1a, 0xe3, 0x40, 0x1f, 0x87, 0x73, 0xe2, 0x4b, 0xdd, 0x0c, 0x02, 0x1c,
	0x04, 0xe4, 0x8e, 0xe6, 0xf4, 0xd8, 0xff, 0x59, 0x81, 0x64, 0x41, 0xe0, 0x40, 0xdb, 0xf0, 0x74,
	0x8c, 0x9b, 0xa9, 0xf5, 0x75, 0x66, 0x7c, 0x27, 0xa2, 0x8a, 0x9a, 0x3a, 0xf9, 0x76, 0x81, 0x84,
	0x19, 0x4c, 0x8c, 0x18, 0x05, 0x32, 0x60, 0x2a, 0x9e, 0xa3, 0x89, 0xc3, 0x3d, 0xcf, 0x9e, 0x29,
	0xe8, 0x3d, 0x7b, 0x55, 0x20, 0x58, 0x27, 0xf0, 0xe8, 0xe7, 0x53, 0x32, 0x52, 0xb3, 0x1d, 0xee,
	0x79, 0x5c, 0xd5, 0x50, 0x38, 0xdf, 0x8f, 0x86, 0x64, 0xea, 0x57, 0x92, 0x40, 0x1a, 0x5e, 0x03,
	0x4b, 0x2f, 0xb2, 0x40, 0x9e, 0xb9, 0x73, 0x71, 0x7c, 0x1c, 0xb4, 0x1b, 0x21, 0x53, 0x78, 0x12,
	0x2c, 0x8e, 0x41, 0xe0, 0xe7, 0x5f, 0x91, 0x14, 0x7a, 0xe5, 0x97, 0x94, 0x8f, 0xe2, 0xec, 0x5f,
	0x98, 0x01, 0x74, 0x98, 0xeb, 0x8d, 0x15, 0xfa, 0xb1, 0x42, 0x9f, 0x34, 0x32, 0x17, 0x43, 0xd5,
	0x6a, 0x38, 0x2e, 0x11, 0x10, 0x3b, 0x42, 0x74, 0xaf, 0xf5, 0xa4, 0x8d, 0x87, 0xce, 0xdf, 0x12,
	0x43, 0x20, 0x45, 0xed, 0x4e, 0x5a, 0x1d, 0xbf, 0xa1, 0x03, 0x38, 0xbb, 0x8f, 0x7d, 0x67, 0x87,
	0xd1, 0x74, 0x3e, 0x15, 0x55, 0xfc, 0x5f, 0x51, 0x9f, 0xea, 0x75, 0x09, 0xc9, 0x11, 0xa1, 0x0c,
	0x68, 0xff, 0xd0, 0xdf, 0xd1, 0x4d, 0x66, 0x64, 0x28, 0x0f, 0x70, 0x44, 0x1d, 0x9a, 0x2b, 0x76,
	0x1c, 0x12, 0x7b, 0x83, 0x21, 0x99, 0x3e, 0x2a, 0x03, 0x5c, 0x65, 0x87, 0x97, 0xe8, 0x68, 0x03,
	0xc8, 0xd7, 0x43, 0xc9, 0xf2, 0x9d, 0x30, 0x5a, 0xa8, 0x88, 0x2b, 0xd1, 0x30, 0x8e, 0x97, 0x34,
	0xd0, 0xc6, 0xc0, 0x04, 0xb3, 0x8c, 0x4d, 0x78, 0x3a, 0xab, 0x49, 0x3c, 0x9d, 0x8f, 0x20, 0xdf,
	0xa2, 0x8a, 0x22, 0xd3, 0x8a, 0x55, 0xa4, 0xbd, 0x21, 0x82, 0xe3, 0x0c, 0x3e, 0x1d, 0xba, 0x0b,
	0x59, 0xcf, 0x0d, 0x70, 0xc8, 0xd4, 0xe8, 0xe7, 0xd4, 0x57, 0x63, 0x6e, 0x23, 0x82, 0x13, 0x7e,
	0x43, 0x8a, 0x06, 0xad, 0x40, 0x25, 0x62, 0xce, 0x7e, 0x88, 0x6d, 0x1a, 0x21, 0x81, 0x14, 0x2d,
	0x22, 0x65, 0x0e, 0x46, 0x62, 0x24, 0x7e, 0x4c, 0x56, 0xce, 0xcf, 0xea, 0x39, 0x1a, 0x92, 0x73,
	0x34, 0xed, 0x65, 0x8c, 0x15, 0xec, 0xdf, 0x4d, 0x41, 0x81, 0xbd, 0x81, 0xcf, 0xb4, 0xd3, 0x13,
	0xb6, 0x26, 0x9c, 0x46, 0x6c, 0x63, 0x07, 0xe7, 0x16, 0xef, 0x87, 0xd6, 0xa0, 0x4a, 0x22, 0x61,
	0x3c, 0xcb, 0x6a, 0xfb, 0xd4, 0x19, 0x74, 0x5e, 0x71, 0x9b, 0x49, 0x30, 0xcc, 0x86, 0x80, 0x43,
	0x97, 0x20, 0xe3, 0x7a, 0x24, 0x90, 0xa6, 0x2f, 0x3d, 0x5d, 0x10, 0xf9, 0x37, 0x06, 0x19, 0x8f,
	0x36, 0x24, 0xd3, 0x19, 0x55, 0xd3, 0x5e, 0xd0, 0x38, 0xba, 0x06, 0x03, 0x8d, 0x6d, 0x62, 0xb5,
	0x2f, 0x4e, 0x40, 0x96, 0x9c, 0xe8, 0x4e, 0x67, 0x68, 0x2a, 0x81, 0x33, 0xf4, 0x59, 0x48, 0x47,
	0x9c, 0x77, 0xa2, 0x3f, 0xdf, 0x5e, 0x20, 0xee, 0xcc, 0x68, 0xe4, 0xa9, 0x7b, 0x4f, 0xd1, 0x75,
	0x28, 0x07, 0x44, 0x66, 0x65, 0xfe, 0x62, 0x25, 0x27, 0x4d, 0x34, 0x2d, 0x85, 0x5a, 0xcc, 0x33,
	0xaa, 0x51, 0xfb, 0xdb, 0x59, 0x28, 0xf0, 0xc5, 0x1c, 0x05, 0x4d, 0x71, 0x05, 0x8a, 0x01, 0x57,
	0xe0, 0xd8, 0x9a, 0x2a, 0x93, 0xf2, 0x18, 0x12, 0xdd, 0x87, 0x4a, 0xd3, 0x74, 0x9d, 0x1d, 0x1c,
	0xd0, 0x43, 0x3b, 0x93, 0xd5, 0x8a, 0x61, 0x10, 0x1c, 0xb6, 0x13, 0x4b, 0xb7, 0x11, 0x2c, 0xa7,
	0x6f, 0x04, 0xbb, 0xc4, 0xc9, 0x7d, 0x5e, 0xf1, 0xbe, 0x32, 0xb2, 0x6e, 0x40, 0x21, 0xc0, 0x11,
	0xbb, 0x0f, 0x0f, 0x98, 0xd6, 0xa2, 0xc1, 0x8e, 0xb7, 0x18, 0x24, 0x65, 0xc7, 0x1c, 0x0f, 0xba,
	0x0b, 0x93, 0xf8, 0x51, 0xcb, 0x0b, 0xda, 0x3e, 0xae, 0xfb, 0x5e, 0x3b, 0xc4, 0x4c, 0x75, 0x51,
	0x5e, 0xf0, 0x0a, 0x07, 0x37, 0x22, 0x68, 0x41, 0x4a, 0x40, 0x8f, 0x94, 0x24, 0xf4, 0xfc, 0x1d,
	0x7a, 0xcb, 0xd9, 0xbf, 0x38, 0x03, 0xa5, 0x85, 0x56, 0xcb, 0x73, 0xdc, 0xb0, 0x39, 0x76, 0xfc,
	0x8d, 0xf5, 0x84, 0x21, 0xf4, 0x84, 0xf5, 0xae, 0x0c, 0xbe, 0x9e, 0xb1, 0xc6, 0xd2, 0x79, 0xeb,
	0x13, 0x6b, 0x6c, 0xc0, 0x54, 0x40, 0xf3, 0xc2, 0xea, 0x42, 0xa8, 0xd6, 0xf4, 0x02, 0x56, 0x19,
	0x02, 0x2e, 0x5a, 0xa3, 0xdb, 0x50, 0xe6, 0x38, 0x99, 0xc0, 0x9f, 0xd6, 0xf5, 0xe6, 0x44, 0xc0,
	0x24, 0x7c, 0x29, 0xa2, 0xba, 0x2d, 0x6c, 0x39, 0x66, 0x23, 0xe4, 0xd2, 0xbe, 0x06, 0xd5, 0xe5,
	0x90, 0xd1, 0x6b, 0x9a, 0xf1, 0x7a, 0xd0, 0xc7, 0x9a, 0xd4, 0x7c, 0x4d, 0x09, 0x01, 0x79, 0xb4,
	0x1b, 0x90, 0xf3, 0xb1, 0x19, 0x10, 0x47, 0x99, 0xd6, 0x73, 0x31, 0x30, 0xf4, 0x57, 0x52, 0x00,
	0x8e, 0xcb, 0xcd, 0x6b, 0x33, 0x53, 0xaa, 0xc6, 0x5c, 0x77, 0x18, 0x6f, 0x40, 0x02, 0xcb, 0xb8,
	0xf4, 0x90, 0x1d, 0xd9, 0x4b, 0xd3, 0xfd, 0xb3, 0x97, 0xee, 0xbb, 0x81, 0xb3, 0xeb, 0x62, 0xbb,
	0x23, 0x7b, 0xa9, 0x9b, 0x51, 0x21, 0x7d, 0x46, 0xf5, 0xb9, 0x14, 0x3c, 0x11, 0xb4, 0x5b, 0x2d,
	0xcf, 0x0f, 0x23, 0x31, 0xc5, 0x71, 0x77, 0x3c, 0xbf, 0x69, 0xb2, 0x24, 0xb9, 0xf4, 0x89, 0x78,
	0x2c, 0x05, 0x7d, 0x39, 0x1f, 0x4f, 0xbc, 0x16, 0xcf, 0x1b, 0xc9, 0x5a, 0x41, 0x68, 0xfa, 0x21,
	0x13, 0xef, 0x7b, 0x86, 0xea, 0xaf, 0x11, 0x1b, 0x68, 0x68, 0xd0, 0xd1, 0xe8, 0x79, 0x48, 0x63,
	0xd7, 0x66, 0x02, 0xf2, 0x40, 0xa0, 0x68, 0x2c, 0xba, 0x0b, 0x53, 0x4d, 0xc7, 0x6d, 0x87, 0x38,
	0xa8, 0xdb, 0x6d, 0x6a, 0xcf, 0x65, 0x91, 0xe6, 0x4a, 0x59, 0x64, 0x55, 0x06, 0xbc, 0xcc, 0x60,
	0x91, 0x03, 0x99, 0xa0, 0xe1, 0x69, 0xf8, 0x33, 0x2e, 0x90, 0x95, 0xfb, 0x88, 0xb2, 0xcd, 0xbb,
	0xe1, 0x85, 0x06, 0x99, 0x02, 0xcd, 0x43, 0xde, 0xf2, 0x71, 0xa4, 0x6f, 0xcc, 0xcc, 0x28, 0x8a,
	0x18, 0x1c, 0x00, 0x5d, 0x81, 0xbc, 0xe5, 0x35, 0x89, 0x55, 0xf7, 0x6d, 0x6a, 0x59, 0x20, 0x6c,
	0x38, 0xfa, 0xee, 0x14, 0x4c, 0x3b, 0xae, 0xe5, 0x91, 0x10, 0x48, 0xe2, 0x4a, 0xf1, 0xcd, 0x06,
	0x0b, 0x40, 0x57, 0x78, 0xdd, 0x97, 0x75, 0x23, 0x0e, 0xe8, 0x04, 0x06, 0x7e, 0xa3, 0x8d, 0x83,
	0xd0, 0x98, 0xe2, 0x53, 0xf3, 0x3f, 0xa0, 0x8f, 0x75, 0xc6, 0xfa, 0xd2, 0x20, 0xf6, 0x67, 0x15,
	0x88, 0xb8, 0x1c, 0xe4, 0x2b, 0xc8, 0x78, 0x47, 0xb0, 0xef, 0x1a, 0x4c, 0xf9, 0x74, 0x5e, 0x6c,
	0xf3, 0xec, 0x81, 0xa7, 0xfa, 0x07, 0xd7, 0xf2, 0xec, 0x01, 0x01, 0x47, 0x7f, 0xa8, 0xfd, 0xcd,
	0xdc, 0xc8, 0x45, 0x4e, 0x5e, 0x15, 0x91, 0x93, 0x69, 0xfd, 0x18, 0x97, 0xef, 0x4e, 0x43, 0xd6,
	0xb4, 0x42, 0xcf, 0x1f, 0x24, 0xce, 0xc4, 0x27, 0xe7, 0x7f, 0x99, 0x78, 0xf3, 0x84, 0x03, 0x24,
	0x4e, 0x7b, 0x1f, 0x32, 0x0d, 0x5d, 0x3f, 0x64, 0x84, 0xee, 0x02, 0x7a, 0x35, 0xd2, 0xf1, 0xdf,
	0x68, 0x3b, 0x3e, 0xe6, 0xd9, 0x90, 0x3d, 0xaf, 0x90, 0x1c, 0x1b, 0xcf, 0x40, 0xa8, 0xa4, 0xca,
	0x11, 0xa0, 0x0d, 0x21, 0x52, 0xe5, 0x15, 0x51, 0xf5, 0x4f, 0xe0, 0x9a, 0xbf, 0x21, 0xa9, 0x0d,
	0xca, 0xde, 0x77, 0xe9, 0xaa, 0xcf, 0x7e, 0xae, 0x0c, 0x67, 0xa5, 0xef, 0x06, 0x0e, 0x5a, 0x91,
	0xb2, 0x35, 0xd6, 0x1b, 0xc6, 0x7a, 0x43, 0x52, 0xbd, 0xe1, 0x33, 0x29, 0x28, 0x49, 0x12, 0x2c,
	0xd3, 0x1e, 0x54, 0x02, 0x18, 0x24, 0x63, 0x72, 0x92, 0xc3, 0x6c, 0xc8, 0xd3, 0xc6, 0x92, 0x52,
	0x29, 0x89, 0xa4, 0x54, 0xd6, 0x90, 0x94, 0x0c, 0x98, 0x92, 0x98, 0x23, 0x15, 0xf9, 0x35, 0x15,
	0x88, 0x6a, 0xab, 0x33, 0x80, 0x5e, 0x62, 0x03, 0x93, 0x63, 0x36, 0xf0, 0x35, 0xc0, 0x06, 0x76,
	0x00, 0xc9, 0x7b, 0xcc, 0xa8, 0x78, 0x75, 0x38, 0x2a, 0x3e, 0x2d, 0xa1, 0x64, 0xae, 0x2b, 0x49,
	0xfc, 0x9c, 0xd2, 0x12, 0x3f, 0xe7, 0x6f, 0x49, 0xac, 0xe0, 0x6a, 0x92, 0xdb, 0xc3, 0x48, 0xff,
	0xec, 0xff, 0x31, 0x0b, 0xb0, 0xd0, 0xb6, 0x9d, 0x70, 0x1c, 0x3a, 0xfe, 0x16, 0xe6, 0x04, 0xf3,
	0x4c, 0x88, 0x2d, 0xf6, 0x3f, 0x85, 0x4b, 0x9e, 0xed, 0xb8, 0xbb, 0x5d, 0xb9, 0x3e, 0x57, 0x48,
	0x98, 0x36, 0x01, 0x87, 0xfe, 0x5a, 0x01, 0x05, 0x37, 0xf8, 0x70, 0xb4, 0x4c, 0xcb, 0xf6, 0x88,
	0x14, 0xfc, 0x8f, 0xf4, 0x54, 0x57, 0xc4, 0x01, 0xa5, 0x09, 0x48, 0xb4, 0x70, 0x14, 0xf3, 0x01,
	0x2c, 0x09, 0xbf, 0x9d, 0x2a, 0x21, 0x17, 0x2f, 0x20, 0x00, 0xd1, 0xad, 0x38, 0xba, 0xb7, 0x32,
	0xc0, 0xfe, 0x25, 0x9e, 0x65, 0x83, 0x02, 0x90, 0x87, 0x11, 0x31, 0xbe, 0x0b, 0x50, 0x66, 0x1f,
	0xeb, 0x36, 0x0e, 0xac, 0x41, 0x85, 0x8c, 0xb8, 0x21, 0x82, 0xc1, 0x2c, 0xe3, 0xc0, 0x42, 0xaf,
	0xc1, 0x14, 0xcb, 0x3c, 0xaf, 0x7b, 0x3b, 0x75, 0x12, 0x97, 0xaa, 0x6b, 0x0a, 0x9a, 0x64, 0x08,
	0x36, 0x76, 0xe8, 0xb5, 0xbe, 0x09, 0x59, 0x73, 0x97, 0x92, 0x99, 0xfe, 0xc5, 0x8a, 0xc4, 0xcb,
	0xcd, 0x2d, 0x44, 0xe3, 0xc5, 0x4a, 0x51, 0x70, 0xb4, 0x06, 0x39, 0x7a, 0x9e, 0x99, 0x91, 0xe6,
	0x83, 0x0a, 0x88, 0xb6, 0x08, 0x80, 0x24, 0xcc, 0x92, 0xef, 0x68, 0x01, 0x72, 0x2c, 0x28, 0x16,
	0x0d, 0x28, 0x21, 0x14, 0xa3, 0x62, 0xb1, 0xb0, 0x0c, 0xb0, 0xf6, 0xc3, 0x65, 0xc8, 0x92, 0xc7,
	0x1c, 0x11, 0x3d, 0x92, 0xa4, 0xcc, 0xe9, 0xea, 0x91, 0x11, 0x10, 0xfa, 0xdf, 0x26, 0xe4, 0x34,
	0x39, 0x65, 0x5d, 0xf2, 0xfb, 0x26, 0x86, 0x94, 0x07, 0x12, 0x95, 0xac, 0x49, 0x2c, 0x0e, 0x9c,
	0xa2, 0xd3, 0x5a, 0x4e, 0xe7, 0xbb, 0x0a, 0xf9, 0x76, 0x80, 0xfd, 0xba, 0xc3, 0x75, 0x42, 0x15,
	0x19, 0x39, 0x17, 0x81, 0xac, 0xd9, 0xe8, 0x22, 0xe4, 0xcc, 0x46, 0x18, 0xc1, 0xaa, 0x45, 0xf4,
	0x65, 0xcd, 0x46, 0xb8, 0x66, 0x8b, 0x22, 0x23, 0x05, 0x8d, 0x22, 0x23, 0x2b, 0xd1, 0x19, 0x20,
	0xf6, 0x16, 0x11, 0x93, 0x37, 0xa8, 0xb8, 0x87, 0xb8, 0x95, 0x31, 0x64, 0x47, 0xaa, 0x06, 0x9c,
	0x5e, 0xaa, 0xc6, 0x0b, 0x90, 0x6b, 0x79, 0x0d, 0xc7, 0x3a, 0x98, 0x29, 0x91, 0x1b, 0xd0, 0x57,
	0x26, 0x60, 0x43, 0xd1, 0x8b, 0x90, 0x6d, 0x62, 0xdb, 0x31, 0x07, 0x15, 0x63, 0x61, 0x9c, 0x87,
	0x0e, 0x46, 0xb7, 0x21, 0xef, 0xe2, 0xf0, 0xa1, 0xe7, 0x3f, 0x60, 0xc4, 0xfe, 0x39, 0x55, 0x7a,
	0x38, 0x77, 0x97, 0xc2, 0x19, 0x1c, 0x01, 0x5a, 0x87, 0x49, 0x89, 0x58, 0xb7, 0x03, 0xcc, 0xd2,
	0x6a, 0xd4, 0x4b, 0x59, 0x08, 0x52, 0x7d, 0x3f, 0xc0, 0xb5, 0x5f, 0x9b, 0x80, 0x3c, 0x9b, 0x63,
	0x14, 0x88, 0xda, 0x15, 0xc8, 0x9b, 0xb6, 0xed, 0xe3, 0x20, 0x50, 0x4c, 0xe8, 0xe4, 0xc3, 0xd1,
	0x6d, 0x26, 0x91, 0x64, 0x07, 0xb8, 0x7e, 0x63, 0xc9, 0x20, 0xda, 0x1f, 0xb6, 0x74, 0x9d, 0x91,
	0x5d, 0xb5, 0x3f, 0x98, 0x80, 0x1c, 0xe5, 0x42, 0xa3, 0xb0, 0xa6, 0x17, 0x20, 0x43, 0x8a, 0x14,
	0xa8, 0x2d, 0x28, 0x19, 0x8b, 0x6e, 0x77, 0x68, 0xfa, 0x59, 0x55, 0x2a, 0x26, 0xc8, 0x83, 0xac,
	0xf1, 0x5f, 0x60, 0x3b, 0x93, 0x53, 0x12, 0xf6, 0xe8, 0x0e, 0xfc, 0x4c, 0x11, 0x72, 0xa3, 0x13,
	0xdc, 0xdf, 0x69, 0x37, 0xc9, 0x24, 0x4a, 0xb4, 0x7c, 0x98, 0x88, 0x61, 0x27, 0xf5, 0x2f, 0x49,
	0xdc, 0x2c, 0xde, 0xbe, 0x94, 0xea, 0xf6, 0x45, 0x30, 0x44, 0x36, 0xc9, 0xab, 0xc1, 0x10, 0x91,
	0xe4, 0x1a, 0x14, 0x1b, 0xce, 0x0e, 0xb6, 0x0e, 0xac, 0xc6, 0x40, 0x36, 0xc6, 0x00, 0x63, 0x00,
	0xb4, 0x02, 0x93, 0x01, 0xb6, 0xda, 0xbe, 0x13, 0x1e, 0xd4, 0x1b, 0xe6, 0x36, 0x6e, 0x30, 0xf3,
	0xd4, 0x20, 0x14, 0x15, 0x0e, 0x75, 0x27, 0x02, 0x12, 0x6c, 0x14, 0x34, 0xd8, 0x68, 0x97, 0x27,
	0xb1, 0xa4, 0xef, 0x49, 0x9c, 0x87, 0xec, 0x1b, 0x6d, 0xec, 0x1f, 0x30, 0xae, 0xd4, 0x53, 0x3f,
	0x5d, 0x34, 0x03, 0x7c, 0xe9, 0xc5, 0x45, 0xc7, 0x35, 0xfd, 0x03, 0x83, 0x82, 0xa0, 0x55, 0xc8,
	0xd9, 0xa4, 0x2e, 0x10, 0x33, 0x2a, 0x3d, 0xa7, 0x2c, 0x16, 0xcf, 0xb1, 0x7a, 0x42, 0x0c, 0xbe,
	0xf6, 0x4b, 0x13, 0x90, 0xa3, 0x3f, 0x8d, 0xc2, 0x9d, 0x9b, 0xef, 0x28, 0x50, 0x31, 0xe0, 0x25,
	0xba, 0x34, 0xd4, 0x45, 0xc8, 0xca, 0x41, 0x67, 0x4a, 0xfb, 0x11, 0x6b, 0x3e, 0x04, 0x74, 0xfe,
	0xba, 0x64, 0x70, 0x51, 0x4e, 0xb1, 0x89, 0xf7, 0x68, 0xf6, 0x37, 0x0b, 0x90, 0x5d, 0x34, 0x03,
	0xc7, 0x1a, 0x9b, 0x58, 0xc6, 0xc6, 0xf6, 0xa4, 0xc6, 0xf6, 0x25, 0x16, 0xf1, 0xad, 0x97, 0xa8,
	0x12, 0xdf, 0x06, 0x12, 0xf9, 0x1d, 0xc4, 0x69, 0xf5, 0xa5, 0x93, 0xe6, 0x3b, 0x52, 0x65, 0x67,
	0xe1, 0xa4, 0x2f, 0x2b, 0x14, 0xb0, 0x13, 0x0e, 0xfa, 0xdf, 0x4e, 0x41, 0x8e, 0x65, 0x19, 0x55,
	0x34, 0x43, 0x9c, 0x4f, 0x2f, 0x28, 0x7b, 0x18, 0x3d, 0x93, 0xbd, 0xdd, 0xfc, 0x4b, 0x12, 0x7d,
	0x79, 0x46, 0x15, 0x15, 0x21, 0x28, 0xb3, 0xbf, 0x90, 0x81, 0x1c, 0x25, 0x5a, 0x6f, 0x09, 0xda,
	0xb2, 0x01, 0x65, 0x52, 0x7d, 0x90, 0x3b, 0x5f, 0x06, 0x10, 0xf5, 0x75, 0xa7, 0x89, 0x0f, 0x55,
	0x29, 0x2a, 0x31, 0x0c, 0xc4, 0xfb, 0xf2, 0x99, 0x14, 0x4c, 0x09, 0x61, 0x83, 0x17, 0x36, 0xcc,
	0x9d, 0xf4, 0xd5, 0xa8, 0xf2, 0x29, 0x79, 0x49, 0xc4, 0x9b, 0xb4, 0x7e, 0x20, 0x76, 0x79, 0xa8,
	0xac, 0x1e, 0x9f, 0xe2, 0xc0, 0xf3, 0xf3, 0xd2, 0x49, 0x52, 0xb6, 0xb2, 0x50, 0x64, 0xb3, 0x7f,
	0xad, 0x00, 0x85, 0x45, 0x5e, 0xcc, 0x6c, 0xcc, 0xa8, 0xc6, 0x8c, 0x2a, 0x21, 0xa3, 0xba, 0x2c,
	0x0a, 0xf2, 0x83, 0x62, 0x31, 0x6a, 0x56, 0x91, 0x9f, 0xe7, 0x34, 0x95, 0x92, 0xe4, 0x34, 0xad,
	0x40, 0xf1, 0x8d, 0xb6, 0xd9, 0xa0, 0x0f, 0xae, 0x19, 0x1d, 0x1a, 0x43, 0x76, 0x2b, 0x00, 0x15,
	0x7d, 0x05, 0xe0, 0x0a, 0x64, 0x9d, 0x66, 0x74, 0x28, 0x27, 0x07, 0x04, 0x86, 0x87, 0xa1, 0x69,
	0xed, 0x11, 0x7f, 0x1c, 0x05, 0x90, 0xd3, 0xb2, 0xaa, 0xa7, 0x9a, 0x96, 0x35, 0x7f, 0x4d, 0x22,
	0x1b, 0xca, 0xd4, 0x8c, 0xd3, 0x8a, 0xd9, 0xff, 0xe7, 0x49, 0xc8, 0x2d, 0xb6, 0x5d, 0xbb, 0xf1,
	0xd6, 0x20, 0x1b, 0x8b, 0xc9, 0xec, 0x29, 0x1d, 0x77, 0x64, 0xb1, 0x43, 0x11, 0xef, 0x59, 0xe9,
	0x92, 0xae, 0x6a, 0x8f, 0x3a, 0x7b, 0x2f, 0x41, 0x36, 0xf4, 0x42, 0xb3, 0xc1, 0x38, 0x86, 0x52,
	0xcc, 0x2c, 0x85, 0x40, 0x97, 0x21, 0xd3, 0x70, 0xdc, 0x07, 0x8c, 0x54, 0xbc, 0xa7, 0xff, 0xf4,
	0x73, 0x77, 0x1c, 0xf7, 0x81, 0x41, 0x00, 0x22, 0xed, 0x16, 0xbb, 0xa1, 0x7f, 0xc0, 0x48, 0xc3,
	0x7b, 0x07, 0x40, 0xae, 0x44, 0x63, 0x0d, 0x0a, 0x12, 0x91, 0xbb, 0xe8, 0x41, 0xcc, 0xe8, 0x18,
	0x0d, 0x32, 0x2e, 0x6f, 0xf1, 0x81, 0x46, 0x0c, 0x53, 0xfb, 0xb9, 0x09, 0xc8, 0x44, 0xcf, 0x32,
	0x1a, 0x66, 0xa4, 0x02, 0xc9, 0xf8, 0x57, 0x2e, 0x77, 0x27, 0xfb, 0x2d, 0x1b, 0x3c, 0x42, 0x98,
	0x54, 0x4e, 0xcf, 0x0e, 0xbc, 0x03, 0x02, 0x36, 0x1a, 0x5f, 0xfb, 0xcc, 0x14, 0x64, 0xc9, 0xc6,
	0x8c, 0xc2, 0x3a, 0xf2, 0x93, 0x9c, 0xd1, 0x3d, 0xc9, 0x97, 0xa0, 0xb0, 0xd3, 0x6e, 0x34, 0xea,
	0x6a, 0x2b, 0x68, 0xe4, 0xa3, 0xc1, 0xf7, 0xfd, 0x06, 0x5a, 0x89, 0x36, 0x8e, 0xf9, 0x41, 0x73,
	0xfd, 0xfd, 0xa0, 0x87, 0x99, 0xbf, 0x00, 0x45, 0x4b, 0x90, 0xa3, 0xe5, 0x50, 0xd8, 0xed, 0xfd,
	0xb0, 0xca, 0x4d, 0x9a, 0xdb, 0x22, 0x20, 0x06, 0x03, 0x8d, 0xa4, 0x46, 0xe6, 0xba, 0x61, 0x46,
	0xb6, 0x8f, 0x28, 0x61, 0xe1, 0x81, 0xc4, 0x1c, 0x18, 0xad, 0x91, 0x77, 0x22, 0x31, 0x21, 0xcc,
	0x77, 0xf4, 0x8c, 0x22, 0x22, 0x0a, 0x64, 0x08, 0xf0, 0xda, 0xcf, 0x4e, 0x40, 0x8e, 0x3e, 0xe5,
	0x28, 0x9c, 0xae, 0x1b, 0x90, 0x69, 0x46, 0x12, 0x49, 0xa6, 0xff, 0x1e, 0xd1, 0x17, 0x26, 0x6b,
	0xb2, 0xee, 0xd9, 0xcc, 0xfb, 0x10, 0x01, 0x92, 0xd0, 0x34, 0xcb, 0xf3, 0xf1, 0xa0, 0xbe, 0x1c,
	0xcb, 0xd8, 0x72, 0x9a, 0x66, 0xc3, 0xa0, 0xa3, 0x6b, 0xff, 0x28, 0x03, 0x79, 0xb6, 0x4b, 0xa3,
	0xb0, 0x8c, 0xcb, 0x90, 0x63, 0x25, 0x48, 0x06, 0x70, 0xdc, 0xd5, 0x7b, 0xf7, 0x36, 0x5f, 0xc7,
	0xfe, 0x76, 0x67, 0x04, 0x2c, 0x85, 0x4d, 0x48, 0xee, 0xd0, 0x22, 0x54, 0x9c, 0x9d, 0xba, 0xeb,
	0xb9, 0xb8, 0xde, 0x34, 0x43, 0x6b, 0x4f, 0x35, 0x8f, 0xd1, 0xd9, 0xb9, 0xeb, 0xb9, 0x78, 0x3d,
	0x02, 0x41, 0xaf, 0xc2, 0xb4, 0xb3, 0x53, 0x67, 0x2f, 0x66, 0xd7, 0x03, 0xc7, 0xb5, 0xb8, 0x41,
	0x7c, 0x60, 0xe0, 0x60, 0xd5, 0xd9, 0x59, 0x67, 0x80, 0x5b, 0x11, 0x1c, 0x7a, 0x09, 0x0a, 0x11,
	0x32, 0xf2, 0x2c, 0x6a, 0x2e, 0xde, 0xbc, 0xb3, 0x43, 0x9f, 0x43, 0x7a, 0x17, 0xfc, 0xc8, 0x09,
	0xc2, 0x41, 0x31, 0x3b, 0x9d, 0xef, 0xb2, 0x12, 0x81, 0xd4, 0xbe, 0x23, 0x03, 0x05, 0x11, 0xfc,
	0x3b, 0x02, 0x87, 0xeb, 0xba, 0x88, 0xb4, 0xd6, 0xe3, 0xa3, 0x3c, 0x5b, 0xed, 0xb2, 0xe4, 0xf2,
	0x56, 0x60, 0x04, 0xb1, 0xd3, 0xfa, 0x02, 0x64, 0x70, 0x68, 0xee, 0x2a, 0x9e, 0x27, 0x32, 0x16,
	0x2d, 0x43, 0x85, 0xa4, 0xb2, 0xf3, 0xa3, 0xa4, 0x7a, 0x88, 0xca, 0x11, 0x14, 0x3f, 0x46, 0x68,
	0x29, 0x0e, 0x58, 0x2a, 0xe8, 0xb2, 0x20, 0x0e, 0x99, 0xd0, 0x54, 0x40, 0xc8, 0xff, 0xec, 0xf7,
	0xde, 0x87, 0xb3, 0x4b, 0x66, 0xcb, 0xdc, 0x76, 0x1a, 0x4e, 0x78, 0x20, 0x8a, 0x38, 0x8d, 0xad,
	0x06, 0xe3, 0x16, 0x3e, 0x0a, 0x2d, 0x7c, 0xa4, 0xf6, 0x3b, 0x90, 0xac, 0xfd, 0x4e, 0x29, 0x49,
	0xfb, 0x9d, 0x72, 0xb2, 0xf6, 0x3b, 0x95, 0x93, 0x68, 0xbf, 0x33, 0x99, 0xa4, 0xfd, 0xce, 0x35,
	0x56, 0xf5, 0xb5, 0xaa, 0x96, 0xe9, 0x16, 0xab, 0x8b, 0x87, 0xdb, 0xf0, 0x4c, 0xe9, 0xb6, 0xe1,
	0x91, 0x1a, 0x9c, 0x4c, 0x27, 0x6a, 0x70, 0x72, 0x1c, 0x7d, 0x7c, 0xba, 0xfa, 0xcf, 0x9c, 0x3d,
	0xa6, 0xfe, 0x33, 0xe7, 0x86, 0xe9, 0x3f, 0x23, 0xf5, 0x16, 0x3a, 0xaf, 0xdb, 0x5b, 0xa8, 0xa3,
	0xe9, 0xcb, 0x13, 0xfa, 0x4d, 0x5f, 0x36, 0x58, 0xb3, 0x14, 0xda, 0xce, 0xa7, 0x67, 0x45, 0x92,
	0x23, 0x28, 0xf5, 0xab, 0x8e, 0x6b, 0x77, 0x9a, 0x14, 0x48, 0xff, 0x94, 0x1b, 0x50, 0xa6, 0x25,
	0xf5, 0x42, 0xc7, 0x0c, 0x71, 0xc0, 0x6a, 0x41, 0xf6, 0xbd, 0xd1, 0x1d, 0x00, 0x68, 0x13, 0x0a,
	0x81, 0xb7, 0x13, 0x3e, 0x34, 0x7d, 0xcc, 0x92, 0x2a, 0x5f, 0xd4, 0x78, 0xaa, 0xb9, 0x2d, 0x06,
	0x6b, 0x08, 0x2c, 0x68, 0x9b, 0x12, 0x7d, 0xf2, 0x77, 0xca, 0xa4, 0x6b, 0x04, 0xef, 0xbc, 0x0e,
	0xde, 0xb5, 0x0e, 0x0c, 0x46, 0x17, 0x46, 0xb4, 0x02, 0xe5, 0x08, 0x4b, 0x9d, 0x53, 0xa5, 0xb7,
	0x0f, 0x62, 0x60, 0xb1, 0x2f, 0x21, 0xfa, 0xdb, 0xeb, 0x8c, 0x3a, 0xfd, 0x21, 0x98, 0x34, 0xad,
	0xe8, 0x88, 0xd4, 0xdb, 0xee, 0x03, 0xd7, 0x7b, 0xe8, 0xce, 0x3c, 0x45, 0x10, 0xcd, 0xf5, 0xb6,
	0xcc, 0x90, 0x61, 0x4b, 0xd4, 0x78, 0xbf, 0xc4, 0x54, 0x87, 0xb8, 0x1c, 0x07, 0xc5, 0xc6, 0x46,
	0x45, 0x52, 0x34, 0xcd, 0x0e, 0x9e, 0x79, 0xba, 0xff, 0xc1, 0x3f, 0xd2, 0xeb, 0xc1, 0x60, 0xd1,
	0x2d, 0x28, 0xb7, 0x22, 0x59, 0xb2, 0xce, 0x70, 0xbd, 0x43, 0x1d, 0x97, 0x51, 0x22, 0x90, 0x37,
	0x29, 0xa2, 0xbb, 0x70, 0xae, 0x73, 0x19, 0xeb, 0xbb, 0x6d, 0xc7, 0xc6, 0xac, 0x55, 0x50, 0xdf,
	0x33, 0x73, 0xb6, 0x13, 0xf0, 0x56, 0x04, 0x87, 0xbe, 0x85, 0xb4, 0x38, 0xd8, 0x71, 0x1a, 0x78,
	0xe6, 0x5d, 0xaa, 0x99, 0xb4, 0x0b, 0x7a, 0x75, 0x27, 0x8f, 0xf8, 0xcd, 0xe0, 0x93, 0xa2, 0x65,
	0xc8, 0xf8, 0x91, 0x26, 0xfd, 0xee, 0xfe, 0xa1, 0x17, 0x47, 0x1d, 0x2f, 0x23, 0xd2, 0xa6, 0x09,
	0x34, 0xda, 0x82, 0x62, 0x13, 0x07, 0x81, 0xb9, 0x4b, 0xfb, 0x08, 0xa5, 0xfb, 0xf5, 0x11, 0x3a,
	0x0a, 0xd5, 0x3a, 0x07, 0x36, 0x62, 0x3c, 0xd1, 0xad, 0x12, 0x45, 0x62, 0xdf, 0x43, 0x70, 0x6a,
	0xdd, 0x2a, 0x51, 0xff, 0x55, 0x60, 0xa9, 0x7d, 0x36, 0x0d, 0x05, 0x7e, 0xd9, 0x46, 0x24, 0x42,
	0x84, 0x08, 0x06, 0x9a, 0x11, 0x22, 0x44, 0x40, 0x90, 0xc4, 0x91, 0xac, 0x9e, 0x38, 0xb2, 0x04,
	0x65, 0x1f, 0x37, 0xb0, 0x19, 0x60, 0x5a, 0x7c, 0x2c, 0xa7, 0x98, 0x82, 0x5e, 0x62, 0x50, 0xd1,
	0x0f, 0xb5, 0xbf, 0x3f, 0x01, 0x93, 0x9d, 0xf4, 0x69, 0x14, 0x36, 0x64, 0x35, 0x41, 0x47, 0x8f,
	0x98, 0xaa, 0xca, 0x4c, 0xff, 0x19, 0x55, 0xb5, 0x9f, 0x5a, 0x37, 0x7f, 0xff, 0x7d, 0x90, 0x31,
	0x46, 0xc4, 0x6e, 0xb2, 0xde, 0x61, 0x7e, 0x7a, 0xbe, 0x4f, 0x33, 0xb4, 0x70, 0xa7, 0xdd, 0x88,
	0xaf, 0xfe, 0x7a, 0x37, 0x27, 0xa1, 0xc6, 0xa8, 0x65, 0xa8, 0x70, 0x02, 0x20, 0xab, 0xbb, 0x83,
	0x16, 0xa7, 0x13, 0x08, 0xdd, 0x87, 0x02, 0xf7, 0x5e, 0xb3, 0x03, 0xff, 0x92, 0x2e, 0xad, 0x9c,
	0xdb, 0x62, 0x08, 0x0c, 0x81, 0x2a, 0x42, 0x2b, 0xec, 0xaa, 0x54, 0xab, 0xd1, 0x47, 0x7b, 0x84,
	0x9d, 0xd5, 0x86, 0x92, 0xe3, 0x86, 0xd8, 0x67, 0xb9, 0x46, 0x54, 0xcb, 0x59, 0xd4, 0x7f, 0xe0,
	0x83, 0x20, 0xc4, 0xcd, 0xb5, 0x18, 0x93, 0x21, 0xa3, 0x45, 0x7b, 0x50, 0xa6, 0x26, 0xd9, 0x7a,
	0xcb, 0xf4, 0xcd, 0x26, 0xf3, 0x8e, 0xac, 0x24, 0x7e, 0x01, 0x66, 0x51, 0xdc, 0x8c, 0x90, 0x19,
	0xa5, 0x20, 0xfe, 0x82, 0x3e, 0x0a, 0x45, 0xaf, 0x85, 0x7d, 0x1e, 0xa1, 0x9f, 0xd6, 0x95, 0x84,
	0xc8, 0x34, 0x1b, 0x1c, 0x83, 0x11, 0x23, 0x43, 0x2f, 0x43, 0xc9, 0xf2, 0x9a, 0x2d, 0xd3, 0xa7,
	0xb9, 0xbc, 0x0a, 0x81, 0xf8, 0xf2, 0xf8, 0xda, 0x5f, 0xcf, 0x41, 0x81, 0x6f, 0xeb, 0x28, 0xdc,
	0xbd, 0x17, 0x20, 0x63, 0x79, 0x3e, 0x37, 0x2a, 0x0d, 0xd4, 0xd4, 0xc8, 0x60, 0xb4, 0x00, 0x79,
	0x56, 0x68, 0x48, 0xb3, 0x04, 0x9b, 0xc1, 0xe1, 0x8e, 0xa1, 0xe8, 0xda, 0x2e, 0x94, 0x2c, 0xec,
	0x87, 0xb4, 0x54, 0x2a, 0xbf, 0x4c, 0x2b, 0x89, 0xef, 0xe8, 0xdc, 0x52, 0x8c, 0xcc, 0x90, 0x31,
	0xd7, 0x7e, 0x6e, 0x02, 0x4a, 0xd2, 0x1f, 0x47, 0x23, 0x67, 0x41, 0x8e, 0x34, 0x55, 0x93, 0x8a,
	0x79, 0x26, 0x64, 0x66, 0xbb, 0xe1, 0x6d, 0xeb, 0x84, 0x99, 0x1a, 0x04, 0xa2, 0xf6, 0x25, 0x44,
	0x0c, 0xb2, 0x23, 0x93, 0xa3, 0xb0, 0xdc, 0xb1, 0x86, 0xca, 0x2d, 0x3c, 0xbb, 0xbc, 0xdb, 0x92,
	0x3a, 0xa0, 0x1c, 0x21, 0x7f, 0x9c, 0xea, 0xc0, 0xcd, 0x6e, 0x66, 0x99, 0x53, 0xd4, 0xcf, 0xbb,
	0xd8, 0xe5, 0xc3, 0x4e, 0x06, 0x44, 0x6f, 0xe3, 0x7a, 0x72, 0xce, 0xc0, 0x3f, 0x48, 0xbc, 0x28,
	0x96, 0x9b, 0x64, 0x9e, 0xf4, 0x1a, 0x00, 0x93, 0x53, 0x23, 0x55, 0xa4, 0x30, 0x50, 0x84, 0x20,
	0x58, 0x99, 0x2a, 0xbb, 0x49, 0x32, 0xac, 0xc8, 0xe9, 0x96, 0x90, 0xa0, 0xc5, 0x48, 0xde, 0x35,
	0x6d, 0xd1, 0x6c, 0x44, 0x2d, 0xcf, 0x2c, 0x12, 0x77, 0x4d, 0x9b, 0xf7, 0xbe, 0x58, 0x86, 0x4a,
	0xbb, 0x45, 0x0a, 0x9e, 0xd2, 0x30, 0x4f, 0xd5, 0x20, 0xa1, 0x32, 0x85, 0x5a, 0x22, 0x40, 0xe8,
	0x2e, 0x20, 0x8b, 0x97, 0x20, 0x33, 0x1b, 0x1c, 0x55, 0x49, 0x0d, 0xd5, 0xb4, 0x04, 0xca, 0xf0,
	0x7d, 0x03, 0x4c, 0xc9, 0xf8, 0xa2, 0x07, 0x66, 0xf6, 0xc2, 0xe7, 0xfb, 0xd8, 0xb9, 0xf8, 0x78,
	0x03, 0x9b, 0xb6, 0x54, 0x1f, 0xbb, 0x6a, 0x75, 0xfe, 0xa9, 0xfb, 0x69, 0xe9, 0x9b, 0x30, 0xc3,
	0xa2, 0xd6, 0xd3, 0xde, 0x27, 0x90, 0x68, 0xbb, 0x13, 0x9f, 0x8d, 0x1b, 0x38, 0xe4, 0xb5, 0xe7,
	0x5e, 0x50, 0x78, 0xde, 0x65, 0x02, 0x20, 0x3d, 0xb1, 0x3c, 0x07, 0xfd, 0x23, 0xfa, 0x46, 0x98,
	0x8a, 0x5b, 0x94, 0xb0, 0xe4, 0xbc, 0x6a, 0xff, 0xca, 0xb7, 0xe2, 0x22, 0xae, 0x9a, 0xae, 0xdd,
	0x70, 0xdc, 0x5d, 0xe9, 0x18, 0x55, 0x05, 0x32, 0xfa, 0x23, 0x4d, 0xf2, 0x20, 0x22, 0x93, 0xe3,
	0x5a, 0x8d, 0xb6, 0x8d, 0x59, 0x7a, 0xf2, 0x40, 0x69, 0x94, 0x42, 0xad, 0x51, 0x20, 0x74, 0x07,
	0x10, 0x43, 0xe3, 0xe3, 0x7d, 0x81, 0x6a, 0x5a, 0x09, 0xd5, 0x14, 0x85, 0x34, 0xf0, 0x3e, 0xc7,
	0xd6, 0x2d, 0xc7, 0xa1, 0x93, 0x92, 0xe3, 0x6a, 0xbf, 0x37, 0x01, 0x67, 0x8f, 0xb8, 0xca, 0xa3,
	0x40, 0xff, 0xef, 0xb2, 0x30, 0xbe, 0x4c, 0xff, 0x9a, 0xec, 0x11, 0xdd, 0x67, 0x9a, 0x8b, 0xb4,
	0x00, 0x9d, 0x9c, 0xc0, 0x3a, 0x36, 0xb5, 0xa5, 0xf6, 0x9b, 0x69, 0x28, 0x49, 0xbb, 0xf1, 0x56,
	0x37, 0x7a, 0x5c, 0x05, 0xb0, 0x05, 0xd7, 0x53, 0x51, 0xae, 0xa5, 0xe1, 0xe8, 0x56, 0x47, 0xf4,
	0xda, 0x80, 0xb0, 0x08, 0xb2, 0xdc, 0x3d, 0x98, 0xfc, 0xa1, 0xad, 0xcd, 0x27, 0xd9, 0xda, 0xdf,
	0x9b, 0x80, 0xe9, 0x43, 0x0a, 0xda, 0x28, 0x6c, 0xf0, 0x66, 0xc7, 0x4d, 0xea, 0x69, 0xf3, 0xa3,
	0xef, 0x7e, 0x8a, 0x77, 0xe9, 0xf3, 0x69, 0x28, 0x0a, 0x1d, 0xf2, 0xad, 0x7e, 0x93, 0xfe, 0x9b,
	0xd4, 0x11, 0x57, 0x49, 0x41, 0x58, 0xbd, 0x25, 0x45, 0xee, 0x2a, 0x8b, 0xac, 0x62, 0xd5, 0x25,
	0x91, 0x55, 0x9a, 0xbd, 0xf6, 0xab, 0xd3, 0x50, 0x14, 0x26, 0xe4, 0x51, 0xd8, 0x99, 0x8f, 0x43,
	0x01, 0xbb, 0x36, 0x29, 0x5d, 0xc4, 0x62, 0xfc, 0xae, 0x27, 0x32, 0xa7, 0xcf, 0xad, 0x30, 0x2c,
	0x86, 0xc0, 0x87, 0x6e, 0xc3, 0xa4, 0x8f, 0x1b, 0x0e, 0x6d, 0xd5, 0x6c, 0x5a, 0x7b, 0x5c, 0xd3,
	0x50, 0x8a, 0xa4, 0xad, 0x70, 0xd0, 0xa5, 0x08, 0xf2, 0xf0, 0xc5, 0xca, 0x25, 0xb1, 0xad, 0x05,
	0x30, 0xcd, 0x8a, 0xc1, 0x62, 0xbb, 0x4e, 0xed, 0xff, 0x5c, 0x81, 0xbf, 0x99, 0xec, 0xb5, 0xb7,
	0x38, 0x3a, 0xfa, 0x13, 0x36, 0xa6, 0x82, 0xae, 0x5f, 0xd0, 0x6b, 0x90, 0xa5, 0x75, 0x66, 0xa8,
	0x71, 0xec, 0x6a, 0xc2, 0xf5, 0xdd, 0x27, 0x91, 0xec, 0x04, 0x53, 0xed, 0x57, 0x27, 0xa0, 0xc0,
	0x17, 0x7c, 0x44, 0xa2, 0x75, 0xc9, 0x28, 0xcb, 0x6b, 0x0c, 0xa2, 0x11, 0x5d, 0x65, 0x92, 0x04,
	0x1c, 0x7a, 0x39, 0x2e, 0x87, 0xa0, 0x11, 0xc2, 0xc6, 0x61, 0x6a, 0x7f, 0x31, 0x0d, 0x53, 0xdd,
	0x9b, 0x39, 0x0a, 0x4b, 0xfb, 0x6a, 0x87, 0x8d, 0xbb, 0x67, 0x81, 0x35, 0xd6, 0xad, 0x6d, 0x80,
	0x85, 0xfb, 0xb3, 0x09, 0x69, 0xf1, 0x8a, 0x44, 0x8b, 0x5f, 0x52, 0xef, 0x62, 0x47, 0x36, 0xa1,
	0x07, 0x25, 0xfe, 0xf9, 0x1c, 0x64, 0x69, 0xfd, 0xa5, 0xd1, 0xe0, 0x8f, 0x92, 0x20, 0xa2, 0x5c,
	0x22, 0x8c, 0x88, 0x1c, 0x5b, 0x52, 0x6b, 0x25, 0xba, 0x21, 0x97, 0x7b, 0xc7, 0x7a, 0x91, 0x15,
	0xdd, 0x72, 0x76, 0x5d, 0x62, 0x53, 0xec, 0xdd, 0x5b, 0x89, 0x9f, 0x9a, 0xdc, 0x71, 0x9c, 0x9a,
	0x9b, 0x90, 0xdd, 0xf1, 0x2c, 0x51, 0xaa, 0x55, 0xdf, 0x62, 0x45, 0xc1, 0xd1, 0x67, 0x52, 0xdd,
	0xf1, 0xd8, 0x27, 0x25, 0x06, 0x1c, 0x69, 0xb9, 0xe2, 0xd1, 0xdc, 0x7f, 0x24, 0x75, 0x28, 0x9c,
	0xfb, 0x34, 0x9f, 0x43, 0xcc, 0x7d, 0x98, 0x27, 0x42, 0x12, 0x61, 0xf3, 0x9f, 0xa5, 0xa1, 0x20,
	0xba, 0x94, 0x8e, 0x86, 0x79, 0x54, 0x22, 0x78, 0x3d, 0x0f, 0x1b, 0x7f, 0xe5, 0x13, 0xf5, 0xe5,
	0x45, 0x27, 0x96, 0x5b, 0x59, 0x73, 0xa7, 0x7f, 0x62, 0xd9, 0xd4, 0xc9, 0x0a, 0x5a, 0x1e, 0x21,
	0x8e, 0xcc, 0xfe, 0xf6, 0x0b, 0x50, 0x58, 0x32, 0x7d, 0xbc, 0xd9, 0x30, 0xdd, 0x71, 0x30, 0xea,
	0x38, 0x85, 0x35, 0x69, 0x0a, 0xeb, 0x4f, 0x76, 0xca, 0x11, 0xa0, 0x1a, 0x8f, 0xf4, 0x90, 0x5c,
	0x8a, 0x4b, 0xca, 0x79, 0x98, 0x0d, 0x53, 0x52, 0xe4, 0xf4, 0x2a, 0x09, 0xbc, 0x16, 0xd1, 0x7a,
	0xc7, 0x73, 0x5d, 0xd3, 0xf1, 0x71, 0x87, 0x75, 0x26, 0x84, 0xc2, 0xb6, 0x19, 0x60, 0xbb, 0x4e,
	0x0a, 0xd8, 0x9c, 0x4c, 0xf3, 0x0a, 0x7e, 0xc9, 0x8c, 0x3c, 0x99, 0x6a, 0x83, 0x34, 0xf9, 0xf7,
	0x71, 0xab, 0x61, 0x5a, 0x38, 0x60, 0xe9, 0xb7, 0x27, 0x38, 0xab, 0x98, 0x0a, 0xf9, 0x90, 0x6f,
	0x99, 0x7e, 0x58, 0xf7, 0x76, 0x58, 0xcd, 0x9c, 0x13, 0x9c, 0x35, 0x17, 0xcd, 0xb4, 0xb1, 0x83,
	0x6e, 0x8b, 0xd8, 0x60, 0x6a, 0x72, 0xff, 0x50, 0x6f, 0x8d, 0x89, 0x42, 0xf6, 0x09, 0x0c, 0xbe,
	0x0d, 0x39, 0x87, 0xe6, 0xfd, 0x57, 0xd5, 0x70, 0xad, 0x89, 0x58, 0xc1, 0x18, 0x17, 0xc5, 0x80,
	0x96, 0x24, 0x49, 0x6b, 0x4a, 0xcf, 0xfd, 0x1c, 0x4b, 0x56, 0x22, 0x5c, 0x7a, 0x5a, 0x27, 0x5c,
	0x7a, 0xf8, 0x0e, 0x2c, 0x7f, 0x3e, 0x15, 0x97, 0x26, 0x51, 0xee, 0xc0, 0xe8, 0x0e, 0x91, 0xfd,
	0x4c, 0x80, 0x94, 0xab, 0x6d, 0xdc, 0xf2, 0xbd, 0x76, 0x2b, 0x2e, 0x69, 0xf2, 0x97, 0x52, 0xac,
	0x60, 0xc3, 0xa3, 0x50, 0xbd, 0xfd, 0xa2, 0xaf, 0xd7, 0x2c, 0x67, 0xc5, 0xb5, 0xbc, 0xb6, 0x1b,
	0xea, 0x56, 0xdf, 0x5e, 0x69, 0x39, 0x81, 0x67, 0xe3, 0x8d, 0x9d, 0xe8, 0xc4, 0x18, 0xfc, 0x29,
	0xd1, 0x25, 0xd1, 0xf4, 0xef, 0xbc, 0x4a, 0xd3, 0x3f, 0xd1, 0xf2, 0xef, 0xcb, 0x13, 0xa2, 0x08,
	0xcb, 0x13, 0xaa, 0x17, 0xec, 0xfb, 0xdf, 0x6c, 0xf5, 0xc9, 0x93, 0x97, 0x32, 0xd5, 0xa2, 0x22,
	0xf7, 0xb0, 0xd9, 0xe4, 0x45, 0x5f, 0xd0, 0x3e, 0x14, 0x2d, 0xd3, 0xc7, 0xf5, 0x10, 0x9b, 0x4d,
	0xf5, 0x56, 0x39, 0x97, 0x12, 0xce, 0x5a, 0xb0, 0xd8, 0x27, 0xf4, 0x08, 0x8a, 0xcc, 0xa6, 0x20,
	0x02, 0xbc, 0x15, 0xe6, 0xbd, 0x9c, 0xb0, 0x3f, 0x94, 0x11, 0x4f, 0x86, 0xbe, 0x3d, 0x05, 0xd5,
	0xae, 0x26, 0x4b, 0x33, 0x6f, 0x3b, 0xe9, 0xee, 0x4a, 0x93, 0x9d, 0xdd, 0x95, 0x90, 0x03, 0x99,
	0x5d, 0x4f, 0xa7, 0x5b, 0x8f, 0x66, 0x73, 0xa2, 0x5b, 0x9e, 0xd9, 0x30, 0xc8, 0x14, 0x68, 0x05,
	0x0a, 0xa4, 0xb2, 0x85, 0x13, 0x1e, 0xb0, 0x9e, 0x3c, 0x1f, 0x1c, 0x44, 0xdd, 0xe7, 0x16, 0x18,
	0x80, 0x21, 0x40, 0x45, 0xa3, 0xc1, 0xa7, 0xf4, 0x1a, 0x0d, 0xd6, 0xfe, 0x87, 0xa7, 0xa1, 0xc0,
	0xd1, 0x8d, 0x82, 0xe2, 0x64, 0xc2, 0x0c, 0xaf, 0xae, 0x6d, 0x31, 0xf6, 0x55, 0xb7, 0x28, 0xff,
	0xd2, 0x2d, 0x9c, 0xfc, 0x84, 0x17, 0x97, 0xef, 0x96, 0x7e, 0x8f, 0x54, 0xe7, 0x69, 0x3e, 0x87,
	0x5c, 0xa1, 0xf1, 0x84, 0xcf, 0xe8, 0x14, 0x9b, 0x53, 0x60, 0x42, 0xd7, 0x89, 0xc1, 0x71, 0x97,
	0x58, 0x0b, 0x73, 0xca, 0xfb, 0x2e, 0x60, 0xd0, 0xf7, 0x67, 0xe5, 0x12, 0x93, 0x79, 0x55, 0x0e,
	0xf5, 0x9b, 0x99, 0xc4, 0x2d, 0x39, 0x08, 0xe0, 0x35, 0x75, 0xfa, 0xd0, 0x6c, 0xb6, 0x5d, 0x96,
	0x37, 0xc5, 0x32, 0x9d, 0xf5, 0x88, 0x38, 0x2d, 0x0d, 0x2d, 0x83, 0x6a, 0x18, 0xee, 0xec, 0x23,
	0x66, 0x56, 0x96, 0xda, 0xef, 0xb6, 0x43, 0x9f, 0x7c, 0xda, 0xf0, 0x6d, 0xc6, 0x7a, 0x94, 0xa9,
	0xc3, 0x3d, 0x33, 0x78, 0x40, 0x20, 0xae, 0xe8, 0xb7, 0xcc, 0x93, 0x9e, 0x35, 0x69, 0xef, 0x30,
	0x02, 0xac, 0xdc, 0x74, 0xf4, 0x75, 0x87, 0xc4, 0x02, 0xf9, 0xb1, 0x94, 0xa6, 0xc7, 0x2c, 0xd9,
	0xa4, 0x54, 0x74, 0x92, 0xaa, 0x90, 0xc6, 0x65, 0x2e, 0x0b, 0xfd, 0x2b, 0x30, 0x1f, 0xa2, 0x8a,
	0xdd, 0x65, 0x2e, 0xff, 0xc6, 0xd9, 0x51, 0x2a, 0x73, 0x29, 0xcb, 0xef, 0x9a, 0xcd, 0x80, 0x63,
	0xf9, 0xfd, 0xf7, 0x13, 0x9a, 0xc0, 0xff, 0x7a, 0x6a, 0x68, 0xdd, 0x55, 0xbd, 0x9b, 0x2d, 0xdb,
	0xce, 0xe3, 0xd7, 0x7d, 0x79, 0x09, 0xa9, 0x5c, 0x92, 0x12, 0x52, 0xab, 0x50, 0xa2, 0x5d, 0x34,
	0x09, 0x7f, 0x61, 0xe6, 0x0c, 0x65, 0x1c, 0x40, 0x61, 0xa3, 0x9f, 0xd1, 0x77, 0xa4, 0x60, 0x8a,
	0xa1, 0x8a, 0xa9, 0x70, 0xe1, 0xc4, 0x65, 0xad, 0x2a, 0x9d, 0x33, 0x66, 0x23, 0x5c, 0xd8, 0x29,
	0x9e, 0xbc, 0xb0, 0x63, 0x74, 0xf5, 0x90, 0xbd, 0x30, 0xe8, 0x52, 0xf3, 0x43, 0xd0, 0x37, 0x6b,
	0xb6, 0x42, 0x3f, 0xd5, 0x59, 0x53, 0x54, 0xb5, 0xbc, 0xdf, 0x32, 0x05, 0x32, 0x68, 0x47, 0xd4,
	0x1b, 0x00, 0x2d, 0xdf, 0xdb, 0x73, 0xb6, 0x9d, 0x70, 0x70, 0x93, 0x10, 0x1e, 0x74, 0x27, 0x81,
	0xa0, 0x6f, 0x82, 0x62, 0x60, 0xed, 0x61, 0xbb, 0xdd, 0xc0, 0x36, 0x0b, 0xda, 0x9b, 0xd7, 0xa5,
	0x58, 0x73, 0x5b, 0x1c, 0xc3, 0x62, 0xee, 0x3f, 0xfe, 0xf3, 0xaf, 0xfc, 0x62, 0x36, 0x65, 0xc4,
	0x48, 0x3b, 0xaa, 0xee, 0x4f, 0x9e, 0x5e, 0xd5, 0xfd, 0xdf, 0x9a, 0x80, 0x62, 0x0b, 0xfb, 0x3b,
	0x9e, 0xdf, 0xc4, 0x3e, 0x0b, 0xee, 0x53, 0xd7, 0xee, 0x1e, 0x47, 0xe3, 0x88, 0x21, 0x54, 0xbc,
	0x44, 0xca, 0xa8, 0xbe, 0x9e, 0x15, 0x2f, 0x28, 0xfa, 0x38, 0xb1, 0xad, 0xdb, 0x6d, 0x8b, 0x37,
	0x78, 0xba, 0xa2, 0x7d, 0x6a, 0x36, 0x29, 0xbc, 0x38, 0x33, 0x1c, 0x21, 0x5a, 0x83, 0xb2, 0x6d,
	0x3a, 0x8d, 0x83, 0xba, 0xd9, 0xf4, 0xda, 0x6e, 0xc8, 0x8c, 0x35, 0xef, 0xef, 0x5d, 0x4e, 0xab,
	0xd9, 0x6a, 0xe0, 0xd7, 0xda, 0x26, 0xed, 0xa1, 0x52, 0x22, 0xb0, 0x0b, 0x04, 0x14, 0x2d, 0x42,
	0xe1, 0x0d, 0xf6, 0x07, 0x66, 0xb7, 0x51, 0x45, 0x23, 0xe0, 0xba, 0xcd, 0x3f, 0x67, 0xb5, 0xcd,
	0x3f, 0xb5, 0xbf, 0x9f, 0x82, 0xa2, 0xb8, 0x23, 0xe8, 0x0a, 0xe4, 0x42, 0xa7, 0xe9, 0xb8, 0xbb,
	0x83, 0x18, 0xfa, 0x3d, 0x32, 0x6a, 0xf5, 0x8c, 0xc1, 0xc6, 0x47, 0x90, 0xcc, 0xcc, 0x31, 0xa1,
	0x62, 0xe6, 0x88, 0x20, 0x99, 0xa1, 0xe3, 0x3a, 0x94, 0x03, 0xf2, 0x60, 0x75, 0x5a, 0x2f, 0x3a,
	0xad, 0xf2, 0x12, 0x11, 0x3c, 0x85, 0x5a, 0x2c, 0x49, 0x64, 0xa2, 0xf6, 0x85, 0x09, 0xc8, 0xb3,
	0xcd, 0x43, 0xf7, 0x60, 0xea, 0x90, 0xbe, 0x92, 0xd2, 0xe2, 0x4f, 0xab, 0x67, 0x8c, 0xaa, 0xd5,
	0xa5, 0xaa, 0xfc, 0x78, 0x4a, 0x96, 0xf0, 0x27, 0x54, 0xa9, 0x86, 0x47, 0xce, 0xf5, 0x05, 0x7d,
	0x51, 0x59, 0x8f, 0x27, 0x6d, 0xb5, 0xb7, 0x83, 0xd0, 0x74, 0x2d, 0xbc, 0x7a, 0x46, 0x92, 0xfc,
	0x16, 0x8b, 0xe2, 0x4a, 0x24, 0x2b, 0x39, 0xc8, 0x2f, 0xca, 0xec, 0x57, 0xce, 0x52, 0x47, 0x0f,
	0xb1, 0x68, 0x8c, 0x1d, 0x3d, 0x63, 0x47, 0x4f, 0x42, 0x47, 0xcf, 0x62, 0x97, 0xd4, 0xd2, 0xd7,
	0xfc, 0x1e, 0x1d, 0x36, 0x29, 0x68, 0x3e, 0x96, 0x52, 0x0a, 0x52, 0x9b, 0xfb, 0x84, 0x66, 0x77,
	0x5e, 0xd9, 0xa4, 0xac, 0x51, 0xd9, 0xe4, 0x87, 0x25, 0x93, 0xb9, 0x72, 0x81, 0xec, 0xbd, 0xc7,
	0x6b, 0x2c, 0x9f, 0x7c, 0x93, 0x19, 0xcb, 0xab, 0x5a, 0xc6, 0xf2, 0xbb, 0x9d, 0x8d, 0xb8, 0xa9,
	0x13, 0xe6, 0x23, 0x83, 0xce, 0x54, 0x47, 0x3b, 0xe1, 0x8e, 0xee, 0xdb, 0x5d, 0x1a, 0xc9, 0xf4,
	0x31, 0x6b, 0x24, 0xe8, 0xf4, 0x35, 0x92, 0x3f, 0x96, 0x82, 0xf3, 0x4d, 0xd3, 0x25, 0x31, 0x83,
	0x75, 0x4f, 0x92, 0xef, 0xd4, 0xfb, 0xec, 0xcf, 0x27, 0x17, 0x22, 0x8d, 0x73, 0x7c, 0x6e, 0xf9,
	0x57, 0x61, 0x61, 0x3d, 0xa7, 0x69, 0x61, 0xfd, 0xc2, 0x48, 0x76, 0x34, 0x67, 0x9d, 0xe8, 0x52,
	0xfa, 0x9d, 0xe8, 0xbe, 0x3c, 0x01, 0xb9, 0x26, 0x6e, 0x6e, 0x63, 0x8d, 0x96, 0xe6, 0x43, 0x6b,
	0x13, 0xa7, 0xad, 0x13, 0x9c, 0xaa, 0xaf, 0x88, 0xae, 0x26, 0xfa, 0x56, 0x28, 0x7b, 0x6e, 0x7d,
	0x1b, 0xef, 0x99, 0x8d, 0x9d, 0xba, 0xb7, 0xa3, 0x1e, 0xab, 0x33, 0xcc, 0x5d, 0x01, 0xcf, 0x5d,
	0x24, 0x33, 0x6e, 0xec, 0x48, 0x04, 0x31, 0xaf, 0x43, 0x10, 0x93, 0x4b, 0x79, 0xd1, 0xeb, 0xcf,
	0x7e, 0xf5, 0xdd, 0x00, 0x4b, 0x7b, 0xa6, 0xbf, 0x8b, 0xd7, 0x42, 0x3c, 0x96, 0xf3, 0xc6, 0x72,
	0x1e, 0xe6, 0xbd, 0x0d, 0x75, 0xe5, 0xbc, 0xab, 0x47, 0xc4, 0xf3, 0x28, 0xa7, 0x3b, 0xdd, 0x11,
	0x42, 0xe2, 0x80, 0x56, 0xb5, 0xf1, 0x59, 0xed, 0x63, 0xd4, 0x0a, 0xe3, 0x88, 0x15, 0xe5, 0x38,
	0x99, 0x2b, 0x7a, 0x5a, 0x5b, 0xfc, 0x1c, 0x22, 0x66, 0x85, 0x77, 0x8f, 0xa9, 0x0c, 0xd3, 0x3d,
	0x46, 0x8e, 0xd1, 0x98, 0x7c, 0x53, 0xc5, 0x68, 0x54, 0xdf, 0x14, 0x62, 0xe7, 0x7d, 0x00, 0xcf,
	0xb2, 0xda, 0x3e, 0x95, 0xce, 0xa6, 0xfa, 0x17, 0x1e, 0x8c, 0x37, 0x79, 0x6e, 0x43, 0x00, 0x09,
	0x4b, 0x91, 0x84, 0x08, 0x6d, 0x76, 0x4a, 0xa5, 0x54, 0x8a, 0x9c, 0x53, 0xc0, 0xdb, 0x53, 0x2e,
	0xfd, 0x13, 0x29, 0x78, 0x92, 0x19, 0xba, 0x0e, 0xc9, 0x71, 0xe8, 0x34, 0x78, 0xd3, 0x13, 0xf1,
	0xec, 0x1d, 0x92, 0x5c, 0xf4, 0x60, 0x2c, 0x0e, 0xfa, 0x08, 0x01, 0xf3, 0x34, 0x1e, 0x2c, 0x9e,
	0xbd, 0xe3, 0xc1, 0xae, 0x49, 0x56, 0xb6, 0x73, 0xfd, 0x2b, 0x09, 0x1c, 0x61, 0x5f, 0x5b, 0x82,
	0xc2, 0xb6, 0x67, 0x1f, 0x90, 0xd6, 0x8f, 0xe7, 0x35, 0x55, 0x4c, 0x0e, 0x88, 0x56, 0xa1, 0xba,
	0x43, 0x5a, 0xdc, 0xd7, 0xbd, 0x7d, 0xec, 0xfb, 0x8e, 0x8d, 0x59, 0xcd, 0xc1, 0x81, 0x55, 0xa9,
	0x27, 0x29, 0xdc, 0x06, 0x03, 0x43, 0xcb, 0x30, 0xd9, 0xf2, 0x1d, 0x0b, 0xc7, 0x88, 0x68, 0x05,
	0xc2, 0xa7, 0x7b, 0xb2, 0x59, 0xcf, 0xc5, 0x07, 0x46, 0x85, 0x00, 0x09, 0x2c, 0xb7, 0xa0, 0xca,
	0xe1, 0xb9, 0x7d, 0x7f, 0x46, 0x49, 0x74, 0x9e, 0xe4, 0x60, 0xcc, 0xc2, 0xff, 0xe5, 0x09, 0xc8,
	0xe3, 0xe8, 0x12, 0x62, 0x9f, 0x15, 0x1d, 0xfc, 0xda, 0x6e, 0x7f, 0x9c, 0x88, 0x0a, 0x26, 0xe9,
	0x99, 0x9c, 0xb0, 0x2d, 0x15, 0x5f, 0x4c, 0x52, 0xb5, 0x94, 0x7c, 0xb4, 0x69, 0x7d, 0xb3, 0x9a,
	0x6a, 0x7d, 0x33, 0x06, 0x15, 0xfd, 0x80, 0x6e, 0x40, 0x8e, 0xed, 0xee, 0xdb, 0xf5, 0x4e, 0x2e,
	0x03, 0x43, 0x3f, 0x98, 0x89, 0xab, 0xea, 0x3c, 0xa5, 0xca, 0x31, 0xbf, 0x9a, 0xd6, 0x73, 0xb3,
	0x2f, 0x3b, 0xe6, 0xae, 0xeb, 0x05, 0xa1, 0x63, 0x19, 0xb8, 0xe5, 0xf9, 0x9a, 0xa2, 0xfe, 0x5a,
	0x93, 0x28, 0x95, 0x5b, 0x61, 0xdb, 0x3e, 0xd0, 0x85, 0x6c, 0xb6, 0x3b, 0x0e, 0xc7, 0x2b, 0xfa,
	0xa6, 0xd9, 0x05, 0xbb, 0xe9, 0xb8, 0x4e, 0x10, 0xfa, 0xa6, 0xbe, 0x2b, 0x36, 0xc6, 0xb2, 0xec,
	0x04, 0x2d, 0xec, 0x06, 0x58, 0x2f, 0x02, 0x64, 0x63, 0x3b, 0xda, 0x9a, 0x04, 0x16, 0x62, 0x11,
	0xd7, 0xa0, 0xe7, 0x76, 0xde, 0x6a, 0xb7, 0x5a, 0x8d, 0x83, 0x65, 0xdc, 0x70, 0xf6, 0xb1, 0x7f,
	0x10, 0x97, 0x4d, 0xf2, 0x21, 0x6f, 0x5a, 0x84, 0x17, 0xb3, 0xea, 0x98, 0x0a, 0x67, 0xe4, 0xa2,
	0xde, 0x6d, 0x5c, 0xa0, 0xf8, 0x0d, 0x3e, 0x91, 0x30, 0x1b, 0xbc, 0x43, 0xcf, 0x6c, 0x80, 0x3e,
	0x97, 0x82, 0x27, 0xba, 0xe2, 0xe0, 0xfc, 0x26, 0xe5, 0x51, 0xef, 0x3c, 0xe9, 0x50, 0xa3, 0xf3,
	0x9d, 0xe1, 0x70, 0x6c, 0xde, 0xda, 0xaf, 0xa4, 0x00, 0x62, 0x29, 0x22, 0xd2, 0x02, 0x48, 0x89,
	0x96, 0xd0, 0x69, 0x62, 0xa6, 0x70, 0x0d, 0xbc, 0xf5, 0xab, 0x67, 0x8c, 0x82, 0xcd, 0x3e, 0x0f,
	0xe1, 0x86, 0x89, 0x5d, 0x3f, 0x69, 0x3d, 0xd7, 0xcf, 0x62, 0x59, 0x96, 0x9e, 0x6a, 0xbf, 0x93,
	0x19, 0xdb, 0x66, 0x64, 0xdb, 0xcc, 0x6f, 0x4e, 0x40, 0x96, 0x70, 0x71, 0x75, 0xd3, 0xcc, 0x0f,
	0x4c, 0x48, 0xa2, 0xfb, 0x98, 0x51, 0x1e, 0x66, 0x94, 0x74, 0x41, 0x93, 0xb5, 0x87, 0x8d, 0xc5,
	0xec, 0xd9, 0xdf, 0xdf, 0x81, 0xec, 0x52, 0xc3, 0x74, 0xc6, 0x16, 0x8e, 0xb1, 0x85, 0x23, 0xb1,
	0x27, 0xeb, 0xd5, 0x2e, 0x4f, 0x56, 0xcf, 0x2a, 0x4d, 0x37, 0x1d, 0xd7, 0x74, 0x2d, 0xc7, 0x6c,
	0xf0, 0xc5, 0x39, 0xc2, 0xa5, 0x75, 0x95, 0x15, 0x78, 0xd1, 0xed, 0xc4, 0xc7, 0x3a, 0x2e, 0x17,
	0x82, 0xf6, 0x36, 0xed, 0xcf, 0x59, 0xd6, 0xad, 0x82, 0xd8, 0xde, 0x26, 0x6d, 0x39, 0x9f, 0x87,
	0x74, 0x3b, 0x18, 0x58, 0x22, 0xeb, 0x7e, 0x40, 0x0f, 0x57, 0x34, 0x96, 0x66, 0x02, 0xd1, 0xee,
	0x79, 0xca, 0xb6, 0x89, 0x8b, 0xc3, 0xf5, 0xcd, 0x8b, 0x54, 0x98, 0x6d, 0xa7, 0xd1, 0x20, 0xae,
	0x7d, 0x2d, 0x87, 0xd1, 0x24, 0x07, 0xa3, 0xdf, 0xd1, 0x7c, 0xdc, 0x22, 0x77, 0x4a, 0x51, 0xc8,
	0x16, 0x6d, 0x72, 0x1f, 0xc6, 0xda, 0xcf, 0xf4, 0x09, 0xa9, 0xb8, 0x32, 0x4d, 0x8f, 0xd5, 0x83,
	0x87, 0x90, 0x77, 0xdc, 0xa0, 0x1d, 0x4d, 0x7c, 0x2a, 0x4a, 0x3f, 0x9f, 0x0d, 0x1d, 0x90, 0xe8,
	0xe8, 0x7d, 0xc7, 0xc6, 0xfe, 0x89, 0x69, 0xf5, 0x1d, 0xaf, 0x2c, 0xa6, 0x43, 0x9f, 0x4e, 0x41,
	0xb9, 0xc3, 0xaa, 0x70, 0xee, 0x34, 0xde, 0xbc, 0x63, 0x4a, 0xb4, 0x14, 0xbd, 0xbe, 0xe3, 0x91,
	0x0a, 0xbc, 0xe7, 0x35, 0xe3, 0x44, 0x39, 0x20, 0xba, 0x03, 0x95, 0x9d, 0xb6, 0x6b, 0x07, 0x75,
	0x1f, 0x47, 0x32, 0x34, 0xb7, 0x05, 0xa8, 0x77, 0x41, 0x20, 0xd0, 0x06, 0x05, 0x46, 0xcb, 0x90,
	0xf7, 0x29, 0x6b, 0x64, 0xa9, 0x2c, 0xbd, 0x1d, 0xe9, 0x11, 0xa3, 0x9b, 0x63, 0x7c, 0x94, 0x7c,
	0x31, 0x38, 0x28, 0xfa, 0xf9, 0x14, 0x94, 0x5b, 0x52, 0xb8, 0x31, 0xb3, 0x07, 0x28, 0x2c, 0xee,
	0xb7, 0x1e, 0x47, 0x04, 0xf8, 0x10, 0x81, 0xd1, 0x46, 0xc7, 0x73, 0xa3, 0xcf, 0xa7, 0xe0, 0xbc,
	0xe7, 0x3b, 0xbb, 0x8e, 0x6b, 0x36, 0xea, 0x1d, 0x6f, 0xa4, 0x6c, 0x9f, 0xb8, 0x31, 0xe4, 0x1b,
	0x19, 0xe7, 0xf8, 0x03, 0xc8, 0xcf, 0x89, 0x5e, 0x82, 0x6c, 0xcb, 0x3c, 0xc0, 0x5c, 0x97, 0x7f,
	0x4f, 0xff, 0x6d, 0xda, 0x8c, 0x86, 0x1a, 0x14, 0x02, 0x7d, 0x33, 0x14, 0x7c, 0x16, 0x4e, 0xce,
	0x3a, 0x24, 0x28, 0xbc, 0xc6, 0xcb, 0x43, 0xc5, 0xab, 0x1b, 0x62, 0x46, 0xd4, 0x86, 0xc2, 0x8e,
	0x69, 0x91, 0x7c, 0x6f, 0xd6, 0x56, 0xe1, 0x24, 0x63, 0x24, 0xf9, 0x54, 0x68, 0x49, 0xce, 0xd2,
	0xa2, 0x9a, 0xe5, 0xfb, 0xfb, 0xaf, 0xd9, 0x11, 0x29, 0x57, 0x9b, 0x50, 0x92, 0x95, 0xbc, 0x77,
	0x0c, 0x30, 0xc0, 0x12, 0x34, 0x5b, 0x2d, 0x1c, 0x31, 0xe9, 0xd8, 0x95, 0x2e, 0xa3, 0x40, 0x2b,
	0x50, 0xb4, 0xa9, 0xc5, 0xc2, 0x09, 0x98, 0xd2, 0xf8, 0x75, 0xfd, 0xf1, 0x2d, 0xf3, 0xe1, 0x46,
	0x0c, 0x19, 0xa1, 0x69, 0x71, 0x3d, 0x9c, 0x75, 0x5d, 0x18, 0x80, 0x26, 0x4e, 0x47, 0x88, 0x21,
	0x23, 0x34, 0x84, 0x34, 0x9b, 0xae, 0x85, 0x59, 0xff, 0x84, 0x01, 0x68, 0xd6, 0xf8, 0x70, 0x23,
	0x86, 0x8c, 0x04, 0x07, 0xd3, 0xb2, 0x88, 0x4c, 0x33, 0x33, 0xdb, 0x3f, 0x12, 0x91, 0x62, 0x59,
	0x60, 0xa3, 0x0d, 0x01, 0x87, 0x36, 0xe0, 0x2c, 0x6e, 0xb6, 0x1a, 0xde, 0x41, 0x13, 0xbb, 0x61,
	0xdd, 0x69, 0xb6, 0x4c, 0x2b, 0x22, 0x4a, 0xef, 0x51, 0xe2, 0xca, 0x28, 0x06, 0x5d, 0x63, 0x90,
	0x68, 0x15, 0xaa, 0x7b, 0x5e, 0xd0, 0x72, 0x42, 0xb3, 0xc1, 0x49, 0xfe, 0x7b, 0x95, 0x90, 0x75,
	0x83, 0xa1, 0x4b, 0x90, 0x71, 0x42, 0xdc, 0x9c, 0x79, 0x5f, 0x7f, 0xf9, 0x8e, 0x2d, 0x50, 0x88,
	0x9b, 0x06, 0x19, 0x8f, 0x5e, 0xe0, 0x7d, 0x5e, 0xdf, 0xaf, 0x62, 0x64, 0xa5, 0x63, 0x6b, 0xbf,
	0x9c, 0x86, 0xb2, 0x4c, 0x64, 0x47, 0x41, 0xff, 0x6d, 0x40, 0xd6, 0x8a, 0xde, 0x85, 0x29, 0x1e,
	0x0a, 0xf7, 0xff, 0x05, 0x3d, 0x07, 0x12, 0x65, 0x47, 0x74, 0x12, 0xf4, 0x2a, 0x69, 0xee, 0x40,
	0xb6, 0x2e, 0xd8, 0x73, 0x5a, 0x4c, 0x5f, 0x51, 0xe7, 0x8f, 0x32, 0x30, 0x7a, 0x45, 0x0e, 0xd6,
	0xcc, 0x29, 0xbb, 0x30, 0x63, 0xa0, 0xda, 0xbf, 0xcf, 0x40, 0x96, 0x90, 0xe3, 0xd1, 0xc8, 0x74,
	0x91, 0x4b, 0x44, 0xeb, 0x7b, 0x23, 0x89, 0x9e, 0xb1, 0x04, 0x15, 0x5e, 0xe6, 0x9f, 0x2a, 0x1b,
	0x59, 0x95, 0xea, 0x44, 0xd1, 0xc6, 0xc4, 0x65, 0x7c, 0xd0, 0x0f, 0x4c, 0x44, 0x0c, 0xd1, 0x17,
	0xbd, 0x0c, 0x54, 0x4c, 0xcb, 0x6f, 0x32, 0x83, 0x48, 0x52, 0xe3, 0x06, 0x59, 0x96, 0xda, 0x9f,
	0xc9, 0x4a, 0x91, 0xb6, 0x23, 0x70, 0xf4, 0x6e, 0x41, 0x21, 0x88, 0x84, 0x8b, 0xe8, 0x22, 0x66,
	0xfa, 0xcb, 0x40, 0x9b, 0x5e, 0xe0, 0x84, 0xce, 0x3e, 0x5e, 0x73, 0xe3, 0xa3, 0x27, 0x80, 0xd1,
	0x4f, 0xa4, 0x24, 0x2d, 0x44, 0xd9, 0xa6, 0xf6, 0xc9, 0xc7, 0x67, 0x52, 0x93, 0xb4, 0x98, 0x05,
	0x28, 0xb1, 0x2a, 0x4d, 0xce, 0xb6, 0x28, 0xfd, 0xa3, 0x52, 0xc7, 0x5b, 0xc0, 0x08, 0x63, 0x64,
	0x3e, 0x89, 0x31, 0x72, 0x1d, 0x2a, 0xac, 0xe5, 0x3e, 0xcb, 0x7a, 0x29, 0xe8, 0x61, 0xe9, 0x84,
	0xae, 0xfd, 0xdb, 0x02, 0x4c, 0x75, 0xcb, 0x4b, 0xe3, 0xb3, 0x2a, 0x9d, 0xd5, 0x57, 0x0f, 0xd5,
	0x60, 0xd3, 0xa6, 0xb9, 0x71, 0xa8, 0xf2, 0x50, 0x39, 0x76, 0x1f, 0x13, 0xe6, 0xfd, 0xfc, 0x80,
	0xde, 0x31, 0x47, 0x4a, 0xc1, 0xcc, 0xea, 0x1f, 0x91, 0x6e, 0x11, 0xea, 0xc0, 0x53, 0x3f, 0x0c,
	0xc8, 0xd2, 0xcc, 0x8d, 0xc2, 0x80, 0xc6, 0x73, 0x47, 0x63, 0x7e, 0x3d, 0x82, 0x15, 0x48, 0x29,
	0x2a, 0xc9, 0x79, 0x59, 0xd4, 0x7b, 0x5b, 0x06, 0x56, 0xfb, 0x4c, 0x0a, 0x20, 0x7e, 0x66, 0x74,
	0x81, 0xb5, 0x70, 0x4c, 0xf5, 0x37, 0xda, 0x2e, 0x9b, 0x21, 0x5e, 0x3d, 0xc3, 0x1a, 0x37, 0x26,
	0xf6, 0xa5, 0x2c, 0x16, 0xf8, 0x62, 0xd7, 0xfe, 0xe1, 0x04, 0x64, 0xc9, 0x0b, 0x1e, 0x4a, 0x73,
	0x49, 0xe9, 0xa5, 0xb9, 0xa0, 0xeb, 0x52, 0x20, 0xc3, 0x84, 0x5a, 0x20, 0xc3, 0xea, 0x19, 0x29,
	0x94, 0x61, 0x19, 0xc0, 0x0c, 0x43, 0xd3, 0xda, 0x23, 0x5d, 0x66, 0xd2, 0xfd, 0x45, 0xa1, 0x05,
	0x31, 0x72, 0xf5, 0x8c, 0x21, 0xc1, 0xa1, 0x03, 0x59, 0x9e, 0xca, 0x9c, 0x90, 0x3a, 0xc8, 0x0d,
	0xa4, 0x9d, 0x39, 0x2c, 0x79, 0x76, 0xcc, 0x6a, 0xff, 0x2e, 0x0b, 0x45, 0xa1, 0x55, 0x8d, 0xc9,
	0x8d, 0x44, 0x6e, 0x4c, 0x59, 0x3b, 0xa5, 0xf4, 0xe6, 0xa2, 0xa2, 0x76, 0x1a, 0x7f, 0x22, 0x77,
	0xbc, 0x4c, 0x71, 0xf3, 0x94, 0xc9, 0x58, 0x73, 0xbd, 0x2a, 0x4a, 0x90, 0xa7, 0xf5, 0x2d, 0xd4,
	0xb7, 0xa1, 0xdc, 0x32, 0xad, 0x07, 0xe6, 0x2e, 0xe6, 0x99, 0xbe, 0x5a, 0x77, 0xbb, 0xc4, 0x80,
	0xa3, 0xdf, 0x6b, 0xbf, 0x97, 0x82, 0x4a, 0xc7, 0x33, 0x9f, 0x50, 0xbe, 0xd7, 0x27, 0x13, 0xa5,
	0x7b, 0x25, 0x0d, 0xdc, 0xef, 0x3c, 0xf2, 0x25, 0x69, 0x3f, 0x23, 0x81, 0xb0, 0x28, 0xac, 0x00,
	0xe3, 0x63, 0x2f, 0x1d, 0xfb, 0x17, 0x19, 0x71, 0xcf, 0x2a, 0x5a, 0xf0, 0x29, 0x79, 0x37, 0x65,
	0x1b, 0x4c, 0x4e, 0xe5, 0xb2, 0x88, 0xd5, 0x8f, 0x3f, 0x1d, 0x75, 0x59, 0x04, 0x56, 0x72, 0x46,
	0x3b, 0x86, 0xbe, 0x99, 0xcf, 0xa8, 0x78, 0x91, 0x43, 0x67, 0x34, 0x7e, 0xe1, 0x7f, 0x95, 0x85,
	0xa2, 0x30, 0x31, 0x8d, 0xcf, 0xa8, 0x74, 0x46, 0x5f, 0x26, 0xb5, 0x6e, 0x4d, 0xde, 0x4f, 0x71,
	0x90, 0xcc, 0xdf, 0x51, 0xe2, 0xd6, 0x6c, 0xa0, 0x4f, 0x41, 0xc1, 0xf2, 0xf6, 0xb1, 0x6f, 0xee,
	0x6a, 0x14, 0x0c, 0xbd, 0x26, 0xe9, 0x3c, 0xea, 0x49, 0x00, 0x6c, 0x1a, 0x43, 0x4c, 0x88, 0x5e,
	0x83, 0x73, 0xdb, 0xed, 0xc0, 0x71, 0x71, 0x10, 0xd4, 0x4d, 0xdf, 0x37, 0xdd, 0x5d, 0x52, 0xf5,
	0x53, 0xb1, 0x69, 0xc4, 0x59, 0x0e, 0xbb, 0x10, 0x83, 0xa2, 0x57, 0x88, 0xc3, 0xa1, 0x6e, 0xb6,
	0xc3, 0xbd, 0xba, 0x8f, 0x77, 0x98, 0x17, 0x77, 0x10, 0x2a, 0x68, 0xf9, 0x78, 0xa1, 0x1d, 0xee,
	0x19, 0x78, 0x07, 0x7d, 0x47, 0x0a, 0x26, 0x89, 0xc1, 0xa8, 0xae, 0x5f, 0x73, 0xf7, 0xaa, 0x9e,
	0x7e, 0x4e, 0xcd, 0x53, 0x6c, 0x16, 0xa3, 0x62, 0xc9, 0x5f, 0x6b, 0xbf, 0x9b, 0x81, 0x02, 0xb7,
	0x87, 0x8e, 0x48, 0x27, 0x36, 0x42, 0x4c, 0x33, 0x83, 0x25, 0xe5, 0xae, 0x46, 0xe7, 0x5c, 0x34,
	0xc8, 0x26, 0x71, 0x5e, 0x6f, 0x49, 0xa5, 0x18, 0x06, 0x14, 0x97, 0xee, 0xb4, 0x41, 0xcf, 0x71,
	0xe7, 0x81, 0x50, 0x21, 0x04, 0xa2, 0xda, 0x2f, 0xa7, 0xa0, 0xc0, 0xff, 0x8c, 0xae, 0xc6, 0x75,
	0xe0, 0x53, 0xfd, 0xef, 0xe0, 0x02, 0x1d, 0xb6, 0x7a, 0x46, 0x54, 0x81, 0xef, 0x94, 0x7b, 0x27,
	0x4e, 0xd8, 0x0d, 0xd2, 0x49, 0x60, 0x21, 0x5e, 0x99, 0xda, 0x7f, 0xf7, 0x6e, 0xc8, 0x90, 0x94,
	0x9c, 0x31, 0x69, 0x8d, 0x49, 0xeb, 0x5d, 0x98, 0x16, 0xae, 0xa2, 0x7a, 0xc3, 0x71, 0x1f, 0xd4,
	0x1d, 0x9b, 0xd5, 0x0e, 0x53, 0xc1, 0x68, 0x4c, 0x72, 0x7f, 0xd1, 0x1d, 0xc7, 0x7d, 0xb0, 0x66,
	0xa3, 0x0d, 0x98, 0x16, 0x52, 0x97, 0xc0, 0x97, 0x53, 0xc7, 0x57, 0x15, 0xd0, 0x31, 0x42, 0xc1,
	0x22, 0x05, 0xc2, 0xbc, 0x06, 0x42, 0x01, 0xcd, 0x10, 0x6e, 0xc1, 0x59, 0xc9, 0x29, 0x25, 0x50,
	0x16, 0xd4, 0x51, 0x4e, 0x4b, 0xf0, 0x0c, 0xe9, 0x02, 0xe4, 0x7d, 0xbc, 0x8f, 0xdd, 0x36, 0xd6,
	0xd5, 0xb9, 0x39, 0x5c, 0x47, 0x46, 0x36, 0x24, 0x2d, 0xa4, 0x24, 0xf5, 0xf2, 0xd4, 0x0c, 0x83,
	0x11, 0x41, 0xa9, 0x4b, 0x50, 0xe0, 0xe7, 0x4d, 0x37, 0x12, 0x46, 0x00, 0x12, 0x65, 0xc5, 0xf7,
	0x76, 0x7d, 0xb3, 0x59, 0x67, 0x19, 0x3c, 0x69, 0x3d, 0x65, 0x85, 0x02, 0x93, 0x2c, 0xe0, 0x8d,
	0xe8, 0xac, 0x93, 0x67, 0xb3, 0x59, 0x90, 0xcc, 0x87, 0x07, 0xbb, 0xa1, 0xe6, 0xb6, 0x18, 0x48,
	0x4c, 0xd9, 0x38, 0x92, 0x08, 0xa1, 0x20, 0x97, 0x55, 0x65, 0x84, 0xbd, 0x49, 0x65, 0x47, 0x35,
	0x92, 0xa9, 0x84, 0xd5, 0x48, 0xae, 0x01, 0xb4, 0x5d, 0x27, 0xac, 0x93, 0x74, 0x03, 0x16, 0x13,
	0x33, 0xc0, 0x6b, 0x56, 0x8c, 0x00, 0x36, 0xa3, 0xf1, 0xe8, 0x32, 0xe4, 0x68, 0xba, 0x03, 0x0b,
	0x6a, 0x19, 0x98, 0x1d, 0xc1, 0x86, 0xa3, 0x67, 0x21, 0xed, 0x62, 0x5e, 0xbc, 0x76, 0xc0, 0x7c,
	0xd1, 0x48, 0xe4, 0x40, 0xba, 0x6d, 0x3b, 0x2c, 0xeb, 0x58, 0x81, 0x8c, 0xbf, 0x98, 0x24, 0xbe,
	0xd1, 0x88, 0xe6, 0x40, 0xcb, 0x50, 0xdc, 0xf6, 0xec, 0x83, 0x3a, 0xcb, 0x20, 0x49, 0x69, 0x67,
	0x90, 0x6c, 0x39, 0xa1, 0x88, 0xec, 0x22, 0x48, 0x9e, 0xd0, 0x8f, 0xec, 0x22, 0x38, 0x1e, 0x41,
	0x11, 0xf3, 0xa4, 0x29, 0xf5, 0xb2, 0xa7, 0x97, 0x13, 0xa6, 0x65, 0x19, 0xf1, 0x64, 0x68, 0x41,
	0x94, 0x9d, 0x9b, 0x19, 0x10, 0x3e, 0x18, 0x9f, 0xd4, 0xae, 0x7a, 0x73, 0x9f, 0x49, 0x41, 0x81,
	0xdf, 0x86, 0x53, 0xb6, 0xe5, 0x41, 0x7c, 0x75, 0x6b, 0x3f, 0x34, 0x21, 0xc9, 0x13, 0x27, 0xa3,
	0xca, 0x49, 0x52, 0xca, 0xc4, 0x70, 0x52, 0x4a, 0xfa, 0xb1, 0x49, 0x29, 0xbf, 0x53, 0x1d, 0xa5,
	0xea, 0x80, 0xc7, 0x26, 0xa7, 0x48, 0x0c, 0x36, 0x7b, 0x0c, 0x0c, 0x36, 0x77, 0x0c, 0x0c, 0x36,
	0x7f, 0x0c, 0x0c, 0xb6, 0x70, 0x5c, 0x0c, 0xb6, 0x38, 0x04, 0x83, 0x95, 0xd9, 0x17, 0x1c, 0x0b,
	0xfb, 0x2a, 0x25, 0x66, 0x5f, 0xe5, 0x44, 0xec, 0xab, 0xa2, 0xcb, 0xbe, 0x26, 0x4f, 0x81, 0x7d,
	0x19, 0x00, 0x11, 0xe3, 0x61, 0xe4, 0x7b, 0x40, 0x1b, 0xda, 0x43, 0xe4, 0x7b, 0x6e, 0xab, 0xbd,
	0xcd, 0x08, 0x79, 0x31, 0xe0, 0x1f, 0x6b, 0x7f, 0x2f, 0x0f, 0x45, 0xf1, 0x87, 0x31, 0x81, 0x18,
	0x13, 0x88, 0x31, 0x81, 0x78, 0xd3, 0x12, 0x88, 0xf9, 0x97, 0xa4, 0x14, 0x1c, 0xbd, 0x70, 0xaf,
	0xd9, 0x3f, 0xba, 0x08, 0x95, 0x0e, 0xcb, 0xda, 0x38, 0x0b, 0x67, 0x9c, 0x85, 0xf3, 0x35, 0x91,
	0x85, 0x23, 0x65, 0xb4, 0x94, 0x4e, 0x2b, 0xa3, 0x45, 0x4a, 0x44, 0x29, 0x27, 0x48, 0x44, 0xe1,
	0xf9, 0x20, 0x95, 0x53, 0xcd, 0x07, 0xf9, 0x2c, 0x29, 0x6e, 0x46, 0x22, 0xc6, 0xeb, 0x22, 0x24,
	0x6b, 0xf2, 0x34, 0x12, 0x43, 0xaa, 0x6c, 0xda, 0x4d, 0x1e, 0x59, 0xf5, 0xb9, 0x14, 0x9c, 0xe3,
	0x8f, 0xd2, 0x91, 0x27, 0x52, 0x3d, 0x8d, 0x15, 0x39, 0xcb, 0xa6, 0xee, 0x28, 0x3d, 0xd1, 0x8a,
	0xbb, 0x12, 0x4e, 0x9d, 0x68, 0xe0, 0xac, 0xe8, 0x40, 0xb8, 0x00, 0x79, 0xd6, 0xd1, 0x80, 0x59,
	0x5f, 0xd4, 0x19, 0x37, 0x83, 0x23, 0x15, 0x65, 0x9d, 0xa0, 0x45, 0xe4, 0x14, 0x8d, 0x86, 0x42,
	0x31, 0x08, 0xba, 0x09, 0x40, 0xf2, 0x16, 0x68, 0x6c, 0xe8, 0x59, 0xbd, 0xe7, 0x28, 0x12, 0x50,
	0xe2, 0x2a, 0xbd, 0xce, 0xc2, 0xb6, 0xcf, 0x29, 0xe4, 0xb5, 0x70, 0x16, 0x22, 0x87, 0x6f, 0xdf,
	0x86, 0x82, 0x69, 0xdb, 0x75, 0x82, 0x83, 0xd6, 0xee, 0x78, 0x56, 0x0d, 0xc7, 0x82, 0x6d, 0x63,
	0x9b, 0x20, 0x8a, 0x14, 0x6b, 0x62, 0x6e, 0x5f, 0x80, 0x2c, 0xf6, 0x7d, 0xd1, 0x8a, 0xe7, 0xc3,
	0x6a, 0x88, 0x56, 0x22, 0x10, 0x83, 0x42, 0x46, 0xc2, 0x03, 0x89, 0x10, 0xaf, 0x5b, 0x5e, 0x10,
	0xaa, 0xd5, 0xed, 0x28, 0x12, 0x80, 0x25, 0x2f, 0x08, 0xd1, 0x1d, 0x40, 0x6d, 0xd7, 0x6c, 0x34,
	0x3c, 0xab, 0x6e, 0x63, 0xbb, 0x6d, 0x85, 0xd1, 0xa2, 0xb1, 0x34, 0x9d, 0x01, 0x58, 0xa6, 0x19,
	0xe0, 0xb2, 0x80, 0x43, 0x8b, 0x50, 0xa1, 0xcf, 0xb2, 0x8d, 0x5d, 0xbc, 0xe3, 0x84, 0x2c, 0x3b,
	0x66, 0x00, 0xa2, 0x32, 0x81, 0x59, 0xa4, 0x20, 0xe8, 0x56, 0x44, 0x24, 0x49, 0xc8, 0x3e, 0x4b,
	0x69, 0x79, 0x46, 0x6d, 0x51, 0x36, 0x29, 0x90, 0xc1, 0xa1, 0xd1, 0x3c, 0xe9, 0x9a, 0x89, 0xfd,
	0x7d, 0x6c, 0xb3, 0xf4, 0x96, 0x41, 0x91, 0xc4, 0x62, 0x3c, 0xba, 0x0a, 0x99, 0x1d, 0xcf, 0x6f,
	0xb2, 0xc4, 0x14, 0x75, 0x97, 0x53, 0x04, 0x84, 0xd6, 0x89, 0x78, 0x69, 0xe1, 0x20, 0xa8, 0x93,
	0x72, 0x02, 0x4f, 0xeb, 0x1c, 0xb4, 0xbb, 0x5e, 0x88, 0x89, 0x84, 0x19, 0xc1, 0x47, 0x5f, 0xd0,
	0xf7, 0xa7, 0xe0, 0xbc, 0x25, 0xb7, 0xd7, 0xa8, 0xf3, 0xdb, 0xff, 0x0e, 0x55, 0x41, 0x6c, 0x71,
	0xf8, 0x66, 0x1e, 0xc6, 0x39, 0xeb, 0x88, 0x5f, 0xd1, 0xba, 0x9c, 0x29, 0xf2, 0x4e, 0x9d, 0xdb,
	0x70, 0x54, 0xc6, 0x48, 0xed, 0x1f, 0x55, 0x47, 0xc7, 0x0f, 0x75, 0x1f, 0xa6, 0xb8, 0x06, 0x26,
	0x3c, 0x29, 0x09, 0xd4, 0xb8, 0x49, 0x8e, 0x84, 0xb9, 0x53, 0x96, 0xa1, 0x14, 0x9d, 0xaa, 0xba,
	0xdb, 0x66, 0x75, 0x19, 0x95, 0x7d, 0x33, 0x10, 0xc1, 0xdd, 0x25, 0x60, 0xe8, 0xeb, 0xa1, 0x6c,
	0xda, 0x9f, 0x68, 0xf3, 0x1c, 0x33, 0x26, 0xfa, 0x5d, 0x56, 0x27, 0x86, 0x73, 0x0b, 0x12, 0xb8,
	0xd1, 0x81, 0x0c, 0xad, 0x0b, 0xc3, 0x2c, 0x15, 0x04, 0x2f, 0x6a, 0xa0, 0x8d, 0xfe, 0xe9, 0x32,
	0xd2, 0xfe, 0x83, 0x34, 0x94, 0xe5, 0xd9, 0x46, 0xa3, 0x4b, 0x76, 0xd2, 0xd6, 0x20, 0x47, 0x04,
	0xf0, 0xc6, 0x41, 0xad, 0xd9, 0x44, 0x41, 0xad, 0xe8, 0x22, 0xe4, 0x58, 0xdd, 0xf9, 0x9c, 0x0a,
	0xc1, 0x66, 0x83, 0xd1, 0x45, 0x1e, 0xa0, 0x9b, 0x57, 0x53, 0x3c, 0x79, 0x9c, 0x65, 0x1e, 0x20,
	0xde, 0xe6, 0xf1, 0x55, 0x7f, 0x33, 0x5f, 0xf5, 0x6f, 0xec, 0x30, 0xe4, 0xd1, 0xeb, 0x7e, 0x23,
	0xd1, 0x75, 0x3f, 0xda, 0xa8, 0xf7, 0x0b, 0xe9, 0x11, 0x33, 0xea, 0xbd, 0x65, 0x8f, 0x4a, 0xed,
	0xf3, 0x65, 0x28, 0x0a, 0x11, 0x78, 0x14, 0xb6, 0x72, 0xfd, 0xc8, 0xad, 0x54, 0x0f, 0x0f, 0xe9,
	0xda, 0xc2, 0xb1, 0x95, 0xb6, 0xd3, 0x4a, 0xfb, 0x2c, 0xa4, 0x77, 0x30, 0x8f, 0x19, 0x19, 0x64,
	0x9e, 0xdc, 0xc1, 0xb8, 0xfb, 0x0e, 0xc0, 0xf1, 0xdc, 0x81, 0xd2, 0x71, 0x92, 0xcb, 0x8f, 0x0a,
	0xc9, 0x88, 0x86, 0x8f, 0xbc, 0xa2, 0xa9, 0x39, 0xc6, 0x9f, 0x82, 0x2e, 0x21, 0xe9, 0x27, 0xb2,
	0x30, 0xd5, 0xfd, 0xc7, 0x51, 0xb8, 0x64, 0xd2, 0xad, 0xc8, 0x1c, 0xc3, 0xad, 0xc8, 0x1e, 0xc3,
	0xad, 0xc8, 0x1d, 0xc3, 0xad, 0xc8, 0x0f, 0x79, 0x2b, 0x0a, 0x49, 0x6f, 0x45, 0xf1, 0x78, 0x6e,
	0x05, 0x1c, 0x27, 0x67, 0xf8, 0x53, 0x19, 0xc8, 0x12, 0x9b, 0xc6, 0xe8, 0x72, 0x85, 0x54, 0x52,
	0xae, 0xf0, 0x71, 0x78, 0x92, 0xde, 0xf0, 0xfa, 0x21, 0xac, 0x59, 0x75, 0xac, 0xe7, 0x28, 0x8e,
	0xad, 0x4e, 0xdc, 0xdf, 0x04, 0xb5, 0xa0, 0xbd, 0xdd, 0x0b, 0x7d, 0x4e, 0x1d, 0xfd, 0x93, 0x02,
	0x4d, 0xd7, 0x0c, 0xbc, 0x4a, 0x75, 0x7e, 0x88, 0x2a, 0xd5, 0xb5, 0x5f, 0xca, 0x40, 0x9e, 0x59,
	0x77, 0x46, 0xa4, 0xea, 0x5f, 0x82, 0x5c, 0x79, 0x16, 0xce, 0xfc, 0x32, 0x40, 0x74, 0x75, 0x02,
	0xd2, 0xa2, 0x95, 0x9d, 0x80, 0x01, 0x54, 0x40, 0x02, 0x40, 0xf7, 0x60, 0x3a, 0xfe, 0xc6, 0x8b,
	0xf4, 0x6a, 0xd2, 0xb3, 0xa9, 0x18, 0x03, 0xab, 0xd7, 0xfb, 0x1c, 0x0b, 0x9c, 0xca, 0x0f, 0x0e,
	0x9c, 0x62, 0x61, 0x53, 0xb1, 0xc2, 0x59, 0xd0, 0x51, 0x38, 0x8f, 0xa1, 0x72, 0x7c, 0xed, 0xa7,
	0xd2, 0x90, 0x21, 0x76, 0xb5, 0x91, 0x38, 0x4a, 0x39, 0x46, 0xd6, 0x35, 0x28, 0x0c, 0x03, 0x19,
	0x2e, 0xac, 0xfe, 0x02, 0x73, 0x37, 0xe6, 0xd4, 0xda, 0x1b, 0x11, 0x5f, 0xe3, 0x92, 0xe4, 0xe4,
	0xd4, 0x94, 0x2c, 0x05, 0xe0, 0x38, 0x13, 0x68, 0x9c, 0x09, 0xf4, 0x16, 0xcb, 0x04, 0x9a, 0x5f,
	0x90, 0x62, 0x21, 0x92, 0x61, 0x9c, 0xfd, 0x73, 0xef, 0x06, 0xb4, 0xd4, 0x70, 0x5c, 0xc7, 0x32,
	0x1b, 0x6b, 0xcd, 0x96, 0x8f, 0x03, 0x72, 0xf6, 0xc6, 0x81, 0x11, 0xe3, 0xc0, 0x88, 0x84, 0x81,
	0x11, 0xf7, 0xba, 0x02, 0x23, 0xfa, 0x54, 0x67, 0xe8, 0x3e, 0x76, 0x7d, 0x7a, 0xa9, 0xf0, 0x52,
	0x14, 0xa5, 0x24, 0xa5, 0x28, 0xba, 0x9a, 0x96, 0x96, 0xb5, 0x9b, 0x96, 0x76, 0xf4, 0x43, 0xa9,
	0xbc, 0xa9, 0xfa, 0xa1, 0xbc, 0x39, 0xda, 0xf0, 0x7d, 0x1c, 0x8a, 0x78, 0x67, 0x07, 0x5b, 0xd1,
	0x3d, 0x63, 0x01, 0x14, 0x1a, 0xe7, 0x66, 0x6e, 0x85, 0xc3, 0xc6, 0x3d, 0x97, 0x05, 0x3a, 0x91,
	0xac, 0x3d, 0xa5, 0x95, 0xac, 0x7d, 0x00, 0x05, 0x33, 0x08, 0x70, 0x10, 0x78, 0xa7, 0x54, 0x6c,
	0x55, 0x4c, 0x87, 0xbe, 0x15, 0x0a, 0x2d, 0x1f, 0xef, 0x3b, 0x5e, 0x3b, 0x50, 0x2f, 0xb7, 0xfa,
	0x8a, 0x5e, 0x61, 0xcb, 0xc3, 0x8b, 0x68, 0x88, 0x49, 0xd1, 0xff, 0x94, 0x22, 0xdd, 0x5b, 0xb7,
	0x1b, 0xb8, 0xa9, 0xde, 0xac, 0xef, 0x61, 0xc2, 0x02, 0x04, 0x9a, 0x0d, 0xe5, 0x1b, 0x0d, 0xec,
	0xef, 0x1e, 0xac, 0xb9, 0xa1, 0xd7, 0xc0, 0xd4, 0x4b, 0xcc, 0x1f, 0x15, 0x7d, 0x23, 0x54, 0x1c,
	0x77, 0x1f, 0x07, 0xa1, 0xb3, 0xcb, 0x2b, 0xb6, 0xa6, 0xfb, 0x36, 0x63, 0x3e, 0x7c, 0x90, 0xd6,
	0x64, 0x78, 0xa3, 0x13, 0x1d, 0xba, 0x4c, 0xca, 0x40, 0x85, 0x9e, 0xe5, 0x35, 0x58, 0x7c, 0x47,
	0x5f, 0x86, 0x25, 0x06, 0xa3, 0x2b, 0x11, 0xf1, 0x68, 0x36, 0x4d, 0xff, 0x80, 0xd5, 0x5e, 0x1d,
	0x44, 0x7b, 0xf8, 0x70, 0x74, 0x07, 0xf2, 0x3b, 0x8e, 0x6b, 0x3b, 0xee, 0x2e, 0xcb, 0xa0, 0xb9,
	0xa0, 0xf1, 0x32, 0x37, 0x29, 0xa4, 0xc1, 0x51, 0x20, 0x0c, 0xb5, 0x96, 0xef, 0xb1, 0x3c, 0xc3,
	0x43, 0xa9, 0x24, 0x33, 0x7a, 0x96, 0xa7, 0x19, 0x81, 0xaa, 0xeb, 0x2f, 0xe8, 0x73, 0x29, 0x38,
	0x1b, 0xcf, 0x13, 0xe7, 0x87, 0xbc, 0x4d, 0xf5, 0x28, 0x5d, 0xd3, 0xeb, 0x14, 0x61, 0x38, 0xc1,
	0x83, 0x05, 0x72, 0x79, 0x88, 0xea, 0x89, 0xc4, 0xdc, 0x71, 0x33, 0xca, 0xdf, 0x9e, 0x80, 0x5c,
	0x74, 0xd7, 0x3c, 0x77, 0xa6, 0xa6, 0xfa, 0x14, 0x3f, 0x3a, 0x31, 0x54, 0x45, 0x53, 0xbd, 0xae,
	0x24, 0x71, 0xb5, 0x4d, 0x09, 0x3a, 0x61, 0x8b, 0x8d, 0x21, 0x8b, 0xe3, 0x2a, 0x77, 0x04, 0x59,
	0x68, 0xb5, 0x3c, 0xc7, 0xa5, 0xfa, 0x3e, 0x5b, 0x5d, 0xd1, 0x29, 0xe3, 0xed, 0x9a, 0x0d, 0x36,
	0xff, 0x78, 0x0a, 0x8a, 0x82, 0x8a, 0x3f, 0xc6, 0xae, 0x14, 0x8b, 0x25, 0x89, 0x13, 0xd5, 0x7e,
	0x36, 0x0b, 0x95, 0x0e, 0x92, 0x30, 0x22, 0x25, 0x19, 0x89, 0x28, 0x95, 0x19, 0xa6, 0x41, 0xdc,
	0x8f, 0xa4, 0x59, 0xb0, 0x5c, 0x56, 0xf5, 0x3a, 0xfd, 0xeb, 0x89, 0xe1, 0xfa, 0xcd, 0xbc, 0xac,
	0x0a, 0xf8, 0x1a, 0xe9, 0xca, 0xe5, 0xb9, 0xae, 0xe9, 0x44, 0xd7, 0x89, 0x2a, 0x3a, 0x04, 0xc5,
	0x55, 0x55, 0x14, 0x37, 0xcd, 0xa6, 0xd3, 0x38, 0x58, 0x27, 0x2d, 0x39, 0x57, 0x9d, 0x20, 0xf4,
	0xfc, 0x83, 0x63, 0x68, 0x32, 0x94, 0x90, 0xa0, 0x25, 0x6f, 0x50, 0x44, 0xe3, 0x12, 0x6b, 0xff,
	0x29, 0x03, 0x79, 0xc6, 0x0b, 0x46, 0xe1, 0xfc, 0x7e, 0x8c, 0x9d, 0x3c, 0x7a, 0x7e, 0x2f, 0xeb,
	0x33, 0x44, 0xe2, 0x76, 0xe8, 0xaa, 0xa1, 0x43, 0x23, 0x38, 0x5f, 0x84, 0xec, 0xb6, 0x19, 0x97,
	0xb2, 0x1a, 0xb4, 0x40, 0x74, 0x70, 0xed, 0xfb, 0x27, 0x58, 0x6c, 0xda, 0xc9, 0x24, 0x68, 0x7e,
	0x31, 0x59, 0xff, 0xff, 0xd6, 0x30, 0xf2, 0x58, 0x92, 0x5b, 0xda, 0x99, 0x9e, 0x99, 0xa3, 0xbb,
	0x34, 0x7f, 0x53, 0xb2, 0x51, 0x0c, 0x21, 0x9d, 0xce, 0x7e, 0xfe, 0xeb, 0x00, 0xa2, 0xc5, 0xda,
	0x3a, 0x08, 0xc6, 0x1d, 0x62, 0xdf, 0xb2, 0x06, 0x8a, 0x67, 0x20, 0xdd, 0xf6, 0x1b, 0xcc, 0xda,
	0xd6, 0x77, 0x37, 0xa2, 0x71, 0x5d, 0xf6, 0x0c, 0x48, 0xd4, 0x50, 0xf6, 0x0a, 0xe4, 0xf7, 0xb1,
	0x1f, 0x50, 0x8f, 0xbf, 0x92, 0xf0, 0xce, 0x86, 0x27, 0xea, 0xf4, 0xff, 0x22, 0x64, 0x43, 0x27,
	0x6c, 0xf0, 0x86, 0x28, 0x03, 0x29, 0x10, 0x19, 0x8c, 0xd6, 0x85, 0xcd, 0x65, 0xb2, 0x7f, 0x64,
	0xf4, 0x66, 0x7b, 0xbb, 0xc1, 0x44, 0xbe, 0x3e, 0xc6, 0x96, 0x25, 0x28, 0xe3, 0x47, 0x91, 0x3c,
	0x14, 0xb1, 0x1f, 0xb3, 0xc1, 0x14, 0xf2, 0x81, 0x55, 0x63, 0x3b, 0x80, 0x12, 0xaa, 0xdd, 0xd7,
	0xa0, 0xd8, 0x8a, 0x9e, 0x31, 0xd8, 0x13, 0x4d, 0x4e, 0x06, 0xad, 0x41, 0x0c, 0x80, 0x6e, 0x50,
	0xbb, 0x87, 0x69, 0x85, 0xac, 0xe3, 0xfd, 0xfb, 0xfa, 0x1e, 0x7c, 0x2b, 0x64, 0xb1, 0x12, 0x1c,
	0x0a, 0x2d, 0x76, 0x5a, 0x8a, 0xce, 0xf6, 0x7f, 0xf6, 0x75, 0xd3, 0x7f, 0x60, 0x7b, 0x0f, 0xdd,
	0x4e, 0x5b, 0xd1, 0x0a, 0x94, 0xda, 0x01, 0x61, 0x00, 0xe4, 0xf6, 0x52, 0x25, 0xf4, 0xbd, 0xbd,
	0x3b, 0xdb, 0x90, 0x8b, 0x4f, 0xc6, 0x1a, 0xd0, 0x0e, 0xf8, 0x67, 0xf4, 0x2a, 0x94, 0x3f, 0xd1,
	0xf6, 0x9d, 0xc0, 0x76, 0xa8, 0xde, 0xa2, 0xd9, 0x0d, 0xb4, 0x03, 0x18, 0xcd, 0x43, 0xbe, 0xd5,
	0xf6, 0x5b, 0x5e, 0xc0, 0xbb, 0x7f, 0x0c, 0x7e, 0x27, 0x0e, 0x80, 0xae, 0x47, 0xf4, 0xa4, 0x75,
	0xe0, 0x3b, 0xbb, 0x7b, 0x3c, 0x8d, 0x60, 0x30, 0x74, 0x0c, 0x82, 0x6e, 0xc2, 0xa4, 0x65, 0x06,
	0xb8, 0x1e, 0x44, 0x77, 0x98, 0x18, 0x78, 0x66, 0xd4, 0xce, 0x53, 0x25, 0x02, 0xdb, 0xe2, 0x50,
	0xe8, 0x0a, 0x14, 0x49, 0x98, 0x68, 0x3d, 0xc0, 0x3c, 0x7f, 0xa0, 0xbf, 0xfe, 0x4d, 0x46, 0x6f,
	0xe1, 0x10, 0x59, 0x30, 0xbd, 0xe7, 0x60, 0xdf, 0xf4, 0xad, 0xbd, 0x83, 0x7a, 0x13, 0x9b, 0x6e,
	0xa4, 0x4f, 0xd3, 0x1c, 0x82, 0x4b, 0xfd, 0xd6, 0x93, 0xf2, 0x9a, 0x55, 0x0e, 0xba, 0x4e, 0x21,
	0x09, 0x95, 0x9e, 0xda, 0xeb, 0xfa, 0x15, 0xad, 0x40, 0xc5, 0xf2, 0x9a, 0x3c, 0x29, 0x45, 0x74,
	0xce, 0x50, 0x78, 0x4b, 0x19, 0x2a, 0x5a, 0x2d, 0x46, 0x3f, 0xea, 0x2e, 0xc6, 0x36, 0xb6, 0x59,
	0xaa, 0xc1, 0x60, 0x3c, 0x0c, 0xec, 0x2e, 0x81, 0x42, 0x5b, 0xcc, 0x04, 0x48, 0xda, 0x24, 0x46,
	0x08, 0x9e, 0x1f, 0xfc, 0xa6, 0x4b, 0x14, 0x60, 0xdd, 0xb3, 0x71, 0x07, 0x5d, 0xe0, 0x98, 0xd0,
	0x4b, 0x90, 0xa5, 0x9d, 0x17, 0xdf, 0xd1, 0xdf, 0x1f, 0x75, 0xdf, 0x0d, 0x9c, 0x5d, 0x17, 0xdb,
	0x6b, 0x6e, 0x68, 0x50, 0x08, 0xb4, 0x00, 0xb9, 0x1d, 0xa7, 0x11, 0x62, 0x9f, 0x25, 0x03, 0x7c,
	0x70, 0xf0, 0xe3, 0xcc, 0xdd, 0x24, 0x00, 0x06, 0x03, 0x44, 0xb7, 0x88, 0xfd, 0xa5, 0x85, 0xfd,
	0xf0, 0x80, 0xb5, 0xb0, 0xf8, 0xb0, 0x02, 0x92, 0x4d, 0x06, 0x62, 0x08, 0x60, 0x74, 0x97, 0xac,
	0x0d, 0x11, 0xcf, 0x68, 0x0f, 0x8b, 0x17, 0x15, 0xf0, 0xb0, 0x8b, 0x15, 0x4b, 0x29, 0x06, 0x47,
	0x52, 0xfb, 0x8d, 0x34, 0xe4, 0xe8, 0xb3, 0x8e, 0x48, 0x3d, 0x36, 0x49, 0x3f, 0x7c, 0xaa, 0xdf,
	0xd2, 0x74, 0x29, 0x85, 0x5d, 0x76, 0xf6, 0xac, 0xbe, 0x9d, 0xfd, 0x2e, 0x14, 0xa2, 0x3d, 0x32,
	0x43, 0xcf, 0x67, 0xa2, 0xcb, 0x87, 0x7a, 0xe7, 0x55, 0x46, 0x0b, 0xbe, 0xc1, 0x46, 0x77, 0x3c,
	0x8d, 0xc0, 0x81, 0xae, 0x75, 0x06, 0xa2, 0x0f, 0x78, 0x96, 0xd8, 0xf3, 0x49, 0xe3, 0xd1, 0xbf,
	0x94, 0x86, 0x02, 0x3f, 0x3e, 0x6f, 0xed, 0x9d, 0x25, 0x72, 0x97, 0xc3, 0x76, 0x74, 0x90, 0xdc,
	0xe5, 0x74, 0x1f, 0x84, 0x9c, 0xfe, 0x41, 0x58, 0x66, 0x31, 0x08, 0x74, 0xdf, 0x3e, 0xd0, 0x53,
	0x9e, 0x61, 0xbb, 0x73, 0xef, 0xa0, 0xd5, 0x49, 0xb2, 0x08, 0x74, 0xed, 0x07, 0x27, 0x61, 0xfa,
	0xd0, 0xbd, 0x7d, 0x6b, 0xef, 0xe4, 0x15, 0xc8, 0xdb, 0x4e, 0xd0, 0x6a, 0x98, 0x07, 0x8a, 0xf7,
	0x93, 0x0f, 0x47, 0xd7, 0x01, 0x6c, 0xb1, 0x88, 0x8a, 0x7b, 0x2a, 0x41, 0xa0, 0x6d, 0x72, 0x28,
	0x9c, 0x5d, 0x97, 0x1a, 0xe7, 0xf3, 0x03, 0xe2, 0x5c, 0xfb, 0x50, 0xde, 0xb9, 0xe5, 0x18, 0x8f,
	0x21, 0x23, 0x45, 0xdf, 0x24, 0xb1, 0x08, 0xaa, 0x67, 0x2c, 0x27, 0x9a, 0x80, 0xfd, 0xd2, 0x9f,
	0x77, 0x14, 0x8f, 0x83, 0x77, 0x7c, 0x7b, 0x1a, 0x4a, 0xd2, 0xeb, 0x8c, 0xc2, 0xe1, 0x1c, 0x5e,
	0xf3, 0x7d, 0x8e, 0x36, 0x85, 0x54, 0x6b, 0xf3, 0x42, 0x7a, 0x42, 0x0a, 0x42, 0x9f, 0x4b, 0x42,
	0xe8, 0xff, 0x53, 0x16, 0xaa, 0x5d, 0x5b, 0xfe, 0xd6, 0xa6, 0x12, 0x2e, 0x5f, 0x4e, 0xba, 0x05,
	0xb7, 0x8f, 0xe3, 0x12, 0xb1, 0xbe, 0x0b, 0x9d, 0x76, 0x37, 0xb6, 0x01, 0xff, 0xaf, 0xe8, 0x5a,
	0x70, 0x81, 0x3d, 0x73, 0x6a, 0xf0, 0x33, 0xaf, 0x9e, 0x11, 0x34, 0x2d, 0x67, 0x91, 0xb3, 0x30,
	0xc8, 0xda, 0x4f, 0x4f, 0xcc, 0xea, 0x19, 0x83, 0x8d, 0x3f, 0xd4, 0x23, 0x21, 0xad, 0xd9, 0x23,
	0xe1, 0x2a, 0xe4, 0x1d, 0x37, 0xc4, 0xbb, 0x22, 0xd0, 0xae, 0xa7, 0x98, 0xbe, 0x46, 0x87, 0xad,
	0x9e, 0x31, 0x38, 0x44, 0x04, 0xbc, 0x4d, 0x85, 0x77, 0xc5, 0xc8, 0xac, 0x08, 0x98, 0x41, 0x74,
	0xba, 0x48, 0x72, 0xfa, 0x2e, 0x12, 0xd1, 0xdd, 0x20, 0x61, 0x53, 0x63, 0xb1, 0xf1, 0xb3, 0xdf,
	0xfd, 0x34, 0x54, 0x3a, 0x12, 0x83, 0xc7, 0xc6, 0xb9, 0x71, 0xf4, 0x50, 0xd2, 0xe8, 0xa1, 0x9f,
	0x49, 0x75, 0x48, 0x19, 0xa0, 0xea, 0x5d, 0xfa, 0x66, 0x3d, 0x0f, 0xcb, 0x66, 0xc3, 0x74, 0xe3,
	0xaf, 0x9a, 0x21, 0x08, 0x56, 0xe8, 0xec, 0x3b, 0xe1, 0x81, 0xc4, 0xcd, 0x65, 0x31, 0x27, 0x84,
	0xc2, 0xb6, 0x19, 0x60, 0xbb, 0x2e, 0x52, 0x84, 0x4e, 0xb0, 0xc9, 0x7f, 0x9e, 0x4c, 0xb5, 0xe1,
	0xd2, 0x0a, 0x32, 0x7e, 0x58, 0xf7, 0x76, 0x58, 0x02, 0xd1, 0x09, 0x4e, 0x9a, 0x8b, 0x66, 0xda,
	0xd8, 0x41, 0xb7, 0x84, 0xd5, 0xb1, 0xd2, 0xdf, 0xc9, 0xb1, 0xb2, 0x8f, 0xdd, 0xb0, 0x8f, 0xbd,
	0x71, 0x1e, 0x0a, 0xae, 0x17, 0xd6, 0x6d, 0xcf, 0xc5, 0xcc, 0x80, 0x39, 0xd0, 0xda, 0x91, 0x77,
	0xbd, 0x70, 0xd9, 0x73, 0x31, 0xda, 0x80, 0x2a, 0x87, 0xe5, 0x61, 0xeb, 0x55, 0xcd, 0x16, 0x53,
	0x0c, 0x15, 0x8b, 0x59, 0x97, 0x93, 0x82, 0xa6, 0x34, 0x93, 0x71, 0xe4, 0xc4, 0xeb, 0x26, 0xb6,
	0x9d, 0x76, 0x73, 0x66, 0x5a, 0x0f, 0x05, 0x03, 0x43, 0x3f, 0x2c, 0x05, 0x9c, 0x29, 0xc7, 0x00,
	0xed, 0x9d, 0x7e, 0xa8, 0xd9, 0x77, 0xa7, 0xa1, 0xe8, 0x63, 0xcb, 0x69, 0x91, 0xe2, 0x45, 0xca,
	0xc1, 0x42, 0xbf, 0x34, 0x91, 0xb8, 0x83, 0xff, 0x29, 0xf7, 0xd4, 0x4b, 0xde, 0xba, 0x2d, 0x59,
	0x37, 0xbe, 0x24, 0xbb, 0x11, 0xef, 0x00, 0xf2, 0x20, 0x1b, 0x7a, 0x2d, 0xc7, 0x52, 0xaf, 0x35,
	0x9c, 0x94, 0x0a, 0xd0, 0x79, 0x3a, 0x62, 0x0d, 0xcf, 0xbf, 0x29, 0x62, 0x0d, 0x5f, 0x84, 0x4c,
	0x10, 0x1d, 0xd6, 0x27, 0x54, 0x1d, 0x13, 0xd1, 0x68, 0x74, 0x0d, 0x0a, 0x3e, 0xb6, 0xb0, 0xb3,
	0x4f, 0x1a, 0x5f, 0xab, 0x41, 0x0a, 0x08, 0xf4, 0xeb, 0x13, 0x90, 0x0b, 0xb0, 0x6b, 0x63, 0x5f,
	0xbd, 0xd3, 0xf5, 0xf7, 0x8d, 0xef, 0x48, 0xaf, 0x8e, 0x95, 0x6c, 0x2d, 0xd1, 0x2a, 0x94, 0x28,
	0xcd, 0xa7, 0xe5, 0x1a, 0xdf, 0xa6, 0x47, 0x6b, 0x81, 0xc2, 0x92, 0x6a, 0x8d, 0x5f, 0x22, 0x85,
	0xc5, 0x08, 0xaa, 0xd8, 0xd7, 0xae, 0x1c, 0x2a, 0x76, 0xea, 0xbe, 0x76, 0xa3, 0x4a, 0x1f, 0x36,
	0x8e, 0x70, 0xa3, 0xd5, 0x91, 0x1a, 0x9e, 0x69, 0xb3, 0xd8, 0xab, 0xde, 0xd5, 0x91, 0x64, 0x59,
	0x7d, 0x6e, 0x93, 0x02, 0x19, 0x1c, 0x5a, 0x44, 0x70, 0x3d, 0xa5, 0x19, 0xc1, 0xf5, 0xb3, 0x34,
	0x19, 0x8f, 0xe0, 0x18, 0x01, 0xdd, 0xf9, 0x0f, 0xc5, 0xfe, 0x93, 0xcc, 0x80, 0x56, 0x4d, 0x47,
	0xad, 0xe7, 0x1c, 0xf3, 0xa5, 0x74, 0xa9, 0xbb, 0x1c, 0x67, 0xed, 0x7b, 0x27, 0x20, 0xcf, 0x86,
	0x0c, 0xdd, 0xa8, 0xaf, 0xb3, 0xd1, 0xde, 0xc4, 0x71, 0x34, 0xda, 0x4b, 0x9f, 0x6a, 0xa3, 0xbd,
	0xa2, 0x58, 0xeb, 0x84, 0x29, 0x2d, 0xf2, 0x0e, 0xcc, 0x7e, 0xc7, 0x7b, 0xe1, 0xdc, 0x51, 0x85,
	0xaa, 0xc6, 0x6a, 0xe9, 0x58, 0x2d, 0x4d, 0xaa, 0x96, 0xca, 0x4a, 0x1d, 0x9c, 0x9a, 0x52, 0xf7,
	0xe9, 0x54, 0x24, 0x74, 0xb4, 0x1a, 0xa6, 0x85, 0x03, 0x75, 0x5d, 0xf2, 0x38, 0x6a, 0xba, 0x89,
	0x69, 0xd1, 0x3a, 0x4c, 0xed, 0x46, 0x42, 0x66, 0x5d, 0x5a, 0xc3, 0xb2, 0x72, 0x20, 0x4d, 0x95,
	0xc0, 0xc6, 0x3f, 0xa0, 0xb5, 0x2e, 0x9d, 0xf1, 0x83, 0xbd, 0xdf, 0x87, 0x3c, 0x49, 0xdf, 0x28,
	0x95, 0x58, 0x51, 0x9b, 0x4c, 0xaa, 0xa8, 0x11, 0x9f, 0xb2, 0xe3, 0xf9, 0x4e, 0x78, 0x30, 0xa8,
	0xad, 0x89, 0xc1, 0x0b, 0x80, 0xd2, 0xe1, 0xf4, 0xe2, 0x71, 0x60, 0x49, 0xe3, 0x9b, 0x1a, 0x5e,
	0xe3, 0x9b, 0xfe, 0x1a, 0xd6, 0xf8, 0x7e, 0xb6, 0x43, 0xe3, 0x43, 0xaa, 0xa7, 0xf2, 0xd3, 0xe9,
	0xb1, 0x34, 0x7b, 0x6c, 0x1a, 0x9f, 0x66, 0x5a, 0x2d, 0xeb, 0x36, 0x75, 0xa4, 0x9e, 0x78, 0xf6,
	0x31, 0xe8, 0x89, 0xe7, 0xde, 0x14, 0x7a, 0xe2, 0xdd, 0x58, 0xa2, 0x3e, 0x3f, 0xc8, 0xd3, 0x77,
	0x98, 0x84, 0x1e, 0x16, 0xac, 0xeb, 0x00, 0x9e, 0x65, 0xb5, 0x7d, 0x2a, 0x61, 0x3d, 0x31, 0x20,
	0x7a, 0xf9, 0x28, 0x94, 0x1b, 0x02, 0x5c, 0xe4, 0xb9, 0x49, 0x28, 0xd1, 0x02, 0x94, 0xcc, 0x76,
	0xb8, 0xe7, 0xf9, 0x94, 0x4f, 0xa9, 0x6a, 0xa9, 0xc0, 0x81, 0x36, 0xdc, 0xb1, 0x9e, 0x7a, 0x32,
	0x7a, 0xea, 0xbd, 0x88, 0x64, 0x92, 0x3d, 0xc4, 0x3e, 0x0b, 0x5d, 0xbb, 0xa4, 0xb5, 0xf3, 0x06,
	0x87, 0x36, 0x62, 0x44, 0xdd, 0xda, 0x6f, 0xed, 0x98, 0xb5, 0xdf, 0xb7, 0xbf, 0x89, 0xb4, 0xdf,
	0xa4, 0x4a, 0xeb, 0xdf, 0x1b, 0x2d, 0xa5, 0xd5, 0xee, 0x56, 0x5a, 0xaf, 0x25, 0x21, 0x59, 0x63,
	0xdd, 0x35, 0x91, 0xee, 0x5a, 0xfb, 0xde, 0x14, 0x40, 0x4c, 0xa2, 0x1f, 0x67, 0x12, 0x5b, 0x59,
	0x66, 0x35, 0xb5, 0x1f, 0xcd, 0x42, 0x51, 0x10, 0x90, 0x51, 0x38, 0xe6, 0xbf, 0x39, 0x01, 0x59,
	0x73, 0x37, 0x3e, 0xe5, 0x0a, 0x7b, 0xfd, 0x03, 0x13, 0x52, 0x32, 0x7e, 0x72, 0x3e, 0x70, 0xca,
	0x0c, 0x6b, 0x08, 0x81, 0x52, 0xb7, 0xb9, 0x0a, 0x5d, 0x50, 0xf4, 0xad, 0x50, 0xf6, 0xdc, 0xfa,
	0x36, 0xde, 0x33, 0x1b, 0x3b, 0x75, 0x6f, 0x67, 0x90, 0x1d, 0xe1, 0x78, 0x9a, 0x19, 0x80, 0xe7,
	0x2e, 0x92, 0x19, 0x37, 0x76, 0xe6, 0x57, 0x25, 0x03, 0xd0, 0x50, 0x3a, 0xec, 0xec, 0xaf, 0x54,
	0xe1, 0xfc, 0x92, 0xd7, 0x6c, 0x99, 0x3e, 0x49, 0x51, 0x95, 0x02, 0x00, 0xc7, 0x86, 0xa0, 0xb7,
	0xa4, 0x21, 0xe8, 0xa2, 0x6a, 0xf2, 0x90, 0x30, 0x35, 0x90, 0x24, 0xa2, 0x79, 0x96, 0xc6, 0x03,
	0x5a, 0x91, 0x65, 0x5d, 0xe9, 0x3c, 0xa5, 0x64, 0xe9, 0x3c, 0xe5, 0x93, 0x48, 0xe7, 0xa9, 0x0c,
	0x93, 0xce, 0x33, 0x99, 0x3c, 0x9d, 0xa7, 0x3a, 0x44, 0x3a, 0xcf, 0xd4, 0x71, 0xa4, 0xf3, 0x4c,
	0x27, 0x49, 0xe7, 0x91, 0x52, 0x67, 0x90, 0x6e, 0xea, 0x4c, 0x57, 0x2a, 0xd0, 0xd9, 0x63, 0x4a,
	0x05, 0x3a, 0x37, 0x4c, 0x2a, 0xd0, 0x2d, 0x16, 0x60, 0x77, 0x7e, 0x40, 0x13, 0xdf, 0x98, 0x72,
	0x1e, 0x0e, 0xae, 0x26, 0x51, 0x77, 0x37, 0x22, 0x55, 0xd1, 0xf4, 0xad, 0x3d, 0xa6, 0xcb, 0x2a,
	0xd7, 0x15, 0x63, 0x60, 0xc8, 0x20, 0x7d, 0x38, 0x08, 0xe5, 0x60, 0xd5, 0x2d, 0x2e, 0x29, 0x3c,
	0x8d, 0x14, 0x60, 0x28, 0xe8, 0x8e, 0xc0, 0x53, 0xfb, 0x9e, 0x34, 0x14, 0xf8, 0xcf, 0xa3, 0x20,
	0xea, 0x2c, 0x77, 0x84, 0x70, 0x7e, 0xa0, 0x37, 0x1f, 0xa6, 0xaf, 0xdc, 0x63, 0xab, 0x5e, 0x84,
	0x6c, 0xcb, 0xf4, 0x4d, 0x9e, 0xad, 0x3f, 0x90, 0x0c, 0x91, 0xc1, 0x68, 0x19, 0x2a, 0xb6, 0x67,
	0xb5, 0x09, 0x01, 0xd0, 0x88, 0xf9, 0xee, 0x04, 0x9a, 0x5f, 0x93, 0x18, 0xfa, 0xcb, 0x1a, 0x0c,
	0xfd, 0xf0, 0x7e, 0xcf, 0xfe, 0xdc, 0x2c, 0x94, 0x96, 0xe2, 0x6c, 0xa9, 0x31, 0x1f, 0x1f, 0x3b,
	0x74, 0x12, 0x16, 0xfb, 0x94, 0x58, 0x2c, 0x0c, 0xe8, 0x25, 0x14, 0x9f, 0xb7, 0xbe, 0x2c, 0x96,
	0xa6, 0xab, 0x94, 0x12, 0xd6, 0xd4, 0x20, 0xa5, 0x33, 0x97, 0xa0, 0x64, 0x35, 0xcc, 0x20, 0x60,
	0xaa, 0x74, 0x59, 0x2f, 0x8c, 0x2d, 0x4b, 0x60, 0xd1, 0x41, 0x82, 0x42, 0x65, 0x89, 0x8a, 0x35,
	0xc6, 0xee, 0x2a, 0xee, 0x19, 0xe8, 0x68, 0xf8, 0xad, 0x5c, 0x77, 0xec, 0x38, 0x1a, 0x7e, 0x5f,
	0x63, 0xc2, 0x49, 0x55, 0x4d, 0x38, 0x89, 0xd7, 0x9d, 0x08, 0x29, 0x7f, 0x7a, 0x02, 0x72, 0xd4,
	0x06, 0xca, 0xc4, 0x0c, 0x85, 0xa7, 0xfe, 0x6a, 0xea, 0x58, 0xf4, 0xc9, 0x24, 0x46, 0xd3, 0x53,
	0xd4, 0x24, 0x0d, 0xb6, 0x2e, 0xe8, 0x1a, 0x97, 0x63, 0xa7, 0xf5, 0xd2, 0x2b, 0xa8, 0x3c, 0x6b,
	0x41, 0xd5, 0xf2, 0xdc, 0x1d, 0x7a, 0xfd, 0xcc, 0x86, 0x13, 0x1e, 0x30, 0x51, 0xea, 0xa5, 0x3e,
	0x24, 0x49, 0x1e, 0xbe, 0x14, 0x1d, 0x6d, 0x67, 0x87, 0x89, 0xba, 0x84, 0x42, 0x76, 0x63, 0x44,
	0xab, 0x50, 0x30, 0xc3, 0x90, 0x9a, 0x58, 0xa9, 0xa0, 0xf5, 0x11, 0x85, 0x3b, 0x3d, 0xb7, 0xc0,
	0x60, 0x0c, 0x01, 0x8d, 0x3e, 0x05, 0x45, 0xab, 0x1d, 0x84, 0x9e, 0xed, 0x98, 0xae, 0xba, 0xaf,
	0x62, 0x18, 0x05, 0x38, 0x9e, 0x0f, 0xdd, 0x01, 0xf0, 0xc9, 0x16, 0x04, 0xf5, 0xd0, 0x63, 0x8e,
	0x07, 0x15, 0xe2, 0x34, 0x47, 0x37, 0x2e, 0xb8, 0xe7, 0x19, 0x45, 0x9f, 0x7f, 0x44, 0x37, 0x20,
	0x8b, 0xf7, 0x69, 0xb0, 0xdb, 0x00, 0x16, 0x10, 0x23, 0x22, 0xd1, 0xba, 0x06, 0x85, 0x43, 0x2b,
	0x90, 0x0f, 0x30, 0x95, 0x3a, 0x9f, 0x1c, 0x94, 0x72, 0x1b, 0xa3, 0xd8, 0xa2, 0x20, 0x06, 0x87,
	0xad, 0xfd, 0x74, 0x06, 0x0a, 0x7c, 0xa5, 0x47, 0x41, 0x2c, 0x33, 0x20, 0xd3, 0xa4, 0x62, 0xd9,
	0x40, 0xb1, 0x95, 0xad, 0x09, 0x7d, 0x7b, 0xb2, 0xdd, 0x87, 0xf2, 0xab, 0x09, 0xae, 0x48, 0xc3,
	0x22, 0xa6, 0xc2, 0xac, 0xaa, 0x86, 0x15, 0x8d, 0x46, 0x5f, 0x49, 0x11, 0xd9, 0x2e, 0x3c, 0x50,
	0xaf, 0xcd, 0xfb, 0x23, 0xa9, 0xc7, 0xe1, 0x42, 0x49, 0x76, 0x33, 0xe8, 0xbb, 0xd5, 0x7e, 0x23,
	0x03, 0x45, 0x71, 0xc0, 0x47, 0xe1, 0x00, 0x6d, 0x76, 0xc8, 0xf5, 0x3d, 0x3d, 0x8b, 0xcb, 0x4c,
	0x94, 0x26, 0xef, 0xee, 0x78, 0x6e, 0xb0, 0xe7, 0xb4, 0x7a, 0xc8, 0xf8, 0x1f, 0x87, 0x5c, 0x68,
	0xfa, 0xbb, 0x98, 0x8b, 0x8a, 0x2f, 0x6a, 0x11, 0x8d, 0xb9, 0x7b, 0x04, 0xb6, 0xcb, 0xe4, 0xcf,
	0x30, 0xd6, 0xbe, 0x9c, 0x82, 0x1c, 0x1d, 0x80, 0x96, 0x3b, 0x84, 0xaf, 0x94, 0xaa, 0xf0, 0xb5,
	0x7a, 0xa6, 0x43, 0xfc, 0xfa, 0xe6, 0x44, 0x25, 0x8d, 0x5e, 0xd2, 0xf3, 0x18, 0x49, 0x2f, 0xda,
	0x69, 0xb3, 0x2f, 0xf0, 0xa5, 0xaa, 0xfd, 0x78, 0x1a, 0xb2, 0x84, 0xde, 0x8d, 0x48, 0xff, 0x00,
	0x2b, 0x26, 0x4a, 0x9a, 0x35, 0x72, 0x2f, 0x09, 0x67, 0x43, 0x56, 0xc5, 0xd9, 0xc0, 0x5d, 0x0d,
	0xe8, 0x0d, 0xd1, 0xb8, 0x26, 0x77, 0xe2, 0x79, 0x27, 0xac, 0xa3, 0xcd, 0x7f, 0xce, 0x42, 0x9e,
	0x71, 0x98, 0x51, 0xd8, 0x36, 0x61, 0x23, 0xcc, 0xe8, 0xd8, 0x08, 0xf9, 0x66, 0x67, 0x93, 0x14,
	0x44, 0xbe, 0xd8, 0x51, 0xa4, 0x5f, 0x59, 0xa9, 0xbc, 0xc2, 0xb8, 0x5e, 0x7e, 0x80, 0x26, 0xeb,
	0x04, 0xa2, 0x86, 0x08, 0xe3, 0x6d, 0x37, 0x01, 0x3c, 0xdf, 0xc6, 0x3e, 0xb6, 0xeb, 0xdb, 0x07,
	0xac, 0xb5, 0x83, 0x7a, 0x8b, 0x5e, 0x06, 0xba, 0x78, 0x80, 0x3c, 0xc8, 0x62, 0x37, 0xf4, 0x0f,
	0x58, 0x18, 0xdf, 0x49, 0x86, 0xad, 0x90, 0x79, 0xd0, 0x6d, 0x28, 0xe3, 0x66, 0x2b, 0x3c, 0xe0,
	0xb9, 0x45, 0xa0, 0xf7, 0xe8, 0x25, 0x02, 0xcc, 0x32, 0x8b, 0x24, 0x59, 0xaa, 0x94, 0x5c, 0x96,
	0x9a, 0xbf, 0x21, 0x19, 0x54, 0x92, 0xd0, 0xc2, 0xd9, 0xef, 0x7a, 0x1f, 0x00, 0x7b, 0xc0, 0x75,
	0xb3, 0x35, 0xb6, 0xa2, 0x8c, 0x4b, 0xa9, 0x8d, 0x4b, 0xa9, 0x8d, 0x4b, 0xa9, 0x8d, 0x4b, 0xa9,
	0x7d, 0xed, 0x97, 0x52, 0x5b, 0x83, 0x1c, 0xf3, 0x97, 0xcc, 0xf4, 0x8f, 0x9e, 0x8e, 0xc9, 0xfb,
	0xdc, 0x16, 0x01, 0x10, 0x01, 0x83, 0x0c, 0x41, 0x84, 0x8a, 0xa9, 0x0b, 0x6f, 0x53, 0x46, 0xc5,
	0x74, 0x84, 0x5c, 0xa7, 0x76, 0x80, 0xae, 0x43, 0x96, 0x84, 0x79, 0xb3, 0x08, 0xb4, 0x0f, 0x28,
	0x60, 0xa2, 0x31, 0xc5, 0x14, 0xac, 0xf6, 0xa5, 0x14, 0xe4, 0xe8, 0x53, 0xa2, 0x67, 0x69, 0x9d,
	0xa1, 0xd4, 0x40, 0xa2, 0xb4, 0x7a, 0x86, 0x56, 0x1a, 0x3a, 0x48, 0xa4, 0x48, 0x68, 0x0a, 0x05,
	0xaf, 0xb3, 0x42, 0x72, 0x87, 0xb4, 0x08, 0xe6, 0x74, 0xfa, 0x52, 0xac, 0x1e, 0xbd, 0xc9, 0x5e,
	0x80, 0xa9, 0x41, 0x3f, 0x71, 0x0e, 0xb2, 0x64, 0x4b, 0x46, 0x41, 0x9e, 0x7e, 0x41, 0x5c, 0x92,
	0xcc, 0x60, 0xde, 0xc6, 0xaf, 0xc3, 0x0a, 0x4c, 0xd2, 0x4f, 0x75, 0xce, 0xa1, 0xd4, 0xaa, 0x23,
	0x55, 0x28, 0xd4, 0xeb, 0x8c, 0x4f, 0xbd, 0x20, 0x6e, 0x55, 0x4e, 0x61, 0x6e, 0x76, 0x7f, 0x56,
	0x60, 0x92, 0x7e, 0x12, 0x73, 0xab, 0x75, 0x37, 0xaa, 0x50, 0x28, 0x3e, 0xf7, 0x47, 0x21, 0x8f,
	0x1b, 0xb4, 0x3b, 0x52, 0x61, 0x90, 0x59, 0xaa, 0xf3, 0x22, 0x32, 0x1a, 0xb1, 0x42, 0xa1, 0xe3,
	0xb2, 0x7f, 0x0c, 0x1d, 0x5a, 0x87, 0x42, 0xdb, 0x6d, 0x9a, 0xad, 0x16, 0xb6, 0x99, 0xbc, 0xf0,
	0xbc, 0x32, 0xea, 0xfb, 0x0c, 0xd0, 0x10, 0x28, 0x6a, 0xdf, 0x55, 0x86, 0x4a, 0xc7, 0x8c, 0xa3,
	0x70, 0xea, 0x9e, 0x53, 0xaf, 0xb5, 0x33, 0x74, 0x25, 0xae, 0x6f, 0x90, 0x4e, 0xd9, 0x80, 0x1a,
	0x57, 0xfd, 0x36, 0x9a, 0xd1, 0x73, 0xf6, 0x4d, 0x18, 0x7b, 0xfe, 0xef, 0x02, 0x54, 0x3a, 0xfe,
	0x32, 0xde, 0x1e, 0xbd, 0xed, 0xd9, 0x82, 0x12, 0x7e, 0xa3, 0xed, 0xec, 0x9b, 0x0d, 0x42, 0xd4,
	0x73, 0xaa, 0x37, 0x66, 0x25, 0x06, 0x22, 0xcf, 0x21, 0x63, 0x89, 0x1e, 0xc7, 0xf2, 0x9a, 0x1a,
	0xbd, 0xcf, 0xf8, 0x70, 0xd4, 0x02, 0xb0, 0x71, 0x0b, 0xbb, 0x76, 0x50, 0x17, 0x2a, 0xc3, 0x6b,
	0xc7, 0x71, 0x62, 0xe6, 0x36, 0xc2, 0x3d, 0xec, 0xf3, 0xe3, 0x53, 0x64, 0x93, 0x6c, 0xb8, 0xe8,
	0x01, 0x69, 0x1f, 0x63, 0xb7, 0x2d, 0x5e, 0x23, 0xed, 0x04, 0xa6, 0xe3, 0x33, 0xd4, 0x7e, 0x3a,
	0x0d, 0x65, 0xf9, 0x2f, 0xa3, 0x70, 0x5a, 0x6f, 0x48, 0x65, 0xec, 0x32, 0xea, 0xe1, 0x6a, 0x71,
	0x95, 0xba, 0x88, 0x07, 0x92, 0xea, 0x4c, 0x2a, 0x25, 0x1b, 0xd9, 0x50, 0x34, 0xcf, 0xee, 0x88,
	0x5e, 0x09, 0xb5, 0x43, 0xb7, 0x25, 0xaf, 0x75, 0x5b, 0xa2, 0xfd, 0x2b, 0x70, 0x26, 0x31, 0x0a,
	0x7b, 0xb7, 0x25, 0x5c, 0x43, 0x03, 0x12, 0x7c, 0xf8, 0xc9, 0x27, 0x07, 0x9f, 0xaf, 0x40, 0x0f,
	0xdf, 0xd0, 0x73, 0x1d, 0xd6, 0x3e, 0x4d, 0xf2, 0x95, 0xd3, 0x23, 0x5f, 0xcc, 0x30, 0x90, 0x57,
	0x33, 0x0c, 0x24, 0x2d, 0x1f, 0xc6, 0xdf, 0x7e, 0xf6, 0xbb, 0x9e, 0x86, 0xa2, 0x48, 0x09, 0x19,
	0x1b, 0xa3, 0xc6, 0x21, 0x3d, 0x49, 0x73, 0xb4, 0x4d, 0xa8, 0x5a, 0xac, 0x6f, 0x44, 0xbd, 0x23,
	0xb6, 0xe7, 0x4a, 0x9f, 0x55, 0xa2, 0xc7, 0x8e, 0xf7, 0x9b, 0x88, 0x0d, 0x39, 0xe4, 0x1f, 0x63,
	0xd2, 0xea, 0xf8, 0x03, 0xda, 0x83, 0xb3, 0xfb, 0xd8, 0x17, 0x81, 0x08, 0x7c, 0x9a, 0xd2, 0xc0,
	0xab, 0x4e, 0xa7, 0x79, 0x5d, 0x82, 0x8d, 0xa7, 0x32, 0xd0, 0xfe, 0xa1, 0xdf, 0x3b, 0x92, 0x9b,
	0xcb, 0x49, 0x93, 0x9b, 0x97, 0xa0, 0x10, 0xe0, 0x08, 0x79, 0x78, 0x30, 0xa8, 0x44, 0xd7, 0x21,
	0x24, 0x1c, 0x50, 0x38, 0x1a, 0x26, 0x93, 0x38, 0x1a, 0x96, 0xa1, 0xb8, 0xed, 0xd9, 0x07, 0xf5,
	0xc0, 0x21, 0xd1, 0x39, 0x7a, 0xef, 0x11, 0x41, 0x6e, 0x39, 0x21, 0xee, 0xe8, 0xbe, 0x38, 0xf5,
	0xa6, 0xea, 0xbe, 0x38, 0xfd, 0xa6, 0xc8, 0x74, 0x5d, 0x81, 0xac, 0xe7, 0x06, 0x98, 0x57, 0x1a,
	0xfb, 0xba, 0x81, 0x07, 0x79, 0x6e, 0x23, 0x1a, 0x2e, 0x0c, 0x41, 0x14, 0x1a, 0xbd, 0x06, 0x45,
	0x73, 0xdb, 0x0c, 0xa9, 0x0a, 0x7a, 0x76, 0x50, 0x78, 0x31, 0x47, 0xb5, 0xc0, 0x41, 0xe2, 0xde,
	0x8d, 0x02, 0x0b, 0x5a, 0x81, 0x8a, 0x19, 0x04, 0xd8, 0x0f, 0xb1, 0x5d, 0x27, 0x26, 0xd0, 0x73,
	0x8a, 0x26, 0xd0, 0x32, 0x07, 0x8b, 0x7e, 0x41, 0xbf, 0x9b, 0xa2, 0xdd, 0x1c, 0xfd, 0x10, 0xfb,
	0xea, 0x55, 0xaa, 0x7e, 0x74, 0xd8, 0xe8, 0xae, 0xd3, 0x8c, 0xd4, 0x12, 0xef, 0x87, 0x5e, 0x86,
	0x6c, 0x10, 0x46, 0xdc, 0xe9, 0x09, 0xd5, 0xdd, 0xdc, 0x8a, 0x86, 0x1b, 0x14, 0x0a, 0xdd, 0x84,
	0x02, 0xde, 0x8f, 0xc8, 0xaa, 0x88, 0xca, 0xfe, 0xd0, 0x60, 0x0c, 0x2b, 0x0c, 0xc2, 0x10, 0xb0,
	0x22, 0x25, 0x73, 0x46, 0x33, 0x25, 0xf3, 0x8b, 0x13, 0x90, 0x25, 0xc7, 0x6b, 0xf8, 0x04, 0xba,
	0x67, 0x21, 0x1d, 0xad, 0xc3, 0x44, 0x7f, 0x1e, 0xbf, 0xb0, 0x1b, 0x41, 0x45, 0x23, 0xa5, 0x8c,
	0xbb, 0xb4, 0x5e, 0xc6, 0x1d, 0xba, 0x08, 0x59, 0xd2, 0x61, 0x9a, 0x89, 0x04, 0x3d, 0xdb, 0xd6,
	0x1b, 0xd1, 0xa0, 0xd5, 0x33, 0x06, 0x1d, 0x7d, 0x28, 0x7d, 0x32, 0xab, 0x97, 0x3e, 0xb9, 0x98,
	0x67, 0x37, 0xb7, 0xf6, 0x1f, 0x27, 0xa0, 0x28, 0x6e, 0xd2, 0x63, 0x58, 0x39, 0xa9, 0x96, 0x6d,
	0x5a, 0xbb, 0x96, 0x6d, 0xbc, 0xec, 0x99, 0xa4, 0xcb, 0x9e, 0x1d, 0x6a, 0xd9, 0x73, 0x9a, 0xcb,
	0x5e, 0x92, 0x28, 0x5d, 0xed, 0xbb, 0x32, 0x90, 0x25, 0x37, 0x68, 0x14, 0xb4, 0x97, 0x85, 0xb8,
	0x55, 0xa9, 0x5e, 0x7f, 0xc0, 0xb8, 0x67, 0xe9, 0xef, 0xa7, 0x00, 0x4c, 0xd1, 0xbd, 0x4e, 0xbd,
	0x41, 0xe0, 0x5f, 0x4f, 0x0d, 0xdb, 0xc2, 0xf6, 0x18, 0x7a, 0xf4, 0x25, 0x4a, 0x47, 0x97, 0x5e,
	0xb7, 0xf6, 0x5f, 0x26, 0xa0, 0xc0, 0xa9, 0xe1, 0x5b, 0x3e, 0xa8, 0x28, 0x0e, 0x0e, 0xca, 0x9e,
	0x52, 0x70, 0xd0, 0xfc, 0xcb, 0x92, 0x3a, 0xaa, 0x5f, 0x92, 0x60, 0xf6, 0x0b, 0xcf, 0x92, 0xdc,
	0x76, 0x52, 0xf2, 0x71, 0xac, 0x8b, 0x8e, 0x75, 0xd1, 0x84, 0xe9, 0x25, 0xab, 0x5d, 0xe9, 0x25,
	0xfd, 0x7c, 0xa2, 0x01, 0x2b, 0x8e, 0x8c, 0x07, 0x56, 0xb9, 0x2a, 0x25, 0x55, 0x04, 0x1f, 0x41,
	0xbe, 0x45, 0x45, 0x4c, 0x16, 0x41, 0xa1, 0x70, 0x11, 0xaf, 0x0e, 0xa1, 0x3f, 0x19, 0x7c, 0x3a,
	0x29, 0xac, 0xb0, 0xa2, 0x15, 0x56, 0xf8, 0xb2, 0x2c, 0xc1, 0xa8, 0xe6, 0x9c, 0xc6, 0xf2, 0xcb,
	0x17, 0x27, 0x60, 0xca, 0xa2, 0x4b, 0x1b, 0x71, 0x79, 0x1a, 0x20, 0x5d, 0x55, 0x4f, 0xee, 0x78,
	0x4b, 0x54, 0xa7, 0xa9, 0xc6, 0x2b, 0xb4, 0x19, 0x2d, 0x10, 0xba, 0x0a, 0x59, 0xd3, 0x0a, 0x45,
	0x1a, 0xcc, 0xfb, 0x06, 0x1c, 0xda, 0xb9, 0x85, 0x68, 0xb0, 0x41, 0x61, 0xd0, 0x0d, 0xd1, 0x61,
	0x5b, 0xb7, 0xe4, 0x35, 0x6b, 0x1d, 0xfd, 0xe9, 0x14, 0x94, 0x3d, 0x69, 0x25, 0xd5, 0x6b, 0x8b,
	0x0d, 0x93, 0x7a, 0xd1, 0x31, 0x25, 0xba, 0x29, 0x7c, 0xc7, 0x54, 0x7f, 0x7d, 0xff, 0xa0, 0x25,
	0xe8, 0x11, 0x5d, 0x71, 0x1d, 0x72, 0x2d, 0xaf, 0xe1, 0x58, 0x07, 0x2c, 0x66, 0x65, 0x20, 0x9e,
	0x4d, 0x32, 0xda, 0x60, 0x50, 0xe8, 0x1a, 0x94, 0xe8, 0x27, 0xc2, 0x1a, 0x98, 0xca, 0xda, 0x97,
	0x33, 0x00, 0x1d, 0x1f, 0xf1, 0x05, 0xe2, 0xcc, 0xc6, 0x56, 0xdb, 0x77, 0xc2, 0x83, 0x7a, 0xc3,
	0xdc, 0xc6, 0x0d, 0x96, 0xfe, 0x31, 0xa8, 0x93, 0x4a, 0x85, 0x43, 0xdd, 0x89, 0x80, 0xd0, 0x95,
	0x38, 0xd2, 0xe5, 0x49, 0x25, 0x78, 0x11, 0xe7, 0x72, 0x03, 0x4a, 0xb6, 0x19, 0x9a, 0x75, 0x76,
	0xf5, 0x67, 0x94, 0xae, 0x3e, 0x44, 0x20, 0xf4, 0x33, 0xba, 0x42, 0x22, 0x9e, 0x4c, 0x56, 0xd1,
	0xf7, 0xbd, 0x83, 0x56, 0x6f, 0xd9, 0x8c, 0xd8, 0x6a, 0x04, 0x11, 0xad, 0x3c, 0x7e, 0x44, 0xda,
	0xf3, 0xd4, 0xd4, 0x56, 0x7e, 0xe5, 0x11, 0x3d, 0x85, 0x14, 0xaa, 0xf6, 0xbf, 0x67, 0x21, 0x4b,
	0xce, 0xf5, 0x88, 0xb4, 0xfa, 0xf6, 0xbd, 0x46, 0xf2, 0x56, 0xdf, 0x11, 0x30, 0xfa, 0xc5, 0xb4,
	0x1c, 0xa2, 0xa2, 0x5c, 0x10, 0xe4, 0x3b, 0xd3, 0x12, 0x03, 0x49, 0x92, 0xe7, 0x76, 0x1a, 0x25,
	0xf1, 0xde, 0x12, 0x74, 0x3e, 0xde, 0xbd, 0xda, 0xaf, 0xa5, 0x45, 0xa8, 0x55, 0x67, 0xe5, 0xa5,
	0x54, 0xc2, 0xca, 0x4b, 0x9d, 0xe9, 0x20, 0x13, 0x09, 0xd3, 0x41, 0xfe, 0xca, 0x44, 0xa2, 0x02,
	0x4e, 0xff, 0x52, 0x53, 0x3a, 0x61, 0x57, 0x9e, 0x00, 0xbd, 0xa4, 0x7c, 0x22, 0x45, 0x0a, 0x0e,
	0x9b, 0x56, 0xf3, 0xa4, 0x79, 0x6e, 0x18, 0xed, 0xe3, 0x31, 0xf4, 0xb0, 0xef, 0x15, 0x7e, 0xf6,
	0x57, 0x27, 0x20, 0x47, 0xf9, 0xc7, 0x28, 0xd0, 0xac, 0x97, 0xa0, 0x48, 0x93, 0x4e, 0x1d, 0x25,
	0xe7, 0xb7, 0x11, 0x8f, 0xd6, 0xec, 0x52, 0x58, 0xfb, 0xfe, 0x34, 0x64, 0x22, 0xce, 0x31, 0x1a,
	0xf9, 0x64, 0x79, 0xde, 0xd8, 0x96, 0xae, 0xd9, 0xdc, 0x00, 0xbe, 0x17, 0xbd, 0xb8, 0xd4, 0xd0,
	0x36, 0x0e, 0xfa, 0x62, 0x68, 0xd0, 0x1f, 0x4e, 0x44, 0xf5, 0x87, 0x4b, 0x25, 0x97, 0x28, 0xd5,
	0x3f, 0xaa, 0x42, 0x8e, 0xb2, 0xe6, 0x51, 0xd8, 0x9e, 0x35, 0x56, 0x1f, 0x20, 0x33, 0xa8, 0xd8,
	0x00, 0xd9, 0x1b, 0xfa, 0xde, 0x47, 0xf7, 0xb4, 0x4c, 0x9c, 0xa8, 0xb5, 0xca, 0x85, 0x7b, 0xaa,
	0xae, 0x5f, 0x50, 0x93, 0x8b, 0xd8, 0x7f, 0x3d, 0x24, 0xfd, 0x7c, 0x32, 0x49, 0xff, 0xb0, 0x7c,
	0x5a, 0x18, 0x52, 0x3e, 0x2d, 0xea, 0xc9, 0xa7, 0xf3, 0x9d, 0x95, 0x16, 0x40, 0x09, 0x9a, 0x15,
	0x58, 0xe0, 0x0d, 0xea, 0x4a, 0x4a, 0x40, 0xbc, 0x54, 0x4e, 0x87, 0x3c, 0x5c, 0xd6, 0x96, 0x87,
	0x57, 0x98, 0x3c, 0x5c, 0x21, 0x93, 0x3e, 0xaf, 0xb5, 0x77, 0xb1, 0x70, 0x5c, 0xfb, 0xe7, 0x59,
	0x28, 0x49, 0x1b, 0x3a, 0x16, 0x71, 0xc7, 0x22, 0xee, 0xc8, 0x89, 0xb8, 0x7f, 0x3a, 0x0d, 0x10,
	0x1f, 0xfc, 0x31, 0x6f, 0xff, 0xda, 0xe3, 0xed, 0xf3, 0x57, 0x25, 0x1b, 0xbd, 0xae, 0xf0, 0x3e,
	0xfb, 0xeb, 0xeb, 0x50, 0xe0, 0x42, 0xf5, 0xd8, 0x44, 0x3f, 0x36, 0xd1, 0x27, 0x35, 0xd1, 0xdf,
	0xee, 0x32, 0xd1, 0xf7, 0x13, 0x88, 0xc8, 0x61, 0xe3, 0x6b, 0x23, 0x45, 0x6e, 0x71, 0x23, 0xfd,
	0x15, 0xc8, 0x39, 0x41, 0xd0, 0xc6, 0x36, 0x0b, 0x05, 0x1b, 0x6c, 0xaa, 0x66, 0xe3, 0x23, 0x19,
	0xc6, 0x6c, 0xb5, 0x1a, 0x0e, 0x0e, 0x14, 0xa5, 0x02, 0x3e, 0x1c, 0x05, 0x72, 0xa1, 0xa7, 0x93,
	0xee, 0x48, 0xc2, 0x63, 0x9b, 0x44, 0xdb, 0x80, 0xc9, 0x53, 0x6a, 0x1b, 0xf0, 0x29, 0x59, 0x1b,
	0xac, 0x9e, 0x86, 0x41, 0x58, 0xd2, 0x27, 0xdf, 0x80, 0x9c, 0xed, 0x35, 0x4d, 0xc7, 0x55, 0xaf,
	0x0b, 0xa5, 0xf9, 0xba, 0x77, 0x3c, 0x56, 0xb3, 0x96, 0x4d, 0x84, 0xae, 0x32, 0x45, 0x61, 0x5a,
	0x33, 0xda, 0x8e, 0xa8, 0x06, 0x8b, 0x50, 0x08, 0xda, 0xdb, 0x75, 0x82, 0x00, 0xe9, 0x89, 0xe6,
	0xd1, 0x0e, 0x47, 0x0a, 0x87, 0x24, 0xdc, 0x9f, 0x4d, 0x26, 0xdc, 0xdf, 0x81, 0x0a, 0xfd, 0xc4,
	0x53, 0xe6, 0x75, 0xab, 0x55, 0x52, 0x68, 0x96, 0x33, 0x7f, 0x07, 0x2a, 0x36, 0xb6, 0x9c, 0xe8,
	0xd6, 0xd3, 0xf7, 0x3a, 0xaf, 0xb7, 0x30, 0x65, 0x0e, 0x4d, 0x5e, 0xee, 0x75, 0x40, 0xac, 0x58,
	0x77, 0xdd, 0xc6, 0xbe, 0xb3, 0x4f, 0xe8, 0xe5, 0xe0, 0x38, 0xa9, 0x4e, 0x94, 0xd3, 0x0c, 0xc5,
	0xb2, 0xc0, 0x70, 0x84, 0x42, 0xf3, 0x64, 0x12, 0x85, 0xe6, 0x1a, 0x2f, 0x6b, 0x3d, 0x33, 0xd0,
	0x74, 0x4d, 0x28, 0xd2, 0xdc, 0xc2, 0x2e, 0x29, 0xd5, 0x44, 0x4b, 0x37, 0x2f, 0x42, 0x2e, 0x70,
	0x76, 0x5d, 0xd2, 0x61, 0x60, 0x50, 0xd8, 0x16, 0x05, 0xdf, 0x22, 0x5d, 0xe7, 0x3d, 0xff, 0xc0,
	0x60, 0x90, 0xe8, 0x0e, 0x94, 0x88, 0x4a, 0x64, 0xd7, 0x9d, 0x10, 0x37, 0x99, 0x09, 0xfd, 0xc3,
	0x03, 0x11, 0x91, 0xfc, 0x42, 0x7b, 0x2d, 0xc4, 0x4d, 0x03, 0xf6, 0xc5, 0x67, 0xf4, 0x52, 0xc4,
	0xb9, 0xfc, 0x26, 0xeb, 0x24, 0xf0, 0xbe, 0x81, 0x68, 0xee, 0x61, 0xbf, 0x69, 0x10, 0x10, 0x74,
	0x1b, 0xf2, 0xdb, 0x8e, 0x4b, 0x7a, 0x7a, 0x3f, 0x35, 0xd0, 0x83, 0x4a, 0xa1, 0x17, 0xe9, 0x78,
	0xe1, 0x8b, 0xe1, 0x08, 0xd0, 0x3a, 0x14, 0x76, 0x7c, 0x07, 0xbb, 0x76, 0xe3, 0x60, 0xe6, 0xe9,
	0x81, 0x0a, 0x14, 0x45, 0x76, 0x93, 0x01, 0x70, 0x9e, 0x6c, 0x08, 0x14, 0x68, 0x19, 0xb2, 0x0d,
	0xbc, 0x6b, 0x36, 0x66, 0xde, 0x41, 0x70, 0xcd, 0x0d, 0xc4, 0x75, 0x27, 0x1a, 0x2d, 0x10, 0x51,
	0x60, 0x74, 0x0b, 0x32, 0xc4, 0xb5, 0xf3, 0x4e, 0x82, 0xe4, 0x85, 0x81, 0x48, 0x96, 0xbc, 0x66,
	0xab, 0x1d, 0x46, 0xe7, 0x50, 0x60, 0x22, 0x08, 0x6a, 0x7f, 0x23, 0x07, 0x59, 0x72, 0x0e, 0x46,
	0x41, 0xd4, 0xfd, 0xb1, 0x0c, 0xb7, 0x52, 0x28, 0x57, 0x76, 0xff, 0x77, 0xe9, 0x24, 0x62, 0x69,
	0x87, 0x59, 0xf6, 0x6b, 0x4d, 0x75, 0xe3, 0x5c, 0xe1, 0x2d, 0xd3, 0xfd, 0x48, 0x39, 0x50, 0x67,
	0xab, 0xbd, 0x1d, 0x84, 0xa6, 0x4b, 0xea, 0xd5, 0x13, 0x0b, 0xc6, 0x55, 0xa6, 0xfe, 0x67, 0x35,
	0xc3, 0x93, 0x22, 0xa0, 0xda, 0x7f, 0xca, 0x40, 0x51, 0xd0, 0xc0, 0x51, 0xb8, 0x3e, 0xf3, 0x1d,
	0x66, 0xc6, 0x01, 0xdc, 0xa7, 0xcb, 0xae, 0xf8, 0x43, 0x13, 0xbc, 0x90, 0x9c, 0xb2, 0x42, 0xf8,
	0xbb, 0x89, 0x8a, 0x60, 0xbe, 0x49, 0x4d, 0x0c, 0x74, 0x71, 0x22, 0xb5, 0x2a, 0x20, 0x47, 0xa6,
	0xed, 0xe3, 0x41, 0x25, 0xaf, 0xb6, 0xf8, 0x40, 0xb1, 0xd4, 0x31, 0x6c, 0xed, 0x6f, 0xe6, 0x01,
	0x62, 0xbe, 0x39, 0x1a, 0x45, 0x11, 0x73, 0x91, 0x76, 0x25, 0xdc, 0x36, 0x17, 0x34, 0xe4, 0x86,
	0xb9, 0x15, 0x02, 0x19, 0x07, 0x52, 0x50, 0x4c, 0x5d, 0x9a, 0x5e, 0x36, 0x91, 0xa6, 0x77, 0x0b,
	0x26, 0xf1, 0xce, 0x0e, 0xb6, 0x22, 0x51, 0x8d, 0x06, 0x14, 0xe5, 0x14, 0xb5, 0xb4, 0x8a, 0x80,
	0x23, 0x51, 0x45, 0x8b, 0x50, 0x78, 0xa3, 0x6d, 0xd2, 0x57, 0xcc, 0xf7, 0x8f, 0x0f, 0xd9, 0x72,
	0x9a, 0xad, 0x06, 0x7e, 0x8d, 0x8d, 0x36, 0x04, 0x1c, 0xba, 0x06, 0xd0, 0x76, 0x9d, 0xb0, 0xde,
	0xf2, 0x1d, 0x0b, 0xb3, 0x4a, 0x58, 0x3d, 0xc3, 0x96, 0xd7, 0x3d, 0x17, 0x1f, 0x18, 0xc5, 0x08,
	0x60, 0x33, 0x1a, 0x8f, 0x2e, 0x43, 0x6e, 0x87, 0xf2, 0xc7, 0x62, 0xff, 0x28, 0xeb, 0x65, 0x6c,
	0x39, 0x4d, 0xb3, 0x61, 0xb0, 0xe1, 0x11, 0x60, 0xcb, 0x73, 0xdc, 0x90, 0x6b, 0xbb, 0x83, 0x01,
	0xe9, 0x70, 0xf4, 0x2c, 0xa4, 0x5d, 0x1c, 0x32, 0xbd, 0x76, 0xc0, 0x83, 0x46, 0x23, 0x6b, 0x5f,
	0x49, 0x41, 0x8e, 0x6e, 0x26, 0xba, 0x07, 0x53, 0x16, 0x23, 0xbc, 0x75, 0x8b, 0x52, 0x5e, 0x76,
	0xc2, 0x55, 0x09, 0xf5, 0xea, 0x19, 0xa3, 0x6a, 0x75, 0xfe, 0x74, 0x3a, 0x15, 0x33, 0x8e, 0x6e,
	0xf6, 0x53, 0xe0, 0x27, 0xbc, 0xf6, 0x2f, 0x9e, 0x80, 0x4c, 0x24, 0xae, 0x8e, 0xc2, 0xbd, 0xed,
	0xbc, 0x63, 0x99, 0x84, 0xa5, 0x9d, 0xb8, 0x05, 0x24, 0x9b, 0xdc, 0x02, 0x92, 0xd3, 0xb3, 0x80,
	0x70, 0x5d, 0x39, 0x3f, 0xac, 0xae, 0x5c, 0xd0, 0x8e, 0x74, 0xa7, 0xba, 0xb2, 0xb0, 0x86, 0x14,
	0x4f, 0xc9, 0x1a, 0x12, 0x2b, 0xe7, 0x70, 0x4c, 0xca, 0x79, 0x69, 0x18, 0xe5, 0xfc, 0xb0, 0xda,
	0x5b, 0x4e, 0xa2, 0xf6, 0xae, 0x70, 0xb5, 0x97, 0xda, 0xb1, 0x9e, 0x55, 0xd2, 0x13, 0xc9, 0x3f,
	0x1d, 0xfa, 0xef, 0x05, 0x66, 0x27, 0x9d, 0x54, 0xab, 0x11, 0x46, 0x8c, 0xa4, 0xf7, 0x3b, 0xf5,
	0xdd, 0xea, 0xa0, 0x3e, 0x8f, 0xdd, 0x0f, 0xd0, 0x43, 0xf1, 0xbd, 0xca, 0x2b, 0x22, 0x4d, 0xe9,
	0x68, 0xbe, 0xac, 0x1c, 0xd2, 0x4f, 0xe5, 0xa0, 0x28, 0x5e, 0x6e, 0xac, 0xd4, 0x8d, 0x95, 0xba,
	0xb1, 0x52, 0xa7, 0xa3, 0xd4, 0xfd, 0x42, 0x1e, 0x26, 0x3b, 0xaf, 0xe6, 0x28, 0xdc, 0xa1, 0xaf,
	0xef, 0x92, 0xad, 0xaf, 0x26, 0xa1, 0x51, 0x63, 0x21, 0x7b, 0x2c, 0x64, 0xbf, 0x99, 0x84, 0xec,
	0xdf, 0x9a, 0x80, 0x3c, 0xb3, 0xea, 0x1e, 0x53, 0xb8, 0xea, 0x1f, 0xa4, 0x12, 0xbd, 0xd7, 0xdf,
	0x4c, 0x25, 0xae, 0x3c, 0x7e, 0x1c, 0xc1, 0xa6, 0xc7, 0x19, 0x36, 0x5a, 0x14, 0x86, 0xf5, 0xda,
	0xe7, 0xb3, 0x30, 0xd5, 0x6d, 0xe7, 0x1e, 0x05, 0x5a, 0x69, 0x76, 0x77, 0xc1, 0x7d, 0x49, 0xdb,
	0xdc, 0x3f, 0xa8, 0x05, 0xee, 0x6f, 0x49, 0x2d, 0x70, 0xc7, 0x27, 0xf3, 0xd8, 0x4e, 0x26, 0x5f,
	0xde, 0x3f, 0x9a, 0x85, 0x4a, 0x87, 0xd7, 0x64, 0x14, 0x8e, 0xe5, 0x37, 0x76, 0x1f, 0xcb, 0x4b,
	0x7a, 0x9e, 0xa3, 0xf1, 0x99, 0x7c, 0xac, 0x67, 0xf2, 0x07, 0x32, 0x80, 0x0e, 0x3b, 0xe1, 0x46,
	0xe1, 0x60, 0x5a, 0xdd, 0x07, 0xf3, 0x6a, 0x02, 0x6f, 0xe4, 0xa0, 0xd3, 0xf9, 0x4f, 0x53, 0xc7,
	0x7d, 0x3a, 0xbf, 0x3d, 0xd9, 0xe9, 0xbc, 0x31, 0xe4, 0x19, 0xeb, 0x75, 0x40, 0xe6, 0xaf, 0x49,
	0x51, 0x6d, 0xda, 0x2a, 0xeb, 0xec, 0xff, 0x39, 0x03, 0x85, 0x25, 0x6f, 0x1f, 0xfb, 0xd1, 0xa1,
	0x1a, 0x87, 0xb5, 0x8d, 0xc3, 0xda, 0x12, 0x56, 0x41, 0x7b, 0xb5, 0x2b, 0xac, 0xad, 0x67, 0x64,
	0xc1, 0x4d, 0xc7, 0x35, 0x5d, 0xcb, 0x31, 0x1b, 0x7d, 0xe2, 0xda, 0xae, 0x26, 0x6a, 0x6b, 0xc8,
	0x2c, 0xac, 0xff, 0x36, 0x05, 0x15, 0x96, 0xc4, 0xba, 0xe7, 0x35, 0x6c, 0xec, 0xab, 0xe7, 0x9e,
	0xff, 0x68, 0xea, 0xb1, 0xf4, 0x4c, 0x4f, 0x98, 0x41, 0x4c, 0x5f, 0x72, 0x95, 0xbc, 0x23, 0xfa,
	0x62, 0x0a, 0x20, 0x68, 0x6f, 0x07, 0x96, 0xef, 0x6c, 0x63, 0x5f, 0xbd, 0x07, 0x63, 0xeb, 0xd4,
	0x2b, 0x46, 0x49, 0x8f, 0x89, 0x96, 0xa0, 0x12, 0x7f, 0xab, 0x3b, 0xb6, 0xa2, 0x11, 0xb5, 0x1c,
	0x03, 0xad, 0xd9, 0xe8, 0x93, 0x50, 0xda, 0xc6, 0x2e, 0xde, 0x71, 0x2c, 0xc7, 0xf4, 0x0f, 0x58,
	0xab, 0x03, 0x85, 0x57, 0xbf, 0x98, 0xac, 0xc6, 0x80, 0x3c, 0x19, 0x7a, 0x15, 0xca, 0xbe, 0xd4,
	0x23, 0x8b, 0x95, 0x89, 0x53, 0xb7, 0x6b, 0xcb, 0xc0, 0x52, 0x8a, 0xcd, 0xb4, 0x56, 0x8a, 0xcd,
	0x57, 0x49, 0x2f, 0xb6, 0x03, 0xcf, 0x57, 0x4f, 0x5d, 0xff, 0xd1, 0xc7, 0xe2, 0x3c, 0x4f, 0xee,
	0x02, 0x3f, 0xf0, 0x7c, 0xb4, 0x08, 0x05, 0x62, 0xa9, 0x76, 0xdc, 0xdd, 0xc1, 0x69, 0xf2, 0x94,
	0xa3, 0xb1, 0x82, 0xff, 0x02, 0x0e, 0x5d, 0x03, 0x56, 0x2f, 0x38, 0x92, 0x00, 0xce, 0xa9, 0x35,
	0xa7, 0x10, 0x00, 0x68, 0x1e, 0x0a, 0x01, 0x7e, 0xa3, 0x4d, 0x18, 0xff, 0x79, 0x25, 0x60, 0x31,
	0x1e, 0xbd, 0x04, 0x59, 0xd2, 0x4f, 0x88, 0x85, 0xfd, 0xbd, 0xa7, 0xe7, 0xde, 0x12, 0x91, 0x74,
	0x1f, 0xaf, 0xb9, 0xa1, 0x41, 0x21, 0xd0, 0x15, 0xc8, 0xbb, 0x38, 0x7c, 0xe8, 0xf9, 0x0f, 0x58,
	0xf3, 0x86, 0x81, 0x35, 0x55, 0xd9, 0x70, 0xd4, 0x86, 0x82, 0xc5, 0x38, 0x3d, 0x0b, 0xee, 0x3b,
	0x7e, 0x6b, 0x8a, 0x88, 0x53, 0x16, 0x53, 0xd5, 0x7e, 0x3d, 0x3f, 0x42, 0x75, 0xfd, 0x5f, 0xe4,
	0x4e, 0x15, 0xc5, 0x3e, 0x59, 0x64, 0x70, 0x44, 0xd9, 0xc8, 0x87, 0xba, 0x5e, 0x31, 0xef, 0x32,
	0x01, 0x5a, 0x66, 0x25, 0x71, 0xaf, 0x42, 0x31, 0x68, 0x6f, 0xd7, 0xe9, 0xf4, 0x39, 0xc5, 0x03,
	0xd7, 0xde, 0xa6, 0x4b, 0x7f, 0x1b, 0xa6, 0x05, 0x70, 0x5d, 0xaf, 0x48, 0x72, 0x95, 0x23, 0xe1,
	0x0f, 0x72, 0x01, 0x32, 0xad, 0x86, 0xe9, 0x32, 0x93, 0xe6, 0x40, 0x1f, 0x57, 0x34, 0x16, 0x2d,
	0x40, 0x39, 0xfa, 0x5f, 0x4c, 0x5d, 0x54, 0x82, 0x2d, 0x45, 0x30, 0x7c, 0xda, 0x97, 0xa8, 0xb3,
	0x94, 0x4c, 0x0d, 0x6a, 0x27, 0x3f, 0x68, 0x6f, 0x6f, 0x46, 0xb3, 0xaf, 0xc2, 0x14, 0x07, 0x15,
	0x4f, 0xa0, 0xd6, 0xfc, 0x67, 0x92, 0xa1, 0xe0, 0x0f, 0x31, 0x7f, 0x54, 0x7b, 0xe4, 0x81, 0xa7,
	0x80, 0x26, 0xed, 0x2d, 0x41, 0x85, 0xc2, 0xf2, 0x47, 0x50, 0xeb, 0x09, 0x54, 0x26, 0x40, 0x5d,
	0xa7, 0x80, 0xfc, 0xa6, 0xc8, 0x20, 0xa3, 0x65, 0x23, 0xcd, 0x6b, 0xf9, 0x29, 0xe8, 0x7c, 0x8a,
	0xaa, 0xf2, 0x29, 0x58, 0x92, 0x1e, 0x24, 0xa9, 0xa6, 0x41, 0x49, 0xf1, 0xec, 0x7f, 0x3b, 0x05,
	0xa5, 0x65, 0x33, 0x34, 0x79, 0xbd, 0xf4, 0xb1, 0xb2, 0x31, 0xee, 0xff, 0xa5, 0xdf, 0xff, 0x2b,
	0x7d, 0xaa, 0xfd, 0xbf, 0xe2, 0xae, 0x5c, 0xe5, 0x93, 0xe8, 0xca, 0x55, 0x19, 0xa6, 0x2b, 0xd7,
	0x64, 0xf2, 0xae, 0x5c, 0x55, 0xdd, 0xae, 0x5c, 0xbc, 0x0f, 0xda, 0x54, 0x92, 0x3e, 0x68, 0xd3,
	0x3a, 0x7d, 0xd0, 0x86, 0xee, 0xff, 0xd5, 0xd5, 0xbb, 0xeb, 0xec, 0x31, 0xf5, 0xee, 0x3a, 0x37,
	0x4c, 0xef, 0xae, 0x8e, 0xfe, 0x5b, 0xe7, 0xf5, 0xfb, 0x6f, 0xbd, 0x06, 0x40, 0x2b, 0x80, 0x62,
	0xd7, 0x3a, 0x60, 0x02, 0xe4, 0xf3, 0x7d, 0x36, 0x9e, 0xd3, 0xd8, 0x2d, 0x01, 0x44, 0xe8, 0x92,
	0x84, 0x04, 0xad, 0x40, 0xbe, 0x69, 0xb6, 0x88, 0x2c, 0x3d, 0xa0, 0xc1, 0xb6, 0x84, 0x6f, 0x6e,
	0x9d, 0x82, 0x18, 0x1c, 0x16, 0xbd, 0x1a, 0x37, 0xff, 0x99, 0xe9, 0x4f, 0xa7, 0x18, 0x8a, 0x98,
	0x33, 0x1c, 0xea, 0xf7, 0x53, 0xfb, 0x91, 0x34, 0xe4, 0xd9, 0x0c, 0xa3, 0x20, 0x38, 0x5e, 0x87,
	0x02, 0x25, 0x42, 0xc2, 0x7b, 0xde, 0x87, 0xcd, 0xc5, 0xcd, 0x34, 0x38, 0x8c, 0x66, 0x59, 0x11,
	0x71, 0x47, 0x73, 0x1a, 0x77, 0x34, 0x71, 0x77, 0x97, 0x64, 0xdd, 0x40, 0xa5, 0xa3, 0x34, 0xfb,
	0xcb, 0x55, 0xa8, 0x2c, 0xe3, 0x10, 0x5b, 0x21, 0xb6, 0xd7, 0x82, 0xa0, 0x3d, 0xb6, 0x3e, 0x8e,
	0xad, 0x8f, 0x89, 0x93, 0x6a, 0xd7, 0xbb, 0xac, 0x8f, 0x3d, 0xf9, 0xb4, 0x54, 0x3e, 0xb7, 0x2f,
	0x9f, 0x96, 0x8b, 0x5f, 0xa6, 0x92, 0x15, 0xbf, 0x5c, 0x97, 0xba, 0x20, 0x94, 0x07, 0x90, 0x6c,
	0xf9, 0x1e, 0x6c, 0x31, 0x20, 0x7a, 0x72, 0x44, 0x3f, 0x04, 0x3f, 0xae, 0xa5, 0x59, 0x39, 0x61,
	0x0b, 0x97, 0xa8, 0xa2, 0x99, 0x4c, 0xd4, 0xf8, 0x91, 0x14, 0xe4, 0x68, 0x32, 0xab, 0xba, 0x2d,
	0xce, 0x1d, 0x32, 0x5e, 0x4c, 0x33, 0xea, 0xce, 0x60, 0x0f, 0x88, 0x0e, 0x00, 0xe8, 0x15, 0x37,
	0x43, 0x6c, 0x9f, 0x58, 0xba, 0xad, 0xb8, 0x89, 0xd2, 0x64, 0xe8, 0x92, 0x28, 0x52, 0xac, 0x26,
	0x20, 0xb1, 0xd1, 0xe8, 0x25, 0xd9, 0xfd, 0x84, 0x14, 0x0a, 0x55, 0x89, 0xd1, 0x68, 0x13, 0xa0,
	0xe9, 0x84, 0xce, 0xae, 0x29, 0x25, 0xda, 0x3e, 0xa7, 0x74, 0x28, 0xe7, 0xd6, 0x05, 0x9c, 0x21,
	0xe1, 0xa8, 0xfd, 0xdd, 0x34, 0x40, 0xfc, 0xa7, 0x51, 0xe0, 0xda, 0xb7, 0x44, 0xac, 0x73, 0xc2,
	0xd2, 0x2e, 0x3c, 0xe6, 0x99, 0x5f, 0x9e, 0xac, 0xd6, 0xe5, 0x69, 0x8b, 0xbb, 0x93, 0x53, 0xbd,
	0x3b, 0xf3, 0xc9, 0xef, 0x0e, 0xbf, 0x07, 0xf3, 0x0b, 0x12, 0x3b, 0xbf, 0xa8, 0x7e, 0x97, 0xa4,
	0x13, 0x32, 0xfb, 0xc3, 0x67, 0x21, 0x47, 0x6f, 0xd7, 0x98, 0x93, 0x8f, 0x39, 0x79, 0x52, 0x3f,
	0xe2, 0x8b, 0x90, 0x6e, 0xdb, 0xce, 0xa0, 0x46, 0xdf, 0xf4, 0x9c, 0xcd, 0xdd, 0xb7, 0x23, 0xd9,
	0xd7, 0x76, 0xd0, 0xb2, 0xe0, 0xff, 0x94, 0x5d, 0x7f, 0xa4, 0xa7, 0xf7, 0x71, 0x75, 0xcd, 0xa0,
	0xc0, 0x7d, 0xdc, 0x8e, 0xe5, 0x24, 0x6e, 0xc7, 0x97, 0x01, 0x1a, 0x5e, 0x58, 0x77, 0xdb, 0xcd,
	0xd8, 0xff, 0x36, 0x50, 0xc3, 0x6e, 0x78, 0xe1, 0x5d, 0x02, 0x80, 0x16, 0xa1, 0xdc, 0x34, 0xdd,
	0xf6, 0x8e, 0x49, 0x2e, 0x99, 0xaf, 0xea, 0x08, 0x93, 0x61, 0xd0, 0xab, 0x30, 0x25, 0x7d, 0xa7,
	0x8d, 0x6b, 0xaa, 0x8a, 0xd4, 0xa7, 0x2a, 0x41, 0x92, 0xde, 0x35, 0x6b, 0x50, 0xc5, 0x8f, 0x5a,
	0x8e, 0x4f, 0x3b, 0x4e, 0x69, 0xf5, 0x01, 0x9f, 0x8c, 0x01, 0x09, 0xaa, 0x17, 0x21, 0xdb, 0xf4,
	0x6c, 0xac, 0xca, 0xe8, 0xe8, 0x60, 0xd9, 0x6a, 0x83, 0xf4, 0xac, 0x36, 0x92, 0xa8, 0x74, 0xf6,
	0xb4, 0x44, 0xa5, 0x00, 0xb2, 0xde, 0x43, 0x17, 0xfb, 0xcc, 0xa9, 0x74, 0xc2, 0xc5, 0x42, 0xe8,
	0x5c, 0xe8, 0x7a, 0x6c, 0x2c, 0x39, 0x3f, 0xb0, 0x62, 0x71, 0x34, 0x6c, 0xd3, 0x73, 0xa2, 0x87,
	0xe6, 0xb6, 0x92, 0x36, 0x14, 0x1a, 0x2c, 0x3d, 0x80, 0x59, 0x15, 0x4e, 0xb0, 0xd4, 0x88, 0x98,
	0x8a, 0x9b, 0x00, 0x9f, 0x54, 0x34, 0x01, 0x26, 0xec, 0xe8, 0x83, 0x6e, 0x40, 0x2e, 0x30, 0x77,
	0x70, 0x78, 0xc0, 0x0a, 0x53, 0xa8, 0x67, 0x2d, 0x51, 0xb0, 0xda, 0xe7, 0xb3, 0x90, 0xbe, 0x6f,
	0x3b, 0xa3, 0x20, 0xd5, 0xbc, 0x0a, 0xd3, 0x36, 0x21, 0x7b, 0xf5, 0x43, 0x29, 0x77, 0x83, 0xde,
	0x68, 0x8a, 0x02, 0xc6, 0xf4, 0x5a, 0x58, 0x1a, 0xb2, 0x1a, 0x96, 0x86, 0x1b, 0x5d, 0xf6, 0x34,
	0x85, 0x3e, 0xd5, 0x9d, 0x36, 0xb4, 0x05, 0xa8, 0x58, 0xa6, 0xef, 0x47, 0x4b, 0xb2, 0x57, 0xf7,
	0xeb, 0x3b, 0x8a, 0x06, 0x0b, 0x60, 0x40, 0xab, 0xc6, 0x4d, 0x74, 0x1b, 0xaa, 0x1c, 0x85, 0x59,
	0x77, 0xea, 0x76, 0xdd, 0x62, 0x0e, 0xad, 0x9e, 0xd7, 0x66, 0xd1, 0x0c, 0xf0, 0xa5, 0x17, 0x17,
	0x1d, 0xd7, 0xf4, 0x0f, 0x8c, 0x12, 0x03, 0x5e, 0x58, 0x5b, 0x5e, 0x42, 0x2f, 0xb0, 0xc4, 0x43,
	0x5f, 0xc5, 0x92, 0xcd, 0x86, 0xa2, 0x5b, 0x00, 0xd8, 0x0d, 0xfd, 0x03, 0x9a, 0xfe, 0x37, 0xa0,
	0x45, 0xc3, 0xfd, 0xe5, 0xb5, 0x95, 0x68, 0x30, 0xaf, 0xc7, 0x69, 0x14, 0x31, 0xff, 0x3a, 0x3f,
	0x2f, 0x89, 0x6b, 0x9a, 0xaa, 0xcf, 0xec, 0x0f, 0x55, 0xa1, 0x4a, 0x3f, 0x92, 0x00, 0x48, 0x77,
	0xec, 0x8b, 0x79, 0xcb, 0x0a, 0x6c, 0xb7, 0x93, 0x99, 0x5e, 0x84, 0xaa, 0x23, 0x0b, 0x6e, 0x4b,
	0x4c, 0x78, 0x82, 0x84, 0x05, 0x31, 0x89, 0x10, 0xb5, 0x0e, 0xa8, 0x61, 0x06, 0x61, 0x9d, 0x76,
	0x06, 0xae, 0x5b, 0x7b, 0xa4, 0xc9, 0x56, 0xa9, 0xbf, 0x9b, 0x64, 0xcd, 0x0d, 0x42, 0xd3, 0x0d,
	0x8d, 0xa9, 0x08, 0x74, 0x8b, 0x40, 0x2e, 0x11, 0x40, 0xe4, 0x89, 0xb6, 0x0a, 0xca, 0x21, 0x60,
	0x2f, 0x26, 0x33, 0x27, 0xb0, 0xfe, 0x0b, 0x8f, 0x20, 0xd7, 0x32, 0x7d, 0x2d, 0x1b, 0xcd, 0xcb,
	0x64, 0xc2, 0xcb, 0x7a, 0x13, 0x8a, 0x9b, 0x6b, 0xb0, 0xf9, 0xd0, 0xeb, 0x80, 0xbc, 0x16, 0xa6,
	0x42, 0x57, 0xdc, 0x88, 0x74, 0x52, 0x8f, 0xf1, 0x4d, 0x4b, 0x28, 0x58, 0x43, 0xd0, 0x4d, 0xa8,
	0xb6, 0x4c, 0xdf, 0x6c, 0xe2, 0x10, 0xfb, 0x2c, 0x10, 0xa1, 0xaa, 0x27, 0x1e, 0x4f, 0x0a, 0x78,
	0x1a, 0x97, 0x60, 0xc2, 0xf9, 0x26, 0x36, 0x83, 0xb6, 0x4f, 0xec, 0xc0, 0xf5, 0x96, 0xef, 0xb8,
	0x96, 0xd3, 0x6a, 0x70, 0xf1, 0xf2, 0x23, 0xbd, 0x09, 0x8a, 0x19, 0x34, 0xdd, 0x70, 0x93, 0x8f,
	0x27, 0xd7, 0xfb, 0x9c, 0x84, 0x4a, 0xfc, 0x05, 0x7d, 0x12, 0x66, 0x58, 0x9b, 0x6e, 0xd2, 0x2d,
	0xb5, 0x85, 0x2d, 0xd1, 0xe7, 0x94, 0x75, 0x09, 0xb9, 0xd1, 0x5f, 0xb3, 0x10, 0xeb, 0x3b, 0xb7,
	0x29, 0xf0, 0x6c, 0xc9, 0x68, 0x8c, 0x27, 0x5b, 0x47, 0xff, 0x01, 0xdd, 0x81, 0x0a, 0x27, 0x39,
	0x75, 0x52, 0xb0, 0x17, 0x69, 0x86, 0x84, 0x35, 0x24, 0xf2, 0x55, 0xfb, 0xf1, 0x34, 0x3c, 0xd9,
	0xe3, 0x11, 0x46, 0x41, 0x2c, 0x59, 0x86, 0x62, 0xb4, 0x3b, 0x75, 0xa9, 0x7a, 0x8c, 0x46, 0xab,
	0xd8, 0x16, 0xb6, 0x48, 0x3e, 0xfc, 0x0a, 0x94, 0x2d, 0xbe, 0x61, 0x75, 0xc7, 0xd6, 0xc8, 0x24,
	0x2c, 0x09, 0xb8, 0x35, 0x1b, 0xdd, 0x82, 0x6a, 0xd7, 0xa9, 0x51, 0xf4, 0xa5, 0x4c, 0x76, 0x9e,
	0x85, 0xf9, 0x25, 0x89, 0x3b, 0x27, 0xbd, 0xd8, 0xb3, 0xff, 0x60, 0x12, 0xca, 0xf4, 0xb7, 0x75,
	0x1c, 0xfa, 0x8e, 0x35, 0xe6, 0xd1, 0x63, 0x1e, 0xfd, 0x35, 0xc1, 0xa3, 0xaf, 0x42, 0xa6, 0xed,
	0x3a, 0xa1, 0x76, 0x70, 0x76, 0x04, 0xf4, 0x56, 0xe2, 0xc8, 0x7b, 0x3d, 0x38, 0x72, 0xdf, 0xcc,
	0x40, 0xf9, 0xc6, 0x6f, 0x74, 0x33, 0x63, 0x72, 0x59, 0x8e, 0xe0, 0xd1, 0x4b, 0x90, 0xb5, 0xbc,
	0x86, 0x70, 0xb7, 0x3c, 0xa3, 0x82, 0x7c, 0x29, 0x02, 0x20, 0x08, 0x29, 0x2c, 0xba, 0x27, 0xf9,
	0xbc, 0x28, 0x27, 0x7e, 0x4e, 0x09, 0x0f, 0x83, 0xe9, 0xf0, 0xa3, 0xc9, 0x4e, 0x30, 0xd4, 0xc1,
	0xec, 0x95, 0xc2, 0x9b, 0xef, 0x39, 0xcd, 0x88, 0xac, 0x4e, 0xcb, 0xbc, 0x9d, 0x46, 0x3a, 0x1b,
	0x50, 0xb2, 0xcc, 0x86, 0xb3, 0xed, 0xcb, 0x9d, 0xba, 0x94, 0x9e, 0x73, 0x6e, 0x29, 0x86, 0x33,
	0x64, 0x24, 0xb5, 0x1f, 0x4c, 0x43, 0x49, 0xfa, 0xe3, 0x68, 0x68, 0xfb, 0x72, 0x3d, 0xb6, 0xcb,
	0x6a, 0xfb, 0x28, 0x56, 0x40, 0x28, 0x9c, 0xf4, 0xbe, 0xdf, 0x25, 0x7d, 0x9d, 0x85, 0x23, 0xe3,
	0x8a, 0x26, 0x36, 0xd1, 0x62, 0xd0, 0xa0, 0x68, 0xd0, 0x0b, 0x90, 0x91, 0xf2, 0xf4, 0x07, 0x4a,
	0xf5, 0x64, 0xf0, 0xfc, 0x2b, 0x12, 0x4b, 0x7d, 0x51, 0xef, 0x66, 0xd2, 0x27, 0x9a, 0xfd, 0x67,
	0xef, 0x82, 0x0a, 0xa3, 0x0d, 0xf8, 0x8d, 0x36, 0x0e, 0xc6, 0x4a, 0xef, 0xd8, 0x4b, 0x91, 0xd8,
	0x4b, 0xf1, 0x33, 0x29, 0x00, 0x5b, 0x1c, 0x34, 0x16, 0x96, 0xa8, 0xc0, 0x5a, 0xbe, 0x59, 0xaf,
	0xd5, 0xf0, 0x82, 0x15, 0x3a, 0xfb, 0x4e, 0x78, 0x10, 0xff, 0x44, 0xe0, 0x2f, 0x29, 0x5b, 0xa9,
	0x1b, 0xa6, 0x1b, 0x7f, 0x35, 0xa4, 0x47, 0x46, 0x21, 0x14, 0xb6, 0xcd, 0x00, 0xdb, 0x75, 0x51,
	0x8c, 0xe9, 0x24, 0xeb, 0x78, 0x93, 0xa9, 0x36, 0x5c, 0xf4, 0x2d, 0x50, 0x69, 0xf9, 0x8e, 0xe7,
	0xd7, 0x7d, 0x7a, 0x07, 0x59, 0xe1, 0xa6, 0x13, 0x9c, 0xba, 0x4c, 0xe6, 0xe3, 0x57, 0x7e, 0x1d,
	0xa6, 0x68, 0x3c, 0xbc, 0x74, 0x02, 0x2a, 0xca, 0xda, 0x42, 0x95, 0xc0, 0x4a, 0x86, 0xd0, 0x05,
	0xe1, 0x76, 0xa2, 0x6c, 0xfd, 0x83, 0xbd, 0xdf, 0x83, 0xcc, 0x7f, 0x84, 0xcf, 0xe9, 0x16, 0xe4,
	0x1c, 0x9a, 0x03, 0x5b, 0x4d, 0xe8, 0x6e, 0xa6, 0xe0, 0xe8, 0x16, 0x14, 0xc8, 0xab, 0x3a, 0x21,
	0xe7, 0xdf, 0x1f, 0x1e, 0xf0, 0x34, 0x9b, 0x6c, 0x38, 0x25, 0x19, 0x1c, 0x18, 0xdd, 0x61, 0x8d,
	0x66, 0x28, 0x93, 0xfe, 0x50, 0x7f, 0x72, 0xcf, 0x50, 0x91, 0xa7, 0xeb, 0x4a, 0xc1, 0xa5, 0x2d,
	0x68, 0xfe, 0xc4, 0x44, 0x5c, 0x2f, 0x1e, 0xa9, 0x4a, 0x60, 0xbf, 0x99, 0x1a, 0xa2, 0x09, 0xec,
	0xe9, 0x56, 0x54, 0xd2, 0x95, 0x4b, 0x45, 0x49, 0xfb, 0xbf, 0x94, 0x62, 0x29, 0xbc, 0x8f, 0x34,
	0xbc, 0x54, 0xbe, 0x5e, 0x85, 0xa3, 0x15, 0xd7, 0xf2, 0xda, 0x6e, 0xa8, 0x5b, 0x53, 0x69, 0xa5,
	0xe5, 0x04, 0x9e, 0x8d, 0x37, 0x76, 0x96, 0x4c, 0x1f, 0x1b, 0xfc, 0x29, 0xd1, 0x47, 0x01, 0x3c,
	0xcb, 0x6a, 0xfb, 0x34, 0xf2, 0xe4, 0x9c, 0x8a, 0x8c, 0xc8, 0x8f, 0xc7, 0x86, 0x80, 0x13, 0x45,
	0x80, 0x24, 0x5c, 0x68, 0x01, 0x4a, 0x34, 0x0e, 0x81, 0xd2, 0xa3, 0xf3, 0x8a, 0x7e, 0x46, 0xe0,
	0x40, 0x1b, 0x2e, 0x5a, 0x87, 0x22, 0xa3, 0x29, 0x22, 0xc5, 0xea, 0x59, 0xb5, 0x67, 0x33, 0x38,
	0x98, 0x11, 0x63, 0x40, 0x77, 0x61, 0xb2, 0x85, 0xfd, 0x1d, 0xcf, 0x6f, 0x62, 0x9f, 0x5a, 0x27,
	0x9e, 0xd4, 0x53, 0x77, 0x2a, 0x02, 0x9c, 0x98, 0x28, 0xfe, 0x64, 0x1a, 0x8a, 0xe2, 0x17, 0xd6,
	0x98, 0x54, 0x61, 0xbf, 0xff, 0xd7, 0x89, 0x21, 0xe3, 0xa2, 0x4e, 0x39, 0xc1, 0x2f, 0x49, 0xf1,
	0xb3, 0x21, 0x12, 0x67, 0x95, 0xb3, 0xe9, 0x57, 0xb1, 0xd9, 0x08, 0xf7, 0x2c, 0xd3, 0xc7, 0x5b,
	0xd8, 0x27, 0x9b, 0x1f, 0xef, 0x06, 0x5a, 0x85, 0x12, 0xad, 0x4a, 0x48, 0xed, 0x75, 0x9a, 0xce,
	0x42, 0xa0, 0xb0, 0xd1, 0xcf, 0xe8, 0x33, 0x29, 0x98, 0x62, 0xa8, 0xe2, 0x10, 0xad, 0xda, 0x49,
	0xb3, 0xb8, 0x2a, 0x9d, 0x52, 0x20, 0x42, 0xdf, 0x9e, 0x82, 0x6a, 0xd0, 0x6e, 0xb5, 0x3c, 0x9f,
	0x74, 0xa1, 0x76, 0xdc, 0x1d, 0x8f, 0xd5, 0xc2, 0x3f, 0xc1, 0xa7, 0x98, 0x8c, 0x67, 0x5c, 0x73,
	0x77, 0x3c, 0xe1, 0xb5, 0x7d, 0x4a, 0xd3, 0x6b, 0xfb, 0x47, 0xc8, 0x1a, 0x36, 0xf0, 0xbe, 0xe9,
	0x86, 0xf5, 0x3d, 0x27, 0x08, 0x23, 0x85, 0xf4, 0x69, 0xd5, 0xa7, 0xbf, 0x42, 0x9e, 0xfe, 0x82,
	0xfa, 0x7d, 0xf1, 0xf6, 0xb1, 0x4b, 0x6a, 0xc0, 0x55, 0xf9, 0xa4, 0xab, 0x74, 0xce, 0xda, 0x3f,
	0x4e, 0x41, 0x86, 0xec, 0xea, 0x43, 0x39, 0xe0, 0x2e, 0x75, 0xa2, 0x66, 0x8b, 0x8e, 0x22, 0x0f,
	0x47, 0x96, 0xd8, 0x9a, 0x18, 0xb6, 0xc4, 0xd6, 0x62, 0x8e, 0xf2, 0xf7, 0xda, 0xaf, 0xa4, 0x00,
	0x62, 0xba, 0x1c, 0x49, 0xea, 0x71, 0xe7, 0xf3, 0x94, 0x1a, 0x05, 0x5e, 0x3d, 0x23, 0xf5, 0x3e,
	0xbf, 0x22, 0xb2, 0x97, 0x27, 0x54, 0xb2, 0x97, 0x57, 0xcf, 0x88, 0xfc, 0xe5, 0x2b, 0x90, 0x0b,
	0x89, 0xca, 0xcf, 0x54, 0xa4, 0x01, 0x86, 0x81, 0x08, 0x92, 0x8e, 0x5f, 0x2c, 0xcb, 0x2c, 0xa9,
	0xf6, 0x93, 0x19, 0x28, 0x0a, 0x6a, 0x3e, 0x0a, 0x7a, 0xfc, 0xef, 0xa4, 0x78, 0x89, 0x52, 0xe5,
	0x0a, 0x96, 0x3f, 0x96, 0x1a, 0xb2, 0x37, 0xdc, 0x29, 0xf3, 0x1a, 0x5e, 0x45, 0xf5, 0x5b, 0xa1,
	0xec, 0xb9, 0xf5, 0x6d, 0xbc, 0x67, 0x36, 0x76, 0xea, 0xde, 0x8e, 0x7a, 0x31, 0xf8, 0x61, 0xc2,
	0x68, 0xc0, 0x73, 0x17, 0xc9, 0x8c, 0x1b, 0x3b, 0x49, 0x23, 0x20, 0x25, 0x49, 0x62, 0xf6, 0x5f,
	0x4e, 0x02, 0xa2, 0xbf, 0xdc, 0x0f, 0x48, 0x7c, 0xd9, 0x38, 0xd1, 0x71, 0x6c, 0x67, 0x18, 0xca,
	0xce, 0x70, 0xaf, 0x2b, 0xaf, 0xe1, 0xc5, 0xfe, 0x22, 0xad, 0x7c, 0xec, 0xfa, 0xa4, 0x37, 0xfc,
	0xf9, 0x54, 0xac, 0x93, 0x95, 0x94, 0x23, 0xf4, 0x4f, 0x57, 0x25, 0x8b, 0x15, 0xa5, 0xab, 0x50,
	0x7c, 0xb8, 0x87, 0xdd, 0x7a, 0x3b, 0xc0, 0xaa, 0x2d, 0x4c, 0x0b, 0x11, 0xc0, 0xfd, 0x00, 0xdb,
	0xe8, 0xbe, 0x60, 0x2d, 0x54, 0xcd, 0xbf, 0xa8, 0xbe, 0x80, 0x8c, 0xdb, 0x44, 0xe2, 0x7b, 0x5c,
	0xb9, 0x94, 0x22, 0x8b, 0x14, 0x16, 0x1f, 0x5b, 0x9e, 0x6f, 0x53, 0x85, 0x45, 0x35, 0x3f, 0x02,
	0x38, 0xd0, 0x86, 0x8b, 0x7e, 0x3b, 0x25, 0x5c, 0x21, 0xd5, 0xd3, 0xa8, 0x4f, 0x73, 0xea, 0x8d,
	0x2b, 0xb8, 0x07, 0xa6, 0x0d, 0x39, 0x1a, 0x41, 0xc6, 0xcc, 0x12, 0x2a, 0x34, 0x3d, 0x39, 0x0f,
	0x33, 0xd8, 0x64, 0xe8, 0x16, 0x80, 0xe3, 0xda, 0x9d, 0x5e, 0x7f, 0x75, 0xa1, 0x3e, 0x06, 0x45,
	0xcb, 0x50, 0xdc, 0xf6, 0xec, 0x83, 0x7a, 0xe0, 0x84, 0xda, 0xce, 0xfc, 0x42, 0x04, 0xb9, 0xe5,
	0x84, 0x58, 0x88, 0xc3, 0x67, 0xf5, 0xc4, 0xe1, 0xda, 0x3f, 0x4c, 0x01, 0xc4, 0x07, 0x11, 0x5d,
	0x87, 0x32, 0x3d, 0x82, 0xac, 0x1a, 0x41, 0x4a, 0x4f, 0x60, 0x1a, 0x42, 0x48, 0xeb, 0x90, 0x0f,
	0xd3, 0xfa, 0xf2, 0xe1, 0x62, 0x81, 0x5f, 0xc5, 0xf9, 0x9b, 0x12, 0xab, 0x9d, 0xd7, 0xdb, 0x5e,
	0xf9, 0x82, 0xce, 0xfe, 0x87, 0xa7, 0x60, 0x6a, 0xd9, 0x31, 0x77, 0x5d, 0x2f, 0x08, 0x1d, 0xcb,
	0xc0, 0x91, 0xfa, 0x31, 0xe6, 0xb6, 0x63, 0x6e, 0x9b, 0x94, 0xdb, 0x7e, 0x31, 0x2d, 0x19, 0xc5,
	0x95, 0x6d, 0xfa, 0xff, 0x6e, 0x42, 0xbf, 0x41, 0xf2, 0x66, 0xc3, 0xa4, 0x16, 0x8c, 0x45, 0x55,
	0xa8, 0xb5, 0x66, 0xb3, 0x2d, 0xe4, 0x56, 0x4c, 0xb3, 0x70, 0x6d, 0x53, 0xbf, 0x76, 0xe5, 0x3a,
	0xe6, 0x84, 0x8d, 0x49, 0xad, 0x7a, 0x1e, 0x85, 0xbb, 0xed, 0xd0, 0x27, 0x9f, 0x36, 0x7c, 0x9b,
	0xb1, 0x87, 0x2b, 0x1a, 0xca, 0xb6, 0x85, 0xed, 0xb6, 0x8f, 0xe5, 0x99, 0x2f, 0xab, 0x33, 0x97,
	0x1d, 0xec, 0xfb, 0x66, 0x83, 0x01, 0xc7, 0x3e, 0x05, 0xa3, 0x2b, 0xf7, 0xa3, 0x67, 0xfb, 0x9f,
	0x6e, 0x52, 0xa1, 0x98, 0x00, 0x5a, 0x4e, 0x9a, 0x00, 0xba, 0xc4, 0x0c, 0xe9, 0x95, 0x84, 0xd1,
	0x16, 0xc4, 0x7e, 0xfe, 0x39, 0xc9, 0x7e, 0x3e, 0xa9, 0xca, 0x3f, 0x7f, 0xed, 0x74, 0x2d, 0xe7,
	0x49, 0xd4, 0x4c, 0xfd, 0xfc, 0x81, 0x23, 0x2d, 0xe7, 0xd5, 0x37, 0x89, 0xe5, 0xbc, 0x28, 0x8a,
	0xcd, 0x33, 0x29, 0x48, 0xf9, 0x94, 0xce, 0xad, 0x70, 0x48, 0x21, 0x85, 0xc6, 0xc8, 0xd0, 0x65,
	0xd1, 0xff, 0x66, 0x5a, 0xcd, 0x9d, 0xce, 0xdb, 0xdf, 0x6c, 0xca, 0xf6, 0x68, 0x1a, 0x47, 0xa1,
	0xfe, 0x48, 0x9b, 0x1c, 0x52, 0x36, 0xa3, 0xb6, 0x81, 0x44, 0xe4, 0x39, 0x4d, 0xcc, 0x53, 0x4b,
	0x8f, 0xdf, 0xda, 0xb8, 0xc5, 0x26, 0x30, 0xc4, 0x54, 0x28, 0x84, 0x9c, 0x8f, 0x83, 0x76, 0x23,
	0x64, 0x25, 0x3a, 0x14, 0x26, 0x7d, 0x49, 0xaf, 0x4e, 0xb0, 0x94, 0x33, 0x6e, 0xb0, 0xb9, 0xd0,
	0xcf, 0xa4, 0xa0, 0xe2, 0x34, 0xcd, 0xdd, 0x48, 0x12, 0x0b, 0xc2, 0xb6, 0x7d, 0xc0, 0x12, 0x70,
	0x14, 0x66, 0x7f, 0xa8, 0x27, 0x8e, 0xaf, 0xd1, 0x59, 0xb6, 0xa2, 0x49, 0xf4, 0x28, 0x26, 0x83,
	0x5c, 0x37, 0x5d, 0x67, 0x27, 0xa2, 0x98, 0x65, 0x47, 0x42, 0x85, 0x96, 0x21, 0x1b, 0x7d, 0xc7,
	0x33, 0x4f, 0xf4, 0x6f, 0x27, 0x7a, 0x68, 0xf3, 0x23, 0xb4, 0xd8, 0xa0, 0xc0, 0xe8, 0x3a, 0x80,
	0xe5, 0xb9, 0x56, 0xa3, 0x4d, 0x18, 0xf8, 0x93, 0x8a, 0x29, 0x19, 0x02, 0x02, 0x6d, 0x02, 0xb1,
	0x4f, 0xda, 0x75, 0x9b, 0x4e, 0xe3, 0x04, 0x2c, 0xcd, 0x47, 0x3d, 0xbc, 0x98, 0xc0, 0x2f, 0x73,
	0x70, 0xb4, 0x06, 0x93, 0x2d, 0x1f, 0x07, 0xd8, 0x0d, 0xb1, 0x5d, 0x8f, 0x8e, 0x26, 0x33, 0xe8,
	0x2b, 0x14, 0xfa, 0x35, 0x2a, 0x02, 0xf2, 0xa6, 0xe7, 0x37, 0x6b, 0x7f, 0x3c, 0x05, 0x45, 0x71,
	0xfb, 0x1e, 0xa3, 0x81, 0x74, 0xb1, 0x24, 0xd1, 0x8f, 0xda, 0xdf, 0x4e, 0x43, 0x51, 0x5c, 0xc0,
	0x51, 0xb0, 0x72, 0xf2, 0xb6, 0x2b, 0x9a, 0xf1, 0xbf, 0x04, 0x08, 0x7d, 0x31, 0xc5, 0x9b, 0xfc,
	0x28, 0x5b, 0x0c, 0x3f, 0x99, 0xa4, 0x7b, 0xe4, 0xb1, 0x59, 0x3b, 0xa3, 0x67, 0xad, 0xfd, 0x87,
	0x09, 0xc8, 0x92, 0x7b, 0x34, 0x0a, 0xfb, 0x27, 0x15, 0x91, 0xc9, 0x68, 0x15, 0x91, 0x41, 0x2d,
	0xc8, 0x34, 0x1c, 0xf7, 0x81, 0xfa, 0xd6, 0xbd, 0x24, 0x6d, 0xdd, 0x33, 0x3a, 0x22, 0xaf, 0x69,
	0x90, 0x99, 0xe6, 0x97, 0x25, 0xd5, 0x53, 0x59, 0x70, 0xed, 0x26, 0x81, 0xb3, 0xbf, 0xf4, 0x24,
	0x4c, 0xf1, 0x02, 0xdd, 0x9c, 0xbc, 0x8e, 0x15, 0xcf, 0xb7, 0xa6, 0xe2, 0xb9, 0x01, 0xd3, 0x4d,
	0x33, 0x08, 0x49, 0xf9, 0xe2, 0x04, 0x55, 0x6c, 0xa6, 0x28, 0xb0, 0x14, 0x54, 0x74, 0x1c, 0x15,
	0xef, 0xb6, 0xba, 0x74, 0xa2, 0x9e, 0xd5, 0xb8, 0x0f, 0x95, 0x99, 0xef, 0xa3, 0x14, 0x0d, 0x95,
	0x1e, 0xff, 0xdf, 0x4b, 0x7a, 0x8c, 0x72, 0x24, 0xf6, 0x97, 0x1f, 0x8b, 0xbd, 0xf3, 0xe4, 0x35,
	0xa0, 0x58, 0x97, 0x99, 0x87, 0xbc, 0xe5, 0x63, 0x52, 0x7c, 0x46, 0xd5, 0x88, 0xcc, 0x01, 0xd0,
	0xaf, 0x4f, 0x48, 0x75, 0x76, 0x14, 0x85, 0xcf, 0xef, 0x7b, 0x7c, 0x01, 0x25, 0x49, 0xb4, 0xc4,
	0xd3, 0xac, 0x32, 0xcd, 0x4b, 0x02, 0xfd, 0xb9, 0x09, 0x28, 0xfa, 0xd8, 0x72, 0x5a, 0xa4, 0x80,
	0x80, 0x72, 0x49, 0xa0, 0xaf, 0xa6, 0xde, 0x64, 0x7d, 0xf2, 0x92, 0x09, 0x30, 0xf1, 0xd2, 0xa0,
	0x17, 0x84, 0x03, 0x63, 0x5a, 0x21, 0x05, 0x9a, 0x79, 0x03, 0x5e, 0x81, 0x92, 0x8d, 0x03, 0xcb,
	0x77, 0x5a, 0xa1, 0x7a, 0x65, 0x07, 0x19, 0x04, 0x19, 0x71, 0xdb, 0x90, 0x41, 0x15, 0x8c, 0xba,
	0x58, 0xb4, 0xe8, 0x15, 0x22, 0x2a, 0x0f, 0x32, 0x44, 0xe8, 0x36, 0xe4, 0x7d, 0xba, 0x40, 0x4c,
	0x8b, 0x54, 0xc7, 0xc9, 0x16, 0xd6, 0xe0, 0x08, 0x6a, 0xbf, 0x93, 0x8e, 0x3b, 0x8e, 0x8c, 0x80,
	0x74, 0x77, 0x17, 0x52, 0xad, 0x41, 0x8d, 0xb5, 0x7b, 0x2d, 0xf4, 0xdc, 0x66, 0x57, 0x4c, 0x68,
	0xaa, 0x55, 0xfb, 0xc5, 0x14, 0xa4, 0x36, 0x8f, 0xa9, 0x15, 0xcb, 0x63, 0xec, 0x16, 0x97, 0x86,
	0x54, 0xab, 0xf6, 0x5f, 0x26, 0x20, 0xcf, 0xf6, 0x7f, 0xdc, 0x90, 0x99, 0x4a, 0x1e, 0x0f, 0x20,
	0xed, 0x63, 0x8d, 0xf0, 0x8d, 0xa4, 0xe1, 0x66, 0xd1, 0x2c, 0x09, 0xa5, 0xf9, 0xae, 0xc3, 0x3a,
	0xfb, 0x6d, 0xef, 0x81, 0xe9, 0x43, 0x72, 0xd0, 0x58, 0x9c, 0x1f, 0x8b, 0xf3, 0xa3, 0x2d, 0xce,
	0xdf, 0x01, 0xb0, 0x3d, 0xab, 0xae, 0x56, 0xdf, 0x5a, 0xea, 0x95, 0x26, 0x25, 0x31, 0x14, 0x6d,
	0xcf, 0x12, 0x39, 0x88, 0x54, 0x39, 0xa8, 0x0c, 0x93, 0x5a, 0xba, 0xd4, 0x59, 0x6a, 0x7f, 0x52,
	0x4f, 0xd1, 0x60, 0x35, 0xf7, 0x65, 0x4d, 0xa3, 0x3a, 0xd6, 0x34, 0x8e, 0xd0, 0x34, 0xa6, 0x74,
	0x35, 0x8d, 0x05, 0xc8, 0x3b, 0xae, 0x8d, 0x1f, 0x29, 0xbb, 0x19, 0x62, 0x09, 0x8b, 0xc1, 0xc9,
	0xca, 0x0a, 0x1a, 0x2b, 0x2b, 0xc7, 0xa6, 0xac, 0xfc, 0x74, 0x0a, 0x2a, 0xd1, 0xc7, 0x88, 0x54,
	0x58, 0x66, 0xe8, 0xf9, 0xea, 0xb9, 0x24, 0xe1, 0x63, 0x31, 0x80, 0x76, 0x3e, 0x2d, 0xfa, 0x14,
	0x14, 0xad, 0x76, 0x10, 0x7a, 0xb6, 0x63, 0xba, 0xa7, 0x53, 0x3a, 0x2d, 0x9e, 0x0f, 0x19, 0x00,
	0x54, 0x68, 0x0f, 0xea, 0xa1, 0xc7, 0x1c, 0x38, 0xea, 0xa4, 0x95, 0x49, 0xfe, 0xc1, 0x3d, 0x2f,
	0x92, 0x0b, 0xd9, 0xc7, 0x6e, 0xfd, 0xe6, 0x09, 0x7d, 0xfd, 0xe6, 0x2e, 0x4c, 0x06, 0xd8, 0x6a,
	0xfb, 0x4e, 0x78, 0x50, 0x6f, 0x98, 0xdb, 0xb8, 0xc1, 0x0a, 0xb4, 0xab, 0xa7, 0x9e, 0x70, 0xf0,
	0x3b, 0x11, 0x34, 0xda, 0x8a, 0xf5, 0x25, 0xea, 0x5a, 0x79, 0x5e, 0xfd, 0x15, 0x7b, 0x2a, 0x4c,
	0xaf, 0xc6, 0x2e, 0xd8, 0xb7, 0x0d, 0xa8, 0x6d, 0x7c, 0x34, 0xd2, 0x47, 0xa1, 0x70, 0x8f, 0xd6,
	0xfe, 0x6c, 0x1a, 0x8a, 0x62, 0x31, 0x47, 0x41, 0x90, 0xde, 0x64, 0x9e, 0xff, 0xcc, 0x80, 0xa0,
	0x4d, 0xb1, 0x34, 0x71, 0x13, 0x30, 0x9e, 0x7c, 0xdd, 0x15, 0x06, 0xf0, 0x6d, 0x29, 0xc8, 0x85,
	0xa6, 0xbf, 0x8b, 0x43, 0x75, 0xd1, 0x7a, 0x45, 0x32, 0x96, 0x27, 0xef, 0x3b, 0x69, 0xb0, 0x79,
	0x6b, 0xbf, 0x3a, 0x31, 0x52, 0x7a, 0xed, 0xed, 0x0e, 0x0d, 0x34, 0xa3, 0xaa, 0x81, 0xc6, 0x75,
	0x35, 0x24, 0x3d, 0xf4, 0x12, 0xe4, 0x76, 0x3c, 0xbf, 0x69, 0x86, 0x83, 0x4a, 0xe2, 0x2d, 0x79,
	0x36, 0x29, 0xe5, 0x4c, 0x47, 0xd7, 0x7e, 0xa6, 0xc8, 0x96, 0xf4, 0xd1, 0x48, 0x2c, 0xe9, 0x23,
	0x28, 0x62, 0x1e, 0x37, 0xa1, 0x9e, 0xb1, 0x70, 0x39, 0x61, 0x64, 0x86, 0x11, 0x4f, 0x86, 0x5e,
	0x86, 0x2c, 0xde, 0x8f, 0xf6, 0x31, 0xab, 0x47, 0x2a, 0x29, 0x94, 0xd4, 0x78, 0x2f, 0xa7, 0xd5,
	0x78, 0xef, 0x0e, 0x54, 0x76, 0x4c, 0xcb, 0x69, 0x44, 0xa4, 0x9a, 0x48, 0xbf, 0x79, 0xcd, 0x5a,
	0x4f, 0x1c, 0x9a, 0xc4, 0x76, 0x1a, 0x30, 0xd5, 0x22, 0x4c, 0xd6, 0xc2, 0xf5, 0x00, 0x87, 0xa1,
	0xe3, 0xee, 0xb2, 0xfa, 0x84, 0xca, 0x08, 0xab, 0x1c, 0xc1, 0x16, 0x85, 0x47, 0x9f, 0x4d, 0xc1,
	0x59, 0xaa, 0x77, 0xd5, 0x59, 0xa5, 0x52, 0x9a, 0x0e, 0x56, 0x3c, 0xe1, 0xba, 0xa8, 0xd3, 0x74,
	0x52, 0xf6, 0x95, 0x24, 0x84, 0x6d, 0xc5, 0x36, 0x36, 0xaa, 0x05, 0xbd, 0xa4, 0xcd, 0x32, 0x0e,
	0x1b, 0xdb, 0xc6, 0x16, 0x98, 0xc7, 0x6b, 0x81, 0x59, 0x91, 0x2c, 0x30, 0xc9, 0x79, 0xcc, 0xec,
	0xf7, 0x4f, 0x03, 0x5a, 0x69, 0x38, 0xbb, 0xce, 0x36, 0xb9, 0x0e, 0xe3, 0x0a, 0x1d, 0xe3, 0x58,
	0xde, 0xaf, 0xa5, 0x7e, 0xc4, 0x4b, 0x52, 0x6d, 0x05, 0xdd, 0x7e, 0x20, 0xa2, 0xae, 0x82, 0x54,
	0x95, 0xba, 0x7c, 0x5a, 0x55, 0xa9, 0xff, 0x7f, 0x50, 0x08, 0x68, 0xc2, 0xb3, 0xcd, 0x2c, 0x33,
	0x2f, 0xf4, 0xee, 0xcf, 0xd4, 0x7d, 0xfd, 0xe6, 0x58, 0xae, 0xb4, 0x2d, 0x02, 0x0f, 0x05, 0xb2,
	0xa1, 0xfc, 0x96, 0x0f, 0x21, 0x8f, 0x23, 0xae, 0x8d, 0x35, 0xfa, 0x83, 0x0c, 0xd3, 0xe3, 0x80,
	0xcf, 0x86, 0x0e, 0xa2, 0x6d, 0xf4, 0xf6, 0x1d, 0x1b, 0xfb, 0x1a, 0xb9, 0x28, 0x43, 0xcc, 0x2c,
	0xa6, 0x43, 0x9f, 0x4e, 0x41, 0xd9, 0x93, 0xd4, 0x50, 0x66, 0x47, 0x39, 0x61, 0x5d, 0xb7, 0x63,
	0xca, 0x68, 0xdd, 0x1d, 0x37, 0x20, 0xd5, 0xe5, 0xd1, 0x69, 0xcc, 0xce, 0x67, 0x43, 0x6d, 0x28,
	0x70, 0x41, 0x47, 0xdd, 0x3c, 0x91, 0xb8, 0xcc, 0x38, 0x9f, 0x8a, 0x36, 0xbf, 0xa5, 0xcd, 0x27,
	0xd5, 0x4d, 0x0b, 0xda, 0xcd, 0x6f, 0xe9, 0x04, 0x86, 0x98, 0x0a, 0xbd, 0x06, 0xe7, 0xb6, 0xdb,
	0x81, 0xe3, 0xe2, 0x20, 0xa8, 0x47, 0x44, 0xdb, 0xdd, 0xa5, 0xfd, 0xd1, 0xd4, 0x1a, 0x06, 0x9f,
	0xe5, 0xb0, 0x0b, 0x31, 0x68, 0x24, 0x19, 0xd2, 0xa6, 0xd3, 0x61, 0x5d, 0x84, 0xa5, 0x3f, 0xa1,
	0x29, 0x19, 0x32, 0x04, 0xbc, 0x5e, 0x1b, 0xfa, 0x18, 0x9c, 0xe3, 0x38, 0x49, 0x83, 0x50, 0x8e,
	0x57, 0xb3, 0xce, 0x05, 0x62, 0x48, 0xb6, 0xda, 0xdb, 0x1c, 0x75, 0xed, 0x33, 0x29, 0x28, 0x70,
	0xda, 0x81, 0x2e, 0xb0, 0x36, 0x28, 0xa9, 0xfe, 0x7c, 0x39, 0x22, 0x13, 0xab, 0x67, 0x58, 0x13,
	0x94, 0xe4, 0x91, 0x92, 0x10, 0x13, 0xbc, 0x64, 0x69, 0x46, 0x87, 0xc9, 0xe0, 0xec, 0xff, 0xf8,
	0x6e, 0x38, 0xdb, 0xf1, 0x73, 0xd0, 0xf2, 0xdc, 0x60, 0xec, 0x21, 0x1a, 0x4b, 0x27, 0x5f, 0x1b,
	0xd2, 0x89, 0xc4, 0x8b, 0x4b, 0xba, 0xbc, 0xf8, 0xb3, 0xa4, 0xda, 0x06, 0x39, 0xe7, 0x75, 0xc1,
	0x1b, 0xcb, 0xa7, 0xc1, 0x1b, 0xab, 0x3e, 0xaf, 0x42, 0xc5, 0x58, 0xe4, 0xe7, 0x52, 0x70, 0x8e,
	0x3f, 0x4a, 0x07, 0xab, 0xac, 0x9c, 0x06, 0xb3, 0x3a, 0xcb, 0xa6, 0x96, 0x7f, 0x44, 0x7f, 0x38,
	0x52, 0x59, 0x69, 0xa1, 0x32, 0xe5, 0xdc, 0x9b, 0x57, 0xf4, 0x4a, 0xbc, 0x1d, 0xa6, 0x37, 0x06,
	0x9f, 0x13, 0x2d, 0x40, 0xde, 0x6b, 0x87, 0x96, 0xd7, 0xc4, 0xba, 0x35, 0xb7, 0x39, 0x1c, 0x31,
	0x47, 0x3b, 0x01, 0x77, 0xdd, 0x29, 0xf6, 0x6f, 0x95, 0x41, 0x64, 0xa9, 0x61, 0xfa, 0x54, 0xa5,
	0x86, 0x97, 0xa2, 0x89, 0x77, 0x3c, 0x5f, 0x74, 0x39, 0x1b, 0xd8, 0x27, 0x97, 0x8f, 0x47, 0x5b,
	0x50, 0x24, 0x58, 0x4c, 0xd7, 0xe2, 0x19, 0xb7, 0x17, 0x95, 0xe4, 0x5e, 0x4a, 0xd9, 0xe7, 0xd6,
	0x38, 0xb0, 0x11, 0xe3, 0x41, 0x57, 0x21, 0x43, 0xd2, 0x09, 0xce, 0x69, 0x86, 0x3f, 0x46, 0x40,
	0x68, 0x15, 0xb2, 0xd8, 0xf7, 0x3d, 0x9f, 0x79, 0x19, 0x2e, 0xe8, 0x3c, 0xcd, 0x4a, 0x04, 0x18,
	0x18, 0x14, 0x41, 0xed, 0xa7, 0xa7, 0xa1, 0x28, 0x9e, 0x6f, 0x14, 0x6c, 0x1e, 0xb2, 0x98, 0x96,
	0x39, 0x3d, 0x31, 0x8d, 0x4c, 0xeb, 0x86, 0x11, 0x49, 0x3a, 0x31, 0x5b, 0xc9, 0x12, 0x9b, 0xc0,
	0x10, 0x53, 0xa1, 0x5d, 0xe0, 0x92, 0x58, 0x7d, 0xdb, 0x6c, 0x90, 0x03, 0x4a, 0xf9, 0xe3, 0xf5,
	0x44, 0x07, 0x74, 0x6e, 0x91, 0x22, 0x0b, 0x8c, 0x49, 0x86, 0x76, 0x91, 0x62, 0xad, 0x7d, 0x6f,
	0x05, 0x0a, 0xfc, 0x8f, 0xa3, 0x51, 0xd3, 0x36, 0x4e, 0xc9, 0x4c, 0xd8, 0x99, 0x2f, 0x4e, 0xcd,
	0xbc, 0x0d, 0xe5, 0x0e, 0xa1, 0x37, 0xab, 0x77, 0xa7, 0x4b, 0x41, 0x2c, 0xed, 0xa2, 0xab, 0x50,
	0xc0, 0x8f, 0xac, 0x46, 0xdb, 0xc6, 0xf6, 0xa0, 0x9a, 0xb6, 0x9c, 0x50, 0x09, 0x00, 0xd1, 0x4a,
	0x27, 0xaf, 0xd1, 0x4a, 0xa7, 0xcb, 0xc5, 0x58, 0xd0, 0x77, 0x31, 0x2e, 0x40, 0xde, 0xc5, 0xe1,
	0x43, 0xcf, 0x7f, 0xc0, 0x0c, 0xc1, 0xea, 0x8c, 0x85, 0xc1, 0x89, 0x2a, 0xe0, 0x90, 0xa4, 0x0a,
	0xf8, 0xd5, 0x48, 0xaa, 0xf4, 0x9b, 0xda, 0x25, 0xc4, 0x23, 0x20, 0x64, 0x43, 0x71, 0x87, 0x4b,
	0x45, 0xac, 0x7e, 0xe8, 0xcd, 0xe1, 0xee, 0x0e, 0xff, 0x60, 0xc4, 0x88, 0x6b, 0x5f, 0xce, 0x41,
	0x9e, 0xfd, 0x3c, 0x0a, 0xb7, 0x67, 0xa9, 0xa3, 0x22, 0x74, 0xc2, 0xf0, 0x9c, 0x16, 0xe4, 0xcd,
	0x46, 0xc3, 0x7b, 0x88, 0x79, 0x8b, 0x85, 0xbb, 0xc7, 0xb3, 0xee, 0x73, 0x0b, 0x14, 0xab, 0xb0,
	0x33, 0xf1, 0x69, 0xd0, 0x2e, 0x64, 0x48, 0xd9, 0x17, 0x7a, 0xaf, 0x5e, 0x3d, 0xa6, 0xe9, 0xee,
	0x07, 0xd2, 0x5c, 0x64, 0x82, 0xda, 0x6f, 0xa4, 0x20, 0xcf, 0x9e, 0x02, 0xad, 0x42, 0xb9, 0xed,
	0x06, 0xce, 0xae, 0x8b, 0xed, 0xba, 0x23, 0xa2, 0x53, 0xdf, 0xd3, 0x53, 0xef, 0x62, 0x63, 0xd7,
	0x48, 0x78, 0x6a, 0xa9, 0x1d, 0x7f, 0x45, 0xd7, 0xa1, 0x4c, 0x5b, 0xae, 0xb3, 0x80, 0xa6, 0x09,
	0x95, 0x23, 0x14, 0x69, 0xb3, 0x14, 0x0a, 0x5d, 0x84, 0x6c, 0xd3, 0x73, 0xf1, 0x01, 0x53, 0xfd,
	0x9e, 0xee, 0xa9, 0x36, 0x46, 0x83, 0x56, 0xcf, 0x18, 0x74, 0xf4, 0x62, 0x51, 0xec, 0x53, 0xed,
	0x7b, 0x52, 0x90, 0x21, 0x85, 0x70, 0x8e, 0xef, 0xa5, 0xc4, 0x43, 0x4d, 0x68, 0x3d, 0x54, 0x8e,
	0x6e, 0x65, 0xed, 0x73, 0x13, 0x90, 0xa3, 0x12, 0xcd, 0x88, 0xdc, 0x2b, 0xc9, 0xd3, 0x9f, 0x2c,
	0xc7, 0x7f, 0xfe, 0x96, 0x64, 0xa8, 0xb8, 0x9a, 0x48, 0x71, 0xa0, 0x67, 0x7e, 0xf6, 0x7b, 0x9e,
	0x81, 0xa2, 0xf0, 0x8f, 0x8e, 0xed, 0x13, 0x63, 0xfb, 0xc4, 0x71, 0xd9, 0x27, 0x7a, 0x96, 0x92,
	0x16, 0xa7, 0xad, 0x4f, 0xa0, 0xe9, 0xeb, 0x30, 0x49, 0x3f, 0x89, 0x72, 0x9e, 0xb4, 0xe0, 0xf8,
	0xb3, 0x03, 0x91, 0xce, 0x51, 0xac, 0xac, 0x22, 0xa7, 0x51, 0x09, 0xe4, 0xaf, 0x68, 0xbe, 0x33,
	0x5a, 0xb4, 0xac, 0x14, 0x7a, 0xc1, 0x82, 0x44, 0xb7, 0xa0, 0x42, 0x61, 0xf9, 0x23, 0x55, 0xfa,
	0x67, 0xc1, 0xc7, 0x8f, 0xb4, 0x14, 0x81, 0xf1, 0x27, 0x2a, 0x5b, 0xd2, 0x37, 0x91, 0x20, 0xa7,
	0xd9, 0x75, 0x8b, 0xc7, 0xbe, 0xc6, 0x3e, 0xa6, 0x6a, 0x52, 0x1f, 0xd3, 0x0f, 0x4b, 0x95, 0xdd,
	0x94, 0x3d, 0x1c, 0x7b, 0xa7, 0x5f, 0xd3, 0xed, 0x8f, 0xa4, 0xa0, 0x8a, 0x69, 0xad, 0x8c, 0xba,
	0xb7, 0x53, 0xb7, 0x4c, 0x1f, 0xb3, 0x12, 0x5d, 0x0a, 0xcf, 0x7b, 0x75, 0x98, 0x9a, 0x1c, 0x15,
	0x2c, 0x7f, 0x45, 0xdf, 0x9d, 0x82, 0x69, 0xc7, 0xb5, 0x3c, 0x52, 0x52, 0xcb, 0x67, 0x25, 0x66,
	0xd4, 0x23, 0x54, 0x5f, 0x1e, 0xae, 0x86, 0xcd, 0x14, 0x9f, 0x9a, 0xff, 0x01, 0x6d, 0x40, 0xa9,
	0x65, 0xfa, 0xa1, 0x63, 0x39, 0x2d, 0x53, 0x24, 0x38, 0x3d, 0x33, 0xf8, 0x54, 0x6e, 0xc6, 0x40,
	0x86, 0x8c, 0x01, 0x7d, 0x0b, 0x94, 0xcc, 0x56, 0xcb, 0x73, 0xdc, 0x90, 0x38, 0x21, 0x94, 0xfd,
	0x20, 0x9a, 0x35, 0x32, 0x16, 0xe2, 0x39, 0x0c, 0x79, 0x42, 0x29, 0xb4, 0xe6, 0xbc, 0x56, 0x68,
	0xcd, 0x15, 0xc8, 0x35, 0xb0, 0xbb, 0x1b, 0xee, 0x31, 0x47, 0x47, 0x6f, 0x9b, 0x66, 0x9b, 0x35,
	0x75, 0x61, 0xe3, 0xd1, 0x0d, 0xc8, 0xd1, 0x82, 0xc8, 0xba, 0x71, 0x93, 0x0c, 0x0c, 0xad, 0x41,
	0xb1, 0xbb, 0x1a, 0xc5, 0x60, 0xfa, 0x37, 0x27, 0x2a, 0x50, 0x18, 0x31, 0x34, 0xf2, 0x21, 0x6f,
	0x5a, 0x64, 0x04, 0xab, 0x42, 0x71, 0xfc, 0x3e, 0xdf, 0x05, 0x8a, 0xdf, 0xe0, 0x13, 0xa1, 0xaf,
	0x87, 0xea, 0x9e, 0x17, 0xb4, 0x9c, 0xd0, 0x6c, 0x70, 0x0b, 0x6a, 0xad, 0x7f, 0x88, 0x66, 0xfc,
	0x12, 0xab, 0x9d, 0x80, 0x46, 0x37, 0x26, 0x74, 0x53, 0xea, 0x18, 0x4c, 0x4b, 0x4a, 0x7f, 0x68,
	0x30, 0xd6, 0x23, 0x5a, 0x00, 0x7f, 0x36, 0x05, 0x53, 0xcc, 0x51, 0x13, 0xdb, 0x9d, 0x9f, 0x3a,
	0x0d, 0xfb, 0x62, 0x95, 0x4d, 0x2b, 0xec, 0xce, 0x01, 0xe4, 0xa3, 0x0b, 0x53, 0xf7, 0x76, 0x66,
	0x9e, 0x3e, 0xf1, 0x98, 0xb5, 0x5c, 0x34, 0xd5, 0xc6, 0x4e, 0xed, 0x9f, 0x4e, 0x40, 0xa5, 0x83,
	0xb9, 0x8d, 0x86, 0x89, 0x86, 0x4b, 0x0d, 0x99, 0xe1, 0xa5, 0x86, 0xeb, 0x82, 0x70, 0x64, 0x55,
	0x08, 0x47, 0x0c, 0x4f, 0xa1, 0x6a, 0xbf, 0x31, 0x01, 0x65, 0x99, 0x57, 0x8f, 0x46, 0x78, 0x58,
	0x87, 0xc4, 0x93, 0x51, 0x91, 0x78, 0xc4, 0xc2, 0x30, 0xc9, 0x67, 0xd8, 0x75, 0xfd, 0xb6, 0x0c,
	0x94, 0x24, 0x6e, 0x33, 0x22, 0x05, 0x68, 0x98, 0x71, 0x24, 0x81, 0xdc, 0x76, 0x49, 0x6f, 0x3d,
	0x05, 0x83, 0xfb, 0x1b, 0x29, 0x5a, 0xa0, 0x74, 0xdf, 0xb1, 0xdb, 0x66, 0x83, 0x59, 0x38, 0x14,
	0x48, 0x4f, 0xfb, 0xf1, 0x54, 0x73, 0x95, 0x9e, 0xb5, 0xf6, 0x9f, 0xd3, 0x50, 0x8c, 0x0b, 0x2e,
	0x8d, 0xc0, 0x01, 0xf8, 0xab, 0x29, 0xa2, 0x0f, 0xda, 0xd4, 0x49, 0xa6, 0xec, 0x84, 0x08, 0xa5,
	0x00, 0xfb, 0xe7, 0x35, 0x7c, 0x02, 0x76, 0xdc, 0xca, 0xe9, 0x79, 0xfd, 0xe2, 0x89, 0xf1, 0x93,
	0x8a, 0xca, 0x49, 0xd9, 0x24, 0x95, 0x93, 0x2e, 0x43, 0xc6, 0x37, 0xdd, 0x07, 0xec, 0xe4, 0xf5,
	0xb4, 0x04, 0x6d, 0x12, 0x47, 0xe0, 0x3e, 0x5e, 0x73, 0x23, 0x40, 0xd3, 0x7d, 0x50, 0xfb, 0xbe,
	0x02, 0x54, 0xbb, 0x04, 0x85, 0x51, 0x38, 0x04, 0xdf, 0x00, 0x33, 0x2d, 0x1f, 0xd7, 0x4d, 0xbb,
	0xe9, 0x04, 0xd1, 0x0f, 0xf5, 0x44, 0x91, 0xb8, 0x4f, 0xb4, 0x7c, 0xbc, 0xc0, 0x51, 0x48, 0x69,
	0xa0, 0x6f, 0x40, 0xce, 0xf3, 0x9d, 0x5d, 0xc7, 0x3d, 0x31, 0x67, 0x93, 0x90, 0xb2, 0xd8, 0x44,
	0xe8, 0x36, 0x94, 0xa3, 0x97, 0x09, 0xeb, 0xac, 0x4a, 0x43, 0x4e, 0xd3, 0xc9, 0x41, 0x80, 0xb7,
	0x68, 0xd9, 0x86, 0xdb, 0x50, 0x96, 0xd7, 0x46, 0x37, 0xd0, 0xbd, 0x24, 0x2d, 0x0a, 0xda, 0x84,
	0xaa, 0xed, 0xe0, 0xb0, 0xde, 0x8a, 0x73, 0xf7, 0x0b, 0x9a, 0x35, 0xdf, 0x22, 0xf8, 0xcd, 0xb8,
	0x51, 0x86, 0x01, 0x53, 0xa4, 0x1e, 0xa0, 0xd9, 0xa8, 0x5b, 0x5e, 0xdb, 0x0f, 0x71, 0x70, 0xc0,
	0x0c, 0x1f, 0xea, 0xf1, 0x51, 0x0c, 0xc1, 0x12, 0x83, 0x47, 0x1f, 0x85, 0xb3, 0x1c, 0xa7, 0x1c,
	0xc5, 0x05, 0x7a, 0x68, 0x11, 0xc3, 0x21, 0x47, 0x73, 0x7d, 0x8a, 0xf8, 0x6f, 0x42, 0xc7, 0xa5,
	0x62, 0x74, 0xe9, 0xa4, 0xcf, 0x83, 0x3c, 0x1b, 0xfa, 0x06, 0x38, 0x6f, 0x3b, 0x81, 0xb5, 0x67,
	0xfa, 0xbb, 0xb8, 0x2e, 0x87, 0x06, 0x68, 0x56, 0xf5, 0x39, 0x27, 0xb0, 0x2c, 0xc7, 0x48, 0x6a,
	0xbf, 0x92, 0x86, 0x02, 0x9f, 0x77, 0x14, 0x68, 0xc2, 0xa7, 0x24, 0x75, 0x47, 0x99, 0x2d, 0x5c,
	0x93, 0xd8, 0x42, 0x82, 0xf8, 0x45, 0xa1, 0x23, 0xc5, 0xe2, 0x74, 0x76, 0x40, 0xe8, 0x2e, 0x17,
	0xa7, 0x39, 0x92, 0x23, 0x82, 0x84, 0x12, 0xa6, 0xb8, 0xcc, 0xbf, 0x2c, 0xd9, 0xa6, 0xf5, 0xf5,
	0x9d, 0xd9, 0xff, 0x0a, 0x50, 0x58, 0x71, 0x6d, 0x62, 0x0f, 0x18, 0x1b, 0xa4, 0xc7, 0x06, 0xe9,
	0xa4, 0x06, 0xe9, 0xdb, 0x5d, 0x06, 0xe9, 0x3e, 0x56, 0x07, 0x7a, 0xd8, 0xfa, 0x68, 0x96, 0x1b,
	0x50, 0xb5, 0x3c, 0xd7, 0xc5, 0xb4, 0xcf, 0x3b, 0x91, 0xfc, 0x4b, 0x5a, 0x9a, 0xd4, 0x64, 0x0c,
	0x4e, 0x12, 0xb7, 0xb8, 0x13, 0xbf, 0xac, 0xe1, 0xc4, 0xff, 0x63, 0x29, 0x38, 0xdf, 0x34, 0x5d,
	0x5a, 0x41, 0xf6, 0xf4, 0xc3, 0xdd, 0xce, 0xf1, 0xb9, 0x3b, 0xe2, 0xdd, 0xae, 0xd3, 0xac, 0x5e,
	0x93, 0xd4, 0x9a, 0x4e, 0xf7, 0x3b, 0xfd, 0x4b, 0x74, 0xd8, 0x66, 0xb4, 0xd4, 0x06, 0x07, 0x92,
	0x88, 0x4c, 0x55, 0x4b, 0x17, 0x32, 0xa0, 0xdc, 0x32, 0x0f, 0x1a, 0x9e, 0x69, 0xd3, 0xed, 0x98,
	0xd2, 0x62, 0xb2, 0x62, 0x5f, 0x4a, 0x0c, 0x09, 0xd9, 0x94, 0x4d, 0x98, 0xe6, 0x38, 0x9b, 0x4e,
	0x13, 0x53, 0xc4, 0xd3, 0xfd, 0xdf, 0x6a, 0xdd, 0x69, 0x62, 0xd1, 0xfd, 0xb8, 0xca, 0xc0, 0xf9,
	0x8f, 0xe8, 0x65, 0xc8, 0x9b, 0xb6, 0xed, 0xe3, 0x20, 0x60, 0x01, 0x69, 0xfd, 0x28, 0x4b, 0x9c,
	0x32, 0xcd, 0x60, 0xa2, 0xc5, 0xd9, 0xc3, 0xa6, 0x8d, 0x7d, 0x66, 0xd5, 0x1d, 0x74, 0x4e, 0xd8,
	0xe8, 0xf9, 0x6b, 0x12, 0x05, 0x7e, 0x4e, 0x9d, 0x02, 0xd3, 0x6b, 0x30, 0xfb, 0xe9, 0x12, 0x4c,
	0xaf, 0xb8, 0xbe, 0xd7, 0x68, 0xd0, 0x8c, 0xab, 0x71, 0x62, 0xd5, 0x98, 0x12, 0x8f, 0x46, 0xe8,
	0xb2, 0x14, 0x98, 0x5a, 0x3e, 0xd5, 0xc0, 0x54, 0x39, 0x8d, 0xa8, 0xf2, 0x98, 0xd3, 0x88, 0x26,
	0x4f, 0x3f, 0x8d, 0xc8, 0x4f, 0x50, 0x5e, 0x27, 0x69, 0x1e, 0x1b, 0xf7, 0x17, 0xca, 0x31, 0xa2,
	0x53, 0xa7, 0x16, 0x23, 0x9a, 0x2c, 0xbb, 0xf5, 0x10, 0xb5, 0x9d, 0xfd, 0xbb, 0x25, 0x40, 0xf2,
	0xaf, 0xe3, 0xfc, 0x91, 0x31, 0x11, 0xfe, 0x1a, 0x22, 0xc2, 0xdf, 0x1c, 0x67, 0x39, 0x28, 0xdb,
	0x22, 0x6e, 0xe8, 0x55, 0x15, 0x39, 0x74, 0x27, 0x8e, 0x4c, 0x72, 0x28, 0x1f, 0x4f, 0x92, 0x43,
	0x45, 0x3f, 0xc9, 0x61, 0x98, 0x74, 0xd6, 0x43, 0x34, 0xb9, 0x7a, 0xfa, 0x34, 0xf9, 0xc8, 0x34,
	0x9e, 0xa9, 0xaf, 0xad, 0x34, 0x9e, 0xe9, 0xc7, 0x95, 0xc6, 0x93, 0x30, 0x11, 0xf0, 0x10, 0xc1,
	0x9e, 0xfd, 0xb1, 0x73, 0x50, 0xe9, 0x88, 0x26, 0x19, 0x93, 0xf0, 0x31, 0x09, 0x4f, 0x4a, 0xc2,
	0x37, 0xba, 0x48, 0x78, 0xef, 0x68, 0x38, 0xf9, 0xc4, 0xf5, 0x31, 0x6b, 0x7c, 0xbc, 0x47, 0x98,
	0xdd, 0x0b, 0x4a, 0x88, 0xfb, 0x87, 0xda, 0xc5, 0xa5, 0xdf, 0x13, 0x78, 0x48, 0xd7, 0xe5, 0x78,
	0x9a, 0xca, 0x80, 0xd0, 0xbf, 0x8e, 0x67, 0x3a, 0x32, 0xa6, 0xe6, 0x51, 0x5c, 0x47, 0x41, 0x59,
	0xfa, 0xbd, 0x3a, 0x44, 0xf3, 0xd2, 0xb8, 0x9a, 0x42, 0x6f, 0x9b, 0x4d, 0xf5, 0xf1, 0xd9, 0x6c,
	0x62, 0x9b, 0xcb, 0x94, 0x96, 0xcd, 0xe5, 0xbb, 0x08, 0xcb, 0xa0, 0x61, 0x67, 0x75, 0xce, 0xff,
	0xa7, 0x4f, 0x29, 0xf0, 0xad, 0xea, 0x77, 0xfe, 0x80, 0xbe, 0x2d, 0x05, 0x65, 0xcb, 0xf4, 0x71,
	0x9d, 0xbc, 0xe3, 0x09, 0x56, 0x28, 0xe8, 0x60, 0x5e, 0xa5, 0x68, 0xca, 0x75, 0x3a, 0x23, 0x6a,
	0x46, 0x74, 0xce, 0x6c, 0x9e, 0x58, 0xef, 0xaa, 0xe8, 0x44, 0xdf, 0xc3, 0x66, 0xd3, 0x20, 0xd3,
	0xc8, 0xa1, 0x61, 0xe7, 0x4e, 0x29, 0x34, 0xac, 0xf6, 0x95, 0x51, 0x8c, 0x3a, 0xda, 0xe8, 0x8a,
	0x3a, 0x1a, 0x9a, 0x90, 0x0e, 0x1b, 0x21, 0xf3, 0x73, 0xa3, 0x16, 0x1e, 0xf1, 0x2d, 0x89, 0xa2,
	0x23, 0x5e, 0x1e, 0x2a, 0x3a, 0xe2, 0xb1, 0x87, 0x39, 0x24, 0x6b, 0x08, 0xdf, 0x71, 0xc6, 0x66,
	0x7f, 0xfb, 0x7d, 0x30, 0xb5, 0xf2, 0xa8, 0x65, 0x92, 0x65, 0xdc, 0xf4, 0xbd, 0x1d, 0xa7, 0x31,
	0x96, 0x19, 0xdf, 0xa2, 0x32, 0xe3, 0x33, 0x90, 0x6e, 0xfb, 0x0d, 0x96, 0x6f, 0xd9, 0x77, 0x37,
	0xa2, 0x71, 0x87, 0xca, 0x86, 0x27, 0xa9, 0x04, 0x77, 0x05, 0xf2, 0xfb, 0xd8, 0x0f, 0xe2, 0x20,
	0x83, 0x81, 0x8d, 0xb9, 0xd8, 0xf0, 0x44, 0x1e, 0xad, 0x75, 0x41, 0x87, 0x2b, 0xfd, 0x6b, 0x89,
	0x6f, 0xb6, 0xb7, 0x1b, 0x4e, 0xb7, 0xa3, 0xfa, 0x88, 0x16, 0xac, 0x65, 0xfc, 0x28, 0xa2, 0xa8,
	0x91, 0x0a, 0x66, 0x36, 0x98, 0xac, 0x37, 0x30, 0xb5, 0xb6, 0x03, 0x08, 0xbd, 0xc8, 0x8a, 0xcf,
	0x54, 0x15, 0x95, 0x7a, 0x5a, 0x7e, 0xe6, 0x1a, 0x14, 0x5b, 0xd1, 0x33, 0x06, 0x7b, 0x42, 0x8b,
	0x1e, 0xb4, 0x04, 0x31, 0x00, 0xba, 0x11, 0x3b, 0xd1, 0xa8, 0x38, 0xf5, 0xbe, 0x01, 0x4e, 0xb4,
	0x65, 0x1c, 0x9a, 0x4e, 0x23, 0xf6, 0xa2, 0x2d, 0x1e, 0xd5, 0x22, 0xa5, 0xe7, 0xb3, 0xaf, 0x9b,
	0xfe, 0x03, 0xdb, 0x7b, 0xe8, 0x76, 0x66, 0xf8, 0xae, 0x40, 0xa9, 0x1d, 0xe0, 0x3a, 0xaf, 0xd1,
	0x7b, 0xb6, 0xbf, 0xdf, 0xeb, 0x7e, 0x40, 0xae, 0x30, 0x2d, 0xcb, 0x0b, 0xed, 0x80, 0x7f, 0x46,
	0xaf, 0x42, 0xf9, 0x13, 0x6d, 0xdf, 0x09, 0x6c, 0x87, 0x78, 0x3b, 0x99, 0xa4, 0xa2, 0x5e, 0xdf,
	0x52, 0x06, 0x46, 0x1f, 0x87, 0xca, 0x8e, 0xf3, 0x08, 0xdb, 0x75, 0x7e, 0x28, 0xcf, 0x0f, 0xa8,
	0xcc, 0xd0, 0x45, 0x39, 0xe7, 0x6e, 0x46, 0xd0, 0xaf, 0x53, 0x60, 0xa3, 0xbc, 0x23, 0x7d, 0x43,
	0xdf, 0x04, 0x55, 0x9e, 0x53, 0x5d, 0x0f, 0x0e, 0x82, 0x10, 0x37, 0x59, 0xde, 0xc0, 0x65, 0x65,
	0xec, 0x2b, 0x0c, 0x7e, 0x8b, 0x80, 0x1b, 0x93, 0xb8, 0xe3, 0x3b, 0x32, 0xe0, 0x9c, 0xe3, 0x92,
	0x5f, 0xea, 0x36, 0x0e, 0x9c, 0x5d, 0x1a, 0x4f, 0x13, 0xb0, 0x7a, 0x49, 0x03, 0xcf, 0xe5, 0x59,
	0x06, 0xbc, 0x2c, 0xc1, 0xa2, 0xd7, 0xc9, 0x4e, 0xf3, 0xef, 0x33, 0x33, 0xfd, 0xcb, 0x05, 0x1f,
	0x7a, 0x62, 0x09, 0x97, 0x21, 0x23, 0x42, 0x77, 0x01, 0xc5, 0xcf, 0xca, 0x79, 0x13, 0x2b, 0xd4,
	0x3c, 0xf0, 0x49, 0xa7, 0xc5, 0x93, 0x72, 0x48, 0xf4, 0x0a, 0x94, 0x4c, 0xd2, 0x7c, 0xb2, 0xee,
	0xb9, 0x8d, 0x03, 0x96, 0x4e, 0x30, 0x10, 0x11, 0x50, 0x98, 0x0d, 0xb7, 0x71, 0x80, 0x6e, 0x02,
	0x5f, 0xcf, 0xba, 0x8b, 0x83, 0x10, 0xdb, 0x33, 0x6f, 0x57, 0x43, 0x52, 0x61, 0x60, 0x77, 0x09,
	0x14, 0x5a, 0x87, 0xb3, 0x02, 0x8f, 0x17, 0xd6, 0x77, 0x3c, 0xbf, 0xde, 0xae, 0x3b, 0x2c, 0x73,
	0x60, 0x20, 0x32, 0x7e, 0x46, 0xee, 0x7a, 0xe1, 0x4d, 0xcf, 0xbf, 0xbf, 0x86, 0x3e, 0x06, 0x33,
	0x1c, 0x5d, 0xcb, 0x0b, 0xc2, 0xba, 0xe5, 0x79, 0xbe, 0xed, 0xb8, 0xc4, 0x10, 0xf8, 0xb4, 0x1a,
	0xce, 0x27, 0x18, 0x82, 0x4d, 0x2f, 0x08, 0x97, 0x62, 0x70, 0xb4, 0x01, 0x53, 0xb6, 0x13, 0xb4,
	0x1a, 0xe6, 0x41, 0x5d, 0x30, 0xd3, 0x77, 0x68, 0x30, 0xd3, 0x2a, 0x83, 0xe6, 0x3f, 0xa2, 0x3b,
	0x30, 0xdd, 0x70, 0x9a, 0x4e, 0x88, 0xed, 0x3a, 0xe6, 0x27, 0x61, 0xe6, 0x9d, 0x6a, 0x0f, 0x39,
	0xc5, 0x20, 0xc5, 0x11, 0xaa, 0xfd, 0x70, 0x1a, 0xca, 0xf2, 0x7d, 0x1a, 0x8d, 0x38, 0xee, 0x1c,
	0xbb, 0xfb, 0x19, 0x75, 0xff, 0x3c, 0x03, 0x41, 0xaf, 0xc4, 0xcc, 0x32, 0xab, 0xb2, 0x08, 0xb1,
	0x83, 0x9f, 0x33, 0xcd, 0x2d, 0xc8, 0x34, 0x3d, 0x9b, 0xc7, 0x59, 0xf6, 0x24, 0x3c, 0x94, 0x9e,
	0xb0, 0x65, 0x27, 0x61, 0xbd, 0x41, 0xe0, 0xb8, 0xbb, 0xeb, 0x9e, 0xdd, 0x55, 0xf8, 0x3b, 0x42,
	0x56, 0xfb, 0x7b, 0x13, 0x30, 0xd9, 0x49, 0x99, 0xde, 0xf2, 0x3b, 0x75, 0x45, 0x73, 0xa7, 0xc4,
	0x0e, 0xd5, 0x3e, 0x37, 0x09, 0x25, 0x89, 0x68, 0x8e, 0xc2, 0x4a, 0x9a, 0x90, 0x67, 0xf4, 0x9a,
	0x2d, 0xe5, 0xad, 0x24, 0xec, 0x43, 0xfe, 0xbc, 0x46, 0xd1, 0x19, 0x1c, 0x6f, 0x34, 0x05, 0xa3,
	0x71, 0x6c, 0xbd, 0x87, 0x9e, 0x82, 0x1d, 0x68, 0x83, 0xe3, 0xad, 0xfd, 0x64, 0x16, 0xd0, 0xe1,
	0x47, 0x18, 0x85, 0xfd, 0xf9, 0xce, 0x54, 0x27, 0x8f, 0xa7, 0x39, 0x26, 0xf8, 0x98, 0x36, 0xe9,
	0x88, 0x9f, 0x7a, 0x09, 0x05, 0xb5, 0x2f, 0x4f, 0xc0, 0xd3, 0x7d, 0x87, 0x8f, 0xc2, 0x72, 0x0f,
	0xaf, 0xba, 0x3e, 0x07, 0xe9, 0x76, 0x80, 0x15, 0x0b, 0xf9, 0x47, 0x43, 0xbb, 0x0f, 0x2f, 0x3b,
	0xdc, 0xe3, 0xc3, 0x3b, 0xe8, 0xfa, 0x1f, 0xf1, 0x93, 0xea, 0xe1, 0x3d, 0x3c, 0x7c, 0x7c, 0x78,
	0x13, 0x1d, 0xde, 0x64, 0x2d, 0xf4, 0xba, 0x37, 0x7a, 0xf6, 0x0b, 0x9f, 0x4f, 0xc1, 0xb9, 0x95,
	0x47, 0xad, 0x86, 0x49, 0x77, 0x63, 0x63, 0x87, 0xd7, 0x4e, 0x1a, 0x5b, 0xbb, 0xc6, 0x1e, 0xd2,
	0x84, 0x1e, 0xd2, 0xbb, 0x5d, 0x1e, 0xd2, 0x4b, 0x7d, 0xe8, 0xce, 0xa1, 0x83, 0x77, 0x44, 0x9c,
	0x0b, 0x77, 0x62, 0x96, 0x92, 0xf4, 0xaf, 0x5e, 0x84, 0x42, 0xd0, 0xde, 0xae, 0x27, 0xf1, 0x82,
	0xe6, 0x83, 0xf6, 0x36, 0x09, 0x20, 0x96, 0x2a, 0xc0, 0x57, 0x4e, 0xab, 0x02, 0xfc, 0x2d, 0xa8,
	0x6e, 0x3b, 0x8d, 0x46, 0xf4, 0x3c, 0x75, 0xe6, 0xd5, 0x98, 0x54, 0xf2, 0x13, 0x4e, 0x72, 0x30,
	0xfa, 0x5d, 0x0e, 0x91, 0xa9, 0x0e, 0x51, 0xf1, 0x7d, 0xea, 0x54, 0x2b, 0xbe, 0x3f, 0xb6, 0xe2,
	0xa5, 0x72, 0x8c, 0x28, 0x7a, 0xcc, 0x31, 0xa2, 0x67, 0x4f, 0x3f, 0x1e, 0xe9, 0x9b, 0xa1, 0x20,
	0x8a, 0xa9, 0x28, 0x97, 0x1c, 0x19, 0xd2, 0xa7, 0x2c, 0x66, 0xec, 0xa8, 0x37, 0x7f, 0xfe, 0xf4,
	0xea, 0xcd, 0x37, 0x20, 0x6b, 0x35, 0x4c, 0x87, 0x5b, 0x1e, 0x15, 0xe6, 0x7c, 0x41, 0xaf, 0x88,
	0xce, 0x52, 0x84, 0xdd, 0xa0, 0x93, 0xa0, 0xef, 0x48, 0xc1, 0x24, 0xf9, 0x54, 0xf7, 0x59, 0x7c,
	0x12, 0x33, 0x45, 0x1e, 0x7f, 0x05, 0x1d, 0x3a, 0x2f, 0x9b, 0xc5, 0xa8, 0x58, 0xf2, 0x57, 0x39,
	0x7e, 0x6f, 0xe6, 0x78, 0xe2, 0xf7, 0xde, 0xa6, 0x1f, 0xbf, 0x27, 0xf5, 0x16, 0xaa, 0xf5, 0xef,
	0x2d, 0x74, 0x14, 0xaf, 0xe0, 0x6d, 0x85, 0xe8, 0x7b, 0x72, 0x4c, 0xe8, 0xe7, 0x53, 0x50, 0x6e,
	0xf9, 0x92, 0x25, 0xfe, 0xed, 0xaa, 0xeb, 0xfb, 0xad, 0x7a, 0xd1, 0x91, 0xeb, 0xd8, 0x66, 0xfe,
	0x10, 0x76, 0x96, 0xf5, 0x4a, 0x48, 0xbf, 0xee, 0x50, 0x51, 0x2c, 0x7e, 0x52, 0xa3, 0xe3, 0xb9,
	0xd1, 0xe7, 0x53, 0x70, 0x9e, 0xe6, 0x04, 0x9b, 0x8d, 0x7a, 0xc7, 0x1b, 0x3d, 0x75, 0x42, 0xf1,
	0x9e, 0x87, 0xde, 0xc8, 0x38, 0xc7, 0x1f, 0x40, 0x7e, 0x4e, 0xb4, 0x0a, 0xd9, 0x96, 0x79, 0x80,
	0x31, 0x33, 0xb6, 0x5e, 0xd0, 0xda, 0xb5, 0xcd, 0x08, 0xd2, 0xa0, 0x08, 0x90, 0x0d, 0x25, 0x52,
	0xfd, 0xb9, 0x49, 0x69, 0xde, 0x3b, 0xc8, 0x29, 0x58, 0xd4, 0xc2, 0xb7, 0xd5, 0x6e, 0xb5, 0x3c,
	0x3f, 0x74, 0xdc, 0xdd, 0xb5, 0x18, 0x93, 0x21, 0xa3, 0x45, 0x06, 0x14, 0x49, 0x94, 0x0a, 0x09,
	0x14, 0x79, 0xe7, 0x40, 0xf7, 0xc5, 0xe1, 0x39, 0x44, 0x10, 0x48, 0xc1, 0x62, 0x9f, 0xd0, 0x3d,
	0x39, 0x3c, 0xea, 0x5d, 0x04, 0xa7, 0x96, 0xa4, 0x73, 0x74, 0x94, 0xd4, 0x3d, 0x28, 0xb6, 0x78,
	0xc9, 0x80, 0x99, 0x77, 0x27, 0xc0, 0x2a, 0x15, 0x1c, 0x10, 0x88, 0xd0, 0x12, 0x40, 0xcb, 0xc7,
	0x16, 0xb6, 0x49, 0xd6, 0xf6, 0xac, 0xba, 0x4b, 0x5d, 0x02, 0x8b, 0x1e, 0x2d, 0xae, 0xce, 0xfd,
	0x1e, 0x7d, 0xd1, 0xee, 0xe8, 0xf2, 0xdc, 0xaf, 0x41, 0xc1, 0xb4, 0x2c, 0x22, 0x3e, 0xce, 0xbc,
	0x97, 0x20, 0xd5, 0xdb, 0x99, 0x05, 0x06, 0x6c, 0x08, 0x34, 0x68, 0x03, 0xce, 0xe2, 0x66, 0xab,
	0xe1, 0x1d, 0x34, 0x49, 0xdf, 0xb4, 0x66, 0xcb, 0xb4, 0x22, 0x0a, 0xf3, 0x3e, 0x25, 0xf9, 0x09,
	0xc5, 0xa0, 0x6b, 0x0c, 0x12, 0xad, 0x1e, 0x2e, 0xcd, 0xf4, 0x7e, 0x25, 0x64, 0x87, 0xea, 0x30,
	0xad, 0x40, 0xc6, 0x09, 0x71, 0x73, 0xe6, 0xeb, 0xfa, 0x77, 0xf4, 0x3c, 0x7a, 0xf9, 0x42, 0xdc,
	0x34, 0x08, 0x38, 0x59, 0x34, 0xdb, 0xae, 0x13, 0x54, 0x1f, 0x48, 0x70, 0x48, 0x16, 0x6c, 0x1b,
	0xdb, 0x04, 0x5f, 0xde, 0xb4, 0xc9, 0x07, 0x74, 0x0d, 0x20, 0xf4, 0x42, 0x92, 0x89, 0x1f, 0x84,
	0x33, 0x1f, 0x54, 0xa8, 0x11, 0x6a, 0x14, 0x09, 0xc0, 0x92, 0x17, 0x84, 0xe8, 0x0e, 0xa0, 0xb6,
	0x6b, 0x36, 0x1a, 0x9e, 0x55, 0xb7, 0xb1, 0xdd, 0xb6, 0xc2, 0x88, 0x61, 0xcc, 0x7c, 0x48, 0x05,
	0xcb, 0x34, 0x03, 0x5c, 0x16, 0x70, 0x68, 0x11, 0x2a, 0xf4, 0x59, 0x58, 0x6d, 0xec, 0x99, 0x0f,
	0xab, 0x20, 0x2a, 0x13, 0x18, 0xae, 0xc0, 0xde, 0x8d, 0x84, 0x76, 0xb2, 0x8d, 0x33, 0x1f, 0x19,
	0xe8, 0x9f, 0x3b, 0x92, 0x48, 0x35, 0x99, 0x40, 0x4e, 0x3e, 0x88, 0x32, 0xf2, 0xcf, 0x24, 0x29,
	0x23, 0x7f, 0x2f, 0xe2, 0x48, 0xc4, 0x63, 0x50, 0x77, 0xbd, 0x10, 0xcf, 0xcc, 0x25, 0xd8, 0xfe,
	0xbb, 0x5e, 0x88, 0x8d, 0x12, 0x43, 0x13, 0x7d, 0x41, 0xf6, 0xe1, 0x9a, 0xe4, 0xcf, 0x12, 0xc4,
	0x57, 0xb5, 0x10, 0x2f, 0x76, 0x14, 0x20, 0x3f, 0x54, 0x90, 0xfc, 0x97, 0xd3, 0x50, 0x96, 0x19,
	0xed, 0x28, 0x58, 0x6c, 0x84, 0xc8, 0x97, 0x39, 0x0d, 0x91, 0xef, 0x55, 0x28, 0xfb, 0x52, 0xab,
	0x58, 0xdd, 0x78, 0xa8, 0x0e, 0x60, 0xf4, 0x0a, 0x14, 0xe3, 0xfa, 0x1b, 0x39, 0xe5, 0xf8, 0x92,
	0x18, 0xa8, 0xf6, 0x1f, 0x32, 0x90, 0x25, 0x3c, 0x78, 0xb4, 0x6a, 0x40, 0x25, 0x30, 0x0e, 0xdc,
	0x81, 0x8a, 0xcf, 0xec, 0x32, 0xd4, 0x42, 0xa0, 0xbf, 0x33, 0x14, 0x9a, 0x98, 0x09, 0x7e, 0x60,
	0x22, 0x92, 0x8a, 0xfc, 0xf0, 0x40, 0xbd, 0x28, 0xd4, 0x57, 0x53, 0x8f, 0xad, 0x53, 0xfa, 0x69,
	0x76, 0x3d, 0xa7, 0xcb, 0x52, 0xfb, 0x7c, 0x11, 0xce, 0x1f, 0x29, 0xac, 0x8d, 0xc2, 0x41, 0xbc,
	0x05, 0x85, 0x20, 0x92, 0x99, 0xa3, 0x6b, 0x99, 0x51, 0x16, 0xb0, 0xe2, 0x1e, 0x07, 0x1c, 0xb8,
	0xa3, 0x61, 0x42, 0x76, 0xd8, 0x86, 0x09, 0x57, 0x59, 0x9d, 0x6b, 0xcd, 0x1a, 0x42, 0xb4, 0x79,
	0x75, 0x13, 0x72, 0xa1, 0xd3, 0x74, 0xdc, 0x5d, 0x56, 0x36, 0x68, 0x7d, 0x78, 0xb1, 0x7c, 0xee,
	0x1e, 0x41, 0x18, 0xdd, 0x17, 0x51, 0xc9, 0x9d, 0x4d, 0x82, 0x76, 0x20, 0x4b, 0xeb, 0xe3, 0xd1,
	0xce, 0x08, 0xab, 0xc7, 0x30, 0xdb, 0xeb, 0x11, 0x3e, 0x31, 0x11, 0x45, 0x8f, 0x2e, 0x89, 0x42,
	0xa3, 0x45, 0xb5, 0xae, 0xcf, 0x74, 0x74, 0xed, 0x33, 0x29, 0x80, 0xf8, 0xf1, 0x4f, 0xb9, 0x41,
	0x5a, 0x81, 0xef, 0x45, 0xed, 0x1f, 0x4e, 0x40, 0x96, 0xbc, 0xd7, 0xa1, 0x32, 0xf5, 0x29, 0xcd,
	0x32, 0xf5, 0xd7, 0xa1, 0xf0, 0x46, 0xdb, 0x74, 0x43, 0x27, 0xe4, 0x45, 0xe1, 0x7b, 0xda, 0x06,
	0x5f, 0x63, 0xe3, 0x56, 0xcf, 0x18, 0x02, 0x06, 0x2d, 0x77, 0xb4, 0xe2, 0x4e, 0xab, 0xb6, 0xe2,
	0x5e, 0x3d, 0xd3, 0xd1, 0x84, 0xfb, 0x40, 0x66, 0x68, 0x99, 0x13, 0xee, 0x7e, 0xbb, 0x7a, 0x46,
	0xe2, 0x84, 0x8b, 0x79, 0x76, 0xe2, 0x6a, 0x7f, 0x26, 0x0b, 0x05, 0xae, 0xe2, 0x8d, 0x89, 0x91,
	0x44, 0x8c, 0x7e, 0x22, 0x25, 0x19, 0x44, 0x95, 0x2b, 0xa0, 0x7d, 0x52, 0x0a, 0x21, 0x3f, 0x65,
	0xde, 0x26, 0x19, 0x54, 0x17, 0xa0, 0xc4, 0x4c, 0x6c, 0x4e, 0xa4, 0x8c, 0x28, 0xf6, 0x78, 0x91,
	0x61, 0x44, 0x04, 0x7b, 0x3e, 0x49, 0x04, 0xfb, 0x3a, 0x54, 0xde, 0x68, 0x9b, 0x0d, 0x67, 0x87,
	0x99, 0x54, 0x74, 0x9b, 0x82, 0x77, 0x42, 0xd7, 0xfe, 0xff, 0xb9, 0x11, 0x4b, 0x4f, 0x38, 0xb6,
	0x43, 0xda, 0x92, 0x2d, 0x31, 0xf4, 0x90, 0x2e, 0x27, 0xb3, 0xc4, 0xc4, 0x9f, 0x08, 0x87, 0x2a,
	0xd3, 0xa9, 0x18, 0xfb, 0x90, 0xac, 0x34, 0x5c, 0xea, 0xcc, 0x25, 0xc9, 0xab, 0xbb, 0x0d, 0xe5,
	0x96, 0x69, 0x3d, 0x30, 0x77, 0x71, 0x9d, 0xf0, 0x66, 0xdd, 0x9a, 0x7c, 0x0c, 0x38, 0xfa, 0xbd,
	0xf6, 0x7b, 0x29, 0xa8, 0x74, 0x3c, 0x33, 0xba, 0x07, 0x53, 0x16, 0x83, 0xa8, 0x5b, 0x14, 0x84,
	0x1d, 0x13, 0xd5, 0x19, 0x56, 0xcf, 0x18, 0x55, 0xab, 0xf3, 0x27, 0xf4, 0x49, 0x99, 0x48, 0x4f,
	0x9c, 0x50, 0xb9, 0x65, 0x91, 0x44, 0xd2, 0x49, 0xa5, 0x4b, 0xd2, 0xf6, 0xd6, 0xfe, 0x72, 0x16,
	0x8a, 0xc2, 0xc4, 0x35, 0xbe, 0x05, 0xd2, 0x2d, 0xe0, 0x31, 0xf3, 0x59, 0xad, 0x98, 0xf9, 0x96,
	0x6c, 0x6f, 0xcc, 0x25, 0xb8, 0x3b, 0x62, 0x33, 0xe2, 0x4f, 0x47, 0xdd, 0x1d, 0x31, 0x09, 0x39,
	0xb2, 0x1d, 0x43, 0xdf, 0xcc, 0x47, 0x56, 0xbc, 0xc8, 0xa1, 0x23, 0x1b, 0xbf, 0xf0, 0x77, 0xa6,
	0xc7, 0x9d, 0xff, 0x8e, 0xa3, 0xf3, 0xdf, 0x2b, 0xc4, 0xad, 0x53, 0x37, 0xdb, 0xe1, 0x5e, 0xdd,
	0xc7, 0x3b, 0x33, 0x59, 0xa5, 0x72, 0x5c, 0xd0, 0xf2, 0xf1, 0x42, 0x3b, 0xdc, 0x33, 0xf0, 0x4e,
	0xed, 0x5f, 0x67, 0xa0, 0xc0, 0xed, 0xc5, 0xa3, 0xb0, 0x11, 0xcf, 0xb1, 0x2b, 0x9f, 0x19, 0xac,
	0x82, 0xb0, 0xeb, 0xce, 0x19, 0x57, 0x36, 0x89, 0xb9, 0x64, 0x5b, 0xaa, 0xaa, 0x49, 0x49, 0xc5,
	0xf5, 0x44, 0xa6, 0x7a, 0xd1, 0x58, 0x20, 0x6e, 0x50, 0xcf, 0xf1, 0xd6, 0x7e, 0x39, 0x25, 0x55,
	0x22, 0xbd, 0x1a, 0x57, 0x6e, 0x4b, 0xf5, 0x97, 0xde, 0x16, 0xe8, 0xb0, 0xd5, 0x33, 0x71, 0xdd,
	0xb6, 0x83, 0x44, 0xf7, 0x3f, 0xa1, 0x3b, 0xb9, 0xf3, 0xfa, 0x43, 0xbc, 0x50, 0xb5, 0x1f, 0xfc,
	0x10, 0x64, 0xd6, 0x46, 0x24, 0xfc, 0xfb, 0xd8, 0x78, 0xd5, 0x5d, 0x98, 0x16, 0xfe, 0xb8, 0x7a,
	0xc3, 0x71, 0x1f, 0xd4, 0x1d, 0x9b, 0xdd, 0x67, 0x25, 0xb7, 0xd4, 0x24, 0xf7, 0xc2, 0xdd, 0x71,
	0xdc, 0x07, 0x6b, 0x36, 0xda, 0x80, 0x69, 0x21, 0x22, 0x08, 0x7c, 0x39, 0x75, 0x7c, 0x55, 0x01,
	0x1d, 0x23, 0x14, 0x04, 0x5c, 0x20, 0xcc, 0x6b, 0x20, 0x14, 0xd0, 0x0c, 0xe1, 0x16, 0x9c, 0x95,
	0x1c, 0x92, 0x02, 0x65, 0x41, 0x1d, 0xe5, 0xb4, 0x04, 0xcf, 0x90, 0x2e, 0x40, 0xde, 0xc7, 0xfb,
	0xd8, 0x6d, 0x63, 0xed, 0x7e, 0x90, 0x0c, 0x0e, 0x2d, 0x49, 0xd6, 0x26, 0xcd, 0x9e, 0x90, 0xb1,
	0x95, 0x69, 0x01, 0xf2, 0xac, 0x3b, 0x87, 0x6e, 0x90, 0x16, 0x87, 0x8b, 0x9e, 0x83, 0x9f, 0x37,
	0xdd, 0x38, 0x2d, 0x01, 0x48, 0x24, 0x6b, 0xdf, 0xdb, 0xf5, 0xcd, 0x26, 0x95, 0xac, 0x2b, 0x7a,
	0x88, 0x4a, 0x0c, 0x38, 0xfa, 0x1d, 0x7d, 0x63, 0xdc, 0x91, 0x9e, 0x45, 0x5e, 0xcd, 0x6b, 0x7b,
	0xeb, 0xe6, 0x78, 0x37, 0xfd, 0x98, 0xd0, 0x71, 0x9c, 0x11, 0x7e, 0x41, 0x4c, 0xab, 0x49, 0xf1,
	0xf7, 0x26, 0xa4, 0x68, 0x51, 0x32, 0xee, 0xd0, 0xe0, 0xad, 0xf7, 0xf7, 0x24, 0x3a, 0x4e, 0xb3,
	0xd5, 0xc0, 0xdc, 0xc4, 0x23, 0x19, 0x78, 0xae, 0x01, 0xb4, 0x5d, 0x27, 0xac, 0xb7, 0xfc, 0x68,
	0x6b, 0xa7, 0x95, 0x7c, 0x82, 0x11, 0xc0, 0x66, 0x34, 0x1e, 0x5d, 0x86, 0xdc, 0x8e, 0x69, 0x85,
	0x9e, 0x3f, 0xa8, 0x0f, 0xf4, 0x32, 0xb6, 0x9c, 0xa6, 0xd9, 0x30, 0xd8, 0x70, 0xf4, 0x2c, 0xa4,
	0x5d, 0x1c, 0xb2, 0xf8, 0xa7, 0x01, 0xf3, 0x45, 0x23, 0x91, 0x03, 0xe9, 0xb6, 0xed, 0xa8, 0xd7,
	0x63, 0x78, 0x91, 0x10, 0xf9, 0x39, 0x55, 0x22, 0xbf, 0x8c, 0xa3, 0x2d, 0x33, 0xa2, 0x39, 0xd0,
	0x32, 0x14, 0xb7, 0x3d, 0xfb, 0xa0, 0x1e, 0x38, 0x21, 0x66, 0x41, 0x4a, 0xea, 0x07, 0x35, 0x82,
	0xdc, 0x72, 0x42, 0x11, 0x95, 0x48, 0x90, 0x3c, 0xa1, 0x1f, 0x95, 0x48, 0x70, 0x3c, 0x82, 0x22,
	0xe6, 0xf5, 0x9a, 0x59, 0xcb, 0xa4, 0x93, 0xec, 0x80, 0x13, 0x4f, 0x86, 0x96, 0xa1, 0xe4, 0x7a,
	0x21, 0xae, 0xbb, 0xed, 0xe6, 0x36, 0xf6, 0x59, 0xab, 0x25, 0xb5, 0x70, 0x82, 0x08, 0xee, 0x2e,
	0x01, 0x43, 0xdb, 0x50, 0x36, 0xed, 0x4f, 0xb4, 0x79, 0xc0, 0x09, 0x6b, 0xb4, 0x74, 0x5d, 0xff,
	0x12, 0x2c, 0x48, 0x58, 0x8c, 0x0e, 0x9c, 0x68, 0x13, 0x72, 0x36, 0xc9, 0xd2, 0x65, 0xe1, 0x45,
	0x57, 0xf4, 0xb1, 0xb3, 0x2c, 0x5f, 0x86, 0xa7, 0xf6, 0x99, 0x14, 0x14, 0xf8, 0xad, 0x3e, 0x65,
	0x13, 0x30, 0xc4, 0x14, 0xa9, 0xf6, 0x43, 0x13, 0x92, 0x98, 0x74, 0x32, 0xfa, 0x93, 0x24, 0x7c,
	0x4d, 0x0c, 0x27, 0x7c, 0xa5, 0x1f, 0x9b, 0xf0, 0xf5, 0x0f, 0xd2, 0x50, 0x96, 0x8f, 0xc7, 0xb8,
	0xa1, 0x76, 0x97, 0x7f, 0x28, 0x6e, 0xba, 0xa6, 0xa9, 0x11, 0xf0, 0xa6, 0x6b, 0x17, 0x21, 0x67,
	0x36, 0x49, 0x35, 0x9c, 0x9c, 0x0a, 0xb9, 0x66, 0x83, 0xd1, 0x45, 0xee, 0xeb, 0xc9, 0xab, 0xb1,
	0x06, 0x66, 0xa7, 0xff, 0x8d, 0xb3, 0x90, 0xa3, 0x17, 0x72, 0x2c, 0x4e, 0x4b, 0xe2, 0xf4, 0x52,
	0x22, 0xad, 0xae, 0xab, 0x4b, 0xb4, 0x24, 0x4c, 0xe6, 0x8e, 0x41, 0x98, 0xcc, 0x1f, 0x83, 0x30,
	0x59, 0x38, 0x06, 0x61, 0xb2, 0x78, 0x5c, 0xc2, 0x24, 0x0c, 0x21, 0x4c, 0xca, 0xc2, 0x58, 0xe9,
	0x58, 0x84, 0xb1, 0x72, 0x62, 0x61, 0xac, 0x92, 0x48, 0x18, 0x9b, 0xd4, 0x15, 0xc6, 0xaa, 0xa7,
	0x22, 0x8c, 0x75, 0x08, 0x22, 0x53, 0xc7, 0x23, 0x88, 0x4c, 0x9f, 0x80, 0x20, 0x62, 0x02, 0x44,
	0x02, 0x1f, 0x13, 0x46, 0x50, 0x82, 0x28, 0x57, 0x49, 0x18, 0x99, 0xdb, 0x6a, 0x6f, 0x33, 0xb1,
	0xa4, 0x18, 0xf0, 0x8f, 0xb5, 0x9f, 0x28, 0x42, 0x51, 0xfc, 0x61, 0x4c, 0x1e, 0xc7, 0xe4, 0x71,
	0x4c, 0x1e, 0xc7, 0xe4, 0xf1, 0xcd, 0x41, 0x1e, 0x6b, 0x7f, 0xa1, 0x0c, 0x45, 0x11, 0x93, 0x3c,
	0x0a, 0xb4, 0x6b, 0x1d, 0xa6, 0x38, 0xf9, 0x11, 0xb6, 0xbe, 0x8c, 0x86, 0x7d, 0x93, 0x03, 0x1f,
	0x36, 0xf4, 0x65, 0x8f, 0x81, 0xf8, 0xe4, 0x8e, 0x81, 0xf8, 0xe4, 0x8f, 0x81, 0xf8, 0x14, 0x92,
	0x12, 0x9f, 0x67, 0x21, 0xbd, 0x83, 0xb9, 0xd1, 0x73, 0xd0, 0xad, 0xdb, 0xc1, 0xb8, 0xfb, 0x2a,
	0xc0, 0xf1, 0x5c, 0x85, 0xd2, 0x09, 0x48, 0x0a, 0x75, 0x61, 0xb2, 0xa0, 0x66, 0xd0, 0x5b, 0xc9,
	0x02, 0xfb, 0xe3, 0x4f, 0x41, 0x97, 0x05, 0xe3, 0x6f, 0x65, 0x61, 0xaa, 0xfb, 0x8f, 0xa3, 0x70,
	0xe5, 0xa4, 0x3b, 0x92, 0x39, 0x86, 0x3b, 0x92, 0x3d, 0x86, 0x3b, 0x92, 0x3b, 0x86, 0x3b, 0x92,
	0x1f, 0xf2, 0x8e, 0x14, 0x92, 0xde, 0x91, 0xe2, 0xf1, 0xdc, 0x11, 0x38, 0x01, 0x76, 0xf1, 0x4b,
	0x19, 0xc8, 0xb3, 0x04, 0x8d, 0xb7, 0x7c, 0x0c, 0xfb, 0xcb, 0x00, 0xd1, 0xda, 0x04, 0xa4, 0x6d,
	0x3f, 0x3b, 0xb5, 0x03, 0x76, 0x5b, 0x02, 0x40, 0xf7, 0x60, 0x3a, 0xfe, 0x56, 0x67, 0xb6, 0x20,
	0xcd, 0x73, 0x3b, 0x15, 0x63, 0x30, 0xa8, 0x55, 0x88, 0x3b, 0xa6, 0xf3, 0xca, 0x8e, 0xe9, 0xd8,
	0x8e, 0x54, 0xd0, 0xb1, 0x23, 0x75, 0xd7, 0x2b, 0x48, 0x50, 0x6e, 0xb3, 0xf6, 0x53, 0x69, 0xc8,
	0x90, 0x7c, 0x9a, 0xd1, 0x28, 0xd0, 0xc5, 0xae, 0xaf, 0xba, 0xc6, 0x64, 0x30, 0x90, 0xe1, 0x82,
	0x03, 0x2e, 0xb0, 0x62, 0x1a, 0x39, 0xb5, 0xd2, 0xa3, 0xa4, 0x92, 0xc6, 0x92, 0x54, 0xc2, 0x43,
	0x57, 0x21, 0xe2, 0x80, 0xb5, 0x3f, 0x56, 0x81, 0xc9, 0xce, 0x14, 0xa6, 0xb1, 0x95, 0xb7, 0xcb,
	0xca, 0x7b, 0x1b, 0xca, 0x41, 0x7b, 0xbb, 0x9e, 0x94, 0xb7, 0x95, 0x82, 0xf6, 0xf6, 0x52, 0x9c,
	0x51, 0x50, 0xe0, 0x15, 0x36, 0x55, 0x43, 0x6a, 0x05, 0x80, 0xa8, 0x4f, 0x9b, 0xd7, 0xa8, 0x4f,
	0xfb, 0x4a, 0x67, 0x59, 0xd5, 0x82, 0x62, 0x96, 0xb9, 0x94, 0xad, 0xbc, 0x00, 0x79, 0x17, 0x87,
	0x0f, 0x3d, 0xff, 0x81, 0xb6, 0x9b, 0x9c, 0xc1, 0x45, 0x57, 0x23, 0x52, 0x16, 0x75, 0x5d, 0xe4,
	0x04, 0x88, 0xdc, 0x2b, 0xec, 0x37, 0xf5, 0x0b, 0x98, 0x60, 0xbf, 0x89, 0x4c, 0x28, 0xee, 0xf0,
	0x66, 0x40, 0x4c, 0x24, 0x5c, 0x1a, 0x22, 0xbd, 0x8f, 0x7f, 0x35, 0x62, 0xac, 0xb5, 0x5f, 0xcd,
	0x41, 0x9e, 0xa7, 0x4d, 0x8e, 0xc0, 0xd5, 0x59, 0x4a, 0xc4, 0x4e, 0xbb, 0xcc, 0x3d, 0x4d, 0xc8,
	0x9b, 0x8d, 0x86, 0xf7, 0x10, 0xf3, 0x6a, 0xf2, 0xaf, 0x1e, 0xc3, 0xa2, 0xcf, 0x2d, 0x50, 0x94,
	0xc2, 0x5d, 0xcf, 0xe7, 0x40, 0x36, 0x64, 0xda, 0x81, 0xb8, 0x51, 0xab, 0xc7, 0x31, 0xd7, 0xfd,
	0x40, 0x9a, 0x88, 0x60, 0xaf, 0xfd, 0x46, 0x0a, 0xf2, 0xec, 0x11, 0xd0, 0x2a, 0x94, 0xdb, 0x6e,
	0xe0, 0xec, 0xba, 0xd8, 0xae, 0x3b, 0x2e, 0x77, 0x18, 0xf6, 0xe4, 0x17, 0xf7, 0xd9, 0xd8, 0x35,
	0x92, 0xbf, 0x51, 0x6a, 0xc7, 0x5f, 0x0f, 0xa5, 0xa1, 0x4c, 0x68, 0xa6, 0xa1, 0x5c, 0x84, 0x6c,
	0x33, 0x62, 0xea, 0xcc, 0x4f, 0xd8, 0x9f, 0xf3, 0xaf, 0x9e, 0x31, 0xe8, 0xe8, 0xc5, 0xa2, 0xd8,
	0xa1, 0xda, 0xf7, 0xa4, 0x20, 0x13, 0xbd, 0xee, 0x31, 0xbe, 0x94, 0x78, 0xa8, 0x09, 0xad, 0x87,
	0xca, 0xd1, 0x7d, 0x9c, 0x5f, 0x95, 0xca, 0x73, 0x5d, 0xd3, 0x28, 0xcf, 0x75, 0x68, 0x77, 0x67,
	0xff, 0xec, 0xd3, 0x70, 0xf6, 0xa6, 0xd9, 0x74, 0x1a, 0x07, 0xeb, 0x38, 0xe2, 0xd2, 0xbc, 0x03,
	0xc4, 0xb8, 0x40, 0xd7, 0xb8, 0x40, 0x57, 0xc2, 0x02, 0x5d, 0x3f, 0x99, 0x02, 0x90, 0xea, 0x4b,
	0x83, 0xaa, 0x29, 0xf2, 0x21, 0x31, 0x45, 0x5e, 0x52, 0x8e, 0x8d, 0x6e, 0x98, 0x6e, 0xfc, 0x55,
	0x2f, 0x7f, 0xf4, 0xb5, 0x36, 0x0e, 0xa2, 0x0f, 0xae, 0xe9, 0xf8, 0xd8, 0x90, 0x9e, 0x56, 0x6a,
	0x1b, 0x52, 0xea, 0xdf, 0x36, 0x84, 0x5e, 0x1a, 0x76, 0x5d, 0xfa, 0x14, 0xac, 0x9f, 0x87, 0x82,
	0xeb, 0x85, 0x75, 0xdb, 0x73, 0xb9, 0xd9, 0x78, 0xa0, 0x40, 0x93, 0x77, 0xbd, 0x70, 0xd9, 0x73,
	0x31, 0xda, 0x80, 0x2a, 0x87, 0xe5, 0xba, 0x53, 0x45, 0x33, 0xc9, 0x87, 0xa1, 0x62, 0x8a, 0xd3,
	0xe3, 0x6b, 0x92, 0x94, 0xac, 0xe4, 0x3e, 0x17, 0xe8, 0xa6, 0x34, 0x04, 0xba, 0xad, 0xae, 0x74,
	0xf8, 0xe9, 0x64, 0x7c, 0xba, 0x33, 0x2d, 0x7e, 0x15, 0x72, 0xbb, 0xd8, 0x8d, 0xcb, 0x76, 0x3d,
	0xd7, 0x3b, 0x58, 0xa5, 0xe9, 0xb8, 0x4e, 0x10, 0x52, 0x8a, 0x71, 0x8b, 0xc0, 0xd0, 0x72, 0x73,
	0x14, 0x1e, 0xdd, 0x81, 0xcc, 0xb6, 0xe7, 0xf3, 0xf2, 0x5b, 0xcf, 0xf5, 0x3f, 0x5e, 0x1d, 0x34,
	0x79, 0x6e, 0xd1, 0xf3, 0xe3, 0x50, 0x3c, 0x82, 0x05, 0xad, 0x43, 0x3a, 0xa2, 0x7f, 0xe7, 0x06,
	0xb4, 0x7b, 0x3c, 0x02, 0xd9, 0xc2, 0x2e, 0xee, 0x48, 0x93, 0x8d, 0xf0, 0xa0, 0x65, 0xa8, 0x44,
	0x17, 0xa3, 0x69, 0x86, 0xd8, 0xae, 0x47, 0x88, 0xcf, 0xab, 0xb6, 0x57, 0xe0, 0x50, 0x0b, 0xbb,
	0x18, 0x7d, 0x14, 0x0a, 0x36, 0xb6, 0xb0, 0x19, 0x49, 0x1c, 0x4f, 0xf4, 0x2f, 0x8e, 0x71, 0xd4,
	0x93, 0x2d, 0x33, 0xd8, 0x38, 0xea, 0x90, 0x63, 0x43, 0xab, 0x50, 0xa2, 0xf7, 0x80, 0x3a, 0x85,
	0x9e, 0xd4, 0x33, 0x5e, 0x01, 0x85, 0x25, 0x3e, 0xa1, 0xbf, 0x33, 0x01, 0x53, 0x0c, 0x55, 0x1c,
	0x49, 0x34, 0xa3, 0x4a, 0xaa, 0xfe, 0x6d, 0xd2, 0xfe, 0x35, 0x04, 0xec, 0x05, 0xe5, 0xcc, 0xc3,
	0xed, 0x00, 0xfb, 0xfb, 0x71, 0x52, 0xbd, 0x72, 0xed, 0xa7, 0x85, 0x46, 0x03, 0xfb, 0xbb, 0x07,
	0x6b, 0x6e, 0xe8, 0x35, 0x30, 0x49, 0x0c, 0x21, 0xf0, 0x2f, 0x27, 0xa3, 0x8f, 0xbc, 0xc4, 0x57,
	0x95, 0x2e, 0x98, 0x58, 0x06, 0x74, 0x09, 0x32, 0xa4, 0xde, 0xc8, 0xdb, 0xfa, 0xf3, 0x89, 0x05,
	0xd7, 0xf5, 0x42, 0x6a, 0x68, 0x23, 0xe3, 0xd1, 0x96, 0xdc, 0x39, 0xa8, 0xd6, 0xbf, 0x5e, 0xd2,
	0x51, 0x27, 0xe4, 0xa8, 0x76, 0x40, 0xb5, 0x9f, 0x4a, 0x41, 0x26, 0xba, 0x21, 0x52, 0x08, 0x5c,
	0x4a, 0x2f, 0x04, 0x4e, 0x04, 0xdc, 0x4d, 0x68, 0x04, 0xdc, 0x75, 0x8b, 0xa7, 0x69, 0x3d, 0xf1,
	0x34, 0x12, 0xe9, 0xa2, 0x9b, 0x5c, 0xfb, 0x52, 0x24, 0x3c, 0xd3, 0x3b, 0x89, 0x2e, 0x42, 0xd1,
	0xdc, 0xc5, 0x1d, 0x69, 0xd7, 0x3d, 0x25, 0xa3, 0x85, 0xdd, 0xe8, 0x59, 0xd2, 0x54, 0x9e, 0xc9,
	0xfa, 0xa6, 0xbb, 0x8b, 0x07, 0x09, 0x95, 0x46, 0x34, 0x28, 0x12, 0x2a, 0xc9, 0xe8, 0xa1, 0xdf,
	0x20, 0x4b, 0x68, 0x50, 0xed, 0x2f, 0x4d, 0x40, 0x81, 0x5f, 0x5d, 0x74, 0x15, 0xf2, 0xdb, 0x94,
	0x36, 0x0c, 0x4a, 0xad, 0x60, 0x24, 0x64, 0xf5, 0x8c, 0xc1, 0x21, 0xd0, 0xb3, 0x94, 0xa8, 0x4d,
	0xe8, 0xbf, 0x78, 0x5a, 0xeb, 0xc5, 0x2f, 0xa8, 0xe7, 0xb7, 0xf4, 0xdc, 0xee, 0xac, 0xe6, 0x62,
	0x41, 0x4c, 0x1b, 0x6b, 0xff, 0x24, 0x0b, 0x45, 0x71, 0x94, 0x47, 0x44, 0x35, 0x26, 0x74, 0x39,
	0xa9, 0x6a, 0x4c, 0xca, 0x42, 0x48, 0x95, 0x03, 0xb3, 0x09, 0x2b, 0x07, 0x7e, 0x0c, 0xb2, 0x11,
	0xc1, 0xe2, 0xd6, 0xc2, 0xab, 0x89, 0x68, 0xcb, 0xdc, 0x46, 0x84, 0x22, 0xae, 0xee, 0x40, 0x30,
	0x0a, 0x92, 0x97, 0xd7, 0x23, 0x79, 0xb5, 0x7f, 0x93, 0x82, 0x2c, 0x41, 0xc8, 0x4f, 0xf7, 0x89,
	0x5f, 0xeb, 0x98, 0x0c, 0xa6, 0x35, 0xc9, 0x60, 0xf7, 0x19, 0xcf, 0x68, 0x9e, 0xf1, 0x3c, 0x5b,
	0xfe, 0xf9, 0x5b, 0x92, 0x9a, 0x7a, 0x55, 0x95, 0xf7, 0x1c, 0xb1, 0x29, 0xb3, 0x5f, 0x98, 0x84,
	0xcc, 0xcd, 0x86, 0xb9, 0x3b, 0x56, 0x4b, 0xc7, 0x6a, 0x69, 0x52, 0xb5, 0xf4, 0x66, 0x57, 0xdd,
	0xe8, 0x9e, 0x31, 0x40, 0xd1, 0x41, 0xeb, 0xdb, 0x81, 0x2c, 0x36, 0x9d, 0x97, 0x92, 0x7a, 0x71,
	0x39, 0xa5, 0x2c, 0x0f, 0x43, 0x29, 0x3f, 0x9d, 0x81, 0x7c, 0xd0, 0xde, 0xfe, 0x04, 0xb6, 0x34,
	0x2a, 0x47, 0xff, 0x6c, 0x7a, 0x08, 0x7d, 0x2e, 0x59, 0x00, 0xbd, 0x5e, 0x6d, 0xb3, 0x5b, 0xbe,
	0xd7, 0x6e, 0x0d, 0x59, 0x7d, 0x2a, 0x79, 0x55, 0x90, 0x61, 0xcc, 0x0f, 0x17, 0xf4, 0xeb, 0xa0,
	0x26, 0x4c, 0x07, 0x37, 0xf8, 0xbe, 0x4b, 0x7d, 0x7e, 0x27, 0xb5, 0xfa, 0xfc, 0x76, 0xa4, 0xf7,
	0x54, 0x4f, 0x28, 0x7d, 0xfd, 0xc8, 0xf4, 0x9e, 0x3f, 0x39, 0x01, 0x39, 0xb3, 0x1d, 0xee, 0x79,
	0x1a, 0x55, 0xbf, 0xff, 0x71, 0x2a, 0x49, 0x98, 0xda, 0xe3, 0x28, 0x61, 0x96, 0xac, 0x4c, 0x37,
	0x5b, 0x90, 0xf9, 0x2b, 0x12, 0xc3, 0xfc, 0x88, 0x32, 0xc3, 0x6c, 0x98, 0xbb, 0xb3, 0xff, 0x1f,
	0x7b, 0x7f, 0x1e, 0x25, 0x49, 0x96, 0xd5, 0x07, 0xc2, 0xe9, 0x11, 0xbe, 0xde, 0x70, 0x8f, 0xe5,
	0x45, 0x2e, 0x91, 0x5e, 0x5b, 0x77, 0x74, 0x75, 0x37, 0xdd, 0x54, 0x45, 0x75, 0x65, 0x65, 0x66,
	0x65, 0x46, 0x2e, 0x95, 0xb1, 0x65, 0x46, 0x54, 0x2e, 0x11, 0x65, 0x91, 0x55, 0xd5, 0x8b, 0xba,
	0x1d, 0x0b, 0xb7, 0x17, 0x11, 0x46, 0xba, 0x9b, 0x79, 0x99, 0x99, 0x47, 0x66, 0x50, 0x7c, 0xdd,
	0x80, 0x24, 0x44, 0x83, 0xd0, 0xd7, 0x2c, 0x62, 0xe9, 0x41, 0x2d, 0x9d, 0x61, 0x7a, 0x06, 0x1a,
	0x4d, 0xd7, 0x00, 0x47, 0x2c, 0x62, 0x80, 0x83, 0x38, 0x67, 0x86, 0x81, 0x19, 0x24, 0x01, 0x12,
	0xdd, 0x73, 0x34, 0x02, 0x04, 0x12, 0xcc, 0x68, 0xe0, 0xb4, 0x80, 0x39, 0x33, 0x9a, 0x19, 0x1d,
	0xe6, 0xbc, 0xcd, 0xec, 0x99, 0x47, 0xb8, 0xfb, 0x7b, 0xe6, 0x11, 0x91, 0x95, 0x9e, 0xfe, 0x4f,
	0x9e, 0x70, 0xcb, 0x77, 0xef, 0xb3, 0xe5, 0xbd, 0xfb, 0xee, 0xfa, 0xbb, 0x5f, 0x39, 0x0d, 0xe9,
	0x1b, 0xae, 0x59, 0x1b, 0x9c, 0x90, 0x83, 0x13, 0xf2, 0xd0, 0x4f, 0x48, 0xb2, 0xd0, 0x94, 0x4f,
	0xc8, 0xe1, 0xa4, 0x27, 0x64, 0xbe, 0xe1, 0xd9, 0xae, 0x67, 0x07, 0xbb, 0x9a, 0xa7, 0xa4, 0x11,
	0x12, 0xa2, 0xd7, 0xe2, 0xc1, 0xdd, 0x52, 0xb2, 0xd3, 0x36, 0x16, 0xed, 0xfd, 0xfd, 0x54, 0x74,
	0xe8, 0x2a, 0xfb, 0x50, 0xff, 0xf3, 0x1e, 0x8e, 0xdb, 0xa3, 0x3a, 0x38, 0xa3, 0x33, 0xe5, 0x1a,
	0x64, 0xfc, 0xc0, 0xf4, 0x02, 0x7e, 0x2e, 0x4c, 0x77, 0x5a, 0x06, 0x33, 0xeb, 0x64, 0x64, 0x64,
	0x25, 0x51, 0x42, 0x74, 0x09, 0xb2, 0x81, 0xe9, 0x6d, 0xe1, 0x80, 0x8b, 0xf8, 0xf7, 0x75, 0x64,
	0x71, 0x97, 0x0e, 0x35, 0x38, 0x09, 0xba, 0x02, 0x23, 0x6c, 0x21, 0x55, 0xa8, 0x75, 0x3e, 0xa1,
	0x90, 0xe4, 0x03, 0x8c, 0x80, 0xfc, 0x8d, 0x16, 0xa0, 0xc4, 0xc9, 0xb9, 0xcb, 0x1c, 0x29, 0x99,
	0xd4, 0x45, 0x46, 0xc4, 0x1d, 0xe5, 0xff, 0x21, 0x45, 0xfb, 0xcc, 0x7a, 0xd8, 0xf7, 0xb1, 0x55,
	0xd9, 0xd8, 0x55, 0xef, 0x96, 0xf0, 0xa5, 0xd4, 0x11, 0x1f, 0x1e, 0xbd, 0x20, 0x67, 0x8e, 0x84,
	0xcf, 0x38, 0xbf, 0x8b, 0x7e, 0x7c, 0x18, 0x0a, 0xbc, 0xc0, 0x12, 0xfb, 0xea, 0xd5, 0xce, 0x7f,
	0x3c, 0xf4, 0x50, 0x7c, 0xa1, 0x97, 0xf4, 0x95, 0x2d, 0x22, 0xb2, 0x70, 0x5d, 0xbc, 0x6c, 0x65,
	0x4d, 0xef, 0x4e, 0x33, 0xf0, 0xe8, 0x5f, 0xab, 0x9e, 0xc5, 0x5f, 0xf7, 0x05, 0x7d, 0x8d, 0x4d,
	0x82, 0xf0, 0x57, 0x9e, 0xd9, 0xb0, 0xfd, 0x7b, 0x73, 0xe4, 0x6b, 0xf8, 0x34, 0xf9, 0x2d, 0xfa,
	0x3a, 0xa1, 0x1b, 0xe2, 0x84, 0xa6, 0xe7, 0xf5, 0x55, 0x28, 0x72, 0x27, 0x09, 0xf3, 0xa0, 0x6b,
	0x56, 0x87, 0x8f, 0x70, 0x62, 0xea, 0x42, 0xff, 0x6c, 0x0a, 0x26, 0x04, 0xb3, 0xc8, 0x87, 0xae,
	0x5c, 0x2a, 0x7e, 0x31, 0xf1, 0xf7, 0x37, 0xc6, 0xf9, 0xb4, 0x21, 0xb3, 0xf2, 0xe7, 0x53, 0x90,
	0xa1, 0x92, 0x28, 0x51, 0xd1, 0xf4, 0x7e, 0x15, 0xce, 0x43, 0xbd, 0x56, 0x38, 0xcf, 0xe7, 0xb8,
	0x18, 0x2d, 0x7f, 0x5b, 0x16, 0xb2, 0x4c, 0xc6, 0xf5, 0x49, 0x22, 0x74, 0x1d, 0x9b, 0x7e, 0xd3,
	0xd3, 0x4f, 0x84, 0xe6, 0x74, 0xe8, 0xd5, 0x30, 0x09, 0x9d, 0x69, 0x70, 0x1f, 0x56, 0x38, 0x1e,
	0x78, 0x71, 0x5a, 0x04, 0xeb, 0xca, 0x38, 0xa0, 0x39, 0x18, 0xb6, 0xba, 0x17, 0x4d, 0xc5, 0x18,
	0x49, 0x98, 0xad, 0x84, 0xb6, 0xfc, 0x7b, 0xa9, 0xb0, 0xec, 0x57, 0xc6, 0x2c, 0x4d, 0x25, 0xc0,
	0x2c, 0x4d, 0xe8, 0xab, 0xdb, 0x6f, 0x01, 0x0e, 0xf7, 0xbc, 0x00, 0xf3, 0xe2, 0x35, 0x97, 0xbf,
	0x25, 0x05, 0xc3, 0x8b, 0xcd, 0x64, 0xa0, 0xb2, 0x57, 0x21, 0x6f, 0x35, 0x3d, 0x96, 0x6d, 0xdd,
	0x05, 0xc6, 0x75, 0x91, 0x8f, 0x23, 0xaf, 0x44, 0xd0, 0xcc, 0x67, 0xe8, 0x07, 0x4a, 0x66, 0xda,
	0x90, 0xcf, 0x36, 0xfd, 0xce, 0x14, 0x8c, 0xdd, 0xf0, 0xcc, 0xc6, 0xb6, 0xd4, 0x7a, 0x7a, 0x60,
	0xe5, 0x3c, 0x96, 0x56, 0xce, 0xf3, 0x30, 0xdc, 0xf4, 0x6a, 0x3c, 0xcd, 0xb2, 0xe3, 0xd7, 0x20,
	0xe3, 0xe4, 0x96, 0xc0, 0xa0, 0xd5, 0x12, 0x18, 0xcd, 0xf2, 0xc4, 0x83, 0x11, 0xad, 0x9e, 0xcf,
	0x2c, 0x01, 0xe1, 0x76, 0x68, 0x46, 0x31, 0xbb, 0xe5, 0xf9, 0xb6, 0x2e, 0x99, 0xe6, 0x46, 0x4d,
	0x52, 0x4d, 0xda, 0x5a, 0x53, 0x44, 0x13, 0xc5, 0x9e, 0x4d, 0x74, 0x00, 0xb3, 0xd6, 0xad, 0x82,
	0x30, 0x0a, 0xc9, 0x4b, 0x44, 0x61, 0xfa, 0xc5, 0xa8, 0x56, 0xfa, 0xc5, 0x65, 0x28, 0x34, 0xc8,
	0x3d, 0xfa, 0xdb, 0xa1, 0x93, 0xa8, 0xdb, 0x1b, 0x8c, 0x08, 0xd0, 0x2b, 0x90, 0xa3, 0x8b, 0xa9,
	0x1a, 0xf0, 0xda, 0xc0, 0xf7, 0x77, 0x5c, 0x86, 0xd5, 0x80, 0x57, 0x12, 0x09, 0x2a, 0x34, 0x1f,
	0xb7, 0xde, 0x26, 0x3a, 0xdf, 0xfb, 0x6d, 0xd3, 0xbb, 0x67, 0xb9, 0xf7, 0x9d, 0xb8, 0xb9, 0xb6,
	0x04, 0x23, 0x4d, 0x9f, 0x0a, 0x55, 0xba, 0x97, 0x58, 0x69, 0x74, 0xdb, 0x9d, 0xf8, 0xba, 0x4f,
	0xb7, 0x21, 0x1d, 0x6b, 0x40, 0xd3, 0x17, 0x7f, 0xa3, 0x9b, 0x50, 0xfc, 0xc6, 0xa6, 0x67, 0xfb,
	0x96, 0x5d, 0xe5, 0xcd, 0xd3, 0xb4, 0xf4, 0xa6, 0x18, 0x31, 0x9a, 0x85, 0x5c, 0xa3, 0xe9, 0x35,
	0x5c, 0x5f, 0x24, 0x6e, 0x74, 0x7f, 0x26, 0x41, 0x80, 0xae, 0x0b, 0xdb, 0x8c, 0x65, 0x66, 0x7c,
	0x5d, 0x7b, 0x3d, 0x2b, 0x6a, 0x1d, 0x10, 0x5b, 0x56, 0xdc, 0x42, 0x3b, 0x07, 0xb9, 0x06, 0xeb,
	0xd2, 0xc9, 0x53, 0x34, 0x3a, 0xee, 0x26, 0x31, 0x16, 0x5d, 0x83, 0x74, 0xcd, 0x76, 0xee, 0x71,
	0x2d, 0xef, 0xb9, 0xb6, 0xc7, 0x6d, 0x5c, 0x5c, 0xcf, 0xdc, 0xb2, 0x9d, 0x7b, 0x06, 0xa5, 0x2c,
	0xff, 0x48, 0x11, 0xd2, 0xe4, 0x67, 0x3f, 0xa8, 0x42, 0xb3, 0x90, 0x6e, 0x98, 0xc1, 0xb6, 0x5a,
	0x80, 0x2c, 0x92, 0x12, 0x84, 0x06, 0x5d, 0x01, 0xf0, 0x6b, 0x76, 0x15, 0x57, 0xa8, 0x9c, 0x51,
	0xeb, 0x58, 0x5e, 0xa0, 0x14, 0x77, 0x88, 0x90, 0x79, 0x11, 0x86, 0xeb, 0xb6, 0xd3, 0x2d, 0x45,
	0x7e, 0xc5, 0x09, 0xf0, 0x16, 0xf6, 0x0c, 0x32, 0x16, 0x7d, 0x04, 0x86, 0xeb, 0xe6, 0x03, 0xc5,
	0xe4, 0x78, 0x32, 0xf4, 0x00, 0x72, 0xe3, 0xd7, 0x43, 0x47, 0x00, 0x73, 0x49, 0xbd, 0xa4, 0xb3,
	0x62, 0xb8, 0xc2, 0x16, 0x49, 0x44, 0xc6, 0xaa, 0xfc, 0xd5, 0x5c, 0x3f, 0xe9, 0xd3, 0x8b, 0xb1,
	0x7c, 0x72, 0xfd, 0x0d, 0xcd, 0x12, 0xca, 0xa5, 0xfd, 0x9c, 0xd1, 0xd8, 0xcf, 0x26, 0x8c, 0x54,
	0xdd, 0x7a, 0xc3, 0xf4, 0x58, 0x7d, 0x17, 0x53, 0x17, 0x5e, 0x49, 0xf0, 0x91, 0x66, 0x16, 0x22,
	0x36, 0x86, 0xcc, 0x33, 0x14, 0x19, 0xb9, 0xc4, 0x22, 0xe3, 0x7f, 0x1d, 0x86, 0x11, 0x89, 0x7d,
	0x7f, 0x80, 0x4f, 0xc8, 0x99, 0x12, 0x5f, 0xdf, 0xfe, 0x1c, 0x09, 0x9f, 0x7a, 0xef, 0x77, 0xa7,
	0x31, 0xc0, 0x5b, 0x90, 0x26, 0x1a, 0x2a, 0xff, 0xe8, 0x1f, 0xe9, 0xf8, 0x76, 0xe5, 0x4f, 0xd4,
	0xac, 0xb5, 0x70, 0x23, 0x5c, 0xd0, 0x55, 0x00, 0xee, 0x11, 0x8a, 0x40, 0x58, 0xbb, 0x22, 0xe0,
	0x46, 0x14, 0xad, 0x02, 0x23, 0xa7, 0x2d, 0x30, 0x66, 0x17, 0x24, 0x33, 0xe1, 0x65, 0x75, 0xcf,
	0x67, 0x6c, 0xed, 0x4c, 0x7f, 0xf1, 0x38, 0x64, 0xa8, 0x37, 0x74, 0x60, 0x27, 0x0c, 0xa2, 0x21,
	0x49, 0xa3, 0x21, 0x2f, 0x43, 0xd6, 0xac, 0x92, 0xf7, 0xc5, 0x6d, 0x87, 0xae, 0x1a, 0x37, 0x1f,
	0x8e, 0xe6, 0x62, 0x0d, 0xa5, 0xdf, 0xdf, 0x7e, 0x4b, 0xba, 0xcd, 0x46, 0x1b, 0x69, 0xfe, 0x0a,
	0x9d, 0xbb, 0x49, 0x4b, 0xb2, 0x54, 0xe6, 0x8e, 0x8e, 0x48, 0x46, 0x16, 0x36, 0xe6, 0x29, 0x25,
	0x69, 0xcc, 0x23, 0xb2, 0xae, 0x47, 0x35, 0xb2, 0xae, 0x5f, 0x91, 0x1c, 0x27, 0x63, 0xca, 0x65,
	0x31, 0x92, 0xe7, 0xe4, 0x2e, 0x8c, 0x56, 0xb7, 0x4d, 0xcf, 0xac, 0x06, 0xd8, 0xb3, 0xfd, 0xc0,
	0xae, 0x72, 0xa3, 0xe1, 0xb9, 0x8e, 0xef, 0x6f, 0x66, 0x21, 0x46, 0x63, 0xb4, 0xf0, 0x40, 0x97,
	0x21, 0x5b, 0xa7, 0x99, 0x44, 0x1c, 0x57, 0xe4, 0xd9, 0xce, 0xdc, 0x58, 0xd6, 0x91, 0xc1, 0x69,
	0xca, 0xdf, 0x91, 0x85, 0xd1, 0xf8, 0x04, 0x83, 0x2c, 0x3d, 0xbe, 0x46, 0xde, 0x10, 0x08, 0x7b,
	0x99, 0xce, 0x2d, 0x5a, 0xf7, 0xfb, 0x4a, 0xbc, 0x6f, 0x52, 0x1c, 0xc2, 0x9f, 0x77, 0x4f, 0x9a,
	0x83, 0x1c, 0x2f, 0xe7, 0x54, 0x2c, 0xff, 0x0c, 0xef, 0x4b, 0xd0, 0x49, 0x29, 0x11, 0x39, 0x9d,
	0x94, 0x88, 0xf2, 0xe7, 0xc3, 0xce, 0x47, 0x87, 0x86, 0x78, 0x29, 0x72, 0x62, 0x87, 0xb4, 0x73,
	0x62, 0x65, 0xc7, 0xe4, 0x70, 0x2f, 0x8e, 0xc9, 0xb4, 0x8e, 0x63, 0x32, 0x6a, 0x61, 0xf4, 0x83,
	0x19, 0xc8, 0xb2, 0xdd, 0xd1, 0x0f, 0x5b, 0xe0, 0x77, 0x86, 0x20, 0x8b, 0xd9, 0xcb, 0x54, 0xee,
	0x30, 0xf0, 0x43, 0x43, 0xbd, 0x26, 0x4e, 0x25, 0x0f, 0xef, 0x25, 0x49, 0x7c, 0x39, 0xf4, 0x6c,
	0xa4, 0xf5, 0xe6, 0x86, 0x1f, 0xd0, 0x9e, 0x9e, 0xfc, 0x5d, 0x4a, 0x3b, 0x2f, 0xa3, 0x95, 0x8c,
	0x74, 0x09, 0xf2, 0xb6, 0xc3, 0x0f, 0x5b, 0xd5, 0xa2, 0x6f, 0x41, 0x30, 0x7b, 0x51, 0xd2, 0x18,
	0xf5, 0x62, 0xe5, 0xd3, 0x5f, 0x45, 0x30, 0x7e, 0xa3, 0x69, 0x5b, 0xf4, 0x21, 0x44, 0xe7, 0xf2,
	0x81, 0xca, 0xf8, 0x58, 0xaa, 0x8c, 0x17, 0x01, 0x3c, 0x16, 0xa3, 0xad, 0xd8, 0x16, 0xf7, 0x30,
	0x77, 0xfa, 0xfc, 0x05, 0x3e, 0x7a, 0xc5, 0x6a, 0xd1, 0x36, 0x21, 0x09, 0x4a, 0x08, 0xfa, 0x96,
	0x14, 0x64, 0xeb, 0xae, 0x45, 0x4c, 0xb9, 0x11, 0x55, 0x89, 0xb4, 0x24, 0x09, 0x24, 0xe5, 0x1e,
	0xec, 0x1c, 0x5d, 0x3a, 0xba, 0x62, 0xf0, 0x79, 0x91, 0xd1, 0xe2, 0xb7, 0x6e, 0x7f, 0xa6, 0xb7,
	0x6c, 0x99, 0x0e, 0xce, 0xeb, 0x2f, 0xa6, 0x12, 0xa4, 0xa8, 0x6e, 0x1f, 0x55, 0xb2, 0x4c, 0x94,
	0xf2, 0xf2, 0x4e, 0x8a, 0x39, 0xab, 0xc9, 0xa6, 0x50, 0xce, 0xea, 0xf1, 0x12, 0x66, 0x43, 0xea,
	0x65, 0x6c, 0x2c, 0x35, 0x6c, 0xdf, 0xb5, 0xf0, 0xea, 0xe6, 0x82, 0xe9, 0x61, 0x43, 0xdc, 0x25,
	0x32, 0xe0, 0xb8, 0x5b, 0xad, 0x36, 0x3d, 0x7a, 0x2b, 0x34, 0x53, 0xa6, 0x12, 0xd8, 0x75, 0xf5,
	0x02, 0x4b, 0x14, 0x51, 0x8b, 0x6b, 0xa8, 0x09, 0x85, 0x06, 0xf6, 0x36, 0x5d, 0xaf, 0x8e, 0x35,
	0x92, 0x33, 0x93, 0x41, 0x08, 0x46, 0x33, 0xa1, 0xd5, 0x10, 0x25, 0x7a, 0xa2, 0x73, 0xcd, 0x6d,
	0xeb, 0xc2, 0x9b, 0x61, 0xd9, 0x3a, 0x51, 0x4c, 0x98, 0xa3, 0x46, 0x8b, 0xec, 0x08, 0xa4, 0x99,
	0x1d, 0xf1, 0xb9, 0x14, 0x20, 0x4c, 0xf4, 0x1d, 0xd6, 0x45, 0xa3, 0x8e, 0x7d, 0x9f, 0xc8, 0xd8,
	0x49, 0xd5, 0x94, 0x86, 0xab, 0x7a, 0xc9, 0x21, 0xab, 0x0d, 0xcc, 0x62, 0xa4, 0xab, 0x3c, 0x9d,
	0x61, 0x22, 0x9a, 0xfc, 0x36, 0x9b, 0x1b, 0x7d, 0x07, 0x4b, 0xb2, 0x68, 0x34, 0x83, 0x4a, 0xc3,
	0xf4, 0xcc, 0x3a, 0x0e, 0xb0, 0xe7, 0xf3, 0xb0, 0x81, 0xc2, 0x1d, 0x5d, 0xd0, 0x53, 0x05, 0xd6,
	0xc2, 0x29, 0x68, 0x8e, 0x45, 0xa3, 0x19, 0x44, 0x57, 0xd0, 0x4f, 0xa4, 0xc8, 0x77, 0xf2, 0x9b,
	0x35, 0x11, 0x7c, 0x50, 0x98, 0xbf, 0xa1, 0xd9, 0x96, 0xc9, 0xf4, 0xf0, 0x5a, 0xcd, 0xd4, 0x4c,
	0xe2, 0xe6, 0xb9, 0x35, 0x6c, 0x4b, 0xf3, 0x5b, 0x44, 0x06, 0x8c, 0x5b, 0x66, 0x60, 0x56, 0x88,
	0x98, 0xb6, 0x3d, 0x9a, 0xf6, 0xd3, 0x2d, 0xdb, 0x65, 0xd1, 0x0c, 0x4c, 0x23, 0x1a, 0x6e, 0x8c,
	0x59, 0xf1, 0x0b, 0xe5, 0x3f, 0x4c, 0x41, 0x96, 0x27, 0x88, 0x1d, 0x8e, 0x89, 0x70, 0x24, 0x4d,
	0x85, 0xf6, 0x6f, 0x56, 0x9a, 0x17, 0x9b, 0x70, 0x76, 0x51, 0x52, 0xa8, 0x94, 0xd7, 0x72, 0xeb,
	0xd6, 0x9c, 0xfe, 0x27, 0x65, 0x98, 0x58, 0xc6, 0x66, 0x2d, 0xd8, 0xae, 0x9a, 0x1e, 0xe6, 0xa7,
	0xce, 0x40, 0xb9, 0x1a, 0xf8, 0xe3, 0x8e, 0xdc, 0x1f, 0xf7, 0x69, 0x18, 0xe1, 0x4d, 0x5b, 0x69,
	0x26, 0xa7, 0xb2, 0x7a, 0x35, 0xdb, 0x43, 0x2e, 0x2d, 0x88, 0x19, 0xe7, 0x77, 0x63, 0xe9, 0xd0,
	0xc5, 0xa4, 0x05, 0x43, 0x02, 0x3c, 0xad, 0x94, 0xa4, 0x25, 0xe8, 0x12, 0x14, 0xfc, 0x06, 0xae,
	0xda, 0x66, 0x2d, 0xd8, 0x9d, 0x1a, 0xd5, 0xe3, 0x10, 0x51, 0xa2, 0x66, 0xac, 0xa7, 0xd0, 0xf0,
	0xa1, 0x36, 0xdd, 0x90, 0x5a, 0x0d, 0x25, 0x01, 0x81, 0xb8, 0x40, 0xd4, 0xb9, 0x3a, 0x15, 0xfa,
	0x13, 0x6a, 0x99, 0x1f, 0x7c, 0x38, 0x5a, 0x80, 0x12, 0x7e, 0x10, 0x78, 0x26, 0x07, 0x53, 0xf7,
	0x55, 0xd3, 0x87, 0x29, 0x11, 0xcb, 0x60, 0xf0, 0xd1, 0x05, 0xc8, 0x34, 0xb6, 0xdd, 0xc0, 0xe5,
	0x69, 0xc3, 0x0a, 0x5d, 0xab, 0x0d, 0x46, 0x80, 0xae, 0x42, 0x2e, 0xc0, 0x35, 0x5c, 0x75, 0xeb,
	0x3c, 0x03, 0xf7, 0xd9, 0x2e, 0x49, 0x13, 0x6b, 0xae, 0xed, 0x04, 0x86, 0x20, 0x42, 0x9f, 0x86,
	0x92, 0xe8, 0x68, 0x58, 0x31, 0x3d, 0x6c, 0xf2, 0x0c, 0xd1, 0x43, 0xfc, 0x50, 0x45, 0x31, 0xdf,
	0x9c, 0x87, 0x4d, 0xf4, 0x49, 0x38, 0xc9, 0x61, 0x46, 0x2b, 0x74, 0x0b, 0x90, 0xed, 0x9f, 0x28,
	0xd5, 0xf4, 0x38, 0x67, 0xb3, 0x26, 0xb8, 0xd0, 0x9c, 0xd3, 0x15, 0x18, 0xc1, 0x35, 0x7b, 0xcb,
	0xde, 0xb0, 0x6b, 0x76, 0xb0, 0x3b, 0x75, 0x4a, 0x13, 0x69, 0x4e, 0xa2, 0x45, 0x2b, 0x30, 0x2e,
	0xfd, 0xac, 0x50, 0x85, 0x71, 0x4a, 0xe9, 0x5b, 0x8f, 0x49, 0x74, 0x14, 0xd9, 0x71, 0x2e, 0x02,
	0x2b, 0xa7, 0x2b, 0xf5, 0xb4, 0x52, 0xeb, 0x48, 0x81, 0x51, 0x4e, 0xe3, 0xf9, 0xab, 0x7b, 0xdc,
	0xdf, 0x65, 0xbd, 0xf7, 0xd5, 0xea, 0xf9, 0x5e, 0x83, 0x31, 0x7a, 0xb8, 0x7b, 0x66, 0xad, 0x52,
	0xc7, 0xc1, 0xb6, 0x6b, 0x4d, 0x3d, 0xa1, 0xc9, 0x51, 0xd0, 0xdf, 0xa6, 0xe4, 0xc4, 0xe2, 0x30,
	0x1b, 0x0d, 0xb2, 0xdc, 0x38, 0x98, 0x27, 0x55, 0x8c, 0xac, 0xa9, 0x27, 0xd5, 0xc4, 0xf1, 0xa4,
	0x44, 0xcc, 0x95, 0x2a, 0x0b, 0x7d, 0x0a, 0x46, 0xcd, 0x1d, 0xd3, 0xae, 0x51, 0x3d, 0x8a, 0xda,
	0x2f, 0x4f, 0xd1, 0x9b, 0x7c, 0xb9, 0x1d, 0xb7, 0x3d, 0x2a, 0xc5, 0xcc, 0x9c, 0xa0, 0xa7, 0x66,
	0x4d, 0xc9, 0x94, 0x7f, 0xa2, 0x4f, 0x40, 0xc9, 0x71, 0x83, 0x4a, 0x78, 0x71, 0xea, 0x69, 0xca,
	0xfe, 0xbc, 0x3a, 0xfb, 0x3b, 0x6e, 0x10, 0xce, 0x60, 0x14, 0x1d, 0xe9, 0x17, 0x7a, 0x13, 0x4e,
	0x71, 0xc6, 0x6c, 0x09, 0xe1, 0x07, 0xe4, 0xbd, 0xd9, 0xae, 0xe3, 0x4f, 0x3d, 0xa3, 0xb4, 0x90,
	0x4e, 0xca, 0xe4, 0x4b, 0x21, 0x35, 0x11, 0xb4, 0xd8, 0xb1, 0xe8, 0xdb, 0x9a, 0x7a, 0xcf, 0x21,
	0xed, 0xdf, 0x25, 0x3e, 0x81, 0x11, 0x4e, 0x55, 0xfe, 0xf3, 0x61, 0x28, 0xc5, 0xde, 0x66, 0x3f,
	0xb8, 0x7a, 0x97, 0xa1, 0x68, 0x99, 0xbb, 0x7e, 0xc5, 0xdd, 0xac, 0xdc, 0xc7, 0xf8, 0x1e, 0x87,
	0x49, 0xff, 0x40, 0x7b, 0x1b, 0x60, 0xd7, 0x5f, 0xdd, 0x7c, 0x13, 0xe3, 0x7b, 0x54, 0xab, 0x03,
	0x2b, 0xfc, 0x4d, 0xce, 0x14, 0xb3, 0x56, 0xab, 0x58, 0xa6, 0x40, 0xb8, 0x54, 0xd0, 0x40, 0x6a,
	0xb5, 0x45, 0x73, 0x17, 0xdd, 0x81, 0xe3, 0xd1, 0x2a, 0xa7, 0xf9, 0x57, 0x6c, 0xad, 0x67, 0x3b,
	0x6b, 0xb6, 0xcc, 0x4e, 0x0f, 0x29, 0x69, 0x7e, 0x3b, 0xfd, 0x2c, 0xaf, 0x42, 0x74, 0xb5, 0x82,
	0x1d, 0x8b, 0x71, 0xcb, 0x29, 0x70, 0x1b, 0x0f, 0xe9, 0x96, 0x1c, 0x8b, 0x5c, 0x29, 0xff, 0xf6,
	0x10, 0x14, 0xe5, 0x35, 0xde, 0x1f, 0xdf, 0x3c, 0x96, 0x86, 0xa0, 0x97, 0x9e, 0x15, 0xcb, 0x5f,
	0x3a, 0x0f, 0x59, 0xab, 0x49, 0xfe, 0x5b, 0xd5, 0xa3, 0xcd, 0x46, 0xcf, 0x2e, 0x49, 0x36, 0x94,
	0xb2, 0x6b, 0x6e, 0x8f, 0xf0, 0x99, 0xfe, 0xb9, 0x13, 0x30, 0xb6, 0x52, 0x37, 0xb7, 0x6c, 0x67,
	0xeb, 0xb6, 0xe9, 0xd8, 0x9b, 0xd8, 0x0f, 0x06, 0x26, 0xd4, 0xc0, 0x84, 0x4a, 0x08, 0x45, 0x2d,
	0xc3, 0xbf, 0xc1, 0xd1, 0xc2, 0xbf, 0xdd, 0x80, 0x51, 0x56, 0xe2, 0x6c, 0x3b, 0x5b, 0x4c, 0x5a,
	0x8d, 0x28, 0xfa, 0x29, 0x4b, 0x21, 0x1d, 0x15, 0x7d, 0xbf, 0x13, 0x55, 0x8f, 0x17, 0xd5, 0x23,
	0x77, 0x0f, 0x21, 0xfc, 0x76, 0xc4, 0x75, 0xe7, 0x09, 0x0b, 0x00, 0xf9, 0xbb, 0x6c, 0x4d, 0xdc,
	0x2a, 0xe9, 0x67, 0x7a, 0xde, 0x84, 0x8c, 0x1f, 0x34, 0x2d, 0x61, 0x5f, 0xb6, 0x4d, 0x7a, 0x6f,
	0x11, 0x67, 0x33, 0xeb, 0x84, 0x48, 0xce, 0x4e, 0x6e, 0x5a, 0xbb, 0xe5, 0xff, 0x07, 0x20, 0x43,
	0xff, 0xa3, 0x1f, 0x4e, 0xa3, 0x73, 0x30, 0xdc, 0xa4, 0xfd, 0x59, 0x3a, 0xca, 0xd1, 0x55, 0xdb,
	0x0a, 0xdf, 0x02, 0x19, 0x8f, 0xbe, 0x2d, 0x05, 0x25, 0x9b, 0xbd, 0xac, 0x0a, 0x7b, 0xb3, 0x99,
	0x43, 0xf2, 0x5c, 0xf0, 0x4f, 0x42, 0x5f, 0xb8, 0x51, 0xb4, 0xa5, 0x5f, 0x31, 0x4d, 0x34, 0x7b,
	0x64, 0x9a, 0x28, 0xba, 0x0b, 0x59, 0x1f, 0x7b, 0x36, 0xf6, 0xb9, 0xf0, 0x3d, 0xab, 0xb5, 0x9a,
	0x66, 0xd6, 0x29, 0xad, 0x14, 0x8c, 0xa2, 0xbf, 0xcb, 0x5f, 0xcc, 0x42, 0x96, 0xfd, 0xd7, 0x63,
	0xbc, 0xac, 0xe4, 0x2f, 0x9a, 0x39, 0xba, 0x2f, 0x6a, 0x42, 0xde, 0x76, 0x58, 0xba, 0x00, 0x5f,
	0x48, 0x57, 0x92, 0x7c, 0xd3, 0x99, 0x15, 0xce, 0x24, 0x82, 0xa1, 0x17, 0x6c, 0xcb, 0xff, 0xdd,
	0x10, 0xe4, 0xc5, 0x7f, 0xf7, 0xc3, 0x07, 0xbe, 0x06, 0x05, 0xdf, 0x6d, 0x54, 0xaa, 0x35, 0xd3,
	0xf7, 0x75, 0x3e, 0x73, 0xde, 0x77, 0x1b, 0x0b, 0x84, 0x48, 0x2c, 0x91, 0x8c, 0xde, 0x12, 0x49,
	0x96, 0x83, 0xdb, 0xf2, 0xd5, 0xa6, 0xff, 0xed, 0x33, 0x50, 0x94, 0x05, 0xcb, 0x40, 0x6f, 0x7d,
	0x3c, 0xf5, 0x56, 0xbe, 0x06, 0x0b, 0x9a, 0x62, 0xea, 0x1a, 0x14, 0xcc, 0x6a, 0x95, 0x27, 0xa2,
	0xab, 0xa7, 0x54, 0x44, 0x44, 0x2d, 0x0a, 0xf3, 0x48, 0xa2, 0x98, 0xc3, 0x5d, 0x28, 0xca, 0x2e,
	0x1a, 0xae, 0x72, 0x7e, 0xa4, 0x7d, 0xb9, 0x0d, 0x93, 0x3e, 0x73, 0x12, 0x0d, 0x5d, 0x21, 0x31,
	0x2e, 0x68, 0x01, 0x4a, 0x75, 0xd7, 0x32, 0xa9, 0xcf, 0xa8, 0x66, 0xfb, 0x01, 0x77, 0xea, 0x3f,
	0xdd, 0xc1, 0x31, 0x47, 0x5d, 0xcc, 0x82, 0xe8, 0x96, 0xed, 0x07, 0x0f, 0x11, 0xca, 0x59, 0xce,
	0x95, 0x18, 0x7b, 0x24, 0x72, 0x25, 0x66, 0x21, 0x47, 0xbd, 0x2e, 0xd8, 0xe2, 0x41, 0x84, 0xee,
	0x66, 0x87, 0x20, 0x40, 0x5f, 0x4b, 0x41, 0x7e, 0xc3, 0xf4, 0xb1, 0x55, 0x09, 0x9b, 0x13, 0x2a,
	0x3c, 0xee, 0x4f, 0xb2, 0x97, 0xfc, 0xb2, 0xba, 0x56, 0xce, 0x5c, 0xad, 0x32, 0x4c, 0x44, 0xb2,
	0xa8, 0x79, 0x62, 0x68, 0x0a, 0x23, 0x47, 0x1f, 0x73, 0xd5, 0x41, 0xbb, 0x90, 0x67, 0xae, 0xdf,
	0x10, 0xee, 0xfa, 0xe0, 0x75, 0xce, 0x18, 0xfc, 0x55, 0x38, 0x1d, 0xfa, 0x0c, 0x8c, 0xd8, 0xe4,
	0xb3, 0x37, 0x3c, 0x1c, 0x60, 0x4f, 0x3d, 0xf3, 0xa2, 0x97, 0xd9, 0xe5, 0x19, 0x63, 0xea, 0xd1,
	0xf1, 0xa3, 0x53, 0x8f, 0x6e, 0xc3, 0x38, 0xeb, 0x92, 0x54, 0x71, 0x37, 0x2b, 0x5c, 0xf5, 0x3d,
	0xa1, 0x9e, 0x46, 0x3f, 0xca, 0x88, 0x57, 0x37, 0xb9, 0x7a, 0xbb, 0x0e, 0x93, 0x11, 0x3b, 0xa1,
	0x20, 0xf9, 0xbc, 0xd2, 0x53, 0x89, 0xe3, 0x84, 0xe0, 0x28, 0x64, 0x9a, 0x8f, 0xbe, 0x2b, 0x05,
	0x93, 0x0d, 0xb1, 0x68, 0x92, 0x20, 0x7e, 0xbc, 0x9c, 0x14, 0xed, 0x0e, 0x35, 0xa2, 0xb5, 0x2a,
	0xb0, 0xa7, 0xef, 0xc0, 0x68, 0x74, 0x33, 0x34, 0xc0, 0x34, 0xa5, 0x17, 0xde, 0x28, 0x85, 0xe4,
	0x34, 0xb2, 0x14, 0xb5, 0xaa, 0x3f, 0x9d, 0xac, 0x55, 0x7d, 0x8b, 0x09, 0x5d, 0xd6, 0x37, 0xa1,
	0x17, 0x42, 0xab, 0x87, 0x45, 0x6a, 0xbe, 0xbe, 0x8b, 0x86, 0x2c, 0x2b, 0xc6, 0xa1, 0x91, 0xf3,
	0x13, 0xc5, 0x81, 0x91, 0x23, 0xf5, 0x29, 0xcb, 0xa8, 0x2f, 0x79, 0xd1, 0xa7, 0x6c, 0x9e, 0xb6,
	0x47, 0xa4, 0x27, 0x6d, 0xb7, 0x12, 0x38, 0x76, 0x32, 0x47, 0x9a, 0xb7, 0xa0, 0xeb, 0xbd, 0x10,
	0xae, 0xdd, 0x16, 0xce, 0xf7, 0xb4, 0x85, 0x5b, 0xf5, 0x99, 0xc2, 0x81, 0xe8, 0x33, 0xb2, 0xcc,
	0x84, 0xa3, 0x93, 0x99, 0x97, 0xa0, 0xb0, 0xe1, 0x5a, 0xbb, 0x15, 0xdf, 0x0e, 0xba, 0x02, 0x35,
	0x70, 0x15, 0x2a, 0x4f, 0x08, 0xd6, 0x6d, 0x8a, 0x6a, 0x02, 0x35, 0x33, 0xc0, 0x9e, 0x29, 0xe9,
	0x75, 0xdd, 0xa8, 0x25, 0x0a, 0x59, 0xa5, 0x28, 0xe9, 0xaa, 0x14, 0x6f, 0xcb, 0x69, 0x96, 0xa3,
	0x47, 0x71, 0xc4, 0x49, 0xc9, 0x96, 0x6b, 0x92, 0x21, 0x3e, 0xa6, 0xe4, 0x5c, 0xd9, 0xd7, 0xfe,
	0x96, 0xec, 0xee, 0x9f, 0x1f, 0xee, 0x2f, 0xbb, 0xfb, 0x61, 0xc8, 0x9c, 0x98, 0xad, 0x9f, 0x4d,
	0x62, 0xeb, 0x9f, 0x85, 0x4c, 0x60, 0x07, 0x35, 0xd5, 0xe6, 0x77, 0x6c, 0xf0, 0xec, 0x35, 0xc9,
	0xd4, 0x4f, 0xe4, 0x2f, 0x9c, 0xfe, 0xb9, 0x69, 0x62, 0xe7, 0xd7, 0x9b, 0xc2, 0x85, 0x3d, 0xb0,
	0xf3, 0x07, 0xf1, 0xa9, 0xa4, 0x29, 0x7e, 0xeb, 0x2d, 0x00, 0xa4, 0x2f, 0xb5, 0x97, 0x4c, 0xd1,
	0x82, 0x8b, 0xaa, 0x0f, 0xf6, 0x2f, 0x41, 0x58, 0x84, 0x82, 0xe3, 0x06, 0x95, 0x2d, 0x7b, 0x07,
	0x3b, 0xfc, 0x98, 0x50, 0xae, 0x29, 0xcc, 0x3b, 0x6e, 0x70, 0x83, 0x10, 0x22, 0x03, 0x8a, 0x3b,
	0x66, 0xb5, 0x6a, 0x3b, 0x5c, 0xd9, 0x4c, 0x08, 0xdc, 0x3d, 0xc2, 0x99, 0x50, 0x95, 0x53, 0x32,
	0xe1, 0x4b, 0x47, 0x6b, 0xc2, 0xc7, 0xd0, 0x9f, 0x47, 0x8f, 0x12, 0xfd, 0x39, 0x59, 0x1f, 0x28,
	0xaa, 0xec, 0xdb, 0x75, 0xd3, 0xdb, 0xad, 0xb0, 0xcd, 0xc0, 0xed, 0x78, 0xe5, 0x0f, 0x59, 0xe2,
	0xe4, 0xeb, 0x94, 0x1a, 0xdd, 0x82, 0x92, 0x87, 0x1b, 0xae, 0x17, 0x54, 0x5c, 0xcf, 0xde, 0xb2,
	0x1d, 0xcd, 0x26, 0x51, 0x46, 0x91, 0x51, 0xaf, 0x52, 0xe2, 0x58, 0x5e, 0x24, 0x3a, 0xa4, 0xa4,
	0xed, 0x7d, 0xf2, 0x22, 0xbf, 0x35, 0x05, 0xc5, 0xba, 0xe9, 0x34, 0x37, 0x4d, 0x3a, 0xd8, 0x53,
	0xc7, 0x28, 0xed, 0x25, 0xb3, 0x35, 0x36, 0x25, 0xba, 0x02, 0x50, 0x73, 0x03, 0xd1, 0xd3, 0xfb,
	0xb8, 0x1a, 0x8a, 0x4d, 0xcd, 0x0d, 0x78, 0x37, 0xef, 0x25, 0x18, 0xc3, 0x0f, 0x1a, 0x36, 0xab,
	0x82, 0x60, 0x70, 0xaf, 0x27, 0x14, 0xe0, 0x5e, 0x47, 0x23, 0x22, 0x0a, 0xf9, 0x7a, 0x09, 0xd2,
	0x54, 0x09, 0x3c, 0xa9, 0x59, 0xed, 0x4e, 0x88, 0xd0, 0x15, 0xc8, 0x78, 0x6e, 0x33, 0xc0, 0xba,
	0xc9, 0x84, 0x8c, 0x0a, 0xdd, 0x84, 0x92, 0xe5, 0xfa, 0xb8, 0x12, 0x56, 0xe7, 0x4e, 0x75, 0xc6,
	0x4e, 0x5e, 0x27, 0x67, 0x11, 0x16, 0x35, 0xba, 0x46, 0x91, 0x10, 0x8b, 0x5f, 0xe8, 0x75, 0x28,
	0x36, 0x24, 0xbd, 0x8d, 0x27, 0x12, 0xbe, 0xa8, 0x22, 0x06, 0x67, 0x62, 0x0a, 0x5f, 0x8c, 0x4d,
	0x58, 0x0f, 0x53, 0xd6, 0xac, 0x87, 0x31, 0x60, 0x04, 0x47, 0x4d, 0x23, 0xa7, 0x9e, 0xe8, 0x62,
	0x2d, 0xc8, 0x77, 0x23, 0x35, 0x9b, 0x34, 0x64, 0x26, 0x68, 0x05, 0xf2, 0x1e, 0x36, 0x19, 0x8a,
	0xd6, 0x93, 0xdd, 0x42, 0xc5, 0x12, 0x43, 0x83, 0x13, 0x19, 0x21, 0x39, 0xba, 0x07, 0xc7, 0x99,
	0x38, 0x65, 0xcb, 0x87, 0x12, 0x55, 0xdd, 0x1a, 0x4f, 0x21, 0xbc, 0xa0, 0xc4, 0xf6, 0x8d, 0x88,
	0xc1, 0x1a, 0xa7, 0x37, 0x26, 0x77, 0xf6, 0x5e, 0x2c, 0x7f, 0x76, 0x18, 0x8a, 0xf2, 0x2b, 0xee,
	0x93, 0xce, 0xf0, 0x9e, 0x5b, 0xd3, 0xef, 0x0c, 0x4f, 0x88, 0xd0, 0x2e, 0x64, 0xcc, 0x6a, 0xe0,
	0x7a, 0xea, 0x61, 0xe9, 0x6b, 0xd2, 0xd9, 0x95, 0xcc, 0x8e, 0x61, 0x33, 0x96, 0xff, 0x68, 0x08,
	0x46, 0xa4, 0x05, 0xd6, 0x0f, 0x9f, 0x22, 0x72, 0x3f, 0xa5, 0xf5, 0xdc, 0x58, 0xc2, 0xfd, 0xf4,
	0x5a, 0xd8, 0xcf, 0x2e, 0xd2, 0x76, 0x32, 0xda, 0x09, 0xbf, 0x84, 0xc1, 0x1d, 0xae, 0xf3, 0x94,
	0x7f, 0x66, 0x18, 0xf2, 0x62, 0xdb, 0xf5, 0xc3, 0x3b, 0x3e, 0x1b, 0xeb, 0xf7, 0xa5, 0xaa, 0x7b,
	0x04, 0x2d, 0x60, 0xb5, 0x87, 0x0b, 0x6d, 0x2c, 0x60, 0x6d, 0x2f, 0x11, 0x31, 0x49, 0x74, 0x0c,
	0x8d, 0x3e, 0xe8, 0x82, 0xa0, 0xfc, 0x6f, 0xb2, 0x30, 0xb9, 0x8f, 0x60, 0xeb, 0x8f, 0xd4, 0x4e,
	0x76, 0xdc, 0xfa, 0xf8, 0xad, 0x26, 0xf5, 0x3e, 0xa7, 0x3b, 0x1b, 0xdb, 0x6b, 0xae, 0x6f, 0x13,
	0x0b, 0x8c, 0x18, 0xdb, 0xf4, 0xac, 0x5d, 0xe7, 0x84, 0xad, 0x2e, 0xba, 0x8c, 0xbe, 0x8b, 0xee,
	0x6d, 0x28, 0xf0, 0xe4, 0xb4, 0xd0, 0x53, 0x78, 0xc8, 0xca, 0x57, 0x34, 0x1f, 0x3a, 0x2f, 0xa5,
	0xc8, 0xa8, 0xdc, 0x39, 0x1f, 0x8d, 0xae, 0x43, 0x91, 0xfd, 0x55, 0x21, 0x6f, 0xa3, 0xab, 0x43,
	0x51, 0x7e, 0x7f, 0x23, 0x8c, 0x70, 0x91, 0xd0, 0xa1, 0x37, 0x60, 0x94, 0xc1, 0xf1, 0x55, 0x2c,
	0xdb, 0xc7, 0xa6, 0x8f, 0xb9, 0xcd, 0xa7, 0x6d, 0x12, 0x95, 0x18, 0x9b, 0x45, 0xc6, 0x05, 0xad,
	0xc1, 0x08, 0xfb, 0xc0, 0xb2, 0x21, 0xa8, 0xcd, 0x14, 0xe8, 0xa7, 0x66, 0x06, 0xe0, 0xeb, 0x80,
	0x24, 0x8e, 0xa2, 0x2b, 0x80, 0x66, 0xeb, 0xa6, 0xf1, 0x88, 0x21, 0xab, 0x00, 0x4d, 0xea, 0x3a,
	0x89, 0x74, 0x8f, 0xe9, 0xff, 0xfa, 0x14, 0x94, 0xe5, 0x0b, 0x06, 0x66, 0x45, 0x48, 0xd6, 0xc0,
	0x91, 0x32, 0x70, 0xa4, 0xf4, 0xe4, 0x48, 0x79, 0x78, 0x89, 0xbe, 0x6f, 0xc1, 0xa8, 0x17, 0x5b,
	0xc6, 0x3c, 0xf3, 0x62, 0x4e, 0x45, 0x1b, 0x8f, 0x6f, 0x80, 0x99, 0xf8, 0xcf, 0x70, 0x6f, 0xb7,
	0x4c, 0x50, 0xfe, 0x81, 0x71, 0x18, 0x6d, 0xd9, 0x3a, 0x7d, 0x70, 0xd0, 0x5d, 0xd6, 0x53, 0x56,
	0x22, 0x78, 0x2e, 0xaa, 0xb4, 0xbc, 0xda, 0xe2, 0xae, 0xd2, 0xec, 0xa4, 0x19, 0x73, 0x53, 0xdd,
	0xd9, 0x23, 0xe9, 0xb3, 0x9a, 0x4d, 0xc8, 0xe3, 0x12, 0x7e, 0x91, 0x4b, 0x78, 0xee, 0x34, 0xc8,
	0xa9, 0x1f, 0x40, 0x54, 0xaa, 0x73, 0xd7, 0xc1, 0x47, 0x61, 0x6c, 0xd3, 0xf5, 0x70, 0xd5, 0xf4,
	0x03, 0x71, 0x56, 0xe4, 0x93, 0x9d, 0x15, 0xa3, 0x82, 0x0f, 0x3f, 0x2f, 0x76, 0x60, 0x94, 0xc2,
	0x69, 0x54, 0x3d, 0x3b, 0xc0, 0x1e, 0xf9, 0x8e, 0x6c, 0x13, 0xae, 0xf6, 0xbc, 0x84, 0xe9, 0xd7,
	0x5a, 0x10, 0x6c, 0x8d, 0x92, 0x25, 0xff, 0x44, 0x9b, 0x90, 0x0f, 0x4d, 0x58, 0xb6, 0x6b, 0x5f,
	0xed, 0x7d, 0xc6, 0xd0, 0xa8, 0x0d, 0x79, 0xa3, 0x1f, 0x48, 0xc1, 0x29, 0xbf, 0xd9, 0x20, 0xba,
	0xa2, 0xed, 0x6c, 0x55, 0x6c, 0x89, 0x17, 0xdf, 0xac, 0x87, 0x91, 0x62, 0x2c, 0xdd, 0xf0, 0xc9,
	0x68, 0xf6, 0x58, 0xe4, 0xe0, 0xdf, 0xa4, 0xe0, 0x69, 0xe9, 0xc6, 0xb8, 0x48, 0xa9, 0xd8, 0xce,
	0xa6, 0xeb, 0xd5, 0xd9, 0xfd, 0x15, 0x55, 0xef, 0x6f, 0xf7, 0xa1, 0x75, 0xda, 0x36, 0x9e, 0x8c,
	0x9e, 0x81, 0x8b, 0xc7, 0x95, 0xe8, 0x09, 0xca, 0xbf, 0x3b, 0x04, 0xa5, 0xd8, 0x32, 0x18, 0x40,
	0x0a, 0x72, 0x48, 0xc1, 0xab, 0x71, 0x48, 0x41, 0x75, 0x91, 0xc7, 0x21, 0xea, 0xfe, 0x4e, 0x1a,
	0xf2, 0x03, 0x53, 0x67, 0x60, 0xea, 0x08, 0x53, 0x67, 0xf6, 0x8e, 0xa4, 0xa1, 0xcf, 0x27, 0x92,
	0x54, 0x31, 0x59, 0x3a, 0xfd, 0x8b, 0xef, 0x83, 0xc9, 0x95, 0x7a, 0xa3, 0x46, 0xc1, 0x60, 0xe8,
	0xa5, 0x1b, 0x4d, 0xdb, 0x1a, 0x80, 0x9a, 0x3c, 0xc6, 0x99, 0xcd, 0x4a, 0xcd, 0x48, 0xa4, 0x3c,
	0x81, 0x41, 0x53, 0x92, 0x41, 0x53, 0x92, 0x77, 0x67, 0x53, 0x92, 0xab, 0x64, 0xa7, 0x36, 0x76,
	0x3d, 0x7b, 0x6b, 0x3b, 0x50, 0x6e, 0x4b, 0x12, 0x91, 0xa0, 0x2b, 0x50, 0x24, 0xc3, 0x2a, 0x62,
	0x6d, 0x9f, 0xe8, 0x2a, 0x0e, 0x47, 0xc8, 0xb5, 0x37, 0xf8, 0xda, 0x7e, 0x03, 0xc0, 0xc2, 0x0d,
	0xec, 0x58, 0xd8, 0xa9, 0xee, 0x72, 0xac, 0x90, 0xf3, 0xed, 0xd5, 0xdf, 0x3d, 0x42, 0x78, 0x66,
	0x31, 0xa4, 0x36, 0x24, 0x4e, 0x68, 0x1d, 0x4a, 0x0d, 0xb3, 0x7a, 0xcf, 0xdc, 0xc2, 0xbc, 0x99,
	0xfd, 0xa9, 0xce, 0x7d, 0x28, 0xf6, 0x63, 0xbd, 0xc6, 0x18, 0x10, 0x23, 0x97, 0xfe, 0x81, 0x5e,
	0x85, 0xec, 0x56, 0xcd, 0xdd, 0x30, 0x6b, 0x3c, 0xe7, 0xf4, 0x8c, 0x0e, 0xb7, 0x1b, 0x94, 0xd2,
	0xe0, 0x1c, 0xd0, 0x4b, 0x90, 0xdd, 0xb0, 0x1d, 0xd3, 0xdb, 0xe5, 0xc1, 0xbe, 0x8e, 0x62, 0x9d,
	0x0f, 0x45, 0x8b, 0x90, 0x6e, 0x10, 0x59, 0x5e, 0xee, 0x16, 0x91, 0xdb, 0xef, 0x61, 0xb6, 0xb0,
	0x41, 0xa9, 0xcb, 0xbf, 0x3d, 0x04, 0x10, 0xbd, 0xb6, 0x7e, 0x50, 0x99, 0x6e, 0xc6, 0x7a, 0x69,
	0x74, 0xc4, 0x11, 0xc4, 0xd1, 0x93, 0xb7, 0x6d, 0xa9, 0x31, 0xdc, 0xf4, 0x6c, 0x85, 0x76, 0x1a,
	0xb2, 0x7c, 0xb7, 0xcb, 0x3f, 0x0a, 0x90, 0xe3, 0x2b, 0xa6, 0x4f, 0x7a, 0xdc, 0xd0, 0x43, 0x27,
	0x9d, 0xe0, 0xd0, 0xe9, 0x5d, 0xef, 0xfc, 0x06, 0xc8, 0x7b, 0x5c, 0x1b, 0xe0, 0xea, 0xc3, 0xe5,
	0x04, 0x3b, 0x37, 0x6c, 0x9e, 0x12, 0x25, 0xf6, 0x08, 0xae, 0xe5, 0xbf, 0xcc, 0x42, 0x5e, 0xfc,
	0x77, 0x9f, 0xb4, 0x67, 0xc4, 0x0f, 0x4c, 0xf2, 0x2e, 0xf8, 0x27, 0xd3, 0x01, 0x50, 0xa7, 0x74,
	0x21, 0xe0, 0x56, 0x46, 0x03, 0x70, 0xab, 0xe5, 0x53, 0x67, 0xf5, 0x3f, 0xf5, 0x05, 0xc8, 0x99,
	0x55, 0xcf, 0x75, 0x76, 0xeb, 0x8a, 0x6a, 0xbe, 0x18, 0x8e, 0x6c, 0xc8, 0xf2, 0x25, 0xc2, 0x3c,
	0x40, 0x0b, 0xbd, 0x2c, 0x91, 0x19, 0x96, 0x22, 0xd4, 0x82, 0x4e, 0xcf, 0x27, 0x40, 0x7f, 0x33,
	0x05, 0x23, 0xfc, 0x35, 0x55, 0x36, 0x5d, 0x81, 0xc3, 0xa0, 0x60, 0x0a, 0xcd, 0xe9, 0x35, 0xad,
	0xdd, 0xe7, 0x9a, 0x01, 0x7c, 0xe2, 0xeb, 0xae, 0x57, 0xfe, 0xa5, 0x14, 0x64, 0x79, 0x2e, 0xd3,
	0x0b, 0x4c, 0x4c, 0xa5, 0xba, 0x8a, 0xa9, 0xe5, 0x63, 0x54, 0x40, 0x3d, 0x64, 0x90, 0x49, 0xbe,
	0xed, 0x7e, 0x68, 0x18, 0xb2, 0xec, 0x24, 0x1c, 0xf4, 0x70, 0x12, 0x07, 0xce, 0xdf, 0x48, 0xb5,
	0x36, 0x71, 0x52, 0xf8, 0x2e, 0x37, 0x24, 0xb7, 0x7d, 0x4f, 0xcb, 0x4b, 0x4c, 0x5d, 0xfe, 0xee,
	0x0c, 0xa4, 0xd7, 0xfa, 0xe4, 0xf4, 0xba, 0x14, 0x8a, 0x86, 0xb4, 0xfa, 0x31, 0x2e, 0x36, 0xfb,
	0x65, 0x91, 0x52, 0x9d, 0xd1, 0x3a, 0xfb, 0x18, 0x11, 0x5a, 0x82, 0xf4, 0x3d, 0xdb, 0x11, 0xd1,
	0xfb, 0x0f, 0x75, 0xd4, 0x45, 0xc8, 0xeb, 0xbe, 0x69, 0x3b, 0x56, 0x7c, 0x51, 0x10, 0x72, 0x74,
	0x99, 0x2f, 0x2d, 0x66, 0xf3, 0x2a, 0x2f, 0x2d, 0xbe, 0xa4, 0xae, 0xb6, 0xaa, 0xbf, 0x79, 0x25,
	0x68, 0xba, 0x50, 0xd3, 0xbd, 0x0c, 0x59, 0xe6, 0xba, 0xe4, 0x92, 0xae, 0xad, 0x91, 0x72, 0xdb,
	0xae, 0x47, 0x73, 0x73, 0x9a, 0x50, 0x4d, 0x65, 0x45, 0x21, 0x09, 0xd5, 0xd4, 0xd9, 0x1b, 0x92,
	0x1b, 0xe7, 0x92, 0xba, 0x1b, 0x67, 0x0f, 0xcf, 0xe9, 0xff, 0x38, 0x01, 0xb9, 0x5b, 0xf6, 0x86,
	0x47, 0x34, 0xe8, 0x81, 0xcf, 0x66, 0xd0, 0x40, 0xb6, 0x7b, 0x03, 0xd9, 0x56, 0x64, 0xff, 0x24,
	0xb1, 0x58, 0xc9, 0xdf, 0x33, 0xa2, 0xe7, 0xef, 0x11, 0x7a, 0x58, 0x51, 0x43, 0x0f, 0x0b, 0xcb,
	0x40, 0x4a, 0x1a, 0x65, 0x20, 0x92, 0x77, 0x68, 0xf4, 0x30, 0xbc, 0x43, 0x63, 0x49, 0xbc, 0x43,
	0x0b, 0x5c, 0xf0, 0x8d, 0x27, 0x8c, 0x29, 0x50, 0xf9, 0x27, 0x5c, 0x4c, 0x13, 0xc9, 0x5d, 0x4c,
	0x48, 0xd7, 0xc5, 0xd4, 0xe2, 0x21, 0x9a, 0x4c, 0xe2, 0x21, 0xea, 0xa5, 0x45, 0xec, 0x59, 0xc8,
	0x34, 0x29, 0x6e, 0xfd, 0x09, 0xb5, 0x25, 0x40, 0x07, 0xa3, 0x39, 0x28, 0x99, 0x8d, 0x86, 0xe7,
	0xee, 0x98, 0x35, 0x96, 0x88, 0x7d, 0x52, 0x21, 0x11, 0xbb, 0x28, 0x48, 0x68, 0x1a, 0xf6, 0x75,
	0x18, 0xaf, 0x99, 0x7e, 0x50, 0xf1, 0xf0, 0x8e, 0x8d, 0xef, 0x33, 0x2e, 0xa7, 0x54, 0xd2, 0xb9,
	0x09, 0x95, 0x41, 0x89, 0x28, 0x9f, 0x15, 0x18, 0xc7, 0x9b, 0x9b, 0x98, 0xa2, 0x37, 0x57, 0x78,
	0x43, 0x99, 0x29, 0x25, 0xf8, 0xbd, 0xb1, 0x90, 0x8e, 0x5d, 0x68, 0xf5, 0xb4, 0x9d, 0x3e, 0x20,
	0x4f, 0x5b, 0xb9, 0x17, 0x4f, 0xdb, 0x15, 0xc8, 0x04, 0x6e, 0xc3, 0xae, 0xea, 0xe2, 0xb1, 0x32,
	0x2a, 0xf2, 0x48, 0xe4, 0x71, 0x3c, 0x7b, 0xa3, 0x19, 0xb8, 0x1e, 0xcf, 0xa1, 0x7e, 0x5f, 0x27,
	0x01, 0xcd, 0x87, 0x1a, 0x32, 0x9d, 0xec, 0x08, 0x7d, 0x2a, 0x91, 0x23, 0x34, 0xe6, 0x30, 0x7c,
	0x5a, 0xdf, 0x61, 0x68, 0xc0, 0xb8, 0xc7, 0xb0, 0xc8, 0x2a, 0xa6, 0x17, 0xd8, 0x9b, 0xe4, 0x4e,
	0x9e, 0xe9, 0xfc, 0x46, 0x38, 0x76, 0xd9, 0x1c, 0x1f, 0x6e, 0x8c, 0x79, 0xf1, 0x0b, 0x68, 0x05,
	0x0a, 0x61, 0x97, 0x04, 0x8e, 0x9c, 0xda, 0xb6, 0x88, 0x3a, 0xec, 0x6c, 0x20, 0xe9, 0xc0, 0x11,
	0xf5, 0xbe, 0xfd, 0x03, 0xde, 0xdb, 0x5b, 0xff, 0x00, 0x74, 0x99, 0x03, 0x67, 0x38, 0xc1, 0xd4,
	0x74, 0x97, 0x54, 0xfc, 0x08, 0x18, 0x5a, 0x90, 0xcc, 0x5e, 0x92, 0xf4, 0x20, 0xe5, 0x04, 0x1d,
	0xae, 0xef, 0x4c, 0xff, 0x93, 0x02, 0xd1, 0x7d, 0x1c, 0xaa, 0xd4, 0x0d, 0x74, 0x9f, 0xc7, 0x52,
	0xf7, 0x89, 0x00, 0xf4, 0x0b, 0x7a, 0x00, 0xfa, 0xef, 0xa4, 0x42, 0xcc, 0x45, 0xe5, 0x6c, 0xb2,
	0x5e, 0x3b, 0x9e, 0x25, 0x0b, 0x1a, 0x47, 0x70, 0x86, 0x69, 0x3b, 0xc0, 0x75, 0x9e, 0xce, 0xd2,
	0x7e, 0xed, 0xb0, 0x0d, 0x31, 0xb3, 0x12, 0xe0, 0x7a, 0xa4, 0x38, 0x10, 0xca, 0xf2, 0xbf, 0x18,
	0x82, 0x34, 0xb9, 0xdc, 0x27, 0xd9, 0x19, 0x92, 0x77, 0xe2, 0x83, 0x5d, 0xde, 0x46, 0x1b, 0xe7,
	0xc4, 0x92, 0xe4, 0x89, 0x55, 0x76, 0x4e, 0xec, 0x71, 0xb7, 0x26, 0x15, 0x62, 0xf4, 0xce, 0xa6,
	0xbf, 0x0f, 0x41, 0x9a, 0x82, 0x1f, 0x0d, 0x24, 0xd8, 0x20, 0x35, 0x36, 0x61, 0x6a, 0xec, 0xf5,
	0x96, 0x1a, 0xe3, 0x0f, 0xb4, 0xdf, 0x0e, 0x22, 0x23, 0x70, 0x5f, 0x1b, 0xe7, 0x1a, 0xa4, 0xeb,
	0xae, 0x25, 0x82, 0xf1, 0xcf, 0x76, 0xe2, 0x72, 0xdb, 0xb5, 0x5a, 0x76, 0x14, 0xa1, 0x8c, 0x4c,
	0xb5, 0xa2, 0x8e, 0xa9, 0xd6, 0x53, 0x67, 0xdf, 0xcf, 0x0d, 0x45, 0xed, 0xd8, 0x94, 0xcb, 0x7e,
	0x7f, 0x2b, 0x75, 0x54, 0xfd, 0xd8, 0x12, 0x83, 0xed, 0xea, 0x97, 0xd1, 0x86, 0x9d, 0xdf, 0x62,
	0xa5, 0xd0, 0x63, 0x0f, 0xa3, 0x14, 0x7a, 0x5c, 0xcb, 0x36, 0xfd, 0xbd, 0x54, 0xe8, 0xd2, 0x9c,
	0x50, 0xbd, 0xdb, 0x1f, 0x4d, 0xf5, 0x78, 0x1a, 0x27, 0xfa, 0xf6, 0xba, 0x1d, 0xe1, 0x84, 0xdb,
	0xf5, 0x3a, 0x80, 0xeb, 0x59, 0xd8, 0x63, 0xed, 0x7a, 0x90, 0xde, 0x3a, 0x2f, 0x70, 0xd2, 0xf9,
	0xdd, 0xb0, 0xea, 0x75, 0x52, 0xb3, 0xea, 0xf5, 0x02, 0x64, 0xb0, 0x13, 0x78, 0xbb, 0x1c, 0xff,
	0x6b, 0xba, 0xd3, 0xd6, 0x9e, 0x59, 0x22, 0x23, 0x0d, 0x46, 0x80, 0x5e, 0x85, 0x22, 0xae, 0x37,
	0x82, 0x5d, 0x51, 0x63, 0x72, 0x42, 0xb7, 0x3d, 0x09, 0x21, 0x66, 0xe5, 0x25, 0xe5, 0x3f, 0x1d,
	0x86, 0x0c, 0x65, 0xde, 0x27, 0x85, 0xa6, 0x9b, 0x35, 0x73, 0x4b, 0xbb, 0xd0, 0x94, 0x10, 0xa1,
	0x8b, 0x90, 0xb3, 0x70, 0x0d, 0x07, 0xd8, 0x52, 0xed, 0xbb, 0x20, 0xc6, 0x87, 0x5b, 0x2c, 0xab,
	0xb5, 0xc5, 0x7c, 0xae, 0x3d, 0xe6, 0x54, 0xf7, 0xd7, 0x65, 0x29, 0x06, 0xa3, 0x1d, 0x21, 0x63,
	0x0a, 0xe7, 0xec, 0x05, 0x49, 0x31, 0x7a, 0x4e, 0x5d, 0x31, 0xf2, 0x83, 0xe9, 0x7f, 0x37, 0x0e,
	0x79, 0x21, 0xd7, 0x06, 0x9a, 0xd1, 0x40, 0x33, 0x4a, 0xaa, 0x19, 0xcd, 0xb7, 0x68, 0x46, 0x1f,
	0x6e, 0xfb, 0x59, 0xdc, 0x56, 0x0f, 0x70, 0xa8, 0x15, 0xdd, 0x06, 0xe4, 0x8a, 0xae, 0x96, 0x66,
	0x4d, 0x14, 0x66, 0xa8, 0x81, 0x73, 0x4d, 0x48, 0x94, 0xbc, 0x14, 0x23, 0xa1, 0x07, 0xdc, 0xac,
	0xd9, 0xa6, 0xdf, 0x0d, 0x55, 0x55, 0xa8, 0x55, 0x74, 0x70, 0x6b, 0xfe, 0xc2, 0xa8, 0x7e, 0xfe,
	0xc2, 0x65, 0xae, 0x10, 0x8e, 0x75, 0x8e, 0x01, 0x8b, 0x97, 0x27, 0x94, 0x42, 0xae, 0x0c, 0x5e,
	0x4a, 0xe4, 0xed, 0x0e, 0xa3, 0x7c, 0x61, 0xd3, 0xb0, 0x89, 0x24, 0x4d, 0xc3, 0x2e, 0x42, 0xce,
	0xb4, 0x2c, 0x0f, 0xfb, 0xa2, 0xdb, 0x59, 0x5b, 0x09, 0x3b, 0xc7, 0x86, 0x19, 0x62, 0x3c, 0xba,
	0x05, 0xa5, 0xc6, 0xf6, 0xae, 0x6f, 0x57, 0xcd, 0x5a, 0x85, 0x3e, 0xc0, 0xa4, 0x26, 0x92, 0x8a,
	0xa0, 0xbe, 0xcb, 0x8d, 0xcc, 0x06, 0xcd, 0x62, 0x77, 0x1d, 0xee, 0xf7, 0xfe, 0x50, 0xb7, 0xf7,
	0xc8, 0xd3, 0xde, 0x5d, 0xc7, 0x08, 0x49, 0xd1, 0xf7, 0xa6, 0xe0, 0x44, 0xdd, 0x74, 0x18, 0x76,
	0xbe, 0x2b, 0x39, 0x08, 0xd4, 0x1b, 0x97, 0xf6, 0x92, 0xba, 0x7e, 0x5c, 0xcc, 0x2d, 0x5f, 0x45,
	0x1e, 0xe4, 0x1a, 0xa6, 0x17, 0x54, 0xdc, 0x4d, 0xee, 0x5a, 0x3f, 0x44, 0x90, 0x98, 0x2c, 0x99,
	0x69, 0x75, 0x33, 0x86, 0xcc, 0x77, 0xea, 0xe8, 0x1a, 0x49, 0xfd, 0xc0, 0x30, 0xe4, 0xc5, 0x67,
	0xe9, 0x07, 0xf5, 0x65, 0x09, 0x0a, 0x35, 0xd7, 0xd9, 0xb2, 0x83, 0xa6, 0xd5, 0x35, 0xab, 0x6a,
	0x11, 0x57, 0xed, 0xba, 0x59, 0x0b, 0x6d, 0xbd, 0x88, 0x12, 0x2d, 0x90, 0x93, 0x2f, 0x60, 0x5c,
	0x32, 0x7a, 0x5c, 0x42, 0x42, 0x74, 0x09, 0xf2, 0x66, 0x8d, 0x33, 0xc9, 0x2a, 0x31, 0x31, 0x42,
	0x82, 0xd9, 0xcb, 0x92, 0x92, 0xa1, 0xbd, 0xaa, 0xa6, 0x7f, 0xf7, 0x83, 0x90, 0xbb, 0x8d, 0x4d,
	0xbf, 0xe9, 0x0d, 0x7c, 0xc8, 0x83, 0xf8, 0xf9, 0x20, 0x7e, 0xfe, 0xee, 0x8e, 0x9f, 0x27, 0x73,
	0x2f, 0xc4, 0x42, 0xdf, 0x13, 0x3d, 0x86, 0xbe, 0x51, 0x8f, 0xa1, 0xef, 0xc9, 0xc4, 0xa1, 0xef,
	0xe3, 0x3d, 0x85, 0xbe, 0x4f, 0x1c, 0x48, 0xe8, 0xfb, 0xe4, 0x01, 0x85, 0xbe, 0x4f, 0x1d, 0x48,
	0xe8, 0x7b, 0xea, 0x80, 0x42, 0xdf, 0xa7, 0x0f, 0x24, 0xf4, 0x5d, 0x3e, 0x88, 0xd0, 0xf7, 0x13,
	0xbd, 0x87, 0xbe, 0x9f, 0xec, 0x3d, 0xf4, 0xfd, 0xd4, 0xc1, 0x84, 0xbe, 0x9f, 0xee, 0x31, 0xf4,
	0xed, 0x41, 0xae, 0xc6, 0x62, 0xbd, 0x3c, 0x8a, 0xae, 0xa0, 0xe9, 0x9d, 0xd3, 0x73, 0xee, 0xf1,
	0x58, 0xb2, 0x21, 0x26, 0x42, 0xd7, 0x00, 0x2c, 0xdb, 0xaf, 0xd6, 0x4c, 0xbb, 0x4e, 0xe3, 0xed,
	0x6a, 0x2f, 0x42, 0xa2, 0x41, 0x73, 0x90, 0xf3, 0xab, 0xb4, 0xbb, 0xdb, 0xd4, 0x7b, 0xf5, 0x0c,
	0x07, 0x41, 0x87, 0xee, 0xc2, 0x44, 0xd5, 0xad, 0x53, 0xdd, 0x1f, 0x57, 0x04, 0xb3, 0x69, 0x4d,
	0x74, 0x97, 0x90, 0xc3, 0x3a, 0xe7, 0x2a, 0xec, 0xb1, 0xf7, 0x25, 0xe9, 0xb7, 0x7d, 0x03, 0xc6,
	0x3c, 0xdb, 0xbf, 0x57, 0x31, 0xad, 0x6f, 0x6c, 0xfa, 0xb4, 0xe1, 0xed, 0xd4, 0xb3, 0x4a, 0x02,
	0x69, 0x94, 0x90, 0xcd, 0x85, 0x54, 0x44, 0x1c, 0x78, 0x66, 0x80, 0x2b, 0xe6, 0xd6, 0x96, 0x87,
	0xb7, 0x98, 0x09, 0xf3, 0x7e, 0xb5, 0x1e, 0xc5, 0x84, 0x6e, 0x2e, 0x22, 0x23, 0x6b, 0x56, 0x18,
	0xd7, 0x78, 0xea, 0x03, 0xaa, 0x6b, 0x36, 0x24, 0x41, 0x35, 0x78, 0x6f, 0xb5, 0x66, 0x3b, 0xd4,
	0xd0, 0x8b, 0x03, 0x70, 0x50, 0x2b, 0x9f, 0x25, 0x48, 0x7c, 0x50, 0x91, 0xef, 0x33, 0x82, 0x55,
	0xbc, 0xc2, 0x76, 0x5d, 0x30, 0x42, 0xaf, 0xc1, 0x71, 0xbb, 0x4e, 0xe4, 0x2b, 0xfd, 0x59, 0x11,
	0x1e, 0xda, 0xa9, 0xaf, 0x53, 0x7a, 0xf8, 0x49, 0x89, 0xf6, 0x0e, 0x27, 0xa5, 0x8b, 0x35, 0x5c,
	0xcb, 0x53, 0x1f, 0xa2, 0xdf, 0x55, 0x65, 0xb1, 0x86, 0x34, 0xe8, 0x32, 0xe4, 0xb7, 0x9a, 0xb6,
	0x45, 0xa1, 0xb3, 0x3f, 0xac, 0xf8, 0xa4, 0x21, 0x05, 0xfa, 0x08, 0x0c, 0xfb, 0x38, 0x98, 0xfa,
	0x7a, 0xa5, 0x27, 0x20, 0x43, 0xd1, 0x25, 0xc8, 0x6c, 0x79, 0x6e, 0xb3, 0x31, 0xf5, 0x5c, 0x67,
	0x29, 0xc5, 0x75, 0xf2, 0x19, 0x1a, 0x43, 0x31, 0x18, 0x0d, 0xfa, 0x24, 0x4c, 0xf8, 0xcd, 0x86,
	0x48, 0x82, 0xa5, 0x07, 0x9b, 0x39, 0xf5, 0x7c, 0xe7, 0x44, 0x5c, 0xc1, 0x68, 0x5d, 0x22, 0xa4,
	0x49, 0x2d, 0xe3, 0x7e, 0xcb, 0x95, 0xf2, 0xaf, 0x8e, 0x40, 0x86, 0xce, 0xd7, 0x0f, 0xf6, 0xdd,
	0xab, 0x31, 0x35, 0x35, 0xad, 0xda, 0x6d, 0x28, 0x42, 0x9b, 0x92, 0xd4, 0xd5, 0x87, 0x53, 0x3c,
	0xb3, 0x06, 0xd0, 0x70, 0x1b, 0xcd, 0x9a, 0x19, 0x44, 0xb6, 0xc2, 0x47, 0x94, 0xd6, 0xcb, 0xcc,
	0x5a, 0x48, 0x67, 0x48, 0x3c, 0x08, 0x47, 0x3f, 0x20, 0xdb, 0x9f, 0xbe, 0x93, 0xbc, 0x0e, 0xc7,
	0xf5, 0x90, 0xce, 0x90, 0x78, 0x94, 0xbf, 0x33, 0x0d, 0x10, 0x4d, 0xd6, 0x0f, 0xeb, 0x66, 0x3e,
	0xd9, 0xba, 0x89, 0xad, 0x17, 0x11, 0xcf, 0xcd, 0x24, 0x89, 0xe7, 0x8a, 0xc5, 0x96, 0x4d, 0xbe,
	0xd8, 0x12, 0xb4, 0xa6, 0x98, 0x87, 0x3c, 0xc7, 0xc6, 0x31, 0x79, 0xc5, 0x95, 0x6a, 0x69, 0x44,
	0x48, 0x57, 0xfe, 0xeb, 0xc3, 0x00, 0xd1, 0x3a, 0x19, 0x2c, 0x06, 0xf6, 0x1a, 0x66, 0xa5, 0x37,
	0xab, 0x26, 0x40, 0xc2, 0xf1, 0x64, 0x2d, 0x34, 0xcc, 0x60, 0x5b, 0x75, 0x2d, 0x90, 0xb1, 0xe5,
	0x5f, 0x1b, 0x86, 0xf1, 0x56, 0x61, 0x3f, 0xf8, 0x16, 0xec, 0x5b, 0x5c, 0x11, 0xb6, 0xa4, 0x26,
	0x8a, 0x2a, 0x37, 0x2a, 0xe5, 0x4f, 0x99, 0x4d, 0xf8, 0x29, 0x73, 0xea, 0x9f, 0x32, 0x59, 0x62,
	0x15, 0x97, 0xdb, 0xd3, 0xbf, 0xff, 0x34, 0x94, 0xf8, 0xdf, 0x06, 0x05, 0x11, 0x1d, 0xf8, 0xf7,
	0x06, 0x71, 0xc4, 0xa4, 0x5d, 0xc6, 0x57, 0x5b, 0xe2, 0x88, 0x2f, 0x74, 0xd1, 0x1a, 0xd8, 0x8a,
	0xeb, 0xe0, 0x0e, 0x5b, 0xe1, 0xb6, 0xd8, 0x48, 0x67, 0xdf, 0x5a, 0x8c, 0x5d, 0x9b, 0x2c, 0xc6,
	0x07, 0x90, 0xab, 0xb3, 0x61, 0xea, 0xed, 0xc3, 0x13, 0x01, 0x23, 0x8a, 0x9b, 0x11, 0xd3, 0xb1,
	0xf0, 0x8f, 0x66, 0xb3, 0x87, 0x73, 0x3d, 0x82, 0x31, 0x26, 0x03, 0x58, 0xf9, 0xfe, 0x14, 0x9c,
	0x64, 0x50, 0xc2, 0x7b, 0xc2, 0x67, 0x63, 0x47, 0x11, 0x3e, 0x3b, 0x11, 0x4e, 0x1e, 0x8b, 0x9f,
	0x5d, 0x85, 0x2c, 0x77, 0x88, 0x8d, 0xab, 0x38, 0xc4, 0xa2, 0x55, 0xc4, 0xa8, 0xd0, 0x9c, 0xb0,
	0xa6, 0x26, 0x3a, 0xd7, 0x05, 0xc4, 0x96, 0x51, 0xdc, 0xa6, 0xfa, 0x8e, 0x14, 0x4c, 0xe2, 0x1d,
	0xb3, 0xd6, 0xa4, 0xae, 0x1b, 0x91, 0xd3, 0xea, 0xab, 0x37, 0x7d, 0x38, 0xab, 0x97, 0x18, 0x35,
	0xdf, 0x74, 0xac, 0x1a, 0x36, 0x50, 0x38, 0xa7, 0x90, 0x22, 0x7e, 0xf9, 0xdf, 0xa3, 0x81, 0xfd,
	0xb5, 0xaf, 0xfd, 0xf5, 0x46, 0xcc, 0x12, 0xca, 0x74, 0x06, 0x92, 0xd9, 0xe7, 0x5b, 0xb7, 0xb3,
	0x87, 0x16, 0xa1, 0xc4, 0xb7, 0x32, 0x75, 0x32, 0x29, 0x07, 0xdf, 0x8a, 0x9c, 0x6a, 0x9d, 0x10,
	0x91, 0xbb, 0x93, 0xac, 0xaa, 0x9c, 0xfe, 0xdd, 0xb5, 0xb1, 0xad, 0xfe, 0xef, 0xe1, 0x81, 0x6d,
	0x75, 0xc0, 0xb6, 0xd5, 0x39, 0xc8, 0xd0, 0x4c, 0xcd, 0x6e, 0x1f, 0x7a, 0xc5, 0x09, 0xf0, 0x16,
	0xf6, 0x0c, 0x36, 0x1a, 0xbd, 0x05, 0x79, 0x2e, 0x7e, 0x7d, 0xf5, 0x04, 0xb2, 0x33, 0x54, 0x2e,
	0x68, 0xa5, 0x7d, 0x19, 0xe1, 0x34, 0xe5, 0xdf, 0x83, 0x81, 0x2d, 0xb5, 0xf7, 0xe3, 0x7f, 0x03,
	0xe4, 0xe8, 0x06, 0x69, 0xd6, 0xb9, 0x14, 0xb8, 0x9e, 0x6c, 0x9f, 0x49, 0x7f, 0xb2, 0xc3, 0x40,
	0xb0, 0x2d, 0xff, 0x71, 0x0e, 0xc6, 0x5a, 0xfe, 0xb3, 0x3f, 0x90, 0x87, 0x39, 0x0e, 0xa7, 0x1e,
	0xe4, 0x0f, 0x23, 0x42, 0xdf, 0x92, 0xda, 0x47, 0x00, 0x7f, 0xc3, 0xc1, 0xbc, 0xfa, 0xd6, 0xdf,
	0x87, 0x29, 0xaa, 0xcb, 0x9f, 0x4d, 0xc3, 0xe9, 0xb6, 0xf3, 0x0d, 0x36, 0xd9, 0xe3, 0x24, 0x61,
	0x67, 0xe7, 0x24, 0xe3, 0xfa, 0x9c, 0xae, 0x09, 0x40, 0xd7, 0xf6, 0xf4, 0x57, 0x27, 0x21, 0x73,
	0x1b, 0x5b, 0xb6, 0x39, 0x30, 0xad, 0x07, 0xa6, 0x75, 0xd2, 0x14, 0xdd, 0x6f, 0x96, 0x7a, 0xd1,
	0x2b, 0x77, 0xda, 0xbd, 0x7a, 0x50, 0x7d, 0xe1, 0x97, 0x63, 0x76, 0xf8, 0x73, 0x6d, 0xc5, 0xa9,
	0xbd, 0x65, 0x07, 0x66, 0x8d, 0x2e, 0xf6, 0x36, 0x66, 0xf8, 0x1c, 0x2d, 0x43, 0xa2, 0xcc, 0x8a,
	0xba, 0x61, 0x5f, 0x46, 0x47, 0x24, 0xcf, 0x8e, 0x8d, 0xef, 0x6b, 0xd7, 0x41, 0x11, 0x22, 0xf4,
	0xeb, 0x49, 0xea, 0xa0, 0xfe, 0xf6, 0x50, 0xf2, 0x5a, 0x98, 0xe4, 0xa5, 0x37, 0xef, 0xb6, 0x0a,
	0xaa, 0xf5, 0x06, 0x39, 0x2d, 0xb1, 0x54, 0x41, 0xf5, 0x4e, 0x8a, 0x97, 0xb5, 0x3f, 0x08, 0xd4,
	0x1d, 0x04, 0x5e, 0xc2, 0x02, 0x2a, 0x4a, 0xa6, 0x2c, 0x82, 0x97, 0x1a, 0xb6, 0xef, 0x5a, 0x78,
	0x75, 0x73, 0xc1, 0xf4, 0xb0, 0x21, 0xee, 0x12, 0xad, 0x01, 0xb8, 0xd5, 0x6a, 0xd3, 0x63, 0x10,
	0x68, 0xe3, 0x9d, 0x13, 0xb6, 0xe9, 0x3a, 0x9e, 0x59, 0x0d, 0xc7, 0xcf, 0x67, 0x39, 0x26, 0x9c,
	0xc4, 0x03, 0xed, 0x42, 0x9e, 0x65, 0xaf, 0xbb, 0x9e, 0x7a, 0x59, 0x56, 0x2f, 0x1d, 0x9d, 0xc3,
	0xe9, 0xd0, 0x32, 0x8c, 0xf0, 0xc6, 0x5f, 0xf4, 0x24, 0x46, 0x7a, 0xde, 0x6a, 0x60, 0xb4, 0xb4,
	0xd1, 0xc3, 0xa2, 0xdc, 0x50, 0x5b, 0x33, 0x8f, 0x3b, 0xea, 0xac, 0xfd, 0xe3, 0x29, 0xc8, 0x5a,
	0x74, 0x61, 0xf1, 0x2c, 0x2c, 0x85, 0x37, 0xe1, 0x24, 0x5e, 0xb7, 0x67, 0xf5, 0x68, 0x6e, 0xe3,
	0xc0, 0xb3, 0xab, 0x06, 0xbf, 0x41, 0x74, 0x09, 0xb2, 0xdb, 0x98, 0x66, 0xf1, 0x9c, 0x50, 0xc7,
	0x56, 0xe7, 0x24, 0xe8, 0x22, 0x64, 0xee, 0xdb, 0x56, 0xb0, 0xcd, 0x13, 0xbd, 0x94, 0x68, 0x19,
	0x05, 0x99, 0x77, 0xd3, 0x33, 0xeb, 0xd8, 0xe7, 0xc9, 0x5d, 0x6a, 0xf3, 0x32, 0x12, 0xf4, 0x0a,
	0xe4, 0xad, 0x26, 0x4b, 0xcc, 0xe0, 0xb0, 0x28, 0x4a, 0xad, 0xa6, 0x43, 0x22, 0xb4, 0x18, 0xc1,
	0x50, 0x9c, 0xee, 0xac, 0xf5, 0x45, 0x30, 0x14, 0x11, 0x4a, 0x24, 0x27, 0x4d, 0xda, 0x54, 0xb2,
	0xfc, 0x77, 0x53, 0x00, 0xd1, 0x6e, 0x22, 0x27, 0x35, 0xed, 0xb6, 0x11, 0xd8, 0x75, 0xcc, 0x95,
	0xa2, 0xae, 0x8e, 0xca, 0xe5, 0x63, 0x46, 0xde, 0xe2, 0x7f, 0xa3, 0x0b, 0xa1, 0x5f, 0x70, 0x48,
	0xc5, 0x2f, 0xb8, 0x7c, 0x4c, 0x78, 0x04, 0xe7, 0x8b, 0xb2, 0x18, 0x98, 0xbd, 0x28, 0xe9, 0x78,
	0xcf, 0xab, 0xeb, 0x78, 0x96, 0x6d, 0x4e, 0xff, 0xf9, 0x69, 0x00, 0xf2, 0xd7, 0xa0, 0x06, 0xeb,
	0x71, 0x56, 0xf0, 0x84, 0x2d, 0x54, 0x48, 0x62, 0x0b, 0x2d, 0xb6, 0x04, 0x4d, 0x9e, 0xeb, 0x74,
	0x1c, 0xb5, 0x2d, 0xbf, 0x9a, 0x85, 0xbc, 0xed, 0x57, 0x36, 0x3c, 0xd3, 0xb1, 0x14, 0x5b, 0x5d,
	0x1b, 0x39, 0xdb, 0x9f, 0x27, 0xe3, 0xd1, 0x1d, 0x98, 0xb4, 0xfd, 0x8a, 0xbb, 0x83, 0xbd, 0x4a,
	0xb0, 0x8d, 0x2b, 0xa2, 0x24, 0xba, 0xa8, 0xc6, 0x66, 0xdc, 0xf6, 0x57, 0x77, 0xb0, 0x77, 0x77,
	0x1b, 0x2f, 0xf0, 0xf2, 0xe6, 0x3d, 0xed, 0x89, 0x4b, 0x47, 0xdf, 0x9e, 0xf8, 0x12, 0xa4, 0x37,
	0x5d, 0xaf, 0xce, 0x75, 0x3c, 0x8d, 0xba, 0x53, 0xd7, 0xab, 0xa3, 0xdb, 0x00, 0xb6, 0xb3, 0xe5,
	0x61, 0x8b, 0x06, 0x6d, 0xc6, 0x3a, 0xf7, 0xaa, 0x8d, 0x3e, 0xcb, 0xcc, 0x4a, 0x48, 0x64, 0x48,
	0x0c, 0xd0, 0xab, 0xad, 0x50, 0x8c, 0xe3, 0x9d, 0xab, 0xec, 0x24, 0x8e, 0x7b, 0x00, 0xc8, 0x2f,
	0x40, 0xc6, 0xae, 0x93, 0xcd, 0x3b, 0xa1, 0x0c, 0x23, 0xc4, 0x08, 0xca, 0x3f, 0x93, 0x01, 0x88,
	0x6e, 0xb0, 0x1f, 0xdc, 0x18, 0x77, 0x79, 0xb5, 0x2e, 0x93, 0x63, 0x67, 0xb4, 0x3e, 0x10, 0x43,
	0x7e, 0x89, 0x43, 0xfd, 0x52, 0x6e, 0xe8, 0x32, 0x14, 0x6c, 0xbf, 0xc2, 0xf1, 0x72, 0x14, 0xcb,
	0x8e, 0xf3, 0xb6, 0x3f, 0xc7, 0x10, 0x73, 0xce, 0x41, 0xd6, 0xac, 0x4b, 0xae, 0x8d, 0xa7, 0xda,
	0x2e, 0x7a, 0x72, 0x47, 0x06, 0x1f, 0x5c, 0xfe, 0x61, 0x01, 0x3a, 0x73, 0x17, 0xc6, 0xab, 0x7c,
	0x4d, 0x56, 0xaa, 0x6c, 0x51, 0xf2, 0x8f, 0xa4, 0xba, 0x86, 0x97, 0x8f, 0x19, 0x63, 0xd5, 0xf8,
	0x25, 0xf4, 0x53, 0xa9, 0x44, 0xc8, 0xbf, 0xae, 0x9e, 0xaa, 0xbe, 0xde, 0xdc, 0xf0, 0x03, 0xd3,
	0xe1, 0xfa, 0xd9, 0x19, 0x9d, 0x93, 0x94, 0x7d, 0x9f, 0x38, 0x64, 0x70, 0x96, 0x7d, 0xde, 0xf2,
	0x6f, 0xf6, 0x17, 0xac, 0xfa, 0x52, 0x74, 0x10, 0x7a, 0xba, 0x65, 0xf1, 0x11, 0x25, 0xba, 0x15,
	0xa9, 0x72, 0x99, 0xce, 0xad, 0x08, 0xf6, 0x8a, 0x13, 0x7a, 0xc0, 0xca, 0x08, 0x63, 0xe8, 0x3a,
	0x64, 0x36, 0xcc, 0xa0, 0xba, 0xcd, 0x4f, 0xe6, 0x8f, 0x68, 0xf0, 0x9a, 0x27, 0x74, 0x06, 0x23,
	0x2f, 0xff, 0x46, 0x1a, 0x72, 0x9c, 0x79, 0x3f, 0x7c, 0xab, 0x8f, 0xc5, 0x24, 0xcc, 0xcb, 0xfa,
	0x6f, 0xb8, 0xbd, 0x98, 0xb9, 0x1a, 0x0a, 0x8a, 0x8c, 0x56, 0xdb, 0x78, 0x21, 0x31, 0xfe, 0x20,
	0x75, 0xa8, 0x12, 0xe3, 0xed, 0x44, 0x02, 0xe3, 0xc2, 0xc1, 0xee, 0xfc, 0xdf, 0x19, 0x82, 0x0c,
	0x5d, 0x5e, 0xfd, 0xb0, 0x96, 0xae, 0x00, 0xd4, 0xdc, 0x40, 0xf4, 0x3e, 0x4c, 0xab, 0x15, 0x58,
	0xd5, 0xdc, 0x80, 0x77, 0x3d, 0x5c, 0x81, 0x31, 0xfc, 0xa0, 0x61, 0x33, 0x43, 0x8e, 0x95, 0x19,
	0x29, 0x76, 0x4b, 0x33, 0x46, 0x23, 0x42, 0x72, 0x6d, 0xf6, 0xaa, 0x64, 0xef, 0x24, 0xf8, 0x56,
	0xd3, 0xbf, 0xff, 0x2c, 0x4c, 0x45, 0x3f, 0xe7, 0xac, 0xba, 0xed, 0xd8, 0x2c, 0x22, 0x3d, 0x30,
	0x81, 0x06, 0x3e, 0xee, 0xe4, 0x3e, 0xee, 0x5f, 0x4e, 0xc5, 0x0a, 0x35, 0x94, 0xdd, 0xdc, 0xdf,
	0x4c, 0xa5, 0xce, 0x79, 0x65, 0x6f, 0x5a, 0xcd, 0x74, 0xa2, 0x9f, 0x9a, 0x4d, 0x1f, 0x89, 0x96,
	0x67, 0x07, 0xbb, 0x72, 0x73, 0x06, 0xa9, 0x4e, 0xe4, 0xe7, 0x53, 0x51, 0xa9, 0xbf, 0x72, 0x43,
	0xcd, 0xff, 0x1f, 0xbd, 0x85, 0x6b, 0xfa, 0x1b, 0x31, 0xbe, 0xf3, 0xf4, 0x74, 0xb5, 0xc8, 0xd7,
	0x2f, 0x10, 0x03, 0x3e, 0xde, 0xd2, 0x27, 0x6c, 0xb6, 0xfb, 0x69, 0x17, 0xbf, 0x81, 0x8e, 0x65,
	0xad, 0xf9, 0xaa, 0x19, 0xe0, 0x2d, 0xd7, 0xdb, 0xd5, 0x75, 0xdb, 0x87, 0x84, 0xc8, 0x06, 0xa8,
	0x87, 0x53, 0x73, 0xc3, 0xee, 0x92, 0xee, 0x4d, 0x4a, 0xff, 0xd1, 0x72, 0x2c, 0x4b, 0xcc, 0xd1,
	0x4f, 0xa4, 0xa2, 0x28, 0x81, 0xb2, 0x63, 0xdb, 0xe9, 0xa1, 0x8d, 0x72, 0x02, 0x87, 0xff, 0xfe,
	0x6e, 0xf8, 0xf1, 0x47, 0xc2, 0x0d, 0xff, 0xb9, 0x14, 0x9c, 0x94, 0x1b, 0xd1, 0x4a, 0x7d, 0x5e,
	0x27, 0x0e, 0x09, 0xac, 0x22, 0x94, 0xa3, 0x27, 0xa4, 0x1e, 0xb4, 0xd1, 0xbc, 0x68, 0x13, 0x0a,
	0x61, 0x1d, 0x2d, 0x4f, 0xeb, 0xd3, 0xde, 0x01, 0x33, 0x4b, 0x82, 0x43, 0xcb, 0xda, 0x8a, 0x58,
	0xa3, 0x8f, 0x42, 0xa1, 0x81, 0x3d, 0x32, 0x2f, 0xf6, 0x38, 0x40, 0x99, 0xfe, 0x3c, 0x6b, 0x82,
	0x83, 0x11, 0x31, 0x23, 0x86, 0xab, 0xe3, 0x06, 0x95, 0x2d, 0x7b, 0x07, 0x0b, 0x0c, 0x95, 0xee,
	0x86, 0xab, 0xe3, 0x06, 0x37, 0x08, 0x01, 0x7a, 0x0d, 0xc6, 0x79, 0x30, 0x21, 0x62, 0x72, 0x42,
	0x2f, 0xa2, 0x30, 0xca, 0x18, 0xdc, 0x11, 0x2c, 0x5b, 0xe2, 0x13, 0x27, 0x93, 0xc7, 0x27, 0x7e,
	0x29, 0x15, 0xde, 0x5d, 0xa4, 0x95, 0x2a, 0xc3, 0x9a, 0x34, 0xf4, 0x96, 0xfa, 0x82, 0xeb, 0x58,
	0xd1, 0xd1, 0x90, 0xa4, 0x91, 0xb0, 0x31, 0xc6, 0x6e, 0x36, 0xbc, 0x05, 0xf4, 0xed, 0x29, 0x28,
	0x36, 0x3c, 0xa9, 0xf8, 0x66, 0x4a, 0x75, 0x9f, 0xbe, 0x42, 0xef, 0xe2, 0xa2, 0xfe, 0xe9, 0x20,
	0x82, 0xb8, 0xb1, 0x79, 0x91, 0x1b, 0x86, 0x68, 0x4e, 0xab, 0xbe, 0xbe, 0xb3, 0xc9, 0x30, 0xfd,
	0x78, 0xa0, 0x25, 0x61, 0xb0, 0x00, 0xad, 0x42, 0xd6, 0x72, 0x69, 0x15, 0xc6, 0x13, 0xaa, 0xc6,
	0x57, 0xcb, 0x26, 0x59, 0xa4, 0xe4, 0x06, 0x67, 0x83, 0xbe, 0x25, 0x05, 0x25, 0xbc, 0x83, 0x9d,
	0xa0, 0xb2, 0x6d, 0xfb, 0x01, 0x39, 0x89, 0x9e, 0x54, 0x7d, 0x03, 0x9a, 0x66, 0xcd, 0x9a, 0xe7,
	0xee, 0x60, 0x87, 0x76, 0x84, 0x2e, 0xd2, 0x19, 0x97, 0xd9, 0x84, 0xe5, 0x3f, 0x4d, 0xc5, 0xa2,
	0x05, 0x7d, 0x68, 0xb9, 0x15, 0xe5, 0x33, 0xba, 0xfc, 0x7d, 0x29, 0x28, 0x84, 0x22, 0xf1, 0x61,
	0xc6, 0x7b, 0x46, 0x24, 0xe1, 0x5e, 0xfe, 0x5a, 0x1a, 0x0a, 0xa1, 0x00, 0xed, 0x07, 0xcb, 0xf2,
	0x0b, 0x43, 0x90, 0x31, 0xab, 0x81, 0x2b, 0xac, 0x4a, 0x85, 0xcf, 0xfd, 0x47, 0x29, 0x49, 0x59,
	0x39, 0x62, 0x74, 0xd0, 0x73, 0xea, 0x47, 0x36, 0x05, 0x3a, 0x58, 0xc3, 0x9e, 0xef, 0x26, 0x8a,
	0x13, 0x1b, 0xec, 0xb5, 0xa0, 0xcf, 0x40, 0xd1, 0x75, 0x2a, 0x1b, 0x78, 0xdb, 0xac, 0x6d, 0x12,
	0xd5, 0x3c, 0x73, 0x14, 0xf1, 0x08, 0x70, 0x9d, 0x79, 0x3a, 0xe3, 0xea, 0x66, 0xf9, 0xf7, 0x33,
	0x90, 0x65, 0xe2, 0xa8, 0x1f, 0xd6, 0xdb, 0x19, 0x6e, 0xfe, 0xaa, 0xf9, 0x30, 0x98, 0xed, 0x7b,
	0x09, 0xd2, 0x34, 0xb9, 0x40, 0x37, 0x5d, 0x90, 0x10, 0xa1, 0x2b, 0x90, 0xf1, 0xdc, 0x66, 0x88,
	0xe6, 0xa9, 0x5e, 0x90, 0x47, 0xa9, 0xd0, 0x2b, 0x90, 0xad, 0xe3, 0x60, 0xdb, 0xb5, 0x78, 0xd2,
	0xa0, 0x32, 0x3d, 0x27, 0x43, 0xb3, 0x90, 0xb6, 0x5c, 0x5f, 0x34, 0x19, 0x54, 0xf5, 0xd4, 0x51,
	0x1a, 0xf4, 0x51, 0x48, 0x7b, 0x66, 0x20, 0x62, 0x83, 0x97, 0x13, 0x9e, 0x62, 0x33, 0x86, 0x19,
	0x44, 0xf9, 0x27, 0x94, 0x63, 0xf9, 0xbb, 0x52, 0x90, 0x26, 0x97, 0xd1, 0x39, 0xc8, 0xd0, 0xc1,
	0x7c, 0x55, 0x75, 0x0e, 0x39, 0x2c, 0x1f, 0x33, 0xd8, 0x68, 0xb4, 0x08, 0xf9, 0xb7, 0xf8, 0xbd,
	0x72, 0x81, 0xaa, 0xf8, 0x64, 0x44, 0x28, 0x0b, 0xca, 0xf9, 0x2c, 0x7b, 0xbe, 0xd9, 0x5b, 0x92,
	0x53, 0xa9, 0x67, 0x5b, 0x76, 0xfa, 0x37, 0xdf, 0x0f, 0x28, 0xfa, 0xcf, 0x45, 0xdb, 0x6f, 0x60,
	0xc7, 0x1f, 0x60, 0x8f, 0x0d, 0x9c, 0x4b, 0x89, 0x9d, 0x4b, 0x7e, 0xe4, 0x99, 0x51, 0x76, 0x2c,
	0xbd, 0xdc, 0xab, 0x4f, 0xe5, 0x56, 0xe8, 0x53, 0x61, 0x31, 0xf9, 0xb3, 0xdd, 0xb7, 0xbf, 0x58,
	0xeb, 0xfb, 0xc4, 0xf8, 0x65, 0x2f, 0x4a, 0x31, 0xa9, 0x17, 0xa5, 0x1a, 0xf3, 0xa2, 0x30, 0x67,
	0xcc, 0x39, 0xf5, 0xdb, 0x52, 0xf3, 0x9f, 0x7c, 0x31, 0x95, 0x20, 0xcb, 0x72, 0xfb, 0xe1, 0x7a,
	0x4e, 0xc6, 0x1e, 0x75, 0xcf, 0xc9, 0xf8, 0x43, 0xf2, 0x9c, 0x18, 0xb2, 0x47, 0x83, 0xb9, 0x6f,
	0x34, 0xd6, 0xf9, 0xfe, 0xbe, 0x8c, 0xbf, 0x97, 0x82, 0x29, 0xd6, 0xd1, 0xc5, 0xfe, 0x26, 0xf2,
	0x9c, 0x31, 0xdb, 0x19, 0xa9, 0x3e, 0x68, 0xcf, 0xb6, 0xf3, 0x29, 0xe9, 0x1e, 0xd6, 0x64, 0x33,
	0x5a, 0x80, 0x44, 0x4d, 0x26, 0x01, 0xed, 0x9d, 0x97, 0x0e, 0xde, 0xe3, 0x5a, 0x2a, 0x45, 0x48,
	0x87, 0x6e, 0xc0, 0x88, 0x65, 0xee, 0xfa, 0x15, 0x0a, 0xcf, 0xb3, 0xcb, 0x93, 0x18, 0x55, 0xd9,
	0x00, 0x21, 0xa5, 0xe8, 0x0f, 0xbb, 0x68, 0x09, 0x4a, 0xf7, 0xb7, 0xb1, 0x43, 0xde, 0x70, 0xc3,
	0xf4, 0xb0, 0xc5, 0x73, 0x1a, 0xbb, 0x47, 0x95, 0x8a, 0x84, 0x6c, 0x8d, 0x53, 0xa1, 0x57, 0x61,
	0x9c, 0xb2, 0xd9, 0x36, 0x1d, 0x0b, 0x5b, 0x34, 0x99, 0x88, 0x67, 0x38, 0x2a, 0xc4, 0xa7, 0x08,
	0xe5, 0x32, 0x25, 0x5c, 0xdd, 0xc1, 0x1e, 0x7a, 0x9b, 0xe2, 0x94, 0x04, 0xb6, 0x63, 0xea, 0xb9,
	0x4a, 0x92, 0x62, 0xe6, 0xca, 0xb3, 0xa1, 0x2f, 0xa7, 0x20, 0xef, 0xe1, 0x2a, 0xb6, 0xc9, 0x13,
	0x28, 0xfb, 0x48, 0xdc, 0x23, 0x4e, 0x10, 0x37, 0xc2, 0x7b, 0x4c, 0xec, 0x60, 0xb9, 0x0d, 0x88,
	0x79, 0x46, 0x2a, 0xb6, 0xe3, 0xd3, 0xe9, 0xc8, 0xcb, 0x7e, 0xa2, 0x33, 0x74, 0x36, 0xf7, 0xa9,
	0x4c, 0x30, 0xca, 0x95, 0x88, 0x10, 0x7d, 0x02, 0x8a, 0x7e, 0x73, 0xc3, 0x0f, 0xec, 0xa0, 0x49,
	0x19, 0x3d, 0xa9, 0xea, 0xb5, 0x09, 0x05, 0xc1, 0xba, 0x44, 0x6e, 0xc4, 0x98, 0xa1, 0xbf, 0x99,
	0x82, 0x51, 0x0b, 0x07, 0xb8, 0x1a, 0x60, 0xab, 0x62, 0xfb, 0x7e, 0x13, 0xf3, 0xd6, 0x75, 0x2a,
	0x45, 0xfc, 0x7a, 0x72, 0x77, 0x91, 0x4f, 0xb3, 0x42, 0x66, 0x31, 0x4a, 0x96, 0xfc, 0x13, 0xcd,
	0x42, 0xde, 0x71, 0x83, 0x8a, 0xe5, 0x3a, 0x98, 0x37, 0xbe, 0xeb, 0x9e, 0x65, 0xe7, 0xb8, 0xc1,
	0xa2, 0xeb, 0x60, 0xb4, 0x0d, 0x63, 0x82, 0x56, 0x74, 0x89, 0x78, 0x86, 0xb2, 0xb8, 0xa0, 0xf1,
	0x8e, 0xee, 0x30, 0x66, 0xac, 0x53, 0x44, 0x68, 0x0f, 0x94, 0x1c, 0xf9, 0xf2, 0x3e, 0x9e, 0xae,
	0xf7, 0x0c, 0x3c, 0x5d, 0x87, 0xeb, 0xe9, 0xfa, 0x52, 0xa6, 0xcf, 0x7c, 0x4a, 0x5f, 0xd1, 0xf7,
	0x29, 0x7d, 0x61, 0xe8, 0x40, 0x7c, 0x4a, 0x89, 0xbc, 0x2d, 0x47, 0xd6, 0xab, 0xa6, 0x07, 0x0f,
	0xd6, 0xbb, 0xc6, 0x1b, 0xf5, 0xe5, 0x34, 0x14, 0x65, 0x61, 0xdb, 0x0f, 0xeb, 0x75, 0x0d, 0xc6,
	0xee, 0x9b, 0x44, 0x1d, 0xe2, 0x8f, 0x85, 0xad, 0x6e, 0x70, 0xed, 0x5c, 0x40, 0x87, 0xb1, 0xea,
	0xd1, 0xfb, 0xa6, 0xbf, 0x1e, 0x91, 0x87, 0x2a, 0x5e, 0x26, 0x89, 0x8a, 0xf7, 0x0a, 0x64, 0xb9,
	0x8c, 0xcf, 0xea, 0x45, 0xbd, 0x38, 0x19, 0xfa, 0xce, 0x14, 0x4c, 0x78, 0xd8, 0x6f, 0xb8, 0x8e,
	0x6f, 0x13, 0xa9, 0x49, 0x0c, 0xca, 0xdd, 0x6e, 0xe6, 0xf8, 0xc1, 0x14, 0x18, 0x8d, 0x4b, 0xf3,
	0xae, 0x91, 0x69, 0xcb, 0xff, 0x57, 0x0a, 0x4a, 0xb1, 0x93, 0xe7, 0x90, 0x04, 0xfa, 0xa7, 0x13,
	0x09, 0xf4, 0x5e, 0x0e, 0xf8, 0xb8, 0x4c, 0x9f, 0xd8, 0x73, 0x44, 0xcf, 0x5e, 0x97, 0xdc, 0x5a,
	0xb3, 0xfa, 0x67, 0x86, 0x38, 0xb8, 0xa7, 0xff, 0xea, 0x43, 0x30, 0xb1, 0xc7, 0xbe, 0x18, 0xf8,
	0xb3, 0x06, 0xfe, 0xac, 0x87, 0x93, 0x2c, 0xd5, 0x43, 0xc2, 0x53, 0x2f, 0xc9, 0x56, 0xb1, 0x64,
	0xa9, 0x77, 0x86, 0xa4, 0x9a, 0x66, 0xe5, 0x6c, 0xa9, 0xaf, 0x69, 0x36, 0xdb, 0x5a, 0x30, 0x3d,
	0x4c, 0x6e, 0xa2, 0x47, 0x57, 0x40, 0x6f, 0x95, 0xd4, 0x94, 0xfa, 0x65, 0x75, 0xad, 0x61, 0x13,
	0x7b, 0x9e, 0x59, 0xdb, 0x53, 0x86, 0x7d, 0x1b, 0xc6, 0x29, 0x1c, 0x55, 0x45, 0x5a, 0x3d, 0x45,
	0x65, 0xf4, 0x86, 0x31, 0x4a, 0x1b, 0x5d, 0x40, 0x37, 0x43, 0xef, 0x24, 0x73, 0x03, 0xbe, 0xd4,
	0xdd, 0x10, 0xe1, 0xb7, 0xb4, 0x8f, 0x73, 0x72, 0x1d, 0xb2, 0x36, 0x4b, 0x47, 0x1f, 0xd5, 0x64,
	0xb6, 0x42, 0xc9, 0xe2, 0x79, 0x63, 0x8c, 0x55, 0xcc, 0xe3, 0x39, 0x96, 0xd4, 0xe3, 0xf9, 0x1a,
	0xe4, 0x1b, 0x9e, 0xed, 0x7a, 0x76, 0xb0, 0xcb, 0xd3, 0xa3, 0xce, 0x29, 0xdf, 0xdb, 0x1a, 0x27,
	0x64, 0x32, 0x4d, 0xb0, 0x41, 0x1b, 0x31, 0x27, 0xea, 0x84, 0xaa, 0x6f, 0x97, 0x33, 0xd5, 0xcf,
	0x41, 0x43, 0x8f, 0x54, 0x0e, 0xda, 0xe4, 0xa3, 0xee, 0x49, 0x3d, 0xfe, 0x90, 0x3c, 0xa9, 0x73,
	0x30, 0xc2, 0x1c, 0x8e, 0x4c, 0x26, 0x9e, 0x50, 0xf4, 0x9f, 0x81, 0x20, 0x5a, 0x75, 0xd0, 0x6b,
	0x44, 0x85, 0xa2, 0xab, 0x0c, 0x7b, 0xdc, 0x95, 0xa7, 0xbe, 0x13, 0x67, 0x0c, 0x41, 0x6a, 0x44,
	0x5c, 0xd0, 0x2e, 0x75, 0x88, 0xd1, 0xee, 0x9a, 0xdc, 0xa5, 0x77, 0xd8, 0x15, 0xee, 0x62, 0xba,
	0xd6, 0x0c, 0xb2, 0xa9, 0x03, 0xce, 0x20, 0x3b, 0xfd, 0x08, 0x65, 0x90, 0xbd, 0x4b, 0xdc, 0x7c,
	0x16, 0x8c, 0x5b, 0x5c, 0xa7, 0xad, 0xf0, 0x25, 0xc2, 0x5d, 0x7d, 0x17, 0xd5, 0x97, 0x99, 0xd0,
	0x8a, 0xc5, 0x01, 0x37, 0x66, 0xc5, 0x2f, 0xa0, 0x8f, 0xb7, 0x38, 0x13, 0x59, 0xa7, 0x8d, 0xf3,
	0xea, 0x33, 0x74, 0xf0, 0x25, 0x7e, 0x4f, 0x0a, 0x10, 0x15, 0xe4, 0xf1, 0xa0, 0xc2, 0xd3, 0x47,
	0x96, 0x90, 0x37, 0x41, 0x67, 0x8f, 0x85, 0x13, 0xf6, 0xf1, 0x6f, 0x3e, 0xf3, 0x30, 0xfc, 0x9b,
	0x03, 0xcf, 0xe1, 0x43, 0xf1, 0x1c, 0x86, 0x62, 0xb7, 0x6f, 0x3c, 0x87, 0x5b, 0x44, 0x11, 0xec,
	0x73, 0xcf, 0xe1, 0x91, 0xe6, 0xb1, 0x91, 0x17, 0xfa, 0xf0, 0x3d, 0x87, 0x9f, 0xcf, 0xc0, 0x58,
	0x8b, 0xf0, 0xee, 0x87, 0x25, 0x7b, 0x03, 0xc6, 0x76, 0xcc, 0x9a, 0x6d, 0xd9, 0xc1, 0xae, 0x68,
	0xbd, 0x95, 0x56, 0x6a, 0xbd, 0x35, 0x2a, 0xc8, 0x78, 0xe7, 0xad, 0x4f, 0xc1, 0x69, 0x56, 0xdf,
	0x57, 0x71, 0x37, 0x2b, 0x1e, 0x6e, 0x60, 0x33, 0xf0, 0x2b, 0x66, 0xad, 0xe6, 0xde, 0x0f, 0x5b,
	0x58, 0x2b, 0x01, 0xbe, 0x9c, 0x64, 0x5c, 0x56, 0x37, 0x0d, 0xc6, 0x63, 0x8e, 0xb1, 0x88, 0x45,
	0x8e, 0xb3, 0x09, 0x23, 0xc7, 0x1f, 0x87, 0x29, 0xfc, 0xa0, 0xc1, 0x8e, 0x1a, 0x16, 0x3d, 0xae,
	0x84, 0xa0, 0x32, 0xb9, 0x2e, 0x1a, 0x27, 0x1f, 0x67, 0x9c, 0x14, 0x1c, 0x58, 0x10, 0x59, 0x5c,
	0x27, 0x72, 0x35, 0x4a, 0x05, 0xc8, 0x1f, 0xc5, 0xea, 0x8c, 0xe6, 0x2b, 0xff, 0x8b, 0xa1, 0xfe,
	0x73, 0x6b, 0xcf, 0x41, 0x4e, 0x2c, 0x1f, 0x4d, 0x77, 0xb6, 0xa0, 0x93, 0x5c, 0xd1, 0x9a, 0x9e,
	0x6c, 0x4e, 0x36, 0xbb, 0x24, 0xb9, 0x40, 0x93, 0xab, 0x3d, 0xd3, 0x3f, 0xf6, 0x04, 0x4c, 0xc6,
	0x21, 0x4c, 0x58, 0xc3, 0xa7, 0x81, 0x0f, 0x74, 0xe0, 0x03, 0x4d, 0xe8, 0x03, 0x8d, 0x79, 0x10,
	0x41, 0xd3, 0x83, 0xd8, 0xa3, 0x2f, 0x30, 0x99, 0x03, 0xf2, 0x61, 0x7b, 0x10, 0xff, 0x72, 0x28,
	0x41, 0x81, 0xea, 0xcf, 0x0e, 0x1d, 0x60, 0x85, 0x6a, 0x0f, 0x41, 0x14, 0x4a, 0x7f, 0x49, 0x9f,
	0x3e, 0x94, 0x35, 0x09, 0xd3, 0x39, 0x93, 0x5b, 0xf1, 0x22, 0x0f, 0x54, 0xf6, 0x8e, 0x15, 0x1f,
	0x09, 0xef, 0xd8, 0xeb, 0x2d, 0xbe, 0xe1, 0x73, 0x6a, 0xa8, 0x54, 0xf4, 0x35, 0x2b, 0x16, 0x02,
	0x8f, 0x26, 0x75, 0xe8, 0x5a, 0x31, 0xef, 0xeb, 0x98, 0xaa, 0x6f, 0x20, 0xbc, 0x3f, 0x35, 0xff,
	0xeb, 0x27, 0xe4, 0x82, 0xd0, 0x71, 0xed, 0x97, 0x20, 0xd5, 0x82, 0x66, 0xf7, 0x56, 0x81, 0x2e,
	0x41, 0x89, 0xd6, 0x42, 0x99, 0xbe, 0x8f, 0xbd, 0x00, 0x5b, 0xdc, 0x87, 0xac, 0x90, 0x75, 0x47,
	0xc8, 0xe6, 0x38, 0x15, 0xfa, 0xd9, 0x21, 0x40, 0x92, 0xe3, 0xb2, 0xc2, 0x24, 0xbf, 0xba, 0xbb,
	0xf8, 0x8f, 0x52, 0x0f, 0x03, 0xd8, 0xb4, 0x07, 0xc3, 0x29, 0x99, 0x92, 0x38, 0x21, 0xbd, 0xa3,
	0x75, 0xfa, 0x8a, 0x62, 0xde, 0xf5, 0xc9, 0x77, 0xbd, 0x77, 0xfd, 0x9b, 0xa1, 0x68, 0x61, 0xcf,
	0xde, 0xc1, 0x56, 0x65, 0xd3, 0x73, 0xeb, 0x87, 0xef, 0xa0, 0x1e, 0xe1, 0xd3, 0x5d, 0xf7, 0xdc,
	0x3a, 0x32, 0x20, 0x13, 0x98, 0xf7, 0xb0, 0x70, 0x48, 0x9f, 0xd5, 0xd8, 0x05, 0x77, 0x09, 0x5d,
	0x4c, 0x12, 0x30, 0x56, 0x2d, 0xe5, 0xc6, 0x8c, 0xfd, 0xc9, 0xa4, 0xe5, 0xc6, 0x74, 0x96, 0x56,
	0x67, 0xf1, 0xa9, 0x03, 0x76, 0x16, 0x4f, 0x3d, 0x82, 0xce, 0xe2, 0xd3, 0x9a, 0xce, 0xe2, 0xf3,
	0x61, 0xd1, 0x6d, 0x59, 0xc9, 0x41, 0xcc, 0x47, 0x0f, 0x0a, 0x5b, 0xdf, 0x0d, 0x85, 0xad, 0xb3,
	0x37, 0x24, 0x43, 0xad, 0x17, 0x35, 0x69, 0xfa, 0xdf, 0x9e, 0x86, 0x89, 0xdb, 0xd8, 0x27, 0x9f,
	0x36, 0x1a, 0x39, 0x30, 0xd4, 0x1e, 0x4f, 0x43, 0xed, 0x79, 0x18, 0x6e, 0x7a, 0x35, 0x5e, 0xbf,
	0xd8, 0xf1, 0x6b, 0x90, 0x71, 0x2d, 0x76, 0x1d, 0x24, 0xea, 0x2d, 0x71, 0x01, 0x72, 0x3b, 0xd8,
	0xa3, 0x77, 0x3e, 0xa2, 0xe4, 0xbd, 0x11, 0xc3, 0xc3, 0xb6, 0xa8, 0x45, 0x8d, 0xb6, 0xa8, 0x67,
	0x21, 0x13, 0xd8, 0x41, 0x0d, 0x73, 0x4d, 0xb7, 0x1b, 0x11, 0x1b, 0x8c, 0x6e, 0x87, 0x0a, 0xf2,
	0x68, 0xe7, 0xe6, 0x74, 0x6b, 0xcd, 0x8d, 0xda, 0x1e, 0xdc, 0xd6, 0x7d, 0x14, 0xe3, 0x22, 0x7e,
	0x40, 0x36, 0x35, 0x6b, 0xc7, 0xc9, 0xb5, 0xda, 0xae, 0xd9, 0xe5, 0x31, 0x22, 0x74, 0x99, 0x77,
	0x7d, 0x1b, 0x57, 0x93, 0x41, 0x11, 0x34, 0x3f, 0xed, 0xfe, 0x76, 0x19, 0x0a, 0x0d, 0x72, 0xaf,
	0xfe, 0x36, 0x16, 0x50, 0xe6, 0x5d, 0xf1, 0xc9, 0x42, 0x02, 0xb9, 0xb5, 0x3e, 0x4a, 0xd4, 0x5a,
	0x7f, 0x3e, 0xde, 0x9d, 0x76, 0x52, 0xb1, 0xcd, 0x76, 0xac, 0x3f, 0xed, 0x12, 0x8c, 0x34, 0x7d,
	0x7a, 0xe6, 0xd0, 0x5d, 0xcc, 0xd4, 0xa4, 0xb6, 0x32, 0xe0, 0x75, 0x9f, 0x0a, 0x00, 0x3a, 0xd6,
	0x80, 0xa6, 0x2f, 0xfe, 0x46, 0x37, 0xa1, 0xf8, 0x8d, 0x4d, 0xcf, 0xf6, 0x2d, 0x9b, 0x45, 0x4b,
	0x35, 0x71, 0x50, 0x62, 0xc4, 0x68, 0x16, 0x72, 0x8d, 0xa6, 0xd7, 0x70, 0x7d, 0xdc, 0xad, 0xb4,
	0x26, 0x7c, 0x26, 0x41, 0x80, 0xae, 0x12, 0xb9, 0xd2, 0xd8, 0xf5, 0x28, 0x50, 0xf9, 0x29, 0xd5,
	0xd6, 0xed, 0x21, 0x09, 0xda, 0x81, 0x34, 0xb1, 0xfc, 0x0f, 0x11, 0x6d, 0xa4, 0xe5, 0x90, 0x30,
	0xe8, 0x7c, 0xe8, 0x67, 0x53, 0x40, 0x4c, 0x5f, 0x86, 0x33, 0xfe, 0x48, 0x24, 0xa6, 0xf1, 0xdb,
	0x45, 0x9f, 0x86, 0xbc, 0x87, 0x1b, 0x35, 0xb3, 0x8a, 0x7d, 0xae, 0x03, 0x1d, 0xc5, 0x5b, 0x0b,
	0xe7, 0x44, 0x97, 0x21, 0x43, 0xc3, 0xa1, 0x1c, 0xf5, 0xe4, 0xe9, 0x0e, 0x6b, 0x2e, 0xd6, 0x82,
	0x89, 0x12, 0xa1, 0x75, 0xc9, 0xbc, 0xee, 0x5a, 0x80, 0x43, 0x6f, 0x62, 0xdd, 0xde, 0x72, 0xec,
	0x4d, 0xbb, 0x6a, 0x3a, 0x55, 0xbc, 0xc0, 0x49, 0xd9, 0x99, 0x18, 0x9a, 0xdb, 0x4b, 0x90, 0xd9,
	0x74, 0xab, 0x4d, 0x9f, 0x97, 0xdc, 0xbc, 0xd0, 0x85, 0x63, 0xf4, 0x58, 0x33, 0xd7, 0x09, 0x99,
	0xc1, 0xa8, 0xd1, 0xad, 0x30, 0xa1, 0x99, 0x65, 0x0e, 0xd8, 0x1e, 0xb6, 0x54, 0x8b, 0x68, 0x44,
	0x4a, 0x32, 0xf5, 0x86, 0x11, 0x42, 0x64, 0xc1, 0x38, 0x77, 0x70, 0x57, 0xc4, 0xff, 0xf1, 0x90,
	0xf9, 0x45, 0xf5, 0xfb, 0xe3, 0x61, 0x15, 0x43, 0x30, 0x1f, 0x33, 0xe3, 0x17, 0xca, 0xff, 0x71,
	0x18, 0x32, 0xf4, 0x21, 0xfa, 0x21, 0x96, 0xb0, 0xc8, 0x51, 0xca, 0xd3, 0x9d, 0xbb, 0x5e, 0x08,
	0xb5, 0x64, 0x6f, 0x03, 0x17, 0x0a, 0x57, 0xfe, 0x69, 0xc8, 0x35, 0x3c, 0x77, 0xd3, 0xae, 0x61,
	0xf5, 0xf0, 0xe3, 0x9c, 0x9e, 0xe7, 0x6e, 0x9f, 0x6b, 0x86, 0x98, 0x14, 0x9d, 0x83, 0xe1, 0xba,
	0x2d, 0x3a, 0xe5, 0x2b, 0xb5, 0x3f, 0x20, 0xe3, 0xd1, 0x47, 0x60, 0xb8, 0x6e, 0x3e, 0x50, 0xec,
	0xab, 0x4c, 0x86, 0x96, 0x7f, 0x78, 0x18, 0xc6, 0x5a, 0x16, 0x48, 0x3f, 0xac, 0x82, 0x6f, 0x4b,
	0x41, 0xae, 0xce, 0x76, 0x82, 0x7a, 0x80, 0x7e, 0x49, 0x72, 0x7c, 0xf4, 0x20, 0xe6, 0xc4, 0xc4,
	0xe4, 0x5c, 0xf3, 0xed, 0xa0, 0x29, 0x1a, 0xc5, 0x29, 0x9e, 0x6b, 0x21, 0x49, 0xd2, 0x90, 0x54,
	0xcb, 0xfd, 0x4c, 0xff, 0x58, 0x19, 0x4a, 0xfc, 0xea, 0x32, 0x36, 0x2d, 0xec, 0x0d, 0x6c, 0x9c,
	0xc7, 0xd3, 0xc6, 0x09, 0x4f, 0xdd, 0x42, 0x92, 0x53, 0xf7, 0xe3, 0xf1, 0x7a, 0x65, 0x16, 0x88,
	0xba, 0xd0, 0xe5, 0x18, 0x62, 0x0b, 0x2e, 0x3a, 0x94, 0x42, 0xfa, 0x78, 0x39, 0xf2, 0x4f, 0xcb,
	0xe5, 0xc8, 0x23, 0xaa, 0xfb, 0x35, 0x78, 0x18, 0x99, 0x34, 0x52, 0x4d, 0xf2, 0x3b, 0x29, 0xc8,
	0xfa, 0xd8, 0xb1, 0xc2, 0xfc, 0xf4, 0x77, 0xed, 0x3d, 0xf3, 0xdb, 0x44, 0x4b, 0x50, 0x08, 0xec,
	0x3a, 0xf6, 0x03, 0xb3, 0xde, 0xe0, 0x86, 0x60, 0x87, 0xae, 0x84, 0x7e, 0x60, 0x4a, 0x8d, 0x71,
	0x22, 0x4a, 0x74, 0x1f, 0x72, 0xd8, 0x09, 0xb0, 0x87, 0x3d, 0x75, 0xdc, 0x8b, 0x5e, 0x52, 0x65,
	0xc5, 0x6c, 0xa8, 0x09, 0x59, 0x96, 0x05, 0x7c, 0x68, 0x9d, 0xba, 0x63, 0xf3, 0xf2, 0xc9, 0xd0,
	0x3a, 0x64, 0x79, 0xcc, 0x61, 0xbc, 0x5b, 0xae, 0xf1, 0x3e, 0xab, 0x9e, 0xf9, 0xe2, 0x25, 0x5b,
	0x98, 0xf9, 0xe6, 0x7f, 0x3e, 0x05, 0x23, 0x52, 0x0d, 0x9a, 0x7a, 0x5b, 0xad, 0x87, 0xb3, 0x84,
	0xe4, 0x7b, 0x95, 0xb2, 0x2d, 0x50, 0xa2, 0x6c, 0x0b, 0xf4, 0x2a, 0xd9, 0xef, 0x5c, 0xa1, 0x65,
	0x36, 0xf0, 0x8c, 0xda, 0x3b, 0x0d, 0xb5, 0xd8, 0x90, 0x1e, 0xb9, 0x42, 0x73, 0x3f, 0xf4, 0x78,
	0x01, 0x9b, 0xa7, 0xfc, 0x8b, 0xc3, 0x80, 0xf6, 0x4a, 0xb4, 0x3e, 0xc1, 0x3c, 0xa3, 0x8e, 0xa5,
	0xb4, 0x86, 0x63, 0xc9, 0x85, 0x6c, 0x60, 0x7a, 0x5b, 0x38, 0x50, 0xd7, 0x94, 0x13, 0x62, 0x6d,
	0xb2, 0x69, 0xd0, 0x2b, 0x90, 0xc7, 0x8e, 0xd5, 0x70, 0xed, 0xb0, 0xfd, 0x48, 0x27, 0xcd, 0x22,
	0xdc, 0x77, 0x21, 0x51, 0xf9, 0x3f, 0x0d, 0x87, 0x0a, 0x11, 0x8f, 0x93, 0x3d, 0xa6, 0x9f, 0x6e,
	0x16, 0xf2, 0xbe, 0xbb, 0x19, 0xdc, 0x37, 0x3d, 0x61, 0xe6, 0x74, 0xa3, 0x0b, 0xc7, 0xcb, 0xde,
	0xcb, 0xac, 0x9e, 0xf7, 0xf2, 0x6a, 0xe4, 0x43, 0xcb, 0x75, 0x56, 0xed, 0xb8, 0x0f, 0x6d, 0x8d,
	0x7c, 0xb5, 0xc8, 0x85, 0x26, 0x7f, 0xff, 0x7c, 0x92, 0xef, 0xff, 0x3b, 0xc3, 0x90, 0xef, 0x27,
	0x63, 0x67, 0xbf, 0x46, 0xc7, 0x1d, 0xd4, 0xfa, 0xf0, 0x8d, 0xc8, 0xce, 0xe8, 0xc5, 0x58, 0xa3,
	0xe3, 0x4e, 0x66, 0x33, 0x7d, 0x6d, 0x6d, 0xcc, 0xe6, 0xb7, 0x21, 0x67, 0x51, 0x87, 0xa7, 0xcf,
	0x17, 0xc5, 0xc1, 0xb7, 0x6f, 0x5d, 0xa5, 0x7d, 0x21, 0x6d, 0xd7, 0x59, 0x6d, 0x06, 0x55, 0xb7,
	0x8e, 0x0d, 0x31, 0x63, 0xd2, 0x26, 0xc6, 0xd2, 0xe9, 0x32, 0xfd, 0x3f, 0x8d, 0x43, 0xf1, 0x8e,
	0x59, 0xb7, 0x9d, 0xad, 0xf5, 0x5d, 0x3f, 0xc0, 0xf5, 0x81, 0xa5, 0xf4, 0x78, 0x5a, 0x4a, 0xb3,
	0x5c, 0x98, 0x16, 0xb4, 0x3a, 0xc4, 0x33, 0xa1, 0x7a, 0xbb, 0xa5, 0xd3, 0x5d, 0x8f, 0x21, 0x93,
	0x65, 0x48, 0xdf, 0xb3, 0xc3, 0x76, 0x77, 0xcf, 0xb5, 0xff, 0x3a, 0xd1, 0xaa, 0xdd, 0xbb, 0x39,
	0x09, 0x87, 0x30, 0x6e, 0x52, 0xec, 0x3d, 0x6e, 0x52, 0xea, 0x21, 0x6e, 0x32, 0x9a, 0x28, 0x6e,
	0x72, 0x2d, 0xae, 0x2c, 0x8f, 0x29, 0xdd, 0x40, 0x4c, 0x67, 0x15, 0x48, 0x17, 0xe3, 0xc9, 0xc0,
	0xcc, 0x62, 0x61, 0x9b, 0x89, 0x03, 0x08, 0xdb, 0xa0, 0x03, 0x0a, 0xdb, 0x4c, 0xf6, 0x12, 0xb6,
	0x39, 0x0b, 0x99, 0x26, 0x75, 0x92, 0x1d, 0x57, 0x8b, 0x0a, 0xd2, 0xc1, 0xc8, 0x80, 0x42, 0xd3,
	0xb1, 0xdf, 0x6a, 0xe2, 0x8a, 0x6d, 0xf1, 0xb0, 0xd1, 0xf3, 0x2a, 0x0b, 0x73, 0xe6, 0x75, 0x4a,
	0x25, 0x1d, 0x41, 0xf9, 0x26, 0xbf, 0x82, 0x3e, 0x4d, 0x3e, 0x30, 0x0d, 0x0f, 0x58, 0x95, 0x8d,
	0x5d, 0x1e, 0x44, 0x3a, 0x78, 0xfb, 0x4e, 0xbe, 0x1d, 0x03, 0xc4, 0x8c, 0xf3, 0xbb, 0xe5, 0xcf,
	0xa5, 0x21, 0x2f, 0x6e, 0xaf, 0x1f, 0x94, 0x02, 0x83, 0x2f, 0xf7, 0x74, 0xe7, 0xc4, 0x41, 0xf9,
	0x7d, 0x44, 0x71, 0xea, 0x36, 0x6d, 0xcd, 0x2f, 0x43, 0x86, 0xb5, 0x76, 0xcc, 0x68, 0xc9, 0x45,
	0x46, 0x84, 0xae, 0x40, 0xa1, 0x41, 0x53, 0x4d, 0x3c, 0x7a, 0x60, 0x28, 0x85, 0x44, 0x22, 0x0a,
	0xa2, 0x70, 0x56, 0xdd, 0x7a, 0x1d, 0x3b, 0x81, 0xa2, 0x7f, 0x5b, 0x0c, 0x47, 0xe7, 0xc3, 0xc4,
	0x93, 0xbc, 0x52, 0xbd, 0x0b, 0x1f, 0x3d, 0x7b, 0x4d, 0x52, 0x28, 0x12, 0x2d, 0xb0, 0xe9, 0xbf,
	0xf5, 0x21, 0x18, 0xbd, 0xd3, 0x0c, 0x3c, 0xfa, 0x5f, 0xab, 0xde, 0xc0, 0xf7, 0x3a, 0x28, 0x04,
	0xe8, 0xa1, 0x10, 0x60, 0xb9, 0x45, 0xb3, 0x68, 0xdb, 0xbf, 0x30, 0xbe, 0xe4, 0xf6, 0x81, 0xb1,
	0x78, 0x00, 0xb9, 0x06, 0x4b, 0xd8, 0x54, 0xf7, 0xb6, 0x5e, 0xea, 0x21, 0x2d, 0xd4, 0x10, 0xd3,
	0xa1, 0x07, 0x50, 0xc0, 0x4e, 0xbc, 0xf7, 0xee, 0xc1, 0x43, 0x14, 0x87, 0x49, 0xe2, 0x46, 0x34,
	0x19, 0x5a, 0x92, 0xf3, 0xd7, 0x4a, 0x9a, 0x3a, 0x50, 0x94, 0xc5, 0x76, 0x1f, 0x72, 0xb4, 0x6a,
	0xff, 0xc8, 0x7c, 0x9f, 0x7c, 0x36, 0xf4, 0xfd, 0x29, 0x98, 0x34, 0x6b, 0x35, 0xec, 0x6d, 0xed,
	0x56, 0x6c, 0x27, 0x70, 0x6b, 0xd8, 0x33, 0x9d, 0x2a, 0xe6, 0x8d, 0x7b, 0x15, 0xee, 0xe2, 0x9a,
	0x66, 0xea, 0x01, 0x9b, 0x6b, 0x25, 0x9a, 0xca, 0x40, 0xe6, 0x9e, 0x6b, 0xc8, 0x84, 0xa9, 0x4d,
	0xd7, 0xb5, 0x2a, 0x8d, 0x30, 0x8b, 0xb0, 0x22, 0x56, 0x3f, 0xc7, 0xea, 0x55, 0x56, 0x4d, 0x4e,
	0x12, 0x46, 0x6b, 0x21, 0x9f, 0xdb, 0x9c, 0x0d, 0xfa, 0x04, 0x9c, 0xc0, 0x0f, 0xaa, 0xb5, 0xa6,
	0x85, 0x2b, 0x74, 0xaa, 0x90, 0xff, 0x84, 0x1e, 0xff, 0x49, 0xce, 0xe5, 0xba, 0xeb, 0x5a, 0x21,
	0xf3, 0x5b, 0x50, 0x70, 0x3d, 0xb3, 0x56, 0xb1, 0x6c, 0x2c, 0x10, 0x48, 0x5e, 0x50, 0xdb, 0x57,
	0x33, 0xab, 0x9e, 0x59, 0x5b, 0xb4, 0x71, 0x60, 0xe4, 0x5d, 0xfe, 0x17, 0x7a, 0x0d, 0x80, 0x56,
	0x1b, 0xd2, 0x0c, 0x43, 0xae, 0x9a, 0xbd, 0xa8, 0xc8, 0x6e, 0x3d, 0x24, 0x34, 0x24, 0x26, 0xe8,
	0x53, 0x30, 0x46, 0xdd, 0xdf, 0x66, 0xad, 0xb2, 0xe9, 0x7a, 0xf5, 0x66, 0xcd, 0xe4, 0xca, 0xda,
	0x39, 0x45, 0xbe, 0x4b, 0x8c, 0xfa, 0x3a, 0x23, 0x36, 0x46, 0x71, 0xec, 0x77, 0xf9, 0x97, 0x01,
	0xf2, 0xe2, 0x49, 0xfa, 0x41, 0xf1, 0xb9, 0x14, 0x2a, 0x3e, 0xc3, 0xfa, 0x7a, 0xfe, 0x2c, 0xe4,
	0xfd, 0xea, 0x36, 0xb6, 0x9a, 0x34, 0xf0, 0xdf, 0x31, 0x39, 0xf8, 0xae, 0x5d, 0x67, 0x1e, 0x31,
	0x3e, 0x1e, 0xdd, 0x85, 0xbc, 0x43, 0xde, 0x3c, 0xa6, 0x7e, 0xc9, 0x8e, 0xd1, 0xb1, 0x36, 0x0b,
	0x89, 0x5d, 0x27, 0x0b, 0x20, 0xe4, 0x84, 0x5e, 0x83, 0x1c, 0x39, 0x1c, 0x9b, 0x1e, 0xe6, 0x27,
	0xd9, 0xcb, 0xba, 0x4c, 0xef, 0x32, 0x72, 0x43, 0xf0, 0x41, 0x9f, 0x84, 0x93, 0x9b, 0xb5, 0xa6,
	0x6d, 0x11, 0x53, 0xc4, 0xb7, 0xfd, 0x00, 0x3b, 0xd5, 0xdd, 0x0a, 0x7d, 0x67, 0x79, 0xbd, 0x77,
	0x76, 0x9c, 0xb2, 0x59, 0x88, 0xb8, 0x10, 0xbd, 0x91, 0x98, 0x6a, 0x32, 0x08, 0x47, 0x41, 0xcd,
	0x54, 0x93, 0x48, 0xca, 0xbf, 0x35, 0x04, 0x79, 0xf1, 0x2a, 0xfa, 0x61, 0x49, 0x2e, 0x40, 0x3e,
	0x94, 0x59, 0x9a, 0xbd, 0x90, 0x43, 0xc2, 0x9e, 0x5b, 0xe9, 0xfe, 0xee, 0x10, 0xe4, 0xf8, 0x52,
	0x18, 0xbc, 0x53, 0x4b, 0x78, 0x3d, 0x0b, 0xf4, 0x44, 0x49, 0x02, 0x81, 0x99, 0x27, 0x94, 0x64,
	0xc1, 0x97, 0xbf, 0x27, 0x0d, 0x10, 0x09, 0xef, 0xfe, 0x92, 0xa1, 0x09, 0x7c, 0x25, 0x73, 0x50,
	0x6c, 0x78, 0xae, 0xd5, 0xac, 0x06, 0x15, 0xea, 0x44, 0x53, 0x8b, 0x2c, 0x8c, 0x70, 0x9a, 0x3b,
	0x22, 0x30, 0x21, 0xc4, 0x70, 0x56, 0x53, 0x0c, 0xcb, 0xe8, 0x01, 0xb9, 0x84, 0xe8, 0x01, 0x2d,
	0x22, 0x2c, 0xaf, 0x2f, 0xc2, 0xfe, 0x87, 0x22, 0x8c, 0xc6, 0x0f, 0xde, 0x7e, 0x58, 0x17, 0xeb,
	0x30, 0xb1, 0x61, 0xfa, 0x58, 0x28, 0x22, 0x95, 0x24, 0x8b, 0x64, 0x8c, 0x70, 0xe0, 0xef, 0x84,
	0x9e, 0x17, 0x1f, 0x83, 0xd3, 0x31, 0xa6, 0x09, 0x16, 0xcf, 0x49, 0x89, 0xe7, 0x9a, 0xb4, 0x8e,
	0x6e, 0x41, 0xc9, 0xb4, 0x2c, 0x0a, 0x38, 0xc1, 0xee, 0x55, 0xb3, 0xb5, 0x52, 0x51, 0x50, 0xd3,
	0x1b, 0x35, 0xe0, 0x44, 0xc8, 0x2d, 0x76, 0x93, 0x6a, 0xfe, 0x88, 0x49, 0x41, 0x2c, 0xdf, 0xe1,
	0x2a, 0x8c, 0x55, 0xcd, 0x9a, 0xeb, 0xd9, 0xd5, 0x8a, 0x45, 0x5e, 0x72, 0xb0, 0xab, 0xd9, 0x7f,
	0x69, 0x94, 0x93, 0x2f, 0x32, 0x6a, 0xf4, 0x29, 0x38, 0x49, 0xfb, 0x41, 0xb9, 0x9b, 0x15, 0x33,
	0x56, 0x97, 0xcc, 0x0f, 0x62, 0xe5, 0x67, 0x3f, 0xc1, 0xd9, 0xb4, 0x74, 0xbe, 0xae, 0xc1, 0x68,
	0x0b, 0x5f, 0x96, 0x09, 0xb4, 0x98, 0x48, 0x1b, 0x9d, 0x89, 0x73, 0x37, 0x5a, 0x78, 0xa3, 0x8f,
	0xc1, 0x89, 0xba, 0xf9, 0xa0, 0xb2, 0xe3, 0xd6, 0x9a, 0x75, 0x5c, 0x09, 0xdc, 0x8a, 0x85, 0x6b,
	0x52, 0x92, 0x90, 0xea, 0x4b, 0x42, 0x75, 0xf3, 0xc1, 0x1b, 0x94, 0xc7, 0x5d, 0x77, 0x91, 0x71,
	0x40, 0x9f, 0x84, 0x72, 0x7c, 0xb2, 0x18, 0x74, 0x98, 0x5a, 0x69, 0xc5, 0xe9, 0x38, 0x07, 0x09,
	0x42, 0xac, 0xfc, 0x6b, 0x69, 0x18, 0x6d, 0x79, 0x75, 0x7d, 0x20, 0x00, 0x64, 0xc1, 0xdc, 0x25,
	0xd2, 0xdc, 0x51, 0x30, 0x67, 0x12, 0x0a, 0x66, 0xcc, 0xfb, 0x8c, 0xb1, 0x7d, 0xbc, 0x72, 0x10,
	0x6b, 0xae, 0x63, 0xd3, 0x31, 0xb9, 0x7b, 0x58, 0x2a, 0x69, 0xf7, 0xb0, 0xa8, 0x75, 0xd9, 0x90,
	0x4e, 0xeb, 0xb2, 0xb0, 0xe9, 0xd8, 0xbc, 0xe4, 0x87, 0x54, 0xce, 0xfc, 0x8f, 0xbf, 0x82, 0xe9,
	0xdf, 0x38, 0x03, 0x23, 0x52, 0x31, 0xe5, 0xc0, 0x0d, 0x39, 0x70, 0x43, 0x26, 0x75, 0x43, 0xfe,
	0xd9, 0x70, 0x12, 0x3c, 0x92, 0x77, 0x86, 0x7b, 0x00, 0x14, 0x39, 0xa7, 0x99, 0x2a, 0x24, 0xa1,
	0x89, 0xcc, 0xab, 0x92, 0xae, 0xd4, 0xeb, 0xcd, 0x30, 0xdb, 0x0d, 0xb3, 0xd8, 0x81, 0x15, 0x21,
	0x7a, 0xf4, 0x08, 0xa4, 0x92, 0x70, 0xdf, 0xbe, 0x4b, 0x00, 0x99, 0xe3, 0xfd, 0xdd, 0xda, 0xc6,
	0xfa, 0x24, 0x01, 0xa3, 0x88, 0x8e, 0x51, 0xd4, 0x73, 0x38, 0x44, 0xe5, 0x3a, 0x0b, 0x3c, 0x5f,
	0x45, 0xaf, 0xcf, 0x7e, 0x4b, 0xba, 0xca, 0xe7, 0x86, 0x12, 0x34, 0x70, 0xfb, 0xad, 0x23, 0x43,
	0x46, 0x48, 0xdc, 0xb9, 0x43, 0xbf, 0x39, 0xd4, 0x23, 0xdc, 0x2b, 0x6e, 0x7d, 0x2f, 0x82, 0x89,
	0xca, 0x02, 0xed, 0x8c, 0x5c, 0xf2, 0x32, 0x64, 0x29, 0x40, 0xa9, 0x80, 0x2c, 0xe9, 0x96, 0x25,
	0x6d, 0xf0, 0xe1, 0xe8, 0xbf, 0x1c, 0x92, 0xc1, 0xe1, 0x94, 0x7b, 0xb8, 0xfd, 0xd1, 0x63, 0x81,
	0x0a, 0x29, 0xf7, 0xbe, 0xbb, 0x21, 0x62, 0xc9, 0x2c, 0xfd, 0xf7, 0x43, 0x2a, 0x9f, 0xec, 0x0d,
	0x42, 0x10, 0x7e, 0x2e, 0x1e, 0x56, 0x7e, 0x1d, 0x90, 0x65, 0x06, 0x66, 0xc5, 0xdc, 0xf0, 0xb1,
	0x13, 0x88, 0xa6, 0x53, 0xc7, 0xf5, 0x8c, 0x9d, 0x71, 0xc2, 0x62, 0x8e, 0x72, 0xe0, 0xbd, 0x3f,
	0x56, 0x61, 0xd4, 0x26, 0x6b, 0xb4, 0xe1, 0x61, 0x06, 0x1e, 0xc1, 0x71, 0x41, 0xd4, 0x81, 0x3b,
	0xe2, 0xe4, 0x72, 0xfc, 0xfa, 0xa4, 0x5e, 0xfc, 0x7a, 0x11, 0x0a, 0x1b, 0xae, 0xb5, 0x5b, 0xa1,
	0xad, 0x85, 0x4f, 0x69, 0x7a, 0xa9, 0x08, 0xe5, 0xba, 0x1d, 0xeb, 0x0f, 0x3c, 0x95, 0xac, 0x3f,
	0x70, 0x13, 0xf2, 0x7e, 0x03, 0x57, 0xed, 0x3a, 0x76, 0xa6, 0x4e, 0x1f, 0x52, 0xb7, 0xba, 0x75,
	0x3e, 0x81, 0x11, 0x4e, 0x85, 0x7e, 0x3c, 0x15, 0x36, 0xf3, 0x2f, 0x2b, 0x43, 0xd8, 0x24, 0x16,
	0x9d, 0x67, 0xf5, 0x68, 0x6e, 0xe3, 0xc0, 0xb3, 0xab, 0x06, 0xbf, 0x41, 0xf4, 0x09, 0x18, 0x8b,
	0xc2, 0x60, 0x9e, 0xe9, 0xd0, 0xbe, 0xfe, 0x44, 0x04, 0x9c, 0x51, 0x59, 0xde, 0xe1, 0xfd, 0x1b,
	0x84, 0xd2, 0x18, 0xf5, 0x62, 0xbf, 0xd1, 0x12, 0xe4, 0x3c, 0xb6, 0x9b, 0x78, 0x4f, 0xff, 0xaf,
	0x57, 0x63, 0x4a, 0x49, 0x0c, 0x41, 0x8b, 0x6e, 0x12, 0xf5, 0xb6, 0xde, 0x70, 0x1d, 0xb2, 0x12,
	0x9f, 0xea, 0x9c, 0xbc, 0x23, 0x33, 0x5a, 0x10, 0x44, 0x46, 0x44, 0xff, 0x2e, 0xed, 0x7d, 0xff,
	0xcf, 0x32, 0x90, 0xa1, 0xb2, 0x02, 0x5d, 0xdd, 0x63, 0xbf, 0xb5, 0xbd, 0xa1, 0x7d, 0x2d, 0xb7,
	0xfd, 0x30, 0x5e, 0x86, 0x7a, 0xc6, 0x78, 0xb9, 0x0a, 0x45, 0x9f, 0xee, 0xf1, 0x0a, 0x13, 0x81,
	0xc3, 0x2a, 0xf2, 0x80, 0x3c, 0x2c, 0xa3, 0x42, 0x97, 0x20, 0xb7, 0xc1, 0x12, 0x64, 0x14, 0xf1,
	0x32, 0x97, 0x8f, 0x19, 0x82, 0x82, 0x19, 0xa3, 0x64, 0x65, 0x66, 0xba, 0x19, 0xa3, 0xce, 0x16,
	0x66, 0xc6, 0xa8, 0xb3, 0x25, 0xb5, 0xdf, 0xce, 0x6a, 0xb5, 0xdf, 0x5e, 0x86, 0xa2, 0x6f, 0x12,
	0xc3, 0xd8, 0xaa, 0x10, 0x11, 0xcb, 0x5d, 0x65, 0x6d, 0x2b, 0x5a, 0xd7, 0xd9, 0xd8, 0x45, 0x33,
	0x30, 0x97, 0x8f, 0x19, 0x23, 0x7e, 0xf4, 0x13, 0x2d, 0x02, 0x98, 0x41, 0x60, 0x56, 0xb7, 0xa9,
	0x08, 0xcd, 0x77, 0x86, 0xdc, 0x98, 0x0b, 0x47, 0x2e, 0x1f, 0x33, 0x24, 0x3a, 0xda, 0xd5, 0xdd,
	0x0e, 0x33, 0x3b, 0x9f, 0xec, 0xe0, 0xbc, 0x20, 0xcf, 0x4e, 0xc7, 0xc6, 0x97, 0x35, 0xf4, 0xb4,
	0xac, 0x47, 0x34, 0x97, 0x75, 0x8e, 0x9f, 0x92, 0xe5, 0x9f, 0x4e, 0xc3, 0x68, 0x5c, 0x3e, 0xf4,
	0x83, 0x3b, 0xe9, 0x02, 0x0c, 0xd7, 0xdc, 0xfb, 0x7c, 0x11, 0xab, 0x7a, 0x83, 0x08, 0x09, 0x9a,
	0x85, 0xf4, 0xb6, 0xbd, 0xb5, 0xad, 0xe9, 0x48, 0xa2, 0x34, 0x61, 0x74, 0x23, 0x9b, 0x24, 0xba,
	0x71, 0x1d, 0xc0, 0x6c, 0x34, 0x6a, 0x36, 0xf6, 0x2b, 0x81, 0xcb, 0xad, 0x7a, 0x65, 0x16, 0x05,
	0x4e, 0x7a, 0xd7, 0x45, 0x2f, 0xc0, 0xb0, 0xb9, 0x25, 0x9a, 0xed, 0x77, 0xde, 0x84, 0x06, 0x19,
	0x49, 0x57, 0x2e, 0xd1, 0xca, 0xd5, 0xe2, 0xa9, 0x74, 0x6c, 0xf9, 0x73, 0x69, 0xc8, 0xf1, 0x03,
	0xa0, 0x1f, 0x96, 0xcb, 0xcd, 0x58, 0x58, 0xea, 0x65, 0x85, 0x53, 0x8b, 0x3e, 0xbc, 0xed, 0x3a,
	0xfe, 0xb6, 0xdd, 0x10, 0x49, 0x8d, 0xfc, 0x43, 0xfe, 0x65, 0x4a, 0xbf, 0x70, 0xe9, 0xe7, 0x52,
	0x52, 0x12, 0x54, 0x12, 0x10, 0x33, 0x4a, 0x78, 0x45, 0x95, 0xf0, 0x35, 0x62, 0x87, 0xdb, 0xae,
	0xe3, 0x98, 0x36, 0xb1, 0xe9, 0x59, 0xe9, 0x85, 0xa6, 0x42, 0x45, 0x8c, 0x79, 0x27, 0xaa, 0x9e,
	0x2a, 0x7f, 0x2b, 0x40, 0x21, 0x3c, 0xca, 0xfb, 0x23, 0x10, 0x2c, 0x03, 0x3e, 0x24, 0xf4, 0x04,
	0xbc, 0x16, 0xcf, 0x6c, 0x7d, 0x49, 0x4b, 0x21, 0xd2, 0xb1, 0x4b, 0xb2, 0x07, 0x6f, 0x97, 0xe4,
	0x7a, 0xb3, 0x4b, 0xf6, 0xd1, 0x59, 0xf3, 0x07, 0xa5, 0xb3, 0x96, 0xbf, 0xaf, 0xcf, 0x35, 0xb1,
	0x50, 0x99, 0x4a, 0x27, 0x53, 0xa6, 0x32, 0x3d, 0x29, 0x53, 0xd9, 0x03, 0x52, 0xa6, 0x72, 0x3d,
	0x2a, 0x53, 0xf9, 0xa4, 0xca, 0x54, 0xa1, 0x27, 0x65, 0x0a, 0x12, 0x2a, 0x53, 0xb3, 0xaf, 0x48,
	0x01, 0x95, 0x24, 0x52, 0x7c, 0xfa, 0x7f, 0x7b, 0x06, 0x26, 0xc3, 0x42, 0xb4, 0x01, 0x78, 0xe0,
	0x00, 0x3c, 0x50, 0x0b, 0x3c, 0x50, 0x2a, 0x9d, 0x05, 0xbd, 0xd2, 0x59, 0x51, 0x97, 0x36, 0xd2,
	0x53, 0x5d, 0x5a, 0xf1, 0x20, 0xea, 0xd2, 0x96, 0x78, 0x5d, 0x5a, 0xa9, 0x8b, 0xfb, 0x4e, 0xec,
	0x92, 0x9b, 0xb6, 0x63, 0xed, 0x53, 0x94, 0xd6, 0x8a, 0x08, 0x38, 0x9a, 0x04, 0x11, 0xf0, 0x2c,
	0xaf, 0x6c, 0x1b, 0x53, 0x84, 0x97, 0xde, 0xa7, 0xa2, 0x6d, 0xbc, 0x87, 0x8a, 0xb6, 0x89, 0x83,
	0x40, 0x02, 0x44, 0x07, 0x50, 0x52, 0x36, 0x79, 0x40, 0x25, 0x65, 0xc7, 0x0f, 0x08, 0x09, 0xf0,
	0x84, 0x2e, 0x12, 0xe0, 0x2b, 0x34, 0x3c, 0x59, 0x6f, 0xb8, 0x41, 0xe4, 0x26, 0xed, 0xba, 0x16,
	0x24, 0x12, 0x74, 0x81, 0x2b, 0x83, 0xa7, 0x3a, 0x0b, 0xd5, 0x7d, 0x4a, 0x97, 0x25, 0xf7, 0xec,
	0x94, 0x9e, 0x7b, 0xf6, 0x01, 0x87, 0x1f, 0x3c, 0x7d, 0x48, 0x40, 0x61, 0xfb, 0x1c, 0x34, 0x1c,
	0x80, 0x70, 0x91, 0xa2, 0x68, 0x30, 0x64, 0x12, 0x06, 0xe3, 0xa7, 0x8c, 0x77, 0x66, 0x84, 0x94,
	0xe8, 0x15, 0xc8, 0xfa, 0xb4, 0x5c, 0x89, 0xa3, 0xf1, 0x29, 0x37, 0x5f, 0xe1, 0x64, 0xa1, 0x3d,
	0xfd, 0xa4, 0x1e, 0x39, 0x33, 0xc3, 0x16, 0x20, 0x6f, 0xd3, 0x18, 0x4a, 0x15, 0xf3, 0x06, 0x78,
	0xca, 0x0c, 0x42, 0x42, 0xb4, 0x0e, 0x85, 0x86, 0xe9, 0x99, 0x75, 0x1c, 0x60, 0x6f, 0xea, 0x69,
	0xfa, 0x26, 0xce, 0x75, 0x95, 0x48, 0x12, 0x44, 0xde, 0x9a, 0x20, 0x36, 0x22, 0x3e, 0x68, 0x0d,
	0xf2, 0xee, 0x0e, 0xf6, 0x6a, 0xae, 0x69, 0x71, 0xd0, 0xbd, 0xb3, 0x3a, 0x3c, 0x57, 0x39, 0xad,
	0x11, 0x72, 0x29, 0xff, 0x70, 0x11, 0x0a, 0xe1, 0x54, 0xfd, 0xe1, 0xbf, 0x91, 0x41, 0x27, 0x14,
	0xb7, 0x1b, 0x3d, 0x8d, 0x6e, 0xc2, 0x70, 0xd3, 0x17, 0xe6, 0xd6, 0x8b, 0x5d, 0xdf, 0x6b, 0xf8,
	0xd6, 0x5e, 0xf7, 0xe3, 0x85, 0x89, 0x84, 0x0b, 0xba, 0x28, 0xa3, 0xe5, 0x75, 0x08, 0xd5, 0x05,
	0x78, 0x0b, 0x7b, 0x11, 0x69, 0xdd, 0xa6, 0x1e, 0x28, 0x65, 0xc4, 0x3c, 0x89, 0xd2, 0x7c, 0x80,
	0x16, 0xa1, 0x64, 0xb9, 0xd5, 0x26, 0x3d, 0x82, 0x34, 0xb2, 0x44, 0xe3, 0x44, 0xe8, 0x32, 0xdf,
	0x3b, 0x85, 0xce, 0xb8, 0x0b, 0xd7, 0x97, 0x57, 0x8c, 0xb9, 0x5a, 0x8d, 0xec, 0x5e, 0x5f, 0xf2,
	0x61, 0xdc, 0x82, 0x11, 0x1f, 0x9b, 0x5e, 0x75, 0x9b, 0x65, 0x37, 0x32, 0x6d, 0xa2, 0x6d, 0x58,
	0x60, 0x9d, 0x0e, 0xa5, 0xaf, 0x32, 0x14, 0x03, 0xc0, 0xe8, 0x69, 0x7e, 0xa3, 0x04, 0x7a, 0x38,
	0xf2, 0x30, 0x40, 0x0f, 0xdf, 0x84, 0xdc, 0x86, 0xed, 0x58, 0xb6, 0xb3, 0xc5, 0x55, 0x94, 0x2b,
	0x89, 0xf6, 0xf0, 0xcc, 0x3c, 0x63, 0x62, 0x08, 0x6e, 0x68, 0x05, 0xd2, 0x0d, 0xd3, 0x0b, 0xa6,
	0x4a, 0xbd, 0x48, 0x06, 0xca, 0xa2, 0xfc, 0x2f, 0xd3, 0x90, 0xe3, 0xfc, 0xfb, 0x61, 0x03, 0xaf,
	0x42, 0xde, 0x0f, 0x3c, 0xec, 0x6c, 0x05, 0xdb, 0x7c, 0x13, 0xb7, 0x5d, 0x3d, 0xfc, 0xa9, 0xd7,
	0xf9, 0xf0, 0xd8, 0x2e, 0x0c, 0x99, 0xa0, 0xb7, 0xa0, 0x40, 0x6d, 0xac, 0x8a, 0x1f, 0xfa, 0xd5,
	0xae, 0xf7, 0xf4, 0x15, 0x99, 0x73, 0x65, 0x1d, 0x07, 0x2d, 0x4d, 0x4c, 0xf2, 0x3b, 0xfc, 0x7a,
	0xf9, 0x57, 0x53, 0x90, 0x17, 0x83, 0xd0, 0x0b, 0x44, 0x15, 0xb7, 0xf9, 0x47, 0xe9, 0xa4, 0x8a,
	0x2f, 0x1f, 0x23, 0xca, 0xb8, 0x8d, 0x76, 0x13, 0xe1, 0xed, 0x6b, 0x86, 0x35, 0xc5, 0xed, 0xc5,
	0xd1, 0xf6, 0x47, 0xa4, 0x77, 0x55, 0xfe, 0xcd, 0x21, 0xc8, 0x8b, 0x23, 0xa3, 0x1f, 0x56, 0xd6,
	0x12, 0x8c, 0x86, 0x47, 0x69, 0x85, 0x1f, 0x12, 0xc3, 0x2a, 0xf2, 0x31, 0xa4, 0xa2, 0xf9, 0xd1,
	0x92, 0x5a, 0x96, 0xd1, 0x52, 0xcb, 0x92, 0xf5, 0x09, 0xd8, 0x67, 0x49, 0x4e, 0xff, 0xa7, 0x02,
	0x8c, 0xb7, 0xa2, 0xce, 0x0c, 0x2c, 0xfd, 0xc7, 0xd3, 0xd2, 0xbf, 0x05, 0x19, 0xd6, 0xb8, 0x98,
	0xa5, 0x4e, 0xce, 0x74, 0x15, 0x6d, 0x7c, 0xbd, 0xcc, 0xd0, 0xce, 0xc3, 0x11, 0x22, 0x02, 0x65,
	0x52, 0xfe, 0x5f, 0xd2, 0x90, 0x61, 0x2d, 0x89, 0xfb, 0x60, 0xc3, 0xdf, 0x86, 0xbc, 0x8f, 0x77,
	0xb0, 0x67, 0x07, 0xbb, 0x7c, 0xbd, 0xb5, 0xfd, 0xea, 0xf4, 0x99, 0xd7, 0xf9, 0xe0, 0x96, 0x83,
	0x84, 0x5f, 0x45, 0x73, 0x31, 0x40, 0xaa, 0xf7, 0x77, 0x64, 0xd5, 0x06, 0x8d, 0x6a, 0xae, 0x15,
	0x8d, 0x4a, 0xd9, 0xa2, 0x15, 0x74, 0xe8, 0x1a, 0x8c, 0x58, 0xb6, 0xb9, 0xe5, 0xb8, 0x7e, 0x60,
	0x57, 0x7d, 0xc5, 0x42, 0x0f, 0x99, 0x04, 0xcd, 0x42, 0xbe, 0xc6, 0xb3, 0xec, 0xf8, 0xca, 0xeb,
	0x8a, 0xb1, 0x26, 0xc6, 0xa3, 0xab, 0x00, 0xf8, 0x41, 0xc3, 0xc3, 0xbe, 0xcf, 0xea, 0x37, 0x54,
	0xa8, 0x25, 0x8a, 0xd9, 0x45, 0x49, 0x04, 0x26, 0x06, 0xd8, 0x9a, 0xfe, 0x83, 0x12, 0x14, 0xe5,
	0xac, 0xb1, 0x81, 0xec, 0x1b, 0xe4, 0x8e, 0x27, 0xcd, 0x1d, 0x7f, 0x19, 0xb2, 0x26, 0xcb, 0xd4,
	0x04, 0x35, 0xe7, 0x0e, 0x1f, 0x1e, 0xfa, 0x18, 0x46, 0x92, 0x54, 0x75, 0x27, 0xec, 0x97, 0x62,
	0xd6, 0x6c, 0xd3, 0xe7, 0x46, 0x43, 0x57, 0x64, 0x24, 0x3a, 0x18, 0x5d, 0x85, 0x5c, 0x80, 0x6b,
	0xb8, 0xea, 0xd6, 0x39, 0xce, 0x95, 0x22, 0xb6, 0x21, 0x27, 0x42, 0x17, 0x21, 0x67, 0x5a, 0x16,
	0xd9, 0xbf, 0x1c, 0xd7, 0xa1, 0xed, 0x0b, 0x9a, 0x63, 0xc3, 0x0c, 0x31, 0x1e, 0xed, 0x44, 0x3d,
	0x2f, 0xc7, 0x8f, 0xa2, 0x27, 0xb1, 0xe8, 0xfa, 0x78, 0xbd, 0xd5, 0x11, 0xda, 0x16, 0xa3, 0x4c,
	0x26, 0x17, 0xcf, 0x1f, 0xf9, 0x43, 0x9b, 0x12, 0xac, 0x23, 0x3a, 0x24, 0x24, 0xd7, 0x25, 0x3e,
	0x81, 0x04, 0x06, 0xf9, 0x2b, 0xc3, 0x90, 0xe3, 0xf7, 0xd2, 0x27, 0xad, 0x94, 0x85, 0xf7, 0x55,
	0xb3, 0x2e, 0x33, 0x74, 0xc2, 0x9e, 0xe3, 0xbb, 0xa5, 0x8b, 0xe8, 0x5b, 0x6e, 0xd6, 0x4d, 0x87,
	0xe8, 0xe8, 0x7c, 0xc3, 0x48, 0x4b, 0x3f, 0xdb, 0xe3, 0xd2, 0xcf, 0x75, 0x96, 0x0d, 0xad, 0x4b,
	0x3f, 0x19, 0x50, 0x93, 0xbc, 0x1a, 0xa7, 0xbf, 0x7c, 0x1a, 0x20, 0x34, 0x3d, 0xfd, 0xc7, 0xe2,
	0x84, 0x7b, 0x55, 0xf6, 0x99, 0x66, 0x3a, 0xef, 0xdc, 0xe8, 0xd5, 0xec, 0xeb, 0x2a, 0x2d, 0xbf,
	0x73, 0xb2, 0xcf, 0x1c, 0x9b, 0xb3, 0x3a, 0x68, 0xba, 0x2d, 0xae, 0xcd, 0xb5, 0x78, 0x2e, 0xc9,
	0x19, 0x9d, 0x97, 0xba, 0x7f, 0x2a, 0xc9, 0x92, 0xe4, 0xe7, 0xcf, 0x76, 0x56, 0xad, 0xf7, 0x2a,
	0x15, 0x91, 0xa3, 0xff, 0x1a, 0x77, 0x83, 0xe5, 0x12, 0x7c, 0x6c, 0xe6, 0xfd, 0xfa, 0xef, 0x91,
	0x48, 0xe7, 0xb8, 0x09, 0xa5, 0x0d, 0xd3, 0xc7, 0xe7, 0xcf, 0x56, 0x36, 0x6c, 0xc7, 0xf4, 0x44,
	0x4e, 0x47, 0xdb, 0x45, 0x38, 0x4f, 0x07, 0xcf, 0xd3, 0xb1, 0xcb, 0xc7, 0x8c, 0xe2, 0x86, 0xf4,
	0x5b, 0xce, 0x67, 0x1d, 0xd2, 0xce, 0x67, 0x3d, 0xc3, 0x0d, 0x85, 0xe1, 0xee, 0x3e, 0xe8, 0xe5,
	0x63, 0xdc, 0x32, 0x38, 0xc3, 0x03, 0x86, 0x5d, 0xfc, 0xd6, 0x8b, 0x66, 0x40, 0x69, 0x68, 0xb8,
	0x30, 0x96, 0xb8, 0x90, 0x49, 0x90, 0xb8, 0x70, 0x89, 0x98, 0x23, 0x55, 0xbb, 0x6e, 0xd6, 0xba,
	0x79, 0xaa, 0x17, 0xd9, 0x30, 0xf2, 0x94, 0x9c, 0x02, 0x3d, 0x47, 0xf7, 0x54, 0xae, 0x9b, 0x44,
	0x5a, 0x3e, 0x46, 0x77, 0xd4, 0x25, 0xc8, 0xb1, 0xd8, 0x88, 0x48, 0x94, 0xed, 0x56, 0xbf, 0x42,
	0xa6, 0xe2, 0x14, 0x8c, 0x98, 0xba, 0xca, 0xb9, 0x57, 0xba, 0x9b, 0x47, 0x9d, 0x11, 0xd3, 0x3f,
	0xd1, 0x55, 0xc8, 0xd7, 0x79, 0x58, 0xaf, 0x5b, 0xaa, 0xac, 0x08, 0xff, 0x91, 0x97, 0x24, 0x68,
	0xd0, 0x0b, 0x30, 0xec, 0xda, 0x22, 0x4f, 0xb6, 0xad, 0x40, 0x5c, 0xb5, 0xc9, 0x93, 0x92, 0x91,
	0x68, 0x19, 0x8a, 0x0d, 0xd7, 0x67, 0x45, 0xf9, 0x44, 0x75, 0x28, 0x76, 0xce, 0x89, 0x59, 0xe3,
	0x63, 0x57, 0xe8, 0x33, 0x8f, 0x34, 0xa2, 0x9f, 0x7b, 0x72, 0x81, 0x4a, 0x9a, 0xb9, 0x40, 0x22,
	0x1b, 0x66, 0x54, 0x23, 0x1b, 0x66, 0x19, 0x8a, 0x4d, 0xde, 0xc4, 0x87, 0xde, 0xfd, 0x98, 0x72,
	0xc3, 0x1f, 0x72, 0xf7, 0xcd, 0xe8, 0xa7, 0x70, 0x7c, 0x8e, 0x2b, 0x3b, 0x3e, 0x2f, 0x45, 0xe7,
	0xed, 0x84, 0xd2, 0x79, 0x4b, 0x3e, 0xb3, 0x50, 0x36, 0x79, 0xf6, 0x2a, 0xea, 0x3c, 0xdb, 0x1c,
	0xcd, 0x79, 0xa2, 0xd9, 0xab, 0x8b, 0x00, 0x66, 0xd8, 0x87, 0x95, 0xd7, 0xfc, 0x28, 0x74, 0x6c,
	0xa5, 0x09, 0x47, 0xe1, 0xaf, 0x96, 0xb4, 0xa5, 0xe3, 0x09, 0xd3, 0x96, 0xf6, 0x4b, 0x25, 0x3b,
	0xd1, 0x73, 0x2a, 0xd9, 0x05, 0xc8, 0x56, 0x69, 0xe3, 0x94, 0x6e, 0xe5, 0x3d, 0xac, 0xbd, 0x0a,
	0x59, 0x38, 0x6c, 0x3c, 0x91, 0xa5, 0x5c, 0x09, 0xae, 0x30, 0xf5, 0xf7, 0x94, 0x3a, 0x2c, 0x3a,
	0x91, 0xa5, 0x55, 0xe9, 0x37, 0x3a, 0x07, 0x19, 0x5a, 0x5d, 0xc7, 0xa3, 0xd8, 0x4f, 0xb5, 0x67,
	0xd2, 0xa4, 0xd4, 0x6c, 0x34, 0xd9, 0xb7, 0x96, 0xcd, 0xc3, 0xb0, 0xa7, 0xbb, 0x08, 0x37, 0x3e,
	0x8e, 0x0a, 0x37, 0xfe, 0x37, 0xa5, 0x6f, 0x72, 0x40, 0x88, 0x72, 0x17, 0x7a, 0x3e, 0x8e, 0xd2,
	0xf3, 0xbf, 0x89, 0x71, 0xb9, 0x4d, 0x14, 0x4a, 0xe6, 0x2a, 0x7e, 0x42, 0x51, 0xf5, 0x5c, 0x3e,
	0x66, 0x14, 0xb6, 0xc5, 0x0f, 0xb2, 0x3a, 0x24, 0x03, 0xf5, 0x49, 0xd5, 0xa6, 0x9c, 0x64, 0x75,
	0x48, 0x26, 0xea, 0x39, 0xc8, 0xd4, 0x5d, 0x07, 0xef, 0xf2, 0x68, 0x74, 0xdb, 0x17, 0x78, 0x9b,
	0x0c, 0x22, 0x2f, 0x90, 0x8e, 0x96, 0xd2, 0xd2, 0x9e, 0xd6, 0x4b, 0x4b, 0x8b, 0x65, 0x46, 0x3e,
	0x93, 0x20, 0x33, 0x32, 0xcc, 0x41, 0x7c, 0x4f, 0xb2, 0x1c, 0xc4, 0xf7, 0x6a, 0xe5, 0x20, 0xce,
	0xc9, 0xf1, 0x92, 0x69, 0x45, 0x43, 0x33, 0x16, 0xf7, 0xd8, 0x93, 0xc6, 0xf8, 0xbe, 0xc4, 0x69,
	0x8c, 0x73, 0x50, 0x20, 0x12, 0xd0, 0xa4, 0xf0, 0x68, 0xcf, 0x76, 0xbe, 0x99, 0x75, 0x31, 0x90,
	0xdc, 0x4c, 0x48, 0x45, 0xbe, 0x5b, 0x40, 0x91, 0x2a, 0xa6, 0xde, 0xaf, 0x82, 0x67, 0x41, 0xbe,
	0x1b, 0x1b, 0x4f, 0xe4, 0x3d, 0x55, 0xfc, 0x3f, 0xd0, 0x5d, 0xf1, 0x27, 0xf2, 0x9e, 0x8c, 0x8d,
	0x52, 0x10, 0xaf, 0x4a, 0x26, 0xcb, 0x19, 0xf5, 0x0a, 0x4c, 0xa1, 0x99, 0x4d, 0xff, 0xe9, 0x7b,
	0x20, 0xc7, 0x0b, 0x32, 0x07, 0xfe, 0xb8, 0x81, 0x3f, 0xee, 0xc8, 0xfd, 0x71, 0xe7, 0xc2, 0x4c,
	0xc4, 0xe1, 0x84, 0x4e, 0x82, 0x62, 0x12, 0x27, 0xc1, 0x32, 0x64, 0xb7, 0x58, 0xc7, 0xad, 0x52,
	0x67, 0x08, 0x5c, 0x19, 0xe3, 0x65, 0x07, 0xdf, 0xa0, 0x34, 0x0c, 0x02, 0x97, 0xd1, 0xa3, 0x4b,
	0x00, 0x1b, 0xb6, 0x17, 0x6c, 0x57, 0xa8, 0x21, 0x30, 0xda, 0xdd, 0x10, 0x30, 0x0a, 0x74, 0x3c,
	0xf9, 0x13, 0xdd, 0x82, 0xbc, 0x85, 0xab, 0xd8, 0xf4, 0xb1, 0xc5, 0x55, 0xb6, 0xaf, 0x6b, 0x6f,
	0x4d, 0xd1, 0x4d, 0x4a, 0x74, 0x7a, 0x3a, 0x3e, 0xb4, 0xed, 0x42, 0x0e, 0xb2, 0xe7, 0x63, 0x5c,
	0xd3, 0xe9, 0x77, 0x07, 0x46, 0xeb, 0xa6, 0x67, 0x07, 0x66, 0xad, 0xc2, 0x93, 0x3b, 0x27, 0xf4,
	0xbc, 0x3e, 0x25, 0x4e, 0xce, 0x32, 0x3d, 0xd1, 0x5f, 0x83, 0xd1, 0x7a, 0xb3, 0x16, 0xd8, 0x8d,
	0x1a, 0xae, 0xd0, 0xc7, 0xe5, 0x2a, 0xde, 0xf3, 0xdd, 0x1e, 0xef, 0x36, 0xa7, 0x9a, 0x27, 0x44,
	0xe1, 0x33, 0x96, 0xea, 0xf2, 0x65, 0x74, 0x01, 0x32, 0x8d, 0x6d, 0x37, 0x70, 0x79, 0xa2, 0xa2,
	0x82, 0xe6, 0x66, 0x30, 0x02, 0x34, 0x17, 0x39, 0x19, 0xbb, 0x24, 0x27, 0x8a, 0x1b, 0xda, 0xe3,
	0x5f, 0xbc, 0x0a, 0x59, 0xd3, 0xa1, 0xd6, 0xd7, 0x89, 0xce, 0x35, 0x63, 0x82, 0xc3, 0x1c, 0x1d,
	0x6d, 0x70, 0x2a, 0xb4, 0x4e, 0xb4, 0x34, 0x8a, 0x11, 0xc2, 0xa3, 0x39, 0x27, 0x3b, 0xd7, 0xce,
	0x46, 0x37, 0x22, 0x11, 0x19, 0x71, 0x1e, 0xe8, 0xd7, 0x53, 0x70, 0x7c, 0x0b, 0x3b, 0x14, 0xdd,
	0xb5, 0x21, 0xd5, 0xf4, 0x4f, 0x9d, 0x52, 0xf5, 0x80, 0x06, 0x3d, 0x96, 0xff, 0x27, 0x43, 0x25,
	0x9e, 0xe4, 0x37, 0x2d, 0x5f, 0x44, 0xdf, 0x9b, 0x82, 0x13, 0x75, 0xd3, 0x31, 0xb7, 0x88, 0x0d,
	0xe5, 0x4a, 0x13, 0xa9, 0x77, 0x66, 0xee, 0xc5, 0x21, 0x7d, 0x5c, 0xcc, 0x1d, 0x0b, 0x56, 0x5d,
	0x80, 0x74, 0xcd, 0x76, 0xee, 0xf1, 0x0e, 0xcd, 0xcf, 0x76, 0xfb, 0x5a, 0xb7, 0x6c, 0xe7, 0x9e,
	0x41, 0x29, 0xca, 0xdf, 0x9f, 0x82, 0xbc, 0xd8, 0xb5, 0xb2, 0x8b, 0x22, 0xa5, 0xed, 0xa2, 0x88,
	0xb9, 0x0e, 0x86, 0xf4, 0x5d, 0x07, 0xf3, 0x10, 0xc9, 0x9b, 0xf2, 0x7f, 0x96, 0x82, 0x52, 0x6c,
	0xb7, 0xf5, 0x76, 0x6f, 0x92, 0xb5, 0x3f, 0xa4, 0x6b, 0xed, 0xcf, 0x8f, 0xb7, 0x8a, 0x8b, 0xf2,
	0x3f, 0xcf, 0xf4, 0x95, 0x3b, 0xfd, 0x26, 0x14, 0x3d, 0xa9, 0x84, 0x50, 0x17, 0x54, 0x38, 0x46,
	0xfc, 0xe8, 0x39, 0xd6, 0xa5, 0xe3, 0x36, 0xdf, 0xe3, 0x71, 0xfb, 0xad, 0x29, 0x28, 0xc6, 0x44,
	0x42, 0xe1, 0x28, 0x44, 0x42, 0x6c, 0x4a, 0xa9, 0x0f, 0x04, 0xe8, 0xf4, 0x81, 0x28, 0xff, 0xe8,
	0x30, 0x64, 0xd9, 0x61, 0xd0, 0x0f, 0x4b, 0x7a, 0x05, 0x72, 0x14, 0x5b, 0x03, 0xfb, 0x49, 0x4b,
	0x26, 0x05, 0x3d, 0xba, 0x02, 0x99, 0x0d, 0x0f, 0x63, 0x4b, 0x17, 0x3a, 0x97, 0x51, 0xa1, 0x5b,
	0x50, 0x62, 0xab, 0x43, 0xe8, 0x2e, 0xba, 0xe8, 0x9c, 0x8c, 0x9a, 0xa9, 0x2e, 0xe5, 0x7f, 0x3d,
	0x04, 0xa5, 0xd8, 0x59, 0xdb, 0x1f, 0xf2, 0xa7, 0xd5, 0x70, 0xd2, 0xfe, 0x5a, 0x91, 0x0d, 0x15,
	0x6b, 0xc0, 0x92, 0xd1, 0x6d, 0xc0, 0x52, 0xfe, 0xc5, 0x61, 0x48, 0x93, 0xe3, 0xb1, 0x1f, 0xde,
	0xeb, 0x3b, 0x29, 0xc8, 0xb8, 0xc1, 0x76, 0x88, 0x1d, 0xad, 0x20, 0x87, 0x76, 0x7a, 0xe8, 0x7f,
	0xd1, 0x0b, 0x66, 0x12, 0xbb, 0x4f, 0x74, 0x8d, 0x27, 0x40, 0x64, 0xba, 0x98, 0xcf, 0xb6, 0x73,
	0x6f, 0xff, 0xee, 0x3d, 0xb3, 0x97, 0x24, 0x97, 0x83, 0xee, 0x03, 0x4c, 0xff, 0xad, 0x22, 0x94,
	0xd6, 0xcc, 0x5d, 0xa2, 0x93, 0xdf, 0x71, 0x03, 0xbb, 0x3a, 0xc8, 0x80, 0x1c, 0x78, 0x1d, 0x12,
	0x7b, 0x1d, 0x6e, 0xb6, 0x34, 0xb2, 0x69, 0x5b, 0x6e, 0x7f, 0xdd, 0x76, 0x4c, 0xa7, 0x6a, 0x9b,
	0x35, 0xf1, 0x72, 0xf6, 0xe9, 0x65, 0xe3, 0x43, 0xce, 0x63, 0x88, 0x85, 0xea, 0x55, 0x0b, 0x49,
	0x1b, 0x00, 0x8b, 0x99, 0x50, 0x53, 0xea, 0x5f, 0x5c, 0x3c, 0xec, 0x59, 0xa3, 0x56, 0xc7, 0x57,
	0x60, 0x84, 0x3d, 0x35, 0xf3, 0x5a, 0x94, 0x14, 0xbc, 0x16, 0xc0, 0x08, 0xa8, 0xdb, 0x62, 0x16,
	0x72, 0x55, 0x0f, 0x53, 0x04, 0xa9, 0x51, 0xc5, 0x52, 0x49, 0x41, 0x80, 0x9a, 0x21, 0x5a, 0xc6,
	0xd8, 0x91, 0x64, 0x17, 0xf1, 0x66, 0xbf, 0xbb, 0x90, 0x6f, 0x78, 0xee, 0x8e, 0x6d, 0x85, 0x35,
	0x9a, 0x87, 0xdc, 0x6f, 0x27, 0x9c, 0x6e, 0xaf, 0xca, 0x3a, 0x71, 0xf4, 0x2a, 0xeb, 0x1d, 0x18,
	0x6d, 0x30, 0xa9, 0x2b, 0x74, 0x24, 0xcd, 0x86, 0xdb, 0x25, 0x4e, 0xce, 0x36, 0x4e, 0xb2, 0x1e,
	0xa9, 0x31, 0xb9, 0x3f, 0xfd, 0x53, 0xa7, 0xe0, 0x04, 0xbf, 0x62, 0xe0, 0xaa, 0xeb, 0x54, 0xed,
	0x9a, 0x3d, 0xc8, 0x0b, 0x1d, 0x9c, 0x08, 0xef, 0x9e, 0x13, 0xe1, 0xbc, 0x1e, 0xdc, 0x56, 0x18,
	0x88, 0x93, 0xc4, 0x63, 0x51, 0x57, 0x3c, 0xee, 0x11, 0x16, 0xa5, 0xa3, 0x17, 0x16, 0xbb, 0xd1,
	0x49, 0xa8, 0x8c, 0x66, 0x7b, 0x59, 0x0f, 0x9d, 0x98, 0x22, 0x0c, 0xfb, 0x7e, 0x08, 0x11, 0x2c,
	0xce, 0xc3, 0x39, 0xc8, 0xb9, 0x2c, 0x5d, 0x9c, 0x1f, 0x0f, 0xea, 0x69, 0x87, 0x9c, 0x8e, 0xa5,
	0xda, 0xfb, 0x2c, 0x21, 0xc3, 0x75, 0x14, 0x0b, 0xf2, 0x65, 0x12, 0xf4, 0x1d, 0x29, 0x18, 0xe7,
	0x37, 0x54, 0x09, 0x0f, 0x8d, 0x89, 0xa3, 0x38, 0x34, 0xc6, 0xf8, 0xb4, 0x6b, 0xe2, 0xec, 0xf8,
	0x5c, 0x0a, 0x8e, 0x8b, 0x5b, 0x89, 0x2d, 0x0b, 0x74, 0x14, 0xcb, 0x62, 0x92, 0x4f, 0x1d, 0x73,
	0x84, 0xde, 0x86, 0x2c, 0xab, 0x6a, 0xe0, 0xde, 0xf7, 0x73, 0xed, 0x5d, 0xa1, 0xfb, 0x08, 0xf7,
	0x19, 0x06, 0x5f, 0xe0, 0x1b, 0x9c, 0x09, 0xba, 0x04, 0xe9, 0x4d, 0xd7, 0xab, 0xeb, 0x02, 0xad,
	0x52, 0x22, 0xf4, 0x12, 0x64, 0x02, 0x37, 0x08, 0x5d, 0xf1, 0x9d, 0x63, 0xec, 0x06, 0x1b, 0x8b,
	0xde, 0xa0, 0x7d, 0x65, 0xc8, 0xf2, 0xab, 0x38, 0x6e, 0x80, 0xb9, 0xff, 0xfd, 0x25, 0xbd, 0xc7,
	0xb8, 0xe3, 0x06, 0xd8, 0xa7, 0xcd, 0x66, 0x08, 0x23, 0xf2, 0xab, 0xfc, 0x95, 0x2c, 0xe4, 0xf8,
	0xd3, 0xf5, 0x09, 0x1e, 0x56, 0x82, 0xb6, 0x2c, 0x2d, 0x55, 0xf9, 0x92, 0x52, 0x9d, 0x79, 0x28,
	0x4a, 0x75, 0xf6, 0xe8, 0x94, 0xea, 0xb7, 0xa1, 0xe0, 0x37, 0x37, 0xea, 0x76, 0x10, 0x60, 0x8f,
	0x7b, 0x48, 0x0f, 0x79, 0x7f, 0x46, 0xf3, 0x21, 0x1f, 0x32, 0x0d, 0x73, 0x17, 0x0b, 0x0c, 0xa5,
	0x43, 0x9e, 0x98, 0xcd, 0x45, 0x94, 0x2f, 0x6a, 0x3f, 0x14, 0x14, 0xec, 0x07, 0x96, 0xfc, 0x78,
	0x2e, 0x6c, 0x3e, 0x06, 0x2a, 0x3b, 0x56, 0xf4, 0x1c, 0xfb, 0x85, 0x21, 0xc8, 0xd0, 0x1d, 0xf7,
	0xd8, 0x37, 0xc5, 0x3a, 0x13, 0xd3, 0x1b, 0x95, 0xd0, 0x1b, 0x67, 0x57, 0x24, 0x65, 0xfd, 0x8a,
	0xa6, 0xb2, 0x1e, 0x17, 0x7b, 0xd3, 0xff, 0x78, 0x14, 0xb2, 0xcc, 0x9f, 0x34, 0xd0, 0xd2, 0x07,
	0x5a, 0x7a, 0x52, 0x2d, 0x5d, 0x04, 0xb0, 0x20, 0x71, 0xd2, 0xc7, 0x48, 0x6f, 0x49, 0x1f, 0xc5,
	0x03, 0x4d, 0xfa, 0x28, 0xe9, 0x25, 0x7d, 0x48, 0x71, 0xb4, 0x51, 0xcd, 0x34, 0x8d, 0x30, 0xf1,
	0x61, 0x4c, 0x35, 0x65, 0x55, 0x24, 0x3e, 0xb4, 0x8f, 0xa9, 0x8f, 0x3f, 0xbc, 0x98, 0x7a, 0x94,
	0x35, 0x34, 0xa1, 0x97, 0x35, 0xf4, 0x32, 0x0f, 0xc6, 0xb3, 0xfa, 0xae, 0xf7, 0x75, 0xb0, 0xcb,
	0x7c, 0xd7, 0x91, 0x63, 0xf1, 0xbf, 0x94, 0xee, 0x9f, 0xd8, 0xc3, 0x3f, 0x18, 0x0a, 0x5d, 0x69,
	0xca, 0xc1, 0x87, 0x3f, 0x4a, 0xf5, 0x1a, 0x7d, 0x48, 0xde, 0x5a, 0x22, 0x59, 0xdc, 0x42, 0x0f,
	0x81, 0x9f, 0xc7, 0x3a, 0x84, 0xd7, 0x6f, 0x0d, 0x0a, 0xa6, 0xef, 0x37, 0x59, 0x83, 0xeb, 0x2e,
	0x65, 0x34, 0x4c, 0x56, 0x05, 0xbb, 0x73, 0x82, 0xe0, 0x16, 0xde, 0xc1, 0x35, 0xba, 0xed, 0x23,
	0x26, 0xb3, 0xb3, 0xd2, 0x59, 0xaa, 0x79, 0x57, 0xd3, 0xbf, 0x70, 0x0d, 0x46, 0xd7, 0x6a, 0xe6,
	0x00, 0xe8, 0x71, 0x00, 0xf4, 0xa8, 0x07, 0xf4, 0x18, 0x3f, 0x73, 0x21, 0xd1, 0x99, 0x2b, 0x81,
	0x45, 0x8e, 0xe8, 0x81, 0x45, 0x26, 0xac, 0x7a, 0x0e, 0xec, 0xa0, 0xa6, 0x58, 0xfc, 0x62, 0xb0,
	0xc1, 0xa1, 0x66, 0x3c, 0x9a, 0x44, 0x33, 0x8e, 0x70, 0x29, 0xc7, 0x0e, 0x02, 0x97, 0xb2, 0x15,
	0x50, 0x72, 0xbc, 0x17, 0x40, 0xc9, 0x89, 0xe4, 0x80, 0x92, 0x48, 0x17, 0x50, 0xb2, 0x05, 0x0f,
	0x72, 0x32, 0x09, 0x1e, 0xa4, 0x84, 0xbd, 0x78, 0x5c, 0x17, 0x7b, 0xf1, 0x2c, 0x64, 0x9a, 0x3e,
	0x91, 0x16, 0x27, 0xd4, 0x3e, 0x3d, 0x1d, 0x8c, 0xe6, 0xa0, 0x64, 0x36, 0x1a, 0x9e, 0xbb, 0x63,
	0xd6, 0x98, 0x52, 0x75, 0x52, 0x41, 0xa9, 0x2a, 0x0a, 0x12, 0xaa, 0x57, 0x5d, 0x87, 0xf1, 0x9a,
	0xe9, 0x07, 0x15, 0x0f, 0xef, 0xd8, 0xf8, 0x3e, 0xe3, 0x72, 0x4a, 0x81, 0xcb, 0x28, 0xa1, 0x32,
	0x28, 0x11, 0xe5, 0xb3, 0x02, 0xe3, 0x61, 0x0b, 0x90, 0x0a, 0x77, 0x00, 0x4f, 0x29, 0x39, 0x80,
	0xc7, 0x42, 0x3a, 0x76, 0xa1, 0x15, 0x57, 0xf3, 0xf4, 0x01, 0xe1, 0x6a, 0x96, 0x7b, 0xc1, 0xd5,
	0xbc, 0x02, 0x99, 0xc0, 0x6d, 0xd8, 0x55, 0xde, 0x51, 0x46, 0x3d, 0xd9, 0x86, 0x52, 0x91, 0x47,
	0x22, 0x8f, 0xe3, 0xd9, 0x1b, 0xcd, 0xc0, 0xf5, 0x78, 0x07, 0x99, 0xf7, 0x75, 0x12, 0xcc, 0x7c,
	0xa8, 0x21, 0xd3, 0xc9, 0xb0, 0xa7, 0x4f, 0x25, 0x82, 0x3d, 0xbd, 0x4a, 0x8e, 0x87, 0xc6, 0xae,
	0x67, 0x6f, 0x6d, 0x07, 0xbc, 0x54, 0xa6, 0xfb, 0x22, 0x8d, 0x48, 0x90, 0x01, 0xe3, 0xbc, 0x93,
	0x4d, 0xc5, 0xf4, 0x02, 0x7b, 0x93, 0xdc, 0xc9, 0x33, 0x9d, 0xdf, 0x08, 0xd7, 0x4b, 0xe6, 0xf8,
	0x70, 0x63, 0xcc, 0x8b, 0x5f, 0x40, 0x1e, 0xe4, 0x6a, 0xf6, 0x86, 0x67, 0x7a, 0xbb, 0x53, 0xef,
	0x51, 0xcd, 0xbb, 0x3d, 0xa7, 0xa7, 0x8a, 0xdd, 0x62, 0xfc, 0x0d, 0x31, 0x11, 0x7a, 0x05, 0xd2,
	0x5b, 0xae, 0x59, 0x9b, 0x7a, 0x6f, 0xe7, 0x56, 0x3e, 0x71, 0xbd, 0x63, 0xe6, 0x86, 0x6b, 0xd6,
	0x0c, 0x4a, 0x88, 0x96, 0x98, 0x12, 0xee, 0x3a, 0x53, 0xd3, 0x5d, 0x12, 0x91, 0xe3, 0x2c, 0xe6,
	0xaa, 0x2c, 0xc0, 0x6a, 0xf2, 0x46, 0xd5, 0x00, 0x69, 0xc2, 0xb5, 0x4f, 0x7a, 0xc2, 0x87, 0x9d,
	0x05, 0x75, 0x7b, 0xc2, 0x87, 0x9d, 0x05, 0x5f, 0x8b, 0xcb, 0xe1, 0x4c, 0x32, 0x37, 0x6a, 0x4c,
	0x2c, 0x2f, 0x40, 0xbe, 0xe1, 0xd9, 0x2e, 0x85, 0x46, 0xd2, 0xcc, 0x71, 0x0b, 0x09, 0xc9, 0xfe,
	0xf7, 0x03, 0x56, 0xbe, 0xad, 0x97, 0x6c, 0x47, 0xa9, 0xd0, 0x12, 0x14, 0xb8, 0x35, 0x8a, 0x7d,
	0xae, 0x03, 0x69, 0xb4, 0x2d, 0x11, 0x94, 0xe8, 0x76, 0x2b, 0xea, 0x65, 0x41, 0x6f, 0xef, 0xb5,
	0xc0, 0x5f, 0xbe, 0x1a, 0x9a, 0x42, 0xd0, 0xb9, 0xe7, 0xc0, 0x3e, 0xfb, 0x60, 0xe6, 0x2e, 0xa5,
	0x0c, 0x3b, 0x5b, 0xfc, 0x55, 0x1a, 0xb2, 0xec, 0x52, 0x9f, 0x00, 0x79, 0xd4, 0xb1, 0xe9, 0x37,
	0x3d, 0x7d, 0x20, 0x0f, 0x4e, 0x87, 0x3e, 0x16, 0x46, 0x7c, 0xd8, 0x22, 0xbe, 0xa8, 0xff, 0x72,
	0x79, 0xd8, 0x27, 0x2c, 0xe8, 0x10, 0xd1, 0x9f, 0x33, 0x30, 0x6c, 0x35, 0x85, 0x97, 0xbe, 0x6b,
	0xa5, 0xa7, 0x41, 0x06, 0x97, 0x7f, 0x2f, 0x05, 0x59, 0xc6, 0xae, 0xe7, 0x66, 0x10, 0x61, 0xc9,
	0xe3, 0x90, 0x56, 0xc9, 0xe3, 0x7e, 0x85, 0xbf, 0xc3, 0xbd, 0x16, 0xfe, 0xce, 0xe7, 0xc5, 0x6b,
	0x2e, 0xff, 0xe6, 0xfb, 0x20, 0xcb, 0xc4, 0x6b, 0x3f, 0xac, 0xc0, 0xb3, 0x90, 0xa9, 0x99, 0x1b,
	0xb8, 0xa6, 0x06, 0x82, 0x61, 0xb0, 0xc1, 0x91, 0x05, 0x91, 0xd1, 0xb1, 0x20, 0xae, 0xc5, 0x85,
	0x6e, 0x56, 0x31, 0xf8, 0x2b, 0xc9, 0xd8, 0x1b, 0x30, 0x46, 0x74, 0xae, 0x0a, 0x7e, 0xab, 0x69,
	0xef, 0x98, 0xb5, 0xa8, 0xad, 0x45, 0x37, 0x2e, 0xa3, 0x84, 0x6c, 0x29, 0xa4, 0x22, 0xc6, 0x0c,
	0xc5, 0x93, 0xd0, 0x94, 0x91, 0x0c, 0x58, 0xe2, 0x15, 0xc8, 0xf2, 0x46, 0x2f, 0x05, 0x3d, 0x72,
	0x4e, 0xb6, 0x57, 0xbe, 0x42, 0x4f, 0xf2, 0xf5, 0x25, 0xc8, 0x11, 0x65, 0xa1, 0x42, 0x21, 0x15,
	0x86, 0xbb, 0x38, 0x2b, 0xb2, 0x64, 0xe8, 0x8a, 0x85, 0x3e, 0x0a, 0x28, 0xf0, 0xec, 0xad, 0x2d,
	0xec, 0x55, 0xac, 0x50, 0x2a, 0xf0, 0x7a, 0xbd, 0xb6, 0xa6, 0xfc, 0x5d, 0x46, 0x21, 0xe1, 0xfa,
	0x4e, 0x04, 0xad, 0x97, 0xd0, 0xeb, 0xd4, 0x37, 0x60, 0xd9, 0x3c, 0x43, 0x62, 0xb8, 0x53, 0x17,
	0xa7, 0x7d, 0xd5, 0x16, 0xa2, 0x55, 0x32, 0x72, 0x23, 0xe2, 0x44, 0x8e, 0x46, 0xdb, 0x69, 0x34,
	0x03, 0xee, 0x97, 0xfd, 0x60, 0x07, 0xb3, 0xc1, 0x34, 0xc8, 0x02, 0xf1, 0x30, 0xf3, 0xb1, 0x52,
	0x2a, 0xf2, 0xd1, 0xdc, 0x66, 0x40, 0xe8, 0xc7, 0xf4, 0xe8, 0x39, 0x19, 0xda, 0x80, 0xd1, 0x50,
	0x27, 0xad, 0x72, 0xe7, 0x2c, 0x61, 0x74, 0x49, 0xef, 0xd9, 0xc4, 0xb7, 0x64, 0x0a, 0x5a, 0xc9,
	0x93, 0x7f, 0xa2, 0x8f, 0x86, 0x75, 0xca, 0xcc, 0x28, 0xbd, 0xa0, 0xc7, 0x9b, 0x55, 0x2f, 0xdf,
	0xdd, 0x6d, 0x44, 0xe0, 0x32, 0xa2, 0x8e, 0xf9, 0x13, 0x30, 0xd2, 0x20, 0xaa, 0x74, 0xd5, 0x6e,
	0x98, 0x21, 0xf6, 0xd6, 0x45, 0x3d, 0xf6, 0x6b, 0x11, 0x03, 0x43, 0xe6, 0x46, 0xe3, 0x5e, 0xbb,
	0x0d, 0xd1, 0xe5, 0xb5, 0x0b, 0x26, 0x02, 0xf7, 0x08, 0x54, 0x60, 0x62, 0xcb, 0x73, 0x9b, 0x0d,
	0xdb, 0xd9, 0xaa, 0x6c, 0xe0, 0x6d, 0x73, 0xc7, 0x76, 0x3d, 0x6e, 0xcf, 0xb6, 0xd5, 0x0f, 0xd8,
	0x7d, 0xdc, 0xe0, 0x64, 0xf3, 0x9c, 0x8a, 0x7a, 0xb4, 0xc6, 0xb7, 0x5a, 0xae, 0xa2, 0x0d, 0x40,
	0x3e, 0xae, 0x61, 0x4a, 0x12, 0xcd, 0x70, 0xa2, 0x73, 0xe6, 0x11, 0x9b, 0x61, 0x5d, 0xd0, 0xc5,
	0xa6, 0x98, 0xf0, 0x5b, 0x2f, 0x93, 0x87, 0xf0, 0xd8, 0x52, 0xb1, 0xa2, 0x29, 0x4e, 0xaa, 0x3c,
	0x04, 0x5f, 0x61, 0x56, 0xfc, 0x21, 0xbc, 0x96, 0xab, 0x64, 0x82, 0x86, 0x87, 0xab, 0xdb, 0xb8,
	0x7a, 0x2f, 0x9a, 0xe0, 0x94, 0xca, 0x04, 0x6b, 0x9c, 0x2c, 0x3e, 0x41, 0xa3, 0xe5, 0x2a, 0xda,
	0x86, 0xe3, 0x55, 0xd3, 0xb3, 0x6c, 0xc7, 0xac, 0xd9, 0xc1, 0x6e, 0x34, 0x07, 0xb3, 0xa9, 0xcf,
	0x75, 0x9e, 0x63, 0x21, 0xa2, 0x8c, 0x4d, 0x33, 0x59, 0xdd, 0xfb, 0x1f, 0xe8, 0x97, 0x53, 0x00,
	0x92, 0xa4, 0x51, 0x6e, 0xa4, 0xf0, 0xcd, 0xd4, 0x06, 0x9b, 0x55, 0xb5, 0xc1, 0xc8, 0x9d, 0xed,
	0xd8, 0xc1, 0x6e, 0x74, 0x49, 0x33, 0xf9, 0x29, 0xb6, 0xf4, 0x0d, 0xe9, 0x96, 0xd1, 0xdb, 0x50,
	0x08, 0x3c, 0xd3, 0xf1, 0x69, 0x4a, 0x4c, 0xf9, 0x90, 0x22, 0x33, 0xe1, 0xb5, 0xdb, 0x66, 0xc3,
	0x88, 0xe6, 0x43, 0x15, 0x28, 0x59, 0xbb, 0x8e, 0x59, 0xb7, 0xab, 0x1c, 0xb9, 0x86, 0x79, 0x08,
	0x66, 0xf5, 0xb6, 0xf0, 0x22, 0x63, 0x41, 0xe1, 0x9d, 0x8c, 0xa2, 0x25, 0xfd, 0x92, 0x4c, 0xcd,
	0x27, 0x7b, 0x31, 0x35, 0xbf, 0x3a, 0x0c, 0x85, 0x50, 0x7e, 0xf7, 0x49, 0x3f, 0x42, 0xda, 0x03,
	0x87, 0x29, 0x48, 0x2f, 0x74, 0xd9, 0x11, 0xe2, 0xc9, 0xdb, 0x74, 0xc2, 0xb9, 0xb6, 0x9f, 0xdd,
	0xa9, 0xa5, 0x02, 0xcd, 0x4a, 0x2e, 0x7f, 0x35, 0x0d, 0x2a, 0x72, 0xf6, 0xc7, 0xa1, 0x66, 0xd5,
	0x34, 0x27, 0x89, 0xa2, 0xfc, 0x87, 0x69, 0x28, 0xc5, 0xce, 0xaf, 0x7e, 0xf8, 0xbe, 0xaf, 0x40,
	0x81, 0x2d, 0x5d, 0xa2, 0x3f, 0xa5, 0xbb, 0x05, 0x7b, 0xa2, 0x8a, 0x2b, 0x46, 0xb4, 0x62, 0xa1,
	0x4f, 0xb5, 0x94, 0x8f, 0x66, 0xd4, 0xe4, 0xff, 0xde, 0x9e, 0x95, 0x21, 0xef, 0x78, 0x45, 0xe9,
	0x06, 0x64, 0xdd, 0xcd, 0x4d, 0x1f, 0x07, 0xfc, 0x7b, 0xcf, 0xf7, 0xa0, 0x70, 0xcc, 0xac, 0x52,
	0x4e, 0x91, 0x7a, 0xc0, 0x38, 0x97, 0x3f, 0x9b, 0x82, 0x2c, 0xfb, 0xaf, 0x18, 0xc8, 0x4f, 0x2a,
	0x01, 0xc8, 0x4f, 0x32, 0xb3, 0x8d, 0x18, 0x58, 0xfc, 0x5e, 0x7e, 0x6d, 0x08, 0x20, 0xd2, 0x64,
	0x1e, 0x62, 0xbf, 0xe9, 0xd8, 0xab, 0x18, 0xee, 0xe5, 0x55, 0xe8, 0x35, 0x0e, 0xbc, 0x0a, 0x45,
	0xa6, 0xb5, 0x55, 0x64, 0x88, 0x41, 0x65, 0xcc, 0x1a, 0xf2, 0x2a, 0xd9, 0x5f, 0xe5, 0x7f, 0x35,
	0x04, 0x23, 0x92, 0xd6, 0xd6, 0x1f, 0x08, 0xe4, 0x72, 0x82, 0xd6, 0x8b, 0x5d, 0x94, 0xa0, 0xe8,
	0xd9, 0xf7, 0xaf, 0x97, 0x23, 0x86, 0xa0, 0xe7, 0x86, 0x86, 0xac, 0xba, 0x21, 0x48, 0x88, 0xca,
	0xbf, 0x3a, 0x0c, 0x45, 0xf9, 0x44, 0xed, 0x87, 0xf7, 0xdb, 0x72, 0x42, 0xa5, 0xf5, 0x4f, 0xa8,
	0x33, 0x90, 0x6e, 0x98, 0xc1, 0xb6, 0x6a, 0x16, 0x1c, 0x19, 0xfb, 0x30, 0x4f, 0xb5, 0xd9, 0x79,
	0x29, 0x6b, 0x20, 0xa1, 0x9a, 0x38, 0xfd, 0xa7, 0x25, 0x28, 0xc6, 0x60, 0x32, 0x06, 0xb9, 0x03,
	0x83, 0x04, 0xbc, 0xc7, 0x04, 0xae, 0x49, 0x4a, 0x99, 0x2b, 0x69, 0xa6, 0xcc, 0x45, 0x49, 0x7f,
	0xa3, 0x07, 0x9a, 0xf4, 0x37, 0xa6, 0x97, 0xf4, 0x17, 0x66, 0xee, 0x8d, 0xeb, 0x42, 0x16, 0x7d,
	0x14, 0x4a, 0x6f, 0x35, 0xcd, 0x9a, 0xbd, 0x29, 0xf0, 0x82, 0x26, 0xba, 0x44, 0x38, 0x24, 0x19,
	0x31, 0xf3, 0x9a, 0x4c, 0x69, 0xc4, 0x19, 0xa1, 0xdb, 0xad, 0x48, 0x44, 0x48, 0xcf, 0xd7, 0x18,
	0xa7, 0x2e, 0x7f, 0x67, 0x1a, 0x4a, 0xb1, 0xf9, 0xfa, 0xe1, 0xac, 0x8a, 0xef, 0xb6, 0x74, 0xa2,
	0xdd, 0xb6, 0x10, 0x6b, 0x41, 0x92, 0xb0, 0xb3, 0x78, 0x54, 0x8c, 0x96, 0xd5, 0x2a, 0x46, 0x6b,
	0x42, 0x96, 0x36, 0x89, 0x39, 0xa2, 0x92, 0x04, 0x3e, 0x59, 0x32, 0x28, 0x75, 0x79, 0xe9, 0x4e,
	0xff, 0xe4, 0x09, 0x18, 0x8f, 0x15, 0x47, 0xb9, 0xb5, 0x01, 0x58, 0xc0, 0xe0, 0xcc, 0x3b, 0xfa,
	0x33, 0x2f, 0x69, 0x19, 0xe8, 0xb7, 0xa6, 0xa0, 0x18, 0xc3, 0x62, 0x2b, 0x1e, 0x45, 0x09, 0x61,
	0x6c, 0xca, 0x77, 0x45, 0x39, 0xa9, 0x08, 0x84, 0x8d, 0x26, 0x09, 0x84, 0x2d, 0x41, 0x81, 0xa2,
	0x04, 0x99, 0xb5, 0x60, 0xb7, 0x5b, 0x58, 0x65, 0x4f, 0xba, 0x41, 0x48, 0x89, 0x9a, 0x52, 0xf7,
	0xa4, 0xf1, 0x43, 0x6a, 0x0a, 0x72, 0x8b, 0x4f, 0x20, 0x35, 0x5e, 0xfa, 0x9e, 0x14, 0xa0, 0x6d,
	0x6c, 0xd6, 0x82, 0xed, 0xaa, 0xe9, 0xe1, 0x8a, 0x8f, 0xbd, 0x1d, 0xbb, 0x8a, 0xf9, 0x09, 0xae,
	0x70, 0x07, 0xaf, 0xd0, 0x3b, 0xb8, 0xa8, 0x7a, 0x07, 0xcb, 0xe1, 0x54, 0xeb, 0x6c, 0x26, 0x63,
	0x62, 0xbb, 0xf5, 0x92, 0xac, 0x8b, 0xa1, 0x24, 0xba, 0xd8, 0x27, 0x61, 0xd4, 0xdc, 0x31, 0xed,
	0x1a, 0x8d, 0x7e, 0x53, 0x8f, 0x09, 0xab, 0x03, 0x3d, 0xaf, 0xa2, 0x90, 0x10, 0x21, 0x3e, 0x33,
	0x27, 0xc8, 0x69, 0xce, 0x63, 0xc9, 0x94, 0x7f, 0xa2, 0x8f, 0x43, 0xc9, 0x71, 0x83, 0x4a, 0x78,
	0x91, 0xe3, 0x34, 0x9e, 0x53, 0xe6, 0x7e, 0xc7, 0x0d, 0xc2, 0x09, 0x8c, 0xa2, 0x23, 0xfd, 0x42,
	0x6f, 0xc2, 0x29, 0xce, 0xd7, 0xa6, 0xa1, 0x08, 0xfc, 0x80, 0xac, 0x13, 0xdb, 0x75, 0x7c, 0xc5,
	0x64, 0xc5, 0x93, 0x32, 0xf9, 0x52, 0x48, 0x1d, 0xeb, 0x39, 0x73, 0xf2, 0xe8, 0x7a, 0xce, 0xfc,
	0xf9, 0x30, 0x94, 0x62, 0x2f, 0xb3, 0x1f, 0x34, 0xae, 0x65, 0x28, 0x5a, 0xe6, 0xae, 0x5f, 0x71,
	0x37, 0x2b, 0xf7, 0x31, 0xbe, 0xc7, 0x75, 0xae, 0x0f, 0xb4, 0x57, 0xb4, 0x77, 0xfd, 0xd5, 0xcd,
	0x37, 0x31, 0xbe, 0xc7, 0xfa, 0xd0, 0x5a, 0xe1, 0x6f, 0x74, 0x01, 0x72, 0x66, 0xad, 0x56, 0xb1,
	0xcc, 0x5d, 0x55, 0x94, 0xaa, 0xac, 0x59, 0xab, 0x2d, 0x9a, 0xbb, 0xe8, 0x0e, 0x1c, 0x8f, 0xd6,
	0x38, 0xcd, 0x7b, 0x62, 0x2b, 0x3d, 0xdb, 0x1d, 0x92, 0xdf, 0x40, 0x21, 0xe5, 0x3a, 0x21, 0xa4,
	0x9f, 0xe5, 0x55, 0x88, 0xae, 0x56, 0xb0, 0x63, 0x31, 0x6e, 0x39, 0x05, 0x6e, 0xe3, 0x21, 0xdd,
	0x92, 0x63, 0x91, 0x2b, 0xe5, 0xdf, 0x1e, 0x82, 0xa2, 0xbc, 0xc6, 0xfb, 0xe3, 0x9b, 0xeb, 0x7b,
	0x84, 0xf6, 0x4f, 0x91, 0x3b, 0x0f, 0x59, 0xab, 0x49, 0xfe, 0xbb, 0x9b, 0x6f, 0x48, 0x1c, 0xd6,
	0x6c, 0x74, 0xb2, 0x16, 0x77, 0xad, 0xb2, 0x67, 0xfa, 0x57, 0x3f, 0x00, 0x05, 0x0a, 0x6d, 0x60,
	0x35, 0xbd, 0x81, 0xb2, 0x3a, 0x50, 0x56, 0x13, 0x2b, 0xab, 0x7f, 0x15, 0x8f, 0x64, 0x83, 0xea,
	0x99, 0xf2, 0x0b, 0xa9, 0x5e, 0x42, 0xd1, 0x07, 0x12, 0x06, 0xef, 0x41, 0x5b, 0x91, 0x23, 0xe1,
	0x5f, 0x4b, 0x41, 0x7e, 0xc3, 0xf4, 0xb1, 0x55, 0xa1, 0x15, 0x2b, 0x8a, 0xcf, 0xff, 0x93, 0x29,
	0xbd, 0x43, 0x75, 0xc1, 0xf4, 0x30, 0x79, 0x07, 0x94, 0xea, 0x82, 0x16, 0x7a, 0x09, 0xd9, 0xe2,
	0x1c, 0xbf, 0x84, 0x52, 0xbf, 0xac, 0x5e, 0xde, 0xb6, 0x89, 0x3d, 0xcf, 0xac, 0x85, 0xe0, 0x27,
	0xf4, 0x31, 0x57, 0x1d, 0xf4, 0x17, 0xa9, 0xa8, 0xf5, 0x5e, 0x51, 0xf5, 0x89, 0x7f, 0x86, 0x3d,
	0xf1, 0x8b, 0xda, 0xf7, 0x4e, 0xc9, 0x5e, 0x52, 0xd6, 0xef, 0x37, 0x88, 0xf2, 0x1a, 0xc1, 0x3d,
	0x5f, 0x53, 0x25, 0xbc, 0x8d, 0x2d, 0xee, 0x0e, 0x92, 0x1d, 0x6c, 0x52, 0xdf, 0xbf, 0x1b, 0x61,
	0xdd, 0x4e, 0xa9, 0xb3, 0x7f, 0x64, 0x69, 0x27, 0xc4, 0x9f, 0xda, 0xb7, 0x62, 0x67, 0x16, 0xf2,
	0x44, 0x73, 0xb4, 0x5c, 0x47, 0x54, 0x10, 0x75, 0x3d, 0xef, 0x73, 0x8e, 0x1b, 0x2c, 0xba, 0x0e,
	0x46, 0xab, 0x30, 0x26, 0x68, 0x2b, 0x3c, 0xf1, 0x4e, 0x13, 0x7f, 0xa6, 0xc4, 0x59, 0x19, 0x2c,
	0xff, 0x4e, 0x4e, 0x21, 0x1f, 0x4f, 0x9a, 0x42, 0x2e, 0x2c, 0x27, 0x4d, 0x2c, 0x76, 0x66, 0x39,
	0xfd, 0x44, 0x0a, 0x72, 0x7e, 0x73, 0xe3, 0x1b, 0x71, 0x35, 0x50, 0x47, 0x8b, 0x71, 0x7a, 0x2d,
	0x0f, 0x7d, 0x5e, 0x95, 0x88, 0xa6, 0x58, 0x19, 0xe2, 0x0e, 0xd1, 0x3b, 0x29, 0x56, 0x10, 0x42,
	0xce, 0x92, 0x49, 0xd5, 0xbb, 0xf5, 0xf4, 0x96, 0xfe, 0x92, 0x43, 0x7b, 0xd4, 0xe8, 0x96, 0xa3,
	0x2e, 0x35, 0x6c, 0xdf, 0xb5, 0xf0, 0xea, 0x26, 0x11, 0x16, 0x86, 0xb8, 0x4b, 0xf4, 0x1a, 0x14,
	0x1a, 0xd8, 0xdb, 0x74, 0xbd, 0x3a, 0xb6, 0x78, 0x56, 0x59, 0xfb, 0xea, 0x0b, 0xb1, 0xe9, 0x88,
	0xda, 0xc1, 0x48, 0xc2, 0xf8, 0x78, 0xc4, 0x05, 0xad, 0x44, 0x2c, 0xbd, 0xa9, 0x13, 0x5d, 0x0a,
	0x3a, 0xf6, 0xb0, 0xf4, 0x22, 0x56, 0x5e, 0xcc, 0xe0, 0x3d, 0x79, 0x48, 0x18, 0x28, 0xfb, 0x18,
	0xbc, 0xcb, 0x30, 0xc2, 0xb6, 0x4f, 0x85, 0x2e, 0xdc, 0x53, 0x7a, 0x06, 0x3b, 0x30, 0x5a, 0x72,
	0x19, 0xfd, 0x12, 0x05, 0x61, 0xa2, 0xac, 0xa2, 0x3e, 0x31, 0x53, 0xaa, 0x52, 0xb1, 0xa1, 0xb7,
	0x32, 0xc2, 0x9c, 0x9a, 0xc4, 0x42, 0xd1, 0x18, 0x63, 0x37, 0x1b, 0xde, 0x02, 0x5a, 0x84, 0xc2,
	0x86, 0x6b, 0xed, 0x56, 0x7c, 0x3b, 0xc0, 0xbc, 0xf2, 0x4b, 0x5d, 0x04, 0x10, 0xca, 0x75, 0x3b,
	0xc0, 0x32, 0x20, 0x56, 0x39, 0x21, 0x20, 0xd6, 0x2e, 0x64, 0x3d, 0xdc, 0x70, 0xbd, 0x80, 0xe7,
	0x73, 0x29, 0xbc, 0xbe, 0xab, 0x7a, 0xe7, 0xe1, 0x62, 0xd8, 0xa7, 0xda, 0xa0, 0x13, 0x19, 0x7c,
	0x42, 0x74, 0x13, 0x8a, 0x55, 0x97, 0x6a, 0x9c, 0xa6, 0x94, 0xf6, 0xa5, 0x5e, 0xb8, 0x26, 0x13,
	0xa3, 0xef, 0x4a, 0xc1, 0xa4, 0x7c, 0xa1, 0xc2, 0x8b, 0x12, 0x9e, 0x52, 0x7d, 0xaa, 0x97, 0x13,
	0x2e, 0x0a, 0x03, 0xc9, 0xd3, 0xf2, 0xd2, 0x83, 0x45, 0x28, 0x6c, 0xba, 0xb5, 0x9a, 0x7b, 0xbf,
	0xd2, 0x6c, 0x4c, 0x3d, 0xad, 0xf9, 0x79, 0x19, 0xe5, 0xeb, 0x0d, 0x74, 0x1e, 0xd2, 0x14, 0x83,
	0xea, 0x99, 0x2e, 0x51, 0xa1, 0xb0, 0x75, 0x99, 0x41, 0xc7, 0xa3, 0x35, 0x28, 0x6e, 0xba, 0x55,
	0xb3, 0x56, 0xb1, 0x30, 0xf5, 0x28, 0xbd, 0xa7, 0x4b, 0x3e, 0x5d, 0x28, 0x2c, 0xae, 0x13, 0xaa,
	0x45, 0x4a, 0x64, 0x8c, 0x6c, 0x46, 0x3f, 0xd0, 0x9f, 0xa5, 0x60, 0xb4, 0x49, 0xd4, 0xad, 0x68,
	0xb7, 0xbd, 0x57, 0xf5, 0xc5, 0xfe, 0x68, 0x4a, 0xaf, 0x4a, 0x9f, 0x4d, 0x49, 0x69, 0xce, 0xe8,
	0xeb, 0x11, 0x7a, 0x5f, 0x71, 0xbd, 0xb9, 0xc1, 0x5a, 0x8b, 0x19, 0x25, 0xf2, 0x78, 0xb1, 0xfd,
	0x49, 0x9f, 0x97, 0x0a, 0xaa, 0x69, 0xcd, 0x0f, 0x48, 0x28, 0xc9, 0xc5, 0xf2, 0xf7, 0xa5, 0xa0,
	0x10, 0xca, 0xf4, 0x87, 0x98, 0x48, 0x34, 0x3f, 0x22, 0x1d, 0x47, 0xe5, 0x3f, 0xce, 0x44, 0x77,
	0xe5, 0xf5, 0x09, 0x66, 0x12, 0xcd, 0xa1, 0x49, 0x27, 0xc8, 0xa1, 0x41, 0x5f, 0x19, 0x82, 0x8c,
	0x59, 0x0d, 0x5c, 0x4f, 0x1d, 0x83, 0xec, 0x0b, 0x43, 0x92, 0x22, 0x94, 0x1c, 0xf2, 0x22, 0x79,
	0x3b, 0x95, 0x23, 0x44, 0x06, 0x4f, 0xb2, 0x77, 0x0d, 0xf6, 0x42, 0xd1, 0x67, 0xa0, 0xc8, 0x53,
	0xdf, 0x6b, 0x9b, 0xc4, 0x6c, 0xc9, 0x1e, 0x45, 0x78, 0x01, 0x58, 0x7a, 0x7c, 0x6d, 0x73, 0x75,
	0xb3, 0xfc, 0xbd, 0xc3, 0x30, 0x22, 0xc9, 0xb4, 0xfe, 0xc8, 0x16, 0x15, 0x59, 0xd2, 0x9a, 0xab,
	0x9d, 0x93, 0xa1, 0xcf, 0xc0, 0x48, 0xdd, 0x74, 0xec, 0x46, 0x93, 0x7e, 0x64, 0xf5, 0x45, 0x3f,
	0x2b, 0xad, 0x79, 0xdd, 0xf5, 0x20, 0xcf, 0x38, 0x7b, 0x45, 0x72, 0xa6, 0xe9, 0x1b, 0xa6, 0xd3,
	0x7f, 0xfd, 0x59, 0x18, 0x6f, 0x35, 0xb1, 0x07, 0xce, 0xb4, 0x81, 0x33, 0x2d, 0xa9, 0x33, 0xed,
	0x97, 0x13, 0x3a, 0xd3, 0xde, 0x3d, 0x65, 0x21, 0x41, 0x12, 0x5f, 0x58, 0x62, 0x1c, 0x4d, 0xe1,
	0x8f, 0xa2, 0x38, 0x9a, 0x8d, 0x9a, 0x59, 0xc5, 0xbe, 0xba, 0x3f, 0xaa, 0x07, 0x1c, 0x4d, 0x36,
	0x15, 0x5a, 0x24, 0x36, 0xe4, 0x5b, 0x4d, 0xdb, 0xb7, 0xa5, 0x88, 0xb5, 0xca, 0x37, 0x97, 0xc9,
	0xd0, 0x4a, 0xe8, 0x56, 0x1a, 0xed, 0xdc, 0xe9, 0x9c, 0x0b, 0x98, 0x0e, 0x8e, 0xa5, 0x15, 0xc8,
	0xda, 0x4e, 0x80, 0xc3, 0xb6, 0xca, 0xdd, 0x58, 0xad, 0xd0, 0xc1, 0x71, 0x56, 0x8c, 0x01, 0xba,
	0x21, 0x55, 0xf0, 0x8f, 0x77, 0xf6, 0x19, 0x18, 0x02, 0x0a, 0x98, 0x0d, 0x67, 0xa2, 0x22, 0xac,
	0xe2, 0x5f, 0x82, 0x51, 0xcb, 0xad, 0x38, 0x6e, 0x50, 0xe1, 0x5a, 0x9f, 0x2a, 0x84, 0x5a, 0xd1,
	0x72, 0xef, 0xb8, 0x01, 0x57, 0x0e, 0x63, 0x6e, 0x2a, 0xcd, 0xec, 0xaf, 0xc8, 0x4d, 0x25, 0xf2,
	0x9b, 0x26, 0x7b, 0xc9, 0x6f, 0xfa, 0x81, 0xa1, 0xc8, 0x5d, 0x75, 0x5c, 0xf5, 0xc4, 0xfa, 0x4a,
	0xea, 0x68, 0xfd, 0x55, 0xc9, 0xfc, 0x23, 0x89, 0x0e, 0xd4, 0x7d, 0x3d, 0x63, 0x27, 0x1e, 0x09,
	0xcf, 0xd8, 0x27, 0x00, 0xdc, 0x6a, 0xb5, 0xe9, 0x31, 0x2b, 0xf2, 0x64, 0xe7, 0x72, 0xc8, 0xd6,
	0x83, 0x7e, 0x66, 0x35, 0x24, 0x0d, 0x5d, 0x64, 0x12, 0x3b, 0xf4, 0x06, 0x14, 0x4c, 0xbf, 0xe2,
	0x60, 0x6c, 0x61, 0x8b, 0x97, 0x29, 0xbe, 0xa8, 0xcc, 0x7b, 0xce, 0xbf, 0x43, 0x09, 0xa3, 0xe6,
	0x99, 0x26, 0xbf, 0x82, 0xe6, 0x60, 0xc4, 0x6c, 0x06, 0xdb, 0xae, 0xc7, 0xa4, 0xec, 0x94, 0x22,
	0x62, 0x13, 0x08, 0xa2, 0x55, 0x72, 0xfa, 0x15, 0x38, 0x04, 0x31, 0xf6, 0x78, 0xf1, 0xe1, 0x19,
	0xe5, 0x5b, 0x33, 0x04, 0xa5, 0x11, 0x31, 0xa1, 0x6d, 0x1b, 0x84, 0x19, 0x57, 0xa1, 0x35, 0x09,
	0x65, 0xdd, 0xb6, 0x0d, 0x82, 0x9c, 0x16, 0xba, 0xfc, 0xf0, 0xb0, 0xec, 0x61, 0x7c, 0x42, 0x75,
	0x35, 0xfd, 0xee, 0xd0, 0xa3, 0x65, 0x07, 0x25, 0x71, 0x44, 0xf4, 0x60, 0x3b, 0xf5, 0x10, 0xf1,
	0x92, 0x3c, 0xb6, 0x2d, 0xae, 0xd3, 0x27, 0x0f, 0xd8, 0x75, 0xfa, 0xd4, 0x23, 0xe4, 0x3a, 0xfd,
	0xb6, 0x14, 0x8c, 0xf9, 0xcd, 0x46, 0xc3, 0xf5, 0x02, 0xdb, 0xd9, 0xaa, 0xd8, 0xce, 0xa6, 0xcb,
	0x5d, 0x6c, 0x87, 0xa8, 0x80, 0x8c, 0x46, 0x33, 0xae, 0x38, 0x9b, 0x2e, 0xd1, 0x7e, 0x68, 0xfe,
	0x58, 0x1d, 0x3b, 0xdc, 0x3d, 0x77, 0xf0, 0x93, 0xaf, 0xf3, 0x09, 0x8c, 0x70, 0xaa, 0xb8, 0xdb,
	0xf8, 0x3d, 0x49, 0xdd, 0xc6, 0xc2, 0xaf, 0xf8, 0x5e, 0x4d, 0xbf, 0xe2, 0xb7, 0xd3, 0xa5, 0x53,
	0xc3, 0x3b, 0xa6, 0x13, 0x54, 0xb6, 0x6d, 0x3f, 0x20, 0x8a, 0xc1, 0xb4, 0xea, 0xd3, 0x5f, 0xd0,
	0x73, 0xe9, 0xad, 0x79, 0xee, 0x0e, 0x76, 0xa8, 0x6f, 0x6e, 0x4c, 0x4c, 0xba, 0xcc, 0xe6, 0x2c,
	0xff, 0xd3, 0x14, 0x40, 0x74, 0x12, 0x3c, 0xcc, 0x0a, 0xbd, 0xa8, 0xb1, 0xfb, 0xb0, 0x66, 0x91,
	0x5c, 0x51, 0x3e, 0x07, 0xcb, 0x5f, 0x4a, 0x41, 0x5e, 0x9c, 0x3f, 0xbd, 0xb5, 0x5a, 0xdd, 0x0f,
	0x7e, 0x66, 0xa8, 0x67, 0xf8, 0x99, 0x11, 0xe9, 0x60, 0x2d, 0xff, 0xe3, 0x34, 0x14, 0xc2, 0x13,
	0xa9, 0x1f, 0x9c, 0x2a, 0x7f, 0x92, 0x82, 0x8c, 0xb9, 0x45, 0x74, 0x78, 0x65, 0xac, 0xdc, 0x2f,
	0xa7, 0x92, 0xfb, 0x43, 0x1e, 0xc6, 0x79, 0x69, 0xb0, 0x07, 0xdc, 0xe3, 0x93, 0xcb, 0x1c, 0xb1,
	0x4f, 0x2e, 0x69, 0x2e, 0x55, 0x5c, 0x21, 0x9a, 0xfe, 0x95, 0x71, 0x18, 0x8d, 0xb7, 0x89, 0x19,
	0xf8, 0x80, 0x06, 0x3e, 0xa0, 0x77, 0x45, 0x63, 0xa8, 0xab, 0xa1, 0x87, 0x76, 0xa4, 0x73, 0x0b,
	0x78, 0x56, 0x22, 0x7c, 0xcb, 0xf6, 0x03, 0x46, 0xcf, 0x1d, 0xb4, 0x51, 0x0f, 0xbc, 0xe2, 0x51,
	0xf6, 0xc0, 0x93, 0xfa, 0x52, 0x95, 0x74, 0xfb, 0x52, 0xc9, 0xfd, 0xf3, 0x46, 0x1f, 0x72, 0xff,
	0xbc, 0xb1, 0xa3, 0xaf, 0x61, 0x90, 0xfa, 0xd8, 0x8c, 0x3f, 0x94, 0x3e, 0x36, 0x13, 0x47, 0xd7,
	0xc7, 0xe6, 0x22, 0xe4, 0x9c, 0x66, 0xad, 0x66, 0x6f, 0xee, 0xf2, 0xbc, 0x21, 0x85, 0x34, 0x2a,
	0x36, 0x1e, 0x5d, 0x26, 0x16, 0xb0, 0xb0, 0x38, 0x26, 0xd5, 0x90, 0x8b, 0x43, 0x02, 0x74, 0x0d,
	0xd2, 0x76, 0x80, 0xeb, 0x3c, 0xe3, 0xff, 0xb9, 0x8e, 0xa6, 0x73, 0x78, 0x28, 0xcc, 0xac, 0x04,
	0xb8, 0xee, 0x1b, 0x94, 0x12, 0x5d, 0x80, 0x9c, 0xed, 0x54, 0x6b, 0x4d, 0x0b, 0xf3, 0xf4, 0x99,
	0xae, 0x20, 0xd7, 0x7c, 0x38, 0xa1, 0xc4, 0x0f, 0x18, 0xe5, 0x49, 0x35, 0x4a, 0x3e, 0x5c, 0x2a,
	0x0f, 0x3a, 0xa5, 0xd5, 0x0d, 0xfc, 0xef, 0x0d, 0x41, 0x86, 0xde, 0x7b, 0x3f, 0xa8, 0x57, 0xaf,
	0xc1, 0xb8, 0x4f, 0xbe, 0x87, 0x53, 0xc5, 0x95, 0x9a, 0xed, 0xdc, 0x8b, 0x80, 0x4e, 0xda, 0x2e,
	0x9e, 0x15, 0xde, 0xfb, 0x5f, 0xb8, 0x01, 0x47, 0x05, 0x83, 0x5b, 0xb6, 0x73, 0x6f, 0xc5, 0x4a,
	0x58, 0x33, 0x1f, 0x5b, 0x1b, 0xd3, 0xff, 0x7e, 0x1c, 0xc6, 0xc2, 0x4b, 0x7c, 0x79, 0x0f, 0x94,
	0x88, 0x81, 0x12, 0xf1, 0x6e, 0x50, 0x22, 0xa4, 0xd3, 0x78, 0xa4, 0xe7, 0x2e, 0x91, 0xc5, 0x87,
	0x7a, 0x24, 0x96, 0x8e, 0xec, 0x48, 0x94, 0xd2, 0xe1, 0x46, 0x0f, 0xa6, 0x3f, 0xe4, 0xd8, 0x01,
	0xf5, 0x87, 0x1c, 0x7f, 0x77, 0xf5, 0x87, 0x9c, 0x78, 0x68, 0xfd, 0x21, 0x45, 0x43, 0x47, 0x94,
	0xa4, 0xa1, 0x63, 0x6b, 0x6f, 0xc6, 0xc9, 0x2e, 0xbd, 0x19, 0xe3, 0xb2, 0x5d, 0xfc, 0xbe, 0xe3,
	0x06, 0x38, 0xd6, 0x9b, 0x11, 0x5d, 0x81, 0x0c, 0xf6, 0x3c, 0x0a, 0xff, 0xa8, 0x07, 0x7a, 0x4f,
	0xa9, 0xd0, 0xe7, 0x53, 0x70, 0x22, 0x06, 0x76, 0x50, 0x11, 0x4b, 0xff, 0x84, 0xaa, 0x6f, 0x6c,
	0x9e, 0xbe, 0xe7, 0xcb, 0xea, 0x6e, 0x55, 0x69, 0x36, 0x51, 0x29, 0x70, 0xbc, 0xba, 0xcf, 0xd5,
	0xf2, 0xaf, 0x0c, 0xc1, 0x88, 0xf4, 0xe0, 0x83, 0x16, 0x79, 0x09, 0x5a, 0xe4, 0x2d, 0x48, 0xca,
	0xc6, 0xcb, 0xda, 0xca, 0x06, 0x5b, 0x7d, 0xd3, 0x3f, 0x55, 0x06, 0x88, 0x7c, 0x9a, 0x03, 0x45,
	0xe3, 0xf1, 0x54, 0x34, 0xee, 0x87, 0xc6, 0x7d, 0x41, 0x55, 0x36, 0x5c, 0x96, 0x1c, 0x8d, 0xfa,
	0x87, 0xa3, 0x30, 0xef, 0x23, 0x43, 0x04, 0xb4, 0x70, 0x0a, 0x16, 0x88, 0x99, 0x59, 0x75, 0x3d,
	0x2b, 0xd4, 0x44, 0x3a, 0xe8, 0xec, 0x7e, 0x60, 0x3a, 0x51, 0xe8, 0x3e, 0x24, 0x44, 0x2f, 0x41,
	0xb6, 0xe1, 0xd6, 0xec, 0xea, 0x2e, 0xcf, 0x14, 0xe9, 0xb8, 0x0c, 0xf9, 0xd0, 0x58, 0x91, 0x42,
	0xe9, 0xe8, 0x8a, 0x14, 0xce, 0x87, 0xe0, 0xda, 0xa3, 0x9d, 0x4d, 0x3d, 0x8e, 0x26, 0x2c, 0x30,
	0xb5, 0x67, 0x81, 0x22, 0x32, 0xee, 0xd8, 0x14, 0x8a, 0x40, 0x05, 0x87, 0x38, 0x1c, 0x8f, 0xae,
	0x0b, 0xf7, 0x33, 0x43, 0x1f, 0xf8, 0xba, 0x0e, 0x27, 0x1a, 0x97, 0x1f, 0x33, 0x73, 0x64, 0x7c,
	0xf8, 0xaa, 0xb9, 0x73, 0x77, 0x0e, 0xb2, 0xac, 0x4d, 0x19, 0x07, 0x11, 0xf8, 0x90, 0x02, 0xa3,
	0x25, 0x4a, 0x60, 0x70, 0x42, 0xb2, 0x67, 0x7c, 0x7b, 0xcb, 0x31, 0xc9, 0x8b, 0xe2, 0x49, 0x1f,
	0x6d, 0x5f, 0xfb, 0xba, 0x18, 0x68, 0x44, 0x34, 0xe5, 0xaf, 0x02, 0x64, 0xe8, 0xcd, 0xf5, 0x57,
	0x66, 0xf1, 0xb0, 0x7e, 0x66, 0xf1, 0x2d, 0x18, 0xbe, 0xbf, 0xed, 0x72, 0xe9, 0xf7, 0x9c, 0xea,
	0x37, 0x9d, 0x79, 0x73, 0xdb, 0x9d, 0x2f, 0xb2, 0xef, 0xca, 0xf3, 0x10, 0x08, 0x1b, 0xf4, 0xc9,
	0x7d, 0x93, 0x69, 0x5f, 0x52, 0x66, 0xbb, 0x1a, 0xba, 0xe0, 0xa5, 0xcc, 0x89, 0xf0, 0x1a, 0x7a,
	0x1d, 0x50, 0x88, 0x2e, 0x4e, 0xc6, 0xb3, 0x84, 0x02, 0xcd, 0x2e, 0x20, 0xa2, 0x69, 0x0e, 0x9d,
	0xf1, 0xee, 0x6e, 0x03, 0x97, 0x7f, 0x64, 0x18, 0x86, 0xdf, 0xdc, 0x76, 0xd1, 0x0b, 0x30, 0xdc,
	0xf4, 0x6c, 0xbe, 0x18, 0x3a, 0x6d, 0xff, 0xe5, 0x63, 0x06, 0x19, 0x89, 0xfe, 0xd5, 0x90, 0xec,
	0x2d, 0x1a, 0x52, 0xdd, 0xff, 0x3f, 0x34, 0xf4, 0xf0, 0xfa, 0x10, 0x1e, 0x59, 0x36, 0x42, 0x22,
	0x7d, 0x7c, 0xf9, 0x98, 0xe4, 0x4d, 0x9b, 0xcf, 0xd0, 0xb5, 0x59, 0xfe, 0x87, 0xc3, 0x00, 0xd1,
	0xc2, 0x18, 0x7c, 0xa5, 0x77, 0xd9, 0x57, 0x1a, 0x8d, 0xef, 0xf9, 0xf2, 0x97, 0x33, 0x90, 0x65,
	0xf2, 0xba, 0x1f, 0x84, 0xeb, 0xad, 0x58, 0xd9, 0xc6, 0x47, 0xba, 0x4b, 0x32, 0x7e, 0x54, 0xb9,
	0xb5, 0x16, 0x20, 0x55, 0x2a, 0x6d, 0xd7, 0x20, 0x7d, 0x7f, 0xdb, 0x14, 0xca, 0xe6, 0x8c, 0xf2,
	0xc9, 0x37, 0xf3, 0xe6, 0xb6, 0x19, 0xb4, 0x08, 0x5c, 0xca, 0x09, 0x5d, 0x15, 0xa7, 0x72, 0x56,
	0xef, 0x54, 0xe6, 0xa7, 0x71, 0xf9, 0x5b, 0x86, 0x20, 0x4d, 0x98, 0xeb, 0x6f, 0xab, 0xdd, 0x44,
	0xbb, 0x2a, 0xa1, 0xff, 0x24, 0xb6, 0xe4, 0xd0, 0x62, 0xcc, 0x13, 0x36, 0xac, 0x9a, 0x5e, 0xbb,
	0x7c, 0x4c, 0xf6, 0x85, 0xcd, 0x67, 0xd9, 0xc7, 0x98, 0xbd, 0x2a, 0x59, 0x4e, 0x09, 0x32, 0x3f,
	0xa6, 0xff, 0xc7, 0xe7, 0xa1, 0xf4, 0x1a, 0xb1, 0x63, 0x6d, 0xd7, 0x71, 0x4c, 0x7b, 0x00, 0x9b,
	0x31, 0xe8, 0x89, 0x3a, 0xe8, 0x89, 0x2a, 0x75, 0x34, 0xba, 0xdd, 0x92, 0xc7, 0x7e, 0xc0, 0x6d,
	0x4d, 0xc7, 0x7a, 0x69, 0x6b, 0x3a, 0x9e, 0xbc, 0xad, 0xe9, 0x44, 0x8f, 0x6d, 0x4d, 0x51, 0x8f,
	0x6d, 0x4d, 0x27, 0x75, 0xdb, 0x9a, 0xee, 0x69, 0x50, 0x7a, 0xfc, 0x40, 0x1a, 0x94, 0x9e, 0x38,
	0xa0, 0x06, 0xa5, 0x27, 0x0f, 0xa4, 0x41, 0xe9, 0xa9, 0x03, 0x6a, 0x50, 0x3a, 0xd5, 0x4b, 0x83,
	0x52, 0xa9, 0x35, 0xe8, 0xe9, 0xde, 0x5b, 0x83, 0x96, 0xf5, 0x5b, 0x83, 0x9e, 0xe1, 0xf5, 0x0c,
	0x4f, 0x28, 0x79, 0x07, 0x58, 0xf9, 0xc2, 0x4d, 0x28, 0xf2, 0x84, 0x7d, 0x66, 0x56, 0x3d, 0xd9,
	0x59, 0xa1, 0x10, 0x32, 0x59, 0x40, 0xc6, 0x1b, 0x23, 0x9c, 0x9a, 0xa6, 0x69, 0x5f, 0xe5, 0x81,
	0x70, 0x96, 0xb3, 0xfb, 0xe1, 0xf6, 0x2d, 0xed, 0xa4, 0x63, 0x93, 0xc6, 0xc1, 0x59, 0x18, 0xbc,
	0xfc, 0x8f, 0x9e, 0x86, 0x34, 0xf9, 0xd9, 0x1f, 0xd5, 0x90, 0xb9, 0x78, 0x40, 0x59, 0x15, 0x16,
	0x2c, 0x5b, 0xa3, 0x71, 0x64, 0x74, 0x29, 0x56, 0xfc, 0x95, 0xe9, 0x7e, 0xbc, 0xc8, 0x85, 0x57,
	0x62, 0x29, 0x64, 0x35, 0x96, 0xc2, 0x79, 0xc8, 0x36, 0x3c, 0xbc, 0x69, 0x3f, 0x50, 0x04, 0x8a,
	0xe7, 0xa3, 0x43, 0xbf, 0x75, 0x5e, 0xdd, 0x6f, 0x1d, 0xb6, 0x2a, 0x28, 0x74, 0x2e, 0x84, 0x88,
	0xad, 0x14, 0xb2, 0x32, 0xda, 0xb4, 0x2a, 0x78, 0x03, 0x46, 0xb0, 0x43, 0xf3, 0x4a, 0xef, 0x6f,
	0x63, 0x51, 0x29, 0x77, 0x4e, 0x7d, 0xfd, 0xcd, 0x2c, 0x51, 0xea, 0x37, 0xb7, 0xb1, 0x63, 0x00,
	0x0e, 0xff, 0x46, 0x97, 0x20, 0x2f, 0xfa, 0x4e, 0x75, 0x73, 0x31, 0x8a, 0x13, 0x27, 0x24, 0x40,
	0x17, 0x21, 0xe7, 0xe1, 0x06, 0x36, 0x03, 0x9f, 0x1f, 0xb7, 0xdd, 0xf3, 0x51, 0xf8, 0x78, 0x96,
	0x8f, 0x62, 0x5a, 0x15, 0xd7, 0xa9, 0xed, 0xf2, 0x63, 0x57, 0x65, 0x62, 0xd3, 0x5a, 0x75, 0x6a,
	0xbb, 0xe8, 0x2a, 0x40, 0xdd, 0x7c, 0x50, 0xa9, 0x61, 0x67, 0x2b, 0xd8, 0xee, 0x06, 0x29, 0xc4,
	0xd3, 0x19, 0x8c, 0x42, 0xdd, 0x7c, 0x70, 0x8b, 0x52, 0x20, 0x1f, 0x72, 0x2e, 0x87, 0x97, 0x1c,
	0x3b, 0x24, 0x0d, 0x9f, 0xf6, 0x84, 0x58, 0xc7, 0x81, 0x21, 0x66, 0x42, 0x2b, 0x90, 0x65, 0x7f,
	0x72, 0x4f, 0xe3, 0x8b, 0x1a, 0x5f, 0x6f, 0xb5, 0xc1, 0xf2, 0xc5, 0x18, 0x03, 0x74, 0x17, 0x72,
	0x74, 0x1e, 0xb3, 0xc6, 0x8f, 0xeb, 0x33, 0x1a, 0xbc, 0x56, 0x18, 0x65, 0xe8, 0x89, 0x12, 0xac,
	0x42, 0xe1, 0x86, 0x12, 0x0a, 0xb7, 0xaf, 0x14, 0x00, 0xa2, 0x65, 0xd6, 0x1f, 0x18, 0xe3, 0xf9,
	0xb7, 0xf8, 0xd3, 0x6a, 0xca, 0xb8, 0x90, 0x0e, 0x2d, 0xc2, 0xf8, 0xb6, 0xe9, 0x57, 0x4c, 0xc7,
	0xbf, 0x8f, 0xbd, 0x58, 0x53, 0x97, 0xae, 0x0b, 0xbe, 0xb0, 0x6d, 0xfa, 0x73, 0x94, 0x0e, 0xfd,
	0x35, 0xc8, 0x32, 0x0e, 0xdc, 0xf7, 0x78, 0x39, 0xd1, 0xd6, 0x9f, 0x61, 0xdc, 0xa2, 0x0e, 0x40,
	0x8c, 0x67, 0xf9, 0x0b, 0x59, 0xc8, 0xf2, 0x89, 0x7a, 0xca, 0x7f, 0xbf, 0x04, 0x39, 0x0b, 0x57,
	0xed, 0xba, 0x59, 0xe3, 0x76, 0x5f, 0x5b, 0xe2, 0x45, 0x36, 0x8c, 0x10, 0x73, 0x0a, 0x42, 0x6c,
	0xb3, 0xad, 0xca, 0x0d, 0xbf, 0x6e, 0x3b, 0x9a, 0x10, 0x73, 0x0a, 0x22, 0xa2, 0xa9, 0xd6, 0x96,
	0xee, 0xae, 0xb5, 0x2d, 0x1f, 0xe3, 0x6a, 0x6f, 0xac, 0x74, 0x21, 0x93, 0xa0, 0x74, 0x81, 0x9c,
	0x0b, 0x8a, 0xe0, 0xa3, 0x64, 0x52, 0x32, 0x16, 0x5d, 0x85, 0xa2, 0x4f, 0x97, 0x0a, 0x5f, 0x0a,
	0x4a, 0x27, 0xd1, 0xf2, 0x31, 0x62, 0x26, 0x90, 0xbf, 0x84, 0x3f, 0x23, 0xaf, 0xec, 0xcf, 0x58,
	0x04, 0x30, 0xc3, 0xd6, 0x05, 0xfc, 0x38, 0x52, 0x68, 0x72, 0xb0, 0x7c, 0xcc, 0x90, 0xe8, 0xd0,
	0x05, 0xc8, 0x56, 0xe9, 0x51, 0xda, 0x2d, 0x84, 0xc5, 0x0e, 0x5c, 0x72, 0xc3, 0x6c, 0x7c, 0xac,
	0x13, 0xf0, 0x48, 0x82, 0x4e, 0xc0, 0x31, 0x7f, 0x4c, 0xf1, 0x28, 0xfd, 0x31, 0xf3, 0x79, 0xb1,
	0xe9, 0xca, 0xff, 0x73, 0x1a, 0xb2, 0x4c, 0x06, 0xf7, 0x83, 0x58, 0xfb, 0x04, 0x64, 0xd8, 0xe2,
	0x63, 0xbb, 0xe5, 0x65, 0xed, 0x83, 0x68, 0x86, 0x9e, 0x6e, 0x2d, 0x8e, 0x3b, 0xc6, 0xb3, 0xfc,
	0xce, 0x10, 0x64, 0x58, 0x43, 0x24, 0x69, 0x43, 0xa7, 0x12, 0x6f, 0xe8, 0x21, 0x8d, 0x0d, 0x2d,
	0xf6, 0xe3, 0x70, 0x0f, 0xfb, 0x31, 0xad, 0xb9, 0x1f, 0xa3, 0x8d, 0x91, 0xd1, 0xdb, 0x18, 0xf3,
	0x39, 0xfe, 0x15, 0xca, 0xff, 0x20, 0x0b, 0x39, 0x7e, 0x28, 0x0f, 0xc4, 0xef, 0x40, 0xfc, 0x0e,
	0xc4, 0x2f, 0x67, 0x52, 0x08, 0xb5, 0xdc, 0xd9, 0x39, 0xc9, 0x97, 0xad, 0x1c, 0x7f, 0x8a, 0x89,
	0xaf, 0xe9, 0xbf, 0x78, 0x06, 0x4e, 0xc4, 0xae, 0x0c, 0xf2, 0x8e, 0x07, 0x79, 0xc7, 0x72, 0xde,
	0x71, 0x2a, 0x81, 0x9f, 0x3a, 0x86, 0x85, 0x0c, 0x9a, 0x58, 0xc8, 0x49, 0x71, 0x89, 0x1f, 0x06,
	0x90, 0x72, 0x84, 0x3d, 0xf3, 0x13, 0x29, 0xc8, 0x36, 0x4c, 0x8f, 0x48, 0xb3, 0x11, 0xbd, 0xca,
	0xf5, 0xc4, 0x90, 0xc6, 0xfa, 0x48, 0x55, 0x06, 0xbf, 0x45, 0xf4, 0x37, 0x52, 0x50, 0x7a, 0x4b,
	0xde, 0xf5, 0xea, 0x32, 0xec, 0x92, 0x5e, 0xb4, 0x3b, 0x2e, 0x5b, 0xe2, 0x93, 0xa2, 0x37, 0x5b,
	0xa0, 0x94, 0xd5, 0x54, 0x2e, 0x21, 0xa1, 0x3a, 0x44, 0x0d, 0xfc, 0x08, 0x9b, 0x65, 0xf4, 0xd0,
	0x73, 0xbd, 0xf7, 0x03, 0x3e, 0x19, 0x7b, 0x24, 0x80, 0x4f, 0x2e, 0x43, 0x5e, 0xc0, 0x81, 0x28,
	0xc7, 0x46, 0x42, 0x0a, 0xf4, 0xf9, 0x21, 0xc8, 0xb2, 0x1f, 0xea, 0xd9, 0xdb, 0xff, 0xfa, 0x61,
	0x54, 0x27, 0x1f, 0x21, 0x36, 0xa1, 0xc1, 0xdf, 0x08, 0xfa, 0x77, 0x29, 0xc8, 0xb2, 0x05, 0xa2,
	0x0e, 0x66, 0xfd, 0xa5, 0x1e, 0x70, 0x81, 0x8e, 0x3a, 0x71, 0xc5, 0xe0, 0x4f, 0x87, 0xae, 0x73,
	0xf7, 0xd8, 0x64, 0xe7, 0x2e, 0x7f, 0xfb, 0xee, 0x60, 0xd9, 0x4d, 0xf6, 0xf7, 0x47, 0x07, 0x31,
	0x80, 0x03, 0x8b, 0x01, 0x50, 0x19, 0x94, 0xd5, 0xf0, 0xcb, 0x4b, 0x02, 0x33, 0x77, 0x64, 0x02,
	0xf3, 0xb5, 0xd0, 0x7b, 0xc7, 0x14, 0x96, 0x8b, 0xfa, 0x8b, 0x87, 0xbb, 0xee, 0x84, 0xcb, 0x2e,
	0x5c, 0x8d, 0x85, 0x1e, 0x57, 0xe3, 0xf7, 0x14, 0x42, 0xd7, 0x5f, 0x1f, 0xac, 0xc7, 0x4f, 0xc6,
	0x3d, 0x1b, 0xaf, 0x24, 0x7e, 0xcf, 0xdc, 0xc3, 0x91, 0x8d, 0xf9, 0x36, 0xc2, 0x97, 0x9e, 0xe9,
	0xf1, 0xa5, 0xff, 0x48, 0x56, 0xf2, 0x91, 0x0c, 0xec, 0xfd, 0x81, 0xbd, 0x3f, 0xb0, 0xf7, 0xab,
	0x38, 0x74, 0x88, 0xcd, 0xae, 0x48, 0xd6, 0xfe, 0x95, 0x64, 0xfa, 0xb7, 0xa8, 0xfc, 0xf9, 0xdf,
	0x9f, 0x81, 0xb1, 0x16, 0xf3, 0x69, 0x60, 0xef, 0x0f, 0xec, 0xfd, 0xc7, 0x17, 0xb0, 0xb6, 0xa7,
	0xee, 0x4d, 0x8f, 0xa6, 0xc7, 0xe2, 0x9b, 0x93, 0xa0, 0xe5, 0x5e, 0xe9, 0xad, 0x75, 0x54, 0x04,
	0x9a, 0x7b, 0x1b, 0xc6, 0xb7, 0x3c, 0xb7, 0xd9, 0xa8, 0x48, 0x8b, 0x4f, 0x1d, 0x39, 0x77, 0x8c,
	0xd2, 0x46, 0x17, 0xde, 0xa5, 0xe8, 0xb9, 0xa2, 0x2c, 0x74, 0x3c, 0x49, 0x59, 0xa8, 0x0c, 0xbd,
	0x3b, 0xd1, 0x0b, 0xf4, 0xee, 0x5d, 0x98, 0xe0, 0x8d, 0x5c, 0x45, 0x15, 0x30, 0xb6, 0x74, 0xc1,
	0x73, 0xc7, 0x39, 0x07, 0x81, 0xb1, 0x66, 0xc5, 0xda, 0x35, 0x4d, 0x3e, 0x52, 0xed, 0x9a, 0x8e,
	0x3f, 0x12, 0xbe, 0x99, 0x8f, 0xc7, 0x40, 0x69, 0x4f, 0x74, 0xce, 0x67, 0x69, 0xd9, 0x67, 0xdd,
	0x30, 0x69, 0x5b, 0xb0, 0x63, 0x4f, 0x26, 0xc0, 0x8e, 0x5d, 0x95, 0xb1, 0x63, 0xbb, 0xc0, 0xda,
	0xb6, 0xde, 0xdd, 0xbe, 0xd0, 0xb1, 0xb1, 0xc6, 0xc9, 0x53, 0x7a, 0x1b, 0x46, 0x6a, 0x9c, 0xfc,
	0x7f, 0xa4, 0xc8, 0x8d, 0x55, 0xed, 0x06, 0x59, 0x32, 0x3c, 0x1f, 0x53, 0xe1, 0x53, 0xff, 0xf4,
	0xc3, 0xeb, 0x9c, 0xd1, 0x0b, 0x1a, 0x6b, 0xf8, 0xa4, 0xad, 0x68, 0xac, 0xe5, 0x03, 0x46, 0x63,
	0x7d, 0xe2, 0x11, 0x42, 0x63, 0xbd, 0x16, 0xcf, 0xbc, 0x7e, 0x52, 0x11, 0x30, 0x43, 0xca, 0xbb,
	0xde, 0x0f, 0xcf, 0xf5, 0xa9, 0xa3, 0xc6, 0x73, 0x15, 0x90, 0xa8, 0x4f, 0x1f, 0x04, 0x24, 0xea,
	0x33, 0x0f, 0x01, 0x12, 0xf5, 0xef, 0xbe, 0x5b, 0x20, 0x51, 0x5b, 0x81, 0x4d, 0x33, 0x7d, 0x86,
	0x15, 0x4a, 0xfb, 0x05, 0xe9, 0x61, 0x85, 0x0e, 0xfa, 0x05, 0x75, 0xed, 0x17, 0xf4, 0xee, 0xc0,
	0x26, 0x4d, 0x04, 0xf4, 0xd1, 0x72, 0xe0, 0x4e, 0xff, 0x1c, 0x40, 0x29, 0xf6, 0x4a, 0x06, 0xc6,
	0xfe, 0xc0, 0xd8, 0x4f, 0x6a, 0xec, 0xbf, 0xcc, 0xc0, 0x44, 0x77, 0x30, 0x77, 0xc2, 0x29, 0x34,
	0xa9, 0xa7, 0xc3, 0xd1, 0x03, 0xc8, 0x35, 0xd8, 0x66, 0xe6, 0x2e, 0x38, 0x95, 0x68, 0x73, 0x0f,
	0x06, 0x83, 0x21, 0xa6, 0x43, 0x37, 0xa1, 0x48, 0x61, 0x00, 0x6c, 0xd7, 0xf1, 0xb7, 0xed, 0x06,
	0x77, 0xe0, 0xa9, 0x97, 0xfb, 0xc8, 0xc4, 0x64, 0x59, 0xd1, 0x52, 0xba, 0x52, 0xe7, 0xef, 0xb0,
	0xdc, 0xac, 0x9b, 0xce, 0x1d, 0xb3, 0x8e, 0x79, 0x35, 0xdd, 0x55, 0xc8, 0x05, 0xb8, 0x86, 0xab,
	0x6e, 0x9d, 0xa3, 0x78, 0x3c, 0xdb, 0xa5, 0x4a, 0x68, 0xcd, 0xb5, 0xc9, 0x33, 0x70, 0x22, 0xb4,
	0x0c, 0xd9, 0x2d, 0xec, 0x58, 0xd8, 0xe3, 0x66, 0x69, 0xdb, 0xe2, 0x64, 0xb9, 0x6d, 0xf1, 0x0e,
	0xbe, 0x41, 0x69, 0x18, 0x90, 0x1b, 0xa3, 0x47, 0x97, 0x00, 0x36, 0x6c, 0x2f, 0xd8, 0xae, 0x48,
	0x35, 0x71, 0x9d, 0x0b, 0xba, 0x0a, 0x74, 0x3c, 0xad, 0xe5, 0xba, 0x08, 0x39, 0xd3, 0xb2, 0x3c,
	0xec, 0xfb, 0x1c, 0xd0, 0xe3, 0x99, 0xf6, 0xf7, 0x41, 0x87, 0x19, 0x62, 0x3c, 0xba, 0x00, 0x99,
	0xc6, 0xb6, 0x1b, 0xb8, 0xdc, 0xf6, 0x54, 0x70, 0xff, 0x1a, 0x8c, 0x40, 0x42, 0x8a, 0x99, 0xd4,
	0x41, 0x8a, 0x49, 0x96, 0x1f, 0x15, 0x13, 0x94, 0xd3, 0xdf, 0xfd, 0x1c, 0x14, 0xb9, 0x18, 0xa5,
	0x26, 0xe5, 0x40, 0x72, 0x0e, 0x24, 0x67, 0x52, 0xc9, 0xb9, 0x9b, 0xcc, 0x4b, 0x9a, 0xd4, 0xa0,
	0x78, 0x6c, 0x1b, 0x72, 0x3d, 0x16, 0xbe, 0xc5, 0x03, 0xeb, 0xcc, 0xf5, 0x45, 0xc9, 0x91, 0xa7,
	0x9c, 0xc7, 0xb3, 0xfd, 0x70, 0x5d, 0x78, 0xe8, 0x91, 0x70, 0xe1, 0xb5, 0xb8, 0xd9, 0x26, 0x13,
	0xb8, 0xd9, 0x7e, 0x3c, 0x15, 0xe6, 0x58, 0x29, 0xbb, 0x2d, 0x9d, 0xa3, 0x4d, 0xb1, 0x0a, 0x53,
	0x9e, 0x6e, 0x86, 0x30, 0x65, 0x27, 0x94, 0xd6, 0x23, 0xfd, 0xbe, 0x33, 0x06, 0x25, 0x89, 0x6a,
	0xaf, 0x38, 0x76, 0x99, 0xf0, 0x7e, 0x9c, 0xd4, 0xf4, 0x7e, 0x2c, 0x84, 0x50, 0xf7, 0xa7, 0x3a,
	0xf7, 0xa3, 0x8f, 0xdd, 0x04, 0xc3, 0xbd, 0x17, 0x78, 0xf7, 0xe5, 0x3f, 0x4c, 0x41, 0x96, 0xdd,
	0xd7, 0xbe, 0xbd, 0x4b, 0x52, 0xbd, 0xf6, 0x2e, 0x79, 0x88, 0x68, 0x2a, 0xf3, 0x79, 0xf1, 0x95,
	0xca, 0x5f, 0x3b, 0x0d, 0x59, 0xf6, 0xe0, 0xfd, 0xe0, 0x04, 0x39, 0x0b, 0x99, 0x9a, 0xb9, 0x81,
	0x6b, 0x6a, 0x19, 0x57, 0x06, 0x1b, 0x1c, 0x61, 0x5c, 0x64, 0x74, 0x30, 0x2e, 0x5a, 0x3c, 0x8c,
	0x59, 0x7d, 0x0f, 0xe3, 0x0d, 0x18, 0x23, 0x22, 0xa2, 0x82, 0xdf, 0x6a, 0xda, 0x3b, 0x66, 0x8d,
	0x9c, 0x08, 0x6a, 0xc5, 0xd7, 0xa3, 0x84, 0x6c, 0x29, 0xa4, 0x42, 0x97, 0x78, 0xc1, 0x77, 0x5e,
	0x13, 0x0e, 0x8e, 0x56, 0x7e, 0xdf, 0x86, 0x92, 0xe5, 0x56, 0x9b, 0x14, 0x25, 0x83, 0x3e, 0x49,
	0xa1, 0x33, 0x17, 0xae, 0x1a, 0xcf, 0x79, 0x81, 0xbd, 0x69, 0x56, 0x03, 0x23, 0x4e, 0x8d, 0xd6,
	0xa9, 0xfe, 0x67, 0xc9, 0xea, 0xcd, 0x39, 0x8d, 0xed, 0x37, 0x13, 0x35, 0xb0, 0x8f, 0xf8, 0xa0,
	0x6f, 0x80, 0xd1, 0x10, 0x05, 0x4e, 0xf4, 0xb0, 0xe8, 0x98, 0x2c, 0xb6, 0x1f, 0x67, 0x71, 0xe3,
	0x6c, 0x9b, 0x97, 0x3c, 0xf9, 0x27, 0x7a, 0x23, 0x6c, 0x98, 0xc4, 0xec, 0xc2, 0xf3, 0x3a, 0x9c,
	0x59, 0x13, 0xa5, 0xbb, 0xbb, 0x8d, 0x28, 0xd2, 0xc2, 0xb9, 0xa1, 0xff, 0x62, 0x08, 0x46, 0x1a,
	0xa6, 0x17, 0xd8, 0x55, 0xbb, 0x61, 0x3a, 0x41, 0x37, 0x83, 0x71, 0x4f, 0x92, 0xec, 0xe1, 0xc2,
	0x82, 0x49, 0xbe, 0xb1, 0x23, 0xcf, 0x1d, 0x95, 0x5f, 0x0b, 0xcd, 0x5f, 0xda, 0x6d, 0x08, 0x7c,
	0xec, 0xae, 0x90, 0x05, 0x34, 0x36, 0x5a, 0x81, 0x09, 0xaa, 0xa5, 0xd9, 0xce, 0x16, 0x75, 0xce,
	0xed, 0xd8, 0xae, 0xb0, 0x8b, 0xcf, 0x74, 0xee, 0x6d, 0x72, 0x83, 0x93, 0xcd, 0x73, 0x2a, 0xaa,
	0x0c, 0x8d, 0x6f, 0xb5, 0x5c, 0x45, 0x1b, 0x80, 0x7c, 0x62, 0x78, 0x53, 0xec, 0xe4, 0x70, 0x86,
	0xf1, 0xce, 0x00, 0x87, 0x6c, 0x86, 0x75, 0x41, 0x17, 0x9b, 0x62, 0xc2, 0x6f, 0xbd, 0x4c, 0x1e,
	0x42, 0x60, 0x06, 0x44, 0x53, 0x4c, 0xa8, 0x3c, 0x84, 0xc1, 0xc9, 0xe2, 0x0f, 0xe1, 0xb5, 0x5c,
	0x25, 0x13, 0x34, 0x3c, 0x5c, 0xdd, 0xc6, 0xd5, 0x7b, 0xd1, 0x04, 0x48, 0x65, 0x82, 0x35, 0x4e,
	0x16, 0x9f, 0xa0, 0xd1, 0x72, 0x15, 0x6d, 0xc3, 0xf1, 0xaa, 0xe9, 0x59, 0xb6, 0x63, 0xd6, 0xec,
	0x60, 0x37, 0x9a, 0x83, 0x69, 0x3a, 0xe7, 0x3a, 0xcf, 0xb1, 0x10, 0x51, 0xc6, 0xa6, 0x99, 0xac,
	0xee, 0xfd, 0x0f, 0xde, 0x5a, 0x84, 0xe5, 0x53, 0x1f, 0x3f, 0x8a, 0xd6, 0x22, 0x2c, 0xb9, 0x39,
	0xd2, 0x26, 0x4e, 0x24, 0xd7, 0x26, 0xbe, 0x3a, 0x0c, 0x85, 0x50, 0xb4, 0xf5, 0xc3, 0x51, 0x7b,
	0x13, 0xd2, 0xf7, 0x6c, 0x47, 0xe4, 0x36, 0xbf, 0xd0, 0xe5, 0x33, 0x8b, 0x27, 0xbf, 0x69, 0x3b,
	0x56, 0x1c, 0xc2, 0x83, 0x30, 0x69, 0x3d, 0x4b, 0x33, 0xfa, 0x67, 0xe9, 0xac, 0xe4, 0xef, 0x50,
	0x3b, 0x8a, 0x23, 0x4f, 0xc7, 0x55, 0x00, 0xfc, 0xa0, 0xe1, 0x61, 0x9f, 0xbb, 0x1a, 0x54, 0xa8,
	0x25, 0x8a, 0xf2, 0x1f, 0xa4, 0x43, 0xcf, 0x7a, 0xff, 0xa8, 0x52, 0xaf, 0x40, 0x81, 0x2d, 0xdd,
	0x28, 0x81, 0xbd, 0x83, 0xa7, 0x2b, 0x02, 0x77, 0x60, 0x44, 0x2b, 0x16, 0xfa, 0x54, 0x8b, 0xbf,
	0x35, 0xa3, 0x26, 0xd4, 0x22, 0x8a, 0x3d, 0x70, 0x2f, 0x71, 0x17, 0xec, 0x37, 0x40, 0xd6, 0xdd,
	0xdc, 0xf4, 0xb1, 0xc8, 0x71, 0xbf, 0x96, 0x58, 0x17, 0x98, 0x59, 0xa5, 0x7c, 0xa2, 0xb3, 0x9b,
	0xf1, 0x2d, 0x7f, 0x36, 0x05, 0x59, 0xf6, 0x5f, 0xe8, 0x2a, 0xe4, 0xad, 0xa6, 0xc7, 0xf4, 0xa3,
	0x6e, 0x61, 0x4b, 0x3e, 0x8e, 0x86, 0x2d, 0xf9, 0xdf, 0xe8, 0x1c, 0x64, 0x3c, 0xd3, 0xd9, 0x12,
	0x7a, 0xfe, 0x53, 0x6d, 0xef, 0x95, 0x0c, 0x5a, 0x3e, 0x66, 0xb0, 0xd1, 0x44, 0x4f, 0xe7, 0xf7,
	0xf2, 0x6b, 0x43, 0x00, 0x91, 0x9a, 0xf1, 0x30, 0x5b, 0x4b, 0xca, 0xaf, 0x62, 0xb8, 0x97, 0x57,
	0x91, 0xd6, 0x79, 0x15, 0xe8, 0x2a, 0x14, 0x99, 0x4a, 0x15, 0xc3, 0x09, 0x51, 0xef, 0x6b, 0x99,
	0x17, 0x0a, 0xde, 0xec, 0x35, 0xc9, 0x21, 0x7c, 0x56, 0xfd, 0x5c, 0x88, 0x16, 0xd1, 0xf4, 0x7f,
	0x38, 0x4e, 0x36, 0xbc, 0x8f, 0x4d, 0xaf, 0xba, 0xbd, 0x1e, 0x34, 0xad, 0xdd, 0x81, 0x43, 0x78,
	0xe0, 0x10, 0x4e, 0xea, 0x10, 0x0e, 0xad, 0x4f, 0xd0, 0xb1, 0x3e, 0xdf, 0xa6, 0xad, 0xed, 0x02,
	0xb7, 0xea, 0xd6, 0xd4, 0x7d, 0xb9, 0x97, 0x7b, 0x4a, 0x95, 0x0d, 0x27, 0x44, 0xf7, 0x21, 0x47,
	0x94, 0xf7, 0x8a, 0xbb, 0xa9, 0xee, 0xd1, 0xbd, 0xa4, 0x6b, 0x2b, 0x48, 0xdb, 0x8b, 0x96, 0xac,
	0x06, 0xab, 0x9b, 0x68, 0xb5, 0xa5, 0x56, 0xf4, 0x85, 0x0e, 0x50, 0x75, 0x11, 0x79, 0x47, 0x64,
	0xc9, 0x7c, 0xd5, 0x0c, 0xf0, 0x96, 0xeb, 0xed, 0xf2, 0x88, 0x9c, 0x7a, 0xdf, 0x62, 0x41, 0x88,
	0xae, 0x40, 0x66, 0xd3, 0xad, 0x36, 0xfd, 0xa9, 0x31, 0xcd, 0x3e, 0x2d, 0x94, 0x4a, 0x86, 0x0e,
	0x1c, 0x4f, 0x04, 0x1d, 0x68, 0xc0, 0x78, 0x68, 0x1d, 0x73, 0xab, 0x9c, 0xc7, 0xe5, 0x94, 0x8d,
	0xf8, 0x31, 0x2f, 0x7e, 0x01, 0xcd, 0x41, 0xee, 0x1e, 0xde, 0xbd, 0xef, 0x7a, 0xda, 0x59, 0xa2,
	0x82, 0x6e, 0x0f, 0xbe, 0xe2, 0x64, 0x2f, 0xf8, 0x8a, 0x2d, 0x48, 0x9a, 0xc7, 0x93, 0x20, 0x69,
	0xee, 0x00, 0x60, 0xc7, 0x73, 0x6b, 0x35, 0x5a, 0x7f, 0xa2, 0xdc, 0x04, 0xe7, 0xa5, 0x24, 0x1e,
	0x6b, 0x69, 0x26, 0x29, 0x72, 0x79, 0x52, 0xab, 0xc7, 0xc5, 0x7d, 0xc8, 0xd1, 0x52, 0x0d, 0x57,
	0x24, 0x57, 0x1e, 0x72, 0xca, 0x89, 0x98, 0x0d, 0x7d, 0x7f, 0x0a, 0x4e, 0x36, 0x3c, 0xdb, 0x21,
	0xc6, 0x79, 0xad, 0x62, 0x3b, 0x3b, 0xd8, 0x0f, 0xec, 0x2d, 0x33, 0x70, 0x3d, 0x9e, 0x94, 0x79,
	0xc8, 0x1d, 0xa3, 0x4e, 0x84, 0x93, 0xaf, 0x48, 0x73, 0xa3, 0x3a, 0xa4, 0x69, 0x83, 0xf1, 0xd3,
	0x87, 0x14, 0x45, 0x0a, 0xbb, 0x6e, 0xd0, 0x69, 0xd0, 0x1d, 0x18, 0xe5, 0x29, 0x90, 0x7e, 0xe0,
	0x36, 0x1a, 0xd8, 0xe2, 0xb0, 0x9c, 0xca, 0x2b, 0xb8, 0xc4, 0xc8, 0xd7, 0x19, 0x75, 0xe8, 0xcd,
	0x7e, 0x42, 0xd3, 0x9b, 0x7d, 0x09, 0x86, 0x4d, 0xaf, 0xce, 0xc1, 0x39, 0x3f, 0xa4, 0x24, 0xf1,
	0x66, 0xe6, 0xbc, 0xba, 0x41, 0xa8, 0xca, 0x7f, 0x7d, 0x18, 0x86, 0xe7, 0xbc, 0xbe, 0x28, 0xa8,
	0x9d, 0xe5, 0x39, 0x17, 0x7a, 0xd5, 0xb4, 0x2c, 0xf1, 0x42, 0x78, 0x48, 0x33, 0x9a, 0x49, 0xf8,
	0xd4, 0x43, 0xda, 0xb3, 0xa7, 0x37, 0x69, 0x0e, 0x82, 0xf4, 0x45, 0xa7, 0xff, 0x0e, 0xc0, 0x58,
	0x78, 0x85, 0x47, 0xc3, 0x06, 0x5a, 0xe7, 0x40, 0xeb, 0x4c, 0x88, 0xce, 0xf2, 0x5a, 0x4b, 0x57,
	0xc8, 0x17, 0xbb, 0xca, 0x15, 0xb6, 0xe6, 0x3a, 0xe8, 0x52, 0xd1, 0x31, 0x37, 0xa2, 0x75, 0xcc,
	0x7d, 0x13, 0x64, 0x7c, 0xb2, 0xc4, 0xd5, 0x4b, 0x2a, 0xe7, 0xa4, 0x84, 0xb0, 0x84, 0x1a, 0x25,
	0x9b, 0x12, 0x7d, 0x1a, 0xc0, 0x76, 0x2c, 0x7b, 0xc7, 0xb6, 0x9a, 0x66, 0x4d, 0xbd, 0x9d, 0x53,
	0x4f, 0x19, 0x69, 0xd2, 0x8c, 0x68, 0x0e, 0x8a, 0xa6, 0xef, 0xdb, 0x5b, 0x0e, 0xd5, 0xdd, 0xea,
	0xdd, 0xfc, 0xdf, 0x42, 0xb6, 0x08, 0x1a, 0x22, 0xd9, 0xaf, 0x00, 0x98, 0xd5, 0xa0, 0x69, 0xd6,
	0x28, 0x03, 0xb5, 0xce, 0x90, 0x05, 0x46, 0x41, 0xc8, 0x3d, 0xaa, 0x7d, 0xfa, 0xac, 0xcb, 0x93,
	0xe2, 0xe3, 0x9f, 0xd3, 0x7b, 0xf0, 0x05, 0xc6, 0xdf, 0x10, 0x13, 0x25, 0xcd, 0x67, 0x8d, 0x2d,
	0xc4, 0xe9, 0xff, 0xf3, 0x09, 0x18, 0x35, 0x6c, 0xff, 0xde, 0x9c, 0xef, 0x63, 0xdf, 0xa7, 0x8a,
	0xd6, 0x40, 0x1e, 0x0e, 0xe4, 0x61, 0x42, 0x79, 0x18, 0xc4, 0xc0, 0xaa, 0x52, 0x47, 0x94, 0x1b,
	0xf5, 0x96, 0x84, 0x17, 0x75, 0xc8, 0x73, 0x0a, 0xd4, 0xa7, 0xa8, 0x35, 0x43, 0xb1, 0x73, 0x6b,
	0x06, 0xa9, 0xbc, 0xa6, 0x83, 0xd0, 0x7f, 0x05, 0xb2, 0x75, 0x1c, 0x6c, 0xbb, 0xa2, 0x3b, 0xbf,
	0xb2, 0x6a, 0xc5, 0xc9, 0x42, 0xcd, 0x6c, 0x34, 0x89, 0x66, 0x26, 0xa7, 0x2d, 0x8d, 0x3d, 0x22,
	0x69, 0x4b, 0xe3, 0x8f, 0x44, 0xda, 0xd2, 0xc7, 0x62, 0x95, 0x87, 0x13, 0x5d, 0x74, 0x84, 0x98,
	0x18, 0xee, 0x56, 0x78, 0xf8, 0x40, 0xce, 0x10, 0x50, 0x4e, 0xe2, 0x7a, 0x39, 0x61, 0x4d, 0x99,
	0x9c, 0x46, 0xf0, 0x4e, 0x0a, 0x0a, 0x0d, 0xec, 0x6d, 0xba, 0x5e, 0x1d, 0x7b, 0x1a, 0x05, 0xab,
	0x3d, 0x06, 0xc8, 0x75, 0xcb, 0x4e, 0xa2, 0x7b, 0x24, 0xbb, 0x95, 0xa7, 0x53, 0x1d, 0xef, 0xbc,
	0x5b, 0x5b, 0x3e, 0x41, 0x9b, 0x84, 0x2a, 0x17, 0x32, 0x1b, 0xa6, 0x6f, 0xfb, 0xea, 0xce, 0x8f,
	0xa4, 0xe2, 0x86, 0xcd, 0x83, 0x5e, 0x03, 0x68, 0x78, 0x58, 0x78, 0x80, 0x4e, 0x76, 0x06, 0x77,
	0x6f, 0x79, 0x86, 0xb5, 0x90, 0xd0, 0x90, 0x98, 0x50, 0x80, 0x7b, 0x9b, 0xba, 0x04, 0x58, 0x82,
	0x97, 0x52, 0xb4, 0x2e, 0xa2, 0x40, 0x17, 0xc8, 0x56, 0xac, 0x53, 0x17, 0xd0, 0x94, 0x5a, 0xff,
	0x1c, 0x3e, 0xfc, 0x5d, 0x5b, 0xcb, 0xf6, 0x78, 0x64, 0xaa, 0xfd, 0x6a, 0x0e, 0x20, 0x5a, 0x12,
	0xfd, 0xe0, 0xd0, 0x58, 0x89, 0xfa, 0xc2, 0xeb, 0xf5, 0x8c, 0x0e, 0x4f, 0xe1, 0xb0, 0x3f, 0xfc,
	0x16, 0x8c, 0x34, 0x3c, 0x77, 0xc3, 0xdc, 0xb0, 0x6b, 0x76, 0xb0, 0xcb, 0x95, 0xc3, 0x2b, 0xda,
	0x1b, 0x6d, 0x66, 0x2d, 0x62, 0x12, 0x0a, 0x0f, 0x99, 0x33, 0x32, 0x60, 0xfc, 0xad, 0xa6, 0x59,
	0xb3, 0x03, 0xaa, 0x5c, 0x56, 0x3c, 0xdb, 0xbf, 0xc7, 0x1d, 0x22, 0xca, 0x47, 0xf7, 0x98, 0xc4,
	0x80, 0xdc, 0x09, 0x5a, 0x04, 0x96, 0x8c, 0x15, 0x32, 0xcc, 0x29, 0x21, 0x36, 0x89, 0x78, 0x30,
	0xe7, 0x62, 0x40, 0x9a, 0xf6, 0xff, 0xc8, 0x77, 0xc9, 0xdf, 0x6a, 0xfb, 0xec, 0x6f, 0x6e, 0xe3,
	0x48, 0x62, 0x52, 0x5e, 0xb4, 0x15, 0x07, 0x95, 0x1a, 0x66, 0x4d, 0xb4, 0x2b, 0xe9, 0x6a, 0x5a,
	0x85, 0x04, 0xe5, 0xcf, 0xa5, 0x68, 0x8f, 0xf3, 0xf0, 0xdd, 0x49, 0x98, 0x54, 0x29, 0x6d, 0x4c,
	0xaa, 0x84, 0x11, 0xe4, 0x52, 0x6c, 0x61, 0x94, 0x3f, 0x03, 0x69, 0xda, 0x80, 0x22, 0x12, 0x3d,
	0x29, 0xcd, 0xf0, 0x6f, 0xc2, 0xfb, 0xc8, 0xb2, 0xaf, 0x33, 0x3b, 0x2f, 0x99, 0x7e, 0xca, 0x81,
	0xa8, 0xf8, 0x37, 0x9b, 0xfe, 0x7f, 0x47, 0x20, 0xbf, 0x5e, 0xdd, 0xc6, 0x56, 0xb3, 0x36, 0x40,
	0x28, 0x1e, 0xd8, 0x7c, 0x47, 0x5f, 0xc4, 0x68, 0x80, 0x80, 0x42, 0xa9, 0x84, 0xd1, 0xc3, 0x11,
	0x4d, 0x21, 0xc8, 0x19, 0x2c, 0x88, 0x20, 0xe2, 0xab, 0x50, 0x14, 0x3c, 0x69, 0x26, 0x64, 0x51,
	0x2f, 0x5a, 0x36, 0xc2, 0x89, 0x69, 0x76, 0x48, 0x0c, 0x46, 0xa3, 0xa4, 0xc7, 0x48, 0x82, 0xd1,
	0xf8, 0xe7, 0xc3, 0x90, 0x31, 0xab, 0x81, 0xeb, 0xf1, 0xd0, 0xa8, 0xc2, 0x99, 0xff, 0x83, 0xc3,
	0xbd, 0x82, 0xbb, 0x24, 0x57, 0xb3, 0x2f, 0x24, 0x8a, 0x35, 0xb9, 0x35, 0x7c, 0xc4, 0x65, 0xe5,
	0x3d, 0x02, 0x7e, 0x24, 0x8c, 0x69, 0xb1, 0x2f, 0x89, 0x56, 0x60, 0xbc, 0x51, 0x33, 0x1d, 0xc7,
	0x76, 0xb6, 0x2a, 0xdb, 0xae, 0x67, 0x7f, 0x93, 0xeb, 0x74, 0xf3, 0x19, 0x8a, 0x36, 0x7c, 0x82,
	0x6e, 0x99, 0x91, 0xc9, 0x8a, 0xf4, 0xb8, 0x96, 0x22, 0x3d, 0x7b, 0x59, 0x3a, 0x04, 0x94, 0x9f,
	0x44, 0x48, 0xfc, 0xe9, 0xff, 0xe6, 0x38, 0x8c, 0xad, 0x53, 0x57, 0xe0, 0x9a, 0xe9, 0x99, 0x75,
	0x1c, 0x60, 0x6f, 0x70, 0x0a, 0x3c, 0x9e, 0xa7, 0xc0, 0x39, 0xd5, 0xf6, 0xab, 0xa1, 0xc6, 0x4c,
	0xdb, 0xb0, 0x4a, 0x2d, 0x54, 0x41, 0xaf, 0x85, 0xaa, 0x88, 0x41, 0x8e, 0x24, 0x88, 0x41, 0x2a,
	0x7b, 0xde, 0x92, 0x35, 0x45, 0x2d, 0xf5, 0xd2, 0x14, 0x75, 0x34, 0x79, 0x53, 0xd4, 0x31, 0xdd,
	0xa6, 0xa8, 0x3d, 0xe7, 0xbb, 0xb4, 0xf4, 0xff, 0x9c, 0x38, 0xa0, 0xfe, 0x9f, 0xa8, 0x97, 0xfc,
	0x94, 0x5e, 0xba, 0xb4, 0x5e, 0xe0, 0x2e, 0xd0, 0x2e, 0xcd, 0x59, 0xe3, 0x79, 0xd3, 0xd4, 0xff,
	0xb9, 0x08, 0xe9, 0x0d, 0xd3, 0xc7, 0xdc, 0x9d, 0xa3, 0xdc, 0xb8, 0x33, 0xe2, 0x42, 0xa8, 0xd1,
	0x0d, 0x5e, 0x7c, 0x71, 0xb2, 0x73, 0xc5, 0x9e, 0x24, 0x73, 0xdb, 0x74, 0x62, 0xbc, 0x0a, 0x45,
	0x0b, 0x7b, 0xf6, 0x0e, 0xb6, 0x2a, 0x9b, 0x9e, 0x5b, 0xe7, 0xce, 0x99, 0x8e, 0x52, 0x72, 0x84,
	0x13, 0x5c, 0xf7, 0xdc, 0x3a, 0x7a, 0x35, 0x1e, 0x68, 0x9f, 0x52, 0x7b, 0x91, 0xe1, 0x4d, 0xc4,
	0x92, 0x7d, 0xe2, 0x49, 0xdd, 0xa7, 0x75, 0x93, 0xba, 0xd1, 0x59, 0xc8, 0x3c, 0x68, 0x98, 0xc1,
	0x36, 0x4f, 0xfa, 0xe8, 0x9a, 0x96, 0x47, 0x07, 0xa3, 0x9b, 0x30, 0x42, 0xff, 0xa8, 0x34, 0xc9,
	0xaa, 0x9b, 0x7a, 0x82, 0xd2, 0xb6, 0x6d, 0x17, 0xf8, 0xd1, 0x35, 0x33, 0xd8, 0xa6, 0xeb, 0x33,
	0x6c, 0xa9, 0x0a, 0x94, 0x9c, 0x5e, 0x43, 0xd7, 0x20, 0x1b, 0x98, 0xde, 0x16, 0x0e, 0xb4, 0x1b,
	0xb3, 0x72, 0x3a, 0x74, 0x0b, 0xa0, 0xea, 0xd6, 0x1b, 0xa6, 0x47, 0x73, 0x77, 0x18, 0x7a, 0xd5,
	0x73, 0x9d, 0xbf, 0xef, 0x42, 0x38, 0x9e, 0xdd, 0x4f, 0x44, 0x8f, 0x5e, 0x85, 0xbc, 0x10, 0xc1,
	0x1c, 0x90, 0x6a, 0xa6, 0x33, 0xaf, 0xdb, 0x7c, 0x34, 0xe1, 0xc4, 0x0e, 0x33, 0x41, 0x4f, 0x5e,
	0x6f, 0x75, 0xdb, 0xb4, 0x1d, 0x0e, 0x4a, 0xd5, 0xf5, 0xf5, 0xd2, 0xc1, 0x68, 0x95, 0x9c, 0x65,
	0xf5, 0x86, 0xeb, 0x10, 0xa5, 0xe3, 0x3d, 0x9d, 0xbd, 0x89, 0x2d, 0x2a, 0xc2, 0xcc, 0x82, 0x20,
	0x34, 0x22, 0x1e, 0xe5, 0xbf, 0x4f, 0xcb, 0x32, 0xf8, 0xaf, 0x7e, 0xf0, 0x29, 0x7d, 0x7b, 0x1c,
	0x85, 0x55, 0x19, 0x0b, 0x6a, 0x41, 0xd2, 0xdb, 0x95, 0x43, 0xb2, 0x2d, 0xaf, 0x38, 0x06, 0x36,
	0x70, 0x3d, 0xb6, 0xff, 0x32, 0x5a, 0xe7, 0xa5, 0x44, 0x99, 0x2c, 0x56, 0xdc, 0x72, 0x63, 0xd3,
	0xff, 0xf0, 0x83, 0x90, 0x5f, 0xc7, 0x6f, 0x35, 0xa9, 0xdf, 0x76, 0xa0, 0x2b, 0x0e, 0x3c, 0x06,
	0x09, 0x3d, 0x06, 0x97, 0xf9, 0x49, 0xc9, 0xb4, 0xc6, 0xaf, 0x6b, 0x2f, 0x7a, 0xd8, 0x52, 0x0b,
	0xe5, 0x31, 0x3b, 0x1e, 0xef, 0xc2, 0x44, 0xd5, 0x75, 0x69, 0x5d, 0x5b, 0x80, 0x2b, 0xfe, 0xae,
	0x1f, 0xe0, 0x7a, 0xb7, 0xce, 0xc2, 0x1c, 0x60, 0x3e, 0xdc, 0x1a, 0xe3, 0x11, 0x87, 0x75, 0xca,
	0x00, 0x79, 0x11, 0xa2, 0x52, 0xf1, 0x90, 0x12, 0x38, 0xf6, 0x60, 0x29, 0x35, 0x21, 0x4f, 0xdd,
	0x04, 0x75, 0xec, 0xa8, 0x27, 0xcd, 0x68, 0xc6, 0x03, 0xd6, 0xf9, 0x04, 0x46, 0x38, 0x15, 0x72,
	0x21, 0x6b, 0x51, 0x13, 0x5a, 0xbd, 0xa1, 0xcf, 0xd9, 0x44, 0x11, 0x38, 0x3e, 0x0d, 0x7a, 0x5b,
	0x8e, 0x17, 0x8e, 0x1d, 0x45, 0x0e, 0xae, 0x14, 0xfb, 0xbb, 0x2c, 0xc1, 0xd5, 0x8f, 0xab, 0xc1,
	0xd5, 0x4b, 0x60, 0xf5, 0x06, 0x94, 0xc2, 0x28, 0x4a, 0xc5, 0xc7, 0x6f, 0xf1, 0x18, 0xee, 0xf3,
	0xdd, 0xd6, 0x6c, 0xf4, 0x1c, 0xeb, 0xf8, 0x2d, 0xa3, 0xe8, 0x49, 0xbf, 0xd0, 0x3c, 0xe4, 0x76,
	0x4c, 0xcf, 0x36, 0x9d, 0x80, 0x2b, 0xcb, 0x5d, 0x77, 0xc0, 0xcc, 0x1b, 0x6c, 0xbc, 0x21, 0x08,
	0xd1, 0x1c, 0x14, 0x5d, 0x9a, 0x59, 0x80, 0x2d, 0x7a, 0x5b, 0x93, 0x6a, 0x19, 0x4f, 0x82, 0x86,
	0xdf, 0x06, 0x0b, 0x21, 0xec, 0x4e, 0x1d, 0x57, 0xbc, 0x8d, 0xd7, 0xd8, 0x78, 0x43, 0x10, 0xb2,
	0x98, 0x83, 0x69, 0x55, 0xaa, 0xee, 0x0e, 0xf6, 0x88, 0x9c, 0x3d, 0xa1, 0xd6, 0x29, 0xbb, 0x48,
	0xa8, 0x16, 0x38, 0x11, 0xba, 0x09, 0xe0, 0xe1, 0x86, 0xeb, 0xdb, 0x14, 0x5f, 0xf3, 0x64, 0xe7,
	0xf2, 0x50, 0xe9, 0x0d, 0x0b, 0x12, 0x43, 0x22, 0x47, 0x3e, 0xe4, 0x1a, 0xae, 0xed, 0x30, 0x2c,
	0xdd, 0xc3, 0x09, 0xcf, 0x8a, 0x5b, 0x30, 0xc4, 0x4c, 0xe5, 0xdf, 0xcb, 0x42, 0x51, 0xfe, 0xe2,
	0xfd, 0xa0, 0x03, 0xdd, 0x00, 0xa8, 0x6e, 0x7b, 0x6e, 0xdd, 0xf5, 0xf5, 0x43, 0x6b, 0x86, 0x44,
	0x4a, 0xd6, 0xea, 0x16, 0x76, 0xdc, 0x3a, 0xae, 0x6c, 0x34, 0xed, 0x9a, 0xa5, 0x5a, 0x97, 0xca,
	0x68, 0xe6, 0x09, 0x09, 0x7a, 0x0d, 0xc6, 0x63, 0xdb, 0xb0, 0x62, 0x5b, 0xba, 0xf1, 0xb2, 0x51,
	0x79, 0x0f, 0xae, 0x58, 0xe8, 0xbb, 0x53, 0x70, 0x22, 0xce, 0x53, 0x2c, 0x9b, 0xc3, 0xea, 0xda,
	0x13, 0x2e, 0x9b, 0x49, 0xf9, 0x56, 0xd6, 0xd8, 0xac, 0x68, 0x0d, 0x8e, 0xc7, 0x6f, 0x87, 0xf5,
	0x07, 0xe1, 0x81, 0xb8, 0x6e, 0x6f, 0x0b, 0xc9, 0x2c, 0xd9, 0x35, 0xf4, 0x32, 0x64, 0xfd, 0xc0,
	0x33, 0x1d, 0x8b, 0x7b, 0x76, 0xba, 0xee, 0x4a, 0x3e, 0x1c, 0xbd, 0x0a, 0xc5, 0xfb, 0xb6, 0x63,
	0xb9, 0xf7, 0x2b, 0x7e, 0x60, 0x7a, 0x41, 0x37, 0xbf, 0x7e, 0xeb, 0xe1, 0x3a, 0xc2, 0x88, 0xd7,
	0x09, 0x2d, 0x51, 0x60, 0x39, 0x2f, 0xec, 0x58, 0xba, 0xc7, 0x74, 0x81, 0x91, 0x2e, 0x39, 0x56,
	0xf9, 0x3b, 0x32, 0x90, 0xe3, 0x52, 0xb0, 0x1f, 0x36, 0xd7, 0x39, 0xc8, 0xb0, 0x77, 0x9b, 0x56,
	0xfb, 0x34, 0x6c, 0x34, 0x7a, 0x11, 0x86, 0xc9, 0x6b, 0xcc, 0xa8, 0x11, 0x91, 0xb1, 0xe8, 0x06,
	0x8c, 0x85, 0x27, 0x85, 0x59, 0xab, 0xe1, 0x9a, 0x6a, 0x65, 0xf7, 0xa8, 0x20, 0x9b, 0xa3, 0x54,
	0x68, 0x45, 0xde, 0x83, 0x9c, 0x93, 0x5a, 0x95, 0xf7, 0x58, 0x48, 0xc7, 0x59, 0x11, 0xb3, 0xd5,
	0xde, 0x32, 0x3d, 0xc5, 0xc5, 0xcd, 0x06, 0xa3, 0xbf, 0x99, 0x82, 0x31, 0x7e, 0xfe, 0x85, 0x7b,
	0xb5, 0xa0, 0xba, 0x57, 0x2f, 0x26, 0x47, 0xc5, 0x1e, 0xe5, 0x93, 0xf2, 0x9d, 0x5a, 0xfe, 0xaf,
	0xf2, 0x90, 0xe3, 0x27, 0x61, 0x3f, 0x2c, 0xc5, 0x05, 0xae, 0x8d, 0x77, 0x91, 0xf0, 0xfc, 0x89,
	0xdb, 0xf8, 0xac, 0xee, 0xc2, 0x84, 0x1f, 0x98, 0x8e, 0x65, 0x7a, 0x54, 0x1f, 0xa1, 0x72, 0x4e,
	0xb7, 0x4c, 0x64, 0x5c, 0x70, 0x08, 0x6d, 0xcc, 0x70, 0x97, 0x64, 0x93, 0xec, 0x92, 0x9c, 0xc6,
	0x2e, 0x39, 0x0f, 0x19, 0xbf, 0xea, 0x7a, 0x98, 0xaf, 0xc8, 0xee, 0x2a, 0x22, 0x1b, 0x2e, 0x25,
	0x6e, 0x16, 0x92, 0x26, 0x6e, 0x16, 0x02, 0xaf, 0x19, 0x6c, 0x57, 0x82, 0x4a, 0xa3, 0x9b, 0xa0,
	0x15, 0x19, 0x1b, 0x39, 0x4a, 0x71, 0x77, 0x8d, 0x10, 0xbf, 0xd5, 0xc4, 0xde, 0x2e, 0x25, 0x1e,
	0x51, 0x24, 0xa6, 0x14, 0x8c, 0x98, 0xcd, 0xbc, 0x59, 0x71, 0xb8, 0xcd, 0xa3, 0x38, 0xf3, 0xf5,
	0x3b, 0xd1, 0xcc, 0x9b, 0x95, 0x46, 0x37, 0x9f, 0x79, 0x7c, 0xe6, 0xeb, 0x6b, 0xe8, 0x1c, 0x64,
	0xb7, 0x02, 0x4a, 0x39, 0xaa, 0x46, 0x99, 0xde, 0x0a, 0xae, 0xaf, 0xa1, 0x2b, 0x50, 0x68, 0x78,
	0xb8, 0x6a, 0xd3, 0x15, 0x3f, 0xa6, 0x46, 0x19, 0x51, 0x90, 0xe3, 0xd0, 0xc3, 0x55, 0xb3, 0x56,
	0xe3, 0x66, 0x40, 0x57, 0x5a, 0x3e, 0x1c, 0x5d, 0x80, 0xdc, 0x66, 0x85, 0xad, 0x8e, 0x09, 0x45,
	0xca, 0xcd, 0x75, 0x32, 0xbc, 0xfc, 0x8b, 0x69, 0x80, 0x48, 0x4d, 0xed, 0x07, 0x61, 0x71, 0x3d,
	0x26, 0x2c, 0x3e, 0xdc, 0x5e, 0xee, 0x8a, 0x87, 0x6e, 0x23, 0x2f, 0x9e, 0x67, 0x21, 0x27, 0x85,
	0x76, 0x8c, 0x34, 0xd4, 0x74, 0x86, 0x07, 0x8c, 0x14, 0xfb, 0x30, 0xd2, 0x40, 0xd1, 0x15, 0x00,
	0xcb, 0x0c, 0x4c, 0x1f, 0x07, 0x44, 0x5b, 0x54, 0x3b, 0xa9, 0x0a, 0x9c, 0x62, 0xc5, 0x42, 0x0b,
	0x50, 0xe2, 0x72, 0x9f, 0x73, 0x50, 0x3b, 0xab, 0x8a, 0x11, 0xd1, 0x8a, 0x45, 0xee, 0x81, 0x58,
	0x3a, 0x9c, 0x83, 0x6a, 0xea, 0x13, 0xa3, 0x58, 0xb1, 0x12, 0x46, 0x78, 0xb9, 0xf4, 0x9c, 0xfe,
	0x02, 0x82, 0x09, 0x1e, 0xed, 0x8e, 0xfe, 0x7b, 0xe0, 0xb7, 0x7b, 0x3c, 0xfd, 0x76, 0xcf, 0xab,
	0xc6, 0x78, 0xd9, 0x86, 0x8b, 0xbb, 0xf9, 0x20, 0x91, 0x9b, 0x4f, 0x8a, 0x0f, 0x8f, 0xe8, 0xc5,
	0x87, 0xc5, 0x76, 0x2f, 0x6a, 0x6c, 0xf7, 0x10, 0x00, 0xa2, 0xa4, 0x03, 0x00, 0x71, 0xbb, 0x05,
	0x90, 0xf6, 0x80, 0xa3, 0xc9, 0x63, 0xbd, 0x44, 0x93, 0xc7, 0x93, 0x47, 0x93, 0x27, 0x74, 0xa3,
	0xc9, 0x2d, 0xc0, 0x00, 0x28, 0x09, 0x30, 0x40, 0x2f, 0xc1, 0xdb, 0xb3, 0x90, 0x61, 0xb1, 0xbe,
	0xe3, 0x6a, 0x5f, 0x8f, 0x0e, 0x46, 0x73, 0x50, 0x32, 0x1b, 0x0d, 0xcf, 0xdd, 0x31, 0x6b, 0x0c,
	0x81, 0xfd, 0x84, 0x02, 0x02, 0x7b, 0x51, 0x90, 0x50, 0x10, 0xf6, 0xeb, 0x30, 0x5e, 0x33, 0xfd,
	0xa0, 0xe2, 0xe1, 0x1d, 0x1b, 0xdf, 0x67, 0x5c, 0x4e, 0x2a, 0x70, 0x19, 0x25, 0x54, 0x06, 0x25,
	0xa2, 0x7c, 0x56, 0x60, 0x1c, 0x6f, 0x6e, 0x62, 0x9a, 0xd9, 0x56, 0xe1, 0x49, 0xa1, 0xa7, 0xd4,
	0x32, 0x82, 0x42, 0x3a, 0x76, 0xa1, 0x35, 0x30, 0x3f, 0x75, 0x40, 0x81, 0xf9, 0xd3, 0xbd, 0x04,
	0xe6, 0xaf, 0x40, 0x26, 0x70, 0x1b, 0x76, 0x55, 0xb7, 0x1b, 0x12, 0xa3, 0x22, 0x8f, 0x44, 0x1e,
	0xc7, 0xb3, 0x37, 0x9a, 0x81, 0xeb, 0xf1, 0xda, 0xfd, 0xf7, 0x75, 0x92, 0xad, 0x7c, 0xa8, 0x21,
	0xd3, 0xc9, 0x39, 0x0f, 0x4f, 0x26, 0xca, 0x79, 0xb8, 0x4a, 0x24, 0x7c, 0x63, 0xd7, 0xb3, 0xb7,
	0xb6, 0x83, 0xa9, 0xa7, 0x14, 0x17, 0x69, 0x44, 0xb2, 0x2f, 0x46, 0xc8, 0xd3, 0x3d, 0x62, 0x84,
	0x2c, 0x40, 0x2e, 0xf0, 0xec, 0xad, 0x2d, 0xec, 0xf1, 0x28, 0x6e, 0xdb, 0x33, 0xe7, 0x2e, 0x1b,
	0x26, 0x81, 0xc9, 0x08, 0x4a, 0x72, 0x63, 0x44, 0x75, 0xa9, 0x70, 0xe0, 0xc2, 0x7a, 0x14, 0xd9,
	0xfd, 0x60, 0x87, 0x65, 0x6c, 0x1a, 0xd1, 0x70, 0x63, 0xcc, 0x8a, 0x5f, 0x40, 0x3f, 0x98, 0x82,
	0xe3, 0x6e, 0x03, 0xb3, 0x4c, 0xec, 0x8a, 0x14, 0x0e, 0x7d, 0xaf, 0x72, 0x85, 0x31, 0x35, 0xba,
	0x2f, 0x29, 0x1b, 0xdd, 0x62, 0x32, 0xe9, 0x09, 0x27, 0xdd, 0xbd, 0x17, 0x67, 0x97, 0x24, 0xbd,
	0xe8, 0xa2, 0xba, 0x5e, 0xd4, 0xa2, 0x0a, 0x4d, 0x7f, 0x0d, 0x20, 0xbd, 0x5e, 0x73, 0x07, 0x15,
	0xaf, 0x83, 0x58, 0x66, 0xe2, 0x58, 0xe6, 0x7e, 0x49, 0xcc, 0x70, 0xc0, 0x49, 0xcc, 0x23, 0x07,
	0x95, 0xc4, 0x5c, 0x4c, 0x9c, 0xc4, 0x6c, 0xc0, 0xb8, 0xd9, 0xa0, 0x4e, 0x37, 0x22, 0x1a, 0xd8,
	0x6d, 0x69, 0x96, 0xaa, 0x8e, 0x49, 0x0c, 0xe8, 0xad, 0xbd, 0x0d, 0x79, 0x9f, 0x67, 0xa3, 0xaa,
	0x47, 0x22, 0x2f, 0x4b, 0x19, 0x16, 0xda, 0x49, 0xaf, 0x46, 0x38, 0x21, 0xba, 0x1e, 0x2a, 0x7e,
	0x4c, 0x47, 0xfb, 0x40, 0x5b, 0x8d, 0xa3, 0xe6, 0x76, 0x82, 0x6b, 0xb8, 0x22, 0x5c, 0x54, 0xe3,
	0xdd, 0xbc, 0x4d, 0x7e, 0x60, 0x3a, 0x51, 0xcd, 0x11, 0x77, 0x55, 0x5d, 0x64, 0xae, 0xaa, 0x09,
	0x3d, 0x62, 0xea, 0xb2, 0x7a, 0x05, 0xc0, 0xdd, 0xc1, 0xde, 0x86, 0xeb, 0xde, 0xa3, 0x4d, 0x48,
	0x95, 0x34, 0x4d, 0x89, 0x44, 0xce, 0x3c, 0x9e, 0xd4, 0xcb, 0x3c, 0xbe, 0x20, 0xc9, 0xdf, 0xe7,
	0x94, 0x3f, 0x42, 0xcd, 0x0d, 0xa6, 0xff, 0xe2, 0x19, 0xc8, 0x8b, 0x90, 0xf4, 0x40, 0xec, 0x0e,
	0xc4, 0x6e, 0x52, 0xb1, 0xfb, 0x3a, 0x1c, 0x37, 0xab, 0x55, 0x96, 0xdc, 0x54, 0x89, 0x59, 0xaa,
	0xaa, 0xb0, 0x05, 0x93, 0x21, 0xbd, 0xd4, 0x9f, 0x64, 0x3e, 0x94, 0x0a, 0x23, 0x9d, 0x1d, 0x5c,
	0x62, 0x0d, 0x47, 0x92, 0x21, 0x94, 0x08, 0xa2, 0x53, 0x71, 0x31, 0x49, 0xa7, 0xe2, 0x1f, 0x1c,
	0x8a, 0x4a, 0xf1, 0x95, 0x53, 0x42, 0xbe, 0x9a, 0x3a, 0xda, 0x5e, 0xc0, 0x89, 0xcb, 0x35, 0x94,
	0xeb, 0xce, 0xd7, 0x9b, 0x1b, 0x44, 0xe2, 0x55, 0x71, 0x54, 0xfc, 0xbf, 0x04, 0x25, 0x0f, 0x57,
	0x31, 0x4d, 0x8b, 0xa5, 0xb5, 0xc2, 0xaa, 0xc9, 0xd6, 0x45, 0x41, 0x46, 0xab, 0x85, 0x23, 0xac,
	0x88, 0xb1, 0xc3, 0xca, 0x0e, 0x10, 0x19, 0x37, 0x02, 0x2b, 0xe2, 0x6d, 0xc8, 0xf1, 0xde, 0xbc,
	0x3c, 0x53, 0x5b, 0x61, 0xce, 0xab, 0xbd, 0xb6, 0x26, 0xe7, 0x33, 0xa2, 0x9b, 0x00, 0x55, 0xb7,
	0xc6, 0xf1, 0xd2, 0xbb, 0x35, 0xbf, 0x16, 0xb7, 0x3e, 0xb3, 0x10, 0x92, 0x18, 0x12, 0x39, 0x61,
	0xd6, 0x20, 0x33, 0xf9, 0xbe, 0xed, 0x6c, 0xf1, 0xe4, 0x95, 0xee, 0xcc, 0xd6, 0x42, 0x12, 0x43,
	0x22, 0x47, 0xcb, 0x91, 0x88, 0xf3, 0x38, 0xaa, 0xe1, 0x87, 0x15, 0x6e, 0x8c, 0x53, 0x44, 0x32,
	0xce, 0x0b, 0x21, 0xe1, 0x8e, 0xeb, 0x41, 0xc2, 0x95, 0xbf, 0x33, 0x0b, 0x10, 0x3d, 0x69, 0x3f,
	0xb8, 0xe7, 0xdf, 0x26, 0xef, 0x94, 0x3e, 0x90, 0xeb, 0xa9, 0x67, 0xad, 0xf6, 0x02, 0x32, 0x18,
	0xcd, 0x87, 0x3e, 0x11, 0x4e, 0x8e, 0x45, 0x88, 0xfa, 0x9c, 0xc6, 0x4a, 0x13, 0x7f, 0x62, 0x2b,
	0x2c, 0x1f, 0x8e, 0xf8, 0xa1, 0x79, 0x29, 0x8d, 0x2b, 0xdb, 0x45, 0x63, 0x23, 0x67, 0x38, 0xde,
	0x27, 0x99, 0x2b, 0x0a, 0xd6, 0xe5, 0x92, 0x05, 0xeb, 0x16, 0xa1, 0xb0, 0xe1, 0x5a, 0xbb, 0x15,
	0x8a, 0x9f, 0x98, 0xd7, 0xe3, 0x91, 0x27, 0x94, 0xeb, 0x76, 0x80, 0xcb, 0xdf, 0x97, 0x82, 0x42,
	0xf8, 0xac, 0x0f, 0x13, 0xff, 0x60, 0x44, 0xfa, 0x60, 0xe5, 0x2f, 0x65, 0x00, 0xa2, 0x9d, 0xda,
	0x0f, 0x9b, 0xa1, 0x05, 0x70, 0x30, 0xad, 0x0f, 0x87, 0xbf, 0x04, 0x85, 0x86, 0x90, 0xac, 0xba,
	0xd1, 0xec, 0x88, 0x12, 0xed, 0x40, 0xde, 0xb4, 0x2c, 0x9b, 0xd6, 0xc8, 0x66, 0x55, 0x4f, 0x80,
	0x97, 0x93, 0x9e, 0x98, 0xe1, 0x5c, 0xe8, 0x16, 0xa4, 0xe9, 0xaa, 0xca, 0x75, 0xee, 0x72, 0xb9,
	0x8f, 0xa0, 0x9e, 0x21, 0x2b, 0x2b, 0xaa, 0xe2, 0x27, 0x5c, 0xca, 0x9f, 0x4d, 0x41, 0x9a, 0x2e,
	0xb8, 0x87, 0xb8, 0x62, 0xb3, 0xec, 0x89, 0xca, 0x7f, 0x96, 0xa5, 0x7d, 0x20, 0xb8, 0xfc, 0xef,
	0x83, 0xb5, 0x1a, 0xd7, 0x89, 0xd3, 0x89, 0x74, 0xe2, 0xde, 0xdb, 0x3f, 0x08, 0xd5, 0x35, 0x9b,
	0x44, 0x75, 0x9d, 0x87, 0x7c, 0xd5, 0x6c, 0x98, 0x55, 0x22, 0xa1, 0x73, 0x7a, 0x12, 0x5a, 0xd0,
	0xa1, 0x75, 0x98, 0x10, 0x69, 0xca, 0x95, 0x50, 0xdc, 0xe7, 0xb5, 0x98, 0x8d, 0x0b, 0x06, 0xe2,
	0x0a, 0x7a, 0x53, 0xda, 0x7e, 0x85, 0xce, 0x6d, 0x67, 0xf6, 0xea, 0x19, 0x33, 0x73, 0x9c, 0x34,
	0xdc, 0x0d, 0x21, 0xb3, 0xf2, 0x9f, 0xa4, 0x20, 0x2f, 0xfe, 0xfb, 0x90, 0x30, 0x63, 0xbe, 0x29,
	0x11, 0x66, 0x4c, 0x52, 0xd9, 0x11, 0x07, 0x8d, 0x81, 0xe8, 0xbd, 0x25, 0x8c, 0x44, 0xf3, 0xb7,
	0x39, 0xfd, 0x1b, 0x4f, 0xc0, 0xe4, 0x3e, 0x03, 0x06, 0x0e, 0x80, 0x41, 0xbd, 0xb1, 0x46, 0xbd,
	0xf1, 0xc3, 0x8d, 0x49, 0xcf, 0xea, 0xc4, 0xa4, 0x5b, 0x6a, 0x96, 0x07, 0xb1, 0xe9, 0x5e, 0x62,
	0xd3, 0x52, 0xd4, 0x0f, 0x25, 0x8a, 0xfa, 0xb5, 0x04, 0xb7, 0x27, 0x93, 0x04, 0xb7, 0x5b, 0x82,
	0xb2, 0xc7, 0x0f, 0x28, 0x28, 0x7b, 0xe2, 0x80, 0xaa, 0xa5, 0x4f, 0xea, 0x06, 0xdc, 0x63, 0x91,
	0xd0, 0x53, 0xfa, 0x91, 0xd0, 0x0b, 0x51, 0x67, 0x83, 0xa9, 0xce, 0xb5, 0xa7, 0xbc, 0xdb, 0x5c,
	0xd8, 0xd0, 0xe0, 0x0a, 0x14, 0xc9, 0x90, 0x8a, 0xd8, 0x87, 0xa7, 0xbb, 0x8a, 0xff, 0x11, 0x72,
	0xed, 0x0d, 0xbe, 0x0f, 0x6f, 0x43, 0xae, 0x6e, 0x36, 0x1a, 0xb6, 0xb3, 0xc5, 0x63, 0xd1, 0x2f,
	0x75, 0x58, 0x49, 0xad, 0x27, 0xce, 0xcc, 0x6d, 0x46, 0x6a, 0x08, 0x1e, 0x68, 0x95, 0x37, 0xe0,
	0x7a, 0xa2, 0x8b, 0x62, 0xb0, 0x97, 0x57, 0x9b, 0x26, 0x5c, 0x0b, 0x90, 0x37, 0x37, 0xfc, 0xc0,
	0x63, 0x41, 0x6a, 0x95, 0x2d, 0x26, 0x75, 0x7d, 0xe2, 0x84, 0x68, 0x15, 0x8a, 0x7c, 0xa5, 0xb1,
	0x50, 0x0b, 0x0b, 0x55, 0x3f, 0xd7, 0x55, 0xda, 0xf2, 0x65, 0x46, 0x8f, 0xa0, 0x11, 0xce, 0x81,
	0xc6, 0x5a, 0x2e, 0x44, 0xc8, 0x99, 0x4f, 0x2b, 0x95, 0x0a, 0x87, 0x10, 0x96, 0x37, 0x61, 0x42,
	0xdc, 0x8a, 0xed, 0x88, 0xba, 0x25, 0xb5, 0x72, 0xe3, 0x71, 0x4e, 0xb8, 0x22, 0xe8, 0xd0, 0xab,
	0x5c, 0xc1, 0x7c, 0x0f, 0x7d, 0x9e, 0xb6, 0x75, 0xcf, 0xd7, 0x97, 0x57, 0x0c, 0xfa, 0xa2, 0xb1,
	0x45, 0xee, 0x7e, 0xe9, 0x41, 0xb0, 0x4f, 0x0a, 0xe1, 0x22, 0x8c, 0x6d, 0x98, 0x3e, 0xde, 0x1b,
	0x98, 0xee, 0x78, 0xbe, 0x8f, 0x12, 0x1a, 0x49, 0x05, 0xb9, 0x03, 0x40, 0x6b, 0xe7, 0x19, 0x0e,
	0xe2, 0x74, 0xe7, 0xfb, 0x22, 0x37, 0xb3, 0x18, 0x8e, 0x26, 0x1a, 0x02, 0xab, 0xee, 0x8e, 0x38,
	0xa0, 0x35, 0xc8, 0xfb, 0x8e, 0xd9, 0xf0, 0xb7, 0xdd, 0x60, 0xea, 0x7d, 0x94, 0xdb, 0x59, 0x9d,
	0xf5, 0xb9, 0xce, 0x69, 0x8d, 0x90, 0x0b, 0xfa, 0x6b, 0x50, 0xb4, 0xec, 0x4d, 0xaa, 0x94, 0x05,
	0xb6, 0x59, 0x9b, 0x7a, 0x96, 0x72, 0xbd, 0xa0, 0xc3, 0x75, 0x51, 0xa2, 0x37, 0x62, 0xdc, 0xca,
	0x3f, 0x3e, 0x0c, 0x39, 0xbe, 0x29, 0xfa, 0xc1, 0x8e, 0xba, 0x0a, 0x79, 0x76, 0xda, 0x07, 0xbb,
	0x3a, 0xed, 0xd6, 0x04, 0x0d, 0x4b, 0x93, 0xb3, 0x15, 0xf3, 0x52, 0xed, 0x44, 0x79, 0xa9, 0x52,
	0xd8, 0x2d, 0xa7, 0x87, 0x9c, 0xf9, 0xf9, 0x21, 0xc8, 0x8b, 0x05, 0xd2, 0x1f, 0xcd, 0x0f, 0x73,
	0xb8, 0xc6, 0x72, 0x55, 0xd2, 0x9d, 0x35, 0xdc, 0x25, 0x36, 0x2c, 0x5a, 0xd2, 0x11, 0x76, 0x23,
	0xe7, 0x50, 0xfe, 0xc2, 0x10, 0x14, 0xe5, 0x75, 0x3e, 0x78, 0x41, 0xf1, 0x17, 0x34, 0x7b, 0x43,
	0x32, 0xe1, 0x94, 0x53, 0x72, 0xf6, 0xb9, 0x36, 0xfd, 0x6d, 0xd7, 0xa1, 0x18, 0x5e, 0xbf, 0x6d,
	0x36, 0x06, 0x66, 0xdc, 0xc0, 0x8c, 0x1b, 0x98, 0x71, 0x03, 0x33, 0x6e, 0x60, 0xc6, 0x3d, 0x7a,
	0x66, 0xdc, 0x2d, 0x28, 0xf8, 0x42, 0x94, 0x73, 0x43, 0x6e, 0xa6, 0xab, 0x66, 0x79, 0xdb, 0x6c,
	0x44, 0x3f, 0x8c, 0x88, 0x01, 0x7a, 0x09, 0xb2, 0x76, 0xbd, 0xe1, 0x7a, 0x01, 0x4f, 0x36, 0xee,
	0x28, 0xa2, 0xf9, 0x50, 0xb4, 0x0c, 0x19, 0xda, 0x33, 0x9c, 0x9b, 0x73, 0x1f, 0x56, 0x9a, 0x9e,
	0xe6, 0x21, 0x44, 0xc9, 0x54, 0x94, 0x41, 0xf9, 0x9f, 0x0d, 0x43, 0x21, 0x1c, 0xd5, 0x1f, 0x55,
	0xc2, 0x54, 0xc2, 0xa6, 0x35, 0x25, 0xec, 0x6d, 0x48, 0xd7, 0xa3, 0x36, 0x5d, 0x2f, 0xaa, 0xbc,
	0xd0, 0xdb, 0xae, 0x85, 0x6b, 0xb7, 0x39, 0xc0, 0x54, 0x24, 0xf6, 0x08, 0x1b, 0x22, 0xf6, 0xcc,
	0x9a, 0x6d, 0xfa, 0x8a, 0x5a, 0x2e, 0x1b, 0x8c, 0x16, 0xa1, 0x64, 0xb9, 0xd5, 0x26, 0x15, 0x38,
	0x81, 0x7a, 0x47, 0xe8, 0x38, 0x51, 0xf9, 0x77, 0xce, 0x42, 0x86, 0x7e, 0xeb, 0x7e, 0xf8, 0x9c,
	0xe7, 0x63, 0xad, 0xd7, 0x54, 0x0c, 0x13, 0x71, 0xee, 0xe4, 0xe8, 0x0d, 0x58, 0x3e, 0xff, 0xa4,
	0x9d, 0x94, 0x2c, 0x31, 0x14, 0x7d, 0x1c, 0x0a, 0xc4, 0x4e, 0xae, 0xd0, 0xa5, 0x90, 0xed, 0x12,
	0x8e, 0x97, 0x96, 0x02, 0x7d, 0xdd, 0xc4, 0xd2, 0xdd, 0xb3, 0x1c, 0xf2, 0x01, 0xbf, 0x7a, 0x30,
	0x1f, 0x17, 0xdd, 0x81, 0x8c, 0xed, 0x34, 0x9a, 0x01, 0xd7, 0x42, 0x3e, 0xa2, 0xbe, 0xf3, 0x67,
	0x56, 0x08, 0x5d, 0xb4, 0xff, 0x29, 0x1b, 0x74, 0x13, 0xd2, 0x44, 0x41, 0xe4, 0x29, 0x65, 0x2f,
	0x68, 0xb0, 0x23, 0x5a, 0x62, 0xf4, 0xd2, 0x09, 0x93, 0xf2, 0x6f, 0x0c, 0x43, 0x86, 0xce, 0xf2,
	0x38, 0xaf, 0xbc, 0x33, 0xdc, 0x5f, 0xa3, 0x16, 0x4b, 0x64, 0x7e, 0x19, 0x21, 0x7d, 0xb2, 0xea,
	0xd2, 0x87, 0xbe, 0xe7, 0x36, 0xd2, 0xe7, 0x60, 0xe4, 0xc8, 0xdf, 0x7e, 0x0e, 0xd2, 0xe4, 0x23,
	0x3f, 0xce, 0x1f, 0xf3, 0x0d, 0xc8, 0x32, 0xbb, 0x62, 0x2a, 0x43, 0x67, 0x3f, 0xaf, 0xb9, 0x41,
	0x66, 0xd6, 0x29, 0xb5, 0xa4, 0x91, 0xd2, 0xdf, 0xe8, 0x4e, 0x08, 0xb0, 0x98, 0x4d, 0xc6, 0xf7,
	0x2e, 0xa5, 0x0e, 0xe1, 0x16, 0x17, 0xf8, 0x36, 0xce, 0x25, 0xda, 0xc6, 0x6c, 0xfb, 0xa2, 0x37,
	0xa1, 0x60, 0xe1, 0x06, 0x76, 0x88, 0xcd, 0xc0, 0xe5, 0xcb, 0x45, 0xdd, 0xfb, 0x5a, 0x14, 0x0c,
	0x8c, 0x88, 0xd7, 0xde, 0xf5, 0x58, 0x48, 0xb2, 0x1e, 0x7f, 0xec, 0x34, 0x64, 0xd9, 0xeb, 0xec,
	0x87, 0x15, 0x79, 0x39, 0xf2, 0x2e, 0xab, 0x2f, 0xca, 0xd0, 0xc3, 0xfc, 0x22, 0x0c, 0xd7, 0x6d,
	0x47, 0x19, 0xd4, 0xa4, 0x6e, 0x3b, 0xe8, 0x23, 0x30, 0x5c, 0x37, 0x1f, 0x28, 0x2a, 0x24, 0x64,
	0x68, 0x28, 0xc9, 0x72, 0x1a, 0x92, 0xac, 0x01, 0x25, 0x0b, 0x6f, 0x9a, 0xcd, 0x5a, 0xc0, 0xbb,
	0xe5, 0xb3, 0x4c, 0x84, 0x85, 0x64, 0xfb, 0x66, 0x66, 0x91, 0xf1, 0x7a, 0x83, 0xb0, 0x0a, 0xb3,
	0x09, 0x8a, 0x96, 0x74, 0x95, 0xd8, 0xb5, 0xc2, 0xe1, 0xa3, 0xb6, 0xac, 0xc4, 0x70, 0xb4, 0x0e,
	0x85, 0x9a, 0xed, 0x07, 0xec, 0xb4, 0x87, 0xce, 0xcd, 0x3b, 0xe4, 0xfb, 0x64, 0xf7, 0x76, 0xcb,
	0xf6, 0x43, 0xf9, 0x6b, 0xe4, 0x6b, 0xfc, 0x17, 0x3a, 0x0f, 0x79, 0xea, 0xb9, 0xdf, 0xa8, 0x09,
	0xac, 0xe6, 0x4e, 0x9a, 0x47, 0x38, 0x96, 0x18, 0x8a, 0x51, 0x6f, 0x2a, 0xb5, 0x22, 0x5e, 0xa9,
	0xbf, 0x14, 0x05, 0x35, 0xc5, 0xd5, 0x7b, 0xaa, 0x66, 0x36, 0x1d, 0x5c, 0xfe, 0x97, 0x08, 0x8a,
	0xf2, 0x1b, 0x46, 0x37, 0xa1, 0xb4, 0x61, 0xfa, 0xf8, 0xfc, 0xd9, 0xca, 0x86, 0xed, 0x98, 0xde,
	0x2e, 0xdf, 0x62, 0x6d, 0x8d, 0xbd, 0x79, 0x3a, 0x78, 0x9e, 0x8e, 0x5d, 0x3e, 0x66, 0x14, 0x37,
	0xa4, 0xdf, 0xe8, 0x12, 0xe4, 0x36, 0x98, 0x25, 0xcd, 0x3d, 0x57, 0xdd, 0x0c, 0xee, 0xe5, 0x63,
	0x86, 0xa0, 0x20, 0x6b, 0x8f, 0x22, 0x13, 0x0f, 0x77, 0x47, 0x26, 0x5e, 0x3e, 0xc6, 0x31, 0x89,
	0xcf, 0x70, 0x0b, 0x3d, 0xdd, 0xbd, 0x16, 0x95, 0xd0, 0x50, 0xfb, 0x3c, 0x96, 0x98, 0x95, 0x49,
	0x90, 0x98, 0x25, 0xb5, 0x56, 0xc9, 0x6a, 0xb7, 0x56, 0x79, 0x8e, 0xca, 0xb1, 0x5c, 0xb7, 0x65,
	0xb2, 0x7c, 0x8c, 0x4a, 0xb1, 0x4b, 0x90, 0xb3, 0x59, 0x55, 0x0b, 0xdf, 0x55, 0xdd, 0x8a, 0x5f,
	0xc8, 0x54, 0x9c, 0x82, 0x11, 0x53, 0x71, 0xa0, 0x08, 0x6d, 0xc5, 0x88, 0xe9, 0x9f, 0xe8, 0x2a,
	0xe4, 0xeb, 0xdc, 0x12, 0xe6, 0x1b, 0xa5, 0xab, 0xc5, 0x4c, 0x5e, 0x92, 0xa0, 0x41, 0x2f, 0xc0,
	0xb0, 0x6b, 0x0b, 0x28, 0xab, 0xb6, 0x46, 0xd9, 0xaa, 0x4d, 0x9e, 0x94, 0x8c, 0x44, 0xcb, 0x50,
	0xa4, 0x68, 0x18, 0xf6, 0x0e, 0xae, 0xd8, 0x21, 0xbe, 0x64, 0xdb, 0xea, 0xd7, 0x35, 0x3e, 0x76,
	0x85, 0x3e, 0xf3, 0x48, 0x23, 0xfa, 0x89, 0xae, 0x42, 0x91, 0xa1, 0x82, 0x71, 0x79, 0xa4, 0xb4,
	0x41, 0x96, 0x8f, 0x51, 0x60, 0x2f, 0xdb, 0xd9, 0xa2, 0x42, 0x30, 0x4a, 0x9d, 0x6f, 0xbb, 0xa8,
	0xf8, 0xba, 0xa0, 0x63, 0xc9, 0xdd, 0x37, 0x1d, 0xde, 0x5b, 0xd5, 0x76, 0x44, 0x83, 0xc0, 0xb6,
	0x77, 0xff, 0x3a, 0x1f, 0xcb, 0xef, 0xbe, 0x19, 0xfd, 0x24, 0x2f, 0xae, 0xe9, 0xd9, 0xdc, 0xe7,
	0xd4, 0xc9, 0x9a, 0x25, 0x2f, 0xae, 0xe9, 0xd9, 0xe4, 0x33, 0x9b, 0x96, 0xe5, 0x61, 0xdf, 0xef,
	0x56, 0x20, 0x35, 0xc7, 0x86, 0x91, 0xcf, 0xcc, 0x29, 0xc8, 0x6c, 0xe6, 0x16, 0xe6, 0x75, 0x51,
	0x6d, 0x67, 0x9b, 0xa3, 0xdd, 0x75, 0xc8, 0x48, 0xb4, 0x08, 0x60, 0x86, 0x19, 0xe2, 0xdc, 0xbb,
	0xa4, 0x90, 0x4b, 0xbe, 0x7c, 0xcc, 0x90, 0xe8, 0x28, 0x97, 0x20, 0x30, 0xab, 0xdb, 0x54, 0x88,
	0x1f, 0xef, 0xc2, 0x25, 0x1c, 0x49, 0xb9, 0x84, 0xbf, 0xf6, 0x4d, 0x26, 0x3b, 0xd1, 0x73, 0x32,
	0xd9, 0x05, 0xc8, 0x56, 0x69, 0x30, 0xbe, 0x5b, 0x07, 0x7d, 0x16, 0xb2, 0x27, 0x0b, 0x87, 0x8d,
	0x27, 0xb2, 0x94, 0x7b, 0xe1, 0x18, 0xf2, 0x16, 0x77, 0x35, 0x3d, 0xdb, 0xc5, 0x83, 0x47, 0x11,
	0xb3, 0x88, 0x2c, 0xad, 0x4a, 0xbf, 0xd1, 0x39, 0xc8, 0xd0, 0x1e, 0x8b, 0x1c, 0x99, 0xfc, 0xa9,
	0xf6, 0x4c, 0x9a, 0x94, 0x9a, 0x8d, 0x26, 0xfb, 0xd6, 0xb2, 0x59, 0x9e, 0x1a, 0xcf, 0x19, 0x68,
	0x2f, 0xdc, 0xec, 0x30, 0x9f, 0x2d, 0xa4, 0xa1, 0xf4, 0x4d, 0x56, 0x4a, 0xcc, 0xd1, 0xc8, 0xdb,
	0xd3, 0xf3, 0x71, 0x94, 0x9e, 0xff, 0x8d, 0xe6, 0x01, 0xb6, 0x9b, 0x75, 0xd3, 0xa9, 0x50, 0xe5,
	0xfb, 0x89, 0xce, 0x71, 0x80, 0x65, 0x32, 0xf2, 0x8e, 0x49, 0xf7, 0x51, 0x61, 0x5b, 0xfc, 0x20,
	0xab, 0x43, 0xf2, 0x7d, 0x3f, 0xa9, 0x5a, 0xac, 0x44, 0x56, 0x87, 0xe4, 0xfd, 0x3e, 0x07, 0x99,
	0xba, 0xeb, 0xe0, 0x5d, 0x9e, 0x16, 0xd0, 0xf6, 0x05, 0xde, 0x26, 0x83, 0xc8, 0x0b, 0xa4, 0xa3,
	0xa5, 0xb4, 0xdb, 0xa7, 0x35, 0xbb, 0x55, 0x5d, 0x95, 0x92, 0xef, 0x9f, 0x51, 0x03, 0xc8, 0x22,
	0xaf, 0x2e, 0x4c, 0xbc, 0x0f, 0xbb, 0x5d, 0xbd, 0x47, 0xa7, 0xdb, 0x15, 0x23, 0x0b, 0x6c, 0x97,
	0xc7, 0xf5, 0x3b, 0x90, 0x05, 0xb6, 0xcb, 0xc8, 0x02, 0xdb, 0x45, 0x73, 0x72, 0xce, 0xe4, 0xb4,
	0x62, 0xce, 0x64, 0x2c, 0xf5, 0x91, 0x08, 0x3d, 0xdf, 0xac, 0x37, 0x6a, 0xd8, 0xaa, 0x58, 0x66,
	0x60, 0xf2, 0x48, 0x7e, 0x5b, 0xa1, 0xb7, 0xce, 0xc6, 0x2e, 0x9a, 0x81, 0x49, 0x84, 0x9e, 0x1f,
	0xfd, 0x24, 0x37, 0x43, 0x24, 0xa0, 0x49, 0x1d, 0xac, 0xcf, 0x76, 0xbe, 0x99, 0x75, 0x31, 0x90,
	0xdc, 0x4c, 0x48, 0x45, 0xbe, 0x5b, 0x60, 0xd7, 0xc9, 0xb6, 0x7d, 0x7f, 0xe7, 0xef, 0x76, 0x97,
	0x8e, 0x22, 0xdf, 0x8d, 0x8d, 0x27, 0xf2, 0x9e, 0x06, 0xdb, 0x3e, 0xd0, 0x3d, 0xd8, 0x46, 0xe4,
	0x3d, 0x19, 0x3b, 0x3f, 0xd6, 0xa2, 0xf4, 0x96, 0xff, 0xc6, 0x08, 0x64, 0x99, 0x85, 0xd6, 0x0f,
	0xa6, 0xca, 0x59, 0x0d, 0x53, 0x25, 0x32, 0x51, 0xde, 0x68, 0xc9, 0xc7, 0xc9, 0x28, 0x66, 0x0b,
	0xdd, 0x36, 0x1b, 0x0b, 0x51, 0x16, 0xce, 0xbe, 0x69, 0x39, 0x42, 0xdf, 0xcf, 0xea, 0xe9, 0xfb,
	0xb2, 0x6a, 0x9e, 0xd3, 0x50, 0xcd, 0x63, 0x76, 0x42, 0x5e, 0xdd, 0x5e, 0x67, 0x2b, 0xa0, 0x8d,
	0x9d, 0x70, 0x19, 0x8a, 0x94, 0x29, 0xb1, 0xbc, 0x23, 0xa0, 0xab, 0x4e, 0x37, 0x04, 0x64, 0x3c,
	0x31, 0x8e, 0x56, 0x2c, 0xb4, 0x0a, 0x85, 0xc0, 0x33, 0x1d, 0x7f, 0xd3, 0xf5, 0xea, 0xdd, 0xfa,
	0xe8, 0xc7, 0x6e, 0x49, 0x10, 0xd1, 0xbb, 0x89, 0x78, 0xa0, 0x4f, 0x41, 0xa1, 0x21, 0x40, 0xeb,
	0x79, 0xf1, 0xfc, 0xb5, 0x64, 0x3e, 0x89, 0x99, 0x08, 0x95, 0x3f, 0x62, 0x59, 0xfe, 0xf3, 0x34,
	0x14, 0xa2, 0xa6, 0x49, 0x7d, 0xb0, 0x29, 0xbe, 0x11, 0x32, 0x4c, 0xa1, 0x64, 0x5b, 0xe2, 0x7a,
	0xaf, 0x2f, 0x6b, 0x86, 0xd9, 0xb8, 0x45, 0x66, 0xe9, 0x73, 0x4b, 0x97, 0x4d, 0x51, 0xfe, 0x47,
	0x43, 0x90, 0x61, 0x06, 0xda, 0x73, 0x6a, 0x69, 0x03, 0xdc, 0x60, 0x68, 0xd5, 0x7d, 0x87, 0x34,
	0x75, 0x5f, 0xc9, 0x82, 0x1b, 0xd6, 0xb6, 0xe0, 0x24, 0x83, 0x23, 0xad, 0x6d, 0x70, 0x48, 0x56,
	0x55, 0x46, 0xd7, 0xaa, 0x9a, 0xcf, 0xf1, 0x4f, 0x53, 0xfe, 0xf5, 0x21, 0x28, 0x84, 0x0e, 0xa9,
	0xc7, 0xd9, 0x8d, 0x39, 0x2f, 0x49, 0xbe, 0x8c, 0x4a, 0x1e, 0x62, 0x14, 0xbf, 0x10, 0x74, 0xb3,
	0xd7, 0xa4, 0x5c, 0x98, 0xb3, 0xda, 0xb9, 0x30, 0xb7, 0xcd, 0xc6, 0xf4, 0xf7, 0x14, 0xa1, 0xb8,
	0xde, 0xdc, 0x88, 0x22, 0xcb, 0x83, 0x24, 0x98, 0xc7, 0x32, 0x09, 0xe6, 0x4e, 0x98, 0xdd, 0x51,
	0xe8, 0x9c, 0x3b, 0x2a, 0x2f, 0x96, 0x0e, 0xe9, 0x1d, 0x57, 0xa3, 0x2c, 0x09, 0xe8, 0x9c, 0x9c,
	0x20, 0xdb, 0x58, 0x51, 0x92, 0x04, 0xc7, 0xbe, 0x1d, 0x51, 0xf2, 0xa9, 0x30, 0x20, 0x91, 0xab,
	0x61, 0x77, 0x74, 0xbd, 0xa4, 0x18, 0xd1, 0x0e, 0x7d, 0x1e, 0xf2, 0x55, 0xcf, 0x0e, 0xb0, 0x67,
	0x9b, 0x6a, 0x1e, 0x89, 0x68, 0x43, 0x0a, 0x3a, 0x74, 0x16, 0x32, 0xd8, 0xf3, 0x68, 0x8f, 0x4c,
	0x25, 0x9f, 0x1f, 0x1d, 0x8c, 0xee, 0x40, 0xae, 0xba, 0x6d, 0x3a, 0x0e, 0x16, 0x69, 0x30, 0xcf,
	0xa9, 0xbc, 0xfd, 0x99, 0x05, 0x46, 0x23, 0x79, 0xa2, 0xd9, 0x05, 0xf4, 0x11, 0x18, 0x0e, 0xcc,
	0x2d, 0x5e, 0xa5, 0xdf, 0x2d, 0xa1, 0x9d, 0x0c, 0x2d, 0xff, 0xda, 0x30, 0xe4, 0x38, 0xbb, 0x7e,
	0x90, 0xc9, 0xab, 0x31, 0x78, 0xd7, 0x97, 0x54, 0xde, 0x26, 0x7f, 0xfa, 0x36, 0x38, 0xaf, 0x2f,
	0x43, 0x1e, 0x3b, 0x16, 0xf3, 0x19, 0x28, 0x24, 0xd5, 0x86, 0x83, 0x89, 0x66, 0xdc, 0x30, 0x77,
	0x6b, 0xae, 0x69, 0xa9, 0x6a, 0xc6, 0x7c, 0x38, 0x3a, 0x0f, 0xd9, 0x6d, 0x6c, 0x5a, 0x14, 0xc8,
	0x5f, 0x25, 0x4b, 0x9d, 0x8f, 0x4e, 0x78, 0x26, 0x48, 0x6f, 0x62, 0xfa, 0xc7, 0xc6, 0xa1, 0x10,
	0xd6, 0xd2, 0x0d, 0x0e, 0x84, 0x01, 0xba, 0x4d, 0x52, 0x74, 0x9b, 0x1b, 0xe1, 0xa1, 0xc2, 0xcc,
	0xa1, 0x17, 0x3a, 0x15, 0x4a, 0x84, 0x2b, 0x6e, 0x1f, 0x2c, 0x9a, 0x05, 0xc8, 0x4b, 0xad, 0x95,
	0xb5, 0x72, 0xd4, 0x42, 0x42, 0xb4, 0xc0, 0xc3, 0x17, 0xc5, 0x64, 0xdd, 0xf5, 0x59, 0x3c, 0xa3,
	0xa5, 0x38, 0xb9, 0xa4, 0x5f, 0x9c, 0x7c, 0x1d, 0xf2, 0xcc, 0xff, 0x4f, 0x1b, 0x17, 0x75, 0x4e,
	0x15, 0x13, 0xaf, 0x84, 0x1f, 0x74, 0x55, 0x6c, 0x84, 0xb4, 0xe8, 0x16, 0x80, 0xed, 0x6c, 0x79,
	0xd8, 0xb2, 0x23, 0x14, 0x98, 0xe7, 0x54, 0x38, 0x09, 0x1a, 0x43, 0xa2, 0x2f, 0xff, 0xff, 0x87,
	0x21, 0x2f, 0x26, 0xe9, 0xc7, 0x42, 0xf4, 0x54, 0xa2, 0xec, 0xdc, 0x2c, 0x7e, 0xd0, 0xb0, 0xbd,
	0x5d, 0xd5, 0x20, 0x94, 0xc1, 0xc7, 0x1f, 0x04, 0xca, 0x47, 0xf9, 0x0f, 0xd3, 0x00, 0xd1, 0xc7,
	0xea, 0x87, 0x6f, 0x72, 0x51, 0x7a, 0x2b, 0x69, 0x05, 0x57, 0xa8, 0xe4, 0x79, 0xdd, 0x84, 0x82,
	0x2f, 0x96, 0x30, 0xff, 0x1a, 0xb3, 0x3a, 0x6b, 0x3d, 0xba, 0x48, 0x0e, 0xf8, 0x16, 0x8b, 0x3e,
	0x62, 0x5d, 0xfe, 0xb3, 0x14, 0x94, 0x62, 0x43, 0xfb, 0xb0, 0x1e, 0x7e, 0x44, 0x7a, 0x97, 0xb3,
	0x57, 0x24, 0x6d, 0x41, 0x9f, 0xf1, 0xf4, 0x97, 0x4e, 0xc0, 0xe8, 0x7a, 0xb3, 0xd1, 0xa8, 0xed,
	0x2e, 0xe2, 0x9a, 0xbd, 0x83, 0xbd, 0xdd, 0x81, 0xbe, 0x30, 0xd0, 0x17, 0x44, 0x38, 0x5b, 0x57,
	0xe0, 0xee, 0x42, 0x7e, 0xc3, 0xf4, 0xb1, 0x55, 0xa1, 0xad, 0xb8, 0x15, 0x01, 0x66, 0x2e, 0xe9,
	0x35, 0xec, 0x67, 0xab, 0x35, 0xc4, 0x17, 0xa3, 0xf3, 0xad, 0x3a, 0xe8, 0xcb, 0x29, 0xa2, 0xa8,
	0x7b, 0x41, 0xc5, 0xdd, 0xe4, 0x1a, 0x86, 0xc2, 0xd4, 0x1e, 0x9d, 0xfa, 0xbc, 0xde, 0xd4, 0x62,
	0xa3, 0xe8, 0xa1, 0xb1, 0x51, 0x2c, 0x69, 0xb3, 0x1a, 0x50, 0x34, 0xb6, 0x60, 0x75, 0x13, 0x2d,
	0xb7, 0xf4, 0x0f, 0x6f, 0x9f, 0x75, 0x1a, 0x9b, 0x75, 0x1f, 0xe5, 0x4a, 0x6a, 0x19, 0x59, 0x3a,
	0xaa, 0x96, 0x91, 0x02, 0xa1, 0x65, 0x34, 0x09, 0x42, 0xcb, 0x47, 0xa1, 0xe4, 0x93, 0x87, 0xb2,
	0xb1, 0x55, 0xb1, 0x03, 0x5c, 0xe7, 0x46, 0xf3, 0x4b, 0x6a, 0x6f, 0x80, 0xfd, 0xb4, 0xb1, 0xb5,
	0x12, 0xe0, 0xba, 0x51, 0xf4, 0xa5, 0x5f, 0xe8, 0x63, 0x00, 0x6e, 0xb5, 0xda, 0xf4, 0x98, 0x5c,
	0x1e, 0xef, 0xe2, 0xc3, 0x8f, 0xb3, 0x5d, 0x0d, 0x09, 0xc3, 0xa4, 0x28, 0x89, 0x19, 0xfa, 0xe9,
	0x14, 0xe4, 0xf9, 0x5c, 0xa2, 0xe8, 0x44, 0xe1, 0x3d, 0x07, 0xc9, 0x21, 0xcd, 0x7a, 0x68, 0x3b,
	0x19, 0xde, 0x28, 0x7a, 0x9b, 0xaa, 0xbb, 0x81, 0xed, 0x98, 0x12, 0x9e, 0xfe, 0xc1, 0x63, 0x0d,
	0xde, 0x72, 0x59, 0xbd, 0x90, 0x21, 0xcf, 0x46, 0xc4, 0x01, 0xc7, 0x3c, 0x14, 0xc0, 0x7a, 0x87,
	0x0c, 0x02, 0x17, 0x4e, 0x57, 0xfe, 0x6f, 0x33, 0x50, 0x94, 0xd7, 0x49, 0x7f, 0xa8, 0xc4, 0xad,
	0xea, 0x97, 0x3e, 0xf4, 0xdc, 0x5d, 0x48, 0xd3, 0x1d, 0x97, 0xe9, 0x52, 0xbc, 0xdd, 0x7e, 0xc7,
	0xcd, 0x90, 0x7f, 0x22, 0x48, 0x2e, 0xc2, 0xad, 0xfc, 0x9b, 0x43, 0x90, 0xa6, 0x6f, 0xf9, 0x70,
	0x94, 0xad, 0x3f, 0x4e, 0x25, 0xd2, 0xb6, 0x7e, 0x94, 0x01, 0x91, 0x9e, 0x51, 0x5d, 0x4a, 0xb7,
	0xb1, 0xc5, 0xcb, 0xde, 0x12, 0xaa, 0x69, 0x49, 0xf0, 0x48, 0xe3, 0xaa, 0x5d, 0x96, 0x7d, 0x9e,
	0xf2, 0x3f, 0x4d, 0x01, 0x44, 0xf2, 0xe8, 0x21, 0x22, 0x9d, 0x49, 0x41, 0xff, 0x61, 0xbd, 0xa0,
	0xff, 0x7c, 0x51, 0x96, 0xc5, 0xb3, 0xf3, 0x92, 0x9e, 0x9a, 0xf0, 0xc0, 0x9d, 0xfe, 0x99, 0x27,
	0x89, 0x72, 0x2f, 0x1d, 0xff, 0x03, 0x5d, 0x75, 0xa0, 0xab, 0x26, 0xd5, 0x55, 0x95, 0x7d, 0x5b,
	0xb1, 0x15, 0xd7, 0xd5, 0xb7, 0x95, 0x4a, 0xe6, 0xdb, 0xba, 0x01, 0xf9, 0x86, 0x67, 0xbb, 0x9e,
	0x4d, 0xd1, 0xf1, 0x3b, 0x82, 0xe3, 0xf2, 0x3b, 0x59, 0xe3, 0xc3, 0xd9, 0x6a, 0x11, 0xc4, 0xe8,
	0x2e, 0x14, 0x5d, 0xcf, 0xc2, 0x9e, 0x50, 0xad, 0x4a, 0x2a, 0x3a, 0x10, 0x67, 0x39, 0xb3, 0xca,
	0x28, 0xa9, 0x62, 0x35, 0xe2, 0x46, 0x3f, 0xd0, 0x47, 0x63, 0x7a, 0xd5, 0xa8, 0x8a, 0xc2, 0x1a,
	0xf2, 0xec, 0xac, 0x56, 0xcd, 0xc1, 0x88, 0xd9, 0x0c, 0xb6, 0x5d, 0x8f, 0x59, 0x0d, 0x63, 0x8a,
	0x8e, 0x1a, 0x10, 0x44, 0xab, 0x0e, 0xba, 0x4d, 0x4e, 0x07, 0x3a, 0x19, 0xf6, 0xb8, 0xce, 0xa7,
	0xf6, 0x31, 0xc5, 0xab, 0xc4, 0x9e, 0x11, 0x71, 0x20, 0x5a, 0x8b, 0xa4, 0xe7, 0x0d, 0x1f, 0x7e,
	0x93, 0xf0, 0x48, 0x5b, 0xbb, 0x15, 0x46, 0xc0, 0x50, 0xb7, 0x30, 0x52, 0xfc, 0x31, 0x08, 0x4d,
	0xf8, 0x7a, 0x45, 0x3c, 0xec, 0x67, 0x52, 0x50, 0xb4, 0x98, 0xec, 0xac, 0x6c, 0x7a, 0x6e, 0x9d,
	0xe7, 0x92, 0x2a, 0x3c, 0x4d, 0x23, 0xf9, 0xd3, 0x24, 0xd7, 0x1b, 0xe9, 0x8d, 0x5e, 0xf7, 0xdc,
	0x3a, 0xfa, 0x93, 0x14, 0x80, 0xb8, 0xf1, 0xc0, 0xe5, 0xc9, 0xab, 0x0a, 0xb7, 0xfd, 0xc5, 0xd4,
	0x51, 0xdf, 0x77, 0x32, 0x2b, 0xaa, 0xc0, 0x1f, 0xee, 0xae, 0x5b, 0xfe, 0x85, 0x0c, 0x8c, 0x48,
	0xbb, 0xae, 0x1f, 0xd4, 0xd4, 0xc5, 0x3d, 0x6a, 0x6a, 0xd7, 0x24, 0xcd, 0x28, 0x10, 0x2b, 0x35,
	0xbc, 0x97, 0x15, 0xd5, 0xf3, 0xda, 0xf2, 0x6b, 0xa0, 0xa6, 0x0e, 0xd4, 0x54, 0x7d, 0x35, 0xb5,
	0xfc, 0xa5, 0x0c, 0x14, 0xc2, 0x53, 0xa1, 0x1f, 0x76, 0xe3, 0x57, 0x86, 0x20, 0x63, 0x6e, 0x31,
	0xe4, 0x1e, 0xc5, 0x05, 0xf9, 0x85, 0x21, 0xa9, 0x8d, 0xc3, 0x11, 0xbb, 0x2e, 0x92, 0xb7, 0x8e,
	0x50, 0x76, 0x20, 0xf2, 0x46, 0x68, 0x6b, 0xd8, 0xf3, 0xf9, 0x7c, 0x9a, 0x7b, 0xc1, 0x60, 0x2f,
	0x14, 0x7d, 0x06, 0x8a, 0xae, 0x53, 0xd9, 0xc0, 0xdb, 0xe6, 0xff, 0xc7, 0xde, 0xd7, 0x3c, 0xc7,
	0x71, 0x5c, 0x87, 0x13, 0x1f, 0xbb, 0x58, 0xf4, 0x02, 0x04, 0xd8, 0x24, 0xa5, 0xd5, 0xca, 0x96,
	0x6d, 0xfa, 0x27, 0x5b, 0xd2, 0xcf, 0xa2, 0x29, 0x92, 0xa2, 0x68, 0x50, 0x22, 0x8d, 0x2f, 0x02,
	0x90, 0x08, 0x02, 0x1a, 0x90, 0xfe, 0x8a, 0xa5, 0xf5, 0x60, 0xa6, 0x17, 0x68, 0x71, 0x76, 0x66,
	0x34, 0x33, 0x0b, 0x11, 0x76, 0xe5, 0x60, 0xbb, 0xca, 0x95, 0x4b, 0x7c, 0x49, 0xaa, 0xec, 0x53,
	0xce, 0x71, 0xa5, 0x2a, 0xce, 0x21, 0x4e, 0x2a, 0xb7, 0x94, 0x2b, 0x29, 0x1f, 0x92, 0x4a, 0x95,
	0x9d, 0x54, 0x2a, 0xa9, 0x1c, 0x9d, 0x8f, 0x4b, 0x4e, 0xa9, 0xfc, 0x01, 0xa9, 0xd7, 0x5f, 0xd3,
	0xb3, 0x0b, 0xf4, 0xcc, 0x2c, 0x40, 0x25, 0x5e, 0xee, 0x05, 0xb5, 0xd3, 0x78, 0xef, 0x4d, 0x4f,
	0x7f, 0xbc, 0xaf, 0x7e, 0xaf, 0x9f, 0xd7, 0x6e, 0x05, 0xed, 0x3c, 0x05, 0xfd, 0x74, 0x94, 0x05,
	0x14, 0xf8, 0x4b, 0xec, 0x8d, 0x5b, 0xed, 0xe6, 0xaf, 0xc7, 0x50, 0x95, 0xcb, 0xfe, 0x27, 0xc4,
	0xd1, 0x0e, 0x07, 0x62, 0x68, 0x25, 0x7d, 0x47, 0xd2, 0xe6, 0xc8, 0xb2, 0x98, 0x9a, 0x54, 0x85,
	0x16, 0x16, 0x35, 0xcb, 0x71, 0x30, 0x2f, 0xf1, 0xa5, 0x3f, 0xdc, 0x42, 0x93, 0x0f, 0xec, 0xf8,
	0xd1, 0xc8, 0x5e, 0x1c, 0xd9, 0x8b, 0x83, 0xc6, 0x42, 0x6c, 0x81, 0x4e, 0xaa, 0x6e, 0x78, 0xcc,
	0x29, 0xad, 0x06, 0x8b, 0xed, 0xb2, 0x7e, 0x09, 0x9a, 0xb4, 0x7c, 0x52, 0x12, 0x38, 0xd1, 0x0e,
	0x4b, 0xea, 0x4f, 0xa8, 0x06, 0x8c, 0x9a, 0x1f, 0x75, 0x4e, 0xb2, 0x89, 0xe6, 0xd9, 0x25, 0x35,
	0x7a, 0xb1, 0xa2, 0x99, 0xc2, 0x06, 0xf4, 0x1c, 0xc3, 0xd5, 0x0a, 0x15, 0xf9, 0xe9, 0xa9, 0xcb,
	0x6c, 0xd1, 0x6f, 0xb8, 0xca, 0xbe, 0xa1, 0x70, 0xbd, 0x2e, 0x18, 0x4b, 0x75, 0x6a, 0x72, 0xb7,
	0xe7, 0x12, 0xab, 0xcf, 0x99, 0x66, 0xc0, 0x10, 0xde, 0x78, 0x0f, 0xcd, 0xf2, 0x5f, 0x2d, 0x61,
	0x70, 0xcd, 0x95, 0xb3, 0xdc, 0x67, 0x38, 0xb6, 0xe0, 0xbe, 0xdb, 0x68, 0x6e, 0xb7, 0x1b, 0x53,
	0x9f, 0xc4, 0x71, 0x4b, 0x74, 0x6f, 0xbe, 0x1c, 0xbd, 0xb3, 0x12, 0x9f, 0xf7, 0x19, 0x6f, 0xa0,
	0x2a, 0xf5, 0x13, 0x10, 0xdb, 0xfc, 0xa8, 0xe1, 0xe5, 0x1c, 0x6f, 0xc0, 0x06, 0x03, 0xce, 0x7e,
	0x2a, 0x27, 0x90, 0x71, 0x2d, 0xe0, 0x93, 0xb8, 0x16, 0x6e, 0x89, 0xf8, 0x9b, 0xf3, 0x25, 0xcf,
	0x7c, 0x8e, 0x8a, 0xbb, 0xb9, 0x50, 0x3e, 0xee, 0x26, 0x40, 0x95, 0x76, 0xe0, 0x74, 0x63, 0x91,
	0x80, 0xf8, 0x04, 0x37, 0x0b, 0x7f, 0x0f, 0xfe, 0x10, 0x4d, 0xb7, 0x83, 0x48, 0x84, 0xf9, 0x3f,
	0xf3, 0xa4, 0x5f, 0x3a, 0xd1, 0x0e, 0x22, 0xfc, 0xd3, 0xb1, 0x34, 0x2d, 0xe8, 0xd9, 0xa2, 0x6f,
	0x8c, 0xca, 0xd9, 0x01, 0xab, 0x3e, 0xcb, 0x63, 0x14, 0x5a, 0x5a, 0x61, 0x89, 0xba, 0x1a, 0xd2,
	0x38, 0x70, 0xc9, 0x56, 0x7b, 0xd9, 0x8e, 0x48, 0x9a, 0x91, 0xb4, 0x81, 0xe6, 0xc9, 0x63, 0xe2,
	0x74, 0x59, 0x6d, 0x56, 0xa1, 0xbc, 0x37, 0x0a, 0xd6, 0x1b, 0x96, 0x78, 0xa2, 0xde, 0x70, 0x8f,
	0x2b, 0xe8, 0xb9, 0x01, 0x5c, 0x41, 0xab, 0x68, 0x96, 0x55, 0x51, 0x16, 0x22, 0xc0, 0xcd, 0x4d,
	0xb0, 0x54, 0xc5, 0xb9, 0x00, 0x6d, 0x53, 0x60, 0xe1, 0x15, 0xdd, 0xa3, 0xf4, 0x7c, 0x3e, 0xa3,
	0x39, 0xda, 0x91, 0x74, 0x1f, 0x9d, 0x0d, 0x49, 0xd4, 0x0e, 0xa2, 0x0e, 0x89, 0x78, 0xba, 0xd6,
	0x27, 0xca, 0x85, 0xbe, 0xcd, 0x2a, 0x74, 0x16, 0xc9, 0xf2, 0xab, 0x71, 0x54, 0x09, 0x3e, 0xf2,
	0x49, 0x24, 0xf2, 0x2d, 0x0b, 0x2c, 0x8d, 0x1f, 0x8f, 0x0f, 0x5c, 0x23, 0xed, 0x63, 0x56, 0xdf,
	0x07, 0xb7, 0x33, 0x06, 0x53, 0xfc, 0x2d, 0x3e, 0x94, 0xf8, 0x8e, 0x72, 0xb9, 0xbd, 0x50, 0xb2,
	0x16, 0x93, 0xf0, 0xb2, 0xc9, 0xa2, 0x5f, 0x9f, 0x2a, 0x57, 0xf4, 0x0b, 0xff, 0x60, 0x8c, 0xd5,
	0x70, 0x26, 0x07, 0xb6, 0x9f, 0xb4, 0xf6, 0x69, 0x9c, 0x04, 0xd1, 0xa1, 0x28, 0x95, 0x5c, 0x60,
	0x62, 0x6f, 0x96, 0xf3, 0x19, 0x6c, 0x47, 0xc1, 0x01, 0xf1, 0x59, 0x00, 0xe2, 0x9c, 0x7c, 0xe9,
	0x3a, 0x7f, 0x27, 0x7e, 0x1b, 0xd5, 0x23, 0x12, 0x27, 0x91, 0xb8, 0x42, 0x90, 0xe7, 0xb8, 0xbe,
	0x94, 0xb3, 0xdc, 0x15, 0xbc, 0xa5, 0x23, 0xe3, 0x37, 0xe5, 0x4d, 0x5a, 0x97, 0xd8, 0x87, 0x98,
	0x37, 0x4d, 0x9a, 0xd3, 0x26, 0xee, 0xcd, 0xba, 0x85, 0xaa, 0x41, 0x37, 0x01, 0xf4, 0xcf, 0x9a,
	0x0b, 0x73, 0x33, 0xf4, 0x2d, 0x06, 0x6a, 0x09, 0x94, 0xe6, 0x2f, 0xc7, 0x10, 0xd2, 0xee, 0xd3,
	0x16, 0x49, 0xfe, 0x63, 0x85, 0x93, 0xfc, 0xbf, 0x3f, 0x98, 0xf7, 0xe6, 0xcb, 0x6c, 0x22, 0x16,
	0x8a, 0x4e, 0xc4, 0xa2, 0x93, 0xd0, 0x03, 0x9a, 0x1c, 0xa6, 0x4d, 0x59, 0xb3, 0x67, 0x46, 0xd7,
	0x32, 0x47, 0xde, 0x88, 0x5e, 0x6f, 0xc4, 0x88, 0x91, 0x1d, 0xc1, 0xc8, 0xfe, 0x8f, 0x78, 0x23,
	0xfe, 0xa8, 0x82, 0xea, 0x1a, 0x63, 0x18, 0x86, 0xe5, 0xba, 0x0a, 0xac, 0x31, 0x24, 0x7c, 0x96,
	0x62, 0xb1, 0x66, 0x8b, 0x5c, 0x98, 0x62, 0xe9, 0x78, 0xf8, 0x86, 0x72, 0x6b, 0x56, 0x0a, 0x69,
	0x46, 0xd2, 0xa9, 0xf9, 0xcf, 0xe3, 0xc0, 0x92, 0x1c, 0x1a, 0x52, 0x9e, 0x98, 0x5d, 0x50, 0x36,
	0xfc, 0x68, 0xfc, 0x37, 0x67, 0xf5, 0x0e, 0x5a, 0xf5, 0x75, 0xb0, 0xe5, 0x9a, 0x8e, 0x66, 0xf3,
	0xa7, 0x17, 0x87, 0x2c, 0x77, 0x7a, 0x39, 0x93, 0x32, 0x55, 0x3e, 0x3b, 0x82, 0x45, 0xe6, 0x6d,
	0xcb, 0x04, 0xec, 0x8a, 0xf9, 0xfc, 0x31, 0x2b, 0xbf, 0x4d, 0x69, 0xd6, 0xbf, 0xc0, 0x32, 0xcd,
	0x7a, 0x74, 0x0f, 0xd6, 0xe8, 0x1e, 0xac, 0xd1, 0x3d, 0x58, 0xa3, 0x7b, 0xb0, 0x46, 0xf7, 0x60,
	0x8d, 0xee, 0xc1, 0x1a, 0xdd, 0x83, 0x35, 0xba, 0x07, 0x6b, 0x74, 0x0f, 0x56, 0xa1, 0x7b, 0xb0,
	0xd4, 0xc5, 0x2b, 0x3f, 0xb9, 0x88, 0xaa, 0xdc, 0xe7, 0x31, 0x52, 0x57, 0xd5, 0x15, 0xdf, 0x19,
	0x75, 0xf5, 0xe5, 0x02, 0xfe, 0xa2, 0x91, 0xae, 0x3a, 0xd2, 0x55, 0x47, 0xba, 0xea, 0x48, 0x57,
	0x1d, 0xe9, 0xaa, 0x23, 0x5d, 0x75, 0xa4, 0xab, 0x8e, 0x74, 0xd5, 0x91, 0xae, 0xfa, 0x04, 0x74,
	0xd5, 0x85, 0x9b, 0x5a, 0xcc, 0x5e, 0xa9, 0x40, 0x9f, 0x4b, 0x3f, 0x7e, 0x11, 0xa1, 0x07, 0x24,
	0x4e, 0x2c, 0xc2, 0x8a, 0x72, 0x8d, 0x02, 0xf6, 0x46, 0x01, 0x7b, 0x03, 0x26, 0x78, 0xc9, 0x9a,
	0xb8, 0xa8, 0x44, 0x4d, 0xdc, 0x7b, 0x2a, 0xbc, 0xac, 0x9e, 0xe3, 0x00, 0x57, 0x4b, 0xd4, 0x10,
	0x64, 0xf6, 0xbd, 0x31, 0x54, 0x4f, 0x48, 0x9c, 0xb4, 0x78, 0x10, 0x93, 0x50, 0xde, 0x0a, 0x9c,
	0xe0, 0xdc, 0xd6, 0x8e, 0x3c, 0x0b, 0x9f, 0xf1, 0x43, 0x97, 0x76, 0xd8, 0x8b, 0x2c, 0x94, 0xa8,
	0xdf, 0x3c, 0xa7, 0x28, 0xee, 0x7a, 0xf2, 0x72, 0x80, 0x02, 0x9f, 0x64, 0x31, 0xf8, 0xec, 0x27,
	0x71, 0x1a, 0xc0, 0x56, 0x63, 0x27, 0x88, 0xa4, 0x1a, 0x98, 0xa7, 0xe3, 0x5b, 0x1c, 0x1a, 0xdf,
	0x40, 0xd5, 0x84, 0x47, 0xd3, 0xcc, 0x15, 0x9a, 0x0d, 0x01, 0x0d, 0xec, 0x8b, 0xc6, 0x71, 0x97,
	0xb8, 0x85, 0x2b, 0x44, 0x0a, 0x78, 0xbc, 0x8d, 0xea, 0xa1, 0x1d, 0x25, 0xd4, 0xa1, 0xa1, 0xcd,
	0xa2, 0xe8, 0x8c, 0x25, 0x05, 0xd3, 0x6f, 0xbf, 0xbc, 0x9d, 0x62, 0x59, 0x3a, 0x09, 0x7c, 0x1b,
	0x55, 0x62, 0x92, 0x74, 0x43, 0xa1, 0x16, 0xbe, 0x54, 0x80, 0xd6, 0x0e, 0xc0, 0x5b, 0x1c, 0x8d,
	0x5d, 0x99, 0x40, 0xe2, 0x44, 0x64, 0xc2, 0x7f, 0xbe, 0x00, 0x3a, 0xfb, 0xc9, 0x90, 0xf0, 0x1a,
	0xaa, 0x25, 0xc4, 0x8e, 0x98, 0xe1, 0x71, 0xc1, 0x1c, 0xc4, 0x97, 0x21, 0xc0, 0x51, 0x2c, 0x85,
	0xdc, 0xfc, 0xfd, 0x09, 0x54, 0xd7, 0x3e, 0x71, 0x18, 0x5c, 0x09, 0xef, 0x66, 0x5c, 0x09, 0xaf,
	0xe7, 0x8f, 0x8b, 0xf6, 0xfd, 0xc7, 0x5c, 0x17, 0xf8, 0x7a, 0xd1, 0xf2, 0xdb, 0x7a, 0xc1, 0x43,
	0x8a, 0x6f, 0xa2, 0x29, 0x97, 0xc6, 0xa1, 0x67, 0x1f, 0x16, 0xbd, 0x2c, 0x50, 0x80, 0x37, 0xff,
	0xa9, 0x8e, 0x2a, 0x6c, 0xb5, 0x0c, 0xc3, 0x84, 0x3c, 0x40, 0x55, 0x9b, 0x07, 0x13, 0xf1, 0x6a,
	0xd1, 0xd7, 0x8b, 0x6e, 0x15, 0xfe, 0x77, 0xd1, 0xc9, 0x14, 0x8e, 0x16, 0xb4, 0x9a, 0x3f, 0x9b,
	0x46, 0x75, 0xed, 0xff, 0xc3, 0x30, 0x50, 0xdf, 0x44, 0xd3, 0x41, 0x48, 0x84, 0x5d, 0xc1, 0x97,
	0xef, 0xed, 0x41, 0xc6, 0xea, 0xf2, 0x96, 0xa4, 0x62, 0xa5, 0x04, 0xf1, 0xd7, 0xd1, 0x8c, 0x1d,
	0xc7, 0x24, 0x92, 0x55, 0xa3, 0xf8, 0x6a, 0xbe, 0x35, 0xd0, 0x0b, 0x16, 0x19, 0x21, 0xab, 0xca,
	0x09, 0x36, 0x7f, 0x6f, 0x02, 0x4d, 0xab, 0x77, 0x0e, 0xc3, 0x4c, 0x58, 0x4a, 0x4a, 0xf2, 0x69,
	0xb8, 0x9a, 0x3f, 0x4a, 0x7c, 0x64, 0x0c, 0xb2, 0x72, 0x01, 0x4d, 0x75, 0x48, 0x1c, 0x83, 0x62,
	0x58, 0x29, 0x5a, 0x4f, 0x57, 0x20, 0xe0, 0x6b, 0xa8, 0xea, 0xb2, 0xb2, 0xc3, 0x82, 0x91, 0x98,
	0x2b, 0xd8, 0x72, 0x50, 0x98, 0x95, 0x2a, 0x9f, 0xa8, 0xd1, 0x94, 0x9c, 0xfe, 0x94, 0xdc, 0xe8,
	0x99, 0x92, 0x5c, 0x1d, 0x46, 0xcc, 0xca, 0x1f, 0x54, 0xd1, 0x24, 0x74, 0x71, 0x18, 0xe6, 0xe4,
	0x6a, 0xe6, 0xae, 0xf4, 0x62, 0x3a, 0x75, 0x4f, 0xe4, 0x7f, 0xa5, 0x7c, 0xe4, 0xbf, 0xa5, 0xe4,
	0x09, 0x37, 0x73, 0xae, 0x16, 0xd4, 0x9d, 0xd8, 0x9f, 0x63, 0xa4, 0xc9, 0xef, 0x4c, 0x70, 0x3b,
	0x73, 0x24, 0x4c, 0xfe, 0xd7, 0x85, 0xc9, 0xbf, 0x4d, 0xa2, 0x9a, 0xd4, 0x54, 0x87, 0x61, 0x22,
	0xbe, 0xd1, 0xa3, 0xfe, 0x2c, 0x94, 0xd0, 0xd4, 0xd5, 0x8f, 0x63, 0x96, 0xed, 0x5f, 0x8c, 0xa3,
	0xb3, 0x59, 0x90, 0x61, 0x18, 0x31, 0xf7, 0xd4, 0x97, 0xae, 0x1a, 0xb8, 0x94, 0xf0, 0xc2, 0x6d,
	0xcd, 0x29, 0x55, 0xca, 0xaa, 0xe6, 0xaf, 0xbb, 0xf4, 0xc7, 0x5d, 0xce, 0x32, 0x84, 0x61, 0x3d,
	0x72, 0x4d, 0x3d, 0x95, 0xae, 0x29, 0x51, 0x0b, 0x7f, 0xba, 0x64, 0x2d, 0xfc, 0xac, 0x47, 0x0b,
	0x0d, 0x78, 0x9f, 0xf1, 0xd4, 0x01, 0x89, 0xd8, 0x17, 0xd4, 0x8b, 0x99, 0x97, 0x02, 0x1c, 0x2f,
	0x08, 0xb9, 0x5d, 0xae, 0xb0, 0x82, 0xac, 0xfa, 0x5e, 0x49, 0x68, 0xe2, 0x91, 0xa2, 0x65, 0x50,
	0x19, 0x30, 0xde, 0xec, 0x49, 0xd4, 0x7c, 0xf5, 0xd8, 0x03, 0x83, 0xee, 0xae, 0x27, 0xee, 0xb3,
	0x30, 0xb8, 0xd2, 0x96, 0xd1, 0x0c, 0x79, 0x1c, 0x92, 0x88, 0xb2, 0xd2, 0xc5, 0xb2, 0xcc, 0x42,
	0xde, 0x41, 0xba, 0x95, 0x41, 0xc2, 0xd7, 0xc5, 0xb9, 0x78, 0x51, 0x5f, 0x12, 0x3f, 0x19, 0x7f,
	0x13, 0x4d, 0x87, 0xd0, 0xc7, 0x78, 0x5f, 0x5d, 0xfc, 0x98, 0x5b, 0x44, 0x56, 0x21, 0xe0, 0x3b,
	0x69, 0x1d, 0x0d, 0xcc, 0x56, 0xdd, 0x8b, 0x39, 0xe7, 0x5e, 0x2b, 0x4c, 0x6b, 0x4c, 0x0b, 0x69,
	0x2c, 0x65, 0xd5, 0xa7, 0xf3, 0x05, 0xd5, 0xd6, 0x8c, 0x02, 0xb5, 0x8a, 0xea, 0xdd, 0x98, 0x9d,
	0x06, 0xb2, 0xdd, 0x7c, 0xc1, 0x5c, 0xd0, 0xe3, 0x61, 0xcc, 0x18, 0x01, 0x83, 0xb5, 0x50, 0x37,
	0x96, 0xbf, 0xf1, 0x3b, 0x68, 0xe6, 0x83, 0x6e, 0x44, 0x63, 0x57, 0xa4, 0x0a, 0x5d, 0x2c, 0x97,
	0xce, 0x96, 0x41, 0x06, 0x55, 0x3c, 0xec, 0x46, 0x61, 0x10, 0xcb, 0xdc, 0xca, 0x02, 0xaa, 0xb8,
	0x40, 0xc0, 0xb7, 0x81, 0xbf, 0x84, 0x87, 0x11, 0xdd, 0xdb, 0x97, 0xc7, 0x89, 0xf9, 0xd8, 0x29,
	0x0a, 0x5e, 0x44, 0xd5, 0x20, 0xa2, 0x7b, 0xd4, 0x6f, 0x34, 0xcc, 0xcc, 0x29, 0x65, 0xf7, 0x97,
	0xb7, 0x18, 0x82, 0x25, 0x10, 0xf1, 0x76, 0xf6, 0x62, 0xcd, 0xe7, 0xf2, 0xfd, 0x8b, 0x82, 0xce,
	0x4a, 0x8a, 0x95, 0xbd, 0x2d, 0x73, 0x0d, 0xd5, 0x80, 0xf3, 0xb3, 0x33, 0xa3, 0x66, 0xbe, 0x8b,
	0x4f, 0x90, 0xdb, 0x14, 0x28, 0x96, 0x42, 0xc6, 0x2b, 0x68, 0xaa, 0x4d, 0x1f, 0xb3, 0x43, 0xa3,
	0xe7, 0xcd, 0xf7, 0xd3, 0x6b, 0x74, 0xee, 0x72, 0x0c, 0x4b, 0xa2, 0xe2, 0x18, 0x4d, 0x85, 0x51,
	0xd0, 0xa6, 0x9e, 0x4c, 0x5b, 0x7c, 0x92, 0xd9, 0xe9, 0xe2, 0x4d, 0x30, 0x06, 0xaa, 0xa6, 0xd2,
	0x27, 0xd9, 0x5b, 0x8b, 0x8c, 0xc1, 0x57, 0x04, 0x8a, 0x56, 0x5e, 0xee, 0x96, 0xa8, 0xdd, 0xfe,
	0x42, 0xbe, 0xb3, 0x55, 0x10, 0xd1, 0x6a, 0xb6, 0xaf, 0xa0, 0x29, 0x26, 0x72, 0x49, 0x22, 0xb2,
	0xfa, 0x5e, 0x29, 0x88, 0x1f, 0x93, 0xc4, 0x92, 0xa8, 0xa9, 0xbf, 0xf8, 0xd3, 0xf9, 0xfe, 0x62,
	0x41, 0xe3, 0x48, 0x7f, 0xf1, 0x67, 0x0a, 0x7f, 0xc2, 0x31, 0xfe, 0xe2, 0x4b, 0x85, 0x17, 0xd3,
	0x11, 0xfe, 0xe2, 0xbf, 0x1d, 0x47, 0x55, 0xbe, 0xf4, 0x87, 0x41, 0xd1, 0x7c, 0x0b, 0x55, 0xa8,
	0xef, 0x92, 0xc7, 0x05, 0xab, 0xa7, 0x29, 0x31, 0xc4, 0xb1, 0xf0, 0x97, 0xd3, 0x3d, 0x51, 0x29,
	0x12, 0x05, 0x91, 0x56, 0xf6, 0x11, 0x68, 0xcd, 0x5f, 0x8e, 0xa3, 0xba, 0xc6, 0x01, 0x46, 0x63,
	0x7a, 0x0a, 0x63, 0xfa, 0x83, 0x3a, 0xaa, 0x49, 0x36, 0x38, 0x1c, 0x17, 0xa8, 0x4d, 0x7a, 0xd4,
	0x7f, 0x24, 0xac, 0xc7, 0x2b, 0x25, 0x84, 0xc0, 0xe5, 0x7b, 0xd4, 0x7f, 0x64, 0x31, 0x6c, 0xfc,
	0x3e, 0x42, 0x8e, 0x1d, 0xda, 0xbb, 0xd4, 0xa3, 0xc9, 0xa1, 0x28, 0x50, 0x77, 0xa3, 0x0c, 0xad,
	0x65, 0x85, 0xad, 0x86, 0x5c, 0xa3, 0xd8, 0xfc, 0xf9, 0x38, 0x9a, 0x84, 0xd7, 0x0d, 0xc3, 0x88,
	0x0b, 0x9d, 0x7e, 0xb2, 0xa4, 0x4e, 0x7f, 0x62, 0xcf, 0x56, 0xf3, 0x6f, 0x2a, 0x08, 0xa5, 0xe3,
	0x3c, 0x0c, 0x43, 0x79, 0x0b, 0xd5, 0x22, 0xf2, 0x61, 0x97, 0x46, 0xc4, 0xcd, 0x63, 0x08, 0x52,
	0x49, 0x57, 0x08, 0xf8, 0x2d, 0x34, 0x7d, 0x60, 0x7b, 0x14, 0xd4, 0x6e, 0x37, 0xaf, 0x46, 0xa5,
	0xc4, 0x4e, 0x31, 0x7a, 0xe7, 0xa3, 0x5a, 0xde, 0xd3, 0xf8, 0x86, 0x52, 0x0c, 0xb9, 0xb1, 0x99,
	0xc7, 0xcc, 0x94, 0x3a, 0xb8, 0x98, 0x55, 0x07, 0x6b, 0x85, 0x58, 0x61, 0x56, 0xff, 0xfb, 0xa2,
	0xd8, 0xf6, 0xfc, 0x7a, 0x22, 0xa3, 0x9d, 0xcf, 0x77, 0xf8, 0x0f, 0xc7, 0xd0, 0x8c, 0xda, 0x90,
	0x94, 0xc8, 0x8b, 0x6c, 0x0b, 0xe8, 0x69, 0x6b, 0x5a, 0x7c, 0xc1, 0xad, 0xc2, 0x15, 0x0c, 0xd4,
	0x3a, 0x05, 0x3b, 0x8d, 0x55, 0xff, 0xb5, 0x32, 0xef, 0x6f, 0xfe, 0xf5, 0x04, 0x9a, 0x12, 0x7a,
	0xe4, 0x30, 0x2c, 0xe5, 0x3b, 0x08, 0xd9, 0xdd, 0x24, 0x70, 0x22, 0x92, 0x06, 0x53, 0xe7, 0x2e,
	0x47, 0x0d, 0x45, 0x12, 0x70, 0x89, 0x47, 0x12, 0x52, 0x74, 0x3d, 0x6b, 0x28, 0xb8, 0x0b, 0x9b,
	0x89, 0xeb, 0xc8, 0x62, 0x35, 0x3f, 0x41, 0x25, 0x5c, 0xbd, 0xaa, 0xf9, 0xa7, 0x15, 0x54, 0x93,
	0x3a, 0xf5, 0x30, 0x4c, 0xe4, 0x42, 0x99, 0x53, 0x8b, 0x1e, 0xef, 0xc7, 0x72, 0x4f, 0x19, 0xf2,
	0x82, 0x5c, 0x7e, 0x46, 0x20, 0xf1, 0x74, 0x82, 0x93, 0x33, 0xa6, 0xdb, 0x08, 0x91, 0xc7, 0x61,
	0x44, 0x62, 0xe1, 0x09, 0x2b, 0x42, 0x40, 0xc3, 0xc0, 0x8b, 0x68, 0x86, 0x97, 0x17, 0x6c, 0xb5,
	0x29, 0xf1, 0x5c, 0xc1, 0xa0, 0x72, 0xbb, 0xc0, 0x71, 0xee, 0x02, 0x0a, 0xbe, 0x8a, 0x26, 0xf7,
	0xa9, 0x9f, 0x08, 0xcf, 0x57, 0xee, 0xd9, 0x0f, 0xc0, 0x02, 0x4e, 0x68, 0x27, 0xfb, 0x45, 0x63,
	0xb0, 0x00, 0x16, 0xbf, 0x81, 0xa6, 0xf9, 0x3a, 0x6c, 0xa9, 0x48, 0x79, 0x63, 0x49, 0x71, 0x0e,
	0xbc, 0xe1, 0x36, 0x7f, 0x55, 0x41, 0x93, 0x60, 0x85, 0x0d, 0xc3, 0x92, 0xfd, 0x8e, 0xb6, 0xf3,
	0x0b, 0x5f, 0x95, 0xf1, 0xa6, 0xc6, 0xd6, 0x4f, 0xb0, 0xff, 0xf1, 0x1a, 0xaa, 0xb0, 0x22, 0xe3,
	0x42, 0x6b, 0x7c, 0xad, 0xa0, 0xf5, 0xcb, 0xfe, 0xb0, 0xa4, 0x70, 0x8b, 0xe3, 0x37, 0xff, 0x72,
	0x1c, 0x4d, 0xab, 0xc6, 0xa7, 0x9d, 0x93, 0x5c, 0xcf, 0x26, 0x2b, 0xe5, 0xfa, 0x51, 0x79, 0x4e,
	0xd2, 0x3f, 0xd6, 0xd0, 0x94, 0x70, 0x2d, 0x8c, 0xd6, 0xf5, 0x09, 0xd7, 0xb5, 0x25, 0x9c, 0x42,
	0xc5, 0x8d, 0x21, 0x31, 0xf2, 0xca, 0xb9, 0xd3, 0xf5, 0xb4, 0x48, 0x31, 0xa0, 0xd5, 0xfc, 0xb3,
	0x0a, 0xaa, 0x6b, 0xff, 0x1d, 0x0e, 0x15, 0x9e, 0xf9, 0xb0, 0x80, 0xfd, 0x16, 0xaf, 0x89, 0x5e,
	0x05, 0x94, 0x0d, 0x17, 0xbf, 0x97, 0xe5, 0x1d, 0x6b, 0x83, 0x0d, 0xb2, 0xfe, 0x3b, 0xc3, 0x51,
	0x7e, 0x31, 0x8e, 0xe6, 0x7b, 0xff, 0x37, 0x62, 0x2c, 0x83, 0x30, 0x96, 0x1f, 0x5d, 0x79, 0x5a,
	0x23, 0x0e, 0x75, 0x67, 0xab, 0x31, 0xe2, 0xf0, 0xbf, 0x5f, 0x7d, 0xea, 0x23, 0x0e, 0x8f, 0x1b,
	0xab, 0x53, 0x0b, 0x12, 0x39, 0xf6, 0x05, 0x3d, 0x41, 0x22, 0x3f, 0x9b, 0x19, 0xb2, 0x88, 0xc3,
	0xab, 0x99, 0xa8, 0xe5, 0xbc, 0x22, 0xef, 0x3c, 0x2c, 0x79, 0x4d, 0x93, 0x9e, 0x15, 0xb3, 0x57,
	0xff, 0xee, 0xfa, 0x86, 0xc5, 0xa4, 0x21, 0x71, 0x65, 0x8c, 0xb3, 0x26, 0x09, 0xaf, 0xa3, 0x8a,
	0x67, 0xef, 0x92, 0xa2, 0xa1, 0x6c, 0x1c, 0xb8, 0xd7, 0x8c, 0x99, 0x2a, 0x6f, 0xc6, 0xdc, 0x81,
	0x7d, 0xca, 0x32, 0x12, 0x6b, 0x79, 0x19, 0x89, 0xec, 0xf2, 0x5a, 0xd5, 0x75, 0x81, 0x86, 0xdf,
	0x46, 0x2c, 0x1f, 0x90, 0xf8, 0x09, 0xbf, 0x51, 0x73, 0xba, 0x1c, 0x99, 0xba, 0x93, 0x36, 0xf4,
	0xfa, 0x6c, 0xd0, 0x00, 0x3e, 0x9b, 0x4d, 0x84, 0x89, 0xef, 0x04, 0x2e, 0x69, 0x89, 0x6b, 0x3f,
	0x5b, 0xdd, 0xc8, 0x13, 0x46, 0x4b, 0xae, 0xa5, 0x3f, 0xcf, 0x51, 0xc5, 0x05, 0x7f, 0x0f, 0x23,
	0x4f, 0x73, 0x3f, 0xcd, 0x14, 0xeb, 0x8c, 0x74, 0x3f, 0xdd, 0x40, 0x55, 0x26, 0x1f, 0xe3, 0x82,
	0x87, 0xf4, 0x02, 0x1a, 0xc7, 0xe8, 0xac, 0xec, 0xb8, 0xa8, 0x55, 0xcf, 0x2b, 0x5a, 0xdf, 0x3b,
	0x19, 0x4f, 0x90, 0xf7, 0xa1, 0xae, 0x33, 0x9a, 0xd6, 0x6c, 0xa4, 0x3f, 0xe2, 0x2f, 0x21, 0x24,
	0x5f, 0x4a, 0x5d, 0x71, 0x92, 0x6f, 0xb2, 0xf0, 0xe4, 0x95, 0xaa, 0x1b, 0x2e, 0xbe, 0xc5, 0xee,
	0xaa, 0x0c, 0x03, 0x3f, 0x66, 0xea, 0xc9, 0x7c, 0x2e, 0x2e, 0x92, 0xe0, 0x1b, 0x6e, 0xd6, 0xb0,
	0x3c, 0x57, 0xdc, 0xb0, 0x04, 0xc4, 0xc4, 0x8e, 0xf6, 0x08, 0xeb, 0x2f, 0xce, 0x47, 0xe4, 0xc0,
	0x1b, 0x2e, 0xbe, 0xc2, 0xfd, 0xca, 0xe7, 0x0b, 0xcd, 0x09, 0x80, 0x36, 0xff, 0x6e, 0x1c, 0xcd,
	0x66, 0x06, 0x6f, 0x18, 0x58, 0xdd, 0x9b, 0xa8, 0xc2, 0xbd, 0x0e, 0xe5, 0xb4, 0x1b, 0x8e, 0x04,
	0xd8, 0x25, 0xd4, 0x9b, 0x14, 0x9b, 0xab, 0x39, 0x7f, 0xf2, 0xc2, 0x30, 0xc5, 0x44, 0x2b, 0xbe,
	0x3d, 0x79, 0x02, 0xbe, 0x3d, 0x40, 0x04, 0xee, 0x36, 0x9a, 0x76, 0x69, 0x44, 0x1c, 0xcd, 0x7d,
	0x75, 0x6c, 0x10, 0x2e, 0x1f, 0x6d, 0x1a, 0xf8, 0x2b, 0x12, 0x43, 0xb1, 0xdf, 0x94, 0x08, 0xde,
	0x42, 0x17, 0x9c, 0xa0, 0x13, 0xda, 0x11, 0x69, 0x25, 0x41, 0x2b, 0xdd, 0x97, 0xc5, 0x84, 0xca,
	0x39, 0x81, 0xfb, 0x20, 0xd8, 0x91, 0x9b, 0xb4, 0x85, 0x3e, 0xd1, 0x4f, 0x50, 0xf3, 0x99, 0x15,
	0xf3, 0x78, 0x3d, 0xd7, 0x43, 0x78, 0x35, 0x75, 0xa1, 0xed, 0xa0, 0x67, 0xfa, 0x5f, 0xc0, 0xbc,
	0x5b, 0xc5, 0x3c, 0x62, 0xe7, 0x7b, 0x48, 0x6f, 0xdb, 0xc9, 0x7e, 0x9f, 0x3c, 0x43, 0x27, 0x90,
	0x67, 0x59, 0x1f, 0x61, 0xfd, 0xc4, 0x3e, 0xc2, 0x99, 0xf2, 0x3e, 0xc2, 0xb7, 0x10, 0xea, 0x50,
	0x9f, 0x76, 0xba, 0x1d, 0x98, 0xcb, 0x62, 0xb2, 0x68, 0x5a, 0x60, 0x6c, 0xb8, 0xf8, 0x6d, 0x34,
	0xef, 0xdb, 0x07, 0x74, 0x8f, 0x09, 0x91, 0x96, 0x47, 0xfd, 0x47, 0x71, 0x5e, 0xa2, 0xa1, 0x14,
	0xa6, 0x73, 0x29, 0xe2, 0x3d, 0xc0, 0xc3, 0x9b, 0xa8, 0xc6, 0x15, 0xd3, 0x40, 0x26, 0x1d, 0xbe,
	0x96, 0xbb, 0x62, 0xb7, 0x04, 0x42, 0xaa, 0x31, 0x49, 0x12, 0xca, 0x93, 0x39, 0x5f, 0xc2, 0x93,
	0xf9, 0x7e, 0x2a, 0x5d, 0x3b, 0x24, 0xd9, 0x0f, 0xa4, 0xd4, 0x79, 0x23, 0x5f, 0xba, 0x0a, 0x19,
	0xb0, 0xc9, 0xd0, 0xa0, 0x2b, 0xac, 0x3b, 0x52, 0x90, 0xf2, 0x66, 0xbc, 0x88, 0x66, 0x95, 0xda,
	0xd1, 0x8a, 0x5a, 0x9e, 0x90, 0x4d, 0xb9, 0x73, 0x2e, 0x90, 0x1e, 0x5a, 0xf7, 0x32, 0x1a, 0xe5,
	0xf9, 0x93, 0x68, 0x94, 0xf7, 0x19, 0x21, 0x26, 0x6a, 0x45, 0x82, 0x62, 0x3e, 0x83, 0xb0, 0x04,
	0x02, 0x90, 0x8b, 0x15, 0x3d, 0xd6, 0x84, 0x97, 0xe1, 0xdb, 0x84, 0xa4, 0x67, 0x17, 0xe0, 0x5c,
	0x2c, 0xe6, 0x77, 0x97, 0x48, 0x40, 0x0e, 0x7f, 0x4b, 0x38, 0x7c, 0x78, 0x80, 0xd9, 0xbd, 0x13,
	0xd8, 0x21, 0x97, 0xf9, 0x93, 0x30, 0x4a, 0xd2, 0x50, 0x21, 0x9a, 0x86, 0x0a, 0xf1, 0x38, 0xb4,
	0xad, 0xd3, 0x7c, 0x49, 0x26, 0x9e, 0x28, 0xa3, 0xbe, 0x34, 0x4a, 0xa8, 0x2f, 0x6f, 0xa3, 0xf3,
	0xf2, 0x8c, 0xb4, 0x25, 0x62, 0x26, 0x80, 0xc4, 0x73, 0xb9, 0x24, 0xce, 0x49, 0xb4, 0x6d, 0x8e,
	0xb5, 0xe1, 0xa6, 0xbe, 0x86, 0x66, 0x09, 0x5f, 0x03, 0x5e, 0x42, 0x33, 0x1f, 0xd9, 0x91, 0x4f,
	0xfd, 0xbd, 0x56, 0xe0, 0x7b, 0x87, 0xe2, 0x02, 0x8c, 0xdc, 0x3d, 0x5d, 0x17, 0x48, 0x5b, 0xbe,
	0x77, 0xd8, 0xfc, 0x75, 0x05, 0xcd, 0xf7, 0x8e, 0xcf, 0x53, 0xef, 0x6d, 0x7b, 0x9c, 0xf5, 0xb6,
	0xed, 0x9e, 0xe6, 0xe2, 0xeb, 0x6b, 0xc8, 0x38, 0xe2, 0xfe, 0x61, 0x1c, 0x5d, 0x3c, 0x12, 0xe0,
	0x69, 0xf7, 0xc6, 0x9d, 0x4c, 0x5d, 0xfd, 0xee, 0x34, 0x3a, 0x7f, 0x04, 0x17, 0x18, 0x86, 0x41,
	0x5d, 0x44, 0x48, 0xb0, 0xb2, 0x72, 0x6b, 0x7d, 0x5a, 0x60, 0x6d, 0xb8, 0xf8, 0x3b, 0x19, 0x07,
	0xfe, 0xde, 0x29, 0xb3, 0xda, 0x23, 0xd9, 0xaf, 0x62, 0xf5, 0xcd, 0x7f, 0xaf, 0xa0, 0x67, 0x8f,
	0x81, 0x78, 0xea, 0xf9, 0xd0, 0xf7, 0xc7, 0xb2, 0x8c, 0xa8, 0xf3, 0x31, 0x4d, 0xcd, 0xe5, 0x0c,
	0x4f, 0xfa, 0xab, 0x71, 0x54, 0x19, 0xf1, 0xa0, 0x13, 0xf3, 0xa0, 0x51, 0xc2, 0xea, 0xc7, 0x9a,
	0xb0, 0xaa, 0x05, 0x6f, 0x8f, 0x12, 0x56, 0x7f, 0x23, 0xce, 0x22, 0x9e, 0xea, 0x84, 0xd5, 0x9e,
	0x54, 0x81, 0x51, 0xc2, 0xea, 0xe9, 0x2c, 0xdd, 0x53, 0x4d, 0x58, 0xe5, 0xaf, 0xbb, 0xf4, 0x93,
	0x2b, 0xa8, 0xc6, 0x02, 0xd0, 0x76, 0xc8, 0x28, 0x5d, 0xf5, 0x29, 0x4d, 0x57, 0x7d, 0xb5, 0x68,
	0xba, 0xea, 0xd1, 0x69, 0xaa, 0x13, 0x1f, 0x6b, 0x9a, 0xea, 0xd5, 0x32, 0x69, 0xaa, 0xa3, 0xf4,
	0xd4, 0x51, 0x7a, 0xea, 0x93, 0x4b, 0x4f, 0x7d, 0x0b, 0x4d, 0xd3, 0x4e, 0xa7, 0x9b, 0xb0, 0x54,
	0xc4, 0x67, 0x0a, 0xa6, 0x22, 0x28, 0x0c, 0x3d, 0xbb, 0xf5, 0xd9, 0x13, 0x65, 0xb7, 0x36, 0xca,
	0x67, 0xb7, 0xde, 0x41, 0x48, 0xf0, 0x0e, 0xe8, 0xfb, 0x73, 0x05, 0xc3, 0xce, 0x53, 0x14, 0xbc,
	0x04, 0x8b, 0xa2, 0xc3, 0x3a, 0xdf, 0x34, 0xe7, 0x2e, 0x4a, 0xe9, 0x72, 0x79, 0x99, 0xc3, 0x5b,
	0x12, 0x11, 0xaf, 0x03, 0x2b, 0x0c, 0x6d, 0xce, 0xc0, 0xb8, 0xbf, 0xef, 0x95, 0x5c, 0x2a, 0xab,
	0x12, 0xc3, 0x4a, 0x91, 0x9b, 0xff, 0x75, 0x0e, 0x4d, 0x09, 0xf2, 0xc3, 0x91, 0x2e, 0x57, 0xf7,
	0x02, 0xe7, 0x11, 0xbf, 0x1d, 0xb6, 0xd0, 0x1d, 0xed, 0x16, 0xe2, 0x08, 0xf0, 0x1b, 0xdf, 0x42,
	0x35, 0xea, 0x83, 0x6e, 0x75, 0x50, 0x38, 0xa3, 0x40, 0x21, 0xe0, 0x87, 0x68, 0x8a, 0xfa, 0x8e,
	0xd7, 0x75, 0x89, 0x10, 0x73, 0xd7, 0x8a, 0x4e, 0xec, 0x65, 0xb1, 0x4b, 0x76, 0x48, 0x7a, 0x07,
	0xbf, 0xa4, 0x85, 0x37, 0xd1, 0x14, 0x79, 0xcc, 0xc9, 0x4e, 0x0d, 0x4c, 0xd6, 0x92, 0x34, 0x9a,
	0xdf, 0x3d, 0x8b, 0x50, 0xda, 0x3e, 0x0c, 0x73, 0x7e, 0x0d, 0x55, 0xe3, 0xc3, 0x38, 0x21, 0x9d,
	0x02, 0x29, 0x66, 0x96, 0x00, 0xd5, 0xc5, 0x68, 0xa5, 0x9c, 0x18, 0x7d, 0x9f, 0x31, 0x75, 0x16,
	0x66, 0xc3, 0xa7, 0x79, 0x65, 0x80, 0xf9, 0x90, 0x3f, 0x55, 0x18, 0xae, 0x25, 0x89, 0x82, 0x79,
	0xdb, 0xa6, 0x5e, 0x42, 0x22, 0x31, 0xdd, 0x0b, 0x83, 0x90, 0xbf, 0xcb, 0x28, 0x58, 0x82, 0x12,
	0xbe, 0xc9, 0x52, 0xbf, 0xba, 0xa4, 0x15, 0x93, 0x44, 0x28, 0x3c, 0xc6, 0x51, 0xaa, 0x1d, 0x08,
	0xda, 0xcd, 0x9f, 0x57, 0xd1, 0x7c, 0x6f, 0x5f, 0x87, 0x61, 0xd1, 0xdc, 0x14, 0x95, 0x1f, 0x26,
	0xf3, 0x2b, 0x3f, 0xa4, 0xee, 0x1f, 0x56, 0xff, 0x41, 0xbb, 0x86, 0xb2, 0x52, 0xea, 0x1a, 0x4a,
	0x1c, 0x31, 0x69, 0xce, 0x6e, 0x8f, 0x4e, 0xbd, 0x17, 0xdb, 0xa7, 0xb1, 0x7a, 0x2e, 0xaf, 0xa4,
	0x74, 0x2d, 0xfd, 0x25, 0xcd, 0xef, 0x4d, 0xb0, 0x94, 0x68, 0xf9, 0x3c, 0x0c, 0x53, 0x77, 0x72,
	0x4b, 0xe6, 0x0a, 0x9a, 0xe8, 0xc6, 0x05, 0x33, 0xa2, 0x2d, 0x00, 0x4d, 0x7d, 0x7e, 0xd5, 0x41,
	0x7c, 0x7e, 0xbf, 0x3b, 0x81, 0xaa, 0x7c, 0x47, 0x0e, 0xc9, 0xf8, 0x87, 0x11, 0xd8, 0xd1, 0xc9,
	0x61, 0xa9, 0xed, 0xa3, 0xb0, 0xf0, 0x12, 0x1a, 0x0f, 0x42, 0x31, 0xfc, 0xc7, 0xea, 0x2d, 0x7c,
	0xc0, 0x64, 0xd0, 0x40, 0x86, 0xd2, 0x78, 0x10, 0xe2, 0x85, 0xec, 0x8c, 0x14, 0xeb, 0x82, 0x0c,
	0x5b, 0x9a, 0x47, 0xd3, 0x4a, 0x1b, 0x1a, 0x8e, 0x7a, 0x3f, 0xba, 0x61, 0x59, 0x22, 0xd3, 0x5a,
	0xb7, 0x2c, 0xef, 0xa2, 0xe9, 0x84, 0x76, 0x48, 0x9c, 0xd8, 0x9d, 0xb0, 0x68, 0x91, 0x9a, 0xd4,
	0xb1, 0xa2, 0x50, 0xf1, 0xeb, 0xa8, 0x92, 0x04, 0x49, 0x7e, 0xa5, 0x1a, 0x19, 0x66, 0xc9, 0xa1,
	0x59, 0x78, 0x66, 0xbb, 0x0d, 0x02, 0x6a, 0xaa, 0x68, 0x78, 0x26, 0x03, 0xc7, 0x16, 0x9a, 0x0e,
	0x65, 0xb1, 0x4c, 0x21, 0xdc, 0xae, 0x17, 0x57, 0x86, 0xb5, 0x42, 0xd9, 0x29, 0x19, 0xbc, 0x85,
	0x6a, 0xc2, 0xf1, 0x10, 0x8b, 0x94, 0xe1, 0x6b, 0x25, 0x48, 0x0a, 0x37, 0x46, 0x6c, 0x29, 0x22,
	0xcd, 0xbf, 0xaf, 0x0c, 0x59, 0x45, 0xd4, 0x93, 0x9c, 0xa0, 0x7c, 0x2d, 0x7b, 0x82, 0xb2, 0x30,
	0xc8, 0x6c, 0x89, 0x52, 0x53, 0xd5, 0x6c, 0x91, 0xa9, 0xff, 0x1c, 0x97, 0x45, 0xa6, 0x7a, 0x2b,
	0xf2, 0x8c, 0x95, 0xac, 0xc8, 0x73, 0xa2, 0xba, 0x52, 0x5a, 0x19, 0xa4, 0x89, 0xd2, 0x65, 0x90,
	0xb4, 0x5a, 0x4f, 0x93, 0xa5, 0x6b, 0x3d, 0x7d, 0xb1, 0xe8, 0xdd, 0xda, 0xb2, 0x94, 0x8f, 0x2c,
	0x81, 0x55, 0x2d, 0x5e, 0x02, 0x2b, 0xad, 0x9a, 0xf6, 0x1f, 0x15, 0x54, 0x93, 0x8b, 0xfd, 0xa9,
	0x35, 0x25, 0x6e, 0xa1, 0x9a, 0xbd, 0x1b, 0x27, 0x91, 0xed, 0x24, 0x85, 0x8d, 0x46, 0x89, 0x90,
	0xb1, 0x38, 0xab, 0x65, 0x2d, 0x4e, 0xcd, 0x88, 0x99, 0x2a, 0x67, 0xc4, 0x5c, 0x11, 0xb3, 0x5e,
	0xcb, 0x9f, 0xf5, 0x7e, 0xb5, 0x77, 0xfa, 0x44, 0x6a, 0x2f, 0xfa, 0x18, 0xd4, 0xde, 0x0c, 0xff,
	0xae, 0x9f, 0x02, 0xff, 0x5e, 0x78, 0x53, 0x3b, 0x2d, 0x28, 0x9c, 0x25, 0x29, 0x49, 0x5f, 0xfa,
	0x97, 0x0b, 0x08, 0x7f, 0x85, 0x02, 0xed, 0xed, 0x48, 0x73, 0xcd, 0x8d, 0x4e, 0x0d, 0x46, 0xf5,
	0x57, 0x84, 0x7a, 0x51, 0xf6, 0x18, 0xe0, 0x1d, 0xe5, 0x62, 0xe7, 0x41, 0xcd, 0xd7, 0x8e, 0x57,
	0xa3, 0x7d, 0xdb, 0x77, 0xa8, 0xed, 0xc9, 0xc1, 0x49, 0x1d, 0xed, 0xca, 0xc1, 0x1e, 0xa1, 0xa9,
	0x90, 0x97, 0xa9, 0x17, 0x67, 0x0a, 0x05, 0xd2, 0x86, 0x5f, 0x1f, 0xa8, 0x0c, 0xbe, 0x25, 0x5f,
	0x84, 0x1f, 0xa3, 0x69, 0xe2, 0xb3, 0xfa, 0x61, 0x24, 0x2a, 0x5e, 0xbb, 0xe5, 0x0d, 0xf6, 0xd6,
	0xd7, 0x8a, 0xbe, 0x75, 0x55, 0xbe, 0xc1, 0x4a, 0x5f, 0x86, 0x97, 0xd1, 0x0c, 0x8b, 0xd6, 0xfc,
	0x28, 0xa2, 0x49, 0x42, 0x7c, 0x71, 0xb4, 0x91, 0x7f, 0x22, 0x50, 0x07, 0xac, 0xaf, 0x72, 0x24,
	0xfc, 0xdb, 0x08, 0x85, 0x7c, 0x2b, 0xef, 0xb2, 0xbc, 0x9e, 0x82, 0xfd, 0x5f, 0x28, 0x57, 0x5f,
	0x7f, 0x1b, 0x64, 0x04, 0xfb, 0x09, 0xd3, 0x9f, 0xbe, 0x10, 0xbf, 0x8b, 0xaa, 0x11, 0xb1, 0xe3,
	0xc0, 0xcf, 0x8b, 0xbe, 0xee, 0xe7, 0x3a, 0x97, 0x2d, 0x86, 0xa8, 0x34, 0x27, 0x41, 0x08, 0x58,
	0x26, 0x70, 0x6c, 0xe2, 0xc7, 0xa4, 0x31, 0x9f, 0xc3, 0x32, 0xfb, 0x89, 0xae, 0x08, 0x54, 0x4b,
	0x11, 0x69, 0xfe, 0xeb, 0x18, 0xaa, 0xf2, 0x77, 0x1d, 0x59, 0x35, 0x6f, 0xec, 0xc4, 0x55, 0xf3,
	0xbe, 0xad, 0x97, 0x13, 0x1b, 0x7f, 0x42, 0x4b, 0x68, 0x39, 0xf0, 0x5d, 0x2a, 0x4a, 0xce, 0xa5,
	0xaf, 0x5b, 0xaa, 0xc9, 0x09, 0x68, 0xfe, 0x79, 0x0d, 0xd5, 0xe4, 0xd7, 0x0f, 0x47, 0x24, 0xe1,
	0x54, 0x18, 0x05, 0x6e, 0xd7, 0x49, 0x4a, 0x96, 0x8f, 0xb5, 0x24, 0x1e, 0xbe, 0x89, 0x26, 0xc8,
	0xa1, 0xd4, 0xee, 0x3f, 0x67, 0x5e, 0x45, 0xab, 0x87, 0x22, 0x3a, 0x1d, 0x50, 0xc0, 0x08, 0x8c,
	0xc3, 0x7d, 0x12, 0x91, 0x82, 0x65, 0x4e, 0x2d, 0x01, 0x0e, 0x7a, 0x94, 0x73, 0xe8, 0x51, 0xdf,
	0x65, 0x7e, 0xd3, 0x42, 0xa8, 0x0a, 0x01, 0x5f, 0x43, 0x93, 0xf6, 0x63, 0x1a, 0x17, 0xbd, 0x58,
	0x8a, 0x01, 0x83, 0x99, 0x1b, 0x46, 0x34, 0xee, 0xe4, 0x15, 0x3a, 0x55, 0xc5, 0x9a, 0x18, 0x34,
	0xd8, 0x4d, 0xbb, 0x76, 0x2c, 0x73, 0x51, 0x72, 0x06, 0x67, 0xc9, 0xe6, 0xb1, 0xf6, 0x16, 0xc3,
	0xc1, 0xaf, 0xa1, 0x09, 0xdb, 0x75, 0xf3, 0x32, 0x20, 0xe5, 0x0b, 0x01, 0x96, 0xf5, 0x32, 0xf8,
	0x48, 0xb1, 0xd8, 0x02, 0xbd, 0x04, 0x68, 0x7c, 0x1b, 0xa1, 0x5d, 0xdb, 0x79, 0xd4, 0x72, 0xba,
	0xd1, 0x81, 0x3c, 0xfc, 0xcd, 0xc5, 0x9d, 0x06, 0x94, 0x65, 0xc0, 0x80, 0xe9, 0x70, 0xa9, 0x30,
	0xc9, 0x0b, 0x16, 0xb3, 0x52, 0x08, 0x78, 0x49, 0xab, 0x07, 0x39, 0x67, 0x1e, 0xa6, 0x1d, 0x50,
	0x57, 0x88, 0x2c, 0x6d, 0xa8, 0xd5, 0x84, 0xbc, 0x8e, 0x2a, 0x4e, 0xe0, 0x05, 0x51, 0xc1, 0x94,
	0x12, 0x0e, 0x0c, 0x58, 0xbb, 0x91, 0xed, 0xbb, 0x05, 0x8f, 0x7a, 0x39, 0x30, 0xbe, 0x81, 0x26,
	0xfd, 0x20, 0x21, 0xe2, 0x8c, 0xb7, 0x40, 0x65, 0x52, 0x8b, 0xc1, 0x2f, 0xdc, 0xd5, 0x74, 0xca,
	0x85, 0xc2, 0x3a, 0x65, 0x1f, 0xef, 0xbd, 0xf4, 0xc3, 0x75, 0x74, 0xae, 0x4f, 0x07, 0x62, 0x35,
	0x5a, 0x1d, 0x5e, 0xce, 0x73, 0x2c, 0xa7, 0x46, 0x2b, 0x07, 0x63, 0x35, 0x5a, 0xf9, 0x4f, 0xfc,
	0x1e, 0x3a, 0xcf, 0x6c, 0x0c, 0x9a, 0x1c, 0xb6, 0x5c, 0xf5, 0x72, 0xc1, 0x64, 0x5f, 0x39, 0x9e,
	0x10, 0x47, 0x49, 0xbb, 0xbb, 0x7e, 0xc6, 0xc2, 0x76, 0x5f, 0x2b, 0x7e, 0x07, 0xcd, 0xda, 0x2e,
	0xd8, 0x22, 0xa4, 0x45, 0x0e, 0x40, 0xed, 0x98, 0x30, 0xeb, 0x96, 0x8b, 0x1c, 0x78, 0xf5, 0x80,
	0x17, 0x64, 0x9d, 0xb1, 0xb5, 0x67, 0xd6, 0x57, 0xcf, 0x23, 0xd1, 0xde, 0x61, 0x8b, 0xfa, 0x49,
	0xe0, 0x91, 0x88, 0x55, 0x22, 0x9d, 0xcc, 0xe9, 0x2b, 0x47, 0xd9, 0x48, 0x31, 0x58, 0x5f, 0xfb,
	0x5a, 0xf1, 0x1a, 0xaa, 0xdb, 0x21, 0xab, 0xad, 0xca, 0x0a, 0xc7, 0x56, 0xcc, 0x05, 0x27, 0x17,
	0x53, 0xd0, 0xf5, 0x33, 0x96, 0x8e, 0x89, 0xbf, 0x85, 0x2e, 0x68, 0x8f, 0x2d, 0x95, 0xd0, 0x53,
	0x35, 0x67, 0x06, 0x69, 0x14, 0x65, 0x4a, 0xcf, 0xfa, 0x19, 0xeb, 0xbc, 0xdd, 0xdf, 0x8c, 0x57,
	0x51, 0xdd, 0xee, 0xba, 0x34, 0x11, 0x83, 0x3a, 0x95, 0x53, 0xe3, 0x16, 0x40, 0xe5, 0x90, 0x22,
	0x5b, 0x3d, 0x01, 0xcf, 0xd8, 0xb5, 0x63, 0xea, 0x08, 0x7e, 0xf8, 0x49, 0x43, 0x5d, 0x6e, 0xea,
	0xac, 0x9f, 0xb1, 0x38, 0x34, 0xbe, 0x89, 0xaa, 0xa2, 0x9e, 0x77, 0x8e, 0x81, 0xa8, 0x2a, 0x79,
	0x0b, 0x78, 0x90, 0x82, 0xbb, 0x81, 0x7b, 0xd8, 0x8a, 0x69, 0x42, 0xf2, 0x2a, 0x3f, 0x2f, 0x05,
	0xee, 0xe1, 0x0e, 0x65, 0xb5, 0xb5, 0x6b, 0xbb, 0xe2, 0x37, 0x7b, 0x75, 0xd7, 0x77, 0x3d, 0x92,
	0x17, 0x13, 0xb3, 0xc4, 0xa0, 0xd8, 0xab, 0xd9, 0x2f, 0x98, 0x94, 0xf4, 0xda, 0xcd, 0x56, 0x2c,
	0xef, 0xde, 0x13, 0xec, 0xf2, 0xd8, 0x49, 0x39, 0xe2, 0xba, 0x3e, 0x98, 0x14, 0xa7, 0xbf, 0x19,
	0x3e, 0xce, 0xb1, 0x23, 0xd2, 0x0a, 0x3d, 0x3b, 0x57, 0xd7, 0x5c, 0xb6, 0x23, 0xb2, 0xed, 0x31,
	0x5f, 0x52, 0xcd, 0x11, 0xbf, 0x15, 0x81, 0x84, 0xd8, 0x1d, 0xc1, 0x4c, 0x8d, 0x04, 0x1e, 0x10,
	0xbb, 0x23, 0x09, 0xc0, 0x6f, 0x58, 0x16, 0xce, 0xbe, 0x1d, 0xed, 0x91, 0x16, 0x4d, 0x48, 0x47,
	0xb0, 0xd4, 0x63, 0x97, 0xc5, 0x32, 0x03, 0xdd, 0x48, 0x08, 0x10, 0x41, 0x8e, 0x7a, 0x62, 0xd5,
	0x81, 0x3d, 0x9b, 0x76, 0x04, 0x4b, 0x3d, 0xbe, 0x3a, 0x30, 0x00, 0xb1, 0xea, 0xc0, 0xf0, 0x03,
	0xdf, 0x47, 0x67, 0xd9, 0x8f, 0x74, 0xc1, 0x73, 0xe6, 0xfa, 0xa2, 0x11, 0x5f, 0x5b, 0xea, 0xb3,
	0x8e, 0xde, 0x00, 0xdb, 0xdd, 0xf1, 0xa8, 0x4f, 0x1d, 0xdb, 0x6b, 0xd1, 0x8e, 0xca, 0xc8, 0xc4,
	0xe6, 0xed, 0xbe, 0x2c, 0x50, 0x36, 0x14, 0x06, 0x6c, 0x77, 0xa7, 0xaf, 0x95, 0x0d, 0x56, 0xe0,
	0x92, 0x96, 0xf0, 0x03, 0xe5, 0x54, 0x9b, 0x06, 0xe1, 0xbc, 0xc3, 0x20, 0xd9, 0x60, 0xa9, 0x27,
	0xbc, 0x89, 0x66, 0x9d, 0xa0, 0xd3, 0xe9, 0xfa, 0x22, 0xbc, 0x49, 0xa4, 0xed, 0x19, 0x02, 0x80,
	0x34, 0x60, 0xf6, 0xd1, 0x7a, 0x03, 0x76, 0xd0, 0xc5, 0x4c, 0x83, 0xbc, 0x11, 0x41, 0x24, 0xee,
	0x7d, 0xa1, 0x10, 0x59, 0x99, 0xfa, 0x7e, 0xc6, 0xba, 0xe0, 0x1c, 0xd1, 0x8e, 0xdb, 0x32, 0x07,
	0x97, 0x33, 0x28, 0x8d, 0xef, 0x3f, 0x63, 0x0e, 0xe3, 0x5a, 0x4e, 0xb1, 0x32, 0xac, 0xff, 0xa2,
	0x73, 0xd4, 0x3f, 0x80, 0xa3, 0xf2, 0x40, 0x16, 0x4e, 0xfc, 0x59, 0x33, 0x47, 0x5d, 0x4e, 0x41,
	0x81, 0xa3, 0x6a, 0x98, 0x7c, 0xae, 0x98, 0xee, 0xd9, 0xea, 0xd8, 0xa1, 0x88, 0xe6, 0x31, 0xcc,
	0x15, 0x03, 0xdd, 0xb4, 0x43, 0x3e, 0x57, 0xf2, 0x09, 0x2f, 0x32, 0x5f, 0x03, 0xd7, 0xf2, 0x45,
	0x44, 0xcf, 0x67, 0x0c, 0x44, 0x52, 0x73, 0x40, 0x61, 0x81, 0xb0, 0x75, 0x60, 0x75, 0xfa, 0x89,
	0x08, 0xea, 0xf9, 0x94, 0x81, 0x40, 0xcc, 0xb9, 0x85, 0xc4, 0xc0, 0xb7, 0xb9, 0xb3, 0x8a, 0x39,
	0x10, 0x9f, 0xcf, 0xd9, 0xdf, 0x02, 0x8e, 0xed, 0x6f, 0xf1, 0x9b, 0xe3, 0x1f, 0x90, 0xc8, 0xde,
	0x23, 0xa2, 0x72, 0xb5, 0x01, 0x9f, 0xc3, 0x71, 0x7c, 0xfe, 0x1b, 0xaf, 0x33, 0x83, 0xd8, 0x6e,
	0x11, 0x8f, 0xf3, 0xbe, 0x4f, 0x9a, 0x27, 0x64, 0xc5, 0x4e, 0xec, 0x55, 0x4f, 0xf2, 0x3c, 0xb0,
	0x8a, 0xe5, 0x23, 0xec, 0x75, 0x97, 0x24, 0xc4, 0x49, 0x88, 0xdb, 0x62, 0xa5, 0x42, 0x45, 0x41,
	0xeb, 0x17, 0x8f, 0x57, 0xfe, 0x38, 0xf4, 0x06, 0x00, 0xc3, 0xb2, 0x77, 0xf5, 0x06, 0xe0, 0xeb,
	0x2e, 0x39, 0xa0, 0x0e, 0x11, 0xc5, 0xad, 0x5f, 0x38, 0x9e, 0x0e, 0x40, 0x01, 0x5f, 0xe7, 0xf0,
	0x60, 0x71, 0xf2, 0x5f, 0x2d, 0xb6, 0x60, 0x7c, 0xf8, 0xae, 0x4f, 0x9b, 0xcd, 0x19, 0x4e, 0x63,
	0x59, 0x82, 0x83, 0xc5, 0xe9, 0x66, 0x9b, 0x40, 0x6f, 0x11, 0x54, 0x3b, 0x24, 0x89, 0xa8, 0x23,
	0xea, 0x5f, 0xff, 0x3f, 0x33, 0xc9, 0x4d, 0x06, 0x0b, 0x7a, 0x8b, 0xab, 0x3d, 0xf3, 0xc1, 0x62,
	0xc4, 0xe4, 0x66, 0xbe, 0x94, 0x37, 0x58, 0x00, 0x9d, 0xee, 0x62, 0xd1, 0x17, 0xb9, 0x7d, 0xdf,
	0x47, 0x17, 0x04, 0xbd, 0x6e, 0x4c, 0x34, 0x51, 0xf6, 0x59, 0x33, 0x67, 0xe4, 0x54, 0x1f, 0xc6,
	0x44, 0x97, 0x64, 0xd8, 0xed, 0x6b, 0xc5, 0x5f, 0x45, 0xe7, 0x5c, 0x6a, 0xef, 0xf9, 0x41, 0x9c,
	0x50, 0xa7, 0x15, 0xb1, 0xb2, 0x3d, 0xa2, 0x70, 0xf6, 0x4b, 0xc7, 0xd7, 0x7b, 0x97, 0x08, 0xbc,
	0xcc, 0xcf, 0xfa, 0x19, 0x6b, 0xde, 0xed, 0x69, 0x63, 0x84, 0x03, 0xa7, 0xcb, 0x98, 0x4e, 0xc7,
	0xf6, 0x69, 0x1b, 0xc6, 0xe2, 0xc5, 0x1c, 0xc2, 0x02, 0x61, 0x53, 0xc0, 0x33, 0xc2, 0x3d, 0x6d,
	0xf8, 0x1b, 0x08, 0x2b, 0xc2, 0xa9, 0xa7, 0x80, 0xd7, 0xdc, 0x7e, 0x39, 0x8f, 0xb2, 0x5e, 0x80,
	0x5c, 0xf5, 0x2f, 0x8d, 0x81, 0x79, 0x0f, 0x9d, 0x27, 0x1e, 0xdd, 0xa3, 0x42, 0x73, 0x90, 0x53,
	0xf8, 0x79, 0xf3, 0x60, 0xaf, 0xa6, 0x28, 0xe9, 0x3c, 0x62, 0xd2, 0xd7, 0x0a, 0x7a, 0x49, 0x96,
	0xbc, 0x90, 0x9d, 0x2f, 0x99, 0xf5, 0x92, 0x0c, 0xfd, 0x54, 0x59, 0x24, 0xfd, 0xcd, 0xc0, 0xf5,
	0x52, 0x07, 0xdc, 0xcb, 0x66, 0xae, 0xa7, 0xfc, 0x68, 0xc0, 0xf5, 0x52, 0x4f, 0xda, 0x6d, 0x54,
	0x23, 0xbe, 0xcb, 0xf4, 0xd0, 0xc6, 0x2b, 0x66, 0xc6, 0xb3, 0x2a, 0xe0, 0x80, 0xf1, 0x48, 0x1c,
	0x98, 0x1f, 0xe2, 0x47, 0x81, 0xe7, 0x89, 0x19, 0xe2, 0x43, 0xf8, 0xff, 0xcd, 0xf3, 0xb3, 0xaa,
	0x30, 0xd2, 0x11, 0x3c, 0x47, 0x7a, 0x1b, 0xd9, 0xfc, 0xe8, 0xb4, 0xc5, 0xf8, 0x7d, 0x21, 0x67,
	0x7e, 0x34, 0x3a, 0x6a, 0xf8, 0x30, 0xe9, 0x6b, 0xc5, 0x5b, 0x68, 0x8e, 0x84, 0x34, 0x06, 0x4d,
	0x21, 0x68, 0xb7, 0x40, 0xd5, 0x6a, 0xbc, 0x6a, 0xde, 0xbd, 0xab, 0x1c, 0x7c, 0xab, 0x0d, 0x3a,
	0x1a, 0xec, 0x5e, 0xa2, 0x37, 0xc0, 0x26, 0x50, 0x51, 0x99, 0x32, 0x91, 0xbc, 0x71, 0xd9, 0xbc,
	0x09, 0xd4, 0x89, 0x85, 0x48, 0x21, 0x87, 0x4d, 0x40, 0x7a, 0xda, 0xb0, 0x8b, 0x9e, 0x21, 0x8f,
	0x41, 0xf9, 0xe4, 0x8a, 0x43, 0xd0, 0x6e, 0xed, 0x12, 0x9f, 0xb4, 0x69, 0xd2, 0xf8, 0xa2, 0x59,
	0x77, 0x58, 0x4d, 0xb1, 0xb6, 0xda, 0x4b, 0x1c, 0x07, 0x74, 0x07, 0x72, 0x44, 0x3b, 0xb6, 0xd1,
	0xc5, 0xb6, 0xdd, 0xa1, 0xde, 0x61, 0xab, 0x43, 0x3a, 0xbb, 0x24, 0x6a, 0xed, 0xd3, 0x38, 0x09,
	0xa2, 0xc3, 0xc6, 0x95, 0x9c, 0x7b, 0x0f, 0x18, 0xd2, 0x26, 0xc3, 0x59, 0xe7, 0x28, 0xb0, 0x60,
	0xdb, 0xfd, 0xcd, 0xf8, 0x2a, 0x9a, 0x6c, 0x7b, 0xf6, 0x5e, 0xe3, 0x35, 0xf3, 0x09, 0xc8, 0x5d,
	0xcf, 0xde, 0x5b, 0x3f, 0x63, 0x31, 0x58, 0xc0, 0xd9, 0x0b, 0x6c, 0xaf, 0x71, 0xd5, 0x8c, 0xb3,
	0x16, 0xb0, 0x53, 0x54, 0x06, 0x0b, 0xa2, 0x63, 0x2f, 0xb2, 0xc3, 0x7d, 0x5d, 0x01, 0xba, 0x66,
	0x16, 0x1d, 0x6b, 0x00, 0x9f, 0x51, 0x7d, 0xe6, 0xf6, 0xb2, 0x4d, 0xa0, 0x3d, 0xef, 0x45, 0x41,
	0x37, 0x6c, 0x5c, 0x37, 0x6b, 0xcf, 0x6b, 0x00, 0x04, 0xda, 0x33, 0x83, 0x86, 0x65, 0xb1, 0xd7,
	0xa5, 0x2e, 0x58, 0xa2, 0xe9, 0x22, 0x7e, 0xdd, 0xbc, 0x2c, 0xd6, 0x04, 0x82, 0xb6, 0x84, 0xe7,
	0xf7, 0x7a, 0xda, 0x60, 0xef, 0xed, 0x13, 0xdb, 0x4b, 0xf6, 0x99, 0x6d, 0x11, 0x93, 0x88, 0x89,
	0xd9, 0x1b, 0xe6, 0xbd, 0xb7, 0xae, 0x30, 0x76, 0x38, 0x02, 0xec, 0xbd, 0xfd, 0xde, 0x46, 0x18,
	0x41, 0xda, 0xb1, 0xf7, 0xa8, 0xbf, 0x97, 0xf2, 0xf3, 0x37, 0xcc, 0x23, 0xb8, 0xc1, 0xe1, 0x35,
	0x76, 0x3e, 0x47, 0xb3, 0x4d, 0x20, 0x7c, 0x25, 0xd5, 0x38, 0xe9, 0xba, 0x87, 0x8d, 0x9b, 0x66,
	0xe1, 0x2b, 0x48, 0xee, 0x00, 0x2c, 0x08, 0x5f, 0xaa, 0x3d, 0xe3, 0xb7, 0xd1, 0x0c, 0x65, 0x2a,
	0xf0, 0xb7, 0xb9, 0x7a, 0xfe, 0xa5, 0x3c, 0x5a, 0x29, 0x2c, 0xa7, 0x95, 0x3e, 0xe3, 0x2e, 0x7a,
	0x5e, 0x7f, 0x6e, 0x45, 0x04, 0xd4, 0x6b, 0xe2, 0xbb, 0x9c, 0xf4, 0x82, 0xf9, 0xc2, 0x0e, 0x9d,
	0xb4, 0x95, 0xc1, 0x5c, 0x3f, 0x63, 0x35, 0xe9, 0xb1, 0xff, 0x05, 0x11, 0xc1, 0xbc, 0x5f, 0x2c,
	0xc1, 0x81, 0xbd, 0x18, 0x26, 0x99, 0x34, 0x6e, 0x99, 0x77, 0xdc, 0x46, 0x06, 0x07, 0xd6, 0x0a,
	0x13, 0x11, 0xb4, 0xbf, 0x19, 0xb4, 0x5a, 0x8f, 0xee, 0x46, 0x60, 0xd2, 0xbf, 0x69, 0xd6, 0x6a,
	0xef, 0x71, 0x30, 0xd0, 0x6a, 0x05, 0x06, 0x47, 0xf6, 0x1f, 0x81, 0x52, 0xfa, 0x56, 0x1e, 0x32,
	0x03, 0xe3, 0xc8, 0xec, 0x27, 0xec, 0x5b, 0x8f, 0xc6, 0x49, 0xe3, 0xb6, 0x79, 0xdf, 0xde, 0xa3,
	0x6c, 0xa9, 0x30, 0x58, 0x90, 0x46, 0x5e, 0x20, 0xac, 0xad, 0x3b, 0x66, 0x69, 0x74, 0x2f, 0x50,
	0x86, 0x96, 0xc2, 0x81, 0x0e, 0x77, 0x88, 0x1d, 0x77, 0x23, 0xd2, 0xf8, 0xb2, 0xb9, 0xc3, 0x9b,
	0x1c, 0x0c, 0x3a, 0x2c, 0x30, 0x40, 0x99, 0x13, 0x3f, 0xa5, 0x66, 0xb4, 0x68, 0x16, 0x07, 0x82,
	0x86, 0x52, 0x8b, 0x66, 0x3b, 0x7a, 0x03, 0xb0, 0x8b, 0x0e, 0x71, 0xa9, 0xdd, 0x58, 0x32, 0xb3,
	0x8b, 0x4d, 0x00, 0x02, 0x76, 0xc1, 0xa0, 0xf1, 0x0a, 0x42, 0xf0, 0x43, 0x8c, 0xc2, 0xb2, 0xd9,
	0x20, 0xda, 0x54, 0x90, 0x60, 0x10, 0xa5, 0x78, 0x38, 0x40, 0xcf, 0xa5, 0x4f, 0x2d, 0xdb, 0xed,
	0x50, 0x9f, 0xc6, 0x89, 0xf0, 0xc8, 0xae, 0x30, 0xa2, 0x57, 0xf2, 0x89, 0x2e, 0x66, 0xf0, 0xd6,
	0xcf, 0x58, 0x8d, 0xce, 0x31, 0xff, 0x03, 0x61, 0xad, 0xbd, 0x50, 0x1d, 0x43, 0xad, 0x9a, 0x85,
	0x75, 0xfa, 0x2a, 0x79, 0xfe, 0x02, 0xc2, 0xba, 0xd3, 0xd7, 0x0a, 0xbc, 0x4e, 0x23, 0x2f, 0xf5,
	0x8c, 0xbb, 0x66, 0x5e, 0x97, 0x52, 0xd7, 0xf4, 0x8c, 0x4e, 0x6f, 0x23, 0xec, 0x42, 0x8d, 0x76,
	0xaa, 0x75, 0xaf, 0x99, 0x77, 0x61, 0x4a, 0x3d, 0xe3, 0x40, 0xea, 0xf4, 0x37, 0xf3, 0xde, 0xb3,
	0x2a, 0xc9, 0xba, 0x44, 0x5a, 0xcf, 0xeb, 0x3d, 0xc3, 0xc8, 0xc8, 0xa4, 0x73, 0x9d, 0xde, 0x46,
	0xbe, 0x6c, 0x39, 0x6d, 0x71, 0x45, 0xe1, 0x46, 0xde, 0xb2, 0x65, 0xd0, 0xfc, 0xfa, 0x3c, 0xbe,
	0x6c, 0xb5, 0x06, 0xe0, 0xd1, 0xbe, 0xdd, 0x61, 0x2c, 0x9a, 0xfb, 0x4f, 0xde, 0x36, 0xf3, 0xd5,
	0xfb, 0x0c, 0x58, 0x79, 0x50, 0x66, 0x7c, 0xed, 0x19, 0xbf, 0x8b, 0xe6, 0xfc, 0x6e, 0x12, 0x51,
	0xae, 0xb7, 0x44, 0xd0, 0xbb, 0x77, 0xcc, 0xc7, 0x01, 0xf7, 0x25, 0xf8, 0x56, 0xc4, 0xbb, 0x77,
	0xd6, 0xcf, 0xb4, 0xe0, 0x35, 0x54, 0x0f, 0x76, 0x41, 0xd8, 0xf1, 0xb5, 0x7c, 0xcf, 0x6c, 0xe9,
	0x6e, 0xa5, 0xa0, 0x60, 0xe9, 0x6a, 0x98, 0x30, 0xed, 0x2a, 0x95, 0x54, 0x9f, 0x96, 0x4d, 0xf3,
	0xb4, 0xab, 0x8c, 0xd4, 0xcc, 0xc4, 0x9c, 0x0f, 0xfa, 0x9b, 0x41, 0xf2, 0xa7, 0x6f, 0x08, 0xba,
	0x89, 0x13, 0x74, 0x48, 0xe3, 0xbe, 0x59, 0xf2, 0x2b, 0xf2, 0x5b, 0x1c, 0x1e, 0x24, 0x7f, 0xd0,
	0xd3, 0x06, 0xa2, 0x2f, 0x88, 0xf6, 0x6c, 0x25, 0xfa, 0xb6, 0xcc, 0x53, 0xb4, 0xa5, 0xc1, 0xc2,
	0x14, 0xe9, 0xb8, 0xc0, 0x6f, 0x54, 0xd0, 0x64, 0xdc, 0xd8, 0x36, 0xf3, 0x1b, 0x15, 0xbb, 0x17,
	0x03, 0xbf, 0x49, 0xf1, 0x80, 0xf3, 0xca, 0xf8, 0x83, 0x77, 0xcd, 0x9c, 0x57, 0x84, 0x11, 0x00,
	0xe7, 0x95, 0x81, 0x04, 0xf7, 0xd1, 0xd9, 0xd0, 0x3e, 0x64, 0x5a, 0xbe, 0x1f, 0x24, 0xa0, 0xc4,
	0x58, 0xe6, 0x25, 0xbc, 0xcd, 0xa1, 0xef, 0x33, 0x60, 0x58, 0xc2, 0xa1, 0xde, 0x80, 0xdb, 0xe8,
	0x19, 0x49, 0x0f, 0x04, 0xb9, 0xef, 0x50, 0x8f, 0xf2, 0x81, 0xda, 0xc9, 0x49, 0x66, 0xe4, 0x58,
	0x56, 0x06, 0x69, 0xfd, 0x8c, 0x75, 0x31, 0x3c, 0xea, 0x1f, 0xf8, 0x26, 0xaa, 0x86, 0x24, 0x8a,
	0x03, 0xbf, 0xf1, 0xc0, 0xec, 0xdb, 0xd8, 0x66, 0x50, 0xeb, 0x67, 0x2c, 0x01, 0x0f, 0xfb, 0x02,
	0x34, 0x70, 0x7d, 0xd9, 0x3d, 0x34, 0xef, 0x8b, 0x6d, 0xcf, 0xce, 0xae, 0xb8, 0xb3, 0x61, 0xa6,
	0x05, 0xd6, 0x44, 0xa8, 0xc5, 0x1a, 0x34, 0xbe, 0x62, 0x5e, 0x13, 0x7a, 0x5c, 0x02, 0xac, 0x09,
	0x1d, 0x17, 0x16, 0xae, 0xfe, 0xdc, 0x8a, 0x02, 0x8f, 0x34, 0xbe, 0x6a, 0x5e, 0xb8, 0x99, 0x40,
	0x87, 0x80, 0x5b, 0x32, 0x61, 0x4f, 0x1b, 0x58, 0xac, 0x61, 0x14, 0x38, 0xc4, 0x05, 0x11, 0xfd,
	0x35, 0xb3, 0xc5, 0xba, 0x2d, 0x01, 0xc1, 0x62, 0x55, 0x58, 0xbc, 0x6f, 0xe2, 0x41, 0x09, 0x82,
	0xaf, 0xe7, 0xf5, 0x4d, 0x20, 0xa4, 0x72, 0x60, 0x3e, 0xec, 0x69, 0x63, 0x73, 0x02, 0x6d, 0x71,
	0xac, 0xc8, 0x7e, 0x23, 0x67, 0x4e, 0x38, 0x78, 0x4a, 0xf4, 0x6c, 0x98, 0x69, 0x01, 0x2d, 0x3a,
	0x25, 0x29, 0x34, 0xff, 0xdf, 0x32, 0x6b, 0xd1, 0x8a, 0xa6, 0x52, 0xfc, 0xe7, 0xc2, 0x6c, 0x13,
	0xdb, 0xb1, 0x51, 0x70, 0x40, 0x7c, 0x76, 0x48, 0xf6, 0xcd, 0x9c, 0x1d, 0xab, 0x20, 0xd9, 0x8e,
	0x55, 0x4f, 0x78, 0x13, 0xcd, 0xb2, 0x4e, 0xd2, 0xc0, 0xf7, 0x6d, 0x1a, 0x91, 0xc6, 0x7b, 0xe6,
	0x3d, 0xf7, 0xae, 0x0e, 0x0c, 0x7b, 0x2e, 0x83, 0x0d, 0x7b, 0x2e, 0xd3, 0x90, 0x7e, 0xf0, 0xfb,
	0xe6, 0x3d, 0x97, 0xa1, 0xab, 0x7d, 0xf6, 0xc5, 0x0f, 0x8f, 0xfa, 0x07, 0x0c, 0x29, 0xf3, 0x03,
	0x45, 0xb6, 0xa7, 0xa6, 0xa9, 0x65, 0x1e, 0x52, 0x4b, 0xc0, 0xa7, 0xf3, 0x34, 0x17, 0x65, 0x9b,
	0x80, 0x03, 0x45, 0xc4, 0xb3, 0x13, 0xe2, 0xb6, 0xc4, 0x8e, 0xfe, 0x96, 0x79, 0x34, 0x2c, 0x0e,
	0xad, 0x36, 0xf6, 0x6c, 0xa4, 0x37, 0x80, 0x10, 0x95, 0x37, 0x0f, 0x72, 0x93, 0xd1, 0x36, 0xef,
	0x46, 0xd1, 0x0f, 0x69, 0x39, 0xce, 0x44, 0xda, 0x33, 0xef, 0x5c, 0x4c, 0xec, 0xc8, 0xd9, 0x17,
	0x66, 0xd3, 0x6e, 0x5e, 0xe7, 0x38, 0xb4, 0xb4, 0x9b, 0x66, 0x23, 0xbd, 0x81, 0x0f, 0xa1, 0xa4,
	0xd7, 0xdd, 0xfd, 0x80, 0x38, 0x49, 0xc3, 0xc9, 0x1b, 0x42, 0x41, 0x80, 0x83, 0xf3, 0x21, 0xcc,
	0x34, 0xc1, 0xf6, 0x89, 0x68, 0xfc, 0xa8, 0x65, 0xc7, 0x31, 0x89, 0x63, 0xa6, 0x40, 0xb9, 0xe6,
	0xed, 0x63, 0xd1, 0xf8, 0xd1, 0xa2, 0x82, 0x86, 0xed, 0x13, 0x65, 0x5a, 0xc0, 0x1c, 0x88, 0x9d,
	0x7d, 0xe2, 0x76, 0x3d, 0xd2, 0x20, 0x66, 0x73, 0x60, 0x47, 0xc0, 0x81, 0x39, 0x20, 0x71, 0xe0,
	0x43, 0xc5, 0x67, 0xa6, 0xd9, 0x05, 0x6d, 0xf3, 0x87, 0xee, 0x30, 0x78, 0x25, 0xe6, 0xe0, 0x43,
	0xe3, 0x6c, 0x13, 0xeb, 0x15, 0x4c, 0x0f, 0x6c, 0xbe, 0xbd, 0x9c, 0x5e, 0x09, 0x38, 0xd6, 0x2b,
	0xf1, 0x1b, 0x94, 0x41, 0x61, 0xab, 0xeb, 0xec, 0x7f, 0xdf, 0xac, 0x0c, 0x0a, 0xbb, 0x3c, 0xab,
	0x0c, 0xc6, 0xbd, 0x8d, 0x60, 0x74, 0xc5, 0x5e, 0x90, 0x34, 0xa8, 0xd9, 0xe8, 0xda, 0xf1, 0x02,
	0x66, 0x74, 0x01, 0x2c, 0xfb, 0x9e, 0x90, 0x38, 0xb4, 0x43, 0xfc, 0xc6, 0x07, 0x39, 0xdf, 0x23,
	0xe0, 0xd8, 0xf7, 0x88, 0xdf, 0xa0, 0x47, 0xc5, 0x32, 0xca, 0x41, 0xff, 0xa2, 0x47, 0x66, 0x3d,
	0xea, 0x88, 0xc8, 0x08, 0xd0, 0xa3, 0xe2, 0xfe, 0x66, 0xd8, 0x4d, 0xe9, 0x1b, 0x3a, 0x76, 0xd8,
	0xf0, 0xcc, 0xbb, 0x49, 0x91, 0xe6, 0x07, 0x45, 0x33, 0xb1, 0xf6, 0x0c, 0x72, 0x32, 0xee, 0xee,
	0xa6, 0x19, 0xf9, 0x9d, 0x1c, 0x5a, 0x1a, 0x2c, 0xa3, 0xa5, 0x3d, 0x83, 0x38, 0x83, 0xe7, 0x84,
	0x31, 0x62, 0xdf, 0x2c, 0xce, 0x76, 0x24, 0x20, 0x88, 0x33, 0x85, 0x05, 0xdb, 0x26, 0xee, 0x86,
	0xa1, 0x77, 0xd8, 0x72, 0x89, 0x47, 0x0f, 0x48, 0x74, 0xd8, 0x08, 0x72, 0x02, 0x66, 0x18, 0xf8,
	0x8a, 0x80, 0x86, 0x6d, 0x13, 0x67, 0x5a, 0x80, 0x5f, 0x08, 0x92, 0x92, 0x41, 0x86, 0x66, 0x7e,
	0xc1, 0x29, 0x6a, 0xa7, 0x12, 0xb1, 0xde, 0xc0, 0x6e, 0xe2, 0xb7, 0xe3, 0x47, 0x8d, 0x0f, 0xcd,
	0x8b, 0xea, 0x81, 0x1d, 0x3f, 0x82, 0x45, 0x05, 0xb0, 0x78, 0x15, 0xd5, 0x13, 0xe0, 0x7e, 0xc2,
	0x92, 0x8e, 0xcc, 0x42, 0x8a, 0x15, 0xe6, 0x95, 0x66, 0x34, 0x4a, 0xd4, 0x93, 0x22, 0xc3, 0x87,
	0xbc, 0x11, 0xe7, 0x93, 0xe1, 0x57, 0xbb, 0x48, 0x32, 0xfc, 0x09, 0xdf, 0xd1, 0x93, 0x67, 0x13,
	0xf3, 0x1a, 0x97, 0x11, 0xdf, 0xb0, 0xc6, 0x65, 0x0e, 0x2d, 0x58, 0xb7, 0x07, 0x54, 0xf8, 0x75,
	0xb5, 0xdb, 0x1c, 0xba, 0x39, 0x79, 0xfb, 0x7d, 0x81, 0x3e, 0x60, 0xdd, 0x1e, 0xf4, 0xb5, 0x2e,
	0xcd, 0xa3, 0xb3, 0x81, 0x4f, 0x82, 0x76, 0x4b, 0x5e, 0x17, 0xbb, 0xf4, 0x02, 0x6a, 0x3a, 0xc1,
	0x71, 0xb7, 0xc4, 0x6d, 0x8f, 0xed, 0x56, 0xd9, 0x8f, 0x6b, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x2b, 0xce, 0x9b, 0x89, 0x26, 0x1d, 0x07, 0x00,
}
