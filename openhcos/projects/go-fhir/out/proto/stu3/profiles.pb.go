// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/stu3/profiles.proto

package google_fhir_stu3_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Body Mass Index (BMI) Profile.
// See http://hl7.org/fhir/StructureDefinition/bmi
type Bmi struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept          `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Bmi_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference     `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Bmi_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Bmi_Value   `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference            `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Bmi_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Bmi_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Bmi_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Bmi) Reset()         { *m = Bmi{} }
func (m *Bmi) String() string { return proto.CompactTextString(m) }
func (*Bmi) ProtoMessage()    {}
func (*Bmi) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{0}
}

func (m *Bmi) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bmi.Unmarshal(m, b)
}
func (m *Bmi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bmi.Marshal(b, m, deterministic)
}
func (m *Bmi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bmi.Merge(m, src)
}
func (m *Bmi) XXX_Size() int {
	return xxx_messageInfo_Bmi.Size(m)
}
func (m *Bmi) XXX_DiscardUnknown() {
	xxx_messageInfo_Bmi.DiscardUnknown(m)
}

var xxx_messageInfo_Bmi proto.InternalMessageInfo

func (m *Bmi) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bmi) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Bmi) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Bmi) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Bmi) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bmi) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Bmi) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bmi) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bmi) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Bmi) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Bmi) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Bmi) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Bmi) GetCode() *Bmi_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bmi) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Bmi) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Bmi) GetEffective() *Bmi_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bmi) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Bmi) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Bmi) GetValue() *Bmi_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bmi) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bmi) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bmi) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Bmi) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Bmi) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Bmi) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Bmi) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Bmi) GetReferenceRange() []*Bmi_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Bmi) GetRelated() []*Bmi_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Bmi) GetComponent() []*Bmi_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Body Mass Index (BMI)
type Bmi_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	BMICode              []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=b_m_i_code,json=bMICode,proto3" json:"b_m_i_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bmi_CodeableConceptForCode) Reset()         { *m = Bmi_CodeableConceptForCode{} }
func (m *Bmi_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Bmi_CodeableConceptForCode) ProtoMessage()    {}
func (*Bmi_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{0, 0}
}

func (m *Bmi_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bmi_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Bmi_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bmi_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Bmi_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bmi_CodeableConceptForCode.Merge(m, src)
}
func (m *Bmi_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Bmi_CodeableConceptForCode.Size(m)
}
func (m *Bmi_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Bmi_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Bmi_CodeableConceptForCode proto.InternalMessageInfo

func (m *Bmi_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bmi_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bmi_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Bmi_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bmi_CodeableConceptForCode) GetBMICode() []*CodingWithFixedCode {
	if m != nil {
		return m.BMICode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Bmi_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Bmi_Effective_DateTime
	//	*Bmi_Effective_Period
	Effective            isBmi_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Bmi_Effective) Reset()         { *m = Bmi_Effective{} }
func (m *Bmi_Effective) String() string { return proto.CompactTextString(m) }
func (*Bmi_Effective) ProtoMessage()    {}
func (*Bmi_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{0, 1}
}

func (m *Bmi_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bmi_Effective.Unmarshal(m, b)
}
func (m *Bmi_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bmi_Effective.Marshal(b, m, deterministic)
}
func (m *Bmi_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bmi_Effective.Merge(m, src)
}
func (m *Bmi_Effective) XXX_Size() int {
	return xxx_messageInfo_Bmi_Effective.Size(m)
}
func (m *Bmi_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Bmi_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Bmi_Effective proto.InternalMessageInfo

type isBmi_Effective_Effective interface {
	isBmi_Effective_Effective()
}

type Bmi_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Bmi_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Bmi_Effective_DateTime) isBmi_Effective_Effective() {}

func (*Bmi_Effective_Period) isBmi_Effective_Effective() {}

func (m *Bmi_Effective) GetEffective() isBmi_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bmi_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Bmi_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Bmi_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Bmi_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bmi_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bmi_Effective_OneofMarshaler, _Bmi_Effective_OneofUnmarshaler, _Bmi_Effective_OneofSizer, []interface{}{
		(*Bmi_Effective_DateTime)(nil),
		(*Bmi_Effective_Period)(nil),
	}
}

func _Bmi_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bmi_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bmi_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Bmi_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bmi_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Bmi_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bmi_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Bmi_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Bmi_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bmi_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bmi_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bmi_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Bmi_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Bmi_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bmi_Value_Quantity
	Value                isBmi_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Bmi_Value) Reset()         { *m = Bmi_Value{} }
func (m *Bmi_Value) String() string { return proto.CompactTextString(m) }
func (*Bmi_Value) ProtoMessage()    {}
func (*Bmi_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{0, 2}
}

func (m *Bmi_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bmi_Value.Unmarshal(m, b)
}
func (m *Bmi_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bmi_Value.Marshal(b, m, deterministic)
}
func (m *Bmi_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bmi_Value.Merge(m, src)
}
func (m *Bmi_Value) XXX_Size() int {
	return xxx_messageInfo_Bmi_Value.Size(m)
}
func (m *Bmi_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bmi_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bmi_Value proto.InternalMessageInfo

type isBmi_Value_Value interface {
	isBmi_Value_Value()
}

type Bmi_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bmi_Value_Quantity) isBmi_Value_Value() {}

func (m *Bmi_Value) GetValue() isBmi_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bmi_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bmi_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bmi_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bmi_Value_OneofMarshaler, _Bmi_Value_OneofUnmarshaler, _Bmi_Value_OneofSizer, []interface{}{
		(*Bmi_Value_Quantity)(nil),
	}
}

func _Bmi_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bmi_Value)
	// value
	switch x := m.Value.(type) {
	case *Bmi_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bmi_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bmi_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bmi_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bmi_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bmi_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bmi_Value)
	// value
	switch x := m.Value.(type) {
	case *Bmi_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Bmi_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bmi_ReferenceRange) Reset()         { *m = Bmi_ReferenceRange{} }
func (m *Bmi_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Bmi_ReferenceRange) ProtoMessage()    {}
func (*Bmi_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{0, 3}
}

func (m *Bmi_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bmi_ReferenceRange.Unmarshal(m, b)
}
func (m *Bmi_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bmi_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Bmi_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bmi_ReferenceRange.Merge(m, src)
}
func (m *Bmi_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Bmi_ReferenceRange.Size(m)
}
func (m *Bmi_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Bmi_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Bmi_ReferenceRange proto.InternalMessageInfo

func (m *Bmi_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bmi_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bmi_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bmi_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Bmi_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Bmi_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bmi_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Bmi_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Bmi_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Bmi_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bmi_Related) Reset()         { *m = Bmi_Related{} }
func (m *Bmi_Related) String() string { return proto.CompactTextString(m) }
func (*Bmi_Related) ProtoMessage()    {}
func (*Bmi_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{0, 4}
}

func (m *Bmi_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bmi_Related.Unmarshal(m, b)
}
func (m *Bmi_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bmi_Related.Marshal(b, m, deterministic)
}
func (m *Bmi_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bmi_Related.Merge(m, src)
}
func (m *Bmi_Related) XXX_Size() int {
	return xxx_messageInfo_Bmi_Related.Size(m)
}
func (m *Bmi_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Bmi_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Bmi_Related proto.InternalMessageInfo

func (m *Bmi_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bmi_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bmi_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bmi_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bmi_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Bmi_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept     `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Bmi_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Bmi_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Bmi_Component) Reset()         { *m = Bmi_Component{} }
func (m *Bmi_Component) String() string { return proto.CompactTextString(m) }
func (*Bmi_Component) ProtoMessage()    {}
func (*Bmi_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{0, 5}
}

func (m *Bmi_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bmi_Component.Unmarshal(m, b)
}
func (m *Bmi_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bmi_Component.Marshal(b, m, deterministic)
}
func (m *Bmi_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bmi_Component.Merge(m, src)
}
func (m *Bmi_Component) XXX_Size() int {
	return xxx_messageInfo_Bmi_Component.Size(m)
}
func (m *Bmi_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Bmi_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Bmi_Component proto.InternalMessageInfo

func (m *Bmi_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bmi_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bmi_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bmi_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bmi_Component) GetValue() *Bmi_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bmi_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bmi_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bmi_Component) GetReferenceRange() []*Bmi_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Bmi_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bmi_Component_Value_Quantity
	Value                isBmi_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Bmi_Component_Value) Reset()         { *m = Bmi_Component_Value{} }
func (m *Bmi_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Bmi_Component_Value) ProtoMessage()    {}
func (*Bmi_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{0, 5, 0}
}

func (m *Bmi_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bmi_Component_Value.Unmarshal(m, b)
}
func (m *Bmi_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bmi_Component_Value.Marshal(b, m, deterministic)
}
func (m *Bmi_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bmi_Component_Value.Merge(m, src)
}
func (m *Bmi_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Bmi_Component_Value.Size(m)
}
func (m *Bmi_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bmi_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bmi_Component_Value proto.InternalMessageInfo

type isBmi_Component_Value_Value interface {
	isBmi_Component_Value_Value()
}

type Bmi_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bmi_Component_Value_Quantity) isBmi_Component_Value_Value() {}

func (m *Bmi_Component_Value) GetValue() isBmi_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bmi_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bmi_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bmi_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bmi_Component_Value_OneofMarshaler, _Bmi_Component_Value_OneofUnmarshaler, _Bmi_Component_Value_OneofSizer, []interface{}{
		(*Bmi_Component_Value_Quantity)(nil),
	}
}

func _Bmi_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bmi_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bmi_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bmi_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bmi_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bmi_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bmi_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bmi_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bmi_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bmi_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Body Height Profile.
// See http://hl7.org/fhir/StructureDefinition/bodyheight
type Bodyheight struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept                 `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Bodyheight_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference            `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Bodyheight_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference      `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Bodyheight_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                   `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Bodyheight_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Bodyheight_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Bodyheight_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Bodyheight) Reset()         { *m = Bodyheight{} }
func (m *Bodyheight) String() string { return proto.CompactTextString(m) }
func (*Bodyheight) ProtoMessage()    {}
func (*Bodyheight) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{1}
}

func (m *Bodyheight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyheight.Unmarshal(m, b)
}
func (m *Bodyheight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyheight.Marshal(b, m, deterministic)
}
func (m *Bodyheight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyheight.Merge(m, src)
}
func (m *Bodyheight) XXX_Size() int {
	return xxx_messageInfo_Bodyheight.Size(m)
}
func (m *Bodyheight) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyheight.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyheight proto.InternalMessageInfo

func (m *Bodyheight) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyheight) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Bodyheight) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Bodyheight) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Bodyheight) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bodyheight) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Bodyheight) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyheight) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodyheight) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Bodyheight) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Bodyheight) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Bodyheight) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Bodyheight) GetCode() *Bodyheight_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bodyheight) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Bodyheight) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Bodyheight) GetEffective() *Bodyheight_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bodyheight) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Bodyheight) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Bodyheight) GetValue() *Bodyheight_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodyheight) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bodyheight) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bodyheight) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Bodyheight) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Bodyheight) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Bodyheight) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Bodyheight) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Bodyheight) GetReferenceRange() []*Bodyheight_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Bodyheight) GetRelated() []*Bodyheight_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Bodyheight) GetComponent() []*Bodyheight_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Body Height
type Bodyheight_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	BodyHeightCode       []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=body_height_code,json=bodyHeightCode,proto3" json:"body_height_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bodyheight_CodeableConceptForCode) Reset()         { *m = Bodyheight_CodeableConceptForCode{} }
func (m *Bodyheight_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Bodyheight_CodeableConceptForCode) ProtoMessage()    {}
func (*Bodyheight_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{1, 0}
}

func (m *Bodyheight_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyheight_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Bodyheight_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyheight_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Bodyheight_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyheight_CodeableConceptForCode.Merge(m, src)
}
func (m *Bodyheight_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Bodyheight_CodeableConceptForCode.Size(m)
}
func (m *Bodyheight_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyheight_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyheight_CodeableConceptForCode proto.InternalMessageInfo

func (m *Bodyheight_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyheight_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyheight_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Bodyheight_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bodyheight_CodeableConceptForCode) GetBodyHeightCode() []*CodingWithFixedCode {
	if m != nil {
		return m.BodyHeightCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Bodyheight_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Bodyheight_Effective_DateTime
	//	*Bodyheight_Effective_Period
	Effective            isBodyheight_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Bodyheight_Effective) Reset()         { *m = Bodyheight_Effective{} }
func (m *Bodyheight_Effective) String() string { return proto.CompactTextString(m) }
func (*Bodyheight_Effective) ProtoMessage()    {}
func (*Bodyheight_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{1, 1}
}

func (m *Bodyheight_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyheight_Effective.Unmarshal(m, b)
}
func (m *Bodyheight_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyheight_Effective.Marshal(b, m, deterministic)
}
func (m *Bodyheight_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyheight_Effective.Merge(m, src)
}
func (m *Bodyheight_Effective) XXX_Size() int {
	return xxx_messageInfo_Bodyheight_Effective.Size(m)
}
func (m *Bodyheight_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyheight_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyheight_Effective proto.InternalMessageInfo

type isBodyheight_Effective_Effective interface {
	isBodyheight_Effective_Effective()
}

type Bodyheight_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Bodyheight_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Bodyheight_Effective_DateTime) isBodyheight_Effective_Effective() {}

func (*Bodyheight_Effective_Period) isBodyheight_Effective_Effective() {}

func (m *Bodyheight_Effective) GetEffective() isBodyheight_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bodyheight_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Bodyheight_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Bodyheight_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Bodyheight_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodyheight_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodyheight_Effective_OneofMarshaler, _Bodyheight_Effective_OneofUnmarshaler, _Bodyheight_Effective_OneofSizer, []interface{}{
		(*Bodyheight_Effective_DateTime)(nil),
		(*Bodyheight_Effective_Period)(nil),
	}
}

func _Bodyheight_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodyheight_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bodyheight_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Bodyheight_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodyheight_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Bodyheight_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodyheight_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Bodyheight_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Bodyheight_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodyheight_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodyheight_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bodyheight_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Bodyheight_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Bodyheight_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bodyheight_Value_Quantity
	Value                isBodyheight_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Bodyheight_Value) Reset()         { *m = Bodyheight_Value{} }
func (m *Bodyheight_Value) String() string { return proto.CompactTextString(m) }
func (*Bodyheight_Value) ProtoMessage()    {}
func (*Bodyheight_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{1, 2}
}

func (m *Bodyheight_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyheight_Value.Unmarshal(m, b)
}
func (m *Bodyheight_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyheight_Value.Marshal(b, m, deterministic)
}
func (m *Bodyheight_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyheight_Value.Merge(m, src)
}
func (m *Bodyheight_Value) XXX_Size() int {
	return xxx_messageInfo_Bodyheight_Value.Size(m)
}
func (m *Bodyheight_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyheight_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyheight_Value proto.InternalMessageInfo

type isBodyheight_Value_Value interface {
	isBodyheight_Value_Value()
}

type Bodyheight_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bodyheight_Value_Quantity) isBodyheight_Value_Value() {}

func (m *Bodyheight_Value) GetValue() isBodyheight_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodyheight_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bodyheight_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodyheight_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodyheight_Value_OneofMarshaler, _Bodyheight_Value_OneofUnmarshaler, _Bodyheight_Value_OneofSizer, []interface{}{
		(*Bodyheight_Value_Quantity)(nil),
	}
}

func _Bodyheight_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodyheight_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodyheight_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodyheight_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bodyheight_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodyheight_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bodyheight_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodyheight_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodyheight_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodyheight_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Bodyheight_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bodyheight_ReferenceRange) Reset()         { *m = Bodyheight_ReferenceRange{} }
func (m *Bodyheight_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Bodyheight_ReferenceRange) ProtoMessage()    {}
func (*Bodyheight_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{1, 3}
}

func (m *Bodyheight_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyheight_ReferenceRange.Unmarshal(m, b)
}
func (m *Bodyheight_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyheight_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Bodyheight_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyheight_ReferenceRange.Merge(m, src)
}
func (m *Bodyheight_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Bodyheight_ReferenceRange.Size(m)
}
func (m *Bodyheight_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyheight_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyheight_ReferenceRange proto.InternalMessageInfo

func (m *Bodyheight_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyheight_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyheight_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodyheight_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Bodyheight_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Bodyheight_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bodyheight_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Bodyheight_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Bodyheight_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Bodyheight_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bodyheight_Related) Reset()         { *m = Bodyheight_Related{} }
func (m *Bodyheight_Related) String() string { return proto.CompactTextString(m) }
func (*Bodyheight_Related) ProtoMessage()    {}
func (*Bodyheight_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{1, 4}
}

func (m *Bodyheight_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyheight_Related.Unmarshal(m, b)
}
func (m *Bodyheight_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyheight_Related.Marshal(b, m, deterministic)
}
func (m *Bodyheight_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyheight_Related.Merge(m, src)
}
func (m *Bodyheight_Related) XXX_Size() int {
	return xxx_messageInfo_Bodyheight_Related.Size(m)
}
func (m *Bodyheight_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyheight_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyheight_Related proto.InternalMessageInfo

func (m *Bodyheight_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyheight_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyheight_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodyheight_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bodyheight_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Bodyheight_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Bodyheight_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Bodyheight_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Bodyheight_Component) Reset()         { *m = Bodyheight_Component{} }
func (m *Bodyheight_Component) String() string { return proto.CompactTextString(m) }
func (*Bodyheight_Component) ProtoMessage()    {}
func (*Bodyheight_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{1, 5}
}

func (m *Bodyheight_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyheight_Component.Unmarshal(m, b)
}
func (m *Bodyheight_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyheight_Component.Marshal(b, m, deterministic)
}
func (m *Bodyheight_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyheight_Component.Merge(m, src)
}
func (m *Bodyheight_Component) XXX_Size() int {
	return xxx_messageInfo_Bodyheight_Component.Size(m)
}
func (m *Bodyheight_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyheight_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyheight_Component proto.InternalMessageInfo

func (m *Bodyheight_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyheight_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyheight_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodyheight_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bodyheight_Component) GetValue() *Bodyheight_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodyheight_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bodyheight_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bodyheight_Component) GetReferenceRange() []*Bodyheight_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Bodyheight_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bodyheight_Component_Value_Quantity
	Value                isBodyheight_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Bodyheight_Component_Value) Reset()         { *m = Bodyheight_Component_Value{} }
func (m *Bodyheight_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Bodyheight_Component_Value) ProtoMessage()    {}
func (*Bodyheight_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{1, 5, 0}
}

func (m *Bodyheight_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyheight_Component_Value.Unmarshal(m, b)
}
func (m *Bodyheight_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyheight_Component_Value.Marshal(b, m, deterministic)
}
func (m *Bodyheight_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyheight_Component_Value.Merge(m, src)
}
func (m *Bodyheight_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Bodyheight_Component_Value.Size(m)
}
func (m *Bodyheight_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyheight_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyheight_Component_Value proto.InternalMessageInfo

type isBodyheight_Component_Value_Value interface {
	isBodyheight_Component_Value_Value()
}

type Bodyheight_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bodyheight_Component_Value_Quantity) isBodyheight_Component_Value_Value() {}

func (m *Bodyheight_Component_Value) GetValue() isBodyheight_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodyheight_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bodyheight_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodyheight_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodyheight_Component_Value_OneofMarshaler, _Bodyheight_Component_Value_OneofUnmarshaler, _Bodyheight_Component_Value_OneofSizer, []interface{}{
		(*Bodyheight_Component_Value_Quantity)(nil),
	}
}

func _Bodyheight_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodyheight_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodyheight_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodyheight_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bodyheight_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodyheight_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bodyheight_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodyheight_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodyheight_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodyheight_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Body Length Profile.
// See http://hl7.org/fhir/StructureDefinition/bodylength
type Bodylength struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept                 `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Bodylength_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference            `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Bodylength_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference      `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Bodylength_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                   `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Bodylength_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Bodylength_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Bodylength_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Bodylength) Reset()         { *m = Bodylength{} }
func (m *Bodylength) String() string { return proto.CompactTextString(m) }
func (*Bodylength) ProtoMessage()    {}
func (*Bodylength) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{2}
}

func (m *Bodylength) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodylength.Unmarshal(m, b)
}
func (m *Bodylength) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodylength.Marshal(b, m, deterministic)
}
func (m *Bodylength) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodylength.Merge(m, src)
}
func (m *Bodylength) XXX_Size() int {
	return xxx_messageInfo_Bodylength.Size(m)
}
func (m *Bodylength) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodylength.DiscardUnknown(m)
}

var xxx_messageInfo_Bodylength proto.InternalMessageInfo

func (m *Bodylength) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodylength) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Bodylength) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Bodylength) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Bodylength) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bodylength) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Bodylength) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodylength) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodylength) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Bodylength) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Bodylength) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Bodylength) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Bodylength) GetCode() *Bodylength_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bodylength) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Bodylength) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Bodylength) GetEffective() *Bodylength_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bodylength) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Bodylength) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Bodylength) GetValue() *Bodylength_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodylength) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bodylength) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bodylength) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Bodylength) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Bodylength) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Bodylength) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Bodylength) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Bodylength) GetReferenceRange() []*Bodylength_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Bodylength) GetRelated() []*Bodylength_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Bodylength) GetComponent() []*Bodylength_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Body Length
type Bodylength_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	BodyLengthCode       []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=body_length_code,json=bodyLengthCode,proto3" json:"body_length_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bodylength_CodeableConceptForCode) Reset()         { *m = Bodylength_CodeableConceptForCode{} }
func (m *Bodylength_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Bodylength_CodeableConceptForCode) ProtoMessage()    {}
func (*Bodylength_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{2, 0}
}

func (m *Bodylength_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodylength_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Bodylength_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodylength_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Bodylength_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodylength_CodeableConceptForCode.Merge(m, src)
}
func (m *Bodylength_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Bodylength_CodeableConceptForCode.Size(m)
}
func (m *Bodylength_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodylength_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Bodylength_CodeableConceptForCode proto.InternalMessageInfo

func (m *Bodylength_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodylength_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodylength_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Bodylength_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bodylength_CodeableConceptForCode) GetBodyLengthCode() []*CodingWithFixedCode {
	if m != nil {
		return m.BodyLengthCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Bodylength_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Bodylength_Effective_DateTime
	//	*Bodylength_Effective_Period
	Effective            isBodylength_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Bodylength_Effective) Reset()         { *m = Bodylength_Effective{} }
func (m *Bodylength_Effective) String() string { return proto.CompactTextString(m) }
func (*Bodylength_Effective) ProtoMessage()    {}
func (*Bodylength_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{2, 1}
}

func (m *Bodylength_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodylength_Effective.Unmarshal(m, b)
}
func (m *Bodylength_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodylength_Effective.Marshal(b, m, deterministic)
}
func (m *Bodylength_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodylength_Effective.Merge(m, src)
}
func (m *Bodylength_Effective) XXX_Size() int {
	return xxx_messageInfo_Bodylength_Effective.Size(m)
}
func (m *Bodylength_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodylength_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Bodylength_Effective proto.InternalMessageInfo

type isBodylength_Effective_Effective interface {
	isBodylength_Effective_Effective()
}

type Bodylength_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Bodylength_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Bodylength_Effective_DateTime) isBodylength_Effective_Effective() {}

func (*Bodylength_Effective_Period) isBodylength_Effective_Effective() {}

func (m *Bodylength_Effective) GetEffective() isBodylength_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bodylength_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Bodylength_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Bodylength_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Bodylength_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodylength_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodylength_Effective_OneofMarshaler, _Bodylength_Effective_OneofUnmarshaler, _Bodylength_Effective_OneofSizer, []interface{}{
		(*Bodylength_Effective_DateTime)(nil),
		(*Bodylength_Effective_Period)(nil),
	}
}

func _Bodylength_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodylength_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bodylength_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Bodylength_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodylength_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Bodylength_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodylength_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Bodylength_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Bodylength_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodylength_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodylength_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bodylength_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Bodylength_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Bodylength_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bodylength_Value_Quantity
	Value                isBodylength_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Bodylength_Value) Reset()         { *m = Bodylength_Value{} }
func (m *Bodylength_Value) String() string { return proto.CompactTextString(m) }
func (*Bodylength_Value) ProtoMessage()    {}
func (*Bodylength_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{2, 2}
}

func (m *Bodylength_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodylength_Value.Unmarshal(m, b)
}
func (m *Bodylength_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodylength_Value.Marshal(b, m, deterministic)
}
func (m *Bodylength_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodylength_Value.Merge(m, src)
}
func (m *Bodylength_Value) XXX_Size() int {
	return xxx_messageInfo_Bodylength_Value.Size(m)
}
func (m *Bodylength_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodylength_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bodylength_Value proto.InternalMessageInfo

type isBodylength_Value_Value interface {
	isBodylength_Value_Value()
}

type Bodylength_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bodylength_Value_Quantity) isBodylength_Value_Value() {}

func (m *Bodylength_Value) GetValue() isBodylength_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodylength_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bodylength_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodylength_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodylength_Value_OneofMarshaler, _Bodylength_Value_OneofUnmarshaler, _Bodylength_Value_OneofSizer, []interface{}{
		(*Bodylength_Value_Quantity)(nil),
	}
}

func _Bodylength_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodylength_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodylength_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodylength_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bodylength_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodylength_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bodylength_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodylength_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodylength_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodylength_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Bodylength_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bodylength_ReferenceRange) Reset()         { *m = Bodylength_ReferenceRange{} }
func (m *Bodylength_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Bodylength_ReferenceRange) ProtoMessage()    {}
func (*Bodylength_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{2, 3}
}

func (m *Bodylength_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodylength_ReferenceRange.Unmarshal(m, b)
}
func (m *Bodylength_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodylength_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Bodylength_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodylength_ReferenceRange.Merge(m, src)
}
func (m *Bodylength_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Bodylength_ReferenceRange.Size(m)
}
func (m *Bodylength_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodylength_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Bodylength_ReferenceRange proto.InternalMessageInfo

func (m *Bodylength_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodylength_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodylength_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodylength_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Bodylength_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Bodylength_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bodylength_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Bodylength_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Bodylength_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Bodylength_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bodylength_Related) Reset()         { *m = Bodylength_Related{} }
func (m *Bodylength_Related) String() string { return proto.CompactTextString(m) }
func (*Bodylength_Related) ProtoMessage()    {}
func (*Bodylength_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{2, 4}
}

func (m *Bodylength_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodylength_Related.Unmarshal(m, b)
}
func (m *Bodylength_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodylength_Related.Marshal(b, m, deterministic)
}
func (m *Bodylength_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodylength_Related.Merge(m, src)
}
func (m *Bodylength_Related) XXX_Size() int {
	return xxx_messageInfo_Bodylength_Related.Size(m)
}
func (m *Bodylength_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodylength_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Bodylength_Related proto.InternalMessageInfo

func (m *Bodylength_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodylength_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodylength_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodylength_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bodylength_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Bodylength_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Bodylength_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Bodylength_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Bodylength_Component) Reset()         { *m = Bodylength_Component{} }
func (m *Bodylength_Component) String() string { return proto.CompactTextString(m) }
func (*Bodylength_Component) ProtoMessage()    {}
func (*Bodylength_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{2, 5}
}

func (m *Bodylength_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodylength_Component.Unmarshal(m, b)
}
func (m *Bodylength_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodylength_Component.Marshal(b, m, deterministic)
}
func (m *Bodylength_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodylength_Component.Merge(m, src)
}
func (m *Bodylength_Component) XXX_Size() int {
	return xxx_messageInfo_Bodylength_Component.Size(m)
}
func (m *Bodylength_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodylength_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Bodylength_Component proto.InternalMessageInfo

func (m *Bodylength_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodylength_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodylength_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodylength_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bodylength_Component) GetValue() *Bodylength_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodylength_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bodylength_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bodylength_Component) GetReferenceRange() []*Bodylength_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Bodylength_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bodylength_Component_Value_Quantity
	Value                isBodylength_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Bodylength_Component_Value) Reset()         { *m = Bodylength_Component_Value{} }
func (m *Bodylength_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Bodylength_Component_Value) ProtoMessage()    {}
func (*Bodylength_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{2, 5, 0}
}

func (m *Bodylength_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodylength_Component_Value.Unmarshal(m, b)
}
func (m *Bodylength_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodylength_Component_Value.Marshal(b, m, deterministic)
}
func (m *Bodylength_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodylength_Component_Value.Merge(m, src)
}
func (m *Bodylength_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Bodylength_Component_Value.Size(m)
}
func (m *Bodylength_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodylength_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bodylength_Component_Value proto.InternalMessageInfo

type isBodylength_Component_Value_Value interface {
	isBodylength_Component_Value_Value()
}

type Bodylength_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bodylength_Component_Value_Quantity) isBodylength_Component_Value_Value() {}

func (m *Bodylength_Component_Value) GetValue() isBodylength_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodylength_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bodylength_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodylength_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodylength_Component_Value_OneofMarshaler, _Bodylength_Component_Value_OneofUnmarshaler, _Bodylength_Component_Value_OneofSizer, []interface{}{
		(*Bodylength_Component_Value_Quantity)(nil),
	}
}

func _Bodylength_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodylength_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodylength_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodylength_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bodylength_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodylength_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bodylength_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodylength_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodylength_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodylength_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Body Temperature Profile.
// See http://hl7.org/fhir/StructureDefinition/bodytemp
type Bodytemp struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept               `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Bodytemp_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference          `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Bodytemp_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference    `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Bodytemp_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                 `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Bodytemp_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Bodytemp_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Bodytemp_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Bodytemp) Reset()         { *m = Bodytemp{} }
func (m *Bodytemp) String() string { return proto.CompactTextString(m) }
func (*Bodytemp) ProtoMessage()    {}
func (*Bodytemp) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{3}
}

func (m *Bodytemp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodytemp.Unmarshal(m, b)
}
func (m *Bodytemp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodytemp.Marshal(b, m, deterministic)
}
func (m *Bodytemp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodytemp.Merge(m, src)
}
func (m *Bodytemp) XXX_Size() int {
	return xxx_messageInfo_Bodytemp.Size(m)
}
func (m *Bodytemp) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodytemp.DiscardUnknown(m)
}

var xxx_messageInfo_Bodytemp proto.InternalMessageInfo

func (m *Bodytemp) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodytemp) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Bodytemp) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Bodytemp) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Bodytemp) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bodytemp) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Bodytemp) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodytemp) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodytemp) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Bodytemp) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Bodytemp) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Bodytemp) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Bodytemp) GetCode() *Bodytemp_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bodytemp) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Bodytemp) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Bodytemp) GetEffective() *Bodytemp_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bodytemp) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Bodytemp) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Bodytemp) GetValue() *Bodytemp_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodytemp) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bodytemp) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bodytemp) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Bodytemp) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Bodytemp) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Bodytemp) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Bodytemp) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Bodytemp) GetReferenceRange() []*Bodytemp_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Bodytemp) GetRelated() []*Bodytemp_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Bodytemp) GetComponent() []*Bodytemp_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Body Temperature
type Bodytemp_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	BodyTempCode         []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=body_temp_code,json=bodyTempCode,proto3" json:"body_temp_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bodytemp_CodeableConceptForCode) Reset()         { *m = Bodytemp_CodeableConceptForCode{} }
func (m *Bodytemp_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Bodytemp_CodeableConceptForCode) ProtoMessage()    {}
func (*Bodytemp_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{3, 0}
}

func (m *Bodytemp_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodytemp_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Bodytemp_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodytemp_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Bodytemp_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodytemp_CodeableConceptForCode.Merge(m, src)
}
func (m *Bodytemp_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Bodytemp_CodeableConceptForCode.Size(m)
}
func (m *Bodytemp_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodytemp_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Bodytemp_CodeableConceptForCode proto.InternalMessageInfo

func (m *Bodytemp_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodytemp_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodytemp_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Bodytemp_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bodytemp_CodeableConceptForCode) GetBodyTempCode() []*CodingWithFixedCode {
	if m != nil {
		return m.BodyTempCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Bodytemp_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Bodytemp_Effective_DateTime
	//	*Bodytemp_Effective_Period
	Effective            isBodytemp_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Bodytemp_Effective) Reset()         { *m = Bodytemp_Effective{} }
func (m *Bodytemp_Effective) String() string { return proto.CompactTextString(m) }
func (*Bodytemp_Effective) ProtoMessage()    {}
func (*Bodytemp_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{3, 1}
}

func (m *Bodytemp_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodytemp_Effective.Unmarshal(m, b)
}
func (m *Bodytemp_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodytemp_Effective.Marshal(b, m, deterministic)
}
func (m *Bodytemp_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodytemp_Effective.Merge(m, src)
}
func (m *Bodytemp_Effective) XXX_Size() int {
	return xxx_messageInfo_Bodytemp_Effective.Size(m)
}
func (m *Bodytemp_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodytemp_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Bodytemp_Effective proto.InternalMessageInfo

type isBodytemp_Effective_Effective interface {
	isBodytemp_Effective_Effective()
}

type Bodytemp_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Bodytemp_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Bodytemp_Effective_DateTime) isBodytemp_Effective_Effective() {}

func (*Bodytemp_Effective_Period) isBodytemp_Effective_Effective() {}

func (m *Bodytemp_Effective) GetEffective() isBodytemp_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bodytemp_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Bodytemp_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Bodytemp_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Bodytemp_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodytemp_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodytemp_Effective_OneofMarshaler, _Bodytemp_Effective_OneofUnmarshaler, _Bodytemp_Effective_OneofSizer, []interface{}{
		(*Bodytemp_Effective_DateTime)(nil),
		(*Bodytemp_Effective_Period)(nil),
	}
}

func _Bodytemp_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodytemp_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bodytemp_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Bodytemp_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodytemp_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Bodytemp_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodytemp_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Bodytemp_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Bodytemp_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodytemp_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodytemp_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bodytemp_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Bodytemp_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Bodytemp_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bodytemp_Value_Quantity
	Value                isBodytemp_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bodytemp_Value) Reset()         { *m = Bodytemp_Value{} }
func (m *Bodytemp_Value) String() string { return proto.CompactTextString(m) }
func (*Bodytemp_Value) ProtoMessage()    {}
func (*Bodytemp_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{3, 2}
}

func (m *Bodytemp_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodytemp_Value.Unmarshal(m, b)
}
func (m *Bodytemp_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodytemp_Value.Marshal(b, m, deterministic)
}
func (m *Bodytemp_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodytemp_Value.Merge(m, src)
}
func (m *Bodytemp_Value) XXX_Size() int {
	return xxx_messageInfo_Bodytemp_Value.Size(m)
}
func (m *Bodytemp_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodytemp_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bodytemp_Value proto.InternalMessageInfo

type isBodytemp_Value_Value interface {
	isBodytemp_Value_Value()
}

type Bodytemp_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bodytemp_Value_Quantity) isBodytemp_Value_Value() {}

func (m *Bodytemp_Value) GetValue() isBodytemp_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodytemp_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bodytemp_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodytemp_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodytemp_Value_OneofMarshaler, _Bodytemp_Value_OneofUnmarshaler, _Bodytemp_Value_OneofSizer, []interface{}{
		(*Bodytemp_Value_Quantity)(nil),
	}
}

func _Bodytemp_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodytemp_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodytemp_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodytemp_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bodytemp_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodytemp_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bodytemp_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodytemp_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodytemp_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodytemp_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Bodytemp_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bodytemp_ReferenceRange) Reset()         { *m = Bodytemp_ReferenceRange{} }
func (m *Bodytemp_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Bodytemp_ReferenceRange) ProtoMessage()    {}
func (*Bodytemp_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{3, 3}
}

func (m *Bodytemp_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodytemp_ReferenceRange.Unmarshal(m, b)
}
func (m *Bodytemp_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodytemp_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Bodytemp_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodytemp_ReferenceRange.Merge(m, src)
}
func (m *Bodytemp_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Bodytemp_ReferenceRange.Size(m)
}
func (m *Bodytemp_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodytemp_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Bodytemp_ReferenceRange proto.InternalMessageInfo

func (m *Bodytemp_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodytemp_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodytemp_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodytemp_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Bodytemp_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Bodytemp_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bodytemp_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Bodytemp_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Bodytemp_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Bodytemp_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bodytemp_Related) Reset()         { *m = Bodytemp_Related{} }
func (m *Bodytemp_Related) String() string { return proto.CompactTextString(m) }
func (*Bodytemp_Related) ProtoMessage()    {}
func (*Bodytemp_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{3, 4}
}

func (m *Bodytemp_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodytemp_Related.Unmarshal(m, b)
}
func (m *Bodytemp_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodytemp_Related.Marshal(b, m, deterministic)
}
func (m *Bodytemp_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodytemp_Related.Merge(m, src)
}
func (m *Bodytemp_Related) XXX_Size() int {
	return xxx_messageInfo_Bodytemp_Related.Size(m)
}
func (m *Bodytemp_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodytemp_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Bodytemp_Related proto.InternalMessageInfo

func (m *Bodytemp_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodytemp_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodytemp_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodytemp_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bodytemp_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Bodytemp_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept          `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Bodytemp_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Bodytemp_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Bodytemp_Component) Reset()         { *m = Bodytemp_Component{} }
func (m *Bodytemp_Component) String() string { return proto.CompactTextString(m) }
func (*Bodytemp_Component) ProtoMessage()    {}
func (*Bodytemp_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{3, 5}
}

func (m *Bodytemp_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodytemp_Component.Unmarshal(m, b)
}
func (m *Bodytemp_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodytemp_Component.Marshal(b, m, deterministic)
}
func (m *Bodytemp_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodytemp_Component.Merge(m, src)
}
func (m *Bodytemp_Component) XXX_Size() int {
	return xxx_messageInfo_Bodytemp_Component.Size(m)
}
func (m *Bodytemp_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodytemp_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Bodytemp_Component proto.InternalMessageInfo

func (m *Bodytemp_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodytemp_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodytemp_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodytemp_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bodytemp_Component) GetValue() *Bodytemp_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodytemp_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bodytemp_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bodytemp_Component) GetReferenceRange() []*Bodytemp_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Bodytemp_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bodytemp_Component_Value_Quantity
	Value                isBodytemp_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Bodytemp_Component_Value) Reset()         { *m = Bodytemp_Component_Value{} }
func (m *Bodytemp_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Bodytemp_Component_Value) ProtoMessage()    {}
func (*Bodytemp_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{3, 5, 0}
}

func (m *Bodytemp_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodytemp_Component_Value.Unmarshal(m, b)
}
func (m *Bodytemp_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodytemp_Component_Value.Marshal(b, m, deterministic)
}
func (m *Bodytemp_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodytemp_Component_Value.Merge(m, src)
}
func (m *Bodytemp_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Bodytemp_Component_Value.Size(m)
}
func (m *Bodytemp_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodytemp_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bodytemp_Component_Value proto.InternalMessageInfo

type isBodytemp_Component_Value_Value interface {
	isBodytemp_Component_Value_Value()
}

type Bodytemp_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bodytemp_Component_Value_Quantity) isBodytemp_Component_Value_Value() {}

func (m *Bodytemp_Component_Value) GetValue() isBodytemp_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodytemp_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bodytemp_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodytemp_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodytemp_Component_Value_OneofMarshaler, _Bodytemp_Component_Value_OneofUnmarshaler, _Bodytemp_Component_Value_OneofSizer, []interface{}{
		(*Bodytemp_Component_Value_Quantity)(nil),
	}
}

func _Bodytemp_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodytemp_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodytemp_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodytemp_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bodytemp_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodytemp_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bodytemp_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodytemp_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodytemp_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodytemp_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Body Weight Profile.
// See http://hl7.org/fhir/StructureDefinition/bodyweight
type Bodyweight struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept                 `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Bodyweight_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference            `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Bodyweight_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference      `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Bodyweight_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                   `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Bodyweight_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Bodyweight_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Bodyweight_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Bodyweight) Reset()         { *m = Bodyweight{} }
func (m *Bodyweight) String() string { return proto.CompactTextString(m) }
func (*Bodyweight) ProtoMessage()    {}
func (*Bodyweight) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{4}
}

func (m *Bodyweight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyweight.Unmarshal(m, b)
}
func (m *Bodyweight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyweight.Marshal(b, m, deterministic)
}
func (m *Bodyweight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyweight.Merge(m, src)
}
func (m *Bodyweight) XXX_Size() int {
	return xxx_messageInfo_Bodyweight.Size(m)
}
func (m *Bodyweight) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyweight.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyweight proto.InternalMessageInfo

func (m *Bodyweight) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyweight) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Bodyweight) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Bodyweight) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Bodyweight) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bodyweight) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Bodyweight) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyweight) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodyweight) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Bodyweight) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Bodyweight) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Bodyweight) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Bodyweight) GetCode() *Bodyweight_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bodyweight) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Bodyweight) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Bodyweight) GetEffective() *Bodyweight_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bodyweight) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Bodyweight) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Bodyweight) GetValue() *Bodyweight_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodyweight) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bodyweight) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bodyweight) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Bodyweight) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Bodyweight) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Bodyweight) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Bodyweight) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Bodyweight) GetReferenceRange() []*Bodyweight_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Bodyweight) GetRelated() []*Bodyweight_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Bodyweight) GetComponent() []*Bodyweight_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Body Weight
type Bodyweight_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	BodyWeightCode       []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=body_weight_code,json=bodyWeightCode,proto3" json:"body_weight_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bodyweight_CodeableConceptForCode) Reset()         { *m = Bodyweight_CodeableConceptForCode{} }
func (m *Bodyweight_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Bodyweight_CodeableConceptForCode) ProtoMessage()    {}
func (*Bodyweight_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{4, 0}
}

func (m *Bodyweight_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyweight_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Bodyweight_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyweight_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Bodyweight_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyweight_CodeableConceptForCode.Merge(m, src)
}
func (m *Bodyweight_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Bodyweight_CodeableConceptForCode.Size(m)
}
func (m *Bodyweight_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyweight_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyweight_CodeableConceptForCode proto.InternalMessageInfo

func (m *Bodyweight_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyweight_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyweight_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Bodyweight_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bodyweight_CodeableConceptForCode) GetBodyWeightCode() []*CodingWithFixedCode {
	if m != nil {
		return m.BodyWeightCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Bodyweight_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Bodyweight_Effective_DateTime
	//	*Bodyweight_Effective_Period
	Effective            isBodyweight_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Bodyweight_Effective) Reset()         { *m = Bodyweight_Effective{} }
func (m *Bodyweight_Effective) String() string { return proto.CompactTextString(m) }
func (*Bodyweight_Effective) ProtoMessage()    {}
func (*Bodyweight_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{4, 1}
}

func (m *Bodyweight_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyweight_Effective.Unmarshal(m, b)
}
func (m *Bodyweight_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyweight_Effective.Marshal(b, m, deterministic)
}
func (m *Bodyweight_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyweight_Effective.Merge(m, src)
}
func (m *Bodyweight_Effective) XXX_Size() int {
	return xxx_messageInfo_Bodyweight_Effective.Size(m)
}
func (m *Bodyweight_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyweight_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyweight_Effective proto.InternalMessageInfo

type isBodyweight_Effective_Effective interface {
	isBodyweight_Effective_Effective()
}

type Bodyweight_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Bodyweight_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Bodyweight_Effective_DateTime) isBodyweight_Effective_Effective() {}

func (*Bodyweight_Effective_Period) isBodyweight_Effective_Effective() {}

func (m *Bodyweight_Effective) GetEffective() isBodyweight_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bodyweight_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Bodyweight_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Bodyweight_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Bodyweight_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodyweight_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodyweight_Effective_OneofMarshaler, _Bodyweight_Effective_OneofUnmarshaler, _Bodyweight_Effective_OneofSizer, []interface{}{
		(*Bodyweight_Effective_DateTime)(nil),
		(*Bodyweight_Effective_Period)(nil),
	}
}

func _Bodyweight_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodyweight_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bodyweight_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Bodyweight_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodyweight_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Bodyweight_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodyweight_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Bodyweight_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Bodyweight_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodyweight_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodyweight_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bodyweight_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Bodyweight_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Bodyweight_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bodyweight_Value_Quantity
	Value                isBodyweight_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Bodyweight_Value) Reset()         { *m = Bodyweight_Value{} }
func (m *Bodyweight_Value) String() string { return proto.CompactTextString(m) }
func (*Bodyweight_Value) ProtoMessage()    {}
func (*Bodyweight_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{4, 2}
}

func (m *Bodyweight_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyweight_Value.Unmarshal(m, b)
}
func (m *Bodyweight_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyweight_Value.Marshal(b, m, deterministic)
}
func (m *Bodyweight_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyweight_Value.Merge(m, src)
}
func (m *Bodyweight_Value) XXX_Size() int {
	return xxx_messageInfo_Bodyweight_Value.Size(m)
}
func (m *Bodyweight_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyweight_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyweight_Value proto.InternalMessageInfo

type isBodyweight_Value_Value interface {
	isBodyweight_Value_Value()
}

type Bodyweight_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bodyweight_Value_Quantity) isBodyweight_Value_Value() {}

func (m *Bodyweight_Value) GetValue() isBodyweight_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodyweight_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bodyweight_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodyweight_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodyweight_Value_OneofMarshaler, _Bodyweight_Value_OneofUnmarshaler, _Bodyweight_Value_OneofSizer, []interface{}{
		(*Bodyweight_Value_Quantity)(nil),
	}
}

func _Bodyweight_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodyweight_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodyweight_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodyweight_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bodyweight_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodyweight_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bodyweight_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodyweight_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodyweight_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodyweight_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Bodyweight_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bodyweight_ReferenceRange) Reset()         { *m = Bodyweight_ReferenceRange{} }
func (m *Bodyweight_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Bodyweight_ReferenceRange) ProtoMessage()    {}
func (*Bodyweight_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{4, 3}
}

func (m *Bodyweight_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyweight_ReferenceRange.Unmarshal(m, b)
}
func (m *Bodyweight_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyweight_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Bodyweight_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyweight_ReferenceRange.Merge(m, src)
}
func (m *Bodyweight_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Bodyweight_ReferenceRange.Size(m)
}
func (m *Bodyweight_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyweight_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyweight_ReferenceRange proto.InternalMessageInfo

func (m *Bodyweight_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyweight_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyweight_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodyweight_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Bodyweight_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Bodyweight_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bodyweight_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Bodyweight_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Bodyweight_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Bodyweight_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bodyweight_Related) Reset()         { *m = Bodyweight_Related{} }
func (m *Bodyweight_Related) String() string { return proto.CompactTextString(m) }
func (*Bodyweight_Related) ProtoMessage()    {}
func (*Bodyweight_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{4, 4}
}

func (m *Bodyweight_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyweight_Related.Unmarshal(m, b)
}
func (m *Bodyweight_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyweight_Related.Marshal(b, m, deterministic)
}
func (m *Bodyweight_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyweight_Related.Merge(m, src)
}
func (m *Bodyweight_Related) XXX_Size() int {
	return xxx_messageInfo_Bodyweight_Related.Size(m)
}
func (m *Bodyweight_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyweight_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyweight_Related proto.InternalMessageInfo

func (m *Bodyweight_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyweight_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyweight_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodyweight_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bodyweight_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Bodyweight_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Bodyweight_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Bodyweight_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Bodyweight_Component) Reset()         { *m = Bodyweight_Component{} }
func (m *Bodyweight_Component) String() string { return proto.CompactTextString(m) }
func (*Bodyweight_Component) ProtoMessage()    {}
func (*Bodyweight_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{4, 5}
}

func (m *Bodyweight_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyweight_Component.Unmarshal(m, b)
}
func (m *Bodyweight_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyweight_Component.Marshal(b, m, deterministic)
}
func (m *Bodyweight_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyweight_Component.Merge(m, src)
}
func (m *Bodyweight_Component) XXX_Size() int {
	return xxx_messageInfo_Bodyweight_Component.Size(m)
}
func (m *Bodyweight_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyweight_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyweight_Component proto.InternalMessageInfo

func (m *Bodyweight_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bodyweight_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bodyweight_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bodyweight_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bodyweight_Component) GetValue() *Bodyweight_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodyweight_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bodyweight_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bodyweight_Component) GetReferenceRange() []*Bodyweight_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Bodyweight_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bodyweight_Component_Value_Quantity
	Value                isBodyweight_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Bodyweight_Component_Value) Reset()         { *m = Bodyweight_Component_Value{} }
func (m *Bodyweight_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Bodyweight_Component_Value) ProtoMessage()    {}
func (*Bodyweight_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{4, 5, 0}
}

func (m *Bodyweight_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodyweight_Component_Value.Unmarshal(m, b)
}
func (m *Bodyweight_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodyweight_Component_Value.Marshal(b, m, deterministic)
}
func (m *Bodyweight_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodyweight_Component_Value.Merge(m, src)
}
func (m *Bodyweight_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Bodyweight_Component_Value.Size(m)
}
func (m *Bodyweight_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodyweight_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bodyweight_Component_Value proto.InternalMessageInfo

type isBodyweight_Component_Value_Value interface {
	isBodyweight_Component_Value_Value()
}

type Bodyweight_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bodyweight_Component_Value_Quantity) isBodyweight_Component_Value_Value() {}

func (m *Bodyweight_Component_Value) GetValue() isBodyweight_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bodyweight_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bodyweight_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bodyweight_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bodyweight_Component_Value_OneofMarshaler, _Bodyweight_Component_Value_OneofUnmarshaler, _Bodyweight_Component_Value_OneofSizer, []interface{}{
		(*Bodyweight_Component_Value_Quantity)(nil),
	}
}

func _Bodyweight_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bodyweight_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodyweight_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bodyweight_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bodyweight_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bodyweight_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bodyweight_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bodyweight_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bodyweight_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Bodyweight_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Blood Pressure Profile.
// See http://hl7.org/fhir/StructureDefinition/bp
type Bp struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept         `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Bp_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference    `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Bp_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference           `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Bp_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Bp_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Bp_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	SystolicBP           []*Bp_SystolicBP     `protobuf:"bytes,30,rep,name=systolic_b_p,json=systolicBP,proto3" json:"systolic_b_p,omitempty"`
	DiastolicBP          []*Bp_DiastolicBP    `protobuf:"bytes,31,rep,name=diastolic_b_p,json=diastolicBP,proto3" json:"diastolic_b_p,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Bp) Reset()         { *m = Bp{} }
func (m *Bp) String() string { return proto.CompactTextString(m) }
func (*Bp) ProtoMessage()    {}
func (*Bp) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5}
}

func (m *Bp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp.Unmarshal(m, b)
}
func (m *Bp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp.Marshal(b, m, deterministic)
}
func (m *Bp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp.Merge(m, src)
}
func (m *Bp) XXX_Size() int {
	return xxx_messageInfo_Bp.Size(m)
}
func (m *Bp) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp.DiscardUnknown(m)
}

var xxx_messageInfo_Bp proto.InternalMessageInfo

func (m *Bp) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bp) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Bp) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Bp) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Bp) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bp) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Bp) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bp) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bp) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Bp) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Bp) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Bp) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Bp) GetCode() *Bp_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bp) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Bp) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Bp) GetEffective() *Bp_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bp) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Bp) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Bp) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bp) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bp) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Bp) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Bp) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Bp) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Bp) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Bp) GetReferenceRange() []*Bp_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Bp) GetRelated() []*Bp_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Bp) GetComponent() []*Bp_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Bp) GetSystolicBP() []*Bp_SystolicBP {
	if m != nil {
		return m.SystolicBP
	}
	return nil
}

func (m *Bp) GetDiastolicBP() []*Bp_DiastolicBP {
	if m != nil {
		return m.DiastolicBP
	}
	return nil
}

// Blood Pressure
type Bp_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	BPCode               []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=b_p_code,json=bPCode,proto3" json:"b_p_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bp_CodeableConceptForCode) Reset()         { *m = Bp_CodeableConceptForCode{} }
func (m *Bp_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Bp_CodeableConceptForCode) ProtoMessage()    {}
func (*Bp_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 0}
}

func (m *Bp_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Bp_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Bp_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_CodeableConceptForCode.Merge(m, src)
}
func (m *Bp_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Bp_CodeableConceptForCode.Size(m)
}
func (m *Bp_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_CodeableConceptForCode proto.InternalMessageInfo

func (m *Bp_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bp_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bp_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Bp_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bp_CodeableConceptForCode) GetBPCode() []*CodingWithFixedCode {
	if m != nil {
		return m.BPCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Bp_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Bp_Effective_DateTime
	//	*Bp_Effective_Period
	Effective            isBp_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Bp_Effective) Reset()         { *m = Bp_Effective{} }
func (m *Bp_Effective) String() string { return proto.CompactTextString(m) }
func (*Bp_Effective) ProtoMessage()    {}
func (*Bp_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 1}
}

func (m *Bp_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_Effective.Unmarshal(m, b)
}
func (m *Bp_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_Effective.Marshal(b, m, deterministic)
}
func (m *Bp_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_Effective.Merge(m, src)
}
func (m *Bp_Effective) XXX_Size() int {
	return xxx_messageInfo_Bp_Effective.Size(m)
}
func (m *Bp_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_Effective proto.InternalMessageInfo

type isBp_Effective_Effective interface {
	isBp_Effective_Effective()
}

type Bp_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Bp_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Bp_Effective_DateTime) isBp_Effective_Effective() {}

func (*Bp_Effective_Period) isBp_Effective_Effective() {}

func (m *Bp_Effective) GetEffective() isBp_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Bp_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Bp_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Bp_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Bp_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bp_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bp_Effective_OneofMarshaler, _Bp_Effective_OneofUnmarshaler, _Bp_Effective_OneofSizer, []interface{}{
		(*Bp_Effective_DateTime)(nil),
		(*Bp_Effective_Period)(nil),
	}
}

func _Bp_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bp_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bp_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Bp_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bp_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Bp_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bp_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Bp_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Bp_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bp_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bp_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Bp_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Bp_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Bp_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bp_ReferenceRange) Reset()         { *m = Bp_ReferenceRange{} }
func (m *Bp_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Bp_ReferenceRange) ProtoMessage()    {}
func (*Bp_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 2}
}

func (m *Bp_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_ReferenceRange.Unmarshal(m, b)
}
func (m *Bp_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Bp_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_ReferenceRange.Merge(m, src)
}
func (m *Bp_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Bp_ReferenceRange.Size(m)
}
func (m *Bp_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_ReferenceRange proto.InternalMessageInfo

func (m *Bp_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bp_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bp_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bp_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Bp_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Bp_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bp_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Bp_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Bp_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Bp_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bp_Related) Reset()         { *m = Bp_Related{} }
func (m *Bp_Related) String() string { return proto.CompactTextString(m) }
func (*Bp_Related) ProtoMessage()    {}
func (*Bp_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 3}
}

func (m *Bp_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_Related.Unmarshal(m, b)
}
func (m *Bp_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_Related.Marshal(b, m, deterministic)
}
func (m *Bp_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_Related.Merge(m, src)
}
func (m *Bp_Related) XXX_Size() int {
	return xxx_messageInfo_Bp_Related.Size(m)
}
func (m *Bp_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_Related proto.InternalMessageInfo

func (m *Bp_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bp_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bp_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bp_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Bp_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Bp_Component struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bp_Component) Reset()         { *m = Bp_Component{} }
func (m *Bp_Component) String() string { return proto.CompactTextString(m) }
func (*Bp_Component) ProtoMessage()    {}
func (*Bp_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 4}
}

func (m *Bp_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_Component.Unmarshal(m, b)
}
func (m *Bp_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_Component.Marshal(b, m, deterministic)
}
func (m *Bp_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_Component.Merge(m, src)
}
func (m *Bp_Component) XXX_Size() int {
	return xxx_messageInfo_Bp_Component.Size(m)
}
func (m *Bp_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_Component proto.InternalMessageInfo

// Used when reporting systolic and diastolic blood pressure.
type Bp_SystolicBP struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                          `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Code              *Bp_SystolicBP_CodeableConceptForCode `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value             *Bp_SystolicBP_Value                  `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Bp_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Bp_SystolicBP) Reset()         { *m = Bp_SystolicBP{} }
func (m *Bp_SystolicBP) String() string { return proto.CompactTextString(m) }
func (*Bp_SystolicBP) ProtoMessage()    {}
func (*Bp_SystolicBP) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 5}
}

func (m *Bp_SystolicBP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_SystolicBP.Unmarshal(m, b)
}
func (m *Bp_SystolicBP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_SystolicBP.Marshal(b, m, deterministic)
}
func (m *Bp_SystolicBP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_SystolicBP.Merge(m, src)
}
func (m *Bp_SystolicBP) XXX_Size() int {
	return xxx_messageInfo_Bp_SystolicBP.Size(m)
}
func (m *Bp_SystolicBP) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_SystolicBP.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_SystolicBP proto.InternalMessageInfo

func (m *Bp_SystolicBP) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bp_SystolicBP) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bp_SystolicBP) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bp_SystolicBP) GetCode() *Bp_SystolicBP_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bp_SystolicBP) GetValue() *Bp_SystolicBP_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bp_SystolicBP) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bp_SystolicBP) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bp_SystolicBP) GetReferenceRange() []*Bp_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Type of component observation (code / type)
type Bp_SystolicBP_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	SBPCode              []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=s_b_p_code,json=sBPCode,proto3" json:"s_b_p_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bp_SystolicBP_CodeableConceptForCode) Reset()         { *m = Bp_SystolicBP_CodeableConceptForCode{} }
func (m *Bp_SystolicBP_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Bp_SystolicBP_CodeableConceptForCode) ProtoMessage()    {}
func (*Bp_SystolicBP_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 5, 0}
}

func (m *Bp_SystolicBP_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_SystolicBP_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Bp_SystolicBP_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_SystolicBP_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Bp_SystolicBP_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_SystolicBP_CodeableConceptForCode.Merge(m, src)
}
func (m *Bp_SystolicBP_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Bp_SystolicBP_CodeableConceptForCode.Size(m)
}
func (m *Bp_SystolicBP_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_SystolicBP_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_SystolicBP_CodeableConceptForCode proto.InternalMessageInfo

func (m *Bp_SystolicBP_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bp_SystolicBP_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bp_SystolicBP_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Bp_SystolicBP_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bp_SystolicBP_CodeableConceptForCode) GetSBPCode() []*CodingWithFixedCode {
	if m != nil {
		return m.SBPCode
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Bp_SystolicBP_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bp_SystolicBP_Value_Quantity
	Value                isBp_SystolicBP_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Bp_SystolicBP_Value) Reset()         { *m = Bp_SystolicBP_Value{} }
func (m *Bp_SystolicBP_Value) String() string { return proto.CompactTextString(m) }
func (*Bp_SystolicBP_Value) ProtoMessage()    {}
func (*Bp_SystolicBP_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 5, 1}
}

func (m *Bp_SystolicBP_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_SystolicBP_Value.Unmarshal(m, b)
}
func (m *Bp_SystolicBP_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_SystolicBP_Value.Marshal(b, m, deterministic)
}
func (m *Bp_SystolicBP_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_SystolicBP_Value.Merge(m, src)
}
func (m *Bp_SystolicBP_Value) XXX_Size() int {
	return xxx_messageInfo_Bp_SystolicBP_Value.Size(m)
}
func (m *Bp_SystolicBP_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_SystolicBP_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_SystolicBP_Value proto.InternalMessageInfo

type isBp_SystolicBP_Value_Value interface {
	isBp_SystolicBP_Value_Value()
}

type Bp_SystolicBP_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bp_SystolicBP_Value_Quantity) isBp_SystolicBP_Value_Value() {}

func (m *Bp_SystolicBP_Value) GetValue() isBp_SystolicBP_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bp_SystolicBP_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bp_SystolicBP_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bp_SystolicBP_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bp_SystolicBP_Value_OneofMarshaler, _Bp_SystolicBP_Value_OneofUnmarshaler, _Bp_SystolicBP_Value_OneofSizer, []interface{}{
		(*Bp_SystolicBP_Value_Quantity)(nil),
	}
}

func _Bp_SystolicBP_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bp_SystolicBP_Value)
	// value
	switch x := m.Value.(type) {
	case *Bp_SystolicBP_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bp_SystolicBP_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bp_SystolicBP_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bp_SystolicBP_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bp_SystolicBP_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bp_SystolicBP_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bp_SystolicBP_Value)
	// value
	switch x := m.Value.(type) {
	case *Bp_SystolicBP_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Used when reporting systolic and diastolic blood pressure.
type Bp_DiastolicBP struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                           `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Code              *Bp_DiastolicBP_CodeableConceptForCode `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value             *Bp_DiastolicBP_Value                  `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Bp_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Bp_DiastolicBP) Reset()         { *m = Bp_DiastolicBP{} }
func (m *Bp_DiastolicBP) String() string { return proto.CompactTextString(m) }
func (*Bp_DiastolicBP) ProtoMessage()    {}
func (*Bp_DiastolicBP) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 6}
}

func (m *Bp_DiastolicBP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_DiastolicBP.Unmarshal(m, b)
}
func (m *Bp_DiastolicBP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_DiastolicBP.Marshal(b, m, deterministic)
}
func (m *Bp_DiastolicBP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_DiastolicBP.Merge(m, src)
}
func (m *Bp_DiastolicBP) XXX_Size() int {
	return xxx_messageInfo_Bp_DiastolicBP.Size(m)
}
func (m *Bp_DiastolicBP) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_DiastolicBP.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_DiastolicBP proto.InternalMessageInfo

func (m *Bp_DiastolicBP) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bp_DiastolicBP) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bp_DiastolicBP) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Bp_DiastolicBP) GetCode() *Bp_DiastolicBP_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Bp_DiastolicBP) GetValue() *Bp_DiastolicBP_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bp_DiastolicBP) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Bp_DiastolicBP) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Bp_DiastolicBP) GetReferenceRange() []*Bp_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Type of component observation (code / type)
type Bp_DiastolicBP_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	DBPCode              []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=d_b_p_code,json=dBPCode,proto3" json:"d_b_p_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Bp_DiastolicBP_CodeableConceptForCode) Reset()         { *m = Bp_DiastolicBP_CodeableConceptForCode{} }
func (m *Bp_DiastolicBP_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Bp_DiastolicBP_CodeableConceptForCode) ProtoMessage()    {}
func (*Bp_DiastolicBP_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 6, 0}
}

func (m *Bp_DiastolicBP_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_DiastolicBP_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Bp_DiastolicBP_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_DiastolicBP_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Bp_DiastolicBP_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_DiastolicBP_CodeableConceptForCode.Merge(m, src)
}
func (m *Bp_DiastolicBP_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Bp_DiastolicBP_CodeableConceptForCode.Size(m)
}
func (m *Bp_DiastolicBP_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_DiastolicBP_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_DiastolicBP_CodeableConceptForCode proto.InternalMessageInfo

func (m *Bp_DiastolicBP_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Bp_DiastolicBP_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Bp_DiastolicBP_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Bp_DiastolicBP_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Bp_DiastolicBP_CodeableConceptForCode) GetDBPCode() []*CodingWithFixedCode {
	if m != nil {
		return m.DBPCode
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Bp_DiastolicBP_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Bp_DiastolicBP_Value_Quantity
	Value                isBp_DiastolicBP_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Bp_DiastolicBP_Value) Reset()         { *m = Bp_DiastolicBP_Value{} }
func (m *Bp_DiastolicBP_Value) String() string { return proto.CompactTextString(m) }
func (*Bp_DiastolicBP_Value) ProtoMessage()    {}
func (*Bp_DiastolicBP_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{5, 6, 1}
}

func (m *Bp_DiastolicBP_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bp_DiastolicBP_Value.Unmarshal(m, b)
}
func (m *Bp_DiastolicBP_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bp_DiastolicBP_Value.Marshal(b, m, deterministic)
}
func (m *Bp_DiastolicBP_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bp_DiastolicBP_Value.Merge(m, src)
}
func (m *Bp_DiastolicBP_Value) XXX_Size() int {
	return xxx_messageInfo_Bp_DiastolicBP_Value.Size(m)
}
func (m *Bp_DiastolicBP_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Bp_DiastolicBP_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Bp_DiastolicBP_Value proto.InternalMessageInfo

type isBp_DiastolicBP_Value_Value interface {
	isBp_DiastolicBP_Value_Value()
}

type Bp_DiastolicBP_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Bp_DiastolicBP_Value_Quantity) isBp_DiastolicBP_Value_Value() {}

func (m *Bp_DiastolicBP_Value) GetValue() isBp_DiastolicBP_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Bp_DiastolicBP_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Bp_DiastolicBP_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Bp_DiastolicBP_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Bp_DiastolicBP_Value_OneofMarshaler, _Bp_DiastolicBP_Value_OneofUnmarshaler, _Bp_DiastolicBP_Value_OneofSizer, []interface{}{
		(*Bp_DiastolicBP_Value_Quantity)(nil),
	}
}

func _Bp_DiastolicBP_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Bp_DiastolicBP_Value)
	// value
	switch x := m.Value.(type) {
	case *Bp_DiastolicBP_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Bp_DiastolicBP_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Bp_DiastolicBP_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Bp_DiastolicBP_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Bp_DiastolicBP_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Bp_DiastolicBP_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Bp_DiastolicBP_Value)
	// value
	switch x := m.Value.(type) {
	case *Bp_DiastolicBP_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Example Lipid Profile.
// Measurements and simple assertions.
// See http://hl7.org/fhir/StructureDefinition/cholesterol
type Cholesterol struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Cholesterol
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference             `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Cholesterol_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference       `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Cholesterol_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// + | ++ | +++ | - | -- | ---
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                  `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       *Cholesterol_ReferenceRange `protobuf:"bytes,27,opt,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Component            []*Cholesterol_Component    `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Cholesterol) Reset()         { *m = Cholesterol{} }
func (m *Cholesterol) String() string { return proto.CompactTextString(m) }
func (*Cholesterol) ProtoMessage()    {}
func (*Cholesterol) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{6}
}

func (m *Cholesterol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cholesterol.Unmarshal(m, b)
}
func (m *Cholesterol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cholesterol.Marshal(b, m, deterministic)
}
func (m *Cholesterol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cholesterol.Merge(m, src)
}
func (m *Cholesterol) XXX_Size() int {
	return xxx_messageInfo_Cholesterol.Size(m)
}
func (m *Cholesterol) XXX_DiscardUnknown() {
	xxx_messageInfo_Cholesterol.DiscardUnknown(m)
}

var xxx_messageInfo_Cholesterol proto.InternalMessageInfo

func (m *Cholesterol) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Cholesterol) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Cholesterol) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Cholesterol) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Cholesterol) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Cholesterol) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Cholesterol) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Cholesterol) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Cholesterol) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Cholesterol) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Cholesterol) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Cholesterol) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Cholesterol) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Cholesterol) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Cholesterol) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Cholesterol) GetEffective() *Cholesterol_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Cholesterol) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Cholesterol) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Cholesterol) GetValue() *Cholesterol_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Cholesterol) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Cholesterol) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Cholesterol) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Cholesterol) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Cholesterol) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Cholesterol) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Cholesterol) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Cholesterol) GetReferenceRange() *Cholesterol_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Cholesterol) GetComponent() []*Cholesterol_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Clinically relevant time/time-period for observation
type Cholesterol_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Cholesterol_Effective_DateTime
	//	*Cholesterol_Effective_Period
	Effective            isCholesterol_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Cholesterol_Effective) Reset()         { *m = Cholesterol_Effective{} }
func (m *Cholesterol_Effective) String() string { return proto.CompactTextString(m) }
func (*Cholesterol_Effective) ProtoMessage()    {}
func (*Cholesterol_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{6, 0}
}

func (m *Cholesterol_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cholesterol_Effective.Unmarshal(m, b)
}
func (m *Cholesterol_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cholesterol_Effective.Marshal(b, m, deterministic)
}
func (m *Cholesterol_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cholesterol_Effective.Merge(m, src)
}
func (m *Cholesterol_Effective) XXX_Size() int {
	return xxx_messageInfo_Cholesterol_Effective.Size(m)
}
func (m *Cholesterol_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Cholesterol_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Cholesterol_Effective proto.InternalMessageInfo

type isCholesterol_Effective_Effective interface {
	isCholesterol_Effective_Effective()
}

type Cholesterol_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Cholesterol_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Cholesterol_Effective_DateTime) isCholesterol_Effective_Effective() {}

func (*Cholesterol_Effective_Period) isCholesterol_Effective_Effective() {}

func (m *Cholesterol_Effective) GetEffective() isCholesterol_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Cholesterol_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Cholesterol_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Cholesterol_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Cholesterol_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Cholesterol_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Cholesterol_Effective_OneofMarshaler, _Cholesterol_Effective_OneofUnmarshaler, _Cholesterol_Effective_OneofSizer, []interface{}{
		(*Cholesterol_Effective_DateTime)(nil),
		(*Cholesterol_Effective_Period)(nil),
	}
}

func _Cholesterol_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Cholesterol_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Cholesterol_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Cholesterol_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Cholesterol_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Cholesterol_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Cholesterol_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Cholesterol_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Cholesterol_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Cholesterol_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Cholesterol_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Cholesterol_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Cholesterol value
type Cholesterol_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Cholesterol_Value_Quantity
	Value                isCholesterol_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Cholesterol_Value) Reset()         { *m = Cholesterol_Value{} }
func (m *Cholesterol_Value) String() string { return proto.CompactTextString(m) }
func (*Cholesterol_Value) ProtoMessage()    {}
func (*Cholesterol_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{6, 1}
}

func (m *Cholesterol_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cholesterol_Value.Unmarshal(m, b)
}
func (m *Cholesterol_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cholesterol_Value.Marshal(b, m, deterministic)
}
func (m *Cholesterol_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cholesterol_Value.Merge(m, src)
}
func (m *Cholesterol_Value) XXX_Size() int {
	return xxx_messageInfo_Cholesterol_Value.Size(m)
}
func (m *Cholesterol_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Cholesterol_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Cholesterol_Value proto.InternalMessageInfo

type isCholesterol_Value_Value interface {
	isCholesterol_Value_Value()
}

type Cholesterol_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Cholesterol_Value_Quantity) isCholesterol_Value_Value() {}

func (m *Cholesterol_Value) GetValue() isCholesterol_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Cholesterol_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Cholesterol_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Cholesterol_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Cholesterol_Value_OneofMarshaler, _Cholesterol_Value_OneofUnmarshaler, _Cholesterol_Value_OneofSizer, []interface{}{
		(*Cholesterol_Value_Quantity)(nil),
	}
}

func _Cholesterol_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Cholesterol_Value)
	// value
	switch x := m.Value.(type) {
	case *Cholesterol_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Cholesterol_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Cholesterol_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Cholesterol_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Cholesterol_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Cholesterol_Value)
	// value
	switch x := m.Value.(type) {
	case *Cholesterol_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Cholesterol_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A fixed quantity (no comparator)
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cholesterol_ReferenceRange) Reset()         { *m = Cholesterol_ReferenceRange{} }
func (m *Cholesterol_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Cholesterol_ReferenceRange) ProtoMessage()    {}
func (*Cholesterol_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{6, 2}
}

func (m *Cholesterol_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cholesterol_ReferenceRange.Unmarshal(m, b)
}
func (m *Cholesterol_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cholesterol_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Cholesterol_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cholesterol_ReferenceRange.Merge(m, src)
}
func (m *Cholesterol_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Cholesterol_ReferenceRange.Size(m)
}
func (m *Cholesterol_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Cholesterol_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Cholesterol_ReferenceRange proto.InternalMessageInfo

func (m *Cholesterol_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Cholesterol_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Cholesterol_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Cholesterol_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Cholesterol_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Component results
type Cholesterol_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept             `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Cholesterol_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Cholesterol_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Cholesterol_Component) Reset()         { *m = Cholesterol_Component{} }
func (m *Cholesterol_Component) String() string { return proto.CompactTextString(m) }
func (*Cholesterol_Component) ProtoMessage()    {}
func (*Cholesterol_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{6, 3}
}

func (m *Cholesterol_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cholesterol_Component.Unmarshal(m, b)
}
func (m *Cholesterol_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cholesterol_Component.Marshal(b, m, deterministic)
}
func (m *Cholesterol_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cholesterol_Component.Merge(m, src)
}
func (m *Cholesterol_Component) XXX_Size() int {
	return xxx_messageInfo_Cholesterol_Component.Size(m)
}
func (m *Cholesterol_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Cholesterol_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Cholesterol_Component proto.InternalMessageInfo

func (m *Cholesterol_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Cholesterol_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Cholesterol_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Cholesterol_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Cholesterol_Component) GetValue() *Cholesterol_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Cholesterol_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Cholesterol_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Cholesterol_Component) GetReferenceRange() []*Cholesterol_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Actual component result
type Cholesterol_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Cholesterol_Component_Value_Quantity
	//	*Cholesterol_Component_Value_CodeableConcept
	//	*Cholesterol_Component_Value_StringValue
	//	*Cholesterol_Component_Value_Range
	//	*Cholesterol_Component_Value_Ratio
	//	*Cholesterol_Component_Value_SampledData
	//	*Cholesterol_Component_Value_Attachment
	//	*Cholesterol_Component_Value_Time
	//	*Cholesterol_Component_Value_DateTime
	//	*Cholesterol_Component_Value_Period
	Value                isCholesterol_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Cholesterol_Component_Value) Reset()         { *m = Cholesterol_Component_Value{} }
func (m *Cholesterol_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Cholesterol_Component_Value) ProtoMessage()    {}
func (*Cholesterol_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{6, 3, 0}
}

func (m *Cholesterol_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cholesterol_Component_Value.Unmarshal(m, b)
}
func (m *Cholesterol_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cholesterol_Component_Value.Marshal(b, m, deterministic)
}
func (m *Cholesterol_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cholesterol_Component_Value.Merge(m, src)
}
func (m *Cholesterol_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Cholesterol_Component_Value.Size(m)
}
func (m *Cholesterol_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Cholesterol_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Cholesterol_Component_Value proto.InternalMessageInfo

type isCholesterol_Component_Value_Value interface {
	isCholesterol_Component_Value_Value()
}

type Cholesterol_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Cholesterol_Component_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Cholesterol_Component_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type Cholesterol_Component_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type Cholesterol_Component_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,5,opt,name=ratio,proto3,oneof"`
}

type Cholesterol_Component_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,6,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Cholesterol_Component_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,7,opt,name=attachment,proto3,oneof"`
}

type Cholesterol_Component_Value_Time struct {
	Time *Time `protobuf:"bytes,8,opt,name=time,proto3,oneof"`
}

type Cholesterol_Component_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,9,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Cholesterol_Component_Value_Period struct {
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3,oneof"`
}

func (*Cholesterol_Component_Value_Quantity) isCholesterol_Component_Value_Value() {}

func (*Cholesterol_Component_Value_CodeableConcept) isCholesterol_Component_Value_Value() {}

func (*Cholesterol_Component_Value_StringValue) isCholesterol_Component_Value_Value() {}

func (*Cholesterol_Component_Value_Range) isCholesterol_Component_Value_Value() {}

func (*Cholesterol_Component_Value_Ratio) isCholesterol_Component_Value_Value() {}

func (*Cholesterol_Component_Value_SampledData) isCholesterol_Component_Value_Value() {}

func (*Cholesterol_Component_Value_Attachment) isCholesterol_Component_Value_Value() {}

func (*Cholesterol_Component_Value_Time) isCholesterol_Component_Value_Value() {}

func (*Cholesterol_Component_Value_DateTime) isCholesterol_Component_Value_Value() {}

func (*Cholesterol_Component_Value_Period) isCholesterol_Component_Value_Value() {}

func (m *Cholesterol_Component_Value) GetValue() isCholesterol_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Cholesterol_Component_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Cholesterol_Component_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Cholesterol_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Cholesterol_Component_Value_OneofMarshaler, _Cholesterol_Component_Value_OneofUnmarshaler, _Cholesterol_Component_Value_OneofSizer, []interface{}{
		(*Cholesterol_Component_Value_Quantity)(nil),
		(*Cholesterol_Component_Value_CodeableConcept)(nil),
		(*Cholesterol_Component_Value_StringValue)(nil),
		(*Cholesterol_Component_Value_Range)(nil),
		(*Cholesterol_Component_Value_Ratio)(nil),
		(*Cholesterol_Component_Value_SampledData)(nil),
		(*Cholesterol_Component_Value_Attachment)(nil),
		(*Cholesterol_Component_Value_Time)(nil),
		(*Cholesterol_Component_Value_DateTime)(nil),
		(*Cholesterol_Component_Value_Period)(nil),
	}
}

func _Cholesterol_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Cholesterol_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Cholesterol_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Cholesterol_Component_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Cholesterol_Component_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Cholesterol_Component_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Cholesterol_Component_Value_Ratio:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Cholesterol_Component_Value_SampledData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Cholesterol_Component_Value_Attachment:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Cholesterol_Component_Value_Time:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Cholesterol_Component_Value_DateTime:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Cholesterol_Component_Value_Period:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Cholesterol_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Cholesterol_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Cholesterol_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_StringValue{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_Range{msg}
		return true, err
	case 5: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_Ratio{msg}
		return true, err
	case 6: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_SampledData{msg}
		return true, err
	case 7: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_Attachment{msg}
		return true, err
	case 8: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_Time{msg}
		return true, err
	case 9: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_DateTime{msg}
		return true, err
	case 10: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Cholesterol_Component_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Cholesterol_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Cholesterol_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Cholesterol_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Component_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Component_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Component_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Component_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Component_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Component_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Component_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Component_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cholesterol_Component_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Clinical Document Profile for
// Composition. A set of resources composed into a single coherent clinical
// statement with clinical attestation. See
// http://hl7.org/fhir/StructureDefinition/clinicaldocument
type Clinicaldocument struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical identifier of composition (version-independent)
	Identifier *Identifier `protobuf:"bytes,9,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// preliminary | final | amended | entered-in-error
	Status *CompositionStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Kind of composition (LOINC if possible)
	Type *CodeableConcept `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// Categorization of Composition
	ClassValue *CodeableConcept `protobuf:"bytes,12,opt,name=class_value,json=class,proto3" json:"class_value,omitempty"`
	// Who and/or what the composition is about
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// Context of the Composition
	Encounter *Reference `protobuf:"bytes,14,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// Composition editing time
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// Who and/or what authored the composition
	Author []*Reference `protobuf:"bytes,16,rep,name=author,proto3" json:"author,omitempty"`
	// Human Readable name/title
	Title *String `protobuf:"bytes,17,opt,name=title,proto3" json:"title,omitempty"`
	// As defined by affinity domain
	Confidentiality *ConfidentialityClassificationCode `protobuf:"bytes,18,opt,name=confidentiality,proto3" json:"confidentiality,omitempty"`
	Attester        []*Clinicaldocument_Attester       `protobuf:"bytes,19,rep,name=attester,proto3" json:"attester,omitempty"`
	// Organization which maintains the composition
	Custodian            *Reference                    `protobuf:"bytes,20,opt,name=custodian,proto3" json:"custodian,omitempty"`
	RelatesTo            []*Clinicaldocument_RelatesTo `protobuf:"bytes,21,rep,name=relates_to,json=relatesTo,proto3" json:"relates_to,omitempty"`
	Event                []*Clinicaldocument_Event     `protobuf:"bytes,22,rep,name=event,proto3" json:"event,omitempty"`
	Section              []*Clinicaldocument_Section   `protobuf:"bytes,23,rep,name=section,proto3" json:"section,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Clinicaldocument) Reset()         { *m = Clinicaldocument{} }
func (m *Clinicaldocument) String() string { return proto.CompactTextString(m) }
func (*Clinicaldocument) ProtoMessage()    {}
func (*Clinicaldocument) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{7}
}

func (m *Clinicaldocument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clinicaldocument.Unmarshal(m, b)
}
func (m *Clinicaldocument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clinicaldocument.Marshal(b, m, deterministic)
}
func (m *Clinicaldocument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clinicaldocument.Merge(m, src)
}
func (m *Clinicaldocument) XXX_Size() int {
	return xxx_messageInfo_Clinicaldocument.Size(m)
}
func (m *Clinicaldocument) XXX_DiscardUnknown() {
	xxx_messageInfo_Clinicaldocument.DiscardUnknown(m)
}

var xxx_messageInfo_Clinicaldocument proto.InternalMessageInfo

func (m *Clinicaldocument) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Clinicaldocument) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Clinicaldocument) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Clinicaldocument) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Clinicaldocument) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Clinicaldocument) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Clinicaldocument) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Clinicaldocument) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Clinicaldocument) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Clinicaldocument) GetStatus() *CompositionStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Clinicaldocument) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Clinicaldocument) GetClassValue() *CodeableConcept {
	if m != nil {
		return m.ClassValue
	}
	return nil
}

func (m *Clinicaldocument) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Clinicaldocument) GetEncounter() *Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *Clinicaldocument) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Clinicaldocument) GetAuthor() []*Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Clinicaldocument) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Clinicaldocument) GetConfidentiality() *ConfidentialityClassificationCode {
	if m != nil {
		return m.Confidentiality
	}
	return nil
}

func (m *Clinicaldocument) GetAttester() []*Clinicaldocument_Attester {
	if m != nil {
		return m.Attester
	}
	return nil
}

func (m *Clinicaldocument) GetCustodian() *Reference {
	if m != nil {
		return m.Custodian
	}
	return nil
}

func (m *Clinicaldocument) GetRelatesTo() []*Clinicaldocument_RelatesTo {
	if m != nil {
		return m.RelatesTo
	}
	return nil
}

func (m *Clinicaldocument) GetEvent() []*Clinicaldocument_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Clinicaldocument) GetSection() []*Clinicaldocument_Section {
	if m != nil {
		return m.Section
	}
	return nil
}

// Attests to accuracy of composition
type Clinicaldocument_Attester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// personal | professional | legal | official
	Mode []*CompositionAttestationModeCode `protobuf:"bytes,4,rep,name=mode,proto3" json:"mode,omitempty"`
	// When the composition was attested
	Time *DateTime `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	// Who attested the composition
	Party                *Reference `protobuf:"bytes,6,opt,name=party,proto3" json:"party,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Clinicaldocument_Attester) Reset()         { *m = Clinicaldocument_Attester{} }
func (m *Clinicaldocument_Attester) String() string { return proto.CompactTextString(m) }
func (*Clinicaldocument_Attester) ProtoMessage()    {}
func (*Clinicaldocument_Attester) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{7, 0}
}

func (m *Clinicaldocument_Attester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clinicaldocument_Attester.Unmarshal(m, b)
}
func (m *Clinicaldocument_Attester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clinicaldocument_Attester.Marshal(b, m, deterministic)
}
func (m *Clinicaldocument_Attester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clinicaldocument_Attester.Merge(m, src)
}
func (m *Clinicaldocument_Attester) XXX_Size() int {
	return xxx_messageInfo_Clinicaldocument_Attester.Size(m)
}
func (m *Clinicaldocument_Attester) XXX_DiscardUnknown() {
	xxx_messageInfo_Clinicaldocument_Attester.DiscardUnknown(m)
}

var xxx_messageInfo_Clinicaldocument_Attester proto.InternalMessageInfo

func (m *Clinicaldocument_Attester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Clinicaldocument_Attester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Clinicaldocument_Attester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Clinicaldocument_Attester) GetMode() []*CompositionAttestationModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *Clinicaldocument_Attester) GetTime() *DateTime {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Clinicaldocument_Attester) GetParty() *Reference {
	if m != nil {
		return m.Party
	}
	return nil
}

// Relationships to other compositions/documents
type Clinicaldocument_RelatesTo struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// replaces | transforms | signs | appends
	Code                 *DocumentRelationshipTypeCode      `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Target               *Clinicaldocument_RelatesTo_Target `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Clinicaldocument_RelatesTo) Reset()         { *m = Clinicaldocument_RelatesTo{} }
func (m *Clinicaldocument_RelatesTo) String() string { return proto.CompactTextString(m) }
func (*Clinicaldocument_RelatesTo) ProtoMessage()    {}
func (*Clinicaldocument_RelatesTo) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{7, 1}
}

func (m *Clinicaldocument_RelatesTo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clinicaldocument_RelatesTo.Unmarshal(m, b)
}
func (m *Clinicaldocument_RelatesTo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clinicaldocument_RelatesTo.Marshal(b, m, deterministic)
}
func (m *Clinicaldocument_RelatesTo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clinicaldocument_RelatesTo.Merge(m, src)
}
func (m *Clinicaldocument_RelatesTo) XXX_Size() int {
	return xxx_messageInfo_Clinicaldocument_RelatesTo.Size(m)
}
func (m *Clinicaldocument_RelatesTo) XXX_DiscardUnknown() {
	xxx_messageInfo_Clinicaldocument_RelatesTo.DiscardUnknown(m)
}

var xxx_messageInfo_Clinicaldocument_RelatesTo proto.InternalMessageInfo

func (m *Clinicaldocument_RelatesTo) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Clinicaldocument_RelatesTo) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Clinicaldocument_RelatesTo) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Clinicaldocument_RelatesTo) GetCode() *DocumentRelationshipTypeCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Clinicaldocument_RelatesTo) GetTarget() *Clinicaldocument_RelatesTo_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

// Target of the relationship
type Clinicaldocument_RelatesTo_Target struct {
	// Types that are valid to be assigned to Target:
	//	*Clinicaldocument_RelatesTo_Target_Identifier
	//	*Clinicaldocument_RelatesTo_Target_Reference
	Target               isClinicaldocument_RelatesTo_Target_Target `protobuf_oneof:"target"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *Clinicaldocument_RelatesTo_Target) Reset()         { *m = Clinicaldocument_RelatesTo_Target{} }
func (m *Clinicaldocument_RelatesTo_Target) String() string { return proto.CompactTextString(m) }
func (*Clinicaldocument_RelatesTo_Target) ProtoMessage()    {}
func (*Clinicaldocument_RelatesTo_Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{7, 1, 0}
}

func (m *Clinicaldocument_RelatesTo_Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clinicaldocument_RelatesTo_Target.Unmarshal(m, b)
}
func (m *Clinicaldocument_RelatesTo_Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clinicaldocument_RelatesTo_Target.Marshal(b, m, deterministic)
}
func (m *Clinicaldocument_RelatesTo_Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clinicaldocument_RelatesTo_Target.Merge(m, src)
}
func (m *Clinicaldocument_RelatesTo_Target) XXX_Size() int {
	return xxx_messageInfo_Clinicaldocument_RelatesTo_Target.Size(m)
}
func (m *Clinicaldocument_RelatesTo_Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Clinicaldocument_RelatesTo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Clinicaldocument_RelatesTo_Target proto.InternalMessageInfo

type isClinicaldocument_RelatesTo_Target_Target interface {
	isClinicaldocument_RelatesTo_Target_Target()
}

type Clinicaldocument_RelatesTo_Target_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,1,opt,name=identifier,proto3,oneof"`
}

type Clinicaldocument_RelatesTo_Target_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*Clinicaldocument_RelatesTo_Target_Identifier) isClinicaldocument_RelatesTo_Target_Target() {}

func (*Clinicaldocument_RelatesTo_Target_Reference) isClinicaldocument_RelatesTo_Target_Target() {}

func (m *Clinicaldocument_RelatesTo_Target) GetTarget() isClinicaldocument_RelatesTo_Target_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Clinicaldocument_RelatesTo_Target) GetIdentifier() *Identifier {
	if x, ok := m.GetTarget().(*Clinicaldocument_RelatesTo_Target_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (m *Clinicaldocument_RelatesTo_Target) GetReference() *Reference {
	if x, ok := m.GetTarget().(*Clinicaldocument_RelatesTo_Target_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Clinicaldocument_RelatesTo_Target) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Clinicaldocument_RelatesTo_Target_OneofMarshaler, _Clinicaldocument_RelatesTo_Target_OneofUnmarshaler, _Clinicaldocument_RelatesTo_Target_OneofSizer, []interface{}{
		(*Clinicaldocument_RelatesTo_Target_Identifier)(nil),
		(*Clinicaldocument_RelatesTo_Target_Reference)(nil),
	}
}

func _Clinicaldocument_RelatesTo_Target_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Clinicaldocument_RelatesTo_Target)
	// target
	switch x := m.Target.(type) {
	case *Clinicaldocument_RelatesTo_Target_Identifier:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case *Clinicaldocument_RelatesTo_Target_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Clinicaldocument_RelatesTo_Target.Target has unexpected type %T", x)
	}
	return nil
}

func _Clinicaldocument_RelatesTo_Target_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Clinicaldocument_RelatesTo_Target)
	switch tag {
	case 1: // target.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.Target = &Clinicaldocument_RelatesTo_Target_Identifier{msg}
		return true, err
	case 2: // target.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Target = &Clinicaldocument_RelatesTo_Target_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Clinicaldocument_RelatesTo_Target_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Clinicaldocument_RelatesTo_Target)
	// target
	switch x := m.Target.(type) {
	case *Clinicaldocument_RelatesTo_Target_Identifier:
		s := proto.Size(x.Identifier)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Clinicaldocument_RelatesTo_Target_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The clinical service(s) being documented
type Clinicaldocument_Event struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code(s) that apply to the event being documented
	Code []*CodeableConcept `protobuf:"bytes,4,rep,name=code,proto3" json:"code,omitempty"`
	// The period covered by the documentation
	Period *Period `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	// The event(s) being documented
	Detail               []*Reference `protobuf:"bytes,6,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Clinicaldocument_Event) Reset()         { *m = Clinicaldocument_Event{} }
func (m *Clinicaldocument_Event) String() string { return proto.CompactTextString(m) }
func (*Clinicaldocument_Event) ProtoMessage()    {}
func (*Clinicaldocument_Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{7, 2}
}

func (m *Clinicaldocument_Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clinicaldocument_Event.Unmarshal(m, b)
}
func (m *Clinicaldocument_Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clinicaldocument_Event.Marshal(b, m, deterministic)
}
func (m *Clinicaldocument_Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clinicaldocument_Event.Merge(m, src)
}
func (m *Clinicaldocument_Event) XXX_Size() int {
	return xxx_messageInfo_Clinicaldocument_Event.Size(m)
}
func (m *Clinicaldocument_Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Clinicaldocument_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Clinicaldocument_Event proto.InternalMessageInfo

func (m *Clinicaldocument_Event) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Clinicaldocument_Event) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Clinicaldocument_Event) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Clinicaldocument_Event) GetCode() []*CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Clinicaldocument_Event) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Clinicaldocument_Event) GetDetail() []*Reference {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Composition is broken into sections
type Clinicaldocument_Section struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Label for section (e.g. for ToC)
	Title *String `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// Classification of section (recommended)
	Code *CodeableConcept `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Text summary of the section, for human interpretation
	Text *Narrative `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	// working | snapshot | changes
	Mode *ListModeCode `protobuf:"bytes,7,opt,name=mode,proto3" json:"mode,omitempty"`
	// Order of section entries
	OrderedBy *CodeableConcept `protobuf:"bytes,8,opt,name=ordered_by,json=orderedBy,proto3" json:"ordered_by,omitempty"`
	// A reference to data that supports this section
	Entry []*Reference `protobuf:"bytes,9,rep,name=entry,proto3" json:"entry,omitempty"`
	// Why the section is empty
	EmptyReason *CodeableConcept `protobuf:"bytes,10,opt,name=empty_reason,json=emptyReason,proto3" json:"empty_reason,omitempty"`
	// Nested Section
	Section              []*Clinicaldocument_Section `protobuf:"bytes,11,rep,name=section,proto3" json:"section,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Clinicaldocument_Section) Reset()         { *m = Clinicaldocument_Section{} }
func (m *Clinicaldocument_Section) String() string { return proto.CompactTextString(m) }
func (*Clinicaldocument_Section) ProtoMessage()    {}
func (*Clinicaldocument_Section) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{7, 3}
}

func (m *Clinicaldocument_Section) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clinicaldocument_Section.Unmarshal(m, b)
}
func (m *Clinicaldocument_Section) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clinicaldocument_Section.Marshal(b, m, deterministic)
}
func (m *Clinicaldocument_Section) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clinicaldocument_Section.Merge(m, src)
}
func (m *Clinicaldocument_Section) XXX_Size() int {
	return xxx_messageInfo_Clinicaldocument_Section.Size(m)
}
func (m *Clinicaldocument_Section) XXX_DiscardUnknown() {
	xxx_messageInfo_Clinicaldocument_Section.DiscardUnknown(m)
}

var xxx_messageInfo_Clinicaldocument_Section proto.InternalMessageInfo

func (m *Clinicaldocument_Section) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Clinicaldocument_Section) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Clinicaldocument_Section) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Clinicaldocument_Section) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Clinicaldocument_Section) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Clinicaldocument_Section) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Clinicaldocument_Section) GetMode() *ListModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *Clinicaldocument_Section) GetOrderedBy() *CodeableConcept {
	if m != nil {
		return m.OrderedBy
	}
	return nil
}

func (m *Clinicaldocument_Section) GetEntry() []*Reference {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *Clinicaldocument_Section) GetEmptyReason() *CodeableConcept {
	if m != nil {
		return m.EmptyReason
	}
	return nil
}

func (m *Clinicaldocument_Section) GetSection() []*Clinicaldocument_Section {
	if m != nil {
		return m.Section
	}
	return nil
}

// Auto-generated from StructureDefinition for Device Metric Observation
// Profile. Measurements and simple assertions. See
// http://hl7.org/fhir/StructureDefinition/devicemetricobservation
type Devicemetricobservation struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Type of observation (code / type)
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject   *Reference                         `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	Effective *Devicemetricobservation_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference                   `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Devicemetricobservation_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// (Measurement) Device
	Device               *Reference                              `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       *Devicemetricobservation_ReferenceRange `protobuf:"bytes,27,opt,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              *Devicemetricobservation_Related        `protobuf:"bytes,28,opt,name=related,proto3" json:"related,omitempty"`
	Component            []*Devicemetricobservation_Component    `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *Devicemetricobservation) Reset()         { *m = Devicemetricobservation{} }
func (m *Devicemetricobservation) String() string { return proto.CompactTextString(m) }
func (*Devicemetricobservation) ProtoMessage()    {}
func (*Devicemetricobservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{8}
}

func (m *Devicemetricobservation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devicemetricobservation.Unmarshal(m, b)
}
func (m *Devicemetricobservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devicemetricobservation.Marshal(b, m, deterministic)
}
func (m *Devicemetricobservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devicemetricobservation.Merge(m, src)
}
func (m *Devicemetricobservation) XXX_Size() int {
	return xxx_messageInfo_Devicemetricobservation.Size(m)
}
func (m *Devicemetricobservation) XXX_DiscardUnknown() {
	xxx_messageInfo_Devicemetricobservation.DiscardUnknown(m)
}

var xxx_messageInfo_Devicemetricobservation proto.InternalMessageInfo

func (m *Devicemetricobservation) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Devicemetricobservation) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Devicemetricobservation) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Devicemetricobservation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Devicemetricobservation) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Devicemetricobservation) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Devicemetricobservation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Devicemetricobservation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Devicemetricobservation) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Devicemetricobservation) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Devicemetricobservation) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Devicemetricobservation) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Devicemetricobservation) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Devicemetricobservation) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Devicemetricobservation) GetEffective() *Devicemetricobservation_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Devicemetricobservation) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Devicemetricobservation) GetValue() *Devicemetricobservation_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Devicemetricobservation) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Devicemetricobservation) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Devicemetricobservation) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Devicemetricobservation) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Devicemetricobservation) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Devicemetricobservation) GetReferenceRange() *Devicemetricobservation_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Devicemetricobservation) GetRelated() *Devicemetricobservation_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Devicemetricobservation) GetComponent() []*Devicemetricobservation_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Clinically relevant time/time-period for observation
type Devicemetricobservation_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Devicemetricobservation_Effective_DateTime
	Effective            isDevicemetricobservation_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *Devicemetricobservation_Effective) Reset()         { *m = Devicemetricobservation_Effective{} }
func (m *Devicemetricobservation_Effective) String() string { return proto.CompactTextString(m) }
func (*Devicemetricobservation_Effective) ProtoMessage()    {}
func (*Devicemetricobservation_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{8, 0}
}

func (m *Devicemetricobservation_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devicemetricobservation_Effective.Unmarshal(m, b)
}
func (m *Devicemetricobservation_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devicemetricobservation_Effective.Marshal(b, m, deterministic)
}
func (m *Devicemetricobservation_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devicemetricobservation_Effective.Merge(m, src)
}
func (m *Devicemetricobservation_Effective) XXX_Size() int {
	return xxx_messageInfo_Devicemetricobservation_Effective.Size(m)
}
func (m *Devicemetricobservation_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Devicemetricobservation_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Devicemetricobservation_Effective proto.InternalMessageInfo

type isDevicemetricobservation_Effective_Effective interface {
	isDevicemetricobservation_Effective_Effective()
}

type Devicemetricobservation_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

func (*Devicemetricobservation_Effective_DateTime) isDevicemetricobservation_Effective_Effective() {}

func (m *Devicemetricobservation_Effective) GetEffective() isDevicemetricobservation_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Devicemetricobservation_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Devicemetricobservation_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Devicemetricobservation_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Devicemetricobservation_Effective_OneofMarshaler, _Devicemetricobservation_Effective_OneofUnmarshaler, _Devicemetricobservation_Effective_OneofSizer, []interface{}{
		(*Devicemetricobservation_Effective_DateTime)(nil),
	}
}

func _Devicemetricobservation_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Devicemetricobservation_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Devicemetricobservation_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Devicemetricobservation_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Devicemetricobservation_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Devicemetricobservation_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Devicemetricobservation_Effective_DateTime{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Devicemetricobservation_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Devicemetricobservation_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Devicemetricobservation_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Actual result
type Devicemetricobservation_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Devicemetricobservation_Value_Quantity
	//	*Devicemetricobservation_Value_CodeableConcept
	//	*Devicemetricobservation_Value_StringValue
	//	*Devicemetricobservation_Value_Range
	//	*Devicemetricobservation_Value_Ratio
	//	*Devicemetricobservation_Value_SampledData
	//	*Devicemetricobservation_Value_Attachment
	//	*Devicemetricobservation_Value_Time
	//	*Devicemetricobservation_Value_DateTime
	//	*Devicemetricobservation_Value_Period
	Value                isDevicemetricobservation_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *Devicemetricobservation_Value) Reset()         { *m = Devicemetricobservation_Value{} }
func (m *Devicemetricobservation_Value) String() string { return proto.CompactTextString(m) }
func (*Devicemetricobservation_Value) ProtoMessage()    {}
func (*Devicemetricobservation_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{8, 1}
}

func (m *Devicemetricobservation_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devicemetricobservation_Value.Unmarshal(m, b)
}
func (m *Devicemetricobservation_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devicemetricobservation_Value.Marshal(b, m, deterministic)
}
func (m *Devicemetricobservation_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devicemetricobservation_Value.Merge(m, src)
}
func (m *Devicemetricobservation_Value) XXX_Size() int {
	return xxx_messageInfo_Devicemetricobservation_Value.Size(m)
}
func (m *Devicemetricobservation_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Devicemetricobservation_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Devicemetricobservation_Value proto.InternalMessageInfo

type isDevicemetricobservation_Value_Value interface {
	isDevicemetricobservation_Value_Value()
}

type Devicemetricobservation_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Devicemetricobservation_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Devicemetricobservation_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type Devicemetricobservation_Value_Range struct {
	Range *Range `protobuf:"bytes,5,opt,name=range,proto3,oneof"`
}

type Devicemetricobservation_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,6,opt,name=ratio,proto3,oneof"`
}

type Devicemetricobservation_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,7,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Devicemetricobservation_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,8,opt,name=attachment,proto3,oneof"`
}

type Devicemetricobservation_Value_Time struct {
	Time *Time `protobuf:"bytes,9,opt,name=time,proto3,oneof"`
}

type Devicemetricobservation_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,10,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Devicemetricobservation_Value_Period struct {
	Period *Period `protobuf:"bytes,11,opt,name=period,proto3,oneof"`
}

func (*Devicemetricobservation_Value_Quantity) isDevicemetricobservation_Value_Value() {}

func (*Devicemetricobservation_Value_CodeableConcept) isDevicemetricobservation_Value_Value() {}

func (*Devicemetricobservation_Value_StringValue) isDevicemetricobservation_Value_Value() {}

func (*Devicemetricobservation_Value_Range) isDevicemetricobservation_Value_Value() {}

func (*Devicemetricobservation_Value_Ratio) isDevicemetricobservation_Value_Value() {}

func (*Devicemetricobservation_Value_SampledData) isDevicemetricobservation_Value_Value() {}

func (*Devicemetricobservation_Value_Attachment) isDevicemetricobservation_Value_Value() {}

func (*Devicemetricobservation_Value_Time) isDevicemetricobservation_Value_Value() {}

func (*Devicemetricobservation_Value_DateTime) isDevicemetricobservation_Value_Value() {}

func (*Devicemetricobservation_Value_Period) isDevicemetricobservation_Value_Value() {}

func (m *Devicemetricobservation_Value) GetValue() isDevicemetricobservation_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Devicemetricobservation_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Devicemetricobservation_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Devicemetricobservation_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Devicemetricobservation_Value_OneofMarshaler, _Devicemetricobservation_Value_OneofUnmarshaler, _Devicemetricobservation_Value_OneofSizer, []interface{}{
		(*Devicemetricobservation_Value_Quantity)(nil),
		(*Devicemetricobservation_Value_CodeableConcept)(nil),
		(*Devicemetricobservation_Value_StringValue)(nil),
		(*Devicemetricobservation_Value_Range)(nil),
		(*Devicemetricobservation_Value_Ratio)(nil),
		(*Devicemetricobservation_Value_SampledData)(nil),
		(*Devicemetricobservation_Value_Attachment)(nil),
		(*Devicemetricobservation_Value_Time)(nil),
		(*Devicemetricobservation_Value_DateTime)(nil),
		(*Devicemetricobservation_Value_Period)(nil),
	}
}

func _Devicemetricobservation_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Devicemetricobservation_Value)
	// value
	switch x := m.Value.(type) {
	case *Devicemetricobservation_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Devicemetricobservation_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Devicemetricobservation_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Devicemetricobservation_Value_Range:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Devicemetricobservation_Value_Ratio:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Devicemetricobservation_Value_SampledData:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Devicemetricobservation_Value_Attachment:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Devicemetricobservation_Value_Time:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Devicemetricobservation_Value_DateTime:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Devicemetricobservation_Value_Period:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Devicemetricobservation_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Devicemetricobservation_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Devicemetricobservation_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_StringValue{msg}
		return true, err
	case 5: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_Range{msg}
		return true, err
	case 6: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_Ratio{msg}
		return true, err
	case 7: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_SampledData{msg}
		return true, err
	case 8: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_Attachment{msg}
		return true, err
	case 9: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_Time{msg}
		return true, err
	case 10: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_DateTime{msg}
		return true, err
	case 11: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Devicemetricobservation_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Devicemetricobservation_Value)
	// value
	switch x := m.Value.(type) {
	case *Devicemetricobservation_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Devicemetricobservation_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Devicemetricobservation_ReferenceRange) Reset() {
	*m = Devicemetricobservation_ReferenceRange{}
}
func (m *Devicemetricobservation_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Devicemetricobservation_ReferenceRange) ProtoMessage()    {}
func (*Devicemetricobservation_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{8, 2}
}

func (m *Devicemetricobservation_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devicemetricobservation_ReferenceRange.Unmarshal(m, b)
}
func (m *Devicemetricobservation_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devicemetricobservation_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Devicemetricobservation_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devicemetricobservation_ReferenceRange.Merge(m, src)
}
func (m *Devicemetricobservation_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Devicemetricobservation_ReferenceRange.Size(m)
}
func (m *Devicemetricobservation_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Devicemetricobservation_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Devicemetricobservation_ReferenceRange proto.InternalMessageInfo

func (m *Devicemetricobservation_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Devicemetricobservation_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Devicemetricobservation_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Devicemetricobservation_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Devicemetricobservation_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Devicemetricobservation_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Devicemetricobservation_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Devicemetricobservation_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Devicemetricobservation_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Resource related to this observation
type Devicemetricobservation_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Devicemetricobservation_Related) Reset()         { *m = Devicemetricobservation_Related{} }
func (m *Devicemetricobservation_Related) String() string { return proto.CompactTextString(m) }
func (*Devicemetricobservation_Related) ProtoMessage()    {}
func (*Devicemetricobservation_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{8, 3}
}

func (m *Devicemetricobservation_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devicemetricobservation_Related.Unmarshal(m, b)
}
func (m *Devicemetricobservation_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devicemetricobservation_Related.Marshal(b, m, deterministic)
}
func (m *Devicemetricobservation_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devicemetricobservation_Related.Merge(m, src)
}
func (m *Devicemetricobservation_Related) XXX_Size() int {
	return xxx_messageInfo_Devicemetricobservation_Related.Size(m)
}
func (m *Devicemetricobservation_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Devicemetricobservation_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Devicemetricobservation_Related proto.InternalMessageInfo

func (m *Devicemetricobservation_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Devicemetricobservation_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Devicemetricobservation_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Devicemetricobservation_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Devicemetricobservation_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Component results
type Devicemetricobservation_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept                         `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Devicemetricobservation_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Devicemetricobservation_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *Devicemetricobservation_Component) Reset()         { *m = Devicemetricobservation_Component{} }
func (m *Devicemetricobservation_Component) String() string { return proto.CompactTextString(m) }
func (*Devicemetricobservation_Component) ProtoMessage()    {}
func (*Devicemetricobservation_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{8, 4}
}

func (m *Devicemetricobservation_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devicemetricobservation_Component.Unmarshal(m, b)
}
func (m *Devicemetricobservation_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devicemetricobservation_Component.Marshal(b, m, deterministic)
}
func (m *Devicemetricobservation_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devicemetricobservation_Component.Merge(m, src)
}
func (m *Devicemetricobservation_Component) XXX_Size() int {
	return xxx_messageInfo_Devicemetricobservation_Component.Size(m)
}
func (m *Devicemetricobservation_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Devicemetricobservation_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Devicemetricobservation_Component proto.InternalMessageInfo

func (m *Devicemetricobservation_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Devicemetricobservation_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Devicemetricobservation_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Devicemetricobservation_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Devicemetricobservation_Component) GetValue() *Devicemetricobservation_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Devicemetricobservation_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Devicemetricobservation_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Devicemetricobservation_Component) GetReferenceRange() []*Devicemetricobservation_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Actual component result
type Devicemetricobservation_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Devicemetricobservation_Component_Value_Quantity
	//	*Devicemetricobservation_Component_Value_CodeableConcept
	//	*Devicemetricobservation_Component_Value_StringValue
	//	*Devicemetricobservation_Component_Value_Range
	//	*Devicemetricobservation_Component_Value_Ratio
	//	*Devicemetricobservation_Component_Value_SampledData
	//	*Devicemetricobservation_Component_Value_Attachment
	//	*Devicemetricobservation_Component_Value_Time
	//	*Devicemetricobservation_Component_Value_DateTime
	//	*Devicemetricobservation_Component_Value_Period
	Value                isDevicemetricobservation_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *Devicemetricobservation_Component_Value) Reset() {
	*m = Devicemetricobservation_Component_Value{}
}
func (m *Devicemetricobservation_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Devicemetricobservation_Component_Value) ProtoMessage()    {}
func (*Devicemetricobservation_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{8, 4, 0}
}

func (m *Devicemetricobservation_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devicemetricobservation_Component_Value.Unmarshal(m, b)
}
func (m *Devicemetricobservation_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devicemetricobservation_Component_Value.Marshal(b, m, deterministic)
}
func (m *Devicemetricobservation_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devicemetricobservation_Component_Value.Merge(m, src)
}
func (m *Devicemetricobservation_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Devicemetricobservation_Component_Value.Size(m)
}
func (m *Devicemetricobservation_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Devicemetricobservation_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Devicemetricobservation_Component_Value proto.InternalMessageInfo

type isDevicemetricobservation_Component_Value_Value interface {
	isDevicemetricobservation_Component_Value_Value()
}

type Devicemetricobservation_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Devicemetricobservation_Component_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Devicemetricobservation_Component_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type Devicemetricobservation_Component_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type Devicemetricobservation_Component_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,5,opt,name=ratio,proto3,oneof"`
}

type Devicemetricobservation_Component_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,6,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Devicemetricobservation_Component_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,7,opt,name=attachment,proto3,oneof"`
}

type Devicemetricobservation_Component_Value_Time struct {
	Time *Time `protobuf:"bytes,8,opt,name=time,proto3,oneof"`
}

type Devicemetricobservation_Component_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,9,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Devicemetricobservation_Component_Value_Period struct {
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3,oneof"`
}

func (*Devicemetricobservation_Component_Value_Quantity) isDevicemetricobservation_Component_Value_Value() {
}

func (*Devicemetricobservation_Component_Value_CodeableConcept) isDevicemetricobservation_Component_Value_Value() {
}

func (*Devicemetricobservation_Component_Value_StringValue) isDevicemetricobservation_Component_Value_Value() {
}

func (*Devicemetricobservation_Component_Value_Range) isDevicemetricobservation_Component_Value_Value() {
}

func (*Devicemetricobservation_Component_Value_Ratio) isDevicemetricobservation_Component_Value_Value() {
}

func (*Devicemetricobservation_Component_Value_SampledData) isDevicemetricobservation_Component_Value_Value() {
}

func (*Devicemetricobservation_Component_Value_Attachment) isDevicemetricobservation_Component_Value_Value() {
}

func (*Devicemetricobservation_Component_Value_Time) isDevicemetricobservation_Component_Value_Value() {
}

func (*Devicemetricobservation_Component_Value_DateTime) isDevicemetricobservation_Component_Value_Value() {
}

func (*Devicemetricobservation_Component_Value_Period) isDevicemetricobservation_Component_Value_Value() {
}

func (m *Devicemetricobservation_Component_Value) GetValue() isDevicemetricobservation_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Devicemetricobservation_Component_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Devicemetricobservation_Component_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Devicemetricobservation_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Devicemetricobservation_Component_Value_OneofMarshaler, _Devicemetricobservation_Component_Value_OneofUnmarshaler, _Devicemetricobservation_Component_Value_OneofSizer, []interface{}{
		(*Devicemetricobservation_Component_Value_Quantity)(nil),
		(*Devicemetricobservation_Component_Value_CodeableConcept)(nil),
		(*Devicemetricobservation_Component_Value_StringValue)(nil),
		(*Devicemetricobservation_Component_Value_Range)(nil),
		(*Devicemetricobservation_Component_Value_Ratio)(nil),
		(*Devicemetricobservation_Component_Value_SampledData)(nil),
		(*Devicemetricobservation_Component_Value_Attachment)(nil),
		(*Devicemetricobservation_Component_Value_Time)(nil),
		(*Devicemetricobservation_Component_Value_DateTime)(nil),
		(*Devicemetricobservation_Component_Value_Period)(nil),
	}
}

func _Devicemetricobservation_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Devicemetricobservation_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Devicemetricobservation_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Devicemetricobservation_Component_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Devicemetricobservation_Component_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Devicemetricobservation_Component_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Devicemetricobservation_Component_Value_Ratio:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Devicemetricobservation_Component_Value_SampledData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Devicemetricobservation_Component_Value_Attachment:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Devicemetricobservation_Component_Value_Time:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Devicemetricobservation_Component_Value_DateTime:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Devicemetricobservation_Component_Value_Period:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Devicemetricobservation_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Devicemetricobservation_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Devicemetricobservation_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_StringValue{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_Range{msg}
		return true, err
	case 5: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_Ratio{msg}
		return true, err
	case 6: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_SampledData{msg}
		return true, err
	case 7: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_Attachment{msg}
		return true, err
	case 8: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_Time{msg}
		return true, err
	case 9: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_DateTime{msg}
		return true, err
	case 10: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Devicemetricobservation_Component_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Devicemetricobservation_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Devicemetricobservation_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Devicemetricobservation_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Component_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Component_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Component_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Component_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Component_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Component_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Component_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Component_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Devicemetricobservation_Component_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for DiagnosticReport-Genetics.
// A Diagnostic report - a combination of request information, atomic results,
// images, interpretation, as well as formatted reports. See
// http://hl7.org/fhir/StructureDefinition/diagnosticreport-genetics
type DiagnosticreportGenetics struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Extension
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier for report
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// What was requested
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | partial | preliminary | final +
	Status *DiagnosticReportStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Service category
	Category *CodeableConcept `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
	// Name/Code for this diagnostic report
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// The subject of the report - usually, but not always, the patient
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Health care event when test ordered
	Context   *Reference                          `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *DiagnosticreportGenetics_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// DateTime this version was released
	Issued    *Instant                              `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	Performer []*DiagnosticreportGenetics_Performer `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	// Specimens this report is based on
	Specimen []*Reference `protobuf:"bytes,19,rep,name=specimen,proto3" json:"specimen,omitempty"`
	// Observations - simple, or complex nested groups
	Result []*Reference `protobuf:"bytes,20,rep,name=result,proto3" json:"result,omitempty"`
	// Reference to full details of imaging associated with the diagnostic report
	ImagingStudy []*Reference                      `protobuf:"bytes,21,rep,name=imaging_study,json=imagingStudy,proto3" json:"imaging_study,omitempty"`
	Image        []*DiagnosticreportGenetics_Image `protobuf:"bytes,22,rep,name=image,proto3" json:"image,omitempty"`
	// Clinical Interpretation of test results
	Conclusion *String `protobuf:"bytes,23,opt,name=conclusion,proto3" json:"conclusion,omitempty"`
	// Entire report as issued
	PresentedForm []*Attachment `protobuf:"bytes,25,rep,name=presented_form,json=presentedForm,proto3" json:"presented_form,omitempty"`
	// AssessedCondition
	AssessedCondition []*Reference `protobuf:"bytes,26,rep,name=assessed_condition,json=assessedCondition,proto3" json:"assessed_condition,omitempty"`
	// FamilyHistory
	FamilyMemberHistory []*Reference `protobuf:"bytes,27,rep,name=family_member_history,json=familyMemberHistory,proto3" json:"family_member_history,omitempty"`
	// Analysis
	Analysis             []*DiagnosticReportAnalysis `protobuf:"bytes,28,rep,name=analysis,proto3" json:"analysis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DiagnosticreportGenetics) Reset()         { *m = DiagnosticreportGenetics{} }
func (m *DiagnosticreportGenetics) String() string { return proto.CompactTextString(m) }
func (*DiagnosticreportGenetics) ProtoMessage()    {}
func (*DiagnosticreportGenetics) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{9}
}

func (m *DiagnosticreportGenetics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiagnosticreportGenetics.Unmarshal(m, b)
}
func (m *DiagnosticreportGenetics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiagnosticreportGenetics.Marshal(b, m, deterministic)
}
func (m *DiagnosticreportGenetics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiagnosticreportGenetics.Merge(m, src)
}
func (m *DiagnosticreportGenetics) XXX_Size() int {
	return xxx_messageInfo_DiagnosticreportGenetics.Size(m)
}
func (m *DiagnosticreportGenetics) XXX_DiscardUnknown() {
	xxx_messageInfo_DiagnosticreportGenetics.DiscardUnknown(m)
}

var xxx_messageInfo_DiagnosticreportGenetics proto.InternalMessageInfo

func (m *DiagnosticreportGenetics) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetStatus() *DiagnosticReportStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetEffective() *DiagnosticreportGenetics_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetPerformer() []*DiagnosticreportGenetics_Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetSpecimen() []*Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetResult() []*Reference {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetImagingStudy() []*Reference {
	if m != nil {
		return m.ImagingStudy
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetImage() []*DiagnosticreportGenetics_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetConclusion() *String {
	if m != nil {
		return m.Conclusion
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetPresentedForm() []*Attachment {
	if m != nil {
		return m.PresentedForm
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetAssessedCondition() []*Reference {
	if m != nil {
		return m.AssessedCondition
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetFamilyMemberHistory() []*Reference {
	if m != nil {
		return m.FamilyMemberHistory
	}
	return nil
}

func (m *DiagnosticreportGenetics) GetAnalysis() []*DiagnosticReportAnalysis {
	if m != nil {
		return m.Analysis
	}
	return nil
}

// Clinically relevant time/time-period for report
type DiagnosticreportGenetics_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*DiagnosticreportGenetics_Effective_DateTime
	//	*DiagnosticreportGenetics_Effective_Period
	Effective            isDiagnosticreportGenetics_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *DiagnosticreportGenetics_Effective) Reset()         { *m = DiagnosticreportGenetics_Effective{} }
func (m *DiagnosticreportGenetics_Effective) String() string { return proto.CompactTextString(m) }
func (*DiagnosticreportGenetics_Effective) ProtoMessage()    {}
func (*DiagnosticreportGenetics_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{9, 0}
}

func (m *DiagnosticreportGenetics_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiagnosticreportGenetics_Effective.Unmarshal(m, b)
}
func (m *DiagnosticreportGenetics_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiagnosticreportGenetics_Effective.Marshal(b, m, deterministic)
}
func (m *DiagnosticreportGenetics_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiagnosticreportGenetics_Effective.Merge(m, src)
}
func (m *DiagnosticreportGenetics_Effective) XXX_Size() int {
	return xxx_messageInfo_DiagnosticreportGenetics_Effective.Size(m)
}
func (m *DiagnosticreportGenetics_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_DiagnosticreportGenetics_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_DiagnosticreportGenetics_Effective proto.InternalMessageInfo

type isDiagnosticreportGenetics_Effective_Effective interface {
	isDiagnosticreportGenetics_Effective_Effective()
}

type DiagnosticreportGenetics_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type DiagnosticreportGenetics_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*DiagnosticreportGenetics_Effective_DateTime) isDiagnosticreportGenetics_Effective_Effective() {}

func (*DiagnosticreportGenetics_Effective_Period) isDiagnosticreportGenetics_Effective_Effective() {}

func (m *DiagnosticreportGenetics_Effective) GetEffective() isDiagnosticreportGenetics_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *DiagnosticreportGenetics_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*DiagnosticreportGenetics_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *DiagnosticreportGenetics_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*DiagnosticreportGenetics_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DiagnosticreportGenetics_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DiagnosticreportGenetics_Effective_OneofMarshaler, _DiagnosticreportGenetics_Effective_OneofUnmarshaler, _DiagnosticreportGenetics_Effective_OneofSizer, []interface{}{
		(*DiagnosticreportGenetics_Effective_DateTime)(nil),
		(*DiagnosticreportGenetics_Effective_Period)(nil),
	}
}

func _DiagnosticreportGenetics_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DiagnosticreportGenetics_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *DiagnosticreportGenetics_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *DiagnosticreportGenetics_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DiagnosticreportGenetics_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _DiagnosticreportGenetics_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DiagnosticreportGenetics_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &DiagnosticreportGenetics_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &DiagnosticreportGenetics_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DiagnosticreportGenetics_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DiagnosticreportGenetics_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *DiagnosticreportGenetics_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DiagnosticreportGenetics_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Participants in producing the report
type DiagnosticreportGenetics_Performer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of performer
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Practitioner or Organization  participant
	Actor                *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DiagnosticreportGenetics_Performer) Reset()         { *m = DiagnosticreportGenetics_Performer{} }
func (m *DiagnosticreportGenetics_Performer) String() string { return proto.CompactTextString(m) }
func (*DiagnosticreportGenetics_Performer) ProtoMessage()    {}
func (*DiagnosticreportGenetics_Performer) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{9, 1}
}

func (m *DiagnosticreportGenetics_Performer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiagnosticreportGenetics_Performer.Unmarshal(m, b)
}
func (m *DiagnosticreportGenetics_Performer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiagnosticreportGenetics_Performer.Marshal(b, m, deterministic)
}
func (m *DiagnosticreportGenetics_Performer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiagnosticreportGenetics_Performer.Merge(m, src)
}
func (m *DiagnosticreportGenetics_Performer) XXX_Size() int {
	return xxx_messageInfo_DiagnosticreportGenetics_Performer.Size(m)
}
func (m *DiagnosticreportGenetics_Performer) XXX_DiscardUnknown() {
	xxx_messageInfo_DiagnosticreportGenetics_Performer.DiscardUnknown(m)
}

var xxx_messageInfo_DiagnosticreportGenetics_Performer proto.InternalMessageInfo

func (m *DiagnosticreportGenetics_Performer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DiagnosticreportGenetics_Performer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DiagnosticreportGenetics_Performer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DiagnosticreportGenetics_Performer) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *DiagnosticreportGenetics_Performer) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

// Key images associated with this report
type DiagnosticreportGenetics_Image struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Comment about the image (e.g. explanation)
	Comment *String `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	// Reference to the image source
	Link                 *Reference `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DiagnosticreportGenetics_Image) Reset()         { *m = DiagnosticreportGenetics_Image{} }
func (m *DiagnosticreportGenetics_Image) String() string { return proto.CompactTextString(m) }
func (*DiagnosticreportGenetics_Image) ProtoMessage()    {}
func (*DiagnosticreportGenetics_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{9, 2}
}

func (m *DiagnosticreportGenetics_Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiagnosticreportGenetics_Image.Unmarshal(m, b)
}
func (m *DiagnosticreportGenetics_Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiagnosticreportGenetics_Image.Marshal(b, m, deterministic)
}
func (m *DiagnosticreportGenetics_Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiagnosticreportGenetics_Image.Merge(m, src)
}
func (m *DiagnosticreportGenetics_Image) XXX_Size() int {
	return xxx_messageInfo_DiagnosticreportGenetics_Image.Size(m)
}
func (m *DiagnosticreportGenetics_Image) XXX_DiscardUnknown() {
	xxx_messageInfo_DiagnosticreportGenetics_Image.DiscardUnknown(m)
}

var xxx_messageInfo_DiagnosticreportGenetics_Image proto.InternalMessageInfo

func (m *DiagnosticreportGenetics_Image) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DiagnosticreportGenetics_Image) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *DiagnosticreportGenetics_Image) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *DiagnosticreportGenetics_Image) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *DiagnosticreportGenetics_Image) GetLink() *Reference {
	if m != nil {
		return m.Link
	}
	return nil
}

// Auto-generated from StructureDefinition for DataElement constraint on
// ElementDefinition data type. Definition of an element in a resource or
// extension. See http://hl7.org/fhir/StructureDefinition/elementdefinition-de
type ElementdefinitionDe struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Path of the element in the hierarchy of elements
	Path *String `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	// Name for this particular element (in a set of slices)
	SliceName *String `protobuf:"bytes,5,opt,name=slice_name,json=sliceName,proto3" json:"slice_name,omitempty"`
	// Name for element to display with or prompt for element
	Label *String `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// Corresponding codes in terminologies
	Code []*Coding `protobuf:"bytes,7,rep,name=code,proto3" json:"code,omitempty"`
	// Full formal definition as narrative text
	Definition *Markdown `protobuf:"bytes,10,opt,name=definition,proto3" json:"definition,omitempty"`
	// Comments about the use of this element
	Comment *Markdown `protobuf:"bytes,11,opt,name=comment,proto3" json:"comment,omitempty"`
	// Why this resource has been created
	Requirements *Markdown `protobuf:"bytes,12,opt,name=requirements,proto3" json:"requirements,omitempty"`
	// Other names
	Alias []*String `protobuf:"bytes,13,rep,name=alias,proto3" json:"alias,omitempty"`
	// Minimum Cardinality
	Min *UnsignedInt `protobuf:"bytes,14,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum Cardinality (a number or *)
	Max          *String                           `protobuf:"bytes,15,opt,name=max,proto3" json:"max,omitempty"`
	Base         *ElementdefinitionDe_Base         `protobuf:"bytes,16,opt,name=base,proto3" json:"base,omitempty"`
	Type         []*ElementdefinitionDe_TypeRef    `protobuf:"bytes,18,rep,name=type,proto3" json:"type,omitempty"`
	DefaultValue *ElementdefinitionDe_DefaultValue `protobuf:"bytes,19,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Implicit meaning when this element is missing
	MeaningWhenMissing *Markdown `protobuf:"bytes,20,opt,name=meaning_when_missing,json=meaningWhenMissing,proto3" json:"meaning_when_missing,omitempty"`
	// What the order of the elements means
	OrderMeaning *String                        `protobuf:"bytes,21,opt,name=order_meaning,json=orderMeaning,proto3" json:"order_meaning,omitempty"`
	Example      []*ElementdefinitionDe_Example `protobuf:"bytes,24,rep,name=example,proto3" json:"example,omitempty"`
	MinValue     *ElementdefinitionDe_MinValue  `protobuf:"bytes,25,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue     *ElementdefinitionDe_MaxValue  `protobuf:"bytes,26,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	// Max length for strings
	MaxLength *Integer `protobuf:"bytes,27,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	// Reference to invariant about presence
	Condition  []*Id                             `protobuf:"bytes,28,rep,name=condition,proto3" json:"condition,omitempty"`
	Constraint []*ElementdefinitionDe_Constraint `protobuf:"bytes,29,rep,name=constraint,proto3" json:"constraint,omitempty"`
	// If the element must supported
	MustSupport *Boolean                                      `protobuf:"bytes,30,opt,name=must_support,json=mustSupport,proto3" json:"must_support,omitempty"`
	Binding     *ElementdefinitionDe_ElementDefinitionBinding `protobuf:"bytes,33,opt,name=binding,proto3" json:"binding,omitempty"`
	Mapping     []*ElementdefinitionDe_Mapping                `protobuf:"bytes,34,rep,name=mapping,proto3" json:"mapping,omitempty"`
	// Extension
	Question []*String `protobuf:"bytes,35,rep,name=question,proto3" json:"question,omitempty"`
	// Extension
	AllowedUnits         *ElementDefinitionAllowedUnits_Value `protobuf:"bytes,36,opt,name=allowed_units,json=allowedUnits,proto3" json:"allowed_units,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ElementdefinitionDe) Reset()         { *m = ElementdefinitionDe{} }
func (m *ElementdefinitionDe) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe) ProtoMessage()    {}
func (*ElementdefinitionDe) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10}
}

func (m *ElementdefinitionDe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe.Unmarshal(m, b)
}
func (m *ElementdefinitionDe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe.Merge(m, src)
}
func (m *ElementdefinitionDe) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe.Size(m)
}
func (m *ElementdefinitionDe) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe proto.InternalMessageInfo

func (m *ElementdefinitionDe) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ElementdefinitionDe) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ElementdefinitionDe) GetPath() *String {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *ElementdefinitionDe) GetSliceName() *String {
	if m != nil {
		return m.SliceName
	}
	return nil
}

func (m *ElementdefinitionDe) GetLabel() *String {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *ElementdefinitionDe) GetCode() []*Coding {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ElementdefinitionDe) GetDefinition() *Markdown {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *ElementdefinitionDe) GetComment() *Markdown {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *ElementdefinitionDe) GetRequirements() *Markdown {
	if m != nil {
		return m.Requirements
	}
	return nil
}

func (m *ElementdefinitionDe) GetAlias() []*String {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *ElementdefinitionDe) GetMin() *UnsignedInt {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *ElementdefinitionDe) GetMax() *String {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *ElementdefinitionDe) GetBase() *ElementdefinitionDe_Base {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ElementdefinitionDe) GetType() []*ElementdefinitionDe_TypeRef {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ElementdefinitionDe) GetDefaultValue() *ElementdefinitionDe_DefaultValue {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *ElementdefinitionDe) GetMeaningWhenMissing() *Markdown {
	if m != nil {
		return m.MeaningWhenMissing
	}
	return nil
}

func (m *ElementdefinitionDe) GetOrderMeaning() *String {
	if m != nil {
		return m.OrderMeaning
	}
	return nil
}

func (m *ElementdefinitionDe) GetExample() []*ElementdefinitionDe_Example {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *ElementdefinitionDe) GetMinValue() *ElementdefinitionDe_MinValue {
	if m != nil {
		return m.MinValue
	}
	return nil
}

func (m *ElementdefinitionDe) GetMaxValue() *ElementdefinitionDe_MaxValue {
	if m != nil {
		return m.MaxValue
	}
	return nil
}

func (m *ElementdefinitionDe) GetMaxLength() *Integer {
	if m != nil {
		return m.MaxLength
	}
	return nil
}

func (m *ElementdefinitionDe) GetCondition() []*Id {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *ElementdefinitionDe) GetConstraint() []*ElementdefinitionDe_Constraint {
	if m != nil {
		return m.Constraint
	}
	return nil
}

func (m *ElementdefinitionDe) GetMustSupport() *Boolean {
	if m != nil {
		return m.MustSupport
	}
	return nil
}

func (m *ElementdefinitionDe) GetBinding() *ElementdefinitionDe_ElementDefinitionBinding {
	if m != nil {
		return m.Binding
	}
	return nil
}

func (m *ElementdefinitionDe) GetMapping() []*ElementdefinitionDe_Mapping {
	if m != nil {
		return m.Mapping
	}
	return nil
}

func (m *ElementdefinitionDe) GetQuestion() []*String {
	if m != nil {
		return m.Question
	}
	return nil
}

func (m *ElementdefinitionDe) GetAllowedUnits() *ElementDefinitionAllowedUnits_Value {
	if m != nil {
		return m.AllowedUnits
	}
	return nil
}

// Base definition information for tools
type ElementdefinitionDe_Base struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Path that identifies the base element
	Path *String `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	// Min cardinality of the base element
	Min *UnsignedInt `protobuf:"bytes,4,opt,name=min,proto3" json:"min,omitempty"`
	// Max cardinality of the base element
	Max                  *String  `protobuf:"bytes,5,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElementdefinitionDe_Base) Reset()         { *m = ElementdefinitionDe_Base{} }
func (m *ElementdefinitionDe_Base) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe_Base) ProtoMessage()    {}
func (*ElementdefinitionDe_Base) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 0}
}

func (m *ElementdefinitionDe_Base) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_Base.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_Base) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_Base.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_Base) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_Base.Merge(m, src)
}
func (m *ElementdefinitionDe_Base) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_Base.Size(m)
}
func (m *ElementdefinitionDe_Base) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_Base.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_Base proto.InternalMessageInfo

func (m *ElementdefinitionDe_Base) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ElementdefinitionDe_Base) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ElementdefinitionDe_Base) GetPath() *String {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *ElementdefinitionDe_Base) GetMin() *UnsignedInt {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *ElementdefinitionDe_Base) GetMax() *String {
	if m != nil {
		return m.Max
	}
	return nil
}

// Data type and Profile for this element
type ElementdefinitionDe_TypeRef struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Data type or Resource (reference to definition)
	Code *Uri `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	// Profile (StructureDefinition) to apply to reference target (or IG)
	TargetProfile *Uri `protobuf:"bytes,5,opt,name=target_profile,json=targetProfile,proto3" json:"target_profile,omitempty"`
	// either | independent | specific
	Versioning           *ReferenceVersionRulesCode `protobuf:"bytes,7,opt,name=versioning,proto3" json:"versioning,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ElementdefinitionDe_TypeRef) Reset()         { *m = ElementdefinitionDe_TypeRef{} }
func (m *ElementdefinitionDe_TypeRef) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe_TypeRef) ProtoMessage()    {}
func (*ElementdefinitionDe_TypeRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 1}
}

func (m *ElementdefinitionDe_TypeRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_TypeRef.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_TypeRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_TypeRef.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_TypeRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_TypeRef.Merge(m, src)
}
func (m *ElementdefinitionDe_TypeRef) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_TypeRef.Size(m)
}
func (m *ElementdefinitionDe_TypeRef) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_TypeRef.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_TypeRef proto.InternalMessageInfo

func (m *ElementdefinitionDe_TypeRef) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ElementdefinitionDe_TypeRef) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ElementdefinitionDe_TypeRef) GetCode() *Uri {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ElementdefinitionDe_TypeRef) GetTargetProfile() *Uri {
	if m != nil {
		return m.TargetProfile
	}
	return nil
}

func (m *ElementdefinitionDe_TypeRef) GetVersioning() *ReferenceVersionRulesCode {
	if m != nil {
		return m.Versioning
	}
	return nil
}

// Specified value if missing from instance
type ElementdefinitionDe_DefaultValue struct {
	// Types that are valid to be assigned to DefaultValue:
	//	*ElementdefinitionDe_DefaultValue_Base64Binary
	//	*ElementdefinitionDe_DefaultValue_Boolean
	//	*ElementdefinitionDe_DefaultValue_Code
	//	*ElementdefinitionDe_DefaultValue_Date
	//	*ElementdefinitionDe_DefaultValue_DateTime
	//	*ElementdefinitionDe_DefaultValue_Decimal
	//	*ElementdefinitionDe_DefaultValue_Id
	//	*ElementdefinitionDe_DefaultValue_Instant
	//	*ElementdefinitionDe_DefaultValue_Integer
	//	*ElementdefinitionDe_DefaultValue_Markdown
	//	*ElementdefinitionDe_DefaultValue_Oid
	//	*ElementdefinitionDe_DefaultValue_PositiveInt
	//	*ElementdefinitionDe_DefaultValue_StringValue
	//	*ElementdefinitionDe_DefaultValue_Time
	//	*ElementdefinitionDe_DefaultValue_UnsignedInt
	//	*ElementdefinitionDe_DefaultValue_Uri
	//	*ElementdefinitionDe_DefaultValue_Address
	//	*ElementdefinitionDe_DefaultValue_Age
	//	*ElementdefinitionDe_DefaultValue_Annotation
	//	*ElementdefinitionDe_DefaultValue_Attachment
	//	*ElementdefinitionDe_DefaultValue_CodeableConcept
	//	*ElementdefinitionDe_DefaultValue_Coding
	//	*ElementdefinitionDe_DefaultValue_ContactPoint
	//	*ElementdefinitionDe_DefaultValue_Count
	//	*ElementdefinitionDe_DefaultValue_Distance
	//	*ElementdefinitionDe_DefaultValue_Duration
	//	*ElementdefinitionDe_DefaultValue_HumanName
	//	*ElementdefinitionDe_DefaultValue_Identifier
	//	*ElementdefinitionDe_DefaultValue_Money
	//	*ElementdefinitionDe_DefaultValue_Period
	//	*ElementdefinitionDe_DefaultValue_Quantity
	//	*ElementdefinitionDe_DefaultValue_Range
	//	*ElementdefinitionDe_DefaultValue_Ratio
	//	*ElementdefinitionDe_DefaultValue_Reference
	//	*ElementdefinitionDe_DefaultValue_SampledData
	//	*ElementdefinitionDe_DefaultValue_Signature
	//	*ElementdefinitionDe_DefaultValue_Timing
	//	*ElementdefinitionDe_DefaultValue_Meta
	DefaultValue         isElementdefinitionDe_DefaultValue_DefaultValue `protobuf_oneof:"default_value"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *ElementdefinitionDe_DefaultValue) Reset()         { *m = ElementdefinitionDe_DefaultValue{} }
func (m *ElementdefinitionDe_DefaultValue) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe_DefaultValue) ProtoMessage()    {}
func (*ElementdefinitionDe_DefaultValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 2}
}

func (m *ElementdefinitionDe_DefaultValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_DefaultValue.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_DefaultValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_DefaultValue.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_DefaultValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_DefaultValue.Merge(m, src)
}
func (m *ElementdefinitionDe_DefaultValue) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_DefaultValue.Size(m)
}
func (m *ElementdefinitionDe_DefaultValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_DefaultValue.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_DefaultValue proto.InternalMessageInfo

type isElementdefinitionDe_DefaultValue_DefaultValue interface {
	isElementdefinitionDe_DefaultValue_DefaultValue()
}

type ElementdefinitionDe_DefaultValue_Base64Binary struct {
	Base64Binary *Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Code struct {
	Code *Code `protobuf:"bytes,3,opt,name=code,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,6,opt,name=decimal,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Id struct {
	Id *Id `protobuf:"bytes,7,opt,name=id,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Instant struct {
	Instant *Instant `protobuf:"bytes,8,opt,name=instant,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Integer struct {
	Integer *Integer `protobuf:"bytes,9,opt,name=integer,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Markdown struct {
	Markdown *Markdown `protobuf:"bytes,10,opt,name=markdown,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Oid struct {
	Oid *Oid `protobuf:"bytes,11,opt,name=oid,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_PositiveInt struct {
	PositiveInt *PositiveInt `protobuf:"bytes,12,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_StringValue struct {
	StringValue *String `protobuf:"bytes,13,opt,name=string_value,json=string,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Time struct {
	Time *Time `protobuf:"bytes,14,opt,name=time,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,15,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Uri struct {
	Uri *Uri `protobuf:"bytes,16,opt,name=uri,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Address struct {
	Address *Address `protobuf:"bytes,17,opt,name=address,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Age struct {
	Age *Age `protobuf:"bytes,18,opt,name=age,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Annotation struct {
	Annotation *Annotation `protobuf:"bytes,19,opt,name=annotation,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,20,opt,name=attachment,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,21,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Coding struct {
	Coding *Coding `protobuf:"bytes,22,opt,name=coding,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_ContactPoint struct {
	ContactPoint *ContactPoint `protobuf:"bytes,23,opt,name=contact_point,json=contactPoint,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Count struct {
	Count *Count `protobuf:"bytes,24,opt,name=count,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Distance struct {
	Distance *Distance `protobuf:"bytes,25,opt,name=distance,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Duration struct {
	Duration *Duration `protobuf:"bytes,26,opt,name=duration,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_HumanName struct {
	HumanName *HumanName `protobuf:"bytes,27,opt,name=human_name,json=humanName,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,28,opt,name=identifier,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Money struct {
	Money *Money `protobuf:"bytes,29,opt,name=money,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Period struct {
	Period *Period `protobuf:"bytes,30,opt,name=period,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,31,opt,name=quantity,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Range struct {
	Range *Range `protobuf:"bytes,32,opt,name=range,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,33,opt,name=ratio,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Reference struct {
	Reference *Reference `protobuf:"bytes,34,opt,name=reference,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,35,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Signature struct {
	Signature *Signature `protobuf:"bytes,36,opt,name=signature,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Timing struct {
	Timing *Timing `protobuf:"bytes,37,opt,name=timing,proto3,oneof"`
}

type ElementdefinitionDe_DefaultValue_Meta struct {
	Meta *Meta `protobuf:"bytes,38,opt,name=meta,proto3,oneof"`
}

func (*ElementdefinitionDe_DefaultValue_Base64Binary) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_Boolean) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Code) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Date) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_DateTime) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Decimal) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Id) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Instant) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Integer) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Markdown) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Oid) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_PositiveInt) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_StringValue) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_Time) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_UnsignedInt) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_Uri) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Address) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Age) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Annotation) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_Attachment) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_CodeableConcept) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_Coding) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_ContactPoint) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_Count) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Distance) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Duration) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_HumanName) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Identifier) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_Money) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Period) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Quantity) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Range) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Ratio) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Reference) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_SampledData) isElementdefinitionDe_DefaultValue_DefaultValue() {
}

func (*ElementdefinitionDe_DefaultValue_Signature) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Timing) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (*ElementdefinitionDe_DefaultValue_Meta) isElementdefinitionDe_DefaultValue_DefaultValue() {}

func (m *ElementdefinitionDe_DefaultValue) GetDefaultValue() isElementdefinitionDe_DefaultValue_DefaultValue {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetBase64Binary() *Base64Binary {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetBoolean() *Boolean {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetCode() *Code {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Code); ok {
		return x.Code
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetDate() *Date {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Date); ok {
		return x.Date
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetDateTime() *DateTime {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetDecimal() *Decimal {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetId() *Id {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Id); ok {
		return x.Id
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetInstant() *Instant {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Instant); ok {
		return x.Instant
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetInteger() *Integer {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetMarkdown() *Markdown {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetOid() *Oid {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Oid); ok {
		return x.Oid
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetPositiveInt() *PositiveInt {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetStringValue() *String {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetTime() *Time {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Time); ok {
		return x.Time
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetUri() *Uri {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetAddress() *Address {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Address); ok {
		return x.Address
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetAge() *Age {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Age); ok {
		return x.Age
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetAnnotation() *Annotation {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetAttachment() *Attachment {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetCoding() *Coding {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetContactPoint() *ContactPoint {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_ContactPoint); ok {
		return x.ContactPoint
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetCount() *Count {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Count); ok {
		return x.Count
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetDistance() *Distance {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Distance); ok {
		return x.Distance
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetDuration() *Duration {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetHumanName() *HumanName {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_HumanName); ok {
		return x.HumanName
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetIdentifier() *Identifier {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetMoney() *Money {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Money); ok {
		return x.Money
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetPeriod() *Period {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Period); ok {
		return x.Period
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetQuantity() *Quantity {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetRange() *Range {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Range); ok {
		return x.Range
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetRatio() *Ratio {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetReference() *Reference {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Reference); ok {
		return x.Reference
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetSampledData() *SampledData {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetSignature() *Signature {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Signature); ok {
		return x.Signature
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetTiming() *Timing {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Timing); ok {
		return x.Timing
	}
	return nil
}

func (m *ElementdefinitionDe_DefaultValue) GetMeta() *Meta {
	if x, ok := m.GetDefaultValue().(*ElementdefinitionDe_DefaultValue_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ElementdefinitionDe_DefaultValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ElementdefinitionDe_DefaultValue_OneofMarshaler, _ElementdefinitionDe_DefaultValue_OneofUnmarshaler, _ElementdefinitionDe_DefaultValue_OneofSizer, []interface{}{
		(*ElementdefinitionDe_DefaultValue_Base64Binary)(nil),
		(*ElementdefinitionDe_DefaultValue_Boolean)(nil),
		(*ElementdefinitionDe_DefaultValue_Code)(nil),
		(*ElementdefinitionDe_DefaultValue_Date)(nil),
		(*ElementdefinitionDe_DefaultValue_DateTime)(nil),
		(*ElementdefinitionDe_DefaultValue_Decimal)(nil),
		(*ElementdefinitionDe_DefaultValue_Id)(nil),
		(*ElementdefinitionDe_DefaultValue_Instant)(nil),
		(*ElementdefinitionDe_DefaultValue_Integer)(nil),
		(*ElementdefinitionDe_DefaultValue_Markdown)(nil),
		(*ElementdefinitionDe_DefaultValue_Oid)(nil),
		(*ElementdefinitionDe_DefaultValue_PositiveInt)(nil),
		(*ElementdefinitionDe_DefaultValue_StringValue)(nil),
		(*ElementdefinitionDe_DefaultValue_Time)(nil),
		(*ElementdefinitionDe_DefaultValue_UnsignedInt)(nil),
		(*ElementdefinitionDe_DefaultValue_Uri)(nil),
		(*ElementdefinitionDe_DefaultValue_Address)(nil),
		(*ElementdefinitionDe_DefaultValue_Age)(nil),
		(*ElementdefinitionDe_DefaultValue_Annotation)(nil),
		(*ElementdefinitionDe_DefaultValue_Attachment)(nil),
		(*ElementdefinitionDe_DefaultValue_CodeableConcept)(nil),
		(*ElementdefinitionDe_DefaultValue_Coding)(nil),
		(*ElementdefinitionDe_DefaultValue_ContactPoint)(nil),
		(*ElementdefinitionDe_DefaultValue_Count)(nil),
		(*ElementdefinitionDe_DefaultValue_Distance)(nil),
		(*ElementdefinitionDe_DefaultValue_Duration)(nil),
		(*ElementdefinitionDe_DefaultValue_HumanName)(nil),
		(*ElementdefinitionDe_DefaultValue_Identifier)(nil),
		(*ElementdefinitionDe_DefaultValue_Money)(nil),
		(*ElementdefinitionDe_DefaultValue_Period)(nil),
		(*ElementdefinitionDe_DefaultValue_Quantity)(nil),
		(*ElementdefinitionDe_DefaultValue_Range)(nil),
		(*ElementdefinitionDe_DefaultValue_Ratio)(nil),
		(*ElementdefinitionDe_DefaultValue_Reference)(nil),
		(*ElementdefinitionDe_DefaultValue_SampledData)(nil),
		(*ElementdefinitionDe_DefaultValue_Signature)(nil),
		(*ElementdefinitionDe_DefaultValue_Timing)(nil),
		(*ElementdefinitionDe_DefaultValue_Meta)(nil),
	}
}

func _ElementdefinitionDe_DefaultValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ElementdefinitionDe_DefaultValue)
	// default_value
	switch x := m.DefaultValue.(type) {
	case *ElementdefinitionDe_DefaultValue_Base64Binary:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Base64Binary); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Boolean:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Code:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_DateTime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Decimal:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Id:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Id); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Instant:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instant); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Integer:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Markdown:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Markdown); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Oid:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oid); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_PositiveInt:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PositiveInt); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_StringValue:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Time:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_UnsignedInt:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Uri:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Address:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Age:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Annotation:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Annotation); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Attachment:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_CodeableConcept:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Coding:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_ContactPoint:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContactPoint); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Count:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Count); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Distance:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Distance); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Duration:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_HumanName:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HumanName); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Identifier:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Money:
		b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Period:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Quantity:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Range:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Ratio:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Reference:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_SampledData:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Signature:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Signature); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Timing:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case *ElementdefinitionDe_DefaultValue_Meta:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Meta); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ElementdefinitionDe_DefaultValue.DefaultValue has unexpected type %T", x)
	}
	return nil
}

func _ElementdefinitionDe_DefaultValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ElementdefinitionDe_DefaultValue)
	switch tag {
	case 1: // default_value.base64_binary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Base64Binary)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Base64Binary{msg}
		return true, err
	case 2: // default_value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Boolean{msg}
		return true, err
	case 3: // default_value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Code{msg}
		return true, err
	case 4: // default_value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Date{msg}
		return true, err
	case 5: // default_value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_DateTime{msg}
		return true, err
	case 6: // default_value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Decimal{msg}
		return true, err
	case 7: // default_value.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Id)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Id{msg}
		return true, err
	case 8: // default_value.instant
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Instant)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Instant{msg}
		return true, err
	case 9: // default_value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Integer{msg}
		return true, err
	case 10: // default_value.markdown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Markdown)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Markdown{msg}
		return true, err
	case 11: // default_value.oid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oid)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Oid{msg}
		return true, err
	case 12: // default_value.positive_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PositiveInt)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_PositiveInt{msg}
		return true, err
	case 13: // default_value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_StringValue{msg}
		return true, err
	case 14: // default_value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Time{msg}
		return true, err
	case 15: // default_value.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_UnsignedInt{msg}
		return true, err
	case 16: // default_value.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Uri{msg}
		return true, err
	case 17: // default_value.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Address{msg}
		return true, err
	case 18: // default_value.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Age{msg}
		return true, err
	case 19: // default_value.annotation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Annotation)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Annotation{msg}
		return true, err
	case 20: // default_value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Attachment{msg}
		return true, err
	case 21: // default_value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_CodeableConcept{msg}
		return true, err
	case 22: // default_value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Coding{msg}
		return true, err
	case 23: // default_value.contact_point
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContactPoint)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_ContactPoint{msg}
		return true, err
	case 24: // default_value.count
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Count)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Count{msg}
		return true, err
	case 25: // default_value.distance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Distance)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Distance{msg}
		return true, err
	case 26: // default_value.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Duration{msg}
		return true, err
	case 27: // default_value.human_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HumanName)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_HumanName{msg}
		return true, err
	case 28: // default_value.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Identifier{msg}
		return true, err
	case 29: // default_value.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Money{msg}
		return true, err
	case 30: // default_value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Period{msg}
		return true, err
	case 31: // default_value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Quantity{msg}
		return true, err
	case 32: // default_value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Range{msg}
		return true, err
	case 33: // default_value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Ratio{msg}
		return true, err
	case 34: // default_value.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Reference{msg}
		return true, err
	case 35: // default_value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_SampledData{msg}
		return true, err
	case 36: // default_value.signature
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Signature)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Signature{msg}
		return true, err
	case 37: // default_value.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Timing{msg}
		return true, err
	case 38: // default_value.meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Meta)
		err := b.DecodeMessage(msg)
		m.DefaultValue = &ElementdefinitionDe_DefaultValue_Meta{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ElementdefinitionDe_DefaultValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ElementdefinitionDe_DefaultValue)
	// default_value
	switch x := m.DefaultValue.(type) {
	case *ElementdefinitionDe_DefaultValue_Base64Binary:
		s := proto.Size(x.Base64Binary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Id:
		s := proto.Size(x.Id)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Instant:
		s := proto.Size(x.Instant)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Markdown:
		s := proto.Size(x.Markdown)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Oid:
		s := proto.Size(x.Oid)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_PositiveInt:
		s := proto.Size(x.PositiveInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Uri:
		s := proto.Size(x.Uri)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Address:
		s := proto.Size(x.Address)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Age:
		s := proto.Size(x.Age)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Annotation:
		s := proto.Size(x.Annotation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Attachment:
		s := proto.Size(x.Attachment)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Coding:
		s := proto.Size(x.Coding)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_ContactPoint:
		s := proto.Size(x.ContactPoint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Count:
		s := proto.Size(x.Count)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Distance:
		s := proto.Size(x.Distance)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Duration:
		s := proto.Size(x.Duration)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_HumanName:
		s := proto.Size(x.HumanName)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Identifier:
		s := proto.Size(x.Identifier)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Money:
		s := proto.Size(x.Money)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Period:
		s := proto.Size(x.Period)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Quantity:
		s := proto.Size(x.Quantity)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Range:
		s := proto.Size(x.Range)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Ratio:
		s := proto.Size(x.Ratio)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Reference:
		s := proto.Size(x.Reference)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_SampledData:
		s := proto.Size(x.SampledData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Signature:
		s := proto.Size(x.Signature)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Timing:
		s := proto.Size(x.Timing)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_DefaultValue_Meta:
		s := proto.Size(x.Meta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Example value (as defined for type)
type ElementdefinitionDe_Example struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Describes the purpose of this example
	Label                *String                            `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Value                *ElementdefinitionDe_Example_Value `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ElementdefinitionDe_Example) Reset()         { *m = ElementdefinitionDe_Example{} }
func (m *ElementdefinitionDe_Example) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe_Example) ProtoMessage()    {}
func (*ElementdefinitionDe_Example) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 3}
}

func (m *ElementdefinitionDe_Example) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_Example.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_Example) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_Example.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_Example) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_Example.Merge(m, src)
}
func (m *ElementdefinitionDe_Example) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_Example.Size(m)
}
func (m *ElementdefinitionDe_Example) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_Example.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_Example proto.InternalMessageInfo

func (m *ElementdefinitionDe_Example) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ElementdefinitionDe_Example) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ElementdefinitionDe_Example) GetLabel() *String {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *ElementdefinitionDe_Example) GetValue() *ElementdefinitionDe_Example_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Value of Example (one of allowed types)
type ElementdefinitionDe_Example_Value struct {
	// Types that are valid to be assigned to Value:
	//	*ElementdefinitionDe_Example_Value_Base64Binary
	//	*ElementdefinitionDe_Example_Value_Boolean
	//	*ElementdefinitionDe_Example_Value_Code
	//	*ElementdefinitionDe_Example_Value_Date
	//	*ElementdefinitionDe_Example_Value_DateTime
	//	*ElementdefinitionDe_Example_Value_Decimal
	//	*ElementdefinitionDe_Example_Value_Id
	//	*ElementdefinitionDe_Example_Value_Instant
	//	*ElementdefinitionDe_Example_Value_Integer
	//	*ElementdefinitionDe_Example_Value_Markdown
	//	*ElementdefinitionDe_Example_Value_Oid
	//	*ElementdefinitionDe_Example_Value_PositiveInt
	//	*ElementdefinitionDe_Example_Value_StringValue
	//	*ElementdefinitionDe_Example_Value_Time
	//	*ElementdefinitionDe_Example_Value_UnsignedInt
	//	*ElementdefinitionDe_Example_Value_Uri
	//	*ElementdefinitionDe_Example_Value_Address
	//	*ElementdefinitionDe_Example_Value_Age
	//	*ElementdefinitionDe_Example_Value_Annotation
	//	*ElementdefinitionDe_Example_Value_Attachment
	//	*ElementdefinitionDe_Example_Value_CodeableConcept
	//	*ElementdefinitionDe_Example_Value_Coding
	//	*ElementdefinitionDe_Example_Value_ContactPoint
	//	*ElementdefinitionDe_Example_Value_Count
	//	*ElementdefinitionDe_Example_Value_Distance
	//	*ElementdefinitionDe_Example_Value_Duration
	//	*ElementdefinitionDe_Example_Value_HumanName
	//	*ElementdefinitionDe_Example_Value_Identifier
	//	*ElementdefinitionDe_Example_Value_Money
	//	*ElementdefinitionDe_Example_Value_Period
	//	*ElementdefinitionDe_Example_Value_Quantity
	//	*ElementdefinitionDe_Example_Value_Range
	//	*ElementdefinitionDe_Example_Value_Ratio
	//	*ElementdefinitionDe_Example_Value_Reference
	//	*ElementdefinitionDe_Example_Value_SampledData
	//	*ElementdefinitionDe_Example_Value_Signature
	//	*ElementdefinitionDe_Example_Value_Timing
	//	*ElementdefinitionDe_Example_Value_Meta
	Value                isElementdefinitionDe_Example_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ElementdefinitionDe_Example_Value) Reset()         { *m = ElementdefinitionDe_Example_Value{} }
func (m *ElementdefinitionDe_Example_Value) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe_Example_Value) ProtoMessage()    {}
func (*ElementdefinitionDe_Example_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 3, 0}
}

func (m *ElementdefinitionDe_Example_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_Example_Value.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_Example_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_Example_Value.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_Example_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_Example_Value.Merge(m, src)
}
func (m *ElementdefinitionDe_Example_Value) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_Example_Value.Size(m)
}
func (m *ElementdefinitionDe_Example_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_Example_Value.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_Example_Value proto.InternalMessageInfo

type isElementdefinitionDe_Example_Value_Value interface {
	isElementdefinitionDe_Example_Value_Value()
}

type ElementdefinitionDe_Example_Value_Base64Binary struct {
	Base64Binary *Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Code struct {
	Code *Code `protobuf:"bytes,3,opt,name=code,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,6,opt,name=decimal,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Id struct {
	Id *Id `protobuf:"bytes,7,opt,name=id,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Instant struct {
	Instant *Instant `protobuf:"bytes,8,opt,name=instant,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,9,opt,name=integer,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Markdown struct {
	Markdown *Markdown `protobuf:"bytes,10,opt,name=markdown,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Oid struct {
	Oid *Oid `protobuf:"bytes,11,opt,name=oid,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_PositiveInt struct {
	PositiveInt *PositiveInt `protobuf:"bytes,12,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,13,opt,name=string_value,json=string,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Time struct {
	Time *Time `protobuf:"bytes,14,opt,name=time,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,15,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Uri struct {
	Uri *Uri `protobuf:"bytes,16,opt,name=uri,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Address struct {
	Address *Address `protobuf:"bytes,17,opt,name=address,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Age struct {
	Age *Age `protobuf:"bytes,18,opt,name=age,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Annotation struct {
	Annotation *Annotation `protobuf:"bytes,19,opt,name=annotation,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,20,opt,name=attachment,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,21,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Coding struct {
	Coding *Coding `protobuf:"bytes,22,opt,name=coding,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_ContactPoint struct {
	ContactPoint *ContactPoint `protobuf:"bytes,23,opt,name=contact_point,json=contactPoint,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Count struct {
	Count *Count `protobuf:"bytes,24,opt,name=count,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Distance struct {
	Distance *Distance `protobuf:"bytes,25,opt,name=distance,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Duration struct {
	Duration *Duration `protobuf:"bytes,26,opt,name=duration,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_HumanName struct {
	HumanName *HumanName `protobuf:"bytes,27,opt,name=human_name,json=humanName,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,28,opt,name=identifier,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Money struct {
	Money *Money `protobuf:"bytes,29,opt,name=money,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Period struct {
	Period *Period `protobuf:"bytes,30,opt,name=period,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,31,opt,name=quantity,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Range struct {
	Range *Range `protobuf:"bytes,32,opt,name=range,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,33,opt,name=ratio,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Reference struct {
	Reference *Reference `protobuf:"bytes,34,opt,name=reference,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,35,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Signature struct {
	Signature *Signature `protobuf:"bytes,36,opt,name=signature,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Timing struct {
	Timing *Timing `protobuf:"bytes,37,opt,name=timing,proto3,oneof"`
}

type ElementdefinitionDe_Example_Value_Meta struct {
	Meta *Meta `protobuf:"bytes,38,opt,name=meta,proto3,oneof"`
}

func (*ElementdefinitionDe_Example_Value_Base64Binary) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Boolean) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Code) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Date) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_DateTime) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Decimal) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Id) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Instant) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Integer) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Markdown) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Oid) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_PositiveInt) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_StringValue) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Time) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_UnsignedInt) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Uri) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Address) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Age) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Annotation) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Attachment) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_CodeableConcept) isElementdefinitionDe_Example_Value_Value() {
}

func (*ElementdefinitionDe_Example_Value_Coding) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_ContactPoint) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Count) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Distance) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Duration) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_HumanName) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Identifier) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Money) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Period) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Quantity) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Range) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Ratio) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Reference) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_SampledData) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Signature) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Timing) isElementdefinitionDe_Example_Value_Value() {}

func (*ElementdefinitionDe_Example_Value_Meta) isElementdefinitionDe_Example_Value_Value() {}

func (m *ElementdefinitionDe_Example_Value) GetValue() isElementdefinitionDe_Example_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetBase64Binary() *Base64Binary {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetCode() *Code {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Code); ok {
		return x.Code
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetDate() *Date {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Date); ok {
		return x.Date
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetDecimal() *Decimal {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetId() *Id {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Id); ok {
		return x.Id
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetInstant() *Instant {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Instant); ok {
		return x.Instant
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetMarkdown() *Markdown {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetOid() *Oid {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Oid); ok {
		return x.Oid
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetPositiveInt() *PositiveInt {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetUri() *Uri {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetAddress() *Address {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Address); ok {
		return x.Address
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetAge() *Age {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Age); ok {
		return x.Age
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetAnnotation() *Annotation {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetCoding() *Coding {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetContactPoint() *ContactPoint {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_ContactPoint); ok {
		return x.ContactPoint
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetCount() *Count {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Count); ok {
		return x.Count
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetDistance() *Distance {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Distance); ok {
		return x.Distance
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetDuration() *Duration {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetHumanName() *HumanName {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_HumanName); ok {
		return x.HumanName
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetIdentifier() *Identifier {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetMoney() *Money {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Money); ok {
		return x.Money
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Period); ok {
		return x.Period
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetReference() *Reference {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Reference); ok {
		return x.Reference
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetSignature() *Signature {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Signature); ok {
		return x.Signature
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetTiming() *Timing {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Timing); ok {
		return x.Timing
	}
	return nil
}

func (m *ElementdefinitionDe_Example_Value) GetMeta() *Meta {
	if x, ok := m.GetValue().(*ElementdefinitionDe_Example_Value_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ElementdefinitionDe_Example_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ElementdefinitionDe_Example_Value_OneofMarshaler, _ElementdefinitionDe_Example_Value_OneofUnmarshaler, _ElementdefinitionDe_Example_Value_OneofSizer, []interface{}{
		(*ElementdefinitionDe_Example_Value_Base64Binary)(nil),
		(*ElementdefinitionDe_Example_Value_Boolean)(nil),
		(*ElementdefinitionDe_Example_Value_Code)(nil),
		(*ElementdefinitionDe_Example_Value_Date)(nil),
		(*ElementdefinitionDe_Example_Value_DateTime)(nil),
		(*ElementdefinitionDe_Example_Value_Decimal)(nil),
		(*ElementdefinitionDe_Example_Value_Id)(nil),
		(*ElementdefinitionDe_Example_Value_Instant)(nil),
		(*ElementdefinitionDe_Example_Value_Integer)(nil),
		(*ElementdefinitionDe_Example_Value_Markdown)(nil),
		(*ElementdefinitionDe_Example_Value_Oid)(nil),
		(*ElementdefinitionDe_Example_Value_PositiveInt)(nil),
		(*ElementdefinitionDe_Example_Value_StringValue)(nil),
		(*ElementdefinitionDe_Example_Value_Time)(nil),
		(*ElementdefinitionDe_Example_Value_UnsignedInt)(nil),
		(*ElementdefinitionDe_Example_Value_Uri)(nil),
		(*ElementdefinitionDe_Example_Value_Address)(nil),
		(*ElementdefinitionDe_Example_Value_Age)(nil),
		(*ElementdefinitionDe_Example_Value_Annotation)(nil),
		(*ElementdefinitionDe_Example_Value_Attachment)(nil),
		(*ElementdefinitionDe_Example_Value_CodeableConcept)(nil),
		(*ElementdefinitionDe_Example_Value_Coding)(nil),
		(*ElementdefinitionDe_Example_Value_ContactPoint)(nil),
		(*ElementdefinitionDe_Example_Value_Count)(nil),
		(*ElementdefinitionDe_Example_Value_Distance)(nil),
		(*ElementdefinitionDe_Example_Value_Duration)(nil),
		(*ElementdefinitionDe_Example_Value_HumanName)(nil),
		(*ElementdefinitionDe_Example_Value_Identifier)(nil),
		(*ElementdefinitionDe_Example_Value_Money)(nil),
		(*ElementdefinitionDe_Example_Value_Period)(nil),
		(*ElementdefinitionDe_Example_Value_Quantity)(nil),
		(*ElementdefinitionDe_Example_Value_Range)(nil),
		(*ElementdefinitionDe_Example_Value_Ratio)(nil),
		(*ElementdefinitionDe_Example_Value_Reference)(nil),
		(*ElementdefinitionDe_Example_Value_SampledData)(nil),
		(*ElementdefinitionDe_Example_Value_Signature)(nil),
		(*ElementdefinitionDe_Example_Value_Timing)(nil),
		(*ElementdefinitionDe_Example_Value_Meta)(nil),
	}
}

func _ElementdefinitionDe_Example_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ElementdefinitionDe_Example_Value)
	// value
	switch x := m.Value.(type) {
	case *ElementdefinitionDe_Example_Value_Base64Binary:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Base64Binary); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Boolean:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Code:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_DateTime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Decimal:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Id:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Id); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Instant:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instant); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Integer:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Markdown:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Markdown); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Oid:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oid); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_PositiveInt:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PositiveInt); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_StringValue:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Time:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_UnsignedInt:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Uri:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Address:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Age:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Annotation:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Annotation); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Attachment:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_CodeableConcept:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Coding:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_ContactPoint:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContactPoint); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Count:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Count); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Distance:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Distance); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Duration:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_HumanName:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HumanName); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Identifier:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identifier); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Money:
		b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Money); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Period:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Quantity:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Range:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Ratio:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Reference:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_SampledData:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Signature:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Signature); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Timing:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case *ElementdefinitionDe_Example_Value_Meta:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Meta); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ElementdefinitionDe_Example_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _ElementdefinitionDe_Example_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ElementdefinitionDe_Example_Value)
	switch tag {
	case 1: // value.base64_binary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Base64Binary)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Base64Binary{msg}
		return true, err
	case 2: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Boolean{msg}
		return true, err
	case 3: // value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Code{msg}
		return true, err
	case 4: // value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Date{msg}
		return true, err
	case 5: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_DateTime{msg}
		return true, err
	case 6: // value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Decimal{msg}
		return true, err
	case 7: // value.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Id)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Id{msg}
		return true, err
	case 8: // value.instant
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Instant)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Instant{msg}
		return true, err
	case 9: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Integer{msg}
		return true, err
	case 10: // value.markdown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Markdown)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Markdown{msg}
		return true, err
	case 11: // value.oid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oid)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Oid{msg}
		return true, err
	case 12: // value.positive_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PositiveInt)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_PositiveInt{msg}
		return true, err
	case 13: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_StringValue{msg}
		return true, err
	case 14: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Time{msg}
		return true, err
	case 15: // value.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_UnsignedInt{msg}
		return true, err
	case 16: // value.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Uri{msg}
		return true, err
	case 17: // value.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Address{msg}
		return true, err
	case 18: // value.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Age{msg}
		return true, err
	case 19: // value.annotation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Annotation)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Annotation{msg}
		return true, err
	case 20: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Attachment{msg}
		return true, err
	case 21: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_CodeableConcept{msg}
		return true, err
	case 22: // value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Coding{msg}
		return true, err
	case 23: // value.contact_point
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContactPoint)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_ContactPoint{msg}
		return true, err
	case 24: // value.count
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Count)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Count{msg}
		return true, err
	case 25: // value.distance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Distance)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Distance{msg}
		return true, err
	case 26: // value.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Duration{msg}
		return true, err
	case 27: // value.human_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HumanName)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_HumanName{msg}
		return true, err
	case 28: // value.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identifier)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Identifier{msg}
		return true, err
	case 29: // value.money
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Money)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Money{msg}
		return true, err
	case 30: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Period{msg}
		return true, err
	case 31: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Quantity{msg}
		return true, err
	case 32: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Range{msg}
		return true, err
	case 33: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Ratio{msg}
		return true, err
	case 34: // value.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Reference{msg}
		return true, err
	case 35: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_SampledData{msg}
		return true, err
	case 36: // value.signature
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Signature)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Signature{msg}
		return true, err
	case 37: // value.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Timing{msg}
		return true, err
	case 38: // value.meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Meta)
		err := b.DecodeMessage(msg)
		m.Value = &ElementdefinitionDe_Example_Value_Meta{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ElementdefinitionDe_Example_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ElementdefinitionDe_Example_Value)
	// value
	switch x := m.Value.(type) {
	case *ElementdefinitionDe_Example_Value_Base64Binary:
		s := proto.Size(x.Base64Binary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Id:
		s := proto.Size(x.Id)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Instant:
		s := proto.Size(x.Instant)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Markdown:
		s := proto.Size(x.Markdown)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Oid:
		s := proto.Size(x.Oid)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_PositiveInt:
		s := proto.Size(x.PositiveInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Uri:
		s := proto.Size(x.Uri)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Address:
		s := proto.Size(x.Address)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Age:
		s := proto.Size(x.Age)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Annotation:
		s := proto.Size(x.Annotation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Coding:
		s := proto.Size(x.Coding)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_ContactPoint:
		s := proto.Size(x.ContactPoint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Count:
		s := proto.Size(x.Count)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Distance:
		s := proto.Size(x.Distance)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Duration:
		s := proto.Size(x.Duration)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_HumanName:
		s := proto.Size(x.HumanName)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Identifier:
		s := proto.Size(x.Identifier)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Money:
		s := proto.Size(x.Money)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Period:
		s := proto.Size(x.Period)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Range:
		s := proto.Size(x.Range)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Reference:
		s := proto.Size(x.Reference)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Signature:
		s := proto.Size(x.Signature)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Timing:
		s := proto.Size(x.Timing)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_Example_Value_Meta:
		s := proto.Size(x.Meta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Minimum Allowed Value (for some types)
type ElementdefinitionDe_MinValue struct {
	// Types that are valid to be assigned to MinValue:
	//	*ElementdefinitionDe_MinValue_Date
	//	*ElementdefinitionDe_MinValue_DateTime
	//	*ElementdefinitionDe_MinValue_Instant
	//	*ElementdefinitionDe_MinValue_Time
	//	*ElementdefinitionDe_MinValue_Decimal
	//	*ElementdefinitionDe_MinValue_Integer
	//	*ElementdefinitionDe_MinValue_PositiveInt
	//	*ElementdefinitionDe_MinValue_UnsignedInt
	//	*ElementdefinitionDe_MinValue_Quantity
	MinValue             isElementdefinitionDe_MinValue_MinValue `protobuf_oneof:"min_value"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ElementdefinitionDe_MinValue) Reset()         { *m = ElementdefinitionDe_MinValue{} }
func (m *ElementdefinitionDe_MinValue) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe_MinValue) ProtoMessage()    {}
func (*ElementdefinitionDe_MinValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 4}
}

func (m *ElementdefinitionDe_MinValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_MinValue.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_MinValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_MinValue.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_MinValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_MinValue.Merge(m, src)
}
func (m *ElementdefinitionDe_MinValue) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_MinValue.Size(m)
}
func (m *ElementdefinitionDe_MinValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_MinValue.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_MinValue proto.InternalMessageInfo

type isElementdefinitionDe_MinValue_MinValue interface {
	isElementdefinitionDe_MinValue_MinValue()
}

type ElementdefinitionDe_MinValue_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type ElementdefinitionDe_MinValue_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ElementdefinitionDe_MinValue_Instant struct {
	Instant *Instant `protobuf:"bytes,3,opt,name=instant,proto3,oneof"`
}

type ElementdefinitionDe_MinValue_Time struct {
	Time *Time `protobuf:"bytes,4,opt,name=time,proto3,oneof"`
}

type ElementdefinitionDe_MinValue_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,5,opt,name=decimal,proto3,oneof"`
}

type ElementdefinitionDe_MinValue_Integer struct {
	Integer *Integer `protobuf:"bytes,6,opt,name=integer,proto3,oneof"`
}

type ElementdefinitionDe_MinValue_PositiveInt struct {
	PositiveInt *PositiveInt `protobuf:"bytes,7,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type ElementdefinitionDe_MinValue_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,8,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type ElementdefinitionDe_MinValue_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,9,opt,name=quantity,proto3,oneof"`
}

func (*ElementdefinitionDe_MinValue_Date) isElementdefinitionDe_MinValue_MinValue() {}

func (*ElementdefinitionDe_MinValue_DateTime) isElementdefinitionDe_MinValue_MinValue() {}

func (*ElementdefinitionDe_MinValue_Instant) isElementdefinitionDe_MinValue_MinValue() {}

func (*ElementdefinitionDe_MinValue_Time) isElementdefinitionDe_MinValue_MinValue() {}

func (*ElementdefinitionDe_MinValue_Decimal) isElementdefinitionDe_MinValue_MinValue() {}

func (*ElementdefinitionDe_MinValue_Integer) isElementdefinitionDe_MinValue_MinValue() {}

func (*ElementdefinitionDe_MinValue_PositiveInt) isElementdefinitionDe_MinValue_MinValue() {}

func (*ElementdefinitionDe_MinValue_UnsignedInt) isElementdefinitionDe_MinValue_MinValue() {}

func (*ElementdefinitionDe_MinValue_Quantity) isElementdefinitionDe_MinValue_MinValue() {}

func (m *ElementdefinitionDe_MinValue) GetMinValue() isElementdefinitionDe_MinValue_MinValue {
	if m != nil {
		return m.MinValue
	}
	return nil
}

func (m *ElementdefinitionDe_MinValue) GetDate() *Date {
	if x, ok := m.GetMinValue().(*ElementdefinitionDe_MinValue_Date); ok {
		return x.Date
	}
	return nil
}

func (m *ElementdefinitionDe_MinValue) GetDateTime() *DateTime {
	if x, ok := m.GetMinValue().(*ElementdefinitionDe_MinValue_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ElementdefinitionDe_MinValue) GetInstant() *Instant {
	if x, ok := m.GetMinValue().(*ElementdefinitionDe_MinValue_Instant); ok {
		return x.Instant
	}
	return nil
}

func (m *ElementdefinitionDe_MinValue) GetTime() *Time {
	if x, ok := m.GetMinValue().(*ElementdefinitionDe_MinValue_Time); ok {
		return x.Time
	}
	return nil
}

func (m *ElementdefinitionDe_MinValue) GetDecimal() *Decimal {
	if x, ok := m.GetMinValue().(*ElementdefinitionDe_MinValue_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *ElementdefinitionDe_MinValue) GetInteger() *Integer {
	if x, ok := m.GetMinValue().(*ElementdefinitionDe_MinValue_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *ElementdefinitionDe_MinValue) GetPositiveInt() *PositiveInt {
	if x, ok := m.GetMinValue().(*ElementdefinitionDe_MinValue_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (m *ElementdefinitionDe_MinValue) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetMinValue().(*ElementdefinitionDe_MinValue_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *ElementdefinitionDe_MinValue) GetQuantity() *Quantity {
	if x, ok := m.GetMinValue().(*ElementdefinitionDe_MinValue_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ElementdefinitionDe_MinValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ElementdefinitionDe_MinValue_OneofMarshaler, _ElementdefinitionDe_MinValue_OneofUnmarshaler, _ElementdefinitionDe_MinValue_OneofSizer, []interface{}{
		(*ElementdefinitionDe_MinValue_Date)(nil),
		(*ElementdefinitionDe_MinValue_DateTime)(nil),
		(*ElementdefinitionDe_MinValue_Instant)(nil),
		(*ElementdefinitionDe_MinValue_Time)(nil),
		(*ElementdefinitionDe_MinValue_Decimal)(nil),
		(*ElementdefinitionDe_MinValue_Integer)(nil),
		(*ElementdefinitionDe_MinValue_PositiveInt)(nil),
		(*ElementdefinitionDe_MinValue_UnsignedInt)(nil),
		(*ElementdefinitionDe_MinValue_Quantity)(nil),
	}
}

func _ElementdefinitionDe_MinValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ElementdefinitionDe_MinValue)
	// min_value
	switch x := m.MinValue.(type) {
	case *ElementdefinitionDe_MinValue_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *ElementdefinitionDe_MinValue_DateTime:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ElementdefinitionDe_MinValue_Instant:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instant); err != nil {
			return err
		}
	case *ElementdefinitionDe_MinValue_Time:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *ElementdefinitionDe_MinValue_Decimal:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *ElementdefinitionDe_MinValue_Integer:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *ElementdefinitionDe_MinValue_PositiveInt:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PositiveInt); err != nil {
			return err
		}
	case *ElementdefinitionDe_MinValue_UnsignedInt:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *ElementdefinitionDe_MinValue_Quantity:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ElementdefinitionDe_MinValue.MinValue has unexpected type %T", x)
	}
	return nil
}

func _ElementdefinitionDe_MinValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ElementdefinitionDe_MinValue)
	switch tag {
	case 1: // min_value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.MinValue = &ElementdefinitionDe_MinValue_Date{msg}
		return true, err
	case 2: // min_value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.MinValue = &ElementdefinitionDe_MinValue_DateTime{msg}
		return true, err
	case 3: // min_value.instant
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Instant)
		err := b.DecodeMessage(msg)
		m.MinValue = &ElementdefinitionDe_MinValue_Instant{msg}
		return true, err
	case 4: // min_value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.MinValue = &ElementdefinitionDe_MinValue_Time{msg}
		return true, err
	case 5: // min_value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.MinValue = &ElementdefinitionDe_MinValue_Decimal{msg}
		return true, err
	case 6: // min_value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.MinValue = &ElementdefinitionDe_MinValue_Integer{msg}
		return true, err
	case 7: // min_value.positive_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PositiveInt)
		err := b.DecodeMessage(msg)
		m.MinValue = &ElementdefinitionDe_MinValue_PositiveInt{msg}
		return true, err
	case 8: // min_value.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.MinValue = &ElementdefinitionDe_MinValue_UnsignedInt{msg}
		return true, err
	case 9: // min_value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.MinValue = &ElementdefinitionDe_MinValue_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ElementdefinitionDe_MinValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ElementdefinitionDe_MinValue)
	// min_value
	switch x := m.MinValue.(type) {
	case *ElementdefinitionDe_MinValue_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MinValue_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MinValue_Instant:
		s := proto.Size(x.Instant)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MinValue_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MinValue_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MinValue_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MinValue_PositiveInt:
		s := proto.Size(x.PositiveInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MinValue_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MinValue_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Maximum Allowed Value (for some types)
type ElementdefinitionDe_MaxValue struct {
	// Types that are valid to be assigned to MaxValue:
	//	*ElementdefinitionDe_MaxValue_Date
	//	*ElementdefinitionDe_MaxValue_DateTime
	//	*ElementdefinitionDe_MaxValue_Instant
	//	*ElementdefinitionDe_MaxValue_Time
	//	*ElementdefinitionDe_MaxValue_Decimal
	//	*ElementdefinitionDe_MaxValue_Integer
	//	*ElementdefinitionDe_MaxValue_PositiveInt
	//	*ElementdefinitionDe_MaxValue_UnsignedInt
	//	*ElementdefinitionDe_MaxValue_Quantity
	MaxValue             isElementdefinitionDe_MaxValue_MaxValue `protobuf_oneof:"max_value"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ElementdefinitionDe_MaxValue) Reset()         { *m = ElementdefinitionDe_MaxValue{} }
func (m *ElementdefinitionDe_MaxValue) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe_MaxValue) ProtoMessage()    {}
func (*ElementdefinitionDe_MaxValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 5}
}

func (m *ElementdefinitionDe_MaxValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_MaxValue.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_MaxValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_MaxValue.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_MaxValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_MaxValue.Merge(m, src)
}
func (m *ElementdefinitionDe_MaxValue) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_MaxValue.Size(m)
}
func (m *ElementdefinitionDe_MaxValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_MaxValue.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_MaxValue proto.InternalMessageInfo

type isElementdefinitionDe_MaxValue_MaxValue interface {
	isElementdefinitionDe_MaxValue_MaxValue()
}

type ElementdefinitionDe_MaxValue_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type ElementdefinitionDe_MaxValue_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ElementdefinitionDe_MaxValue_Instant struct {
	Instant *Instant `protobuf:"bytes,3,opt,name=instant,proto3,oneof"`
}

type ElementdefinitionDe_MaxValue_Time struct {
	Time *Time `protobuf:"bytes,4,opt,name=time,proto3,oneof"`
}

type ElementdefinitionDe_MaxValue_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,5,opt,name=decimal,proto3,oneof"`
}

type ElementdefinitionDe_MaxValue_Integer struct {
	Integer *Integer `protobuf:"bytes,6,opt,name=integer,proto3,oneof"`
}

type ElementdefinitionDe_MaxValue_PositiveInt struct {
	PositiveInt *PositiveInt `protobuf:"bytes,7,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type ElementdefinitionDe_MaxValue_UnsignedInt struct {
	UnsignedInt *UnsignedInt `protobuf:"bytes,8,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type ElementdefinitionDe_MaxValue_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,9,opt,name=quantity,proto3,oneof"`
}

func (*ElementdefinitionDe_MaxValue_Date) isElementdefinitionDe_MaxValue_MaxValue() {}

func (*ElementdefinitionDe_MaxValue_DateTime) isElementdefinitionDe_MaxValue_MaxValue() {}

func (*ElementdefinitionDe_MaxValue_Instant) isElementdefinitionDe_MaxValue_MaxValue() {}

func (*ElementdefinitionDe_MaxValue_Time) isElementdefinitionDe_MaxValue_MaxValue() {}

func (*ElementdefinitionDe_MaxValue_Decimal) isElementdefinitionDe_MaxValue_MaxValue() {}

func (*ElementdefinitionDe_MaxValue_Integer) isElementdefinitionDe_MaxValue_MaxValue() {}

func (*ElementdefinitionDe_MaxValue_PositiveInt) isElementdefinitionDe_MaxValue_MaxValue() {}

func (*ElementdefinitionDe_MaxValue_UnsignedInt) isElementdefinitionDe_MaxValue_MaxValue() {}

func (*ElementdefinitionDe_MaxValue_Quantity) isElementdefinitionDe_MaxValue_MaxValue() {}

func (m *ElementdefinitionDe_MaxValue) GetMaxValue() isElementdefinitionDe_MaxValue_MaxValue {
	if m != nil {
		return m.MaxValue
	}
	return nil
}

func (m *ElementdefinitionDe_MaxValue) GetDate() *Date {
	if x, ok := m.GetMaxValue().(*ElementdefinitionDe_MaxValue_Date); ok {
		return x.Date
	}
	return nil
}

func (m *ElementdefinitionDe_MaxValue) GetDateTime() *DateTime {
	if x, ok := m.GetMaxValue().(*ElementdefinitionDe_MaxValue_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ElementdefinitionDe_MaxValue) GetInstant() *Instant {
	if x, ok := m.GetMaxValue().(*ElementdefinitionDe_MaxValue_Instant); ok {
		return x.Instant
	}
	return nil
}

func (m *ElementdefinitionDe_MaxValue) GetTime() *Time {
	if x, ok := m.GetMaxValue().(*ElementdefinitionDe_MaxValue_Time); ok {
		return x.Time
	}
	return nil
}

func (m *ElementdefinitionDe_MaxValue) GetDecimal() *Decimal {
	if x, ok := m.GetMaxValue().(*ElementdefinitionDe_MaxValue_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *ElementdefinitionDe_MaxValue) GetInteger() *Integer {
	if x, ok := m.GetMaxValue().(*ElementdefinitionDe_MaxValue_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *ElementdefinitionDe_MaxValue) GetPositiveInt() *PositiveInt {
	if x, ok := m.GetMaxValue().(*ElementdefinitionDe_MaxValue_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (m *ElementdefinitionDe_MaxValue) GetUnsignedInt() *UnsignedInt {
	if x, ok := m.GetMaxValue().(*ElementdefinitionDe_MaxValue_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (m *ElementdefinitionDe_MaxValue) GetQuantity() *Quantity {
	if x, ok := m.GetMaxValue().(*ElementdefinitionDe_MaxValue_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ElementdefinitionDe_MaxValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ElementdefinitionDe_MaxValue_OneofMarshaler, _ElementdefinitionDe_MaxValue_OneofUnmarshaler, _ElementdefinitionDe_MaxValue_OneofSizer, []interface{}{
		(*ElementdefinitionDe_MaxValue_Date)(nil),
		(*ElementdefinitionDe_MaxValue_DateTime)(nil),
		(*ElementdefinitionDe_MaxValue_Instant)(nil),
		(*ElementdefinitionDe_MaxValue_Time)(nil),
		(*ElementdefinitionDe_MaxValue_Decimal)(nil),
		(*ElementdefinitionDe_MaxValue_Integer)(nil),
		(*ElementdefinitionDe_MaxValue_PositiveInt)(nil),
		(*ElementdefinitionDe_MaxValue_UnsignedInt)(nil),
		(*ElementdefinitionDe_MaxValue_Quantity)(nil),
	}
}

func _ElementdefinitionDe_MaxValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ElementdefinitionDe_MaxValue)
	// max_value
	switch x := m.MaxValue.(type) {
	case *ElementdefinitionDe_MaxValue_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *ElementdefinitionDe_MaxValue_DateTime:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ElementdefinitionDe_MaxValue_Instant:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instant); err != nil {
			return err
		}
	case *ElementdefinitionDe_MaxValue_Time:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *ElementdefinitionDe_MaxValue_Decimal:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *ElementdefinitionDe_MaxValue_Integer:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *ElementdefinitionDe_MaxValue_PositiveInt:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PositiveInt); err != nil {
			return err
		}
	case *ElementdefinitionDe_MaxValue_UnsignedInt:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsignedInt); err != nil {
			return err
		}
	case *ElementdefinitionDe_MaxValue_Quantity:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ElementdefinitionDe_MaxValue.MaxValue has unexpected type %T", x)
	}
	return nil
}

func _ElementdefinitionDe_MaxValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ElementdefinitionDe_MaxValue)
	switch tag {
	case 1: // max_value.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.MaxValue = &ElementdefinitionDe_MaxValue_Date{msg}
		return true, err
	case 2: // max_value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.MaxValue = &ElementdefinitionDe_MaxValue_DateTime{msg}
		return true, err
	case 3: // max_value.instant
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Instant)
		err := b.DecodeMessage(msg)
		m.MaxValue = &ElementdefinitionDe_MaxValue_Instant{msg}
		return true, err
	case 4: // max_value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.MaxValue = &ElementdefinitionDe_MaxValue_Time{msg}
		return true, err
	case 5: // max_value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.MaxValue = &ElementdefinitionDe_MaxValue_Decimal{msg}
		return true, err
	case 6: // max_value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.MaxValue = &ElementdefinitionDe_MaxValue_Integer{msg}
		return true, err
	case 7: // max_value.positive_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PositiveInt)
		err := b.DecodeMessage(msg)
		m.MaxValue = &ElementdefinitionDe_MaxValue_PositiveInt{msg}
		return true, err
	case 8: // max_value.unsigned_int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsignedInt)
		err := b.DecodeMessage(msg)
		m.MaxValue = &ElementdefinitionDe_MaxValue_UnsignedInt{msg}
		return true, err
	case 9: // max_value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.MaxValue = &ElementdefinitionDe_MaxValue_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ElementdefinitionDe_MaxValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ElementdefinitionDe_MaxValue)
	// max_value
	switch x := m.MaxValue.(type) {
	case *ElementdefinitionDe_MaxValue_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MaxValue_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MaxValue_Instant:
		s := proto.Size(x.Instant)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MaxValue_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MaxValue_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MaxValue_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MaxValue_PositiveInt:
		s := proto.Size(x.PositiveInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MaxValue_UnsignedInt:
		s := proto.Size(x.UnsignedInt)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_MaxValue_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Condition that must evaluate to true
type ElementdefinitionDe_Constraint struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Target of 'condition' reference above
	Key *Id `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Why this constraint is necessary or appropriate
	Requirements *String `protobuf:"bytes,4,opt,name=requirements,proto3" json:"requirements,omitempty"`
	// error | warning
	Severity *ConstraintSeverityCode `protobuf:"bytes,5,opt,name=severity,proto3" json:"severity,omitempty"`
	// Human description of constraint
	Human *String `protobuf:"bytes,6,opt,name=human,proto3" json:"human,omitempty"`
	// FHIRPath expression of constraint
	Expression *String `protobuf:"bytes,7,opt,name=expression,proto3" json:"expression,omitempty"`
	// XPath expression of constraint
	Xpath *String `protobuf:"bytes,8,opt,name=xpath,proto3" json:"xpath,omitempty"`
	// Reference to original source of constraint
	Source               *Uri     `protobuf:"bytes,9,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElementdefinitionDe_Constraint) Reset()         { *m = ElementdefinitionDe_Constraint{} }
func (m *ElementdefinitionDe_Constraint) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe_Constraint) ProtoMessage()    {}
func (*ElementdefinitionDe_Constraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 6}
}

func (m *ElementdefinitionDe_Constraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_Constraint.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_Constraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_Constraint.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_Constraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_Constraint.Merge(m, src)
}
func (m *ElementdefinitionDe_Constraint) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_Constraint.Size(m)
}
func (m *ElementdefinitionDe_Constraint) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_Constraint.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_Constraint proto.InternalMessageInfo

func (m *ElementdefinitionDe_Constraint) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ElementdefinitionDe_Constraint) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ElementdefinitionDe_Constraint) GetKey() *Id {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *ElementdefinitionDe_Constraint) GetRequirements() *String {
	if m != nil {
		return m.Requirements
	}
	return nil
}

func (m *ElementdefinitionDe_Constraint) GetSeverity() *ConstraintSeverityCode {
	if m != nil {
		return m.Severity
	}
	return nil
}

func (m *ElementdefinitionDe_Constraint) GetHuman() *String {
	if m != nil {
		return m.Human
	}
	return nil
}

func (m *ElementdefinitionDe_Constraint) GetExpression() *String {
	if m != nil {
		return m.Expression
	}
	return nil
}

func (m *ElementdefinitionDe_Constraint) GetXpath() *String {
	if m != nil {
		return m.Xpath
	}
	return nil
}

func (m *ElementdefinitionDe_Constraint) GetSource() *Uri {
	if m != nil {
		return m.Source
	}
	return nil
}

// ValueSet details if this is coded
type ElementdefinitionDe_ElementDefinitionBinding struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// required | extensible | preferred | example
	Strength *BindingStrengthCode `protobuf:"bytes,3,opt,name=strength,proto3" json:"strength,omitempty"`
	// Human explanation of the value set
	Description          *String                                                `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ValueSet             *ElementdefinitionDe_ElementDefinitionBinding_ValueSet `protobuf:"bytes,5,opt,name=value_set,json=valueSet,proto3" json:"value_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_unrecognized     []byte                                                 `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *ElementdefinitionDe_ElementDefinitionBinding) Reset() {
	*m = ElementdefinitionDe_ElementDefinitionBinding{}
}
func (m *ElementdefinitionDe_ElementDefinitionBinding) String() string {
	return proto.CompactTextString(m)
}
func (*ElementdefinitionDe_ElementDefinitionBinding) ProtoMessage() {}
func (*ElementdefinitionDe_ElementDefinitionBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 7}
}

func (m *ElementdefinitionDe_ElementDefinitionBinding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_ElementDefinitionBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_ElementDefinitionBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding.Merge(m, src)
}
func (m *ElementdefinitionDe_ElementDefinitionBinding) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding.Size(m)
}
func (m *ElementdefinitionDe_ElementDefinitionBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding proto.InternalMessageInfo

func (m *ElementdefinitionDe_ElementDefinitionBinding) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ElementdefinitionDe_ElementDefinitionBinding) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ElementdefinitionDe_ElementDefinitionBinding) GetStrength() *BindingStrengthCode {
	if m != nil {
		return m.Strength
	}
	return nil
}

func (m *ElementdefinitionDe_ElementDefinitionBinding) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ElementdefinitionDe_ElementDefinitionBinding) GetValueSet() *ElementdefinitionDe_ElementDefinitionBinding_ValueSet {
	if m != nil {
		return m.ValueSet
	}
	return nil
}

// Source of value set
type ElementdefinitionDe_ElementDefinitionBinding_ValueSet struct {
	// Types that are valid to be assigned to ValueSet:
	//	*ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Uri
	//	*ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Reference
	ValueSet             isElementdefinitionDe_ElementDefinitionBinding_ValueSet_ValueSet `protobuf_oneof:"value_set"`
	XXX_NoUnkeyedLiteral struct{}                                                         `json:"-"`
	XXX_unrecognized     []byte                                                           `json:"-"`
	XXX_sizecache        int32                                                            `json:"-"`
}

func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) Reset() {
	*m = ElementdefinitionDe_ElementDefinitionBinding_ValueSet{}
}
func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) String() string {
	return proto.CompactTextString(m)
}
func (*ElementdefinitionDe_ElementDefinitionBinding_ValueSet) ProtoMessage() {}
func (*ElementdefinitionDe_ElementDefinitionBinding_ValueSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 7, 0}
}

func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding_ValueSet.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding_ValueSet.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding_ValueSet.Merge(m, src)
}
func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding_ValueSet.Size(m)
}
func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding_ValueSet.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_ElementDefinitionBinding_ValueSet proto.InternalMessageInfo

type isElementdefinitionDe_ElementDefinitionBinding_ValueSet_ValueSet interface {
	isElementdefinitionDe_ElementDefinitionBinding_ValueSet_ValueSet()
}

type ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Uri struct {
	Uri *Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

type ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Uri) isElementdefinitionDe_ElementDefinitionBinding_ValueSet_ValueSet() {
}

func (*ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Reference) isElementdefinitionDe_ElementDefinitionBinding_ValueSet_ValueSet() {
}

func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) GetValueSet() isElementdefinitionDe_ElementDefinitionBinding_ValueSet_ValueSet {
	if m != nil {
		return m.ValueSet
	}
	return nil
}

func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) GetUri() *Uri {
	if x, ok := m.GetValueSet().(*ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *ElementdefinitionDe_ElementDefinitionBinding_ValueSet) GetReference() *Reference {
	if x, ok := m.GetValueSet().(*ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ElementdefinitionDe_ElementDefinitionBinding_ValueSet) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ElementdefinitionDe_ElementDefinitionBinding_ValueSet_OneofMarshaler, _ElementdefinitionDe_ElementDefinitionBinding_ValueSet_OneofUnmarshaler, _ElementdefinitionDe_ElementDefinitionBinding_ValueSet_OneofSizer, []interface{}{
		(*ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Uri)(nil),
		(*ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Reference)(nil),
	}
}

func _ElementdefinitionDe_ElementDefinitionBinding_ValueSet_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ElementdefinitionDe_ElementDefinitionBinding_ValueSet)
	// value_set
	switch x := m.ValueSet.(type) {
	case *ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Uri:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ElementdefinitionDe_ElementDefinitionBinding_ValueSet.ValueSet has unexpected type %T", x)
	}
	return nil
}

func _ElementdefinitionDe_ElementDefinitionBinding_ValueSet_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ElementdefinitionDe_ElementDefinitionBinding_ValueSet)
	switch tag {
	case 1: // value_set.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.ValueSet = &ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Uri{msg}
		return true, err
	case 2: // value_set.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.ValueSet = &ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ElementdefinitionDe_ElementDefinitionBinding_ValueSet_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ElementdefinitionDe_ElementDefinitionBinding_ValueSet)
	// value_set
	switch x := m.ValueSet.(type) {
	case *ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ElementdefinitionDe_ElementDefinitionBinding_ValueSet_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Map element to another set of definitions
type ElementdefinitionDe_Mapping struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Reference to mapping declaration
	Identity *Id `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
	// Computable language of mapping
	Language *MimeTypeCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Details of the mapping
	Map *String `protobuf:"bytes,5,opt,name=map,proto3" json:"map,omitempty"`
	// Comments about the mapping or its use
	Comment              *String  `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElementdefinitionDe_Mapping) Reset()         { *m = ElementdefinitionDe_Mapping{} }
func (m *ElementdefinitionDe_Mapping) String() string { return proto.CompactTextString(m) }
func (*ElementdefinitionDe_Mapping) ProtoMessage()    {}
func (*ElementdefinitionDe_Mapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{10, 8}
}

func (m *ElementdefinitionDe_Mapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementdefinitionDe_Mapping.Unmarshal(m, b)
}
func (m *ElementdefinitionDe_Mapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementdefinitionDe_Mapping.Marshal(b, m, deterministic)
}
func (m *ElementdefinitionDe_Mapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementdefinitionDe_Mapping.Merge(m, src)
}
func (m *ElementdefinitionDe_Mapping) XXX_Size() int {
	return xxx_messageInfo_ElementdefinitionDe_Mapping.Size(m)
}
func (m *ElementdefinitionDe_Mapping) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementdefinitionDe_Mapping.DiscardUnknown(m)
}

var xxx_messageInfo_ElementdefinitionDe_Mapping proto.InternalMessageInfo

func (m *ElementdefinitionDe_Mapping) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ElementdefinitionDe_Mapping) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ElementdefinitionDe_Mapping) GetIdentity() *Id {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *ElementdefinitionDe_Mapping) GetLanguage() *MimeTypeCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ElementdefinitionDe_Mapping) GetMap() *String {
	if m != nil {
		return m.Map
	}
	return nil
}

func (m *ElementdefinitionDe_Mapping) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

// Auto-generated from StructureDefinition for Family member history for
// genetics analysis. Information about patient's relatives, relevant for
// patient. See
// http://hl7.org/fhir/StructureDefinition/familymemberhistory-genetic
type FamilymemberhistoryGenetic struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Extension
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Id(s) for this record
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Instantiates protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// partial | completed | entered-in-error | health-unknown
	Status *FamilyHistoryStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// The taking of a family member's history did not occur
	NotDone *Boolean `protobuf:"bytes,12,opt,name=not_done,json=notDone,proto3" json:"not_done,omitempty"`
	// subject-unknown | withheld | unable-to-obtain | deferred
	NotDoneReason *CodeableConcept `protobuf:"bytes,13,opt,name=not_done_reason,json=notDoneReason,proto3" json:"not_done_reason,omitempty"`
	// Patient history is about
	Patient *Reference `protobuf:"bytes,14,opt,name=patient,proto3" json:"patient,omitempty"`
	// When history was captured/updated
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// The family member described
	Name *String `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	// Relationship to the subject
	Relationship *CodeableConcept `protobuf:"bytes,17,opt,name=relationship,proto3" json:"relationship,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode        `protobuf:"bytes,18,opt,name=gender,proto3" json:"gender,omitempty"`
	Born   *FamilymemberhistoryGenetic_Born `protobuf:"bytes,19,opt,name=born,proto3" json:"born,omitempty"`
	Age    *FamilymemberhistoryGenetic_Age  `protobuf:"bytes,20,opt,name=age,proto3" json:"age,omitempty"`
	// Age is estimated?
	EstimatedAge *Boolean                             `protobuf:"bytes,21,opt,name=estimated_age,json=estimatedAge,proto3" json:"estimated_age,omitempty"`
	Deceased     *FamilymemberhistoryGenetic_Deceased `protobuf:"bytes,22,opt,name=deceased,proto3" json:"deceased,omitempty"`
	// Why was family member history performed?
	ReasonCode []*CodeableConcept `protobuf:"bytes,23,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Why was family member history performed?
	ReasonReference []*Reference `protobuf:"bytes,24,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// General note about related person
	Note      []*Annotation                           `protobuf:"bytes,25,rep,name=note,proto3" json:"note,omitempty"`
	Condition []*FamilymemberhistoryGenetic_Condition `protobuf:"bytes,26,rep,name=condition,proto3" json:"condition,omitempty"`
	// Extension
	Parent []*FamilyMemberHistoryParent `protobuf:"bytes,27,rep,name=parent,proto3" json:"parent,omitempty"`
	// Extension
	Sibling []*FamilyMemberHistorySibling `protobuf:"bytes,28,rep,name=sibling,proto3" json:"sibling,omitempty"`
	// Extension
	Observation          []*Reference `protobuf:"bytes,29,rep,name=observation,proto3" json:"observation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FamilymemberhistoryGenetic) Reset()         { *m = FamilymemberhistoryGenetic{} }
func (m *FamilymemberhistoryGenetic) String() string { return proto.CompactTextString(m) }
func (*FamilymemberhistoryGenetic) ProtoMessage()    {}
func (*FamilymemberhistoryGenetic) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{11}
}

func (m *FamilymemberhistoryGenetic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilymemberhistoryGenetic.Unmarshal(m, b)
}
func (m *FamilymemberhistoryGenetic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilymemberhistoryGenetic.Marshal(b, m, deterministic)
}
func (m *FamilymemberhistoryGenetic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilymemberhistoryGenetic.Merge(m, src)
}
func (m *FamilymemberhistoryGenetic) XXX_Size() int {
	return xxx_messageInfo_FamilymemberhistoryGenetic.Size(m)
}
func (m *FamilymemberhistoryGenetic) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilymemberhistoryGenetic.DiscardUnknown(m)
}

var xxx_messageInfo_FamilymemberhistoryGenetic proto.InternalMessageInfo

func (m *FamilymemberhistoryGenetic) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetStatus() *FamilyHistoryStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetNotDone() *Boolean {
	if m != nil {
		return m.NotDone
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetNotDoneReason() *CodeableConcept {
	if m != nil {
		return m.NotDoneReason
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetRelationship() *CodeableConcept {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetBorn() *FamilymemberhistoryGenetic_Born {
	if m != nil {
		return m.Born
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetAge() *FamilymemberhistoryGenetic_Age {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetEstimatedAge() *Boolean {
	if m != nil {
		return m.EstimatedAge
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetDeceased() *FamilymemberhistoryGenetic_Deceased {
	if m != nil {
		return m.Deceased
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetCondition() []*FamilymemberhistoryGenetic_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetParent() []*FamilyMemberHistoryParent {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetSibling() []*FamilyMemberHistorySibling {
	if m != nil {
		return m.Sibling
	}
	return nil
}

func (m *FamilymemberhistoryGenetic) GetObservation() []*Reference {
	if m != nil {
		return m.Observation
	}
	return nil
}

// (approximate) date of birth
type FamilymemberhistoryGenetic_Born struct {
	// Types that are valid to be assigned to Born:
	//	*FamilymemberhistoryGenetic_Born_Period
	//	*FamilymemberhistoryGenetic_Born_Date
	//	*FamilymemberhistoryGenetic_Born_StringValue
	Born                 isFamilymemberhistoryGenetic_Born_Born `protobuf_oneof:"born"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *FamilymemberhistoryGenetic_Born) Reset()         { *m = FamilymemberhistoryGenetic_Born{} }
func (m *FamilymemberhistoryGenetic_Born) String() string { return proto.CompactTextString(m) }
func (*FamilymemberhistoryGenetic_Born) ProtoMessage()    {}
func (*FamilymemberhistoryGenetic_Born) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{11, 0}
}

func (m *FamilymemberhistoryGenetic_Born) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Born.Unmarshal(m, b)
}
func (m *FamilymemberhistoryGenetic_Born) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Born.Marshal(b, m, deterministic)
}
func (m *FamilymemberhistoryGenetic_Born) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilymemberhistoryGenetic_Born.Merge(m, src)
}
func (m *FamilymemberhistoryGenetic_Born) XXX_Size() int {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Born.Size(m)
}
func (m *FamilymemberhistoryGenetic_Born) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilymemberhistoryGenetic_Born.DiscardUnknown(m)
}

var xxx_messageInfo_FamilymemberhistoryGenetic_Born proto.InternalMessageInfo

type isFamilymemberhistoryGenetic_Born_Born interface {
	isFamilymemberhistoryGenetic_Born_Born()
}

type FamilymemberhistoryGenetic_Born_Period struct {
	Period *Period `protobuf:"bytes,1,opt,name=period,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Born_Date struct {
	Date *Date `protobuf:"bytes,2,opt,name=date,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Born_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

func (*FamilymemberhistoryGenetic_Born_Period) isFamilymemberhistoryGenetic_Born_Born() {}

func (*FamilymemberhistoryGenetic_Born_Date) isFamilymemberhistoryGenetic_Born_Born() {}

func (*FamilymemberhistoryGenetic_Born_StringValue) isFamilymemberhistoryGenetic_Born_Born() {}

func (m *FamilymemberhistoryGenetic_Born) GetBorn() isFamilymemberhistoryGenetic_Born_Born {
	if m != nil {
		return m.Born
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Born) GetPeriod() *Period {
	if x, ok := m.GetBorn().(*FamilymemberhistoryGenetic_Born_Period); ok {
		return x.Period
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Born) GetDate() *Date {
	if x, ok := m.GetBorn().(*FamilymemberhistoryGenetic_Born_Date); ok {
		return x.Date
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Born) GetStringValue() *String {
	if x, ok := m.GetBorn().(*FamilymemberhistoryGenetic_Born_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FamilymemberhistoryGenetic_Born) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FamilymemberhistoryGenetic_Born_OneofMarshaler, _FamilymemberhistoryGenetic_Born_OneofUnmarshaler, _FamilymemberhistoryGenetic_Born_OneofSizer, []interface{}{
		(*FamilymemberhistoryGenetic_Born_Period)(nil),
		(*FamilymemberhistoryGenetic_Born_Date)(nil),
		(*FamilymemberhistoryGenetic_Born_StringValue)(nil),
	}
}

func _FamilymemberhistoryGenetic_Born_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FamilymemberhistoryGenetic_Born)
	// born
	switch x := m.Born.(type) {
	case *FamilymemberhistoryGenetic_Born_Period:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Born_Date:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Born_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FamilymemberhistoryGenetic_Born.Born has unexpected type %T", x)
	}
	return nil
}

func _FamilymemberhistoryGenetic_Born_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FamilymemberhistoryGenetic_Born)
	switch tag {
	case 1: // born.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Born = &FamilymemberhistoryGenetic_Born_Period{msg}
		return true, err
	case 2: // born.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Born = &FamilymemberhistoryGenetic_Born_Date{msg}
		return true, err
	case 3: // born.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Born = &FamilymemberhistoryGenetic_Born_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FamilymemberhistoryGenetic_Born_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FamilymemberhistoryGenetic_Born)
	// born
	switch x := m.Born.(type) {
	case *FamilymemberhistoryGenetic_Born_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Born_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Born_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// (approximate) age
type FamilymemberhistoryGenetic_Age struct {
	// Types that are valid to be assigned to Age:
	//	*FamilymemberhistoryGenetic_Age_AgeValue
	//	*FamilymemberhistoryGenetic_Age_Range
	//	*FamilymemberhistoryGenetic_Age_StringValue
	Age                  isFamilymemberhistoryGenetic_Age_Age `protobuf_oneof:"age"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *FamilymemberhistoryGenetic_Age) Reset()         { *m = FamilymemberhistoryGenetic_Age{} }
func (m *FamilymemberhistoryGenetic_Age) String() string { return proto.CompactTextString(m) }
func (*FamilymemberhistoryGenetic_Age) ProtoMessage()    {}
func (*FamilymemberhistoryGenetic_Age) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{11, 1}
}

func (m *FamilymemberhistoryGenetic_Age) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Age.Unmarshal(m, b)
}
func (m *FamilymemberhistoryGenetic_Age) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Age.Marshal(b, m, deterministic)
}
func (m *FamilymemberhistoryGenetic_Age) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilymemberhistoryGenetic_Age.Merge(m, src)
}
func (m *FamilymemberhistoryGenetic_Age) XXX_Size() int {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Age.Size(m)
}
func (m *FamilymemberhistoryGenetic_Age) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilymemberhistoryGenetic_Age.DiscardUnknown(m)
}

var xxx_messageInfo_FamilymemberhistoryGenetic_Age proto.InternalMessageInfo

type isFamilymemberhistoryGenetic_Age_Age interface {
	isFamilymemberhistoryGenetic_Age_Age()
}

type FamilymemberhistoryGenetic_Age_AgeValue struct {
	AgeValue *FamilymemberhistoryGenetic_Age `protobuf:"bytes,1,opt,name=age_value,json=age,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Age_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Age_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

func (*FamilymemberhistoryGenetic_Age_AgeValue) isFamilymemberhistoryGenetic_Age_Age() {}

func (*FamilymemberhistoryGenetic_Age_Range) isFamilymemberhistoryGenetic_Age_Age() {}

func (*FamilymemberhistoryGenetic_Age_StringValue) isFamilymemberhistoryGenetic_Age_Age() {}

func (m *FamilymemberhistoryGenetic_Age) GetAge() isFamilymemberhistoryGenetic_Age_Age {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Age) GetAgeValue() *FamilymemberhistoryGenetic_Age {
	if x, ok := m.GetAge().(*FamilymemberhistoryGenetic_Age_AgeValue); ok {
		return x.AgeValue
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Age) GetRange() *Range {
	if x, ok := m.GetAge().(*FamilymemberhistoryGenetic_Age_Range); ok {
		return x.Range
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Age) GetStringValue() *String {
	if x, ok := m.GetAge().(*FamilymemberhistoryGenetic_Age_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FamilymemberhistoryGenetic_Age) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FamilymemberhistoryGenetic_Age_OneofMarshaler, _FamilymemberhistoryGenetic_Age_OneofUnmarshaler, _FamilymemberhistoryGenetic_Age_OneofSizer, []interface{}{
		(*FamilymemberhistoryGenetic_Age_AgeValue)(nil),
		(*FamilymemberhistoryGenetic_Age_Range)(nil),
		(*FamilymemberhistoryGenetic_Age_StringValue)(nil),
	}
}

func _FamilymemberhistoryGenetic_Age_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FamilymemberhistoryGenetic_Age)
	// age
	switch x := m.Age.(type) {
	case *FamilymemberhistoryGenetic_Age_AgeValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AgeValue); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Age_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Age_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FamilymemberhistoryGenetic_Age.Age has unexpected type %T", x)
	}
	return nil
}

func _FamilymemberhistoryGenetic_Age_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FamilymemberhistoryGenetic_Age)
	switch tag {
	case 1: // age.age_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FamilymemberhistoryGenetic_Age)
		err := b.DecodeMessage(msg)
		m.Age = &FamilymemberhistoryGenetic_Age_AgeValue{msg}
		return true, err
	case 2: // age.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Age = &FamilymemberhistoryGenetic_Age_Range{msg}
		return true, err
	case 3: // age.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Age = &FamilymemberhistoryGenetic_Age_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FamilymemberhistoryGenetic_Age_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FamilymemberhistoryGenetic_Age)
	// age
	switch x := m.Age.(type) {
	case *FamilymemberhistoryGenetic_Age_AgeValue:
		s := proto.Size(x.AgeValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Age_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Age_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Dead? How old/when?
type FamilymemberhistoryGenetic_Deceased struct {
	// Types that are valid to be assigned to Deceased:
	//	*FamilymemberhistoryGenetic_Deceased_Boolean
	//	*FamilymemberhistoryGenetic_Deceased_Age
	//	*FamilymemberhistoryGenetic_Deceased_Range
	//	*FamilymemberhistoryGenetic_Deceased_Date
	//	*FamilymemberhistoryGenetic_Deceased_StringValue
	Deceased             isFamilymemberhistoryGenetic_Deceased_Deceased `protobuf_oneof:"deceased"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *FamilymemberhistoryGenetic_Deceased) Reset()         { *m = FamilymemberhistoryGenetic_Deceased{} }
func (m *FamilymemberhistoryGenetic_Deceased) String() string { return proto.CompactTextString(m) }
func (*FamilymemberhistoryGenetic_Deceased) ProtoMessage()    {}
func (*FamilymemberhistoryGenetic_Deceased) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{11, 2}
}

func (m *FamilymemberhistoryGenetic_Deceased) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Deceased.Unmarshal(m, b)
}
func (m *FamilymemberhistoryGenetic_Deceased) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Deceased.Marshal(b, m, deterministic)
}
func (m *FamilymemberhistoryGenetic_Deceased) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilymemberhistoryGenetic_Deceased.Merge(m, src)
}
func (m *FamilymemberhistoryGenetic_Deceased) XXX_Size() int {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Deceased.Size(m)
}
func (m *FamilymemberhistoryGenetic_Deceased) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilymemberhistoryGenetic_Deceased.DiscardUnknown(m)
}

var xxx_messageInfo_FamilymemberhistoryGenetic_Deceased proto.InternalMessageInfo

type isFamilymemberhistoryGenetic_Deceased_Deceased interface {
	isFamilymemberhistoryGenetic_Deceased_Deceased()
}

type FamilymemberhistoryGenetic_Deceased_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Deceased_Age struct {
	Age *FamilymemberhistoryGenetic_Age `protobuf:"bytes,2,opt,name=age,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Deceased_Range struct {
	Range *Range `protobuf:"bytes,3,opt,name=range,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Deceased_Date struct {
	Date *Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Deceased_StringValue struct {
	StringValue *String `protobuf:"bytes,5,opt,name=string_value,json=string,proto3,oneof"`
}

func (*FamilymemberhistoryGenetic_Deceased_Boolean) isFamilymemberhistoryGenetic_Deceased_Deceased() {}

func (*FamilymemberhistoryGenetic_Deceased_Age) isFamilymemberhistoryGenetic_Deceased_Deceased() {}

func (*FamilymemberhistoryGenetic_Deceased_Range) isFamilymemberhistoryGenetic_Deceased_Deceased() {}

func (*FamilymemberhistoryGenetic_Deceased_Date) isFamilymemberhistoryGenetic_Deceased_Deceased() {}

func (*FamilymemberhistoryGenetic_Deceased_StringValue) isFamilymemberhistoryGenetic_Deceased_Deceased() {
}

func (m *FamilymemberhistoryGenetic_Deceased) GetDeceased() isFamilymemberhistoryGenetic_Deceased_Deceased {
	if m != nil {
		return m.Deceased
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Deceased) GetBoolean() *Boolean {
	if x, ok := m.GetDeceased().(*FamilymemberhistoryGenetic_Deceased_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Deceased) GetAge() *FamilymemberhistoryGenetic_Age {
	if x, ok := m.GetDeceased().(*FamilymemberhistoryGenetic_Deceased_Age); ok {
		return x.Age
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Deceased) GetRange() *Range {
	if x, ok := m.GetDeceased().(*FamilymemberhistoryGenetic_Deceased_Range); ok {
		return x.Range
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Deceased) GetDate() *Date {
	if x, ok := m.GetDeceased().(*FamilymemberhistoryGenetic_Deceased_Date); ok {
		return x.Date
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Deceased) GetStringValue() *String {
	if x, ok := m.GetDeceased().(*FamilymemberhistoryGenetic_Deceased_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FamilymemberhistoryGenetic_Deceased) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FamilymemberhistoryGenetic_Deceased_OneofMarshaler, _FamilymemberhistoryGenetic_Deceased_OneofUnmarshaler, _FamilymemberhistoryGenetic_Deceased_OneofSizer, []interface{}{
		(*FamilymemberhistoryGenetic_Deceased_Boolean)(nil),
		(*FamilymemberhistoryGenetic_Deceased_Age)(nil),
		(*FamilymemberhistoryGenetic_Deceased_Range)(nil),
		(*FamilymemberhistoryGenetic_Deceased_Date)(nil),
		(*FamilymemberhistoryGenetic_Deceased_StringValue)(nil),
	}
}

func _FamilymemberhistoryGenetic_Deceased_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FamilymemberhistoryGenetic_Deceased)
	// deceased
	switch x := m.Deceased.(type) {
	case *FamilymemberhistoryGenetic_Deceased_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Deceased_Age:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Deceased_Range:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Deceased_Date:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Deceased_StringValue:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FamilymemberhistoryGenetic_Deceased.Deceased has unexpected type %T", x)
	}
	return nil
}

func _FamilymemberhistoryGenetic_Deceased_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FamilymemberhistoryGenetic_Deceased)
	switch tag {
	case 1: // deceased.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilymemberhistoryGenetic_Deceased_Boolean{msg}
		return true, err
	case 2: // deceased.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FamilymemberhistoryGenetic_Age)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilymemberhistoryGenetic_Deceased_Age{msg}
		return true, err
	case 3: // deceased.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilymemberhistoryGenetic_Deceased_Range{msg}
		return true, err
	case 4: // deceased.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilymemberhistoryGenetic_Deceased_Date{msg}
		return true, err
	case 5: // deceased.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Deceased = &FamilymemberhistoryGenetic_Deceased_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FamilymemberhistoryGenetic_Deceased_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FamilymemberhistoryGenetic_Deceased)
	// deceased
	switch x := m.Deceased.(type) {
	case *FamilymemberhistoryGenetic_Deceased_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Deceased_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Deceased_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Deceased_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Deceased_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Condition that the related person had
type FamilymemberhistoryGenetic_Condition struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Condition suffered by relation
	Code *CodeableConcept `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// deceased | permanent disability | etc.
	Outcome *CodeableConcept                            `protobuf:"bytes,5,opt,name=outcome,proto3" json:"outcome,omitempty"`
	Onset   *FamilymemberhistoryGenetic_Condition_Onset `protobuf:"bytes,6,opt,name=onset,proto3" json:"onset,omitempty"`
	// Extra information about condition
	Note                 *Annotation `protobuf:"bytes,7,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FamilymemberhistoryGenetic_Condition) Reset()         { *m = FamilymemberhistoryGenetic_Condition{} }
func (m *FamilymemberhistoryGenetic_Condition) String() string { return proto.CompactTextString(m) }
func (*FamilymemberhistoryGenetic_Condition) ProtoMessage()    {}
func (*FamilymemberhistoryGenetic_Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{11, 3}
}

func (m *FamilymemberhistoryGenetic_Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Condition.Unmarshal(m, b)
}
func (m *FamilymemberhistoryGenetic_Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Condition.Marshal(b, m, deterministic)
}
func (m *FamilymemberhistoryGenetic_Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilymemberhistoryGenetic_Condition.Merge(m, src)
}
func (m *FamilymemberhistoryGenetic_Condition) XXX_Size() int {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Condition.Size(m)
}
func (m *FamilymemberhistoryGenetic_Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilymemberhistoryGenetic_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_FamilymemberhistoryGenetic_Condition proto.InternalMessageInfo

func (m *FamilymemberhistoryGenetic_Condition) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition) GetOnset() *FamilymemberhistoryGenetic_Condition_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition) GetNote() *Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// When condition first manifested
type FamilymemberhistoryGenetic_Condition_Onset struct {
	// Types that are valid to be assigned to Onset:
	//	*FamilymemberhistoryGenetic_Condition_Onset_Age
	//	*FamilymemberhistoryGenetic_Condition_Onset_Range
	//	*FamilymemberhistoryGenetic_Condition_Onset_Period
	//	*FamilymemberhistoryGenetic_Condition_Onset_StringValue
	Onset                isFamilymemberhistoryGenetic_Condition_Onset_Onset `protobuf_oneof:"onset"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *FamilymemberhistoryGenetic_Condition_Onset) Reset() {
	*m = FamilymemberhistoryGenetic_Condition_Onset{}
}
func (m *FamilymemberhistoryGenetic_Condition_Onset) String() string {
	return proto.CompactTextString(m)
}
func (*FamilymemberhistoryGenetic_Condition_Onset) ProtoMessage() {}
func (*FamilymemberhistoryGenetic_Condition_Onset) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{11, 3, 0}
}

func (m *FamilymemberhistoryGenetic_Condition_Onset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Condition_Onset.Unmarshal(m, b)
}
func (m *FamilymemberhistoryGenetic_Condition_Onset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Condition_Onset.Marshal(b, m, deterministic)
}
func (m *FamilymemberhistoryGenetic_Condition_Onset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FamilymemberhistoryGenetic_Condition_Onset.Merge(m, src)
}
func (m *FamilymemberhistoryGenetic_Condition_Onset) XXX_Size() int {
	return xxx_messageInfo_FamilymemberhistoryGenetic_Condition_Onset.Size(m)
}
func (m *FamilymemberhistoryGenetic_Condition_Onset) XXX_DiscardUnknown() {
	xxx_messageInfo_FamilymemberhistoryGenetic_Condition_Onset.DiscardUnknown(m)
}

var xxx_messageInfo_FamilymemberhistoryGenetic_Condition_Onset proto.InternalMessageInfo

type isFamilymemberhistoryGenetic_Condition_Onset_Onset interface {
	isFamilymemberhistoryGenetic_Condition_Onset_Onset()
}

type FamilymemberhistoryGenetic_Condition_Onset_Age struct {
	Age *FamilymemberhistoryGenetic_Age `protobuf:"bytes,1,opt,name=age,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Condition_Onset_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Condition_Onset_Period struct {
	Period *Period `protobuf:"bytes,3,opt,name=period,proto3,oneof"`
}

type FamilymemberhistoryGenetic_Condition_Onset_StringValue struct {
	StringValue *String `protobuf:"bytes,4,opt,name=string_value,json=string,proto3,oneof"`
}

func (*FamilymemberhistoryGenetic_Condition_Onset_Age) isFamilymemberhistoryGenetic_Condition_Onset_Onset() {
}

func (*FamilymemberhistoryGenetic_Condition_Onset_Range) isFamilymemberhistoryGenetic_Condition_Onset_Onset() {
}

func (*FamilymemberhistoryGenetic_Condition_Onset_Period) isFamilymemberhistoryGenetic_Condition_Onset_Onset() {
}

func (*FamilymemberhistoryGenetic_Condition_Onset_StringValue) isFamilymemberhistoryGenetic_Condition_Onset_Onset() {
}

func (m *FamilymemberhistoryGenetic_Condition_Onset) GetOnset() isFamilymemberhistoryGenetic_Condition_Onset_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition_Onset) GetAge() *FamilymemberhistoryGenetic_Age {
	if x, ok := m.GetOnset().(*FamilymemberhistoryGenetic_Condition_Onset_Age); ok {
		return x.Age
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition_Onset) GetRange() *Range {
	if x, ok := m.GetOnset().(*FamilymemberhistoryGenetic_Condition_Onset_Range); ok {
		return x.Range
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition_Onset) GetPeriod() *Period {
	if x, ok := m.GetOnset().(*FamilymemberhistoryGenetic_Condition_Onset_Period); ok {
		return x.Period
	}
	return nil
}

func (m *FamilymemberhistoryGenetic_Condition_Onset) GetStringValue() *String {
	if x, ok := m.GetOnset().(*FamilymemberhistoryGenetic_Condition_Onset_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FamilymemberhistoryGenetic_Condition_Onset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FamilymemberhistoryGenetic_Condition_Onset_OneofMarshaler, _FamilymemberhistoryGenetic_Condition_Onset_OneofUnmarshaler, _FamilymemberhistoryGenetic_Condition_Onset_OneofSizer, []interface{}{
		(*FamilymemberhistoryGenetic_Condition_Onset_Age)(nil),
		(*FamilymemberhistoryGenetic_Condition_Onset_Range)(nil),
		(*FamilymemberhistoryGenetic_Condition_Onset_Period)(nil),
		(*FamilymemberhistoryGenetic_Condition_Onset_StringValue)(nil),
	}
}

func _FamilymemberhistoryGenetic_Condition_Onset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FamilymemberhistoryGenetic_Condition_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *FamilymemberhistoryGenetic_Condition_Onset_Age:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Condition_Onset_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Condition_Onset_Period:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *FamilymemberhistoryGenetic_Condition_Onset_StringValue:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FamilymemberhistoryGenetic_Condition_Onset.Onset has unexpected type %T", x)
	}
	return nil
}

func _FamilymemberhistoryGenetic_Condition_Onset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FamilymemberhistoryGenetic_Condition_Onset)
	switch tag {
	case 1: // onset.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FamilymemberhistoryGenetic_Age)
		err := b.DecodeMessage(msg)
		m.Onset = &FamilymemberhistoryGenetic_Condition_Onset_Age{msg}
		return true, err
	case 2: // onset.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Onset = &FamilymemberhistoryGenetic_Condition_Onset_Range{msg}
		return true, err
	case 3: // onset.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Onset = &FamilymemberhistoryGenetic_Condition_Onset_Period{msg}
		return true, err
	case 4: // onset.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Onset = &FamilymemberhistoryGenetic_Condition_Onset_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FamilymemberhistoryGenetic_Condition_Onset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FamilymemberhistoryGenetic_Condition_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *FamilymemberhistoryGenetic_Condition_Onset_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Condition_Onset_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Condition_Onset_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FamilymemberhistoryGenetic_Condition_Onset_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Example Lipid Profile.
// HDL Cholesterol Result.
// See http://hl7.org/fhir/StructureDefinition/hdlcholesterol
type Hdlcholesterol struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// HDL Cholesterol
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference                `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Hdlcholesterol_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference          `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Hdlcholesterol_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// + | ++ | +++ | - | -- | ---
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                     `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       *Hdlcholesterol_ReferenceRange `protobuf:"bytes,27,opt,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Component            []*Hdlcholesterol_Component    `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Hdlcholesterol) Reset()         { *m = Hdlcholesterol{} }
func (m *Hdlcholesterol) String() string { return proto.CompactTextString(m) }
func (*Hdlcholesterol) ProtoMessage()    {}
func (*Hdlcholesterol) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{12}
}

func (m *Hdlcholesterol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hdlcholesterol.Unmarshal(m, b)
}
func (m *Hdlcholesterol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hdlcholesterol.Marshal(b, m, deterministic)
}
func (m *Hdlcholesterol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hdlcholesterol.Merge(m, src)
}
func (m *Hdlcholesterol) XXX_Size() int {
	return xxx_messageInfo_Hdlcholesterol.Size(m)
}
func (m *Hdlcholesterol) XXX_DiscardUnknown() {
	xxx_messageInfo_Hdlcholesterol.DiscardUnknown(m)
}

var xxx_messageInfo_Hdlcholesterol proto.InternalMessageInfo

func (m *Hdlcholesterol) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Hdlcholesterol) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Hdlcholesterol) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Hdlcholesterol) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Hdlcholesterol) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Hdlcholesterol) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Hdlcholesterol) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Hdlcholesterol) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Hdlcholesterol) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Hdlcholesterol) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Hdlcholesterol) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Hdlcholesterol) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Hdlcholesterol) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Hdlcholesterol) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Hdlcholesterol) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Hdlcholesterol) GetEffective() *Hdlcholesterol_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Hdlcholesterol) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Hdlcholesterol) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Hdlcholesterol) GetValue() *Hdlcholesterol_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Hdlcholesterol) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Hdlcholesterol) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Hdlcholesterol) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Hdlcholesterol) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Hdlcholesterol) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Hdlcholesterol) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Hdlcholesterol) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Hdlcholesterol) GetReferenceRange() *Hdlcholesterol_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Hdlcholesterol) GetComponent() []*Hdlcholesterol_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Clinically relevant time/time-period for observation
type Hdlcholesterol_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Hdlcholesterol_Effective_DateTime
	//	*Hdlcholesterol_Effective_Period
	Effective            isHdlcholesterol_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Hdlcholesterol_Effective) Reset()         { *m = Hdlcholesterol_Effective{} }
func (m *Hdlcholesterol_Effective) String() string { return proto.CompactTextString(m) }
func (*Hdlcholesterol_Effective) ProtoMessage()    {}
func (*Hdlcholesterol_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{12, 0}
}

func (m *Hdlcholesterol_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hdlcholesterol_Effective.Unmarshal(m, b)
}
func (m *Hdlcholesterol_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hdlcholesterol_Effective.Marshal(b, m, deterministic)
}
func (m *Hdlcholesterol_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hdlcholesterol_Effective.Merge(m, src)
}
func (m *Hdlcholesterol_Effective) XXX_Size() int {
	return xxx_messageInfo_Hdlcholesterol_Effective.Size(m)
}
func (m *Hdlcholesterol_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Hdlcholesterol_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Hdlcholesterol_Effective proto.InternalMessageInfo

type isHdlcholesterol_Effective_Effective interface {
	isHdlcholesterol_Effective_Effective()
}

type Hdlcholesterol_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Hdlcholesterol_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Hdlcholesterol_Effective_DateTime) isHdlcholesterol_Effective_Effective() {}

func (*Hdlcholesterol_Effective_Period) isHdlcholesterol_Effective_Effective() {}

func (m *Hdlcholesterol_Effective) GetEffective() isHdlcholesterol_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Hdlcholesterol_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Hdlcholesterol_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Hdlcholesterol_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Hdlcholesterol_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Hdlcholesterol_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Hdlcholesterol_Effective_OneofMarshaler, _Hdlcholesterol_Effective_OneofUnmarshaler, _Hdlcholesterol_Effective_OneofSizer, []interface{}{
		(*Hdlcholesterol_Effective_DateTime)(nil),
		(*Hdlcholesterol_Effective_Period)(nil),
	}
}

func _Hdlcholesterol_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Hdlcholesterol_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Hdlcholesterol_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Hdlcholesterol_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Hdlcholesterol_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Hdlcholesterol_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Hdlcholesterol_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Hdlcholesterol_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Hdlcholesterol_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Hdlcholesterol_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Hdlcholesterol_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Hdlcholesterol_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// HDL Cholesterol value
type Hdlcholesterol_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Hdlcholesterol_Value_Quantity
	Value                isHdlcholesterol_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Hdlcholesterol_Value) Reset()         { *m = Hdlcholesterol_Value{} }
func (m *Hdlcholesterol_Value) String() string { return proto.CompactTextString(m) }
func (*Hdlcholesterol_Value) ProtoMessage()    {}
func (*Hdlcholesterol_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{12, 1}
}

func (m *Hdlcholesterol_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hdlcholesterol_Value.Unmarshal(m, b)
}
func (m *Hdlcholesterol_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hdlcholesterol_Value.Marshal(b, m, deterministic)
}
func (m *Hdlcholesterol_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hdlcholesterol_Value.Merge(m, src)
}
func (m *Hdlcholesterol_Value) XXX_Size() int {
	return xxx_messageInfo_Hdlcholesterol_Value.Size(m)
}
func (m *Hdlcholesterol_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Hdlcholesterol_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Hdlcholesterol_Value proto.InternalMessageInfo

type isHdlcholesterol_Value_Value interface {
	isHdlcholesterol_Value_Value()
}

type Hdlcholesterol_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Hdlcholesterol_Value_Quantity) isHdlcholesterol_Value_Value() {}

func (m *Hdlcholesterol_Value) GetValue() isHdlcholesterol_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Hdlcholesterol_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Hdlcholesterol_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Hdlcholesterol_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Hdlcholesterol_Value_OneofMarshaler, _Hdlcholesterol_Value_OneofUnmarshaler, _Hdlcholesterol_Value_OneofSizer, []interface{}{
		(*Hdlcholesterol_Value_Quantity)(nil),
	}
}

func _Hdlcholesterol_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Hdlcholesterol_Value)
	// value
	switch x := m.Value.(type) {
	case *Hdlcholesterol_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Hdlcholesterol_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Hdlcholesterol_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Hdlcholesterol_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Hdlcholesterol_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Hdlcholesterol_Value)
	// value
	switch x := m.Value.(type) {
	case *Hdlcholesterol_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Hdlcholesterol_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A fixed quantity (no comparator)
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hdlcholesterol_ReferenceRange) Reset()         { *m = Hdlcholesterol_ReferenceRange{} }
func (m *Hdlcholesterol_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Hdlcholesterol_ReferenceRange) ProtoMessage()    {}
func (*Hdlcholesterol_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{12, 2}
}

func (m *Hdlcholesterol_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hdlcholesterol_ReferenceRange.Unmarshal(m, b)
}
func (m *Hdlcholesterol_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hdlcholesterol_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Hdlcholesterol_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hdlcholesterol_ReferenceRange.Merge(m, src)
}
func (m *Hdlcholesterol_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Hdlcholesterol_ReferenceRange.Size(m)
}
func (m *Hdlcholesterol_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Hdlcholesterol_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Hdlcholesterol_ReferenceRange proto.InternalMessageInfo

func (m *Hdlcholesterol_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Hdlcholesterol_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Hdlcholesterol_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Hdlcholesterol_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Hdlcholesterol_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Component results
type Hdlcholesterol_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept                `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Hdlcholesterol_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Hdlcholesterol_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Hdlcholesterol_Component) Reset()         { *m = Hdlcholesterol_Component{} }
func (m *Hdlcholesterol_Component) String() string { return proto.CompactTextString(m) }
func (*Hdlcholesterol_Component) ProtoMessage()    {}
func (*Hdlcholesterol_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{12, 3}
}

func (m *Hdlcholesterol_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hdlcholesterol_Component.Unmarshal(m, b)
}
func (m *Hdlcholesterol_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hdlcholesterol_Component.Marshal(b, m, deterministic)
}
func (m *Hdlcholesterol_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hdlcholesterol_Component.Merge(m, src)
}
func (m *Hdlcholesterol_Component) XXX_Size() int {
	return xxx_messageInfo_Hdlcholesterol_Component.Size(m)
}
func (m *Hdlcholesterol_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Hdlcholesterol_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Hdlcholesterol_Component proto.InternalMessageInfo

func (m *Hdlcholesterol_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Hdlcholesterol_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Hdlcholesterol_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Hdlcholesterol_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Hdlcholesterol_Component) GetValue() *Hdlcholesterol_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Hdlcholesterol_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Hdlcholesterol_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Hdlcholesterol_Component) GetReferenceRange() []*Hdlcholesterol_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Actual component result
type Hdlcholesterol_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Hdlcholesterol_Component_Value_Quantity
	//	*Hdlcholesterol_Component_Value_CodeableConcept
	//	*Hdlcholesterol_Component_Value_StringValue
	//	*Hdlcholesterol_Component_Value_Range
	//	*Hdlcholesterol_Component_Value_Ratio
	//	*Hdlcholesterol_Component_Value_SampledData
	//	*Hdlcholesterol_Component_Value_Attachment
	//	*Hdlcholesterol_Component_Value_Time
	//	*Hdlcholesterol_Component_Value_DateTime
	//	*Hdlcholesterol_Component_Value_Period
	Value                isHdlcholesterol_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *Hdlcholesterol_Component_Value) Reset()         { *m = Hdlcholesterol_Component_Value{} }
func (m *Hdlcholesterol_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Hdlcholesterol_Component_Value) ProtoMessage()    {}
func (*Hdlcholesterol_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{12, 3, 0}
}

func (m *Hdlcholesterol_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hdlcholesterol_Component_Value.Unmarshal(m, b)
}
func (m *Hdlcholesterol_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hdlcholesterol_Component_Value.Marshal(b, m, deterministic)
}
func (m *Hdlcholesterol_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hdlcholesterol_Component_Value.Merge(m, src)
}
func (m *Hdlcholesterol_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Hdlcholesterol_Component_Value.Size(m)
}
func (m *Hdlcholesterol_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Hdlcholesterol_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Hdlcholesterol_Component_Value proto.InternalMessageInfo

type isHdlcholesterol_Component_Value_Value interface {
	isHdlcholesterol_Component_Value_Value()
}

type Hdlcholesterol_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Hdlcholesterol_Component_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Hdlcholesterol_Component_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type Hdlcholesterol_Component_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type Hdlcholesterol_Component_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,5,opt,name=ratio,proto3,oneof"`
}

type Hdlcholesterol_Component_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,6,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Hdlcholesterol_Component_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,7,opt,name=attachment,proto3,oneof"`
}

type Hdlcholesterol_Component_Value_Time struct {
	Time *Time `protobuf:"bytes,8,opt,name=time,proto3,oneof"`
}

type Hdlcholesterol_Component_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,9,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Hdlcholesterol_Component_Value_Period struct {
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3,oneof"`
}

func (*Hdlcholesterol_Component_Value_Quantity) isHdlcholesterol_Component_Value_Value() {}

func (*Hdlcholesterol_Component_Value_CodeableConcept) isHdlcholesterol_Component_Value_Value() {}

func (*Hdlcholesterol_Component_Value_StringValue) isHdlcholesterol_Component_Value_Value() {}

func (*Hdlcholesterol_Component_Value_Range) isHdlcholesterol_Component_Value_Value() {}

func (*Hdlcholesterol_Component_Value_Ratio) isHdlcholesterol_Component_Value_Value() {}

func (*Hdlcholesterol_Component_Value_SampledData) isHdlcholesterol_Component_Value_Value() {}

func (*Hdlcholesterol_Component_Value_Attachment) isHdlcholesterol_Component_Value_Value() {}

func (*Hdlcholesterol_Component_Value_Time) isHdlcholesterol_Component_Value_Value() {}

func (*Hdlcholesterol_Component_Value_DateTime) isHdlcholesterol_Component_Value_Value() {}

func (*Hdlcholesterol_Component_Value_Period) isHdlcholesterol_Component_Value_Value() {}

func (m *Hdlcholesterol_Component_Value) GetValue() isHdlcholesterol_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Hdlcholesterol_Component_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Hdlcholesterol_Component_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Hdlcholesterol_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Hdlcholesterol_Component_Value_OneofMarshaler, _Hdlcholesterol_Component_Value_OneofUnmarshaler, _Hdlcholesterol_Component_Value_OneofSizer, []interface{}{
		(*Hdlcholesterol_Component_Value_Quantity)(nil),
		(*Hdlcholesterol_Component_Value_CodeableConcept)(nil),
		(*Hdlcholesterol_Component_Value_StringValue)(nil),
		(*Hdlcholesterol_Component_Value_Range)(nil),
		(*Hdlcholesterol_Component_Value_Ratio)(nil),
		(*Hdlcholesterol_Component_Value_SampledData)(nil),
		(*Hdlcholesterol_Component_Value_Attachment)(nil),
		(*Hdlcholesterol_Component_Value_Time)(nil),
		(*Hdlcholesterol_Component_Value_DateTime)(nil),
		(*Hdlcholesterol_Component_Value_Period)(nil),
	}
}

func _Hdlcholesterol_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Hdlcholesterol_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Hdlcholesterol_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Hdlcholesterol_Component_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Hdlcholesterol_Component_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Hdlcholesterol_Component_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Hdlcholesterol_Component_Value_Ratio:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Hdlcholesterol_Component_Value_SampledData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Hdlcholesterol_Component_Value_Attachment:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Hdlcholesterol_Component_Value_Time:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Hdlcholesterol_Component_Value_DateTime:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Hdlcholesterol_Component_Value_Period:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Hdlcholesterol_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Hdlcholesterol_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Hdlcholesterol_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_StringValue{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_Range{msg}
		return true, err
	case 5: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_Ratio{msg}
		return true, err
	case 6: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_SampledData{msg}
		return true, err
	case 7: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_Attachment{msg}
		return true, err
	case 8: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_Time{msg}
		return true, err
	case 9: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_DateTime{msg}
		return true, err
	case 10: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Hdlcholesterol_Component_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Hdlcholesterol_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Hdlcholesterol_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Hdlcholesterol_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Component_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Component_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Component_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Component_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Component_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Component_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Component_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Component_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hdlcholesterol_Component_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Head Circumference Profile.
// See http://hl7.org/fhir/StructureDefinition/headcircum
type Headcircum struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept                 `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Headcircum_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference            `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Headcircum_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference      `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Headcircum_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                   `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Headcircum_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Headcircum_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Headcircum_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Headcircum) Reset()         { *m = Headcircum{} }
func (m *Headcircum) String() string { return proto.CompactTextString(m) }
func (*Headcircum) ProtoMessage()    {}
func (*Headcircum) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{13}
}

func (m *Headcircum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headcircum.Unmarshal(m, b)
}
func (m *Headcircum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headcircum.Marshal(b, m, deterministic)
}
func (m *Headcircum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headcircum.Merge(m, src)
}
func (m *Headcircum) XXX_Size() int {
	return xxx_messageInfo_Headcircum.Size(m)
}
func (m *Headcircum) XXX_DiscardUnknown() {
	xxx_messageInfo_Headcircum.DiscardUnknown(m)
}

var xxx_messageInfo_Headcircum proto.InternalMessageInfo

func (m *Headcircum) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Headcircum) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Headcircum) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Headcircum) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Headcircum) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Headcircum) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Headcircum) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Headcircum) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Headcircum) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Headcircum) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Headcircum) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Headcircum) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Headcircum) GetCode() *Headcircum_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Headcircum) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Headcircum) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Headcircum) GetEffective() *Headcircum_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Headcircum) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Headcircum) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Headcircum) GetValue() *Headcircum_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Headcircum) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Headcircum) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Headcircum) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Headcircum) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Headcircum) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Headcircum) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Headcircum) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Headcircum) GetReferenceRange() []*Headcircum_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Headcircum) GetRelated() []*Headcircum_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Headcircum) GetComponent() []*Headcircum_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Head Circumference
type Headcircum_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	HeadCircumCode       []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=head_circum_code,json=headCircumCode,proto3" json:"head_circum_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Headcircum_CodeableConceptForCode) Reset()         { *m = Headcircum_CodeableConceptForCode{} }
func (m *Headcircum_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Headcircum_CodeableConceptForCode) ProtoMessage()    {}
func (*Headcircum_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{13, 0}
}

func (m *Headcircum_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headcircum_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Headcircum_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headcircum_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Headcircum_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headcircum_CodeableConceptForCode.Merge(m, src)
}
func (m *Headcircum_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Headcircum_CodeableConceptForCode.Size(m)
}
func (m *Headcircum_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Headcircum_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Headcircum_CodeableConceptForCode proto.InternalMessageInfo

func (m *Headcircum_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Headcircum_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Headcircum_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Headcircum_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Headcircum_CodeableConceptForCode) GetHeadCircumCode() []*CodingWithFixedCode {
	if m != nil {
		return m.HeadCircumCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Headcircum_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Headcircum_Effective_DateTime
	//	*Headcircum_Effective_Period
	Effective            isHeadcircum_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Headcircum_Effective) Reset()         { *m = Headcircum_Effective{} }
func (m *Headcircum_Effective) String() string { return proto.CompactTextString(m) }
func (*Headcircum_Effective) ProtoMessage()    {}
func (*Headcircum_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{13, 1}
}

func (m *Headcircum_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headcircum_Effective.Unmarshal(m, b)
}
func (m *Headcircum_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headcircum_Effective.Marshal(b, m, deterministic)
}
func (m *Headcircum_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headcircum_Effective.Merge(m, src)
}
func (m *Headcircum_Effective) XXX_Size() int {
	return xxx_messageInfo_Headcircum_Effective.Size(m)
}
func (m *Headcircum_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Headcircum_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Headcircum_Effective proto.InternalMessageInfo

type isHeadcircum_Effective_Effective interface {
	isHeadcircum_Effective_Effective()
}

type Headcircum_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Headcircum_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Headcircum_Effective_DateTime) isHeadcircum_Effective_Effective() {}

func (*Headcircum_Effective_Period) isHeadcircum_Effective_Effective() {}

func (m *Headcircum_Effective) GetEffective() isHeadcircum_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Headcircum_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Headcircum_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Headcircum_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Headcircum_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Headcircum_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Headcircum_Effective_OneofMarshaler, _Headcircum_Effective_OneofUnmarshaler, _Headcircum_Effective_OneofSizer, []interface{}{
		(*Headcircum_Effective_DateTime)(nil),
		(*Headcircum_Effective_Period)(nil),
	}
}

func _Headcircum_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Headcircum_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Headcircum_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Headcircum_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Headcircum_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Headcircum_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Headcircum_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Headcircum_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Headcircum_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Headcircum_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Headcircum_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Headcircum_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Headcircum_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Headcircum_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Headcircum_Value_Quantity
	Value                isHeadcircum_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Headcircum_Value) Reset()         { *m = Headcircum_Value{} }
func (m *Headcircum_Value) String() string { return proto.CompactTextString(m) }
func (*Headcircum_Value) ProtoMessage()    {}
func (*Headcircum_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{13, 2}
}

func (m *Headcircum_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headcircum_Value.Unmarshal(m, b)
}
func (m *Headcircum_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headcircum_Value.Marshal(b, m, deterministic)
}
func (m *Headcircum_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headcircum_Value.Merge(m, src)
}
func (m *Headcircum_Value) XXX_Size() int {
	return xxx_messageInfo_Headcircum_Value.Size(m)
}
func (m *Headcircum_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Headcircum_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Headcircum_Value proto.InternalMessageInfo

type isHeadcircum_Value_Value interface {
	isHeadcircum_Value_Value()
}

type Headcircum_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Headcircum_Value_Quantity) isHeadcircum_Value_Value() {}

func (m *Headcircum_Value) GetValue() isHeadcircum_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Headcircum_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Headcircum_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Headcircum_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Headcircum_Value_OneofMarshaler, _Headcircum_Value_OneofUnmarshaler, _Headcircum_Value_OneofSizer, []interface{}{
		(*Headcircum_Value_Quantity)(nil),
	}
}

func _Headcircum_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Headcircum_Value)
	// value
	switch x := m.Value.(type) {
	case *Headcircum_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Headcircum_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Headcircum_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Headcircum_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Headcircum_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Headcircum_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Headcircum_Value)
	// value
	switch x := m.Value.(type) {
	case *Headcircum_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Headcircum_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Headcircum_ReferenceRange) Reset()         { *m = Headcircum_ReferenceRange{} }
func (m *Headcircum_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Headcircum_ReferenceRange) ProtoMessage()    {}
func (*Headcircum_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{13, 3}
}

func (m *Headcircum_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headcircum_ReferenceRange.Unmarshal(m, b)
}
func (m *Headcircum_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headcircum_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Headcircum_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headcircum_ReferenceRange.Merge(m, src)
}
func (m *Headcircum_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Headcircum_ReferenceRange.Size(m)
}
func (m *Headcircum_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Headcircum_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Headcircum_ReferenceRange proto.InternalMessageInfo

func (m *Headcircum_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Headcircum_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Headcircum_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Headcircum_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Headcircum_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Headcircum_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Headcircum_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Headcircum_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Headcircum_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Headcircum_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Headcircum_Related) Reset()         { *m = Headcircum_Related{} }
func (m *Headcircum_Related) String() string { return proto.CompactTextString(m) }
func (*Headcircum_Related) ProtoMessage()    {}
func (*Headcircum_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{13, 4}
}

func (m *Headcircum_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headcircum_Related.Unmarshal(m, b)
}
func (m *Headcircum_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headcircum_Related.Marshal(b, m, deterministic)
}
func (m *Headcircum_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headcircum_Related.Merge(m, src)
}
func (m *Headcircum_Related) XXX_Size() int {
	return xxx_messageInfo_Headcircum_Related.Size(m)
}
func (m *Headcircum_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Headcircum_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Headcircum_Related proto.InternalMessageInfo

func (m *Headcircum_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Headcircum_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Headcircum_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Headcircum_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Headcircum_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Headcircum_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Headcircum_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Headcircum_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Headcircum_Component) Reset()         { *m = Headcircum_Component{} }
func (m *Headcircum_Component) String() string { return proto.CompactTextString(m) }
func (*Headcircum_Component) ProtoMessage()    {}
func (*Headcircum_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{13, 5}
}

func (m *Headcircum_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headcircum_Component.Unmarshal(m, b)
}
func (m *Headcircum_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headcircum_Component.Marshal(b, m, deterministic)
}
func (m *Headcircum_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headcircum_Component.Merge(m, src)
}
func (m *Headcircum_Component) XXX_Size() int {
	return xxx_messageInfo_Headcircum_Component.Size(m)
}
func (m *Headcircum_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Headcircum_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Headcircum_Component proto.InternalMessageInfo

func (m *Headcircum_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Headcircum_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Headcircum_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Headcircum_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Headcircum_Component) GetValue() *Headcircum_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Headcircum_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Headcircum_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Headcircum_Component) GetReferenceRange() []*Headcircum_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Headcircum_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Headcircum_Component_Value_Quantity
	Value                isHeadcircum_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Headcircum_Component_Value) Reset()         { *m = Headcircum_Component_Value{} }
func (m *Headcircum_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Headcircum_Component_Value) ProtoMessage()    {}
func (*Headcircum_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{13, 5, 0}
}

func (m *Headcircum_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headcircum_Component_Value.Unmarshal(m, b)
}
func (m *Headcircum_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headcircum_Component_Value.Marshal(b, m, deterministic)
}
func (m *Headcircum_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headcircum_Component_Value.Merge(m, src)
}
func (m *Headcircum_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Headcircum_Component_Value.Size(m)
}
func (m *Headcircum_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Headcircum_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Headcircum_Component_Value proto.InternalMessageInfo

type isHeadcircum_Component_Value_Value interface {
	isHeadcircum_Component_Value_Value()
}

type Headcircum_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Headcircum_Component_Value_Quantity) isHeadcircum_Component_Value_Value() {}

func (m *Headcircum_Component_Value) GetValue() isHeadcircum_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Headcircum_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Headcircum_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Headcircum_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Headcircum_Component_Value_OneofMarshaler, _Headcircum_Component_Value_OneofUnmarshaler, _Headcircum_Component_Value_OneofSizer, []interface{}{
		(*Headcircum_Component_Value_Quantity)(nil),
	}
}

func _Headcircum_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Headcircum_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Headcircum_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Headcircum_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Headcircum_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Headcircum_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Headcircum_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Headcircum_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Headcircum_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Headcircum_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Heart Rate Profile.
// See http://hl7.org/fhir/StructureDefinition/heartrate
type Heartrate struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept                `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Heartrate_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference           `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Heartrate_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference     `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Heartrate_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                  `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Heartrate_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Heartrate_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Heartrate_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Heartrate) Reset()         { *m = Heartrate{} }
func (m *Heartrate) String() string { return proto.CompactTextString(m) }
func (*Heartrate) ProtoMessage()    {}
func (*Heartrate) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{14}
}

func (m *Heartrate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartrate.Unmarshal(m, b)
}
func (m *Heartrate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartrate.Marshal(b, m, deterministic)
}
func (m *Heartrate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartrate.Merge(m, src)
}
func (m *Heartrate) XXX_Size() int {
	return xxx_messageInfo_Heartrate.Size(m)
}
func (m *Heartrate) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartrate.DiscardUnknown(m)
}

var xxx_messageInfo_Heartrate proto.InternalMessageInfo

func (m *Heartrate) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Heartrate) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Heartrate) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Heartrate) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Heartrate) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Heartrate) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Heartrate) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Heartrate) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Heartrate) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Heartrate) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Heartrate) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Heartrate) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Heartrate) GetCode() *Heartrate_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Heartrate) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Heartrate) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Heartrate) GetEffective() *Heartrate_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Heartrate) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Heartrate) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Heartrate) GetValue() *Heartrate_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Heartrate) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Heartrate) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Heartrate) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Heartrate) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Heartrate) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Heartrate) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Heartrate) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Heartrate) GetReferenceRange() []*Heartrate_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Heartrate) GetRelated() []*Heartrate_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Heartrate) GetComponent() []*Heartrate_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Heart Rate
type Heartrate_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	HeartRateCode        []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=heart_rate_code,json=heartRateCode,proto3" json:"heart_rate_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Heartrate_CodeableConceptForCode) Reset()         { *m = Heartrate_CodeableConceptForCode{} }
func (m *Heartrate_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Heartrate_CodeableConceptForCode) ProtoMessage()    {}
func (*Heartrate_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{14, 0}
}

func (m *Heartrate_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartrate_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Heartrate_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartrate_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Heartrate_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartrate_CodeableConceptForCode.Merge(m, src)
}
func (m *Heartrate_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Heartrate_CodeableConceptForCode.Size(m)
}
func (m *Heartrate_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartrate_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Heartrate_CodeableConceptForCode proto.InternalMessageInfo

func (m *Heartrate_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Heartrate_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Heartrate_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Heartrate_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Heartrate_CodeableConceptForCode) GetHeartRateCode() []*CodingWithFixedCode {
	if m != nil {
		return m.HeartRateCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Heartrate_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Heartrate_Effective_DateTime
	//	*Heartrate_Effective_Period
	Effective            isHeartrate_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Heartrate_Effective) Reset()         { *m = Heartrate_Effective{} }
func (m *Heartrate_Effective) String() string { return proto.CompactTextString(m) }
func (*Heartrate_Effective) ProtoMessage()    {}
func (*Heartrate_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{14, 1}
}

func (m *Heartrate_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartrate_Effective.Unmarshal(m, b)
}
func (m *Heartrate_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartrate_Effective.Marshal(b, m, deterministic)
}
func (m *Heartrate_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartrate_Effective.Merge(m, src)
}
func (m *Heartrate_Effective) XXX_Size() int {
	return xxx_messageInfo_Heartrate_Effective.Size(m)
}
func (m *Heartrate_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartrate_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Heartrate_Effective proto.InternalMessageInfo

type isHeartrate_Effective_Effective interface {
	isHeartrate_Effective_Effective()
}

type Heartrate_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Heartrate_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Heartrate_Effective_DateTime) isHeartrate_Effective_Effective() {}

func (*Heartrate_Effective_Period) isHeartrate_Effective_Effective() {}

func (m *Heartrate_Effective) GetEffective() isHeartrate_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Heartrate_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Heartrate_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Heartrate_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Heartrate_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Heartrate_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Heartrate_Effective_OneofMarshaler, _Heartrate_Effective_OneofUnmarshaler, _Heartrate_Effective_OneofSizer, []interface{}{
		(*Heartrate_Effective_DateTime)(nil),
		(*Heartrate_Effective_Period)(nil),
	}
}

func _Heartrate_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Heartrate_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Heartrate_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Heartrate_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Heartrate_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Heartrate_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Heartrate_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Heartrate_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Heartrate_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Heartrate_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Heartrate_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Heartrate_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Heartrate_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Heartrate_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Heartrate_Value_Quantity
	Value                isHeartrate_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Heartrate_Value) Reset()         { *m = Heartrate_Value{} }
func (m *Heartrate_Value) String() string { return proto.CompactTextString(m) }
func (*Heartrate_Value) ProtoMessage()    {}
func (*Heartrate_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{14, 2}
}

func (m *Heartrate_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartrate_Value.Unmarshal(m, b)
}
func (m *Heartrate_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartrate_Value.Marshal(b, m, deterministic)
}
func (m *Heartrate_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartrate_Value.Merge(m, src)
}
func (m *Heartrate_Value) XXX_Size() int {
	return xxx_messageInfo_Heartrate_Value.Size(m)
}
func (m *Heartrate_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartrate_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Heartrate_Value proto.InternalMessageInfo

type isHeartrate_Value_Value interface {
	isHeartrate_Value_Value()
}

type Heartrate_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Heartrate_Value_Quantity) isHeartrate_Value_Value() {}

func (m *Heartrate_Value) GetValue() isHeartrate_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Heartrate_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Heartrate_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Heartrate_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Heartrate_Value_OneofMarshaler, _Heartrate_Value_OneofUnmarshaler, _Heartrate_Value_OneofSizer, []interface{}{
		(*Heartrate_Value_Quantity)(nil),
	}
}

func _Heartrate_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Heartrate_Value)
	// value
	switch x := m.Value.(type) {
	case *Heartrate_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Heartrate_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Heartrate_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Heartrate_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Heartrate_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Heartrate_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Heartrate_Value)
	// value
	switch x := m.Value.(type) {
	case *Heartrate_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Heartrate_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartrate_ReferenceRange) Reset()         { *m = Heartrate_ReferenceRange{} }
func (m *Heartrate_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Heartrate_ReferenceRange) ProtoMessage()    {}
func (*Heartrate_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{14, 3}
}

func (m *Heartrate_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartrate_ReferenceRange.Unmarshal(m, b)
}
func (m *Heartrate_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartrate_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Heartrate_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartrate_ReferenceRange.Merge(m, src)
}
func (m *Heartrate_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Heartrate_ReferenceRange.Size(m)
}
func (m *Heartrate_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartrate_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Heartrate_ReferenceRange proto.InternalMessageInfo

func (m *Heartrate_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Heartrate_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Heartrate_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Heartrate_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Heartrate_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Heartrate_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Heartrate_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Heartrate_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Heartrate_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Heartrate_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Heartrate_Related) Reset()         { *m = Heartrate_Related{} }
func (m *Heartrate_Related) String() string { return proto.CompactTextString(m) }
func (*Heartrate_Related) ProtoMessage()    {}
func (*Heartrate_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{14, 4}
}

func (m *Heartrate_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartrate_Related.Unmarshal(m, b)
}
func (m *Heartrate_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartrate_Related.Marshal(b, m, deterministic)
}
func (m *Heartrate_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartrate_Related.Merge(m, src)
}
func (m *Heartrate_Related) XXX_Size() int {
	return xxx_messageInfo_Heartrate_Related.Size(m)
}
func (m *Heartrate_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartrate_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Heartrate_Related proto.InternalMessageInfo

func (m *Heartrate_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Heartrate_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Heartrate_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Heartrate_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Heartrate_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Heartrate_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept           `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Heartrate_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Heartrate_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Heartrate_Component) Reset()         { *m = Heartrate_Component{} }
func (m *Heartrate_Component) String() string { return proto.CompactTextString(m) }
func (*Heartrate_Component) ProtoMessage()    {}
func (*Heartrate_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{14, 5}
}

func (m *Heartrate_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartrate_Component.Unmarshal(m, b)
}
func (m *Heartrate_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartrate_Component.Marshal(b, m, deterministic)
}
func (m *Heartrate_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartrate_Component.Merge(m, src)
}
func (m *Heartrate_Component) XXX_Size() int {
	return xxx_messageInfo_Heartrate_Component.Size(m)
}
func (m *Heartrate_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartrate_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Heartrate_Component proto.InternalMessageInfo

func (m *Heartrate_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Heartrate_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Heartrate_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Heartrate_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Heartrate_Component) GetValue() *Heartrate_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Heartrate_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Heartrate_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Heartrate_Component) GetReferenceRange() []*Heartrate_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Heartrate_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Heartrate_Component_Value_Quantity
	Value                isHeartrate_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Heartrate_Component_Value) Reset()         { *m = Heartrate_Component_Value{} }
func (m *Heartrate_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Heartrate_Component_Value) ProtoMessage()    {}
func (*Heartrate_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{14, 5, 0}
}

func (m *Heartrate_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartrate_Component_Value.Unmarshal(m, b)
}
func (m *Heartrate_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartrate_Component_Value.Marshal(b, m, deterministic)
}
func (m *Heartrate_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartrate_Component_Value.Merge(m, src)
}
func (m *Heartrate_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Heartrate_Component_Value.Size(m)
}
func (m *Heartrate_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartrate_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Heartrate_Component_Value proto.InternalMessageInfo

type isHeartrate_Component_Value_Value interface {
	isHeartrate_Component_Value_Value()
}

type Heartrate_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Heartrate_Component_Value_Quantity) isHeartrate_Component_Value_Value() {}

func (m *Heartrate_Component_Value) GetValue() isHeartrate_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Heartrate_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Heartrate_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Heartrate_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Heartrate_Component_Value_OneofMarshaler, _Heartrate_Component_Value_OneofUnmarshaler, _Heartrate_Component_Value_OneofSizer, []interface{}{
		(*Heartrate_Component_Value_Quantity)(nil),
	}
}

func _Heartrate_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Heartrate_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Heartrate_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Heartrate_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Heartrate_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Heartrate_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Heartrate_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Heartrate_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Heartrate_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Heartrate_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Profile for HLA Genotyping
// Results. A Diagnostic report - a combination of request information, atomic
// results, images, interpretation, as well as formatted reports. See
// http://hl7.org/fhir/StructureDefinition/hlaresult
type Hlaresult struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Extension
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier for report
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// What was requested
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | partial | preliminary | final +
	Status *DiagnosticReportStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Service category
	Category *CodeableConcept `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
	// Name/Code for this diagnostic report
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// The subject of the report - usually, but not always, the patient
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Health care event when test ordered
	Context   *Reference           `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Hlaresult_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// DateTime this version was released
	Issued    *Instant               `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	Performer []*Hlaresult_Performer `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	// Specimens this report is based on
	Specimen []*Reference `protobuf:"bytes,19,rep,name=specimen,proto3" json:"specimen,omitempty"`
	// Observations - simple, or complex nested groups
	Result []*Reference `protobuf:"bytes,20,rep,name=result,proto3" json:"result,omitempty"`
	// Reference to full details of imaging associated with the diagnostic report
	ImagingStudy []*Reference       `protobuf:"bytes,21,rep,name=imaging_study,json=imagingStudy,proto3" json:"imaging_study,omitempty"`
	Image        []*Hlaresult_Image `protobuf:"bytes,22,rep,name=image,proto3" json:"image,omitempty"`
	// Clinical Interpretation of test results
	Conclusion *String `protobuf:"bytes,23,opt,name=conclusion,proto3" json:"conclusion,omitempty"`
	// Codes for the conclusion
	CodedDiagnosis []*CodeableConcept `protobuf:"bytes,24,rep,name=coded_diagnosis,json=codedDiagnosis,proto3" json:"coded_diagnosis,omitempty"`
	// Entire report as issued
	PresentedForm []*Attachment `protobuf:"bytes,25,rep,name=presented_form,json=presentedForm,proto3" json:"presented_form,omitempty"`
	// Allele Database
	AlleleDatabase *CodeableConcept `protobuf:"bytes,26,opt,name=allele_database,json=alleleDatabase,proto3" json:"allele_database,omitempty"`
	// Glstring
	Glstring *DiagnosticReportGlstring `protobuf:"bytes,27,opt,name=glstring,proto3" json:"glstring,omitempty"`
	// Haploid
	Haploid []*DiagnosticReportHaploid `protobuf:"bytes,28,rep,name=haploid,proto3" json:"haploid,omitempty"`
	// The platform, methodology and software applied at the time of the
	// genotyping
	Method               *CodeableConcept `protobuf:"bytes,29,opt,name=method,proto3" json:"method,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Hlaresult) Reset()         { *m = Hlaresult{} }
func (m *Hlaresult) String() string { return proto.CompactTextString(m) }
func (*Hlaresult) ProtoMessage()    {}
func (*Hlaresult) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{15}
}

func (m *Hlaresult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hlaresult.Unmarshal(m, b)
}
func (m *Hlaresult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hlaresult.Marshal(b, m, deterministic)
}
func (m *Hlaresult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hlaresult.Merge(m, src)
}
func (m *Hlaresult) XXX_Size() int {
	return xxx_messageInfo_Hlaresult.Size(m)
}
func (m *Hlaresult) XXX_DiscardUnknown() {
	xxx_messageInfo_Hlaresult.DiscardUnknown(m)
}

var xxx_messageInfo_Hlaresult proto.InternalMessageInfo

func (m *Hlaresult) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Hlaresult) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Hlaresult) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Hlaresult) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Hlaresult) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Hlaresult) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Hlaresult) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Hlaresult) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Hlaresult) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Hlaresult) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Hlaresult) GetStatus() *DiagnosticReportStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Hlaresult) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Hlaresult) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Hlaresult) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Hlaresult) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Hlaresult) GetEffective() *Hlaresult_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Hlaresult) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Hlaresult) GetPerformer() []*Hlaresult_Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Hlaresult) GetSpecimen() []*Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Hlaresult) GetResult() []*Reference {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Hlaresult) GetImagingStudy() []*Reference {
	if m != nil {
		return m.ImagingStudy
	}
	return nil
}

func (m *Hlaresult) GetImage() []*Hlaresult_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Hlaresult) GetConclusion() *String {
	if m != nil {
		return m.Conclusion
	}
	return nil
}

func (m *Hlaresult) GetCodedDiagnosis() []*CodeableConcept {
	if m != nil {
		return m.CodedDiagnosis
	}
	return nil
}

func (m *Hlaresult) GetPresentedForm() []*Attachment {
	if m != nil {
		return m.PresentedForm
	}
	return nil
}

func (m *Hlaresult) GetAlleleDatabase() *CodeableConcept {
	if m != nil {
		return m.AlleleDatabase
	}
	return nil
}

func (m *Hlaresult) GetGlstring() *DiagnosticReportGlstring {
	if m != nil {
		return m.Glstring
	}
	return nil
}

func (m *Hlaresult) GetHaploid() []*DiagnosticReportHaploid {
	if m != nil {
		return m.Haploid
	}
	return nil
}

func (m *Hlaresult) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

// Clinically relevant time/time-period for report
type Hlaresult_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Hlaresult_Effective_DateTime
	//	*Hlaresult_Effective_Period
	Effective            isHlaresult_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Hlaresult_Effective) Reset()         { *m = Hlaresult_Effective{} }
func (m *Hlaresult_Effective) String() string { return proto.CompactTextString(m) }
func (*Hlaresult_Effective) ProtoMessage()    {}
func (*Hlaresult_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{15, 0}
}

func (m *Hlaresult_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hlaresult_Effective.Unmarshal(m, b)
}
func (m *Hlaresult_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hlaresult_Effective.Marshal(b, m, deterministic)
}
func (m *Hlaresult_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hlaresult_Effective.Merge(m, src)
}
func (m *Hlaresult_Effective) XXX_Size() int {
	return xxx_messageInfo_Hlaresult_Effective.Size(m)
}
func (m *Hlaresult_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Hlaresult_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Hlaresult_Effective proto.InternalMessageInfo

type isHlaresult_Effective_Effective interface {
	isHlaresult_Effective_Effective()
}

type Hlaresult_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Hlaresult_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Hlaresult_Effective_DateTime) isHlaresult_Effective_Effective() {}

func (*Hlaresult_Effective_Period) isHlaresult_Effective_Effective() {}

func (m *Hlaresult_Effective) GetEffective() isHlaresult_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Hlaresult_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Hlaresult_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Hlaresult_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Hlaresult_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Hlaresult_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Hlaresult_Effective_OneofMarshaler, _Hlaresult_Effective_OneofUnmarshaler, _Hlaresult_Effective_OneofSizer, []interface{}{
		(*Hlaresult_Effective_DateTime)(nil),
		(*Hlaresult_Effective_Period)(nil),
	}
}

func _Hlaresult_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Hlaresult_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Hlaresult_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Hlaresult_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Hlaresult_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Hlaresult_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Hlaresult_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Hlaresult_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Hlaresult_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Hlaresult_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Hlaresult_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Hlaresult_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Hlaresult_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Participants in producing the report
type Hlaresult_Performer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of performer
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Practitioner or Organization  participant
	Actor                *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Hlaresult_Performer) Reset()         { *m = Hlaresult_Performer{} }
func (m *Hlaresult_Performer) String() string { return proto.CompactTextString(m) }
func (*Hlaresult_Performer) ProtoMessage()    {}
func (*Hlaresult_Performer) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{15, 1}
}

func (m *Hlaresult_Performer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hlaresult_Performer.Unmarshal(m, b)
}
func (m *Hlaresult_Performer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hlaresult_Performer.Marshal(b, m, deterministic)
}
func (m *Hlaresult_Performer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hlaresult_Performer.Merge(m, src)
}
func (m *Hlaresult_Performer) XXX_Size() int {
	return xxx_messageInfo_Hlaresult_Performer.Size(m)
}
func (m *Hlaresult_Performer) XXX_DiscardUnknown() {
	xxx_messageInfo_Hlaresult_Performer.DiscardUnknown(m)
}

var xxx_messageInfo_Hlaresult_Performer proto.InternalMessageInfo

func (m *Hlaresult_Performer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Hlaresult_Performer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Hlaresult_Performer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Hlaresult_Performer) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Hlaresult_Performer) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

// Key images associated with this report
type Hlaresult_Image struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Comment about the image (e.g. explanation)
	Comment *String `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	// Reference to the image source
	Link                 *Reference `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Hlaresult_Image) Reset()         { *m = Hlaresult_Image{} }
func (m *Hlaresult_Image) String() string { return proto.CompactTextString(m) }
func (*Hlaresult_Image) ProtoMessage()    {}
func (*Hlaresult_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{15, 2}
}

func (m *Hlaresult_Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hlaresult_Image.Unmarshal(m, b)
}
func (m *Hlaresult_Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hlaresult_Image.Marshal(b, m, deterministic)
}
func (m *Hlaresult_Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hlaresult_Image.Merge(m, src)
}
func (m *Hlaresult_Image) XXX_Size() int {
	return xxx_messageInfo_Hlaresult_Image.Size(m)
}
func (m *Hlaresult_Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Hlaresult_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Hlaresult_Image proto.InternalMessageInfo

func (m *Hlaresult_Image) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Hlaresult_Image) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Hlaresult_Image) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Hlaresult_Image) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Hlaresult_Image) GetLink() *Reference {
	if m != nil {
		return m.Link
	}
	return nil
}

// Auto-generated from StructureDefinition for Example Lipid Profile.
// LDL Cholesterol Result.
// See http://hl7.org/fhir/StructureDefinition/ldlcholesterol
type Ldlcholesterol struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// LDL Cholesterol -measured or calculated per code
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference                `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Ldlcholesterol_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference          `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Ldlcholesterol_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// + | ++ | +++ | - | -- | ---
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                     `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       *Ldlcholesterol_ReferenceRange `protobuf:"bytes,27,opt,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Component            []*Ldlcholesterol_Component    `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Ldlcholesterol) Reset()         { *m = Ldlcholesterol{} }
func (m *Ldlcholesterol) String() string { return proto.CompactTextString(m) }
func (*Ldlcholesterol) ProtoMessage()    {}
func (*Ldlcholesterol) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{16}
}

func (m *Ldlcholesterol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ldlcholesterol.Unmarshal(m, b)
}
func (m *Ldlcholesterol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ldlcholesterol.Marshal(b, m, deterministic)
}
func (m *Ldlcholesterol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ldlcholesterol.Merge(m, src)
}
func (m *Ldlcholesterol) XXX_Size() int {
	return xxx_messageInfo_Ldlcholesterol.Size(m)
}
func (m *Ldlcholesterol) XXX_DiscardUnknown() {
	xxx_messageInfo_Ldlcholesterol.DiscardUnknown(m)
}

var xxx_messageInfo_Ldlcholesterol proto.InternalMessageInfo

func (m *Ldlcholesterol) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Ldlcholesterol) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Ldlcholesterol) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Ldlcholesterol) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Ldlcholesterol) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Ldlcholesterol) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Ldlcholesterol) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Ldlcholesterol) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Ldlcholesterol) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Ldlcholesterol) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Ldlcholesterol) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Ldlcholesterol) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Ldlcholesterol) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Ldlcholesterol) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Ldlcholesterol) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Ldlcholesterol) GetEffective() *Ldlcholesterol_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Ldlcholesterol) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Ldlcholesterol) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Ldlcholesterol) GetValue() *Ldlcholesterol_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Ldlcholesterol) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Ldlcholesterol) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Ldlcholesterol) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Ldlcholesterol) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Ldlcholesterol) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Ldlcholesterol) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Ldlcholesterol) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Ldlcholesterol) GetReferenceRange() *Ldlcholesterol_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Ldlcholesterol) GetComponent() []*Ldlcholesterol_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Clinically relevant time/time-period for observation
type Ldlcholesterol_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Ldlcholesterol_Effective_DateTime
	//	*Ldlcholesterol_Effective_Period
	Effective            isLdlcholesterol_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Ldlcholesterol_Effective) Reset()         { *m = Ldlcholesterol_Effective{} }
func (m *Ldlcholesterol_Effective) String() string { return proto.CompactTextString(m) }
func (*Ldlcholesterol_Effective) ProtoMessage()    {}
func (*Ldlcholesterol_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{16, 0}
}

func (m *Ldlcholesterol_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ldlcholesterol_Effective.Unmarshal(m, b)
}
func (m *Ldlcholesterol_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ldlcholesterol_Effective.Marshal(b, m, deterministic)
}
func (m *Ldlcholesterol_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ldlcholesterol_Effective.Merge(m, src)
}
func (m *Ldlcholesterol_Effective) XXX_Size() int {
	return xxx_messageInfo_Ldlcholesterol_Effective.Size(m)
}
func (m *Ldlcholesterol_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Ldlcholesterol_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Ldlcholesterol_Effective proto.InternalMessageInfo

type isLdlcholesterol_Effective_Effective interface {
	isLdlcholesterol_Effective_Effective()
}

type Ldlcholesterol_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Ldlcholesterol_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Ldlcholesterol_Effective_DateTime) isLdlcholesterol_Effective_Effective() {}

func (*Ldlcholesterol_Effective_Period) isLdlcholesterol_Effective_Effective() {}

func (m *Ldlcholesterol_Effective) GetEffective() isLdlcholesterol_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Ldlcholesterol_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Ldlcholesterol_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Ldlcholesterol_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Ldlcholesterol_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Ldlcholesterol_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Ldlcholesterol_Effective_OneofMarshaler, _Ldlcholesterol_Effective_OneofUnmarshaler, _Ldlcholesterol_Effective_OneofSizer, []interface{}{
		(*Ldlcholesterol_Effective_DateTime)(nil),
		(*Ldlcholesterol_Effective_Period)(nil),
	}
}

func _Ldlcholesterol_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Ldlcholesterol_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Ldlcholesterol_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Ldlcholesterol_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Ldlcholesterol_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Ldlcholesterol_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Ldlcholesterol_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Ldlcholesterol_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Ldlcholesterol_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Ldlcholesterol_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Ldlcholesterol_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Ldlcholesterol_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// LDL Cholesterol value
type Ldlcholesterol_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Ldlcholesterol_Value_Quantity
	Value                isLdlcholesterol_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Ldlcholesterol_Value) Reset()         { *m = Ldlcholesterol_Value{} }
func (m *Ldlcholesterol_Value) String() string { return proto.CompactTextString(m) }
func (*Ldlcholesterol_Value) ProtoMessage()    {}
func (*Ldlcholesterol_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{16, 1}
}

func (m *Ldlcholesterol_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ldlcholesterol_Value.Unmarshal(m, b)
}
func (m *Ldlcholesterol_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ldlcholesterol_Value.Marshal(b, m, deterministic)
}
func (m *Ldlcholesterol_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ldlcholesterol_Value.Merge(m, src)
}
func (m *Ldlcholesterol_Value) XXX_Size() int {
	return xxx_messageInfo_Ldlcholesterol_Value.Size(m)
}
func (m *Ldlcholesterol_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Ldlcholesterol_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Ldlcholesterol_Value proto.InternalMessageInfo

type isLdlcholesterol_Value_Value interface {
	isLdlcholesterol_Value_Value()
}

type Ldlcholesterol_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Ldlcholesterol_Value_Quantity) isLdlcholesterol_Value_Value() {}

func (m *Ldlcholesterol_Value) GetValue() isLdlcholesterol_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Ldlcholesterol_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Ldlcholesterol_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Ldlcholesterol_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Ldlcholesterol_Value_OneofMarshaler, _Ldlcholesterol_Value_OneofUnmarshaler, _Ldlcholesterol_Value_OneofSizer, []interface{}{
		(*Ldlcholesterol_Value_Quantity)(nil),
	}
}

func _Ldlcholesterol_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Ldlcholesterol_Value)
	// value
	switch x := m.Value.(type) {
	case *Ldlcholesterol_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Ldlcholesterol_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Ldlcholesterol_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Ldlcholesterol_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Ldlcholesterol_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Ldlcholesterol_Value)
	// value
	switch x := m.Value.(type) {
	case *Ldlcholesterol_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Ldlcholesterol_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A fixed quantity (no comparator)
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ldlcholesterol_ReferenceRange) Reset()         { *m = Ldlcholesterol_ReferenceRange{} }
func (m *Ldlcholesterol_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Ldlcholesterol_ReferenceRange) ProtoMessage()    {}
func (*Ldlcholesterol_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{16, 2}
}

func (m *Ldlcholesterol_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ldlcholesterol_ReferenceRange.Unmarshal(m, b)
}
func (m *Ldlcholesterol_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ldlcholesterol_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Ldlcholesterol_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ldlcholesterol_ReferenceRange.Merge(m, src)
}
func (m *Ldlcholesterol_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Ldlcholesterol_ReferenceRange.Size(m)
}
func (m *Ldlcholesterol_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Ldlcholesterol_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Ldlcholesterol_ReferenceRange proto.InternalMessageInfo

func (m *Ldlcholesterol_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Ldlcholesterol_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Ldlcholesterol_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Ldlcholesterol_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Ldlcholesterol_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Component results
type Ldlcholesterol_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept                `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Ldlcholesterol_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Ldlcholesterol_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Ldlcholesterol_Component) Reset()         { *m = Ldlcholesterol_Component{} }
func (m *Ldlcholesterol_Component) String() string { return proto.CompactTextString(m) }
func (*Ldlcholesterol_Component) ProtoMessage()    {}
func (*Ldlcholesterol_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{16, 3}
}

func (m *Ldlcholesterol_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ldlcholesterol_Component.Unmarshal(m, b)
}
func (m *Ldlcholesterol_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ldlcholesterol_Component.Marshal(b, m, deterministic)
}
func (m *Ldlcholesterol_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ldlcholesterol_Component.Merge(m, src)
}
func (m *Ldlcholesterol_Component) XXX_Size() int {
	return xxx_messageInfo_Ldlcholesterol_Component.Size(m)
}
func (m *Ldlcholesterol_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Ldlcholesterol_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Ldlcholesterol_Component proto.InternalMessageInfo

func (m *Ldlcholesterol_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Ldlcholesterol_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Ldlcholesterol_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Ldlcholesterol_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Ldlcholesterol_Component) GetValue() *Ldlcholesterol_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Ldlcholesterol_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Ldlcholesterol_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Ldlcholesterol_Component) GetReferenceRange() []*Ldlcholesterol_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Actual component result
type Ldlcholesterol_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Ldlcholesterol_Component_Value_Quantity
	//	*Ldlcholesterol_Component_Value_CodeableConcept
	//	*Ldlcholesterol_Component_Value_StringValue
	//	*Ldlcholesterol_Component_Value_Range
	//	*Ldlcholesterol_Component_Value_Ratio
	//	*Ldlcholesterol_Component_Value_SampledData
	//	*Ldlcholesterol_Component_Value_Attachment
	//	*Ldlcholesterol_Component_Value_Time
	//	*Ldlcholesterol_Component_Value_DateTime
	//	*Ldlcholesterol_Component_Value_Period
	Value                isLdlcholesterol_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *Ldlcholesterol_Component_Value) Reset()         { *m = Ldlcholesterol_Component_Value{} }
func (m *Ldlcholesterol_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Ldlcholesterol_Component_Value) ProtoMessage()    {}
func (*Ldlcholesterol_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{16, 3, 0}
}

func (m *Ldlcholesterol_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ldlcholesterol_Component_Value.Unmarshal(m, b)
}
func (m *Ldlcholesterol_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ldlcholesterol_Component_Value.Marshal(b, m, deterministic)
}
func (m *Ldlcholesterol_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ldlcholesterol_Component_Value.Merge(m, src)
}
func (m *Ldlcholesterol_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Ldlcholesterol_Component_Value.Size(m)
}
func (m *Ldlcholesterol_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Ldlcholesterol_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Ldlcholesterol_Component_Value proto.InternalMessageInfo

type isLdlcholesterol_Component_Value_Value interface {
	isLdlcholesterol_Component_Value_Value()
}

type Ldlcholesterol_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Ldlcholesterol_Component_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Ldlcholesterol_Component_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type Ldlcholesterol_Component_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type Ldlcholesterol_Component_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,5,opt,name=ratio,proto3,oneof"`
}

type Ldlcholesterol_Component_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,6,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Ldlcholesterol_Component_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,7,opt,name=attachment,proto3,oneof"`
}

type Ldlcholesterol_Component_Value_Time struct {
	Time *Time `protobuf:"bytes,8,opt,name=time,proto3,oneof"`
}

type Ldlcholesterol_Component_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,9,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Ldlcholesterol_Component_Value_Period struct {
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3,oneof"`
}

func (*Ldlcholesterol_Component_Value_Quantity) isLdlcholesterol_Component_Value_Value() {}

func (*Ldlcholesterol_Component_Value_CodeableConcept) isLdlcholesterol_Component_Value_Value() {}

func (*Ldlcholesterol_Component_Value_StringValue) isLdlcholesterol_Component_Value_Value() {}

func (*Ldlcholesterol_Component_Value_Range) isLdlcholesterol_Component_Value_Value() {}

func (*Ldlcholesterol_Component_Value_Ratio) isLdlcholesterol_Component_Value_Value() {}

func (*Ldlcholesterol_Component_Value_SampledData) isLdlcholesterol_Component_Value_Value() {}

func (*Ldlcholesterol_Component_Value_Attachment) isLdlcholesterol_Component_Value_Value() {}

func (*Ldlcholesterol_Component_Value_Time) isLdlcholesterol_Component_Value_Value() {}

func (*Ldlcholesterol_Component_Value_DateTime) isLdlcholesterol_Component_Value_Value() {}

func (*Ldlcholesterol_Component_Value_Period) isLdlcholesterol_Component_Value_Value() {}

func (m *Ldlcholesterol_Component_Value) GetValue() isLdlcholesterol_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Ldlcholesterol_Component_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Ldlcholesterol_Component_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Ldlcholesterol_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Ldlcholesterol_Component_Value_OneofMarshaler, _Ldlcholesterol_Component_Value_OneofUnmarshaler, _Ldlcholesterol_Component_Value_OneofSizer, []interface{}{
		(*Ldlcholesterol_Component_Value_Quantity)(nil),
		(*Ldlcholesterol_Component_Value_CodeableConcept)(nil),
		(*Ldlcholesterol_Component_Value_StringValue)(nil),
		(*Ldlcholesterol_Component_Value_Range)(nil),
		(*Ldlcholesterol_Component_Value_Ratio)(nil),
		(*Ldlcholesterol_Component_Value_SampledData)(nil),
		(*Ldlcholesterol_Component_Value_Attachment)(nil),
		(*Ldlcholesterol_Component_Value_Time)(nil),
		(*Ldlcholesterol_Component_Value_DateTime)(nil),
		(*Ldlcholesterol_Component_Value_Period)(nil),
	}
}

func _Ldlcholesterol_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Ldlcholesterol_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Ldlcholesterol_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Ldlcholesterol_Component_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Ldlcholesterol_Component_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Ldlcholesterol_Component_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Ldlcholesterol_Component_Value_Ratio:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Ldlcholesterol_Component_Value_SampledData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Ldlcholesterol_Component_Value_Attachment:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Ldlcholesterol_Component_Value_Time:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Ldlcholesterol_Component_Value_DateTime:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Ldlcholesterol_Component_Value_Period:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Ldlcholesterol_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Ldlcholesterol_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Ldlcholesterol_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_StringValue{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_Range{msg}
		return true, err
	case 5: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_Ratio{msg}
		return true, err
	case 6: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_SampledData{msg}
		return true, err
	case 7: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_Attachment{msg}
		return true, err
	case 8: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_Time{msg}
		return true, err
	case 9: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_DateTime{msg}
		return true, err
	case 10: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Ldlcholesterol_Component_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Ldlcholesterol_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Ldlcholesterol_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Ldlcholesterol_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Component_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Component_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Component_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Component_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Component_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Component_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Component_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Component_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Ldlcholesterol_Component_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Example Lipid Profile.
// Lipid Lab Report.
// See http://hl7.org/fhir/StructureDefinition/lipidprofile
type Lipidprofile struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier for report
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// What was requested
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | partial | preliminary | final +
	Status *DiagnosticReportStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Service category
	Category *CodeableConcept `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
	// LOINC Code for Lipid Panel with LDL
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// The subject of the report - usually, but not always, the patient
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Health care event when test ordered
	Context   *Reference              `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Lipidprofile_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// DateTime this version was released
	Issued    *Instant                  `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	Performer []*Lipidprofile_Performer `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	// Specimens this report is based on
	Specimen []*Reference `protobuf:"bytes,19,rep,name=specimen,proto3" json:"specimen,omitempty"`
	// Observations - simple, or complex nested groups
	Result *Reference `protobuf:"bytes,20,opt,name=result,proto3" json:"result,omitempty"`
	// Reference to full details of imaging associated with the diagnostic report
	ImagingStudy []*Reference          `protobuf:"bytes,21,rep,name=imaging_study,json=imagingStudy,proto3" json:"imaging_study,omitempty"`
	Image        []*Lipidprofile_Image `protobuf:"bytes,22,rep,name=image,proto3" json:"image,omitempty"`
	// Clinical Interpretation of Lipid Panel
	Conclusion *String `protobuf:"bytes,23,opt,name=conclusion,proto3" json:"conclusion,omitempty"`
	// Entire report as issued
	PresentedForm []*Attachment `protobuf:"bytes,25,rep,name=presented_form,json=presentedForm,proto3" json:"presented_form,omitempty"`
	// Cholesterol Result
	Cholesterol *Reference `protobuf:"bytes,26,opt,name=cholesterol,proto3" json:"cholesterol,omitempty"`
	// Triglyceride Result
	Triglyceride *Reference `protobuf:"bytes,27,opt,name=triglyceride,proto3" json:"triglyceride,omitempty"`
	// HDL Cholesterol Result
	HDLCholesterol *Reference `protobuf:"bytes,28,opt,name=h_d_l_cholesterol,json=hDLCholesterol,proto3" json:"h_d_l_cholesterol,omitempty"`
	// LDL Cholesterol result, if reported
	LDLCholesterol       *Reference `protobuf:"bytes,29,opt,name=l_d_l_cholesterol,json=lDLCholesterol,proto3" json:"l_d_l_cholesterol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Lipidprofile) Reset()         { *m = Lipidprofile{} }
func (m *Lipidprofile) String() string { return proto.CompactTextString(m) }
func (*Lipidprofile) ProtoMessage()    {}
func (*Lipidprofile) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{17}
}

func (m *Lipidprofile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lipidprofile.Unmarshal(m, b)
}
func (m *Lipidprofile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lipidprofile.Marshal(b, m, deterministic)
}
func (m *Lipidprofile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lipidprofile.Merge(m, src)
}
func (m *Lipidprofile) XXX_Size() int {
	return xxx_messageInfo_Lipidprofile.Size(m)
}
func (m *Lipidprofile) XXX_DiscardUnknown() {
	xxx_messageInfo_Lipidprofile.DiscardUnknown(m)
}

var xxx_messageInfo_Lipidprofile proto.InternalMessageInfo

func (m *Lipidprofile) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Lipidprofile) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Lipidprofile) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Lipidprofile) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Lipidprofile) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Lipidprofile) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Lipidprofile) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Lipidprofile) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Lipidprofile) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Lipidprofile) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Lipidprofile) GetStatus() *DiagnosticReportStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Lipidprofile) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Lipidprofile) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Lipidprofile) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Lipidprofile) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Lipidprofile) GetEffective() *Lipidprofile_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Lipidprofile) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Lipidprofile) GetPerformer() []*Lipidprofile_Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Lipidprofile) GetSpecimen() []*Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Lipidprofile) GetResult() *Reference {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Lipidprofile) GetImagingStudy() []*Reference {
	if m != nil {
		return m.ImagingStudy
	}
	return nil
}

func (m *Lipidprofile) GetImage() []*Lipidprofile_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Lipidprofile) GetConclusion() *String {
	if m != nil {
		return m.Conclusion
	}
	return nil
}

func (m *Lipidprofile) GetPresentedForm() []*Attachment {
	if m != nil {
		return m.PresentedForm
	}
	return nil
}

func (m *Lipidprofile) GetCholesterol() *Reference {
	if m != nil {
		return m.Cholesterol
	}
	return nil
}

func (m *Lipidprofile) GetTriglyceride() *Reference {
	if m != nil {
		return m.Triglyceride
	}
	return nil
}

func (m *Lipidprofile) GetHDLCholesterol() *Reference {
	if m != nil {
		return m.HDLCholesterol
	}
	return nil
}

func (m *Lipidprofile) GetLDLCholesterol() *Reference {
	if m != nil {
		return m.LDLCholesterol
	}
	return nil
}

// Clinically relevant time/time-period for report
type Lipidprofile_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Lipidprofile_Effective_DateTime
	//	*Lipidprofile_Effective_Period
	Effective            isLipidprofile_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Lipidprofile_Effective) Reset()         { *m = Lipidprofile_Effective{} }
func (m *Lipidprofile_Effective) String() string { return proto.CompactTextString(m) }
func (*Lipidprofile_Effective) ProtoMessage()    {}
func (*Lipidprofile_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{17, 0}
}

func (m *Lipidprofile_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lipidprofile_Effective.Unmarshal(m, b)
}
func (m *Lipidprofile_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lipidprofile_Effective.Marshal(b, m, deterministic)
}
func (m *Lipidprofile_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lipidprofile_Effective.Merge(m, src)
}
func (m *Lipidprofile_Effective) XXX_Size() int {
	return xxx_messageInfo_Lipidprofile_Effective.Size(m)
}
func (m *Lipidprofile_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Lipidprofile_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Lipidprofile_Effective proto.InternalMessageInfo

type isLipidprofile_Effective_Effective interface {
	isLipidprofile_Effective_Effective()
}

type Lipidprofile_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Lipidprofile_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Lipidprofile_Effective_DateTime) isLipidprofile_Effective_Effective() {}

func (*Lipidprofile_Effective_Period) isLipidprofile_Effective_Effective() {}

func (m *Lipidprofile_Effective) GetEffective() isLipidprofile_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Lipidprofile_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Lipidprofile_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Lipidprofile_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Lipidprofile_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Lipidprofile_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Lipidprofile_Effective_OneofMarshaler, _Lipidprofile_Effective_OneofUnmarshaler, _Lipidprofile_Effective_OneofSizer, []interface{}{
		(*Lipidprofile_Effective_DateTime)(nil),
		(*Lipidprofile_Effective_Period)(nil),
	}
}

func _Lipidprofile_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Lipidprofile_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Lipidprofile_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Lipidprofile_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Lipidprofile_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Lipidprofile_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Lipidprofile_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Lipidprofile_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Lipidprofile_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Lipidprofile_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Lipidprofile_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Lipidprofile_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Lipidprofile_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Participants in producing the report
type Lipidprofile_Performer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of performer
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Practitioner or Organization  participant
	Actor                *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Lipidprofile_Performer) Reset()         { *m = Lipidprofile_Performer{} }
func (m *Lipidprofile_Performer) String() string { return proto.CompactTextString(m) }
func (*Lipidprofile_Performer) ProtoMessage()    {}
func (*Lipidprofile_Performer) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{17, 1}
}

func (m *Lipidprofile_Performer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lipidprofile_Performer.Unmarshal(m, b)
}
func (m *Lipidprofile_Performer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lipidprofile_Performer.Marshal(b, m, deterministic)
}
func (m *Lipidprofile_Performer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lipidprofile_Performer.Merge(m, src)
}
func (m *Lipidprofile_Performer) XXX_Size() int {
	return xxx_messageInfo_Lipidprofile_Performer.Size(m)
}
func (m *Lipidprofile_Performer) XXX_DiscardUnknown() {
	xxx_messageInfo_Lipidprofile_Performer.DiscardUnknown(m)
}

var xxx_messageInfo_Lipidprofile_Performer proto.InternalMessageInfo

func (m *Lipidprofile_Performer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Lipidprofile_Performer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Lipidprofile_Performer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Lipidprofile_Performer) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Lipidprofile_Performer) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

// Key images associated with this report
type Lipidprofile_Image struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Comment about the image (e.g. explanation)
	Comment *String `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	// Reference to the image source
	Link                 *Reference `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Lipidprofile_Image) Reset()         { *m = Lipidprofile_Image{} }
func (m *Lipidprofile_Image) String() string { return proto.CompactTextString(m) }
func (*Lipidprofile_Image) ProtoMessage()    {}
func (*Lipidprofile_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{17, 2}
}

func (m *Lipidprofile_Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lipidprofile_Image.Unmarshal(m, b)
}
func (m *Lipidprofile_Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lipidprofile_Image.Marshal(b, m, deterministic)
}
func (m *Lipidprofile_Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lipidprofile_Image.Merge(m, src)
}
func (m *Lipidprofile_Image) XXX_Size() int {
	return xxx_messageInfo_Lipidprofile_Image.Size(m)
}
func (m *Lipidprofile_Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Lipidprofile_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Lipidprofile_Image proto.InternalMessageInfo

func (m *Lipidprofile_Image) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Lipidprofile_Image) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Lipidprofile_Image) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Lipidprofile_Image) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Lipidprofile_Image) GetLink() *Reference {
	if m != nil {
		return m.Link
	}
	return nil
}

// Auto-generated from StructureDefinition for MetadataResource.
// Common Ancestor declaration for definitional resources.
// See http://hl7.org/fhir/StructureDefinition/MetadataResource
type MetadataResource struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this metadata resource (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Business version of the metadata resource
	Version *String `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this metadata resource (computer friendly)
	Name *String `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this metadata resource (human friendly)
	Title *String `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,14,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,16,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,17,rep,name=contact,proto3" json:"contact,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,18,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for metadata resource (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,19,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Natural language description of the metadata resource
	Description          *Markdown `protobuf:"bytes,20,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MetadataResource) Reset()         { *m = MetadataResource{} }
func (m *MetadataResource) String() string { return proto.CompactTextString(m) }
func (*MetadataResource) ProtoMessage()    {}
func (*MetadataResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{18}
}

func (m *MetadataResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataResource.Unmarshal(m, b)
}
func (m *MetadataResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataResource.Marshal(b, m, deterministic)
}
func (m *MetadataResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataResource.Merge(m, src)
}
func (m *MetadataResource) XXX_Size() int {
	return xxx_messageInfo_MetadataResource.Size(m)
}
func (m *MetadataResource) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataResource.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataResource proto.InternalMessageInfo

func (m *MetadataResource) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MetadataResource) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MetadataResource) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *MetadataResource) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *MetadataResource) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MetadataResource) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *MetadataResource) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *MetadataResource) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *MetadataResource) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *MetadataResource) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *MetadataResource) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *MetadataResource) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *MetadataResource) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MetadataResource) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *MetadataResource) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *MetadataResource) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *MetadataResource) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *MetadataResource) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *MetadataResource) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *MetadataResource) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

// Auto-generated from StructureDefinition for Observation-genetics.
// Measurements and simple assertions.
// See http://hl7.org/fhir/StructureDefinition/observation-genetics
type ObservationGenetics struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Extension
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Type of observation (code / type)
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference                     `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *ObservationGenetics_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference               `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *ObservationGenetics_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device         *Reference                            `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange []*ObservationGenetics_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related        []*ObservationGenetics_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component      []*ObservationGenetics_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	// DNA sequence variant
	DNASequenceVariantName *CodeableConcept `protobuf:"bytes,30,opt,name=d_n_a_sequence_variant_name,json=dNASequenceVariantName,proto3" json:"d_n_a_sequence_variant_name,omitempty"`
	// DNA sequence variant ID
	DNAVariantId *CodeableConcept `protobuf:"bytes,31,opt,name=d_n_a_variant_id,json=dNAVariantId,proto3" json:"d_n_a_variant_id,omitempty"`
	// DNA sequence variant type
	DNASequenceVariantType *CodeableConcept `protobuf:"bytes,32,opt,name=d_n_a_sequence_variant_type,json=dNASequenceVariantType,proto3" json:"d_n_a_sequence_variant_type,omitempty"`
	// Amino acid change
	AminoAcidChangeName *CodeableConcept `protobuf:"bytes,33,opt,name=amino_acid_change_name,json=aminoAcidChangeName,proto3" json:"amino_acid_change_name,omitempty"`
	// Amino Acid Change Type
	AminoAcidChangeType *CodeableConcept `protobuf:"bytes,34,opt,name=amino_acid_change_type,json=aminoAcidChangeType,proto3" json:"amino_acid_change_type,omitempty"`
	// HGNC gene symbol
	GeneSymbol *CodeableConcept `protobuf:"bytes,35,opt,name=gene_symbol,json=geneSymbol,proto3" json:"gene_symbol,omitempty"`
	// DNA region name
	DNARegionName *String `protobuf:"bytes,36,opt,name=d_n_a_region_name,json=dNARegionName,proto3" json:"d_n_a_region_name,omitempty"`
	// Name of allele
	AlleleName *CodeableConcept `protobuf:"bytes,37,opt,name=allele_name,json=alleleName,proto3" json:"allele_name,omitempty"`
	// The level of occurrence of a single DNA sequence variant within a set of
	// chromosomes: Heteroplasmic / Homoplasmic / Homozygous / Heterozygous /
	// Hemizygous
	AllelicState *CodeableConcept `protobuf:"bytes,38,opt,name=allelic_state,json=allelicState,proto3" json:"allelic_state,omitempty"`
	// Allele frequency
	AllelicFrequency *Decimal `protobuf:"bytes,39,opt,name=allelic_frequency,json=allelicFrequency,proto3" json:"allelic_frequency,omitempty"`
	// Copy number variation
	CopyNumberEvent *CodeableConcept `protobuf:"bytes,40,opt,name=copy_number_event,json=copyNumberEvent,proto3" json:"copy_number_event,omitempty"`
	// Genomic source class
	GenomicSourceClass *CodeableConcept `protobuf:"bytes,41,opt,name=genomic_source_class,json=genomicSourceClass,proto3" json:"genomic_source_class,omitempty"`
	// Phase set identifier (UUID/OID)
	PhaseSet *Uri `protobuf:"bytes,42,opt,name=phase_set,json=phaseSet,proto3" json:"phase_set,omitempty"`
	// Sequence
	Sequence []*Reference `protobuf:"bytes,43,rep,name=sequence,proto3" json:"sequence,omitempty"`
	// Clinical interpretations for variant
	InterpretationSlice  *Reference `protobuf:"bytes,44,opt,name=interpretation_slice,json=interpretationSlice,proto3" json:"interpretation_slice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ObservationGenetics) Reset()         { *m = ObservationGenetics{} }
func (m *ObservationGenetics) String() string { return proto.CompactTextString(m) }
func (*ObservationGenetics) ProtoMessage()    {}
func (*ObservationGenetics) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{19}
}

func (m *ObservationGenetics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservationGenetics.Unmarshal(m, b)
}
func (m *ObservationGenetics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservationGenetics.Marshal(b, m, deterministic)
}
func (m *ObservationGenetics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservationGenetics.Merge(m, src)
}
func (m *ObservationGenetics) XXX_Size() int {
	return xxx_messageInfo_ObservationGenetics.Size(m)
}
func (m *ObservationGenetics) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservationGenetics.DiscardUnknown(m)
}

var xxx_messageInfo_ObservationGenetics proto.InternalMessageInfo

func (m *ObservationGenetics) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ObservationGenetics) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ObservationGenetics) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ObservationGenetics) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ObservationGenetics) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ObservationGenetics) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ObservationGenetics) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ObservationGenetics) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ObservationGenetics) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ObservationGenetics) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *ObservationGenetics) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ObservationGenetics) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ObservationGenetics) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ObservationGenetics) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *ObservationGenetics) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ObservationGenetics) GetEffective() *ObservationGenetics_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *ObservationGenetics) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *ObservationGenetics) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *ObservationGenetics) GetValue() *ObservationGenetics_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ObservationGenetics) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *ObservationGenetics) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *ObservationGenetics) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *ObservationGenetics) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *ObservationGenetics) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *ObservationGenetics) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *ObservationGenetics) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *ObservationGenetics) GetReferenceRange() []*ObservationGenetics_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *ObservationGenetics) GetRelated() []*ObservationGenetics_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *ObservationGenetics) GetComponent() []*ObservationGenetics_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *ObservationGenetics) GetDNASequenceVariantName() *CodeableConcept {
	if m != nil {
		return m.DNASequenceVariantName
	}
	return nil
}

func (m *ObservationGenetics) GetDNAVariantId() *CodeableConcept {
	if m != nil {
		return m.DNAVariantId
	}
	return nil
}

func (m *ObservationGenetics) GetDNASequenceVariantType() *CodeableConcept {
	if m != nil {
		return m.DNASequenceVariantType
	}
	return nil
}

func (m *ObservationGenetics) GetAminoAcidChangeName() *CodeableConcept {
	if m != nil {
		return m.AminoAcidChangeName
	}
	return nil
}

func (m *ObservationGenetics) GetAminoAcidChangeType() *CodeableConcept {
	if m != nil {
		return m.AminoAcidChangeType
	}
	return nil
}

func (m *ObservationGenetics) GetGeneSymbol() *CodeableConcept {
	if m != nil {
		return m.GeneSymbol
	}
	return nil
}

func (m *ObservationGenetics) GetDNARegionName() *String {
	if m != nil {
		return m.DNARegionName
	}
	return nil
}

func (m *ObservationGenetics) GetAlleleName() *CodeableConcept {
	if m != nil {
		return m.AlleleName
	}
	return nil
}

func (m *ObservationGenetics) GetAllelicState() *CodeableConcept {
	if m != nil {
		return m.AllelicState
	}
	return nil
}

func (m *ObservationGenetics) GetAllelicFrequency() *Decimal {
	if m != nil {
		return m.AllelicFrequency
	}
	return nil
}

func (m *ObservationGenetics) GetCopyNumberEvent() *CodeableConcept {
	if m != nil {
		return m.CopyNumberEvent
	}
	return nil
}

func (m *ObservationGenetics) GetGenomicSourceClass() *CodeableConcept {
	if m != nil {
		return m.GenomicSourceClass
	}
	return nil
}

func (m *ObservationGenetics) GetPhaseSet() *Uri {
	if m != nil {
		return m.PhaseSet
	}
	return nil
}

func (m *ObservationGenetics) GetSequence() []*Reference {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func (m *ObservationGenetics) GetInterpretationSlice() *Reference {
	if m != nil {
		return m.InterpretationSlice
	}
	return nil
}

// Clinically relevant time/time-period for observation
type ObservationGenetics_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*ObservationGenetics_Effective_DateTime
	//	*ObservationGenetics_Effective_Period
	Effective            isObservationGenetics_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ObservationGenetics_Effective) Reset()         { *m = ObservationGenetics_Effective{} }
func (m *ObservationGenetics_Effective) String() string { return proto.CompactTextString(m) }
func (*ObservationGenetics_Effective) ProtoMessage()    {}
func (*ObservationGenetics_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{19, 0}
}

func (m *ObservationGenetics_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservationGenetics_Effective.Unmarshal(m, b)
}
func (m *ObservationGenetics_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservationGenetics_Effective.Marshal(b, m, deterministic)
}
func (m *ObservationGenetics_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservationGenetics_Effective.Merge(m, src)
}
func (m *ObservationGenetics_Effective) XXX_Size() int {
	return xxx_messageInfo_ObservationGenetics_Effective.Size(m)
}
func (m *ObservationGenetics_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservationGenetics_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_ObservationGenetics_Effective proto.InternalMessageInfo

type isObservationGenetics_Effective_Effective interface {
	isObservationGenetics_Effective_Effective()
}

type ObservationGenetics_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ObservationGenetics_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*ObservationGenetics_Effective_DateTime) isObservationGenetics_Effective_Effective() {}

func (*ObservationGenetics_Effective_Period) isObservationGenetics_Effective_Effective() {}

func (m *ObservationGenetics_Effective) GetEffective() isObservationGenetics_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *ObservationGenetics_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*ObservationGenetics_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ObservationGenetics_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*ObservationGenetics_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ObservationGenetics_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ObservationGenetics_Effective_OneofMarshaler, _ObservationGenetics_Effective_OneofUnmarshaler, _ObservationGenetics_Effective_OneofSizer, []interface{}{
		(*ObservationGenetics_Effective_DateTime)(nil),
		(*ObservationGenetics_Effective_Period)(nil),
	}
}

func _ObservationGenetics_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ObservationGenetics_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *ObservationGenetics_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ObservationGenetics_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ObservationGenetics_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _ObservationGenetics_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ObservationGenetics_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &ObservationGenetics_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &ObservationGenetics_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ObservationGenetics_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ObservationGenetics_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *ObservationGenetics_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Actual result
type ObservationGenetics_Value struct {
	// Types that are valid to be assigned to Value:
	//	*ObservationGenetics_Value_Quantity
	//	*ObservationGenetics_Value_CodeableConcept
	//	*ObservationGenetics_Value_StringValue
	//	*ObservationGenetics_Value_Boolean
	//	*ObservationGenetics_Value_Range
	//	*ObservationGenetics_Value_Ratio
	//	*ObservationGenetics_Value_SampledData
	//	*ObservationGenetics_Value_Attachment
	//	*ObservationGenetics_Value_Time
	//	*ObservationGenetics_Value_DateTime
	//	*ObservationGenetics_Value_Period
	Value                isObservationGenetics_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ObservationGenetics_Value) Reset()         { *m = ObservationGenetics_Value{} }
func (m *ObservationGenetics_Value) String() string { return proto.CompactTextString(m) }
func (*ObservationGenetics_Value) ProtoMessage()    {}
func (*ObservationGenetics_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{19, 1}
}

func (m *ObservationGenetics_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservationGenetics_Value.Unmarshal(m, b)
}
func (m *ObservationGenetics_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservationGenetics_Value.Marshal(b, m, deterministic)
}
func (m *ObservationGenetics_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservationGenetics_Value.Merge(m, src)
}
func (m *ObservationGenetics_Value) XXX_Size() int {
	return xxx_messageInfo_ObservationGenetics_Value.Size(m)
}
func (m *ObservationGenetics_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservationGenetics_Value.DiscardUnknown(m)
}

var xxx_messageInfo_ObservationGenetics_Value proto.InternalMessageInfo

type isObservationGenetics_Value_Value interface {
	isObservationGenetics_Value_Value()
}

type ObservationGenetics_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type ObservationGenetics_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ObservationGenetics_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type ObservationGenetics_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,4,opt,name=boolean,proto3,oneof"`
}

type ObservationGenetics_Value_Range struct {
	Range *Range `protobuf:"bytes,5,opt,name=range,proto3,oneof"`
}

type ObservationGenetics_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,6,opt,name=ratio,proto3,oneof"`
}

type ObservationGenetics_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,7,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type ObservationGenetics_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,8,opt,name=attachment,proto3,oneof"`
}

type ObservationGenetics_Value_Time struct {
	Time *Time `protobuf:"bytes,9,opt,name=time,proto3,oneof"`
}

type ObservationGenetics_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,10,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ObservationGenetics_Value_Period struct {
	Period *Period `protobuf:"bytes,11,opt,name=period,proto3,oneof"`
}

func (*ObservationGenetics_Value_Quantity) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_CodeableConcept) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_StringValue) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_Boolean) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_Range) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_Ratio) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_SampledData) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_Attachment) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_Time) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_DateTime) isObservationGenetics_Value_Value() {}

func (*ObservationGenetics_Value_Period) isObservationGenetics_Value_Value() {}

func (m *ObservationGenetics_Value) GetValue() isObservationGenetics_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ObservationGenetics_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *ObservationGenetics_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *ObservationGenetics_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *ObservationGenetics_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *ObservationGenetics_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *ObservationGenetics_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *ObservationGenetics_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *ObservationGenetics_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *ObservationGenetics_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *ObservationGenetics_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ObservationGenetics_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*ObservationGenetics_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ObservationGenetics_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ObservationGenetics_Value_OneofMarshaler, _ObservationGenetics_Value_OneofUnmarshaler, _ObservationGenetics_Value_OneofSizer, []interface{}{
		(*ObservationGenetics_Value_Quantity)(nil),
		(*ObservationGenetics_Value_CodeableConcept)(nil),
		(*ObservationGenetics_Value_StringValue)(nil),
		(*ObservationGenetics_Value_Boolean)(nil),
		(*ObservationGenetics_Value_Range)(nil),
		(*ObservationGenetics_Value_Ratio)(nil),
		(*ObservationGenetics_Value_SampledData)(nil),
		(*ObservationGenetics_Value_Attachment)(nil),
		(*ObservationGenetics_Value_Time)(nil),
		(*ObservationGenetics_Value_DateTime)(nil),
		(*ObservationGenetics_Value_Period)(nil),
	}
}

func _ObservationGenetics_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ObservationGenetics_Value)
	// value
	switch x := m.Value.(type) {
	case *ObservationGenetics_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *ObservationGenetics_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *ObservationGenetics_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *ObservationGenetics_Value_Boolean:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *ObservationGenetics_Value_Range:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *ObservationGenetics_Value_Ratio:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *ObservationGenetics_Value_SampledData:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *ObservationGenetics_Value_Attachment:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *ObservationGenetics_Value_Time:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *ObservationGenetics_Value_DateTime:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ObservationGenetics_Value_Period:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ObservationGenetics_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _ObservationGenetics_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ObservationGenetics_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_StringValue{msg}
		return true, err
	case 4: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_Boolean{msg}
		return true, err
	case 5: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_Range{msg}
		return true, err
	case 6: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_Ratio{msg}
		return true, err
	case 7: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_SampledData{msg}
		return true, err
	case 8: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_Attachment{msg}
		return true, err
	case 9: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_Time{msg}
		return true, err
	case 10: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_DateTime{msg}
		return true, err
	case 11: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ObservationGenetics_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ObservationGenetics_Value)
	// value
	switch x := m.Value.(type) {
	case *ObservationGenetics_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type ObservationGenetics_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObservationGenetics_ReferenceRange) Reset()         { *m = ObservationGenetics_ReferenceRange{} }
func (m *ObservationGenetics_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*ObservationGenetics_ReferenceRange) ProtoMessage()    {}
func (*ObservationGenetics_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{19, 2}
}

func (m *ObservationGenetics_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservationGenetics_ReferenceRange.Unmarshal(m, b)
}
func (m *ObservationGenetics_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservationGenetics_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *ObservationGenetics_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservationGenetics_ReferenceRange.Merge(m, src)
}
func (m *ObservationGenetics_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_ObservationGenetics_ReferenceRange.Size(m)
}
func (m *ObservationGenetics_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservationGenetics_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_ObservationGenetics_ReferenceRange proto.InternalMessageInfo

func (m *ObservationGenetics_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ObservationGenetics_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ObservationGenetics_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ObservationGenetics_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *ObservationGenetics_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *ObservationGenetics_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ObservationGenetics_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *ObservationGenetics_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *ObservationGenetics_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Resource related to this observation
type ObservationGenetics_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ObservationGenetics_Related) Reset()         { *m = ObservationGenetics_Related{} }
func (m *ObservationGenetics_Related) String() string { return proto.CompactTextString(m) }
func (*ObservationGenetics_Related) ProtoMessage()    {}
func (*ObservationGenetics_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{19, 3}
}

func (m *ObservationGenetics_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservationGenetics_Related.Unmarshal(m, b)
}
func (m *ObservationGenetics_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservationGenetics_Related.Marshal(b, m, deterministic)
}
func (m *ObservationGenetics_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservationGenetics_Related.Merge(m, src)
}
func (m *ObservationGenetics_Related) XXX_Size() int {
	return xxx_messageInfo_ObservationGenetics_Related.Size(m)
}
func (m *ObservationGenetics_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservationGenetics_Related.DiscardUnknown(m)
}

var xxx_messageInfo_ObservationGenetics_Related proto.InternalMessageInfo

func (m *ObservationGenetics_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ObservationGenetics_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ObservationGenetics_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ObservationGenetics_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ObservationGenetics_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Component results
type ObservationGenetics_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept                     `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *ObservationGenetics_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*ObservationGenetics_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ObservationGenetics_Component) Reset()         { *m = ObservationGenetics_Component{} }
func (m *ObservationGenetics_Component) String() string { return proto.CompactTextString(m) }
func (*ObservationGenetics_Component) ProtoMessage()    {}
func (*ObservationGenetics_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{19, 4}
}

func (m *ObservationGenetics_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservationGenetics_Component.Unmarshal(m, b)
}
func (m *ObservationGenetics_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservationGenetics_Component.Marshal(b, m, deterministic)
}
func (m *ObservationGenetics_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservationGenetics_Component.Merge(m, src)
}
func (m *ObservationGenetics_Component) XXX_Size() int {
	return xxx_messageInfo_ObservationGenetics_Component.Size(m)
}
func (m *ObservationGenetics_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservationGenetics_Component.DiscardUnknown(m)
}

var xxx_messageInfo_ObservationGenetics_Component proto.InternalMessageInfo

func (m *ObservationGenetics_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ObservationGenetics_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ObservationGenetics_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ObservationGenetics_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ObservationGenetics_Component) GetValue() *ObservationGenetics_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ObservationGenetics_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *ObservationGenetics_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *ObservationGenetics_Component) GetReferenceRange() []*ObservationGenetics_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Actual component result
type ObservationGenetics_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*ObservationGenetics_Component_Value_Quantity
	//	*ObservationGenetics_Component_Value_CodeableConcept
	//	*ObservationGenetics_Component_Value_StringValue
	//	*ObservationGenetics_Component_Value_Range
	//	*ObservationGenetics_Component_Value_Ratio
	//	*ObservationGenetics_Component_Value_SampledData
	//	*ObservationGenetics_Component_Value_Attachment
	//	*ObservationGenetics_Component_Value_Time
	//	*ObservationGenetics_Component_Value_DateTime
	//	*ObservationGenetics_Component_Value_Period
	Value                isObservationGenetics_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *ObservationGenetics_Component_Value) Reset()         { *m = ObservationGenetics_Component_Value{} }
func (m *ObservationGenetics_Component_Value) String() string { return proto.CompactTextString(m) }
func (*ObservationGenetics_Component_Value) ProtoMessage()    {}
func (*ObservationGenetics_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{19, 4, 0}
}

func (m *ObservationGenetics_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservationGenetics_Component_Value.Unmarshal(m, b)
}
func (m *ObservationGenetics_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservationGenetics_Component_Value.Marshal(b, m, deterministic)
}
func (m *ObservationGenetics_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservationGenetics_Component_Value.Merge(m, src)
}
func (m *ObservationGenetics_Component_Value) XXX_Size() int {
	return xxx_messageInfo_ObservationGenetics_Component_Value.Size(m)
}
func (m *ObservationGenetics_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservationGenetics_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_ObservationGenetics_Component_Value proto.InternalMessageInfo

type isObservationGenetics_Component_Value_Value interface {
	isObservationGenetics_Component_Value_Value()
}

type ObservationGenetics_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type ObservationGenetics_Component_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ObservationGenetics_Component_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type ObservationGenetics_Component_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type ObservationGenetics_Component_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,5,opt,name=ratio,proto3,oneof"`
}

type ObservationGenetics_Component_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,6,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type ObservationGenetics_Component_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,7,opt,name=attachment,proto3,oneof"`
}

type ObservationGenetics_Component_Value_Time struct {
	Time *Time `protobuf:"bytes,8,opt,name=time,proto3,oneof"`
}

type ObservationGenetics_Component_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,9,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ObservationGenetics_Component_Value_Period struct {
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3,oneof"`
}

func (*ObservationGenetics_Component_Value_Quantity) isObservationGenetics_Component_Value_Value() {}

func (*ObservationGenetics_Component_Value_CodeableConcept) isObservationGenetics_Component_Value_Value() {
}

func (*ObservationGenetics_Component_Value_StringValue) isObservationGenetics_Component_Value_Value() {
}

func (*ObservationGenetics_Component_Value_Range) isObservationGenetics_Component_Value_Value() {}

func (*ObservationGenetics_Component_Value_Ratio) isObservationGenetics_Component_Value_Value() {}

func (*ObservationGenetics_Component_Value_SampledData) isObservationGenetics_Component_Value_Value() {
}

func (*ObservationGenetics_Component_Value_Attachment) isObservationGenetics_Component_Value_Value() {}

func (*ObservationGenetics_Component_Value_Time) isObservationGenetics_Component_Value_Value() {}

func (*ObservationGenetics_Component_Value_DateTime) isObservationGenetics_Component_Value_Value() {}

func (*ObservationGenetics_Component_Value_Period) isObservationGenetics_Component_Value_Value() {}

func (m *ObservationGenetics_Component_Value) GetValue() isObservationGenetics_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ObservationGenetics_Component_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*ObservationGenetics_Component_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ObservationGenetics_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ObservationGenetics_Component_Value_OneofMarshaler, _ObservationGenetics_Component_Value_OneofUnmarshaler, _ObservationGenetics_Component_Value_OneofSizer, []interface{}{
		(*ObservationGenetics_Component_Value_Quantity)(nil),
		(*ObservationGenetics_Component_Value_CodeableConcept)(nil),
		(*ObservationGenetics_Component_Value_StringValue)(nil),
		(*ObservationGenetics_Component_Value_Range)(nil),
		(*ObservationGenetics_Component_Value_Ratio)(nil),
		(*ObservationGenetics_Component_Value_SampledData)(nil),
		(*ObservationGenetics_Component_Value_Attachment)(nil),
		(*ObservationGenetics_Component_Value_Time)(nil),
		(*ObservationGenetics_Component_Value_DateTime)(nil),
		(*ObservationGenetics_Component_Value_Period)(nil),
	}
}

func _ObservationGenetics_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ObservationGenetics_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *ObservationGenetics_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *ObservationGenetics_Component_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *ObservationGenetics_Component_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *ObservationGenetics_Component_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *ObservationGenetics_Component_Value_Ratio:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *ObservationGenetics_Component_Value_SampledData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *ObservationGenetics_Component_Value_Attachment:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *ObservationGenetics_Component_Value_Time:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *ObservationGenetics_Component_Value_DateTime:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ObservationGenetics_Component_Value_Period:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ObservationGenetics_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _ObservationGenetics_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ObservationGenetics_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_StringValue{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_Range{msg}
		return true, err
	case 5: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_Ratio{msg}
		return true, err
	case 6: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_SampledData{msg}
		return true, err
	case 7: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_Attachment{msg}
		return true, err
	case 8: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_Time{msg}
		return true, err
	case 9: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_DateTime{msg}
		return true, err
	case 10: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &ObservationGenetics_Component_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ObservationGenetics_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ObservationGenetics_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *ObservationGenetics_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Component_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Component_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Component_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Component_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Component_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Component_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Component_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Component_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObservationGenetics_Component_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Oxygen Saturation Profile.
// See http://hl7.org/fhir/StructureDefinition/oxygensat
type Oxygensat struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept                `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Oxygensat_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference           `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Oxygensat_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference     `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Oxygensat_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                  `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Oxygensat_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Oxygensat_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Oxygensat_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Oxygensat) Reset()         { *m = Oxygensat{} }
func (m *Oxygensat) String() string { return proto.CompactTextString(m) }
func (*Oxygensat) ProtoMessage()    {}
func (*Oxygensat) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{20}
}

func (m *Oxygensat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oxygensat.Unmarshal(m, b)
}
func (m *Oxygensat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oxygensat.Marshal(b, m, deterministic)
}
func (m *Oxygensat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oxygensat.Merge(m, src)
}
func (m *Oxygensat) XXX_Size() int {
	return xxx_messageInfo_Oxygensat.Size(m)
}
func (m *Oxygensat) XXX_DiscardUnknown() {
	xxx_messageInfo_Oxygensat.DiscardUnknown(m)
}

var xxx_messageInfo_Oxygensat proto.InternalMessageInfo

func (m *Oxygensat) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Oxygensat) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Oxygensat) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Oxygensat) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Oxygensat) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Oxygensat) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Oxygensat) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Oxygensat) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Oxygensat) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Oxygensat) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Oxygensat) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Oxygensat) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Oxygensat) GetCode() *Oxygensat_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Oxygensat) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Oxygensat) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Oxygensat) GetEffective() *Oxygensat_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Oxygensat) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Oxygensat) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Oxygensat) GetValue() *Oxygensat_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Oxygensat) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Oxygensat) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Oxygensat) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Oxygensat) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Oxygensat) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Oxygensat) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Oxygensat) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Oxygensat) GetReferenceRange() []*Oxygensat_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Oxygensat) GetRelated() []*Oxygensat_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Oxygensat) GetComponent() []*Oxygensat_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Oxygen Saturation
type Oxygensat_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	OxygenSatCode        []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=oxygen_sat_code,json=oxygenSatCode,proto3" json:"oxygen_sat_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Oxygensat_CodeableConceptForCode) Reset()         { *m = Oxygensat_CodeableConceptForCode{} }
func (m *Oxygensat_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Oxygensat_CodeableConceptForCode) ProtoMessage()    {}
func (*Oxygensat_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{20, 0}
}

func (m *Oxygensat_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oxygensat_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Oxygensat_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oxygensat_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Oxygensat_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oxygensat_CodeableConceptForCode.Merge(m, src)
}
func (m *Oxygensat_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Oxygensat_CodeableConceptForCode.Size(m)
}
func (m *Oxygensat_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Oxygensat_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Oxygensat_CodeableConceptForCode proto.InternalMessageInfo

func (m *Oxygensat_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Oxygensat_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Oxygensat_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Oxygensat_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Oxygensat_CodeableConceptForCode) GetOxygenSatCode() []*CodingWithFixedCode {
	if m != nil {
		return m.OxygenSatCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Oxygensat_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Oxygensat_Effective_DateTime
	//	*Oxygensat_Effective_Period
	Effective            isOxygensat_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Oxygensat_Effective) Reset()         { *m = Oxygensat_Effective{} }
func (m *Oxygensat_Effective) String() string { return proto.CompactTextString(m) }
func (*Oxygensat_Effective) ProtoMessage()    {}
func (*Oxygensat_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{20, 1}
}

func (m *Oxygensat_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oxygensat_Effective.Unmarshal(m, b)
}
func (m *Oxygensat_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oxygensat_Effective.Marshal(b, m, deterministic)
}
func (m *Oxygensat_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oxygensat_Effective.Merge(m, src)
}
func (m *Oxygensat_Effective) XXX_Size() int {
	return xxx_messageInfo_Oxygensat_Effective.Size(m)
}
func (m *Oxygensat_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Oxygensat_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Oxygensat_Effective proto.InternalMessageInfo

type isOxygensat_Effective_Effective interface {
	isOxygensat_Effective_Effective()
}

type Oxygensat_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Oxygensat_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Oxygensat_Effective_DateTime) isOxygensat_Effective_Effective() {}

func (*Oxygensat_Effective_Period) isOxygensat_Effective_Effective() {}

func (m *Oxygensat_Effective) GetEffective() isOxygensat_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Oxygensat_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Oxygensat_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Oxygensat_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Oxygensat_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Oxygensat_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Oxygensat_Effective_OneofMarshaler, _Oxygensat_Effective_OneofUnmarshaler, _Oxygensat_Effective_OneofSizer, []interface{}{
		(*Oxygensat_Effective_DateTime)(nil),
		(*Oxygensat_Effective_Period)(nil),
	}
}

func _Oxygensat_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Oxygensat_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Oxygensat_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Oxygensat_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Oxygensat_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Oxygensat_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Oxygensat_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Oxygensat_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Oxygensat_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Oxygensat_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Oxygensat_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Oxygensat_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Oxygensat_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Oxygensat_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Oxygensat_Value_Quantity
	Value                isOxygensat_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Oxygensat_Value) Reset()         { *m = Oxygensat_Value{} }
func (m *Oxygensat_Value) String() string { return proto.CompactTextString(m) }
func (*Oxygensat_Value) ProtoMessage()    {}
func (*Oxygensat_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{20, 2}
}

func (m *Oxygensat_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oxygensat_Value.Unmarshal(m, b)
}
func (m *Oxygensat_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oxygensat_Value.Marshal(b, m, deterministic)
}
func (m *Oxygensat_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oxygensat_Value.Merge(m, src)
}
func (m *Oxygensat_Value) XXX_Size() int {
	return xxx_messageInfo_Oxygensat_Value.Size(m)
}
func (m *Oxygensat_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Oxygensat_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Oxygensat_Value proto.InternalMessageInfo

type isOxygensat_Value_Value interface {
	isOxygensat_Value_Value()
}

type Oxygensat_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Oxygensat_Value_Quantity) isOxygensat_Value_Value() {}

func (m *Oxygensat_Value) GetValue() isOxygensat_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Oxygensat_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Oxygensat_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Oxygensat_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Oxygensat_Value_OneofMarshaler, _Oxygensat_Value_OneofUnmarshaler, _Oxygensat_Value_OneofSizer, []interface{}{
		(*Oxygensat_Value_Quantity)(nil),
	}
}

func _Oxygensat_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Oxygensat_Value)
	// value
	switch x := m.Value.(type) {
	case *Oxygensat_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Oxygensat_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Oxygensat_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Oxygensat_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Oxygensat_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Oxygensat_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Oxygensat_Value)
	// value
	switch x := m.Value.(type) {
	case *Oxygensat_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Oxygensat_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Oxygensat_ReferenceRange) Reset()         { *m = Oxygensat_ReferenceRange{} }
func (m *Oxygensat_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Oxygensat_ReferenceRange) ProtoMessage()    {}
func (*Oxygensat_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{20, 3}
}

func (m *Oxygensat_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oxygensat_ReferenceRange.Unmarshal(m, b)
}
func (m *Oxygensat_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oxygensat_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Oxygensat_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oxygensat_ReferenceRange.Merge(m, src)
}
func (m *Oxygensat_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Oxygensat_ReferenceRange.Size(m)
}
func (m *Oxygensat_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Oxygensat_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Oxygensat_ReferenceRange proto.InternalMessageInfo

func (m *Oxygensat_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Oxygensat_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Oxygensat_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Oxygensat_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Oxygensat_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Oxygensat_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Oxygensat_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Oxygensat_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Oxygensat_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Oxygensat_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Oxygensat_Related) Reset()         { *m = Oxygensat_Related{} }
func (m *Oxygensat_Related) String() string { return proto.CompactTextString(m) }
func (*Oxygensat_Related) ProtoMessage()    {}
func (*Oxygensat_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{20, 4}
}

func (m *Oxygensat_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oxygensat_Related.Unmarshal(m, b)
}
func (m *Oxygensat_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oxygensat_Related.Marshal(b, m, deterministic)
}
func (m *Oxygensat_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oxygensat_Related.Merge(m, src)
}
func (m *Oxygensat_Related) XXX_Size() int {
	return xxx_messageInfo_Oxygensat_Related.Size(m)
}
func (m *Oxygensat_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Oxygensat_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Oxygensat_Related proto.InternalMessageInfo

func (m *Oxygensat_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Oxygensat_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Oxygensat_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Oxygensat_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Oxygensat_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Oxygensat_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept           `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Oxygensat_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Oxygensat_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Oxygensat_Component) Reset()         { *m = Oxygensat_Component{} }
func (m *Oxygensat_Component) String() string { return proto.CompactTextString(m) }
func (*Oxygensat_Component) ProtoMessage()    {}
func (*Oxygensat_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{20, 5}
}

func (m *Oxygensat_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oxygensat_Component.Unmarshal(m, b)
}
func (m *Oxygensat_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oxygensat_Component.Marshal(b, m, deterministic)
}
func (m *Oxygensat_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oxygensat_Component.Merge(m, src)
}
func (m *Oxygensat_Component) XXX_Size() int {
	return xxx_messageInfo_Oxygensat_Component.Size(m)
}
func (m *Oxygensat_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Oxygensat_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Oxygensat_Component proto.InternalMessageInfo

func (m *Oxygensat_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Oxygensat_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Oxygensat_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Oxygensat_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Oxygensat_Component) GetValue() *Oxygensat_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Oxygensat_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Oxygensat_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Oxygensat_Component) GetReferenceRange() []*Oxygensat_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Oxygensat_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Oxygensat_Component_Value_Quantity
	Value                isOxygensat_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Oxygensat_Component_Value) Reset()         { *m = Oxygensat_Component_Value{} }
func (m *Oxygensat_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Oxygensat_Component_Value) ProtoMessage()    {}
func (*Oxygensat_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{20, 5, 0}
}

func (m *Oxygensat_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oxygensat_Component_Value.Unmarshal(m, b)
}
func (m *Oxygensat_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oxygensat_Component_Value.Marshal(b, m, deterministic)
}
func (m *Oxygensat_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oxygensat_Component_Value.Merge(m, src)
}
func (m *Oxygensat_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Oxygensat_Component_Value.Size(m)
}
func (m *Oxygensat_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Oxygensat_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Oxygensat_Component_Value proto.InternalMessageInfo

type isOxygensat_Component_Value_Value interface {
	isOxygensat_Component_Value_Value()
}

type Oxygensat_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Oxygensat_Component_Value_Quantity) isOxygensat_Component_Value_Value() {}

func (m *Oxygensat_Component_Value) GetValue() isOxygensat_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Oxygensat_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Oxygensat_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Oxygensat_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Oxygensat_Component_Value_OneofMarshaler, _Oxygensat_Component_Value_OneofUnmarshaler, _Oxygensat_Component_Value_OneofSizer, []interface{}{
		(*Oxygensat_Component_Value_Quantity)(nil),
	}
}

func _Oxygensat_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Oxygensat_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Oxygensat_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Oxygensat_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Oxygensat_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Oxygensat_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Oxygensat_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Oxygensat_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Oxygensat_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Oxygensat_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for ProcedureRequest-Genetics.
// A request for a procedure or diagnostic to be performed.
// See http://hl7.org/fhir/StructureDefinition/procedurerequest-genetics
type ProcedurerequestGenetics struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Extension
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifiers assigned to this order
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// What request fulfills
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// What request replaces
	Replaces []*Reference `protobuf:"bytes,12,rep,name=replaces,proto3" json:"replaces,omitempty"`
	// Composite Request ID
	Requisition *Identifier `protobuf:"bytes,13,opt,name=requisition,proto3" json:"requisition,omitempty"`
	// draft | active | suspended | completed | entered-in-error | cancelled
	Status *RequestStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// proposal | plan | order +
	Intent *RequestIntentCode `protobuf:"bytes,15,opt,name=intent,proto3" json:"intent,omitempty"`
	// routine | urgent | asap | stat
	Priority *RequestPriorityCode `protobuf:"bytes,16,opt,name=priority,proto3" json:"priority,omitempty"`
	// True if procedure should not be performed
	DoNotPerform *Boolean `protobuf:"bytes,17,opt,name=do_not_perform,json=doNotPerform,proto3" json:"do_not_perform,omitempty"`
	// Classification of procedure
	Category []*CodeableConcept `protobuf:"bytes,18,rep,name=category,proto3" json:"category,omitempty"`
	// What is being requested/ordered
	Code *CodeableConcept `protobuf:"bytes,19,opt,name=code,proto3" json:"code,omitempty"`
	// Individual the service is ordered for
	Subject *Reference `protobuf:"bytes,20,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or Episode during which request was created
	Context    *Reference                           `protobuf:"bytes,21,opt,name=context,proto3" json:"context,omitempty"`
	Occurrence *ProcedurerequestGenetics_Occurrence `protobuf:"bytes,22,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	AsNeeded   *ProcedurerequestGenetics_AsNeeded   `protobuf:"bytes,23,opt,name=as_needed,json=asNeeded,proto3" json:"as_needed,omitempty"`
	// Date request signed
	AuthoredOn *DateTime                           `protobuf:"bytes,24,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	Requester  *ProcedurerequestGenetics_Requester `protobuf:"bytes,25,opt,name=requester,proto3" json:"requester,omitempty"`
	// Performer role
	PerformerType *CodeableConcept `protobuf:"bytes,26,opt,name=performer_type,json=performerType,proto3" json:"performer_type,omitempty"`
	// Requested perfomer
	Performer *Reference `protobuf:"bytes,27,opt,name=performer,proto3" json:"performer,omitempty"`
	// Explanation/Justification for test
	ReasonCode []*CodeableConcept `protobuf:"bytes,28,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Explanation/Justification for test
	ReasonReference []*Reference `protobuf:"bytes,29,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Additional clinical information
	SupportingInfo []*Reference `protobuf:"bytes,30,rep,name=supporting_info,json=supportingInfo,proto3" json:"supporting_info,omitempty"`
	// Procedure Samples
	Specimen []*Reference `protobuf:"bytes,31,rep,name=specimen,proto3" json:"specimen,omitempty"`
	// Location on Body
	BodySite []*CodeableConcept `protobuf:"bytes,32,rep,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Comments
	Note []*Annotation `protobuf:"bytes,33,rep,name=note,proto3" json:"note,omitempty"`
	// Request provenance
	RelevantHistory []*Reference `protobuf:"bytes,34,rep,name=relevant_history,json=relevantHistory,proto3" json:"relevant_history,omitempty"`
	// The items the orderer requested
	Item                 []*DiagnosticReportItem `protobuf:"bytes,35,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ProcedurerequestGenetics) Reset()         { *m = ProcedurerequestGenetics{} }
func (m *ProcedurerequestGenetics) String() string { return proto.CompactTextString(m) }
func (*ProcedurerequestGenetics) ProtoMessage()    {}
func (*ProcedurerequestGenetics) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{21}
}

func (m *ProcedurerequestGenetics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcedurerequestGenetics.Unmarshal(m, b)
}
func (m *ProcedurerequestGenetics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcedurerequestGenetics.Marshal(b, m, deterministic)
}
func (m *ProcedurerequestGenetics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcedurerequestGenetics.Merge(m, src)
}
func (m *ProcedurerequestGenetics) XXX_Size() int {
	return xxx_messageInfo_ProcedurerequestGenetics.Size(m)
}
func (m *ProcedurerequestGenetics) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcedurerequestGenetics.DiscardUnknown(m)
}

var xxx_messageInfo_ProcedurerequestGenetics proto.InternalMessageInfo

func (m *ProcedurerequestGenetics) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetReplaces() []*Reference {
	if m != nil {
		return m.Replaces
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetRequisition() *Identifier {
	if m != nil {
		return m.Requisition
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetStatus() *RequestStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetIntent() *RequestIntentCode {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetPriority() *RequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetDoNotPerform() *Boolean {
	if m != nil {
		return m.DoNotPerform
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetOccurrence() *ProcedurerequestGenetics_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetAsNeeded() *ProcedurerequestGenetics_AsNeeded {
	if m != nil {
		return m.AsNeeded
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetRequester() *ProcedurerequestGenetics_Requester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetPerformerType() *CodeableConcept {
	if m != nil {
		return m.PerformerType
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetPerformer() *Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetSupportingInfo() []*Reference {
	if m != nil {
		return m.SupportingInfo
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetSpecimen() []*Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetBodySite() []*CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetRelevantHistory() []*Reference {
	if m != nil {
		return m.RelevantHistory
	}
	return nil
}

func (m *ProcedurerequestGenetics) GetItem() []*DiagnosticReportItem {
	if m != nil {
		return m.Item
	}
	return nil
}

// When procedure should occur
type ProcedurerequestGenetics_Occurrence struct {
	// Types that are valid to be assigned to Occurrence:
	//	*ProcedurerequestGenetics_Occurrence_DateTime
	//	*ProcedurerequestGenetics_Occurrence_Period
	//	*ProcedurerequestGenetics_Occurrence_Timing
	Occurrence           isProcedurerequestGenetics_Occurrence_Occurrence `protobuf_oneof:"occurrence"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *ProcedurerequestGenetics_Occurrence) Reset()         { *m = ProcedurerequestGenetics_Occurrence{} }
func (m *ProcedurerequestGenetics_Occurrence) String() string { return proto.CompactTextString(m) }
func (*ProcedurerequestGenetics_Occurrence) ProtoMessage()    {}
func (*ProcedurerequestGenetics_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{21, 0}
}

func (m *ProcedurerequestGenetics_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcedurerequestGenetics_Occurrence.Unmarshal(m, b)
}
func (m *ProcedurerequestGenetics_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcedurerequestGenetics_Occurrence.Marshal(b, m, deterministic)
}
func (m *ProcedurerequestGenetics_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcedurerequestGenetics_Occurrence.Merge(m, src)
}
func (m *ProcedurerequestGenetics_Occurrence) XXX_Size() int {
	return xxx_messageInfo_ProcedurerequestGenetics_Occurrence.Size(m)
}
func (m *ProcedurerequestGenetics_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcedurerequestGenetics_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_ProcedurerequestGenetics_Occurrence proto.InternalMessageInfo

type isProcedurerequestGenetics_Occurrence_Occurrence interface {
	isProcedurerequestGenetics_Occurrence_Occurrence()
}

type ProcedurerequestGenetics_Occurrence_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ProcedurerequestGenetics_Occurrence_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type ProcedurerequestGenetics_Occurrence_Timing struct {
	Timing *Timing `protobuf:"bytes,3,opt,name=timing,proto3,oneof"`
}

func (*ProcedurerequestGenetics_Occurrence_DateTime) isProcedurerequestGenetics_Occurrence_Occurrence() {
}

func (*ProcedurerequestGenetics_Occurrence_Period) isProcedurerequestGenetics_Occurrence_Occurrence() {
}

func (*ProcedurerequestGenetics_Occurrence_Timing) isProcedurerequestGenetics_Occurrence_Occurrence() {
}

func (m *ProcedurerequestGenetics_Occurrence) GetOccurrence() isProcedurerequestGenetics_Occurrence_Occurrence {
	if m != nil {
		return m.Occurrence
	}
	return nil
}

func (m *ProcedurerequestGenetics_Occurrence) GetDateTime() *DateTime {
	if x, ok := m.GetOccurrence().(*ProcedurerequestGenetics_Occurrence_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *ProcedurerequestGenetics_Occurrence) GetPeriod() *Period {
	if x, ok := m.GetOccurrence().(*ProcedurerequestGenetics_Occurrence_Period); ok {
		return x.Period
	}
	return nil
}

func (m *ProcedurerequestGenetics_Occurrence) GetTiming() *Timing {
	if x, ok := m.GetOccurrence().(*ProcedurerequestGenetics_Occurrence_Timing); ok {
		return x.Timing
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProcedurerequestGenetics_Occurrence) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProcedurerequestGenetics_Occurrence_OneofMarshaler, _ProcedurerequestGenetics_Occurrence_OneofUnmarshaler, _ProcedurerequestGenetics_Occurrence_OneofSizer, []interface{}{
		(*ProcedurerequestGenetics_Occurrence_DateTime)(nil),
		(*ProcedurerequestGenetics_Occurrence_Period)(nil),
		(*ProcedurerequestGenetics_Occurrence_Timing)(nil),
	}
}

func _ProcedurerequestGenetics_Occurrence_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProcedurerequestGenetics_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *ProcedurerequestGenetics_Occurrence_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *ProcedurerequestGenetics_Occurrence_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *ProcedurerequestGenetics_Occurrence_Timing:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProcedurerequestGenetics_Occurrence.Occurrence has unexpected type %T", x)
	}
	return nil
}

func _ProcedurerequestGenetics_Occurrence_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProcedurerequestGenetics_Occurrence)
	switch tag {
	case 1: // occurrence.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ProcedurerequestGenetics_Occurrence_DateTime{msg}
		return true, err
	case 2: // occurrence.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ProcedurerequestGenetics_Occurrence_Period{msg}
		return true, err
	case 3: // occurrence.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Occurrence = &ProcedurerequestGenetics_Occurrence_Timing{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProcedurerequestGenetics_Occurrence_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProcedurerequestGenetics_Occurrence)
	// occurrence
	switch x := m.Occurrence.(type) {
	case *ProcedurerequestGenetics_Occurrence_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ProcedurerequestGenetics_Occurrence_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ProcedurerequestGenetics_Occurrence_Timing:
		s := proto.Size(x.Timing)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Preconditions for procedure or diagnostic
type ProcedurerequestGenetics_AsNeeded struct {
	// Types that are valid to be assigned to AsNeeded:
	//	*ProcedurerequestGenetics_AsNeeded_Boolean
	//	*ProcedurerequestGenetics_AsNeeded_CodeableConcept
	AsNeeded             isProcedurerequestGenetics_AsNeeded_AsNeeded `protobuf_oneof:"as_needed"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *ProcedurerequestGenetics_AsNeeded) Reset()         { *m = ProcedurerequestGenetics_AsNeeded{} }
func (m *ProcedurerequestGenetics_AsNeeded) String() string { return proto.CompactTextString(m) }
func (*ProcedurerequestGenetics_AsNeeded) ProtoMessage()    {}
func (*ProcedurerequestGenetics_AsNeeded) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{21, 1}
}

func (m *ProcedurerequestGenetics_AsNeeded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcedurerequestGenetics_AsNeeded.Unmarshal(m, b)
}
func (m *ProcedurerequestGenetics_AsNeeded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcedurerequestGenetics_AsNeeded.Marshal(b, m, deterministic)
}
func (m *ProcedurerequestGenetics_AsNeeded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcedurerequestGenetics_AsNeeded.Merge(m, src)
}
func (m *ProcedurerequestGenetics_AsNeeded) XXX_Size() int {
	return xxx_messageInfo_ProcedurerequestGenetics_AsNeeded.Size(m)
}
func (m *ProcedurerequestGenetics_AsNeeded) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcedurerequestGenetics_AsNeeded.DiscardUnknown(m)
}

var xxx_messageInfo_ProcedurerequestGenetics_AsNeeded proto.InternalMessageInfo

type isProcedurerequestGenetics_AsNeeded_AsNeeded interface {
	isProcedurerequestGenetics_AsNeeded_AsNeeded()
}

type ProcedurerequestGenetics_AsNeeded_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type ProcedurerequestGenetics_AsNeeded_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*ProcedurerequestGenetics_AsNeeded_Boolean) isProcedurerequestGenetics_AsNeeded_AsNeeded() {}

func (*ProcedurerequestGenetics_AsNeeded_CodeableConcept) isProcedurerequestGenetics_AsNeeded_AsNeeded() {
}

func (m *ProcedurerequestGenetics_AsNeeded) GetAsNeeded() isProcedurerequestGenetics_AsNeeded_AsNeeded {
	if m != nil {
		return m.AsNeeded
	}
	return nil
}

func (m *ProcedurerequestGenetics_AsNeeded) GetBoolean() *Boolean {
	if x, ok := m.GetAsNeeded().(*ProcedurerequestGenetics_AsNeeded_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *ProcedurerequestGenetics_AsNeeded) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetAsNeeded().(*ProcedurerequestGenetics_AsNeeded_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProcedurerequestGenetics_AsNeeded) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProcedurerequestGenetics_AsNeeded_OneofMarshaler, _ProcedurerequestGenetics_AsNeeded_OneofUnmarshaler, _ProcedurerequestGenetics_AsNeeded_OneofSizer, []interface{}{
		(*ProcedurerequestGenetics_AsNeeded_Boolean)(nil),
		(*ProcedurerequestGenetics_AsNeeded_CodeableConcept)(nil),
	}
}

func _ProcedurerequestGenetics_AsNeeded_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProcedurerequestGenetics_AsNeeded)
	// as_needed
	switch x := m.AsNeeded.(type) {
	case *ProcedurerequestGenetics_AsNeeded_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *ProcedurerequestGenetics_AsNeeded_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProcedurerequestGenetics_AsNeeded.AsNeeded has unexpected type %T", x)
	}
	return nil
}

func _ProcedurerequestGenetics_AsNeeded_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProcedurerequestGenetics_AsNeeded)
	switch tag {
	case 1: // as_needed.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.AsNeeded = &ProcedurerequestGenetics_AsNeeded_Boolean{msg}
		return true, err
	case 2: // as_needed.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.AsNeeded = &ProcedurerequestGenetics_AsNeeded_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProcedurerequestGenetics_AsNeeded_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProcedurerequestGenetics_AsNeeded)
	// as_needed
	switch x := m.AsNeeded.(type) {
	case *ProcedurerequestGenetics_AsNeeded_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ProcedurerequestGenetics_AsNeeded_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who/what is requesting procedure or diagnostic
type ProcedurerequestGenetics_Requester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual making the request
	Agent *Reference `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// Organization agent is acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProcedurerequestGenetics_Requester) Reset()         { *m = ProcedurerequestGenetics_Requester{} }
func (m *ProcedurerequestGenetics_Requester) String() string { return proto.CompactTextString(m) }
func (*ProcedurerequestGenetics_Requester) ProtoMessage()    {}
func (*ProcedurerequestGenetics_Requester) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{21, 2}
}

func (m *ProcedurerequestGenetics_Requester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcedurerequestGenetics_Requester.Unmarshal(m, b)
}
func (m *ProcedurerequestGenetics_Requester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcedurerequestGenetics_Requester.Marshal(b, m, deterministic)
}
func (m *ProcedurerequestGenetics_Requester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcedurerequestGenetics_Requester.Merge(m, src)
}
func (m *ProcedurerequestGenetics_Requester) XXX_Size() int {
	return xxx_messageInfo_ProcedurerequestGenetics_Requester.Size(m)
}
func (m *ProcedurerequestGenetics_Requester) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcedurerequestGenetics_Requester.DiscardUnknown(m)
}

var xxx_messageInfo_ProcedurerequestGenetics_Requester proto.InternalMessageInfo

func (m *ProcedurerequestGenetics_Requester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProcedurerequestGenetics_Requester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ProcedurerequestGenetics_Requester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *ProcedurerequestGenetics_Requester) GetAgent() *Reference {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *ProcedurerequestGenetics_Requester) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Respiratory Rate Profile.
// See http://hl7.org/fhir/StructureDefinition/resprate
type Resprate struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept               `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Resprate_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference          `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Resprate_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference    `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Resprate_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                 `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Resprate_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Resprate_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Resprate_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Resprate) Reset()         { *m = Resprate{} }
func (m *Resprate) String() string { return proto.CompactTextString(m) }
func (*Resprate) ProtoMessage()    {}
func (*Resprate) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{22}
}

func (m *Resprate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resprate.Unmarshal(m, b)
}
func (m *Resprate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resprate.Marshal(b, m, deterministic)
}
func (m *Resprate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resprate.Merge(m, src)
}
func (m *Resprate) XXX_Size() int {
	return xxx_messageInfo_Resprate.Size(m)
}
func (m *Resprate) XXX_DiscardUnknown() {
	xxx_messageInfo_Resprate.DiscardUnknown(m)
}

var xxx_messageInfo_Resprate proto.InternalMessageInfo

func (m *Resprate) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Resprate) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Resprate) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Resprate) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Resprate) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Resprate) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Resprate) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Resprate) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Resprate) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Resprate) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Resprate) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Resprate) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Resprate) GetCode() *Resprate_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Resprate) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Resprate) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Resprate) GetEffective() *Resprate_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Resprate) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Resprate) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Resprate) GetValue() *Resprate_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Resprate) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Resprate) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Resprate) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Resprate) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Resprate) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Resprate) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Resprate) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Resprate) GetReferenceRange() []*Resprate_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Resprate) GetRelated() []*Resprate_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Resprate) GetComponent() []*Resprate_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Respiratory Rate
type Resprate_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	RespRateCode         []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=resp_rate_code,json=respRateCode,proto3" json:"resp_rate_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Resprate_CodeableConceptForCode) Reset()         { *m = Resprate_CodeableConceptForCode{} }
func (m *Resprate_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Resprate_CodeableConceptForCode) ProtoMessage()    {}
func (*Resprate_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{22, 0}
}

func (m *Resprate_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resprate_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Resprate_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resprate_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Resprate_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resprate_CodeableConceptForCode.Merge(m, src)
}
func (m *Resprate_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Resprate_CodeableConceptForCode.Size(m)
}
func (m *Resprate_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Resprate_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Resprate_CodeableConceptForCode proto.InternalMessageInfo

func (m *Resprate_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Resprate_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Resprate_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Resprate_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Resprate_CodeableConceptForCode) GetRespRateCode() []*CodingWithFixedCode {
	if m != nil {
		return m.RespRateCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Resprate_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Resprate_Effective_DateTime
	//	*Resprate_Effective_Period
	Effective            isResprate_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Resprate_Effective) Reset()         { *m = Resprate_Effective{} }
func (m *Resprate_Effective) String() string { return proto.CompactTextString(m) }
func (*Resprate_Effective) ProtoMessage()    {}
func (*Resprate_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{22, 1}
}

func (m *Resprate_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resprate_Effective.Unmarshal(m, b)
}
func (m *Resprate_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resprate_Effective.Marshal(b, m, deterministic)
}
func (m *Resprate_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resprate_Effective.Merge(m, src)
}
func (m *Resprate_Effective) XXX_Size() int {
	return xxx_messageInfo_Resprate_Effective.Size(m)
}
func (m *Resprate_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Resprate_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Resprate_Effective proto.InternalMessageInfo

type isResprate_Effective_Effective interface {
	isResprate_Effective_Effective()
}

type Resprate_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Resprate_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Resprate_Effective_DateTime) isResprate_Effective_Effective() {}

func (*Resprate_Effective_Period) isResprate_Effective_Effective() {}

func (m *Resprate_Effective) GetEffective() isResprate_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Resprate_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Resprate_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Resprate_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Resprate_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Resprate_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Resprate_Effective_OneofMarshaler, _Resprate_Effective_OneofUnmarshaler, _Resprate_Effective_OneofSizer, []interface{}{
		(*Resprate_Effective_DateTime)(nil),
		(*Resprate_Effective_Period)(nil),
	}
}

func _Resprate_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Resprate_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Resprate_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Resprate_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Resprate_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Resprate_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Resprate_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Resprate_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Resprate_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Resprate_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Resprate_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Resprate_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Resprate_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Resprate_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Resprate_Value_Quantity
	Value                isResprate_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Resprate_Value) Reset()         { *m = Resprate_Value{} }
func (m *Resprate_Value) String() string { return proto.CompactTextString(m) }
func (*Resprate_Value) ProtoMessage()    {}
func (*Resprate_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{22, 2}
}

func (m *Resprate_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resprate_Value.Unmarshal(m, b)
}
func (m *Resprate_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resprate_Value.Marshal(b, m, deterministic)
}
func (m *Resprate_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resprate_Value.Merge(m, src)
}
func (m *Resprate_Value) XXX_Size() int {
	return xxx_messageInfo_Resprate_Value.Size(m)
}
func (m *Resprate_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Resprate_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Resprate_Value proto.InternalMessageInfo

type isResprate_Value_Value interface {
	isResprate_Value_Value()
}

type Resprate_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Resprate_Value_Quantity) isResprate_Value_Value() {}

func (m *Resprate_Value) GetValue() isResprate_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Resprate_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Resprate_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Resprate_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Resprate_Value_OneofMarshaler, _Resprate_Value_OneofUnmarshaler, _Resprate_Value_OneofSizer, []interface{}{
		(*Resprate_Value_Quantity)(nil),
	}
}

func _Resprate_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Resprate_Value)
	// value
	switch x := m.Value.(type) {
	case *Resprate_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Resprate_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Resprate_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Resprate_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Resprate_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Resprate_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Resprate_Value)
	// value
	switch x := m.Value.(type) {
	case *Resprate_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Resprate_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resprate_ReferenceRange) Reset()         { *m = Resprate_ReferenceRange{} }
func (m *Resprate_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Resprate_ReferenceRange) ProtoMessage()    {}
func (*Resprate_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{22, 3}
}

func (m *Resprate_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resprate_ReferenceRange.Unmarshal(m, b)
}
func (m *Resprate_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resprate_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Resprate_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resprate_ReferenceRange.Merge(m, src)
}
func (m *Resprate_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Resprate_ReferenceRange.Size(m)
}
func (m *Resprate_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Resprate_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Resprate_ReferenceRange proto.InternalMessageInfo

func (m *Resprate_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Resprate_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Resprate_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Resprate_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Resprate_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Resprate_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Resprate_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Resprate_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Resprate_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Resprate_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Resprate_Related) Reset()         { *m = Resprate_Related{} }
func (m *Resprate_Related) String() string { return proto.CompactTextString(m) }
func (*Resprate_Related) ProtoMessage()    {}
func (*Resprate_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{22, 4}
}

func (m *Resprate_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resprate_Related.Unmarshal(m, b)
}
func (m *Resprate_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resprate_Related.Marshal(b, m, deterministic)
}
func (m *Resprate_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resprate_Related.Merge(m, src)
}
func (m *Resprate_Related) XXX_Size() int {
	return xxx_messageInfo_Resprate_Related.Size(m)
}
func (m *Resprate_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Resprate_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Resprate_Related proto.InternalMessageInfo

func (m *Resprate_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Resprate_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Resprate_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Resprate_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Resprate_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Resprate_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept          `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Resprate_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Resprate_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Resprate_Component) Reset()         { *m = Resprate_Component{} }
func (m *Resprate_Component) String() string { return proto.CompactTextString(m) }
func (*Resprate_Component) ProtoMessage()    {}
func (*Resprate_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{22, 5}
}

func (m *Resprate_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resprate_Component.Unmarshal(m, b)
}
func (m *Resprate_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resprate_Component.Marshal(b, m, deterministic)
}
func (m *Resprate_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resprate_Component.Merge(m, src)
}
func (m *Resprate_Component) XXX_Size() int {
	return xxx_messageInfo_Resprate_Component.Size(m)
}
func (m *Resprate_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Resprate_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Resprate_Component proto.InternalMessageInfo

func (m *Resprate_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Resprate_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Resprate_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Resprate_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Resprate_Component) GetValue() *Resprate_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Resprate_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Resprate_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Resprate_Component) GetReferenceRange() []*Resprate_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Resprate_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Resprate_Component_Value_Quantity
	Value                isResprate_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Resprate_Component_Value) Reset()         { *m = Resprate_Component_Value{} }
func (m *Resprate_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Resprate_Component_Value) ProtoMessage()    {}
func (*Resprate_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{22, 5, 0}
}

func (m *Resprate_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resprate_Component_Value.Unmarshal(m, b)
}
func (m *Resprate_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resprate_Component_Value.Marshal(b, m, deterministic)
}
func (m *Resprate_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resprate_Component_Value.Merge(m, src)
}
func (m *Resprate_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Resprate_Component_Value.Size(m)
}
func (m *Resprate_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Resprate_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Resprate_Component_Value proto.InternalMessageInfo

type isResprate_Component_Value_Value interface {
	isResprate_Component_Value_Value()
}

type Resprate_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Resprate_Component_Value_Quantity) isResprate_Component_Value_Value() {}

func (m *Resprate_Component_Value) GetValue() isResprate_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Resprate_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Resprate_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Resprate_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Resprate_Component_Value_OneofMarshaler, _Resprate_Component_Value_OneofUnmarshaler, _Resprate_Component_Value_OneofSizer, []interface{}{
		(*Resprate_Component_Value_Quantity)(nil),
	}
}

func _Resprate_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Resprate_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Resprate_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Resprate_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Resprate_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Resprate_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Resprate_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Resprate_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Resprate_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Resprate_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Shareable CodeSystem.
// A set of codes drawn from one or more code systems.
// See http://hl7.org/fhir/StructureDefinition/shareablecodesystem
type Shareablecodesystem struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this code system (globally unique) (Coding.system)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the code system
	Identifier *Identifier `protobuf:"bytes,10,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the code system (Coding.version)
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this code system (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this code system (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the code system
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,20,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for code system (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,21,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this code system is defined
	Purpose *Markdown `protobuf:"bytes,22,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,23,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// If code comparison is case sensitive
	CaseSensitive *Boolean `protobuf:"bytes,24,opt,name=case_sensitive,json=caseSensitive,proto3" json:"case_sensitive,omitempty"`
	// Canonical URL for value set with entire code system
	ValueSet *Uri `protobuf:"bytes,25,opt,name=value_set,json=valueSet,proto3" json:"value_set,omitempty"`
	// grouped-by | is-a | part-of | classified-with
	HierarchyMeaning *CodeSystemHierarchyMeaningCode `protobuf:"bytes,26,opt,name=hierarchy_meaning,json=hierarchyMeaning,proto3" json:"hierarchy_meaning,omitempty"`
	// If code system defines a post-composition grammar
	Compositional *Boolean `protobuf:"bytes,27,opt,name=compositional,proto3" json:"compositional,omitempty"`
	// If definitions are not stable
	VersionNeeded *Boolean `protobuf:"bytes,28,opt,name=version_needed,json=versionNeeded,proto3" json:"version_needed,omitempty"`
	// not-present | example | fragment | complete
	Content *CodeSystemContentModeCode `protobuf:"bytes,29,opt,name=content,proto3" json:"content,omitempty"`
	// Total concepts in the code system
	Count                *UnsignedInt                             `protobuf:"bytes,30,opt,name=count,proto3" json:"count,omitempty"`
	Filter               []*Shareablecodesystem_Filter            `protobuf:"bytes,31,rep,name=filter,proto3" json:"filter,omitempty"`
	Property             []*Shareablecodesystem_Property          `protobuf:"bytes,32,rep,name=property,proto3" json:"property,omitempty"`
	Concept              []*Shareablecodesystem_ConceptDefinition `protobuf:"bytes,33,rep,name=concept,proto3" json:"concept,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *Shareablecodesystem) Reset()         { *m = Shareablecodesystem{} }
func (m *Shareablecodesystem) String() string { return proto.CompactTextString(m) }
func (*Shareablecodesystem) ProtoMessage()    {}
func (*Shareablecodesystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{23}
}

func (m *Shareablecodesystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablecodesystem.Unmarshal(m, b)
}
func (m *Shareablecodesystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablecodesystem.Marshal(b, m, deterministic)
}
func (m *Shareablecodesystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablecodesystem.Merge(m, src)
}
func (m *Shareablecodesystem) XXX_Size() int {
	return xxx_messageInfo_Shareablecodesystem.Size(m)
}
func (m *Shareablecodesystem) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablecodesystem.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablecodesystem proto.InternalMessageInfo

func (m *Shareablecodesystem) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablecodesystem) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Shareablecodesystem) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Shareablecodesystem) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Shareablecodesystem) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Shareablecodesystem) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Shareablecodesystem) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablecodesystem) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablecodesystem) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Shareablecodesystem) GetIdentifier() *Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Shareablecodesystem) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Shareablecodesystem) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Shareablecodesystem) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Shareablecodesystem) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Shareablecodesystem) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *Shareablecodesystem) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Shareablecodesystem) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *Shareablecodesystem) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Shareablecodesystem) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Shareablecodesystem) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *Shareablecodesystem) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *Shareablecodesystem) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *Shareablecodesystem) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *Shareablecodesystem) GetCaseSensitive() *Boolean {
	if m != nil {
		return m.CaseSensitive
	}
	return nil
}

func (m *Shareablecodesystem) GetValueSet() *Uri {
	if m != nil {
		return m.ValueSet
	}
	return nil
}

func (m *Shareablecodesystem) GetHierarchyMeaning() *CodeSystemHierarchyMeaningCode {
	if m != nil {
		return m.HierarchyMeaning
	}
	return nil
}

func (m *Shareablecodesystem) GetCompositional() *Boolean {
	if m != nil {
		return m.Compositional
	}
	return nil
}

func (m *Shareablecodesystem) GetVersionNeeded() *Boolean {
	if m != nil {
		return m.VersionNeeded
	}
	return nil
}

func (m *Shareablecodesystem) GetContent() *CodeSystemContentModeCode {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Shareablecodesystem) GetCount() *UnsignedInt {
	if m != nil {
		return m.Count
	}
	return nil
}

func (m *Shareablecodesystem) GetFilter() []*Shareablecodesystem_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *Shareablecodesystem) GetProperty() []*Shareablecodesystem_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *Shareablecodesystem) GetConcept() []*Shareablecodesystem_ConceptDefinition {
	if m != nil {
		return m.Concept
	}
	return nil
}

// Filter that can be used in a value set
type Shareablecodesystem_Filter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code that identifies the filter
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// How or why the filter is used
	Description *String `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Operators that can be used with filter
	Operator []*FilterOperatorCode `protobuf:"bytes,6,rep,name=operator,proto3" json:"operator,omitempty"`
	// What to use for the value
	Value                *String  `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shareablecodesystem_Filter) Reset()         { *m = Shareablecodesystem_Filter{} }
func (m *Shareablecodesystem_Filter) String() string { return proto.CompactTextString(m) }
func (*Shareablecodesystem_Filter) ProtoMessage()    {}
func (*Shareablecodesystem_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{23, 0}
}

func (m *Shareablecodesystem_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablecodesystem_Filter.Unmarshal(m, b)
}
func (m *Shareablecodesystem_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablecodesystem_Filter.Marshal(b, m, deterministic)
}
func (m *Shareablecodesystem_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablecodesystem_Filter.Merge(m, src)
}
func (m *Shareablecodesystem_Filter) XXX_Size() int {
	return xxx_messageInfo_Shareablecodesystem_Filter.Size(m)
}
func (m *Shareablecodesystem_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablecodesystem_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablecodesystem_Filter proto.InternalMessageInfo

func (m *Shareablecodesystem_Filter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablecodesystem_Filter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablecodesystem_Filter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablecodesystem_Filter) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Shareablecodesystem_Filter) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Shareablecodesystem_Filter) GetOperator() []*FilterOperatorCode {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (m *Shareablecodesystem_Filter) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// Additional information supplied about each concept
type Shareablecodesystem_Property struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifies the property on the concepts, and when referred to in
	// operations
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Formal identifier for the property
	Uri *Uri `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// Why the property is defined, and/or what it conveys
	Description *String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// code | Coding | string | integer | boolean | dateTime
	Type                 *PropertyTypeCode `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Shareablecodesystem_Property) Reset()         { *m = Shareablecodesystem_Property{} }
func (m *Shareablecodesystem_Property) String() string { return proto.CompactTextString(m) }
func (*Shareablecodesystem_Property) ProtoMessage()    {}
func (*Shareablecodesystem_Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{23, 1}
}

func (m *Shareablecodesystem_Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablecodesystem_Property.Unmarshal(m, b)
}
func (m *Shareablecodesystem_Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablecodesystem_Property.Marshal(b, m, deterministic)
}
func (m *Shareablecodesystem_Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablecodesystem_Property.Merge(m, src)
}
func (m *Shareablecodesystem_Property) XXX_Size() int {
	return xxx_messageInfo_Shareablecodesystem_Property.Size(m)
}
func (m *Shareablecodesystem_Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablecodesystem_Property.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablecodesystem_Property proto.InternalMessageInfo

func (m *Shareablecodesystem_Property) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablecodesystem_Property) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablecodesystem_Property) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablecodesystem_Property) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Shareablecodesystem_Property) GetUri() *Uri {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *Shareablecodesystem_Property) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Shareablecodesystem_Property) GetType() *PropertyTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

// Concepts in the code system
type Shareablecodesystem_ConceptDefinition struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code that identifies concept
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Text to display to the user
	Display *String `protobuf:"bytes,5,opt,name=display,proto3" json:"display,omitempty"`
	// Formal definition
	Definition  *String                                                  `protobuf:"bytes,6,opt,name=definition,proto3" json:"definition,omitempty"`
	Designation []*Shareablecodesystem_ConceptDefinition_Designation     `protobuf:"bytes,7,rep,name=designation,proto3" json:"designation,omitempty"`
	Property    []*Shareablecodesystem_ConceptDefinition_ConceptProperty `protobuf:"bytes,8,rep,name=property,proto3" json:"property,omitempty"`
	// Child Concepts (is-a/contains/categorizes)
	Concept              []*Shareablecodesystem_ConceptDefinition `protobuf:"bytes,9,rep,name=concept,proto3" json:"concept,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *Shareablecodesystem_ConceptDefinition) Reset()         { *m = Shareablecodesystem_ConceptDefinition{} }
func (m *Shareablecodesystem_ConceptDefinition) String() string { return proto.CompactTextString(m) }
func (*Shareablecodesystem_ConceptDefinition) ProtoMessage()    {}
func (*Shareablecodesystem_ConceptDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{23, 2}
}

func (m *Shareablecodesystem_ConceptDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition.Unmarshal(m, b)
}
func (m *Shareablecodesystem_ConceptDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition.Marshal(b, m, deterministic)
}
func (m *Shareablecodesystem_ConceptDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablecodesystem_ConceptDefinition.Merge(m, src)
}
func (m *Shareablecodesystem_ConceptDefinition) XXX_Size() int {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition.Size(m)
}
func (m *Shareablecodesystem_ConceptDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablecodesystem_ConceptDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablecodesystem_ConceptDefinition proto.InternalMessageInfo

func (m *Shareablecodesystem_ConceptDefinition) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition) GetDefinition() *String {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition) GetDesignation() []*Shareablecodesystem_ConceptDefinition_Designation {
	if m != nil {
		return m.Designation
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition) GetProperty() []*Shareablecodesystem_ConceptDefinition_ConceptProperty {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition) GetConcept() []*Shareablecodesystem_ConceptDefinition {
	if m != nil {
		return m.Concept
	}
	return nil
}

// Additional representations for the concept
type Shareablecodesystem_ConceptDefinition_Designation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Human language of the designation
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Details how this designation would be used
	Use *Coding `protobuf:"bytes,5,opt,name=use,proto3" json:"use,omitempty"`
	// The text value for this designation
	Value                *String  `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shareablecodesystem_ConceptDefinition_Designation) Reset() {
	*m = Shareablecodesystem_ConceptDefinition_Designation{}
}
func (m *Shareablecodesystem_ConceptDefinition_Designation) String() string {
	return proto.CompactTextString(m)
}
func (*Shareablecodesystem_ConceptDefinition_Designation) ProtoMessage() {}
func (*Shareablecodesystem_ConceptDefinition_Designation) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{23, 2, 0}
}

func (m *Shareablecodesystem_ConceptDefinition_Designation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition_Designation.Unmarshal(m, b)
}
func (m *Shareablecodesystem_ConceptDefinition_Designation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition_Designation.Marshal(b, m, deterministic)
}
func (m *Shareablecodesystem_ConceptDefinition_Designation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablecodesystem_ConceptDefinition_Designation.Merge(m, src)
}
func (m *Shareablecodesystem_ConceptDefinition_Designation) XXX_Size() int {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition_Designation.Size(m)
}
func (m *Shareablecodesystem_ConceptDefinition_Designation) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablecodesystem_ConceptDefinition_Designation.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablecodesystem_ConceptDefinition_Designation proto.InternalMessageInfo

func (m *Shareablecodesystem_ConceptDefinition_Designation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_Designation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_Designation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_Designation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_Designation) GetUse() *Coding {
	if m != nil {
		return m.Use
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_Designation) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// Property value for the concept
type Shareablecodesystem_ConceptDefinition_ConceptProperty struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Reference to CodeSystem.property.code
	Code                 *Code                                                        `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value                *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                     `json:"-"`
	XXX_unrecognized     []byte                                                       `json:"-"`
	XXX_sizecache        int32                                                        `json:"-"`
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) Reset() {
	*m = Shareablecodesystem_ConceptDefinition_ConceptProperty{}
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) String() string {
	return proto.CompactTextString(m)
}
func (*Shareablecodesystem_ConceptDefinition_ConceptProperty) ProtoMessage() {}
func (*Shareablecodesystem_ConceptDefinition_ConceptProperty) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{23, 2, 1}
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty.Unmarshal(m, b)
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty.Marshal(b, m, deterministic)
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty.Merge(m, src)
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) XXX_Size() int {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty.Size(m)
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty proto.InternalMessageInfo

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty) GetValue() *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Value of the property for this concept
type Shareablecodesystem_ConceptDefinition_ConceptProperty_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Code
	//	*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Coding
	//	*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_StringValue
	//	*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Integer
	//	*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Boolean
	//	*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_DateTime
	Value                isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                                            `json:"-"`
	XXX_unrecognized     []byte                                                              `json:"-"`
	XXX_sizecache        int32                                                               `json:"-"`
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) Reset() {
	*m = Shareablecodesystem_ConceptDefinition_ConceptProperty_Value{}
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) String() string {
	return proto.CompactTextString(m)
}
func (*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) ProtoMessage() {}
func (*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{23, 2, 1, 0}
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty_Value.Unmarshal(m, b)
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty_Value.Marshal(b, m, deterministic)
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty_Value.Merge(m, src)
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) XXX_Size() int {
	return xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty_Value.Size(m)
}
func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablecodesystem_ConceptDefinition_ConceptProperty_Value proto.InternalMessageInfo

type isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value interface {
	isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value()
}

type Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Code struct {
	Code *Code `protobuf:"bytes,1,opt,name=code,proto3,oneof"`
}

type Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Coding struct {
	Coding *Coding `protobuf:"bytes,2,opt,name=coding,proto3,oneof"`
}

type Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,4,opt,name=integer,proto3,oneof"`
}

type Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,5,opt,name=boolean,proto3,oneof"`
}

type Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,6,opt,name=date_time,json=dateTime,proto3,oneof"`
}

func (*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Code) isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Coding) isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_StringValue) isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Integer) isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Boolean) isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_DateTime) isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value() {
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) GetValue() isShareablecodesystem_ConceptDefinition_ConceptProperty_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) GetCode() *Code {
	if x, ok := m.GetValue().(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Code); ok {
		return x.Code
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) GetCoding() *Coding {
	if x, ok := m.GetValue().(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Coding); ok {
		return x.Coding
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_OneofMarshaler, _Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_OneofUnmarshaler, _Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_OneofSizer, []interface{}{
		(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Code)(nil),
		(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Coding)(nil),
		(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_StringValue)(nil),
		(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Integer)(nil),
		(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Boolean)(nil),
		(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_DateTime)(nil),
	}
}

func _Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value)
	// value
	switch x := m.Value.(type) {
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Code:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Coding:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coding); err != nil {
			return err
		}
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Integer:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Boolean:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_DateTime:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Shareablecodesystem_ConceptDefinition_ConceptProperty_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value)
	switch tag {
	case 1: // value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Code{msg}
		return true, err
	case 2: // value.coding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coding)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Coding{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_StringValue{msg}
		return true, err
	case 4: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Integer{msg}
		return true, err
	case 5: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Boolean{msg}
		return true, err
	case 6: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_DateTime{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value)
	// value
	switch x := m.Value.(type) {
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Coding:
		s := proto.Size(x.Coding)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablecodesystem_ConceptDefinition_ConceptProperty_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Shareable ValueSet.
// A set of codes drawn from one or more code systems.
// See http://hl7.org/fhir/StructureDefinition/shareablevalueset
type Shareablevalueset struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Logical URI to reference this value set (globally unique)
	Url *Uri `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the value set
	Identifier []*Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the value set
	Version *String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this value set (computer friendly)
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this value set (human friendly)
	Title *String `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	// draft | active | retired | unknown
	Status *PublicationStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *Boolean `protobuf:"bytes,15,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date this was last changed
	Date *DateTime `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *String `protobuf:"bytes,17,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*ContactDetail `protobuf:"bytes,18,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the value set
	Description *Markdown `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	// Context the content is intended to support
	UseContext []*UsageContext `protobuf:"bytes,20,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for value set (if applicable)
	Jurisdiction []*CodeableConcept `protobuf:"bytes,21,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Indicates whether or not any change to the content logical definition may
	// occur
	Immutable *Boolean `protobuf:"bytes,22,opt,name=immutable,proto3" json:"immutable,omitempty"`
	// Why this value set is defined
	Purpose *Markdown `protobuf:"bytes,23,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Use and/or publishing restrictions
	Copyright *Markdown `protobuf:"bytes,24,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Whether this is intended to be used with an extensible binding
	Extensible           *Boolean                     `protobuf:"bytes,25,opt,name=extensible,proto3" json:"extensible,omitempty"`
	Compose              *Shareablevalueset_Compose   `protobuf:"bytes,26,opt,name=compose,proto3" json:"compose,omitempty"`
	Expansion            *Shareablevalueset_Expansion `protobuf:"bytes,27,opt,name=expansion,proto3" json:"expansion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Shareablevalueset) Reset()         { *m = Shareablevalueset{} }
func (m *Shareablevalueset) String() string { return proto.CompactTextString(m) }
func (*Shareablevalueset) ProtoMessage()    {}
func (*Shareablevalueset) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24}
}

func (m *Shareablevalueset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset.Unmarshal(m, b)
}
func (m *Shareablevalueset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset.Merge(m, src)
}
func (m *Shareablevalueset) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset.Size(m)
}
func (m *Shareablevalueset) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset proto.InternalMessageInfo

func (m *Shareablevalueset) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablevalueset) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Shareablevalueset) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Shareablevalueset) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Shareablevalueset) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Shareablevalueset) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Shareablevalueset) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablevalueset) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablevalueset) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Shareablevalueset) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Shareablevalueset) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Shareablevalueset) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Shareablevalueset) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Shareablevalueset) GetStatus() *PublicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Shareablevalueset) GetExperimental() *Boolean {
	if m != nil {
		return m.Experimental
	}
	return nil
}

func (m *Shareablevalueset) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Shareablevalueset) GetPublisher() *String {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *Shareablevalueset) GetContact() []*ContactDetail {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Shareablevalueset) GetDescription() *Markdown {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Shareablevalueset) GetUseContext() []*UsageContext {
	if m != nil {
		return m.UseContext
	}
	return nil
}

func (m *Shareablevalueset) GetJurisdiction() []*CodeableConcept {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *Shareablevalueset) GetImmutable() *Boolean {
	if m != nil {
		return m.Immutable
	}
	return nil
}

func (m *Shareablevalueset) GetPurpose() *Markdown {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *Shareablevalueset) GetCopyright() *Markdown {
	if m != nil {
		return m.Copyright
	}
	return nil
}

func (m *Shareablevalueset) GetExtensible() *Boolean {
	if m != nil {
		return m.Extensible
	}
	return nil
}

func (m *Shareablevalueset) GetCompose() *Shareablevalueset_Compose {
	if m != nil {
		return m.Compose
	}
	return nil
}

func (m *Shareablevalueset) GetExpansion() *Shareablevalueset_Expansion {
	if m != nil {
		return m.Expansion
	}
	return nil
}

// Definition of the content of the value set (CLD)
type Shareablevalueset_Compose struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Fixed date for version-less references (transitive)
	LockedDate *Date `protobuf:"bytes,4,opt,name=locked_date,json=lockedDate,proto3" json:"locked_date,omitempty"`
	// Whether inactive codes are in the value set
	Inactive *Boolean                                `protobuf:"bytes,5,opt,name=inactive,proto3" json:"inactive,omitempty"`
	Include  []*Shareablevalueset_Compose_ConceptSet `protobuf:"bytes,6,rep,name=include,proto3" json:"include,omitempty"`
	// Explicitly exclude codes from a code system or other value sets
	Exclude              []*Shareablevalueset_Compose_ConceptSet `protobuf:"bytes,7,rep,name=exclude,proto3" json:"exclude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *Shareablevalueset_Compose) Reset()         { *m = Shareablevalueset_Compose{} }
func (m *Shareablevalueset_Compose) String() string { return proto.CompactTextString(m) }
func (*Shareablevalueset_Compose) ProtoMessage()    {}
func (*Shareablevalueset_Compose) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24, 0}
}

func (m *Shareablevalueset_Compose) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset_Compose.Unmarshal(m, b)
}
func (m *Shareablevalueset_Compose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset_Compose.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset_Compose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset_Compose.Merge(m, src)
}
func (m *Shareablevalueset_Compose) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset_Compose.Size(m)
}
func (m *Shareablevalueset_Compose) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset_Compose.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset_Compose proto.InternalMessageInfo

func (m *Shareablevalueset_Compose) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablevalueset_Compose) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablevalueset_Compose) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablevalueset_Compose) GetLockedDate() *Date {
	if m != nil {
		return m.LockedDate
	}
	return nil
}

func (m *Shareablevalueset_Compose) GetInactive() *Boolean {
	if m != nil {
		return m.Inactive
	}
	return nil
}

func (m *Shareablevalueset_Compose) GetInclude() []*Shareablevalueset_Compose_ConceptSet {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Shareablevalueset_Compose) GetExclude() []*Shareablevalueset_Compose_ConceptSet {
	if m != nil {
		return m.Exclude
	}
	return nil
}

// Include one or more codes from a code system or other value set(s)
type Shareablevalueset_Compose_ConceptSet struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The system the codes come from
	System *Uri `protobuf:"bytes,4,opt,name=system,proto3" json:"system,omitempty"`
	// Specific version of the code system referred to
	Version *String                                                  `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Concept []*Shareablevalueset_Compose_ConceptSet_ConceptReference `protobuf:"bytes,6,rep,name=concept,proto3" json:"concept,omitempty"`
	Filter  []*Shareablevalueset_Compose_ConceptSet_Filter           `protobuf:"bytes,7,rep,name=filter,proto3" json:"filter,omitempty"`
	// Select only contents included in this value set
	ValueSet             []*Uri   `protobuf:"bytes,8,rep,name=value_set,json=valueSet,proto3" json:"value_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shareablevalueset_Compose_ConceptSet) Reset()         { *m = Shareablevalueset_Compose_ConceptSet{} }
func (m *Shareablevalueset_Compose_ConceptSet) String() string { return proto.CompactTextString(m) }
func (*Shareablevalueset_Compose_ConceptSet) ProtoMessage()    {}
func (*Shareablevalueset_Compose_ConceptSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24, 0, 0}
}

func (m *Shareablevalueset_Compose_ConceptSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet.Unmarshal(m, b)
}
func (m *Shareablevalueset_Compose_ConceptSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset_Compose_ConceptSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset_Compose_ConceptSet.Merge(m, src)
}
func (m *Shareablevalueset_Compose_ConceptSet) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet.Size(m)
}
func (m *Shareablevalueset_Compose_ConceptSet) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset_Compose_ConceptSet.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset_Compose_ConceptSet proto.InternalMessageInfo

func (m *Shareablevalueset_Compose_ConceptSet) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet) GetSystem() *Uri {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet) GetConcept() []*Shareablevalueset_Compose_ConceptSet_ConceptReference {
	if m != nil {
		return m.Concept
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet) GetFilter() []*Shareablevalueset_Compose_ConceptSet_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet) GetValueSet() []*Uri {
	if m != nil {
		return m.ValueSet
	}
	return nil
}

// A concept defined in the system
type Shareablevalueset_Compose_ConceptSet_ConceptReference struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code or expression from system
	Code *Code `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Text to display for this code for this value set in this valueset
	Display              *String                                                              `protobuf:"bytes,5,opt,name=display,proto3" json:"display,omitempty"`
	Designation          []*Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation `protobuf:"bytes,6,rep,name=designation,proto3" json:"designation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                             `json:"-"`
	XXX_unrecognized     []byte                                                               `json:"-"`
	XXX_sizecache        int32                                                                `json:"-"`
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) Reset() {
	*m = Shareablevalueset_Compose_ConceptSet_ConceptReference{}
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) String() string {
	return proto.CompactTextString(m)
}
func (*Shareablevalueset_Compose_ConceptSet_ConceptReference) ProtoMessage() {}
func (*Shareablevalueset_Compose_ConceptSet_ConceptReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24, 0, 0, 0}
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference.Unmarshal(m, b)
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference.Merge(m, src)
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference.Size(m)
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference proto.InternalMessageInfo

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference) GetDesignation() []*Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation {
	if m != nil {
		return m.Designation
	}
	return nil
}

// Additional representations for this concept
type Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Human language of the designation
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Details how this designation would be used
	Use *Coding `protobuf:"bytes,5,opt,name=use,proto3" json:"use,omitempty"`
	// The text value for this designation
	Value                *String  `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) Reset() {
	*m = Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation{}
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) String() string {
	return proto.CompactTextString(m)
}
func (*Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) ProtoMessage() {}
func (*Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24, 0, 0, 0, 0}
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation.Unmarshal(m, b)
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation.Merge(m, src)
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation.Size(m)
}
func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation proto.InternalMessageInfo

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) GetUse() *Coding {
	if m != nil {
		return m.Use
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation) GetValue() *String {
	if m != nil {
		return m.Value
	}
	return nil
}

// Select codes/concepts by their properties (including relationships)
type Shareablevalueset_Compose_ConceptSet_Filter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A property defined by the code system
	Property *Code `protobuf:"bytes,4,opt,name=property,proto3" json:"property,omitempty"`
	// = | is-a | descendent-of | is-not-a | regex | in | not-in |
	// generalizes | exists
	Op *FilterOperatorCode `protobuf:"bytes,5,opt,name=op,proto3" json:"op,omitempty"`
	// Code from the system, or regex criteria, or boolean value for exists
	Value                *Code    `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shareablevalueset_Compose_ConceptSet_Filter) Reset() {
	*m = Shareablevalueset_Compose_ConceptSet_Filter{}
}
func (m *Shareablevalueset_Compose_ConceptSet_Filter) String() string {
	return proto.CompactTextString(m)
}
func (*Shareablevalueset_Compose_ConceptSet_Filter) ProtoMessage() {}
func (*Shareablevalueset_Compose_ConceptSet_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24, 0, 0, 1}
}

func (m *Shareablevalueset_Compose_ConceptSet_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_Filter.Unmarshal(m, b)
}
func (m *Shareablevalueset_Compose_ConceptSet_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_Filter.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset_Compose_ConceptSet_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_Filter.Merge(m, src)
}
func (m *Shareablevalueset_Compose_ConceptSet_Filter) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_Filter.Size(m)
}
func (m *Shareablevalueset_Compose_ConceptSet_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset_Compose_ConceptSet_Filter proto.InternalMessageInfo

func (m *Shareablevalueset_Compose_ConceptSet_Filter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_Filter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_Filter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_Filter) GetProperty() *Code {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_Filter) GetOp() *FilterOperatorCode {
	if m != nil {
		return m.Op
	}
	return nil
}

func (m *Shareablevalueset_Compose_ConceptSet_Filter) GetValue() *Code {
	if m != nil {
		return m.Value
	}
	return nil
}

// Used when the value set is "expanded"
type Shareablevalueset_Expansion struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Uniquely identifies this expansion
	Identifier *Uri `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Time ValueSet expansion happened
	Timestamp *DateTime `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Total number of codes in the expansion
	Total *Integer `protobuf:"bytes,6,opt,name=total,proto3" json:"total,omitempty"`
	// Offset at which this resource starts
	Offset               *Integer                                 `protobuf:"bytes,7,opt,name=offset,proto3" json:"offset,omitempty"`
	Parameter            []*Shareablevalueset_Expansion_Parameter `protobuf:"bytes,8,rep,name=parameter,proto3" json:"parameter,omitempty"`
	Contains             []*Shareablevalueset_Expansion_Contains  `protobuf:"bytes,9,rep,name=contains,proto3" json:"contains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *Shareablevalueset_Expansion) Reset()         { *m = Shareablevalueset_Expansion{} }
func (m *Shareablevalueset_Expansion) String() string { return proto.CompactTextString(m) }
func (*Shareablevalueset_Expansion) ProtoMessage()    {}
func (*Shareablevalueset_Expansion) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24, 1}
}

func (m *Shareablevalueset_Expansion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset_Expansion.Unmarshal(m, b)
}
func (m *Shareablevalueset_Expansion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset_Expansion.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset_Expansion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset_Expansion.Merge(m, src)
}
func (m *Shareablevalueset_Expansion) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset_Expansion.Size(m)
}
func (m *Shareablevalueset_Expansion) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset_Expansion.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset_Expansion proto.InternalMessageInfo

func (m *Shareablevalueset_Expansion) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablevalueset_Expansion) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablevalueset_Expansion) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablevalueset_Expansion) GetIdentifier() *Uri {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Shareablevalueset_Expansion) GetTimestamp() *DateTime {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Shareablevalueset_Expansion) GetTotal() *Integer {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *Shareablevalueset_Expansion) GetOffset() *Integer {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *Shareablevalueset_Expansion) GetParameter() []*Shareablevalueset_Expansion_Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *Shareablevalueset_Expansion) GetContains() []*Shareablevalueset_Expansion_Contains {
	if m != nil {
		return m.Contains
	}
	return nil
}

// Parameter that controlled the expansion process
type Shareablevalueset_Expansion_Parameter struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name as assigned by the server
	Name                 *String                                      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Value                *Shareablevalueset_Expansion_Parameter_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *Shareablevalueset_Expansion_Parameter) Reset()         { *m = Shareablevalueset_Expansion_Parameter{} }
func (m *Shareablevalueset_Expansion_Parameter) String() string { return proto.CompactTextString(m) }
func (*Shareablevalueset_Expansion_Parameter) ProtoMessage()    {}
func (*Shareablevalueset_Expansion_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24, 1, 0}
}

func (m *Shareablevalueset_Expansion_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset_Expansion_Parameter.Unmarshal(m, b)
}
func (m *Shareablevalueset_Expansion_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset_Expansion_Parameter.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset_Expansion_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset_Expansion_Parameter.Merge(m, src)
}
func (m *Shareablevalueset_Expansion_Parameter) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset_Expansion_Parameter.Size(m)
}
func (m *Shareablevalueset_Expansion_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset_Expansion_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset_Expansion_Parameter proto.InternalMessageInfo

func (m *Shareablevalueset_Expansion_Parameter) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter) GetValue() *Shareablevalueset_Expansion_Parameter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Value of the named parameter
type Shareablevalueset_Expansion_Parameter_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Shareablevalueset_Expansion_Parameter_Value_StringValue
	//	*Shareablevalueset_Expansion_Parameter_Value_Boolean
	//	*Shareablevalueset_Expansion_Parameter_Value_Integer
	//	*Shareablevalueset_Expansion_Parameter_Value_Decimal
	//	*Shareablevalueset_Expansion_Parameter_Value_Uri
	//	*Shareablevalueset_Expansion_Parameter_Value_Code
	Value                isShareablevalueset_Expansion_Parameter_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *Shareablevalueset_Expansion_Parameter_Value) Reset() {
	*m = Shareablevalueset_Expansion_Parameter_Value{}
}
func (m *Shareablevalueset_Expansion_Parameter_Value) String() string {
	return proto.CompactTextString(m)
}
func (*Shareablevalueset_Expansion_Parameter_Value) ProtoMessage() {}
func (*Shareablevalueset_Expansion_Parameter_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24, 1, 0, 0}
}

func (m *Shareablevalueset_Expansion_Parameter_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset_Expansion_Parameter_Value.Unmarshal(m, b)
}
func (m *Shareablevalueset_Expansion_Parameter_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset_Expansion_Parameter_Value.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset_Expansion_Parameter_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset_Expansion_Parameter_Value.Merge(m, src)
}
func (m *Shareablevalueset_Expansion_Parameter_Value) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset_Expansion_Parameter_Value.Size(m)
}
func (m *Shareablevalueset_Expansion_Parameter_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset_Expansion_Parameter_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset_Expansion_Parameter_Value proto.InternalMessageInfo

type isShareablevalueset_Expansion_Parameter_Value_Value interface {
	isShareablevalueset_Expansion_Parameter_Value_Value()
}

type Shareablevalueset_Expansion_Parameter_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,1,opt,name=string_value,json=string,proto3,oneof"`
}

type Shareablevalueset_Expansion_Parameter_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type Shareablevalueset_Expansion_Parameter_Value_Integer struct {
	Integer *Integer `protobuf:"bytes,3,opt,name=integer,proto3,oneof"`
}

type Shareablevalueset_Expansion_Parameter_Value_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,4,opt,name=decimal,proto3,oneof"`
}

type Shareablevalueset_Expansion_Parameter_Value_Uri struct {
	Uri *Uri `protobuf:"bytes,5,opt,name=uri,proto3,oneof"`
}

type Shareablevalueset_Expansion_Parameter_Value_Code struct {
	Code *Code `protobuf:"bytes,6,opt,name=code,proto3,oneof"`
}

func (*Shareablevalueset_Expansion_Parameter_Value_StringValue) isShareablevalueset_Expansion_Parameter_Value_Value() {
}

func (*Shareablevalueset_Expansion_Parameter_Value_Boolean) isShareablevalueset_Expansion_Parameter_Value_Value() {
}

func (*Shareablevalueset_Expansion_Parameter_Value_Integer) isShareablevalueset_Expansion_Parameter_Value_Value() {
}

func (*Shareablevalueset_Expansion_Parameter_Value_Decimal) isShareablevalueset_Expansion_Parameter_Value_Value() {
}

func (*Shareablevalueset_Expansion_Parameter_Value_Uri) isShareablevalueset_Expansion_Parameter_Value_Value() {
}

func (*Shareablevalueset_Expansion_Parameter_Value_Code) isShareablevalueset_Expansion_Parameter_Value_Value() {
}

func (m *Shareablevalueset_Expansion_Parameter_Value) GetValue() isShareablevalueset_Expansion_Parameter_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Shareablevalueset_Expansion_Parameter_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*Shareablevalueset_Expansion_Parameter_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter_Value) GetInteger() *Integer {
	if x, ok := m.GetValue().(*Shareablevalueset_Expansion_Parameter_Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter_Value) GetDecimal() *Decimal {
	if x, ok := m.GetValue().(*Shareablevalueset_Expansion_Parameter_Value_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter_Value) GetUri() *Uri {
	if x, ok := m.GetValue().(*Shareablevalueset_Expansion_Parameter_Value_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Parameter_Value) GetCode() *Code {
	if x, ok := m.GetValue().(*Shareablevalueset_Expansion_Parameter_Value_Code); ok {
		return x.Code
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Shareablevalueset_Expansion_Parameter_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Shareablevalueset_Expansion_Parameter_Value_OneofMarshaler, _Shareablevalueset_Expansion_Parameter_Value_OneofUnmarshaler, _Shareablevalueset_Expansion_Parameter_Value_OneofSizer, []interface{}{
		(*Shareablevalueset_Expansion_Parameter_Value_StringValue)(nil),
		(*Shareablevalueset_Expansion_Parameter_Value_Boolean)(nil),
		(*Shareablevalueset_Expansion_Parameter_Value_Integer)(nil),
		(*Shareablevalueset_Expansion_Parameter_Value_Decimal)(nil),
		(*Shareablevalueset_Expansion_Parameter_Value_Uri)(nil),
		(*Shareablevalueset_Expansion_Parameter_Value_Code)(nil),
	}
}

func _Shareablevalueset_Expansion_Parameter_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Shareablevalueset_Expansion_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *Shareablevalueset_Expansion_Parameter_Value_StringValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Shareablevalueset_Expansion_Parameter_Value_Boolean:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *Shareablevalueset_Expansion_Parameter_Value_Integer:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *Shareablevalueset_Expansion_Parameter_Value_Decimal:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Decimal); err != nil {
			return err
		}
	case *Shareablevalueset_Expansion_Parameter_Value_Uri:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *Shareablevalueset_Expansion_Parameter_Value_Code:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Code); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Shareablevalueset_Expansion_Parameter_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Shareablevalueset_Expansion_Parameter_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Shareablevalueset_Expansion_Parameter_Value)
	switch tag {
	case 1: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablevalueset_Expansion_Parameter_Value_StringValue{msg}
		return true, err
	case 2: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablevalueset_Expansion_Parameter_Value_Boolean{msg}
		return true, err
	case 3: // value.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablevalueset_Expansion_Parameter_Value_Integer{msg}
		return true, err
	case 4: // value.decimal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decimal)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablevalueset_Expansion_Parameter_Value_Decimal{msg}
		return true, err
	case 5: // value.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Uri)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablevalueset_Expansion_Parameter_Value_Uri{msg}
		return true, err
	case 6: // value.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Code)
		err := b.DecodeMessage(msg)
		m.Value = &Shareablevalueset_Expansion_Parameter_Value_Code{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Shareablevalueset_Expansion_Parameter_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Shareablevalueset_Expansion_Parameter_Value)
	// value
	switch x := m.Value.(type) {
	case *Shareablevalueset_Expansion_Parameter_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablevalueset_Expansion_Parameter_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablevalueset_Expansion_Parameter_Value_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablevalueset_Expansion_Parameter_Value_Decimal:
		s := proto.Size(x.Decimal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablevalueset_Expansion_Parameter_Value_Uri:
		s := proto.Size(x.Uri)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Shareablevalueset_Expansion_Parameter_Value_Code:
		s := proto.Size(x.Code)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Codes in the value set
type Shareablevalueset_Expansion_Contains struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// System value for the code
	System *Uri `protobuf:"bytes,4,opt,name=system,proto3" json:"system,omitempty"`
	// If user cannot select this entry
	Abstract *Boolean `protobuf:"bytes,5,opt,name=abstract,proto3" json:"abstract,omitempty"`
	// If concept is inactive in the code system
	Inactive *Boolean `protobuf:"bytes,6,opt,name=inactive,proto3" json:"inactive,omitempty"`
	// Version in which this code/display is defined
	Version *String `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	// Code - if blank, this is not a selectable code
	Code *Code `protobuf:"bytes,8,opt,name=code,proto3" json:"code,omitempty"`
	// User display for the concept
	Display *String `protobuf:"bytes,9,opt,name=display,proto3" json:"display,omitempty"`
	// Additional representations for this item
	Designation []*Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation `protobuf:"bytes,10,rep,name=designation,proto3" json:"designation,omitempty"`
	// Codes contained under this entry
	Contains             []*Shareablevalueset_Expansion_Contains `protobuf:"bytes,11,rep,name=contains,proto3" json:"contains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *Shareablevalueset_Expansion_Contains) Reset()         { *m = Shareablevalueset_Expansion_Contains{} }
func (m *Shareablevalueset_Expansion_Contains) String() string { return proto.CompactTextString(m) }
func (*Shareablevalueset_Expansion_Contains) ProtoMessage()    {}
func (*Shareablevalueset_Expansion_Contains) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{24, 1, 1}
}

func (m *Shareablevalueset_Expansion_Contains) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shareablevalueset_Expansion_Contains.Unmarshal(m, b)
}
func (m *Shareablevalueset_Expansion_Contains) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shareablevalueset_Expansion_Contains.Marshal(b, m, deterministic)
}
func (m *Shareablevalueset_Expansion_Contains) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shareablevalueset_Expansion_Contains.Merge(m, src)
}
func (m *Shareablevalueset_Expansion_Contains) XXX_Size() int {
	return xxx_messageInfo_Shareablevalueset_Expansion_Contains.Size(m)
}
func (m *Shareablevalueset_Expansion_Contains) XXX_DiscardUnknown() {
	xxx_messageInfo_Shareablevalueset_Expansion_Contains.DiscardUnknown(m)
}

var xxx_messageInfo_Shareablevalueset_Expansion_Contains proto.InternalMessageInfo

func (m *Shareablevalueset_Expansion_Contains) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetSystem() *Uri {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetAbstract() *Boolean {
	if m != nil {
		return m.Abstract
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetInactive() *Boolean {
	if m != nil {
		return m.Inactive
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetDisplay() *String {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetDesignation() []*Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation {
	if m != nil {
		return m.Designation
	}
	return nil
}

func (m *Shareablevalueset_Expansion_Contains) GetContains() []*Shareablevalueset_Expansion_Contains {
	if m != nil {
		return m.Contains
	}
	return nil
}

// Auto-generated from StructureDefinition for Example Lipid Profile.
// Triglyceride Result.
// See http://hl7.org/fhir/StructureDefinition/triglyceride
type Triglyceride struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Triglyceride
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference              `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Triglyceride_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference        `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Triglyceride_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// + | ++ | +++ | - | -- | ---
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                   `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       *Triglyceride_ReferenceRange `protobuf:"bytes,27,opt,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Component            []*Triglyceride_Component    `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Triglyceride) Reset()         { *m = Triglyceride{} }
func (m *Triglyceride) String() string { return proto.CompactTextString(m) }
func (*Triglyceride) ProtoMessage()    {}
func (*Triglyceride) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{25}
}

func (m *Triglyceride) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triglyceride.Unmarshal(m, b)
}
func (m *Triglyceride) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triglyceride.Marshal(b, m, deterministic)
}
func (m *Triglyceride) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triglyceride.Merge(m, src)
}
func (m *Triglyceride) XXX_Size() int {
	return xxx_messageInfo_Triglyceride.Size(m)
}
func (m *Triglyceride) XXX_DiscardUnknown() {
	xxx_messageInfo_Triglyceride.DiscardUnknown(m)
}

var xxx_messageInfo_Triglyceride proto.InternalMessageInfo

func (m *Triglyceride) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Triglyceride) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Triglyceride) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Triglyceride) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Triglyceride) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Triglyceride) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Triglyceride) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Triglyceride) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Triglyceride) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Triglyceride) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Triglyceride) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Triglyceride) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Triglyceride) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Triglyceride) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Triglyceride) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Triglyceride) GetEffective() *Triglyceride_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Triglyceride) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Triglyceride) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Triglyceride) GetValue() *Triglyceride_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Triglyceride) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Triglyceride) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Triglyceride) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Triglyceride) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Triglyceride) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Triglyceride) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Triglyceride) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Triglyceride) GetReferenceRange() *Triglyceride_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Triglyceride) GetComponent() []*Triglyceride_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Clinically relevant time/time-period for observation
type Triglyceride_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Triglyceride_Effective_DateTime
	//	*Triglyceride_Effective_Period
	Effective            isTriglyceride_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Triglyceride_Effective) Reset()         { *m = Triglyceride_Effective{} }
func (m *Triglyceride_Effective) String() string { return proto.CompactTextString(m) }
func (*Triglyceride_Effective) ProtoMessage()    {}
func (*Triglyceride_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{25, 0}
}

func (m *Triglyceride_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triglyceride_Effective.Unmarshal(m, b)
}
func (m *Triglyceride_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triglyceride_Effective.Marshal(b, m, deterministic)
}
func (m *Triglyceride_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triglyceride_Effective.Merge(m, src)
}
func (m *Triglyceride_Effective) XXX_Size() int {
	return xxx_messageInfo_Triglyceride_Effective.Size(m)
}
func (m *Triglyceride_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Triglyceride_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Triglyceride_Effective proto.InternalMessageInfo

type isTriglyceride_Effective_Effective interface {
	isTriglyceride_Effective_Effective()
}

type Triglyceride_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Triglyceride_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Triglyceride_Effective_DateTime) isTriglyceride_Effective_Effective() {}

func (*Triglyceride_Effective_Period) isTriglyceride_Effective_Effective() {}

func (m *Triglyceride_Effective) GetEffective() isTriglyceride_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Triglyceride_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Triglyceride_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Triglyceride_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Triglyceride_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Triglyceride_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Triglyceride_Effective_OneofMarshaler, _Triglyceride_Effective_OneofUnmarshaler, _Triglyceride_Effective_OneofSizer, []interface{}{
		(*Triglyceride_Effective_DateTime)(nil),
		(*Triglyceride_Effective_Period)(nil),
	}
}

func _Triglyceride_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Triglyceride_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Triglyceride_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Triglyceride_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Triglyceride_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Triglyceride_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Triglyceride_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Triglyceride_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Triglyceride_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Triglyceride_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Triglyceride_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Triglyceride_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Triglyceride value
type Triglyceride_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Triglyceride_Value_Quantity
	Value                isTriglyceride_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Triglyceride_Value) Reset()         { *m = Triglyceride_Value{} }
func (m *Triglyceride_Value) String() string { return proto.CompactTextString(m) }
func (*Triglyceride_Value) ProtoMessage()    {}
func (*Triglyceride_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{25, 1}
}

func (m *Triglyceride_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triglyceride_Value.Unmarshal(m, b)
}
func (m *Triglyceride_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triglyceride_Value.Marshal(b, m, deterministic)
}
func (m *Triglyceride_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triglyceride_Value.Merge(m, src)
}
func (m *Triglyceride_Value) XXX_Size() int {
	return xxx_messageInfo_Triglyceride_Value.Size(m)
}
func (m *Triglyceride_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Triglyceride_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Triglyceride_Value proto.InternalMessageInfo

type isTriglyceride_Value_Value interface {
	isTriglyceride_Value_Value()
}

type Triglyceride_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Triglyceride_Value_Quantity) isTriglyceride_Value_Value() {}

func (m *Triglyceride_Value) GetValue() isTriglyceride_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Triglyceride_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Triglyceride_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Triglyceride_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Triglyceride_Value_OneofMarshaler, _Triglyceride_Value_OneofUnmarshaler, _Triglyceride_Value_OneofSizer, []interface{}{
		(*Triglyceride_Value_Quantity)(nil),
	}
}

func _Triglyceride_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Triglyceride_Value)
	// value
	switch x := m.Value.(type) {
	case *Triglyceride_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Triglyceride_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Triglyceride_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Triglyceride_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Triglyceride_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Triglyceride_Value)
	// value
	switch x := m.Value.(type) {
	case *Triglyceride_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Triglyceride_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Triglyceride_ReferenceRange) Reset()         { *m = Triglyceride_ReferenceRange{} }
func (m *Triglyceride_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Triglyceride_ReferenceRange) ProtoMessage()    {}
func (*Triglyceride_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{25, 2}
}

func (m *Triglyceride_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triglyceride_ReferenceRange.Unmarshal(m, b)
}
func (m *Triglyceride_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triglyceride_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Triglyceride_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triglyceride_ReferenceRange.Merge(m, src)
}
func (m *Triglyceride_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Triglyceride_ReferenceRange.Size(m)
}
func (m *Triglyceride_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Triglyceride_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Triglyceride_ReferenceRange proto.InternalMessageInfo

func (m *Triglyceride_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Triglyceride_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Triglyceride_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Triglyceride_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Triglyceride_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Component results
type Triglyceride_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept              `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Triglyceride_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Triglyceride_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Triglyceride_Component) Reset()         { *m = Triglyceride_Component{} }
func (m *Triglyceride_Component) String() string { return proto.CompactTextString(m) }
func (*Triglyceride_Component) ProtoMessage()    {}
func (*Triglyceride_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{25, 3}
}

func (m *Triglyceride_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triglyceride_Component.Unmarshal(m, b)
}
func (m *Triglyceride_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triglyceride_Component.Marshal(b, m, deterministic)
}
func (m *Triglyceride_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triglyceride_Component.Merge(m, src)
}
func (m *Triglyceride_Component) XXX_Size() int {
	return xxx_messageInfo_Triglyceride_Component.Size(m)
}
func (m *Triglyceride_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Triglyceride_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Triglyceride_Component proto.InternalMessageInfo

func (m *Triglyceride_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Triglyceride_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Triglyceride_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Triglyceride_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Triglyceride_Component) GetValue() *Triglyceride_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Triglyceride_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Triglyceride_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Triglyceride_Component) GetReferenceRange() []*Triglyceride_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Actual component result
type Triglyceride_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Triglyceride_Component_Value_Quantity
	//	*Triglyceride_Component_Value_CodeableConcept
	//	*Triglyceride_Component_Value_StringValue
	//	*Triglyceride_Component_Value_Range
	//	*Triglyceride_Component_Value_Ratio
	//	*Triglyceride_Component_Value_SampledData
	//	*Triglyceride_Component_Value_Attachment
	//	*Triglyceride_Component_Value_Time
	//	*Triglyceride_Component_Value_DateTime
	//	*Triglyceride_Component_Value_Period
	Value                isTriglyceride_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Triglyceride_Component_Value) Reset()         { *m = Triglyceride_Component_Value{} }
func (m *Triglyceride_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Triglyceride_Component_Value) ProtoMessage()    {}
func (*Triglyceride_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{25, 3, 0}
}

func (m *Triglyceride_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triglyceride_Component_Value.Unmarshal(m, b)
}
func (m *Triglyceride_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triglyceride_Component_Value.Marshal(b, m, deterministic)
}
func (m *Triglyceride_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triglyceride_Component_Value.Merge(m, src)
}
func (m *Triglyceride_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Triglyceride_Component_Value.Size(m)
}
func (m *Triglyceride_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Triglyceride_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Triglyceride_Component_Value proto.InternalMessageInfo

type isTriglyceride_Component_Value_Value interface {
	isTriglyceride_Component_Value_Value()
}

type Triglyceride_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Triglyceride_Component_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Triglyceride_Component_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type Triglyceride_Component_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type Triglyceride_Component_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,5,opt,name=ratio,proto3,oneof"`
}

type Triglyceride_Component_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,6,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Triglyceride_Component_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,7,opt,name=attachment,proto3,oneof"`
}

type Triglyceride_Component_Value_Time struct {
	Time *Time `protobuf:"bytes,8,opt,name=time,proto3,oneof"`
}

type Triglyceride_Component_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,9,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Triglyceride_Component_Value_Period struct {
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3,oneof"`
}

func (*Triglyceride_Component_Value_Quantity) isTriglyceride_Component_Value_Value() {}

func (*Triglyceride_Component_Value_CodeableConcept) isTriglyceride_Component_Value_Value() {}

func (*Triglyceride_Component_Value_StringValue) isTriglyceride_Component_Value_Value() {}

func (*Triglyceride_Component_Value_Range) isTriglyceride_Component_Value_Value() {}

func (*Triglyceride_Component_Value_Ratio) isTriglyceride_Component_Value_Value() {}

func (*Triglyceride_Component_Value_SampledData) isTriglyceride_Component_Value_Value() {}

func (*Triglyceride_Component_Value_Attachment) isTriglyceride_Component_Value_Value() {}

func (*Triglyceride_Component_Value_Time) isTriglyceride_Component_Value_Value() {}

func (*Triglyceride_Component_Value_DateTime) isTriglyceride_Component_Value_Value() {}

func (*Triglyceride_Component_Value_Period) isTriglyceride_Component_Value_Value() {}

func (m *Triglyceride_Component_Value) GetValue() isTriglyceride_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Triglyceride_Component_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*Triglyceride_Component_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Triglyceride_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Triglyceride_Component_Value_OneofMarshaler, _Triglyceride_Component_Value_OneofUnmarshaler, _Triglyceride_Component_Value_OneofSizer, []interface{}{
		(*Triglyceride_Component_Value_Quantity)(nil),
		(*Triglyceride_Component_Value_CodeableConcept)(nil),
		(*Triglyceride_Component_Value_StringValue)(nil),
		(*Triglyceride_Component_Value_Range)(nil),
		(*Triglyceride_Component_Value_Ratio)(nil),
		(*Triglyceride_Component_Value_SampledData)(nil),
		(*Triglyceride_Component_Value_Attachment)(nil),
		(*Triglyceride_Component_Value_Time)(nil),
		(*Triglyceride_Component_Value_DateTime)(nil),
		(*Triglyceride_Component_Value_Period)(nil),
	}
}

func _Triglyceride_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Triglyceride_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Triglyceride_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *Triglyceride_Component_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *Triglyceride_Component_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *Triglyceride_Component_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *Triglyceride_Component_Value_Ratio:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *Triglyceride_Component_Value_SampledData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *Triglyceride_Component_Value_Attachment:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *Triglyceride_Component_Value_Time:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *Triglyceride_Component_Value_DateTime:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Triglyceride_Component_Value_Period:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Triglyceride_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Triglyceride_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Triglyceride_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_StringValue{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_Range{msg}
		return true, err
	case 5: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_Ratio{msg}
		return true, err
	case 6: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_SampledData{msg}
		return true, err
	case 7: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_Attachment{msg}
		return true, err
	case 8: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_Time{msg}
		return true, err
	case 9: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_DateTime{msg}
		return true, err
	case 10: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &Triglyceride_Component_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Triglyceride_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Triglyceride_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Triglyceride_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Component_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Component_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Component_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Component_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Component_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Component_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Component_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Component_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Triglyceride_Component_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Vital Signs Profile.
// See http://hl7.org/fhir/StructureDefinition/vitalsigns
type Vitalsigns struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Coded Responses from C-CDA Vital Sign Results
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference            `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Vitalsigns_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference      `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *Vitalsigns_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                   `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Vitalsigns_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Vitalsigns_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Vitalsigns_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Vitalsigns) Reset()         { *m = Vitalsigns{} }
func (m *Vitalsigns) String() string { return proto.CompactTextString(m) }
func (*Vitalsigns) ProtoMessage()    {}
func (*Vitalsigns) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{26}
}

func (m *Vitalsigns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalsigns.Unmarshal(m, b)
}
func (m *Vitalsigns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalsigns.Marshal(b, m, deterministic)
}
func (m *Vitalsigns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalsigns.Merge(m, src)
}
func (m *Vitalsigns) XXX_Size() int {
	return xxx_messageInfo_Vitalsigns.Size(m)
}
func (m *Vitalsigns) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalsigns.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalsigns proto.InternalMessageInfo

func (m *Vitalsigns) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vitalsigns) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Vitalsigns) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Vitalsigns) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Vitalsigns) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Vitalsigns) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Vitalsigns) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Vitalsigns) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Vitalsigns) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Vitalsigns) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Vitalsigns) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Vitalsigns) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Vitalsigns) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Vitalsigns) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Vitalsigns) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Vitalsigns) GetEffective() *Vitalsigns_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Vitalsigns) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Vitalsigns) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Vitalsigns) GetValue() *Vitalsigns_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Vitalsigns) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Vitalsigns) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Vitalsigns) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Vitalsigns) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Vitalsigns) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Vitalsigns) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Vitalsigns) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Vitalsigns) GetReferenceRange() []*Vitalsigns_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Vitalsigns) GetRelated() []*Vitalsigns_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Vitalsigns) GetComponent() []*Vitalsigns_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Vitalsigns_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Vitalsigns_Effective_DateTime
	//	*Vitalsigns_Effective_Period
	Effective            isVitalsigns_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Vitalsigns_Effective) Reset()         { *m = Vitalsigns_Effective{} }
func (m *Vitalsigns_Effective) String() string { return proto.CompactTextString(m) }
func (*Vitalsigns_Effective) ProtoMessage()    {}
func (*Vitalsigns_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{26, 0}
}

func (m *Vitalsigns_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalsigns_Effective.Unmarshal(m, b)
}
func (m *Vitalsigns_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalsigns_Effective.Marshal(b, m, deterministic)
}
func (m *Vitalsigns_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalsigns_Effective.Merge(m, src)
}
func (m *Vitalsigns_Effective) XXX_Size() int {
	return xxx_messageInfo_Vitalsigns_Effective.Size(m)
}
func (m *Vitalsigns_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalsigns_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalsigns_Effective proto.InternalMessageInfo

type isVitalsigns_Effective_Effective interface {
	isVitalsigns_Effective_Effective()
}

type Vitalsigns_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Vitalsigns_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Vitalsigns_Effective_DateTime) isVitalsigns_Effective_Effective() {}

func (*Vitalsigns_Effective_Period) isVitalsigns_Effective_Effective() {}

func (m *Vitalsigns_Effective) GetEffective() isVitalsigns_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Vitalsigns_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Vitalsigns_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Vitalsigns_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Vitalsigns_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Vitalsigns_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Vitalsigns_Effective_OneofMarshaler, _Vitalsigns_Effective_OneofUnmarshaler, _Vitalsigns_Effective_OneofSizer, []interface{}{
		(*Vitalsigns_Effective_DateTime)(nil),
		(*Vitalsigns_Effective_Period)(nil),
	}
}

func _Vitalsigns_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Vitalsigns_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Vitalsigns_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Vitalsigns_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Vitalsigns_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Vitalsigns_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Vitalsigns_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Vitalsigns_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Vitalsigns_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Vitalsigns_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Vitalsigns_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Vitalsigns_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Vitalsigns_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Vital Sign Value recorded with UCUM
type Vitalsigns_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Vitalsigns_Value_Quantity
	Value                isVitalsigns_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Vitalsigns_Value) Reset()         { *m = Vitalsigns_Value{} }
func (m *Vitalsigns_Value) String() string { return proto.CompactTextString(m) }
func (*Vitalsigns_Value) ProtoMessage()    {}
func (*Vitalsigns_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{26, 1}
}

func (m *Vitalsigns_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalsigns_Value.Unmarshal(m, b)
}
func (m *Vitalsigns_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalsigns_Value.Marshal(b, m, deterministic)
}
func (m *Vitalsigns_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalsigns_Value.Merge(m, src)
}
func (m *Vitalsigns_Value) XXX_Size() int {
	return xxx_messageInfo_Vitalsigns_Value.Size(m)
}
func (m *Vitalsigns_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalsigns_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalsigns_Value proto.InternalMessageInfo

type isVitalsigns_Value_Value interface {
	isVitalsigns_Value_Value()
}

type Vitalsigns_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Vitalsigns_Value_Quantity) isVitalsigns_Value_Value() {}

func (m *Vitalsigns_Value) GetValue() isVitalsigns_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Vitalsigns_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Vitalsigns_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Vitalsigns_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Vitalsigns_Value_OneofMarshaler, _Vitalsigns_Value_OneofUnmarshaler, _Vitalsigns_Value_OneofSizer, []interface{}{
		(*Vitalsigns_Value_Quantity)(nil),
	}
}

func _Vitalsigns_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Vitalsigns_Value)
	// value
	switch x := m.Value.(type) {
	case *Vitalsigns_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Vitalsigns_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Vitalsigns_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Vitalsigns_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Vitalsigns_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Vitalsigns_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Vitalsigns_Value)
	// value
	switch x := m.Value.(type) {
	case *Vitalsigns_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Vitalsigns_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vitalsigns_ReferenceRange) Reset()         { *m = Vitalsigns_ReferenceRange{} }
func (m *Vitalsigns_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Vitalsigns_ReferenceRange) ProtoMessage()    {}
func (*Vitalsigns_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{26, 2}
}

func (m *Vitalsigns_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalsigns_ReferenceRange.Unmarshal(m, b)
}
func (m *Vitalsigns_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalsigns_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Vitalsigns_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalsigns_ReferenceRange.Merge(m, src)
}
func (m *Vitalsigns_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Vitalsigns_ReferenceRange.Size(m)
}
func (m *Vitalsigns_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalsigns_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalsigns_ReferenceRange proto.InternalMessageInfo

func (m *Vitalsigns_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vitalsigns_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Vitalsigns_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Vitalsigns_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Vitalsigns_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Vitalsigns_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Vitalsigns_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Vitalsigns_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Vitalsigns_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Vitalsigns_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Vitalsigns_Related) Reset()         { *m = Vitalsigns_Related{} }
func (m *Vitalsigns_Related) String() string { return proto.CompactTextString(m) }
func (*Vitalsigns_Related) ProtoMessage()    {}
func (*Vitalsigns_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{26, 3}
}

func (m *Vitalsigns_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalsigns_Related.Unmarshal(m, b)
}
func (m *Vitalsigns_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalsigns_Related.Marshal(b, m, deterministic)
}
func (m *Vitalsigns_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalsigns_Related.Merge(m, src)
}
func (m *Vitalsigns_Related) XXX_Size() int {
	return xxx_messageInfo_Vitalsigns_Related.Size(m)
}
func (m *Vitalsigns_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalsigns_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalsigns_Related proto.InternalMessageInfo

func (m *Vitalsigns_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vitalsigns_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Vitalsigns_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Vitalsigns_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Vitalsigns_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Vitalsigns_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Vitalsigns_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Vitalsigns_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Vitalsigns_Component) Reset()         { *m = Vitalsigns_Component{} }
func (m *Vitalsigns_Component) String() string { return proto.CompactTextString(m) }
func (*Vitalsigns_Component) ProtoMessage()    {}
func (*Vitalsigns_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{26, 4}
}

func (m *Vitalsigns_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalsigns_Component.Unmarshal(m, b)
}
func (m *Vitalsigns_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalsigns_Component.Marshal(b, m, deterministic)
}
func (m *Vitalsigns_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalsigns_Component.Merge(m, src)
}
func (m *Vitalsigns_Component) XXX_Size() int {
	return xxx_messageInfo_Vitalsigns_Component.Size(m)
}
func (m *Vitalsigns_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalsigns_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalsigns_Component proto.InternalMessageInfo

func (m *Vitalsigns_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vitalsigns_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Vitalsigns_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Vitalsigns_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Vitalsigns_Component) GetValue() *Vitalsigns_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Vitalsigns_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Vitalsigns_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Vitalsigns_Component) GetReferenceRange() []*Vitalsigns_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Vitalsigns_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Vitalsigns_Component_Value_Quantity
	Value                isVitalsigns_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Vitalsigns_Component_Value) Reset()         { *m = Vitalsigns_Component_Value{} }
func (m *Vitalsigns_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Vitalsigns_Component_Value) ProtoMessage()    {}
func (*Vitalsigns_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{26, 4, 0}
}

func (m *Vitalsigns_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalsigns_Component_Value.Unmarshal(m, b)
}
func (m *Vitalsigns_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalsigns_Component_Value.Marshal(b, m, deterministic)
}
func (m *Vitalsigns_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalsigns_Component_Value.Merge(m, src)
}
func (m *Vitalsigns_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Vitalsigns_Component_Value.Size(m)
}
func (m *Vitalsigns_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalsigns_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalsigns_Component_Value proto.InternalMessageInfo

type isVitalsigns_Component_Value_Value interface {
	isVitalsigns_Component_Value_Value()
}

type Vitalsigns_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Vitalsigns_Component_Value_Quantity) isVitalsigns_Component_Value_Value() {}

func (m *Vitalsigns_Component_Value) GetValue() isVitalsigns_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Vitalsigns_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Vitalsigns_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Vitalsigns_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Vitalsigns_Component_Value_OneofMarshaler, _Vitalsigns_Component_Value_OneofUnmarshaler, _Vitalsigns_Component_Value_OneofSizer, []interface{}{
		(*Vitalsigns_Component_Value_Quantity)(nil),
	}
}

func _Vitalsigns_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Vitalsigns_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Vitalsigns_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Vitalsigns_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Vitalsigns_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Vitalsigns_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Vitalsigns_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Vitalsigns_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Vitalsigns_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Vitalsigns_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for Vital Signs Profile.
// FHIR Vital Signs Panel Profile.
// See http://hl7.org/fhir/StructureDefinition/vitalspanel
type Vitalspanel struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept                  `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	Code     *Vitalspanel_CodeableConceptForCode `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference             `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *Vitalspanel_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                    `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*Vitalspanel_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*Vitalspanel_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*Vitalspanel_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Vitalspanel) Reset()         { *m = Vitalspanel{} }
func (m *Vitalspanel) String() string { return proto.CompactTextString(m) }
func (*Vitalspanel) ProtoMessage()    {}
func (*Vitalspanel) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{27}
}

func (m *Vitalspanel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalspanel.Unmarshal(m, b)
}
func (m *Vitalspanel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalspanel.Marshal(b, m, deterministic)
}
func (m *Vitalspanel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalspanel.Merge(m, src)
}
func (m *Vitalspanel) XXX_Size() int {
	return xxx_messageInfo_Vitalspanel.Size(m)
}
func (m *Vitalspanel) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalspanel.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalspanel proto.InternalMessageInfo

func (m *Vitalspanel) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vitalspanel) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Vitalspanel) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *Vitalspanel) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Vitalspanel) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Vitalspanel) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *Vitalspanel) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Vitalspanel) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Vitalspanel) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Vitalspanel) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *Vitalspanel) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Vitalspanel) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Vitalspanel) GetCode() *Vitalspanel_CodeableConceptForCode {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Vitalspanel) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Vitalspanel) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Vitalspanel) GetEffective() *Vitalspanel_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Vitalspanel) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *Vitalspanel) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *Vitalspanel) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Vitalspanel) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Vitalspanel) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Vitalspanel) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *Vitalspanel) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Vitalspanel) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *Vitalspanel) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Vitalspanel) GetReferenceRange() []*Vitalspanel_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *Vitalspanel) GetRelated() []*Vitalspanel_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Vitalspanel) GetComponent() []*Vitalspanel_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Vital Signs Panel
type Vitalspanel_CodeableConceptForCode struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Code defined by a terminology system
	Coding []*Coding `protobuf:"bytes,3,rep,name=coding,proto3" json:"coding,omitempty"`
	// Plain text representation of the concept
	Text                 *String                `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	BodyWeightCode       []*CodingWithFixedCode `protobuf:"bytes,5,rep,name=body_weight_code,json=bodyWeightCode,proto3" json:"body_weight_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Vitalspanel_CodeableConceptForCode) Reset()         { *m = Vitalspanel_CodeableConceptForCode{} }
func (m *Vitalspanel_CodeableConceptForCode) String() string { return proto.CompactTextString(m) }
func (*Vitalspanel_CodeableConceptForCode) ProtoMessage()    {}
func (*Vitalspanel_CodeableConceptForCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{27, 0}
}

func (m *Vitalspanel_CodeableConceptForCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalspanel_CodeableConceptForCode.Unmarshal(m, b)
}
func (m *Vitalspanel_CodeableConceptForCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalspanel_CodeableConceptForCode.Marshal(b, m, deterministic)
}
func (m *Vitalspanel_CodeableConceptForCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalspanel_CodeableConceptForCode.Merge(m, src)
}
func (m *Vitalspanel_CodeableConceptForCode) XXX_Size() int {
	return xxx_messageInfo_Vitalspanel_CodeableConceptForCode.Size(m)
}
func (m *Vitalspanel_CodeableConceptForCode) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalspanel_CodeableConceptForCode.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalspanel_CodeableConceptForCode proto.InternalMessageInfo

func (m *Vitalspanel_CodeableConceptForCode) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vitalspanel_CodeableConceptForCode) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Vitalspanel_CodeableConceptForCode) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Vitalspanel_CodeableConceptForCode) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Vitalspanel_CodeableConceptForCode) GetBodyWeightCode() []*CodingWithFixedCode {
	if m != nil {
		return m.BodyWeightCode
	}
	return nil
}

// Often just a dateTime for Vital Signs
type Vitalspanel_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*Vitalspanel_Effective_DateTime
	//	*Vitalspanel_Effective_Period
	Effective            isVitalspanel_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Vitalspanel_Effective) Reset()         { *m = Vitalspanel_Effective{} }
func (m *Vitalspanel_Effective) String() string { return proto.CompactTextString(m) }
func (*Vitalspanel_Effective) ProtoMessage()    {}
func (*Vitalspanel_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{27, 1}
}

func (m *Vitalspanel_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalspanel_Effective.Unmarshal(m, b)
}
func (m *Vitalspanel_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalspanel_Effective.Marshal(b, m, deterministic)
}
func (m *Vitalspanel_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalspanel_Effective.Merge(m, src)
}
func (m *Vitalspanel_Effective) XXX_Size() int {
	return xxx_messageInfo_Vitalspanel_Effective.Size(m)
}
func (m *Vitalspanel_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalspanel_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalspanel_Effective proto.InternalMessageInfo

type isVitalspanel_Effective_Effective interface {
	isVitalspanel_Effective_Effective()
}

type Vitalspanel_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Vitalspanel_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*Vitalspanel_Effective_DateTime) isVitalspanel_Effective_Effective() {}

func (*Vitalspanel_Effective_Period) isVitalspanel_Effective_Effective() {}

func (m *Vitalspanel_Effective) GetEffective() isVitalspanel_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *Vitalspanel_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*Vitalspanel_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *Vitalspanel_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*Vitalspanel_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Vitalspanel_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Vitalspanel_Effective_OneofMarshaler, _Vitalspanel_Effective_OneofUnmarshaler, _Vitalspanel_Effective_OneofSizer, []interface{}{
		(*Vitalspanel_Effective_DateTime)(nil),
		(*Vitalspanel_Effective_Period)(nil),
	}
}

func _Vitalspanel_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Vitalspanel_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Vitalspanel_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *Vitalspanel_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Vitalspanel_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _Vitalspanel_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Vitalspanel_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &Vitalspanel_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &Vitalspanel_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Vitalspanel_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Vitalspanel_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *Vitalspanel_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Vitalspanel_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type Vitalspanel_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vitalspanel_ReferenceRange) Reset()         { *m = Vitalspanel_ReferenceRange{} }
func (m *Vitalspanel_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*Vitalspanel_ReferenceRange) ProtoMessage()    {}
func (*Vitalspanel_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{27, 2}
}

func (m *Vitalspanel_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalspanel_ReferenceRange.Unmarshal(m, b)
}
func (m *Vitalspanel_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalspanel_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *Vitalspanel_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalspanel_ReferenceRange.Merge(m, src)
}
func (m *Vitalspanel_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_Vitalspanel_ReferenceRange.Size(m)
}
func (m *Vitalspanel_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalspanel_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalspanel_ReferenceRange proto.InternalMessageInfo

func (m *Vitalspanel_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vitalspanel_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Vitalspanel_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Vitalspanel_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Vitalspanel_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Vitalspanel_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Vitalspanel_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *Vitalspanel_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *Vitalspanel_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Used when reporting vital signs panel components
type Vitalspanel_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Vitalspanel_Related) Reset()         { *m = Vitalspanel_Related{} }
func (m *Vitalspanel_Related) String() string { return proto.CompactTextString(m) }
func (*Vitalspanel_Related) ProtoMessage()    {}
func (*Vitalspanel_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{27, 3}
}

func (m *Vitalspanel_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalspanel_Related.Unmarshal(m, b)
}
func (m *Vitalspanel_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalspanel_Related.Marshal(b, m, deterministic)
}
func (m *Vitalspanel_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalspanel_Related.Merge(m, src)
}
func (m *Vitalspanel_Related) XXX_Size() int {
	return xxx_messageInfo_Vitalspanel_Related.Size(m)
}
func (m *Vitalspanel_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalspanel_Related.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalspanel_Related proto.InternalMessageInfo

func (m *Vitalspanel_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vitalspanel_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Vitalspanel_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Vitalspanel_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Vitalspanel_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Used when reporting systolic and diastolic blood pressure.
type Vitalspanel_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept             `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *Vitalspanel_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*Vitalspanel_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Vitalspanel_Component) Reset()         { *m = Vitalspanel_Component{} }
func (m *Vitalspanel_Component) String() string { return proto.CompactTextString(m) }
func (*Vitalspanel_Component) ProtoMessage()    {}
func (*Vitalspanel_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{27, 4}
}

func (m *Vitalspanel_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalspanel_Component.Unmarshal(m, b)
}
func (m *Vitalspanel_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalspanel_Component.Marshal(b, m, deterministic)
}
func (m *Vitalspanel_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalspanel_Component.Merge(m, src)
}
func (m *Vitalspanel_Component) XXX_Size() int {
	return xxx_messageInfo_Vitalspanel_Component.Size(m)
}
func (m *Vitalspanel_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalspanel_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalspanel_Component proto.InternalMessageInfo

func (m *Vitalspanel_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vitalspanel_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *Vitalspanel_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *Vitalspanel_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Vitalspanel_Component) GetValue() *Vitalspanel_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Vitalspanel_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *Vitalspanel_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *Vitalspanel_Component) GetReferenceRange() []*Vitalspanel_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Vital Sign Value recorded with UCUM
type Vitalspanel_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Vitalspanel_Component_Value_Quantity
	Value                isVitalspanel_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Vitalspanel_Component_Value) Reset()         { *m = Vitalspanel_Component_Value{} }
func (m *Vitalspanel_Component_Value) String() string { return proto.CompactTextString(m) }
func (*Vitalspanel_Component_Value) ProtoMessage()    {}
func (*Vitalspanel_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_316add049890f582, []int{27, 4, 0}
}

func (m *Vitalspanel_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vitalspanel_Component_Value.Unmarshal(m, b)
}
func (m *Vitalspanel_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vitalspanel_Component_Value.Marshal(b, m, deterministic)
}
func (m *Vitalspanel_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vitalspanel_Component_Value.Merge(m, src)
}
func (m *Vitalspanel_Component_Value) XXX_Size() int {
	return xxx_messageInfo_Vitalspanel_Component_Value.Size(m)
}
func (m *Vitalspanel_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Vitalspanel_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Vitalspanel_Component_Value proto.InternalMessageInfo

type isVitalspanel_Component_Value_Value interface {
	isVitalspanel_Component_Value_Value()
}

type Vitalspanel_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

func (*Vitalspanel_Component_Value_Quantity) isVitalspanel_Component_Value_Value() {}

func (m *Vitalspanel_Component_Value) GetValue() isVitalspanel_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Vitalspanel_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*Vitalspanel_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Vitalspanel_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Vitalspanel_Component_Value_OneofMarshaler, _Vitalspanel_Component_Value_OneofUnmarshaler, _Vitalspanel_Component_Value_OneofSizer, []interface{}{
		(*Vitalspanel_Component_Value_Quantity)(nil),
	}
}

func _Vitalspanel_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Vitalspanel_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Vitalspanel_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Vitalspanel_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Vitalspanel_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Vitalspanel_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &Vitalspanel_Component_Value_Quantity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Vitalspanel_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Vitalspanel_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *Vitalspanel_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Bmi)(nil), "google.fhir.stu3.proto.Bmi")
	proto.RegisterType((*Bmi_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Bmi.CodeableConceptForCode")
	proto.RegisterType((*Bmi_Effective)(nil), "google.fhir.stu3.proto.Bmi.Effective")
	proto.RegisterType((*Bmi_Value)(nil), "google.fhir.stu3.proto.Bmi.Value")
	proto.RegisterType((*Bmi_ReferenceRange)(nil), "google.fhir.stu3.proto.Bmi.ReferenceRange")
	proto.RegisterType((*Bmi_Related)(nil), "google.fhir.stu3.proto.Bmi.Related")
	proto.RegisterType((*Bmi_Component)(nil), "google.fhir.stu3.proto.Bmi.Component")
	proto.RegisterType((*Bmi_Component_Value)(nil), "google.fhir.stu3.proto.Bmi.Component.Value")
	proto.RegisterType((*Bodyheight)(nil), "google.fhir.stu3.proto.Bodyheight")
	proto.RegisterType((*Bodyheight_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Bodyheight.CodeableConceptForCode")
	proto.RegisterType((*Bodyheight_Effective)(nil), "google.fhir.stu3.proto.Bodyheight.Effective")
	proto.RegisterType((*Bodyheight_Value)(nil), "google.fhir.stu3.proto.Bodyheight.Value")
	proto.RegisterType((*Bodyheight_ReferenceRange)(nil), "google.fhir.stu3.proto.Bodyheight.ReferenceRange")
	proto.RegisterType((*Bodyheight_Related)(nil), "google.fhir.stu3.proto.Bodyheight.Related")
	proto.RegisterType((*Bodyheight_Component)(nil), "google.fhir.stu3.proto.Bodyheight.Component")
	proto.RegisterType((*Bodyheight_Component_Value)(nil), "google.fhir.stu3.proto.Bodyheight.Component.Value")
	proto.RegisterType((*Bodylength)(nil), "google.fhir.stu3.proto.Bodylength")
	proto.RegisterType((*Bodylength_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Bodylength.CodeableConceptForCode")
	proto.RegisterType((*Bodylength_Effective)(nil), "google.fhir.stu3.proto.Bodylength.Effective")
	proto.RegisterType((*Bodylength_Value)(nil), "google.fhir.stu3.proto.Bodylength.Value")
	proto.RegisterType((*Bodylength_ReferenceRange)(nil), "google.fhir.stu3.proto.Bodylength.ReferenceRange")
	proto.RegisterType((*Bodylength_Related)(nil), "google.fhir.stu3.proto.Bodylength.Related")
	proto.RegisterType((*Bodylength_Component)(nil), "google.fhir.stu3.proto.Bodylength.Component")
	proto.RegisterType((*Bodylength_Component_Value)(nil), "google.fhir.stu3.proto.Bodylength.Component.Value")
	proto.RegisterType((*Bodytemp)(nil), "google.fhir.stu3.proto.Bodytemp")
	proto.RegisterType((*Bodytemp_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Bodytemp.CodeableConceptForCode")
	proto.RegisterType((*Bodytemp_Effective)(nil), "google.fhir.stu3.proto.Bodytemp.Effective")
	proto.RegisterType((*Bodytemp_Value)(nil), "google.fhir.stu3.proto.Bodytemp.Value")
	proto.RegisterType((*Bodytemp_ReferenceRange)(nil), "google.fhir.stu3.proto.Bodytemp.ReferenceRange")
	proto.RegisterType((*Bodytemp_Related)(nil), "google.fhir.stu3.proto.Bodytemp.Related")
	proto.RegisterType((*Bodytemp_Component)(nil), "google.fhir.stu3.proto.Bodytemp.Component")
	proto.RegisterType((*Bodytemp_Component_Value)(nil), "google.fhir.stu3.proto.Bodytemp.Component.Value")
	proto.RegisterType((*Bodyweight)(nil), "google.fhir.stu3.proto.Bodyweight")
	proto.RegisterType((*Bodyweight_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Bodyweight.CodeableConceptForCode")
	proto.RegisterType((*Bodyweight_Effective)(nil), "google.fhir.stu3.proto.Bodyweight.Effective")
	proto.RegisterType((*Bodyweight_Value)(nil), "google.fhir.stu3.proto.Bodyweight.Value")
	proto.RegisterType((*Bodyweight_ReferenceRange)(nil), "google.fhir.stu3.proto.Bodyweight.ReferenceRange")
	proto.RegisterType((*Bodyweight_Related)(nil), "google.fhir.stu3.proto.Bodyweight.Related")
	proto.RegisterType((*Bodyweight_Component)(nil), "google.fhir.stu3.proto.Bodyweight.Component")
	proto.RegisterType((*Bodyweight_Component_Value)(nil), "google.fhir.stu3.proto.Bodyweight.Component.Value")
	proto.RegisterType((*Bp)(nil), "google.fhir.stu3.proto.Bp")
	proto.RegisterType((*Bp_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Bp.CodeableConceptForCode")
	proto.RegisterType((*Bp_Effective)(nil), "google.fhir.stu3.proto.Bp.Effective")
	proto.RegisterType((*Bp_ReferenceRange)(nil), "google.fhir.stu3.proto.Bp.ReferenceRange")
	proto.RegisterType((*Bp_Related)(nil), "google.fhir.stu3.proto.Bp.Related")
	proto.RegisterType((*Bp_Component)(nil), "google.fhir.stu3.proto.Bp.Component")
	proto.RegisterType((*Bp_SystolicBP)(nil), "google.fhir.stu3.proto.Bp.SystolicBP")
	proto.RegisterType((*Bp_SystolicBP_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Bp.SystolicBP.CodeableConceptForCode")
	proto.RegisterType((*Bp_SystolicBP_Value)(nil), "google.fhir.stu3.proto.Bp.SystolicBP.Value")
	proto.RegisterType((*Bp_DiastolicBP)(nil), "google.fhir.stu3.proto.Bp.DiastolicBP")
	proto.RegisterType((*Bp_DiastolicBP_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Bp.DiastolicBP.CodeableConceptForCode")
	proto.RegisterType((*Bp_DiastolicBP_Value)(nil), "google.fhir.stu3.proto.Bp.DiastolicBP.Value")
	proto.RegisterType((*Cholesterol)(nil), "google.fhir.stu3.proto.Cholesterol")
	proto.RegisterType((*Cholesterol_Effective)(nil), "google.fhir.stu3.proto.Cholesterol.Effective")
	proto.RegisterType((*Cholesterol_Value)(nil), "google.fhir.stu3.proto.Cholesterol.Value")
	proto.RegisterType((*Cholesterol_ReferenceRange)(nil), "google.fhir.stu3.proto.Cholesterol.ReferenceRange")
	proto.RegisterType((*Cholesterol_Component)(nil), "google.fhir.stu3.proto.Cholesterol.Component")
	proto.RegisterType((*Cholesterol_Component_Value)(nil), "google.fhir.stu3.proto.Cholesterol.Component.Value")
	proto.RegisterType((*Clinicaldocument)(nil), "google.fhir.stu3.proto.Clinicaldocument")
	proto.RegisterType((*Clinicaldocument_Attester)(nil), "google.fhir.stu3.proto.Clinicaldocument.Attester")
	proto.RegisterType((*Clinicaldocument_RelatesTo)(nil), "google.fhir.stu3.proto.Clinicaldocument.RelatesTo")
	proto.RegisterType((*Clinicaldocument_RelatesTo_Target)(nil), "google.fhir.stu3.proto.Clinicaldocument.RelatesTo.Target")
	proto.RegisterType((*Clinicaldocument_Event)(nil), "google.fhir.stu3.proto.Clinicaldocument.Event")
	proto.RegisterType((*Clinicaldocument_Section)(nil), "google.fhir.stu3.proto.Clinicaldocument.Section")
	proto.RegisterType((*Devicemetricobservation)(nil), "google.fhir.stu3.proto.Devicemetricobservation")
	proto.RegisterType((*Devicemetricobservation_Effective)(nil), "google.fhir.stu3.proto.Devicemetricobservation.Effective")
	proto.RegisterType((*Devicemetricobservation_Value)(nil), "google.fhir.stu3.proto.Devicemetricobservation.Value")
	proto.RegisterType((*Devicemetricobservation_ReferenceRange)(nil), "google.fhir.stu3.proto.Devicemetricobservation.ReferenceRange")
	proto.RegisterType((*Devicemetricobservation_Related)(nil), "google.fhir.stu3.proto.Devicemetricobservation.Related")
	proto.RegisterType((*Devicemetricobservation_Component)(nil), "google.fhir.stu3.proto.Devicemetricobservation.Component")
	proto.RegisterType((*Devicemetricobservation_Component_Value)(nil), "google.fhir.stu3.proto.Devicemetricobservation.Component.Value")
	proto.RegisterType((*DiagnosticreportGenetics)(nil), "google.fhir.stu3.proto.DiagnosticreportGenetics")
	proto.RegisterType((*DiagnosticreportGenetics_Effective)(nil), "google.fhir.stu3.proto.DiagnosticreportGenetics.Effective")
	proto.RegisterType((*DiagnosticreportGenetics_Performer)(nil), "google.fhir.stu3.proto.DiagnosticreportGenetics.Performer")
	proto.RegisterType((*DiagnosticreportGenetics_Image)(nil), "google.fhir.stu3.proto.DiagnosticreportGenetics.Image")
	proto.RegisterType((*ElementdefinitionDe)(nil), "google.fhir.stu3.proto.ElementdefinitionDe")
	proto.RegisterType((*ElementdefinitionDe_Base)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.Base")
	proto.RegisterType((*ElementdefinitionDe_TypeRef)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.TypeRef")
	proto.RegisterType((*ElementdefinitionDe_DefaultValue)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.DefaultValue")
	proto.RegisterType((*ElementdefinitionDe_Example)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.Example")
	proto.RegisterType((*ElementdefinitionDe_Example_Value)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.Example.Value")
	proto.RegisterType((*ElementdefinitionDe_MinValue)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.MinValue")
	proto.RegisterType((*ElementdefinitionDe_MaxValue)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.MaxValue")
	proto.RegisterType((*ElementdefinitionDe_Constraint)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.Constraint")
	proto.RegisterType((*ElementdefinitionDe_ElementDefinitionBinding)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.ElementDefinitionBinding")
	proto.RegisterType((*ElementdefinitionDe_ElementDefinitionBinding_ValueSet)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.ElementDefinitionBinding.ValueSet")
	proto.RegisterType((*ElementdefinitionDe_Mapping)(nil), "google.fhir.stu3.proto.ElementdefinitionDe.Mapping")
	proto.RegisterType((*FamilymemberhistoryGenetic)(nil), "google.fhir.stu3.proto.FamilymemberhistoryGenetic")
	proto.RegisterType((*FamilymemberhistoryGenetic_Born)(nil), "google.fhir.stu3.proto.FamilymemberhistoryGenetic.Born")
	proto.RegisterType((*FamilymemberhistoryGenetic_Age)(nil), "google.fhir.stu3.proto.FamilymemberhistoryGenetic.Age")
	proto.RegisterType((*FamilymemberhistoryGenetic_Deceased)(nil), "google.fhir.stu3.proto.FamilymemberhistoryGenetic.Deceased")
	proto.RegisterType((*FamilymemberhistoryGenetic_Condition)(nil), "google.fhir.stu3.proto.FamilymemberhistoryGenetic.Condition")
	proto.RegisterType((*FamilymemberhistoryGenetic_Condition_Onset)(nil), "google.fhir.stu3.proto.FamilymemberhistoryGenetic.Condition.Onset")
	proto.RegisterType((*Hdlcholesterol)(nil), "google.fhir.stu3.proto.Hdlcholesterol")
	proto.RegisterType((*Hdlcholesterol_Effective)(nil), "google.fhir.stu3.proto.Hdlcholesterol.Effective")
	proto.RegisterType((*Hdlcholesterol_Value)(nil), "google.fhir.stu3.proto.Hdlcholesterol.Value")
	proto.RegisterType((*Hdlcholesterol_ReferenceRange)(nil), "google.fhir.stu3.proto.Hdlcholesterol.ReferenceRange")
	proto.RegisterType((*Hdlcholesterol_Component)(nil), "google.fhir.stu3.proto.Hdlcholesterol.Component")
	proto.RegisterType((*Hdlcholesterol_Component_Value)(nil), "google.fhir.stu3.proto.Hdlcholesterol.Component.Value")
	proto.RegisterType((*Headcircum)(nil), "google.fhir.stu3.proto.Headcircum")
	proto.RegisterType((*Headcircum_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Headcircum.CodeableConceptForCode")
	proto.RegisterType((*Headcircum_Effective)(nil), "google.fhir.stu3.proto.Headcircum.Effective")
	proto.RegisterType((*Headcircum_Value)(nil), "google.fhir.stu3.proto.Headcircum.Value")
	proto.RegisterType((*Headcircum_ReferenceRange)(nil), "google.fhir.stu3.proto.Headcircum.ReferenceRange")
	proto.RegisterType((*Headcircum_Related)(nil), "google.fhir.stu3.proto.Headcircum.Related")
	proto.RegisterType((*Headcircum_Component)(nil), "google.fhir.stu3.proto.Headcircum.Component")
	proto.RegisterType((*Headcircum_Component_Value)(nil), "google.fhir.stu3.proto.Headcircum.Component.Value")
	proto.RegisterType((*Heartrate)(nil), "google.fhir.stu3.proto.Heartrate")
	proto.RegisterType((*Heartrate_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Heartrate.CodeableConceptForCode")
	proto.RegisterType((*Heartrate_Effective)(nil), "google.fhir.stu3.proto.Heartrate.Effective")
	proto.RegisterType((*Heartrate_Value)(nil), "google.fhir.stu3.proto.Heartrate.Value")
	proto.RegisterType((*Heartrate_ReferenceRange)(nil), "google.fhir.stu3.proto.Heartrate.ReferenceRange")
	proto.RegisterType((*Heartrate_Related)(nil), "google.fhir.stu3.proto.Heartrate.Related")
	proto.RegisterType((*Heartrate_Component)(nil), "google.fhir.stu3.proto.Heartrate.Component")
	proto.RegisterType((*Heartrate_Component_Value)(nil), "google.fhir.stu3.proto.Heartrate.Component.Value")
	proto.RegisterType((*Hlaresult)(nil), "google.fhir.stu3.proto.Hlaresult")
	proto.RegisterType((*Hlaresult_Effective)(nil), "google.fhir.stu3.proto.Hlaresult.Effective")
	proto.RegisterType((*Hlaresult_Performer)(nil), "google.fhir.stu3.proto.Hlaresult.Performer")
	proto.RegisterType((*Hlaresult_Image)(nil), "google.fhir.stu3.proto.Hlaresult.Image")
	proto.RegisterType((*Ldlcholesterol)(nil), "google.fhir.stu3.proto.Ldlcholesterol")
	proto.RegisterType((*Ldlcholesterol_Effective)(nil), "google.fhir.stu3.proto.Ldlcholesterol.Effective")
	proto.RegisterType((*Ldlcholesterol_Value)(nil), "google.fhir.stu3.proto.Ldlcholesterol.Value")
	proto.RegisterType((*Ldlcholesterol_ReferenceRange)(nil), "google.fhir.stu3.proto.Ldlcholesterol.ReferenceRange")
	proto.RegisterType((*Ldlcholesterol_Component)(nil), "google.fhir.stu3.proto.Ldlcholesterol.Component")
	proto.RegisterType((*Ldlcholesterol_Component_Value)(nil), "google.fhir.stu3.proto.Ldlcholesterol.Component.Value")
	proto.RegisterType((*Lipidprofile)(nil), "google.fhir.stu3.proto.Lipidprofile")
	proto.RegisterType((*Lipidprofile_Effective)(nil), "google.fhir.stu3.proto.Lipidprofile.Effective")
	proto.RegisterType((*Lipidprofile_Performer)(nil), "google.fhir.stu3.proto.Lipidprofile.Performer")
	proto.RegisterType((*Lipidprofile_Image)(nil), "google.fhir.stu3.proto.Lipidprofile.Image")
	proto.RegisterType((*MetadataResource)(nil), "google.fhir.stu3.proto.MetadataResource")
	proto.RegisterType((*ObservationGenetics)(nil), "google.fhir.stu3.proto.ObservationGenetics")
	proto.RegisterType((*ObservationGenetics_Effective)(nil), "google.fhir.stu3.proto.ObservationGenetics.Effective")
	proto.RegisterType((*ObservationGenetics_Value)(nil), "google.fhir.stu3.proto.ObservationGenetics.Value")
	proto.RegisterType((*ObservationGenetics_ReferenceRange)(nil), "google.fhir.stu3.proto.ObservationGenetics.ReferenceRange")
	proto.RegisterType((*ObservationGenetics_Related)(nil), "google.fhir.stu3.proto.ObservationGenetics.Related")
	proto.RegisterType((*ObservationGenetics_Component)(nil), "google.fhir.stu3.proto.ObservationGenetics.Component")
	proto.RegisterType((*ObservationGenetics_Component_Value)(nil), "google.fhir.stu3.proto.ObservationGenetics.Component.Value")
	proto.RegisterType((*Oxygensat)(nil), "google.fhir.stu3.proto.Oxygensat")
	proto.RegisterType((*Oxygensat_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Oxygensat.CodeableConceptForCode")
	proto.RegisterType((*Oxygensat_Effective)(nil), "google.fhir.stu3.proto.Oxygensat.Effective")
	proto.RegisterType((*Oxygensat_Value)(nil), "google.fhir.stu3.proto.Oxygensat.Value")
	proto.RegisterType((*Oxygensat_ReferenceRange)(nil), "google.fhir.stu3.proto.Oxygensat.ReferenceRange")
	proto.RegisterType((*Oxygensat_Related)(nil), "google.fhir.stu3.proto.Oxygensat.Related")
	proto.RegisterType((*Oxygensat_Component)(nil), "google.fhir.stu3.proto.Oxygensat.Component")
	proto.RegisterType((*Oxygensat_Component_Value)(nil), "google.fhir.stu3.proto.Oxygensat.Component.Value")
	proto.RegisterType((*ProcedurerequestGenetics)(nil), "google.fhir.stu3.proto.ProcedurerequestGenetics")
	proto.RegisterType((*ProcedurerequestGenetics_Occurrence)(nil), "google.fhir.stu3.proto.ProcedurerequestGenetics.Occurrence")
	proto.RegisterType((*ProcedurerequestGenetics_AsNeeded)(nil), "google.fhir.stu3.proto.ProcedurerequestGenetics.AsNeeded")
	proto.RegisterType((*ProcedurerequestGenetics_Requester)(nil), "google.fhir.stu3.proto.ProcedurerequestGenetics.Requester")
	proto.RegisterType((*Resprate)(nil), "google.fhir.stu3.proto.Resprate")
	proto.RegisterType((*Resprate_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Resprate.CodeableConceptForCode")
	proto.RegisterType((*Resprate_Effective)(nil), "google.fhir.stu3.proto.Resprate.Effective")
	proto.RegisterType((*Resprate_Value)(nil), "google.fhir.stu3.proto.Resprate.Value")
	proto.RegisterType((*Resprate_ReferenceRange)(nil), "google.fhir.stu3.proto.Resprate.ReferenceRange")
	proto.RegisterType((*Resprate_Related)(nil), "google.fhir.stu3.proto.Resprate.Related")
	proto.RegisterType((*Resprate_Component)(nil), "google.fhir.stu3.proto.Resprate.Component")
	proto.RegisterType((*Resprate_Component_Value)(nil), "google.fhir.stu3.proto.Resprate.Component.Value")
	proto.RegisterType((*Shareablecodesystem)(nil), "google.fhir.stu3.proto.Shareablecodesystem")
	proto.RegisterType((*Shareablecodesystem_Filter)(nil), "google.fhir.stu3.proto.Shareablecodesystem.Filter")
	proto.RegisterType((*Shareablecodesystem_Property)(nil), "google.fhir.stu3.proto.Shareablecodesystem.Property")
	proto.RegisterType((*Shareablecodesystem_ConceptDefinition)(nil), "google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition")
	proto.RegisterType((*Shareablecodesystem_ConceptDefinition_Designation)(nil), "google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.Designation")
	proto.RegisterType((*Shareablecodesystem_ConceptDefinition_ConceptProperty)(nil), "google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.ConceptProperty")
	proto.RegisterType((*Shareablecodesystem_ConceptDefinition_ConceptProperty_Value)(nil), "google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.ConceptProperty.Value")
	proto.RegisterType((*Shareablevalueset)(nil), "google.fhir.stu3.proto.Shareablevalueset")
	proto.RegisterType((*Shareablevalueset_Compose)(nil), "google.fhir.stu3.proto.Shareablevalueset.Compose")
	proto.RegisterType((*Shareablevalueset_Compose_ConceptSet)(nil), "google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet")
	proto.RegisterType((*Shareablevalueset_Compose_ConceptSet_ConceptReference)(nil), "google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.ConceptReference")
	proto.RegisterType((*Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation)(nil), "google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.ConceptReference.Designation")
	proto.RegisterType((*Shareablevalueset_Compose_ConceptSet_Filter)(nil), "google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.Filter")
	proto.RegisterType((*Shareablevalueset_Expansion)(nil), "google.fhir.stu3.proto.Shareablevalueset.Expansion")
	proto.RegisterType((*Shareablevalueset_Expansion_Parameter)(nil), "google.fhir.stu3.proto.Shareablevalueset.Expansion.Parameter")
	proto.RegisterType((*Shareablevalueset_Expansion_Parameter_Value)(nil), "google.fhir.stu3.proto.Shareablevalueset.Expansion.Parameter.Value")
	proto.RegisterType((*Shareablevalueset_Expansion_Contains)(nil), "google.fhir.stu3.proto.Shareablevalueset.Expansion.Contains")
	proto.RegisterType((*Triglyceride)(nil), "google.fhir.stu3.proto.Triglyceride")
	proto.RegisterType((*Triglyceride_Effective)(nil), "google.fhir.stu3.proto.Triglyceride.Effective")
	proto.RegisterType((*Triglyceride_Value)(nil), "google.fhir.stu3.proto.Triglyceride.Value")
	proto.RegisterType((*Triglyceride_ReferenceRange)(nil), "google.fhir.stu3.proto.Triglyceride.ReferenceRange")
	proto.RegisterType((*Triglyceride_Component)(nil), "google.fhir.stu3.proto.Triglyceride.Component")
	proto.RegisterType((*Triglyceride_Component_Value)(nil), "google.fhir.stu3.proto.Triglyceride.Component.Value")
	proto.RegisterType((*Vitalsigns)(nil), "google.fhir.stu3.proto.Vitalsigns")
	proto.RegisterType((*Vitalsigns_Effective)(nil), "google.fhir.stu3.proto.Vitalsigns.Effective")
	proto.RegisterType((*Vitalsigns_Value)(nil), "google.fhir.stu3.proto.Vitalsigns.Value")
	proto.RegisterType((*Vitalsigns_ReferenceRange)(nil), "google.fhir.stu3.proto.Vitalsigns.ReferenceRange")
	proto.RegisterType((*Vitalsigns_Related)(nil), "google.fhir.stu3.proto.Vitalsigns.Related")
	proto.RegisterType((*Vitalsigns_Component)(nil), "google.fhir.stu3.proto.Vitalsigns.Component")
	proto.RegisterType((*Vitalsigns_Component_Value)(nil), "google.fhir.stu3.proto.Vitalsigns.Component.Value")
	proto.RegisterType((*Vitalspanel)(nil), "google.fhir.stu3.proto.Vitalspanel")
	proto.RegisterType((*Vitalspanel_CodeableConceptForCode)(nil), "google.fhir.stu3.proto.Vitalspanel.CodeableConceptForCode")
	proto.RegisterType((*Vitalspanel_Effective)(nil), "google.fhir.stu3.proto.Vitalspanel.Effective")
	proto.RegisterType((*Vitalspanel_ReferenceRange)(nil), "google.fhir.stu3.proto.Vitalspanel.ReferenceRange")
	proto.RegisterType((*Vitalspanel_Related)(nil), "google.fhir.stu3.proto.Vitalspanel.Related")
	proto.RegisterType((*Vitalspanel_Component)(nil), "google.fhir.stu3.proto.Vitalspanel.Component")
	proto.RegisterType((*Vitalspanel_Component_Value)(nil), "google.fhir.stu3.proto.Vitalspanel.Component.Value")
}

func init() { proto.RegisterFile("proto/stu3/profiles.proto", fileDescriptor_316add049890f582) }

var fileDescriptor_316add049890f582 = []byte{
	// 11705 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x7b, 0x70, 0x1c, 0xc9,
	0x7d, 0x1f, 0xce, 0x05, 0xf6, 0xd9, 0x78, 0x90, 0x6c, 0xf2, 0xee, 0xf6, 0xf6, 0xde, 0xb8, 0x37,
	0xef, 0x00, 0xf2, 0x40, 0x02, 0x04, 0xc1, 0xc7, 0x11, 0x0b, 0x90, 0x07, 0x90, 0x04, 0x01, 0x0e,
	0x78, 0x3c, 0xde, 0xdd, 0xef, 0xa7, 0xf5, 0x60, 0xa7, 0xb1, 0x3b, 0xba, 0xd9, 0x99, 0xd5, 0xcc,
	0x2c, 0x89, 0x3d, 0x39, 0x71, 0x64, 0xab, 0xa2, 0x4a, 0x1c, 0x25, 0x97, 0xc8, 0xb1, 0x4a, 0x89,
	0x1c, 0xa9, 0x94, 0x2a, 0x95, 0x4e, 0xb6, 0x25, 0xc7, 0x57, 0x89, 0x1c, 0x4b, 0x96, 0x62, 0xbb,
	0xca, 0x29, 0x59, 0x7f, 0x44, 0x71, 0xc5, 0x8e, 0x2b, 0x95, 0x54, 0x22, 0xcb, 0x55, 0x4a, 0x25,
	0x29, 0xc7, 0xe5, 0xa8, 0x5c, 0xb1, 0xec, 0x44, 0xa9, 0x7e, 0xcc, 0x6b, 0x9f, 0x3d, 0xb3, 0x0b,
	0x12, 0x58, 0xf4, 0x7f, 0xd8, 0x41, 0x7f, 0xbf, 0xfd, 0x9d, 0xee, 0x9e, 0xef, 0xe3, 0xd3, 0xdf,
	0xfe, 0x36, 0x78, 0xb8, 0x6a, 0x1a, 0xb6, 0x71, 0xdc, 0xb2, 0x6b, 0x27, 0x8f, 0x57, 0x4d, 0x63,
	0x4b, 0xd5, 0x90, 0x35, 0x45, 0x9e, 0xc1, 0x07, 0x4b, 0x86, 0x51, 0xd2, 0xd0, 0xd4, 0x56, 0x59,
	0x35, 0xa7, 0x70, 0x03, 0xfa, 0x3c, 0xf7, 0xa8, 0x8f, 0x44, 0xd6, 0x75, 0xc3, 0x96, 0x6d, 0xd5,
	0xd0, 0x19, 0x55, 0xee, 0x41, 0xdf, 0x7f, 0x8b, 0x86, 0xe2, 0x70, 0xcb, 0xe5, 0x7c, 0xcf, 0x15,
	0xd9, 0x96, 0xed, 0x7a, 0xd5, 0xfd, 0xdf, 0x23, 0xbe, 0xff, 0xa1, 0x6d, 0x1b, 0xe9, 0x96, 0x8f,
	0xe1, 0xe3, 0xbe, 0x7f, 0x56, 0x90, 0x2d, 0x37, 0x12, 0xfb, 0x19, 0x9b, 0xc8, 0x32, 0x6a, 0x66,
	0xd1, 0xf9, 0xdf, 0xc4, 0x97, 0x8e, 0x81, 0xe1, 0x7c, 0x45, 0x85, 0xc7, 0xc0, 0x90, 0xaa, 0x64,
	0x63, 0x4f, 0xc6, 0x5e, 0x18, 0x99, 0xce, 0x4d, 0xb5, 0x7e, 0xaf, 0xa9, 0x15, 0x45, 0x1a, 0x52,
	0x15, 0x78, 0x02, 0xc4, 0x71, 0x37, 0xd9, 0x21, 0xd2, 0xfa, 0xd1, 0x76, 0xad, 0x57, 0x91, 0x2d,
	0x4b, 0xa4, 0x25, 0xcc, 0x83, 0x71, 0xb5, 0x52, 0xd5, 0xd4, 0xa2, 0x6a, 0x17, 0xcc, 0x9a, 0x86,
	0xac, 0xec, 0x30, 0xa1, 0x7d, 0xa4, 0x1d, 0xed, 0xeb, 0xa6, 0x2a, 0x8d, 0x39, 0x24, 0x12, 0xa6,
	0x80, 0x17, 0x41, 0x5a, 0x93, 0xf5, 0x52, 0x4d, 0x2e, 0xa1, 0x6c, 0x9c, 0x50, 0x3f, 0xd3, 0x8e,
	0xfa, 0x1a, 0x6b, 0xb7, 0x68, 0x28, 0x48, 0x72, 0xa9, 0xe0, 0x0c, 0x88, 0xdb, 0x68, 0xdb, 0xce,
	0x26, 0x08, 0xf5, 0x53, 0xed, 0xa8, 0xaf, 0xcb, 0xa6, 0x29, 0xdb, 0xea, 0x1d, 0x24, 0x91, 0xe6,
	0xf0, 0x35, 0x90, 0x29, 0x1a, 0xba, 0x2d, 0xab, 0x3a, 0x52, 0xb2, 0xc9, 0x27, 0x87, 0x5f, 0x18,
	0x99, 0x7e, 0xb1, 0x1d, 0xed, 0xa2, 0xd3, 0x50, 0x62, 0xe3, 0x2c, 0x79, 0xb4, 0xf0, 0x55, 0x90,
	0x71, 0xe7, 0x2e, 0x9b, 0x22, 0x8c, 0xda, 0x0a, 0x71, 0xc9, 0x69, 0x28, 0x79, 0x34, 0x70, 0x1d,
	0xc0, 0x8a, 0xa1, 0xa8, 0x5b, 0x2a, 0x32, 0x0b, 0x1e, 0xa7, 0x34, 0x2f, 0xa7, 0xc3, 0x0e, 0xb1,
	0xfb, 0x08, 0xe6, 0x01, 0x50, 0x15, 0xa4, 0xdb, 0xe4, 0x71, 0x36, 0x43, 0x38, 0x4d, 0xb4, 0x9f,
	0x7e, 0xa7, 0xa5, 0xe4, 0xa3, 0x82, 0x7f, 0x32, 0x0c, 0xd2, 0x9b, 0xb2, 0x85, 0x94, 0x82, 0xa1,
	0x67, 0x41, 0x67, 0x61, 0x24, 0xb4, 0x85, 0x4c, 0xa4, 0x17, 0x51, 0xfe, 0xab, 0xc3, 0x7f, 0xf6,
	0xe3, 0xbf, 0xfa, 0xad, 0xe4, 0x89, 0xb2, 0x6d, 0x57, 0xe7, 0x8f, 0x1f, 0x2f, 0x6b, 0xa7, 0xa7,
	0x0c, 0xb3, 0x74, 0x1c, 0x13, 0x1c, 0xdf, 0xb0, 0xcd, 0x5a, 0xd1, 0xae, 0x99, 0x68, 0x09, 0x6d,
	0xa9, 0xba, 0x8a, 0x3f, 0x9e, 0xe3, 0x8b, 0xb2, 0x89, 0xd6, 0x35, 0x59, 0x27, 0x54, 0x33, 0xbc,
	0x54, 0x4b, 0xe8, 0x8e, 0x5a, 0x44, 0x12, 0xfa, 0x48, 0x0d, 0x59, 0x36, 0x21, 0xcd, 0xf3, 0x92,
	0xae, 0x54, 0x2a, 0x35, 0x5d, 0x7d, 0x97, 0x7c, 0xba, 0x12, 0x2a, 0x1a, 0x95, 0x0a, 0xd2, 0x15,
	0xf2, 0x8b, 0xf0, 0x39, 0xc3, 0xcb, 0x67, 0x15, 0x29, 0x6a, 0x91, 0x71, 0xf1, 0xc4, 0x98, 0xe5,
	0x25, 0xbf, 0x5e, 0xb3, 0x4d, 0xf2, 0xd7, 0x9a, 0xa9, 0x20, 0x93, 0xd0, 0xce, 0xf1, 0xd2, 0xae,
	0x9b, 0x46, 0x11, 0x29, 0x35, 0x33, 0x30, 0x00, 0xa7, 0x79, 0xa9, 0xc9, 0x5c, 0x99, 0xb2, 0xc6,
	0x88, 0xa5, 0x14, 0x99, 0xe4, 0x35, 0x1d, 0xae, 0x82, 0xa4, 0x65, 0xcb, 0x76, 0xcd, 0xca, 0x8e,
	0x90, 0x2f, 0x69, 0xb2, 0xdd, 0x6c, 0xaf, 0x6d, 0x5a, 0xc8, 0xbc, 0x43, 0xde, 0x7d, 0x83, 0x10,
	0xe0, 0x0f, 0x32, 0x9f, 0xfc, 0xd3, 0xef, 0x7e, 0xe2, 0xbf, 0xc7, 0x63, 0x12, 0x63, 0x02, 0xaf,
	0x82, 0x74, 0x51, 0xb6, 0x51, 0xc9, 0x30, 0xeb, 0xd9, 0x51, 0xb2, 0x7c, 0x9e, 0x6f, 0xff, 0x79,
	0x29, 0x48, 0xde, 0xd4, 0xd0, 0xa2, 0xa1, 0x17, 0x51, 0xd5, 0x76, 0x59, 0xb9, 0x0c, 0xe0, 0x75,
	0x10, 0xc7, 0x3a, 0x35, 0x3b, 0x46, 0x24, 0x9b, 0x6e, 0xc7, 0x28, 0x5f, 0x51, 0x1b, 0x99, 0x5d,
	0x36, 0xcc, 0x80, 0x78, 0x84, 0x0f, 0xdc, 0x06, 0x29, 0xab, 0xb6, 0xf9, 0x61, 0x54, 0xb4, 0xb3,
	0xe3, 0x9d, 0xd5, 0x86, 0xb7, 0xb4, 0xcf, 0x52, 0x0e, 0x64, 0xb4, 0x8f, 0x73, 0xcf, 0x95, 0x6c,
	0xab, 0x48, 0xb7, 0x25, 0xa7, 0x3b, 0xf8, 0xd5, 0x18, 0x48, 0x61, 0xdd, 0x81, 0x35, 0xd6, 0x41,
	0xde, 0xae, 0xe9, 0x02, 0x79, 0x85, 0xb7, 0xd3, 0x4b, 0x7a, 0xd1, 0xa8, 0xe9, 0x36, 0x5b, 0x57,
	0xdc, 0x5f, 0xd5, 0xa5, 0xaa, 0x6a, 0x19, 0x0a, 0x5a, 0xdb, 0xc2, 0x1f, 0xa5, 0xe4, 0x48, 0x09,
	0x6f, 0x80, 0x0c, 0xda, 0xda, 0x42, 0x45, 0xac, 0x3b, 0xb3, 0x87, 0x88, 0xc8, 0xcf, 0x76, 0x9a,
	0x80, 0x4b, 0x4e, 0xe3, 0xfc, 0x28, 0x1d, 0xb1, 0xff, 0xfd, 0xbd, 0xef, 0x7f, 0x3b, 0x11, 0x93,
	0x3c, 0x2e, 0xf0, 0x34, 0x48, 0xaa, 0x96, 0x55, 0x43, 0x4a, 0xf6, 0x30, 0xe1, 0xf7, 0x44, 0x5b,
	0xdd, 0xa4, 0x5b, 0xb6, 0xac, 0xdb, 0x12, 0x6b, 0x0e, 0xbf, 0x38, 0x04, 0x32, 0x55, 0x64, 0x6e,
	0x19, 0x66, 0x05, 0x99, 0x59, 0xc8, 0xab, 0x95, 0xfe, 0x98, 0xce, 0xda, 0x29, 0xfe, 0x2f, 0x4c,
	0x2e, 0xda, 0xe4, 0x4f, 0x36, 0x86, 0xdc, 0x94, 0x6b, 0x66, 0x49, 0x76, 0xd4, 0x4b, 0xa4, 0x95,
	0x12, 0x6e, 0xca, 0x24, 0xa4, 0xc9, 0x36, 0x52, 0xd6, 0x91, 0x69, 0x61, 0x9b, 0xe2, 0x0e, 0x0d,
	0x7c, 0x15, 0x24, 0xee, 0xc8, 0x5a, 0x0d, 0x65, 0x8f, 0x74, 0x5e, 0x63, 0x78, 0xc2, 0x6e, 0xe1,
	0x86, 0xf9, 0x24, 0x9b, 0x26, 0x4a, 0x07, 0x5f, 0x07, 0x10, 0x3b, 0x1c, 0x05, 0x79, 0xd3, 0x42,
	0xba, 0x5d, 0x30, 0x91, 0x6c, 0x19, 0x7a, 0xf6, 0x28, 0xe1, 0xc6, 0xfb, 0x21, 0x4b, 0x87, 0x30,
	0x8b, 0x05, 0xc2, 0x41, 0x22, 0x0c, 0xe0, 0x1a, 0x18, 0x57, 0xf1, 0xca, 0xac, 0x9a, 0x88, 0xba,
	0x4f, 0xd9, 0x07, 0xc2, 0xb1, 0x6c, 0x20, 0x87, 0x73, 0xf8, 0x73, 0xc2, 0x4a, 0xdc, 0xce, 0x3e,
	0x48, 0x38, 0x3d, 0xde, 0x8e, 0xd3, 0x86, 0x6d, 0xaa, 0x7a, 0x49, 0x72, 0x9a, 0xc3, 0x25, 0x90,
	0xd9, 0x34, 0x94, 0x7a, 0xc1, 0x52, 0x6d, 0x94, 0x7d, 0x28, 0x9c, 0x14, 0x69, 0x4c, 0xb9, 0xa1,
	0xda, 0x08, 0xbe, 0x0a, 0x92, 0x15, 0x64, 0x97, 0x0d, 0x25, 0x9b, 0x0d, 0xc7, 0x82, 0x91, 0xc1,
	0x1a, 0x48, 0x5b, 0x55, 0x54, 0x54, 0x2b, 0x48, 0xcf, 0x3e, 0xcc, 0xab, 0x10, 0x66, 0xc3, 0x59,
	0xd9, 0x0d, 0xd6, 0x81, 0xe4, 0x76, 0x05, 0xdf, 0x8f, 0x81, 0xa4, 0x42, 0xcc, 0x68, 0x36, 0xc7,
	0xdb, 0x2b, 0x5d, 0xd1, 0x53, 0xe1, 0xac, 0x74, 0xb8, 0xef, 0x87, 0xd2, 0xac, 0x22, 0xdb, 0x54,
	0x8b, 0x12, 0x13, 0x10, 0x6e, 0x80, 0x83, 0xa6, 0x23, 0x44, 0xc1, 0x94, 0xf5, 0x12, 0xca, 0x3e,
	0x42, 0x3e, 0xfd, 0x63, 0x9d, 0x96, 0xb5, 0x2b, 0xb7, 0x84, 0x29, 0xa4, 0x71, 0x33, 0xf0, 0x1b,
	0x9e, 0x07, 0x29, 0x93, 0x7e, 0x3d, 0xd9, 0x47, 0x09, 0xb3, 0xa7, 0x3b, 0x33, 0x23, 0x4d, 0x25,
	0x87, 0x06, 0x2e, 0x62, 0xf7, 0xb1, 0x52, 0x35, 0x74, 0xbc, 0xf2, 0x1e, 0x23, 0x0c, 0x9e, 0xed,
	0x6c, 0x96, 0x58, 0x63, 0xc9, 0xa3, 0xcb, 0xfd, 0xd3, 0x61, 0xf0, 0x60, 0x6b, 0x7b, 0x05, 0xa7,
	0x7c, 0x9e, 0x7b, 0xb7, 0x25, 0x8d, 0xbd, 0xf7, 0x80, 0x17, 0x3a, 0x14, 0xc1, 0x0b, 0x9d, 0x05,
	0xc9, 0xa2, 0xa1, 0xa8, 0x7a, 0x29, 0x3b, 0x4c, 0xa8, 0x1f, 0xef, 0xb0, 0x90, 0x71, 0xa7, 0xac,
	0x35, 0x9c, 0x66, 0xee, 0x77, 0x9c, 0x4b, 0x54, 0xea, 0x7b, 0x57, 0x00, 0xd8, 0x2c, 0x54, 0x0a,
	0x6a, 0x81, 0x18, 0xf5, 0x04, 0xe9, 0xef, 0xa5, 0xce, 0xfd, 0xbd, 0xa1, 0xda, 0xe5, 0xcb, 0xea,
	0x36, 0x52, 0x88, 0x35, 0x7f, 0xfa, 0x47, 0x3f, 0xf8, 0xb9, 0x2f, 0x25, 0x0f, 0xb1, 0x55, 0xa5,
	0x19, 0xaa, 0x5e, 0xc4, 0xeb, 0xea, 0x0b, 0xdf, 0xf8, 0xf4, 0xfb, 0xc9, 0xd4, 0xc9, 0x33, 0xaf,
	0xcc, 0xcc, 0x4e, 0xce, 0x48, 0xa9, 0xcd, 0xd5, 0x15, 0xdc, 0x7a, 0xfe, 0xfc, 0x3f, 0xfa, 0xe7,
	0x7f, 0xf7, 0x53, 0xfc, 0x1e, 0x52, 0xc3, 0x8c, 0xe4, 0x3e, 0x15, 0x03, 0x19, 0xd7, 0xa8, 0xe1,
	0x81, 0x56, 0x64, 0x1b, 0x15, 0x6c, 0xb5, 0x82, 0xd8, 0xfc, 0x3c, 0xd9, 0x4e, 0xf4, 0x25, 0xd9,
	0x46, 0x37, 0xd5, 0x0a, 0x5a, 0x3e, 0x20, 0xa5, 0x15, 0xf6, 0x37, 0x9c, 0x03, 0xc9, 0x2a, 0x32,
	0x55, 0x43, 0x61, 0x91, 0x56, 0xdb, 0x21, 0x5b, 0x27, 0xad, 0x96, 0x0f, 0x48, 0xac, 0x7d, 0x7e,
	0xc4, 0x67, 0x89, 0x73, 0xeb, 0x20, 0x41, 0x14, 0x37, 0xbc, 0x00, 0xd2, 0x1f, 0xa9, 0xc9, 0xba,
	0xad, 0xda, 0xf5, 0x6e, 0xf2, 0xdc, 0x60, 0xed, 0xb0, 0x3c, 0x0e, 0x4d, 0x3e, 0xc5, 0x4c, 0x45,
	0xee, 0x83, 0x38, 0x18, 0x0f, 0x7e, 0x34, 0xf7, 0x7e, 0x15, 0xb6, 0x8e, 0x85, 0x86, 0x7b, 0x88,
	0x85, 0xe6, 0xc0, 0xb0, 0x66, 0xdc, 0x65, 0xcb, 0xf3, 0xb9, 0xb6, 0xef, 0x80, 0xa3, 0x52, 0xe4,
	0x8c, 0x8f, 0x84, 0x49, 0xe0, 0x3c, 0x88, 0x97, 0xd5, 0x52, 0x99, 0x05, 0x96, 0xbc, 0xa4, 0x84,
	0x06, 0x9e, 0x05, 0x71, 0x1c, 0xab, 0x67, 0x93, 0xe1, 0x8c, 0x02, 0x21, 0x82, 0x97, 0x01, 0x90,
	0xab, 0x55, 0x4d, 0x45, 0x56, 0xc1, 0x36, 0x58, 0x48, 0xc9, 0xcd, 0x22, 0xc3, 0x48, 0x6f, 0x1a,
	0xf0, 0x38, 0x18, 0xc6, 0x61, 0x75, 0x9a, 0xc8, 0xf0, 0x58, 0x5b, 0xfd, 0x4e, 0xd4, 0x23, 0x6e,
	0xe9, 0x7e, 0xcb, 0x19, 0xfe, 0x6f, 0x39, 0xf7, 0xd9, 0x61, 0x90, 0x62, 0xda, 0x71, 0x10, 0x96,
	0xcb, 0x06, 0x9b, 0x38, 0xba, 0x5e, 0x4e, 0x73, 0xc4, 0x40, 0xe4, 0xe5, 0x55, 0x43, 0xb7, 0xca,
	0x6a, 0xf5, 0x66, 0xbd, 0x8a, 0x82, 0xe1, 0x06, 0x99, 0xd0, 0x3a, 0x48, 0xda, 0xb2, 0x59, 0x42,
	0x5d, 0x41, 0x0a, 0xcf, 0xd6, 0x5e, 0xf0, 0x45, 0x1b, 0xd3, 0xbc, 0x9a, 0xeb, 0x8e, 0x6a, 0xcb,
	0x9a, 0xa5, 0x96, 0x74, 0x4b, 0x62, 0x1d, 0xe6, 0x7e, 0x39, 0x01, 0x32, 0xae, 0xed, 0x19, 0x84,
	0x09, 0x5a, 0x64, 0xa1, 0x60, 0x3c, 0xd4, 0x97, 0xd5, 0x10, 0xff, 0xad, 0x38, 0xee, 0x31, 0x9d,
	0x8f, 0x97, 0xb8, 0x2c, 0x77, 0x18, 0x47, 0x39, 0xd9, 0x7f, 0x47, 0x39, 0xd5, 0x9b, 0xa3, 0xdc,
	0xc2, 0x89, 0x4a, 0xf7, 0xea, 0x44, 0xf5, 0xdf, 0x08, 0xcd, 0x1b, 0xff, 0xea, 0x73, 0xdf, 0xff,
	0x17, 0x89, 0x61, 0x62, 0xb1, 0x23, 0xac, 0xfb, 0x5f, 0xfd, 0xbf, 0x7f, 0xfc, 0xe9, 0xe4, 0x4b,
	0xbc, 0x74, 0x9b, 0x15, 0x75, 0xe2, 0x47, 0xc7, 0x00, 0xc8, 0x1b, 0x4a, 0xbd, 0x8c, 0xd4, 0x52,
	0xd9, 0x16, 0x88, 0xa9, 0x40, 0x4c, 0x05, 0x62, 0x2a, 0x10, 0xd3, 0x3d, 0x8f, 0x98, 0xbe, 0x1e,
	0x40, 0x4c, 0xcf, 0xb4, 0xd5, 0xf1, 0xae, 0xe6, 0x13, 0xc0, 0x69, 0xbf, 0x81, 0xd3, 0xdb, 0xcd,
	0xc0, 0xe9, 0xcb, 0x1c, 0xf3, 0x20, 0xf0, 0xd3, 0x5d, 0x80, 0x9f, 0x5e, 0x0e, 0xe2, 0xa7, 0x2f,
	0x70, 0xcc, 0x9b, 0x80, 0x51, 0x05, 0x8c, 0xba, 0xab, 0x61, 0xd4, 0xb7, 0xda, 0xc1, 0xa8, 0xaf,
	0x70, 0xac, 0xee, 0x2e, 0x68, 0xea, 0x52, 0x23, 0x9a, 0x7a, 0x8c, 0x8b, 0x67, 0x03, 0xa8, 0x7a,
	0xa5, 0x19, 0x54, 0x7d, 0x99, 0xcb, 0x72, 0xb5, 0xc0, 0x56, 0xbf, 0xba, 0x4f, 0xb1, 0xd5, 0x3a,
	0x38, 0x44, 0xbe, 0x47, 0x3a, 0x36, 0x91, 0x11, 0xd6, 0x89, 0x0e, 0x08, 0x6b, 0x72, 0xee, 0xe4,
	0x89, 0xe9, 0xc9, 0x69, 0x69, 0x1c, 0x77, 0xb4, 0x4c, 0xfa, 0x11, 0x38, 0xab, 0xc0, 0x59, 0x05,
	0xce, 0x2a, 0x70, 0xd6, 0x7d, 0x8b, 0xb3, 0x7e, 0x5d, 0xe0, 0xac, 0x2d, 0x70, 0xd6, 0xf5, 0x20,
	0xce, 0x3a, 0x1d, 0xc6, 0x98, 0xef, 0x6d, 0xb8, 0xf5, 0xad, 0x76, 0x70, 0x6b, 0xef, 0xce, 0xd6,
	0x0e, 0xa0, 0xae, 0x77, 0xfa, 0x80, 0xba, 0x72, 0xd3, 0x6d, 0xba, 0x2f, 0xea, 0x82, 0xaf, 0x1a,
	0xd2, 0x4b, 0x76, 0x59, 0x80, 0xaf, 0x02, 0x7c, 0x15, 0xe0, 0xab, 0x00, 0x5f, 0xf7, 0x13, 0xf8,
	0x4a, 0x35, 0x9f, 0x00, 0x5f, 0xef, 0x37, 0xf8, 0xca, 0xe6, 0x41, 0x80, 0xaf, 0x7b, 0x0c, 0x7c,
	0x65, 0xf3, 0x26, 0xc0, 0x57, 0x01, 0xbe, 0x0e, 0x20, 0xf8, 0xca, 0x56, 0x77, 0x5f, 0xc1, 0x57,
	0x97, 0x67, 0x8f, 0xe0, 0xab, 0x6b, 0xb9, 0x04, 0xf8, 0xda, 0x04, 0xbe, 0xd2, 0xb1, 0xd9, 0x31,
	0xf0, 0x75, 0x76, 0xf2, 0x24, 0x05, 0x5f, 0xaf, 0x91, 0x7e, 0x04, 0xf8, 0x2a, 0xc0, 0x57, 0x01,
	0xbe, 0x0a, 0xf0, 0x55, 0x80, 0xaf, 0x02, 0x7c, 0x8d, 0x08, 0xbe, 0x36, 0x1a, 0xf3, 0xfd, 0x08,
	0xbe, 0x72, 0x39, 0x5b, 0x83, 0x00, 0xbe, 0xd2, 0x17, 0x9d, 0xf8, 0xa3, 0x63, 0x20, 0x8d, 0xdf,
	0xdb, 0x46, 0x95, 0xaa, 0x80, 0x5e, 0x05, 0xf4, 0x2a, 0xa0, 0x57, 0x01, 0xbd, 0xee, 0x79, 0xe8,
	0x75, 0x23, 0x00, 0xbd, 0x9e, 0xee, 0xa4, 0xef, 0xb1, 0xde, 0x13, 0xc0, 0x6b, 0xbf, 0x81, 0xd7,
	0x5b, 0xcd, 0xc0, 0xeb, 0xb1, 0xae, 0xb3, 0x20, 0x60, 0xd7, 0x5d, 0x00, 0xbb, 0x2e, 0x05, 0x61,
	0xd7, 0xe7, 0xba, 0xce, 0x9a, 0x00, 0x5d, 0x05, 0xe8, 0xba, 0xab, 0x41, 0xd7, 0xdb, 0xed, 0x40,
	0xd7, 0xe3, 0x5d, 0xd7, 0x76, 0x17, 0xc8, 0x35, 0xdf, 0x08, 0xb9, 0xbe, 0xc0, 0xc1, 0xb1, 0x01,
	0x70, 0x5d, 0x6e, 0x06, 0x5c, 0x8f, 0x71, 0xd8, 0xab, 0x16, 0x70, 0xeb, 0x2f, 0xee, 0x53, 0xb8,
	0xb5, 0x06, 0x08, 0x0a, 0x5a, 0xc0, 0x23, 0xb3, 0x53, 0x60, 0xeb, 0x2b, 0x27, 0x26, 0x67, 0xa4,
	0x51, 0xdc, 0xcd, 0x4d, 0x54, 0xa9, 0x0a, 0xa8, 0x55, 0x40, 0xad, 0x02, 0x6a, 0x15, 0x50, 0xeb,
	0xbe, 0x85, 0x5a, 0xbf, 0x26, 0xa0, 0xd6, 0x16, 0x50, 0xeb, 0xf5, 0x20, 0xd4, 0x7a, 0x82, 0xdf,
	0x8c, 0xef, 0x6d, 0xa0, 0xf5, 0x76, 0x3b, 0xa0, 0xb5, 0x57, 0x07, 0x6b, 0x07, 0x60, 0x56, 0xbb,
	0x0f, 0x30, 0xeb, 0x89, 0x30, 0x30, 0x2b, 0x7e, 0xcd, 0x89, 0xbf, 0x64, 0x19, 0xae, 0x77, 0x45,
	0x79, 0x01, 0x01, 0xb3, 0x0a, 0x98, 0x55, 0xc0, 0xac, 0xfb, 0x2e, 0xc3, 0xf5, 0xae, 0x28, 0x2f,
	0xb0, 0x2b, 0x32, 0x5c, 0xef, 0x8a, 0xf2, 0x02, 0x7b, 0x32, 0xc3, 0xf5, 0xae, 0x28, 0x2f, 0x20,
	0xc0, 0xd6, 0x81, 0xcd, 0x70, 0xbd, 0xbb, 0x03, 0xe5, 0x05, 0xee, 0xf6, 0xa9, 0xbc, 0xc0, 0xdd,
	0x0e, 0xe5, 0x05, 0x7e, 0x65, 0x9f, 0x42, 0xae, 0xef, 0xb2, 0x0c, 0xd7, 0xbb, 0xbd, 0x95, 0x17,
	0xe8, 0x58, 0xc0, 0x75, 0xfa, 0xcc, 0xa9, 0xd9, 0x93, 0x93, 0xa7, 0x69, 0x8a, 0xeb, 0x1b, 0xa2,
	0xbe, 0x80, 0xc0, 0x5d, 0x05, 0xee, 0x2a, 0x70, 0x57, 0x91, 0xe2, 0x2a, 0x70, 0xd7, 0x5e, 0x52,
	0x5c, 0xef, 0x8a, 0xfa, 0x02, 0x7c, 0xde, 0xd6, 0x20, 0xa4, 0xb8, 0xd2, 0x17, 0x9d, 0xf8, 0x77,
	0xb3, 0x60, 0x28, 0x2f, 0x92, 0x5b, 0x05, 0xea, 0x2a, 0x50, 0x57, 0x81, 0xba, 0xee, 0x7d, 0xd4,
	0x75, 0x35, 0x80, 0xba, 0xb6, 0xd7, 0xf4, 0x22, 0xad, 0xb5, 0xef, 0x68, 0xeb, 0x7a, 0x33, 0xda,
	0xfa, 0x4c, 0x87, 0xf1, 0x17, 0x28, 0xeb, 0x2e, 0x40, 0x59, 0x05, 0x3a, 0x2a, 0xd0, 0xd1, 0xdd,
	0x82, 0x8e, 0x4a, 0xed, 0xd0, 0xd1, 0x17, 0x3b, 0x68, 0x91, 0x2e, 0xa8, 0xe8, 0xb9, 0x46, 0x54,
	0x74, 0xa2, 0x23, 0xaf, 0x06, 0x34, 0x34, 0xdf, 0x8c, 0x86, 0x3e, 0xd3, 0xd1, 0xa2, 0x34, 0xa3,
	0xa0, 0xf0, 0x35, 0x30, 0x6a, 0xd5, 0x2d, 0xdb, 0xd0, 0xd4, 0x62, 0x61, 0xb3, 0x50, 0xcd, 0x3e,
	0xde, 0xe5, 0x22, 0xac, 0xea, 0xd4, 0x06, 0x6b, 0x9e, 0x5f, 0x97, 0x80, 0xe5, 0xfe, 0x0d, 0xaf,
	0x80, 0x31, 0x45, 0x95, 0x7d, 0x9c, 0x9e, 0x20, 0x9c, 0x9e, 0xeb, 0xc0, 0x69, 0xc9, 0x69, 0x9f,
	0x5f, 0x97, 0x46, 0x14, 0xef, 0x47, 0xee, 0xf3, 0xfb, 0x14, 0x9a, 0xfd, 0x30, 0x48, 0x6f, 0x16,
	0xaa, 0x3b, 0x03, 0xc9, 0xce, 0xcd, 0x9c, 0x9c, 0x39, 0x35, 0x79, 0x46, 0x4a, 0x6e, 0xae, 0x0f,
	0x2e, 0x14, 0x2b, 0x80, 0x53, 0x01, 0x9c, 0x0a, 0xe0, 0x74, 0xc0, 0x80, 0xd3, 0x11, 0x1f, 0x6e,
	0x9a, 0xfb, 0x41, 0x1a, 0x00, 0xcf, 0x02, 0x0d, 0xc2, 0x74, 0xdd, 0x0e, 0xc0, 0xa8, 0xe7, 0xb8,
	0x2c, 0x2f, 0x5f, 0x74, 0xc8, 0x7d, 0x47, 0x56, 0x80, 0xf5, 0x9e, 0x06, 0x55, 0xa5, 0x76, 0xa0,
	0x6a, 0x74, 0x27, 0x2d, 0xf7, 0x85, 0x7d, 0xea, 0x8d, 0x68, 0x00, 0x58, 0x85, 0x5e, 0xfc, 0x91,
	0xce, 0xe7, 0x72, 0x4e, 0xcd, 0x9d, 0x98, 0x9c, 0x95, 0x52, 0x56, 0xbe, 0x2f, 0xfe, 0x48, 0xff,
	0x37, 0x61, 0xff, 0x5b, 0x1a, 0x8c, 0xf8, 0x3c, 0xd4, 0x41, 0x50, 0x35, 0x6f, 0x06, 0x54, 0xcd,
	0x79, 0x3e, 0xd7, 0x9c, 0x4f, 0xd7, 0x5c, 0x09, 0xea, 0x9a, 0x97, 0x39, 0x79, 0x0b, 0x65, 0x23,
	0x94, 0x8d, 0xa3, 0x6c, 0x94, 0x9d, 0x54, 0x36, 0xb3, 0xd3, 0x93, 0xa7, 0xa4, 0x94, 0xb2, 0x4b,
	0x95, 0xcd, 0xbc, 0xde, 0x87, 0xed, 0xb5, 0x63, 0xdc, 0xdb, 0x6b, 0xd5, 0x89, 0x6f, 0x3f, 0x0f,
	0x46, 0x16, 0xcb, 0x86, 0x86, 0x2c, 0x1b, 0x99, 0x86, 0x26, 0xf6, 0xd7, 0xc4, 0xfe, 0x9a, 0xd8,
	0x5f, 0x13, 0xfb, 0x6b, 0xf7, 0x63, 0x7f, 0x6d, 0x31, 0xf2, 0xfe, 0x9a, 0x6f, 0x5f, 0x6d, 0x31,
	0xb0, 0xaf, 0x16, 0x31, 0x17, 0xe5, 0xbd, 0xa1, 0x08, 0xdb, 0x69, 0xbf, 0x17, 0x8b, 0xbe, 0x41,
	0x32, 0xc9, 0x4b, 0xf4, 0x9a, 0x69, 0xd4, 0xaa, 0x91, 0x71, 0x6f, 0xee, 0x8f, 0xec, 0x9a, 0xc1,
	0x56, 0xea, 0x1e, 0xde, 0xe6, 0xdb, 0x68, 0xde, 0xe6, 0x6b, 0xbb, 0x40, 0x7d, 0x16, 0xd0, 0xb7,
	0xdf, 0x97, 0x14, 0x3b, 0x7d, 0xf7, 0x7e, 0xa7, 0xef, 0xb5, 0xe0, 0x79, 0x8a, 0x17, 0x79, 0xa6,
	0x4c, 0x1c, 0xa8, 0x10, 0x5b, 0x86, 0xbb, 0x7a, 0xcb, 0xb0, 0xd8, 0x6a, 0xcb, 0xb0, 0x63, 0x9a,
	0xa3, 0x7f, 0x79, 0x07, 0x23, 0x45, 0xd7, 0x56, 0x35, 0xee, 0x21, 0x5e, 0x6d, 0xde, 0x05, 0xe4,
	0x52, 0x78, 0x2d, 0x0f, 0x45, 0xec, 0x97, 0x0c, 0xfb, 0xef, 0x0c, 0x0d, 0xe2, 0x46, 0x51, 0x3e,
	0xca, 0x76, 0x8f, 0xe7, 0x04, 0x91, 0x6d, 0x9f, 0x28, 0x1b, 0x28, 0x1f, 0x03, 0x22, 0xb5, 0xb9,
	0xd9, 0x9d, 0xbc, 0x11, 0x84, 0xc4, 0x4e, 0x86, 0xfa, 0x28, 0xf7, 0x36, 0x32, 0xf6, 0x76, 0x3b,
	0x64, 0x2c, 0x82, 0xe2, 0x6b, 0x82, 0xc8, 0x3e, 0x95, 0xe8, 0x93, 0x3a, 0x80, 0x37, 0xc1, 0xa1,
	0x22, 0x7b, 0x93, 0x42, 0x91, 0xbe, 0x0a, 0x53, 0x54, 0xbc, 0x6f, 0xbe, 0x7c, 0x40, 0x3a, 0x58,
	0x0c, 0x3e, 0x82, 0x17, 0xc0, 0xa8, 0x45, 0x56, 0x77, 0x81, 0x4e, 0xff, 0x30, 0xcf, 0x97, 0x80,
	0x55, 0x1f, 0xa5, 0x82, 0x33, 0x20, 0x41, 0x87, 0x2c, 0xce, 0xb1, 0xeb, 0xb9, 0x7c, 0x40, 0xa2,
	0xad, 0x29, 0x99, 0xad, 0x1a, 0x6c, 0xb9, 0x75, 0x20, 0xb3, 0x55, 0x83, 0x92, 0xd9, 0xaa, 0x01,
	0x97, 0xc1, 0xa8, 0x25, 0x63, 0x7d, 0xa0, 0x14, 0xf0, 0xba, 0x60, 0x8b, 0xe9, 0xe9, 0xb6, 0xd2,
	0xd2, 0xb6, 0x4b, 0xb2, 0x2d, 0x2f, 0x1f, 0x90, 0x46, 0x2c, 0xef, 0x27, 0x5c, 0x02, 0x40, 0xb6,
	0x6d, 0xb9, 0x58, 0x26, 0x4e, 0x0d, 0x5d, 0x41, 0x6d, 0xc1, 0x84, 0x05, 0xb7, 0xe5, 0xf2, 0x01,
	0xc9, 0x47, 0x47, 0xf4, 0x0f, 0x36, 0x37, 0xe9, 0xce, 0xe8, 0x12, 0x33, 0x35, 0xa4, 0x6d, 0xd0,
	0x4e, 0x65, 0x7a, 0xb2, 0x53, 0x20, 0xa4, 0x9d, 0x72, 0x11, 0xbc, 0x6d, 0x1f, 0x82, 0x77, 0x92,
	0xdb, 0xfb, 0xf6, 0x22, 0x64, 0x02, 0xe1, 0x71, 0x13, 0x16, 0xbd, 0xcf, 0x65, 0xe2, 0xff, 0x3c,
	0x03, 0x0e, 0x2d, 0x6a, 0xaa, 0xae, 0x16, 0x65, 0x4d, 0x31, 0x8a, 0x35, 0x32, 0x8c, 0x02, 0xd0,
	0x13, 0x80, 0x1e, 0xfb, 0x14, 0xc2, 0x02, 0x7a, 0x1e, 0xbe, 0x03, 0xba, 0x84, 0xcf, 0xd8, 0x58,
	0x59, 0x6a, 0x57, 0x7c, 0x87, 0xa6, 0x23, 0x8c, 0x44, 0xb4, 0xa5, 0x24, 0xfd, 0x60, 0x11, 0x8c,
	0x14, 0x35, 0xd9, 0xb2, 0x98, 0x4a, 0x1d, 0x0d, 0x67, 0x9e, 0x12, 0x84, 0x16, 0x7e, 0xd7, 0x87,
	0xef, 0x8c, 0xf1, 0xc6, 0x0e, 0xff, 0x60, 0xa8, 0x87, 0x7c, 0xe9, 0x1e, 0xa3, 0xf8, 0xdd, 0x8f,
	0x0f, 0x6d, 0x83, 0x0c, 0x72, 0xe0, 0x1b, 0x7e, 0xcc, 0xec, 0x74, 0x44, 0x80, 0x48, 0xf2, 0x3a,
	0x83, 0xe7, 0x40, 0x1c, 0xab, 0x6f, 0x86, 0x4a, 0x75, 0x55, 0xf7, 0xde, 0x7a, 0xc2, 0x54, 0xf0,
	0xf3, 0x43, 0x20, 0x29, 0xd7, 0xec, 0xb2, 0x61, 0x66, 0x0f, 0xf1, 0x83, 0x32, 0xbe, 0x95, 0x10,
	0x7d, 0x52, 0xa3, 0xcc, 0xd0, 0xbd, 0x04, 0x65, 0xd8, 0xb8, 0xc0, 0x73, 0x20, 0x61, 0xab, 0xb6,
	0x86, 0x18, 0xe4, 0xd5, 0xc5, 0x7f, 0x71, 0xc7, 0x97, 0x12, 0xe1, 0xd0, 0xb7, 0x68, 0xe8, 0x5b,
	0x54, 0xad, 0xc8, 0x1a, 0xf6, 0xd0, 0x60, 0xe7, 0x4a, 0x33, 0x8b, 0xc1, 0xe6, 0x8b, 0xf8, 0x93,
	0x55, 0xb7, 0x18, 0x76, 0x4e, 0x34, 0x7f, 0x23, 0x47, 0xb8, 0x0a, 0xd2, 0xb2, 0x6d, 0x13, 0x3b,
	0x98, 0x3d, 0xd2, 0xf9, 0xec, 0x5c, 0xa3, 0x81, 0xc4, 0x0e, 0x08, 0x21, 0x94, 0x5c, 0x16, 0xf0,
	0xa3, 0x20, 0x53, 0xac, 0x59, 0xb6, 0xa1, 0xa8, 0xb2, 0x83, 0x18, 0x71, 0x2c, 0x8b, 0xf9, 0xe8,
	0x80, 0x9b, 0xe4, 0xf5, 0x07, 0x6f, 0x00, 0x40, 0xf3, 0x7a, 0x49, 0xc6, 0xdc, 0x03, 0x5d, 0xbc,
	0xe5, 0xc6, 0xb7, 0xa1, 0x53, 0x68, 0xdd, 0x34, 0xa4, 0x8c, 0xe9, 0xfc, 0x09, 0x97, 0x40, 0x02,
	0xdd, 0xa1, 0x00, 0x13, 0xe6, 0x36, 0xc5, 0xcd, 0xed, 0x12, 0xa6, 0x92, 0x28, 0x31, 0xbc, 0x02,
	0x52, 0x16, 0x8e, 0xc3, 0x0d, 0x3d, 0xfb, 0x10, 0xe1, 0x73, 0x82, 0x9b, 0xcf, 0x06, 0xa5, 0x93,
	0x1c, 0x06, 0xb9, 0xdf, 0x88, 0x83, 0xb4, 0x33, 0xf0, 0x83, 0x10, 0x27, 0x4a, 0x20, 0x5e, 0xa1,
	0x71, 0x22, 0xe6, 0x31, 0xcb, 0x61, 0x28, 0xe9, 0xdb, 0x93, 0xd9, 0x5f, 0x35, 0x94, 0x86, 0x4c,
	0x3b, 0xcc, 0x0b, 0x9e, 0x62, 0x0e, 0x70, 0x82, 0x4f, 0xb1, 0x31, 0x17, 0xf8, 0xfb, 0x31, 0x90,
	0xa8, 0xca, 0xa6, 0x5d, 0x67, 0x0e, 0x3c, 0xc7, 0xc2, 0x7d, 0xff, 0xbe, 0xd8, 0xb4, 0x68, 0x1f,
	0x0a, 0x7d, 0xb7, 0xdc, 0x7f, 0x88, 0x83, 0x8c, 0xbb, 0xd4, 0x07, 0x61, 0x01, 0xad, 0x07, 0x80,
	0x86, 0x53, 0x6d, 0x27, 0x9b, 0x7d, 0x51, 0x9d, 0x13, 0x35, 0x09, 0xea, 0x50, 0x68, 0x48, 0xd4,
	0x3c, 0x13, 0x5e, 0x87, 0x4c, 0xdd, 0x24, 0x0c, 0x1a, 0x0e, 0x3e, 0x39, 0xe9, 0x98, 0x7f, 0x10,
	0x03, 0x49, 0xda, 0x00, 0x47, 0x7c, 0x3e, 0x6f, 0x33, 0xc6, 0xeb, 0x6d, 0xe2, 0x88, 0xcf, 0xe7,
	0x6f, 0xfe, 0x24, 0xc8, 0xb8, 0x11, 0x3e, 0x8b, 0x41, 0x38, 0x56, 0xef, 0x19, 0xb2, 0x9a, 0x4e,
	0xf2, 0xa7, 0x70, 0xb8, 0x9f, 0xe0, 0xf2, 0x01, 0xc9, 0xeb, 0x30, 0x9f, 0x76, 0xc6, 0x2b, 0xf7,
	0xab, 0xc3, 0x20, 0x41, 0x34, 0xdf, 0x20, 0x2c, 0xac, 0xb3, 0xee, 0xc2, 0x0a, 0xb5, 0xa3, 0x4a,
	0xd7, 0xd0, 0xac, 0x1b, 0x0e, 0x27, 0x78, 0xc2, 0x61, 0x27, 0x18, 0x86, 0x1f, 0x01, 0x49, 0x05,
	0xd9, 0xb2, 0xaa, 0xb1, 0xb0, 0xaa, 0xff, 0x1b, 0x02, 0x6e, 0x18, 0xc6, 0x3a, 0xca, 0x7d, 0x2c,
	0x09, 0x52, 0xcc, 0xcc, 0x0c, 0xc2, 0xb4, 0x9d, 0x72, 0x9c, 0x2e, 0xbe, 0xdc, 0x29, 0xe6, 0x6c,
	0x39, 0x93, 0x9d, 0x08, 0x99, 0xaa, 0x4f, 0x26, 0xdb, 0x89, 0xa2, 0x93, 0xe1, 0xa2, 0xe8, 0x39,
	0x66, 0xfa, 0x52, 0x5d, 0x42, 0x77, 0xd5, 0xb2, 0x1d, 0x43, 0xc7, 0x0c, 0xdc, 0x65, 0x00, 0x0c,
	0x53, 0x41, 0x26, 0x52, 0x0a, 0x9b, 0x75, 0x86, 0xf3, 0xf0, 0x9f, 0x0d, 0x60, 0xa4, 0xf9, 0x3a,
	0x34, 0x40, 0x02, 0xe9, 0xb6, 0x59, 0x67, 0x79, 0x2b, 0x3b, 0xb8, 0xd8, 0x68, 0x3f, 0xf0, 0x0a,
	0x18, 0x45, 0x95, 0xaa, 0x5d, 0x77, 0x70, 0x57, 0x10, 0x4e, 0xf4, 0x11, 0x42, 0xcc, 0x20, 0x57,
	0x9f, 0x57, 0x35, 0xd2, 0xa3, 0x57, 0x35, 0xff, 0xd7, 0xa2, 0x40, 0x4f, 0x3e, 0x85, 0x48, 0xa0,
	0x27, 0xee, 0xac, 0x92, 0x62, 0x83, 0x3c, 0x13, 0xbf, 0x36, 0x09, 0x1e, 0xa2, 0xb1, 0x4a, 0x85,
	0x6c, 0x7f, 0x19, 0x1e, 0xa8, 0x25, 0x60, 0x28, 0x01, 0x43, 0x89, 0xbc, 0x32, 0x91, 0x57, 0xb6,
	0xbf, 0xf3, 0xca, 0x7e, 0x29, 0x16, 0x21, 0xaf, 0xcc, 0xe8, 0x15, 0x76, 0x0c, 0x89, 0x33, 0x79,
	0x98, 0x1e, 0x6a, 0xce, 0xa0, 0x6a, 0x1b, 0x44, 0xb4, 0xd1, 0xfb, 0x3c, 0xd5, 0x13, 0x44, 0x6a,
	0x14, 0x67, 0x6a, 0xd4, 0x46, 0x30, 0x35, 0x6a, 0x26, 0xec, 0x5c, 0xb4, 0xdc, 0x49, 0x16, 0xf9,
	0x4c, 0x8d, 0xf9, 0x4c, 0x1f, 0x0d, 0x9f, 0x57, 0x74, 0x31, 0x0a, 0x20, 0xdc, 0x32, 0x53, 0xa8,
	0xd4, 0x2e, 0x53, 0xe8, 0x42, 0xd8, 0xd9, 0xee, 0x52, 0x71, 0xe0, 0x86, 0xbf, 0xe2, 0x40, 0xc7,
	0xf3, 0xa1, 0xed, 0x3b, 0x68, 0x28, 0x43, 0xf0, 0x46, 0x73, 0x02, 0x52, 0x68, 0x7d, 0xd1, 0x32,
	0x19, 0xe9, 0xcd, 0x7e, 0xe6, 0x22, 0x05, 0x33, 0x8a, 0xf6, 0x4d, 0x0e, 0x41, 0x22, 0x5a, 0x0e,
	0x41, 0xb2, 0xa7, 0x1c, 0x82, 0x54, 0x9f, 0x72, 0x08, 0xd2, 0x3d, 0xe6, 0x10, 0x64, 0xa2, 0xe6,
	0x10, 0x80, 0x9e, 0x72, 0x08, 0x46, 0x22, 0xe6, 0x10, 0x88, 0xf2, 0x05, 0xa2, 0x7c, 0x41, 0x84,
	0xec, 0xbb, 0x7f, 0x38, 0x58, 0xe5, 0x0b, 0xae, 0xf6, 0xa5, 0x7c, 0x01, 0x9b, 0xc8, 0x77, 0xc3,
	0x97, 0x2d, 0x78, 0xd5, 0x67, 0xd4, 0xa3, 0x24, 0xf2, 0xb8, 0x40, 0xf9, 0x67, 0x44, 0x56, 0x64,
	0x8b, 0x60, 0xe8, 0xff, 0x0f, 0x66, 0x45, 0xbe, 0x1a, 0xd9, 0x53, 0xd8, 0xdb, 0x19, 0x92, 0xa5,
	0x76, 0x19, 0x92, 0x7d, 0x76, 0xf8, 0x44, 0xb6, 0xa4, 0xc8, 0x96, 0xdc, 0x85, 0xd9, 0x92, 0x1f,
	0x8f, 0xf5, 0x23, 0x5d, 0xf2, 0x55, 0x5e, 0x42, 0xa5, 0xf5, 0xb7, 0x33, 0xf1, 0xc9, 0xa7, 0x40,
	0x76, 0x49, 0x95, 0x4b, 0xba, 0x61, 0xd9, 0x6a, 0xd1, 0x44, 0x55, 0xc3, 0xb4, 0x5f, 0x43, 0x3a,
	0xb2, 0xd5, 0xa2, 0x25, 0xb0, 0x6b, 0x81, 0x5d, 0x47, 0xc5, 0xae, 0x3f, 0x88, 0x84, 0x5d, 0xff,
	0x70, 0xa8, 0x07, 0xec, 0x5a, 0x00, 0xd0, 0x3d, 0x03, 0xd0, 0x52, 0x03, 0x00, 0xdd, 0x36, 0xfd,
	0xca, 0x53, 0x19, 0x12, 0x51, 0x19, 0xdc, 0x28, 0x74, 0x4c, 0x9c, 0x6e, 0x16, 0xa7, 0x9b, 0x7b,
	0x39, 0xdd, 0xfc, 0x13, 0xcd, 0xd8, 0xfc, 0x7c, 0xf7, 0x55, 0x1a, 0x34, 0x6c, 0x3b, 0x74, 0xd4,
	0xf9, 0x76, 0x33, 0x9c, 0x1f, 0x5e, 0xb4, 0x75, 0x87, 0x83, 0x1f, 0x00, 0xf7, 0x9f, 0x34, 0x3d,
	0xb2, 0x43, 0x7b, 0xfd, 0x2d, 0x4e, 0x9a, 0xda, 0x20, 0x69, 0x22, 0xab, 0xa6, 0xd9, 0xd9, 0xa3,
	0xbc, 0x9d, 0x9e, 0xe9, 0x21, 0x6a, 0xa4, 0x7d, 0xc1, 0x6f, 0xc5, 0xc0, 0x98, 0x5a, 0x91, 0x4b,
	0xd8, 0x23, 0xb6, 0xec, 0x9a, 0x52, 0x67, 0xb9, 0xa0, 0x1c, 0xbd, 0xdf, 0x0d, 0x07, 0x44, 0xaf,
	0xd0, 0x5e, 0x36, 0x70, 0x27, 0xe1, 0x34, 0x28, 0xa3, 0x5c, 0x95, 0x75, 0x75, 0x0b, 0x6b, 0xd0,
	0x51, 0xd5, 0xc7, 0x0a, 0x5e, 0x03, 0x09, 0xfc, 0x1b, 0xb1, 0xb4, 0xd3, 0xd9, 0xd0, 0x8b, 0x00,
	0xb3, 0x47, 0x12, 0x65, 0x02, 0x2f, 0x00, 0x80, 0x83, 0x0d, 0xad, 0x66, 0xd1, 0x0c, 0x54, 0x9e,
	0xf8, 0xd9, 0x47, 0x01, 0x57, 0xc0, 0x78, 0xd5, 0x44, 0x38, 0x94, 0x43, 0x4a, 0x01, 0x2f, 0xa8,
	0xec, 0xc3, 0x9d, 0x4d, 0xba, 0xe7, 0x6b, 0x4b, 0x63, 0x2e, 0xe5, 0x65, 0xc3, 0xac, 0xc0, 0x2f,
	0xc7, 0x00, 0x94, 0x2d, 0x0b, 0x59, 0xd8, 0xb0, 0x17, 0x0d, 0x5d, 0x21, 0xa3, 0x91, 0xcd, 0xf1,
	0xce, 0xcf, 0xed, 0x2f, 0xff, 0xd5, 0xdf, 0xfb, 0x54, 0x52, 0xe2, 0xd6, 0x71, 0x0d, 0x56, 0x66,
	0xb2, 0xc4, 0x06, 0x68, 0x81, 0xc9, 0xb0, 0xe8, 0x88, 0x20, 0x1d, 0x96, 0x1b, 0x1f, 0xc1, 0x7f,
	0x16, 0x03, 0x0f, 0x6c, 0xc9, 0x15, 0x55, 0xab, 0x17, 0x2a, 0xa8, 0xb2, 0x89, 0xcc, 0x42, 0x59,
	0xb5, 0x6c, 0x6c, 0x86, 0x1e, 0xe1, 0x95, 0xf7, 0x2d, 0x22, 0xef, 0xcd, 0x9e, 0xe5, 0xbd, 0x4c,
	0xc4, 0x58, 0x25, 0x52, 0x2c, 0x53, 0x21, 0xa4, 0x23, 0x5b, 0xcd, 0x0f, 0xe1, 0x2f, 0xc4, 0x40,
	0x5a, 0xd6, 0x65, 0xad, 0x6e, 0xa9, 0x16, 0x2b, 0x88, 0x7c, 0x82, 0xd7, 0x06, 0x2f, 0x30, 0xba,
	0xfc, 0x1a, 0x91, 0x7a, 0xa5, 0xf7, 0x51, 0x66, 0x0c, 0x25, 0x57, 0xa4, 0x5d, 0x7a, 0x3a, 0xfa,
	0x37, 0x87, 0x41, 0xc6, 0xd5, 0x9b, 0x03, 0x92, 0xbb, 0x68, 0x1a, 0x5a, 0x58, 0x9c, 0x49, 0x22,
	0x44, 0xf0, 0x83, 0x18, 0x48, 0xc8, 0x45, 0xdb, 0x30, 0xf9, 0x11, 0xbf, 0x77, 0xfb, 0x72, 0xae,
	0x23, 0x62, 0x62, 0x33, 0x91, 0x35, 0xf7, 0xe7, 0x43, 0x20, 0x41, 0xd4, 0xde, 0x60, 0x00, 0xfe,
	0xee, 0x56, 0x70, 0x3c, 0xdc, 0x56, 0x70, 0x15, 0xc4, 0x35, 0x55, 0x7f, 0x87, 0x7f, 0xea, 0xce,
	0xf8, 0xa6, 0x6e, 0x32, 0x4c, 0xe4, 0x22, 0x4b, 0xa4, 0xa7, 0xf9, 0x9f, 0xf5, 0x03, 0x11, 0x73,
	0x51, 0x95, 0x06, 0x41, 0x23, 0x16, 0xb8, 0xd1, 0x88, 0x06, 0xc3, 0xe7, 0xaa, 0x9c, 0x89, 0xef,
	0x6c, 0x80, 0x23, 0x97, 0x34, 0x84, 0xc7, 0x42, 0x71, 0xdb, 0x2f, 0xdd, 0x87, 0x45, 0x31, 0x0f,
	0xe2, 0x55, 0xd9, 0x2e, 0xf3, 0xa1, 0x71, 0x5e, 0xa0, 0x81, 0x69, 0xe0, 0x79, 0x00, 0x2c, 0x4d,
	0x2d, 0xa2, 0x82, 0x2e, 0xbb, 0xc7, 0x18, 0xba, 0x09, 0x9d, 0x21, 0x14, 0xd7, 0xe5, 0x0a, 0x82,
	0xa7, 0x40, 0x42, 0x93, 0x37, 0x91, 0xc6, 0xb0, 0xb5, 0xae, 0x29, 0xb0, 0xa4, 0x31, 0x9c, 0x66,
	0x21, 0x52, 0x8a, 0xab, 0x52, 0x21, 0x8d, 0x88, 0x2e, 0x02, 0xe0, 0x8d, 0x72, 0xb7, 0x3d, 0xbf,
	0x55, 0xd9, 0x7c, 0x47, 0x31, 0xee, 0xea, 0x92, 0x8f, 0x06, 0xce, 0x7b, 0x2b, 0x7d, 0x84, 0x93,
	0xdc, 0x97, 0xf6, 0x30, 0x6a, 0xa2, 0x8f, 0xd4, 0x54, 0x93, 0x4c, 0xb7, 0xc5, 0xa2, 0xc3, 0xee,
	0x0c, 0x02, 0x54, 0x78, 0xb4, 0x64, 0x4d, 0x95, 0xad, 0xec, 0x58, 0xe7, 0x17, 0x77, 0x46, 0x8b,
	0x34, 0x86, 0x33, 0x60, 0xb8, 0xa2, 0xea, 0x2c, 0x0c, 0x6c, 0x8b, 0x5e, 0xbe, 0xae, 0x5b, 0x6a,
	0x49, 0x47, 0xca, 0x8a, 0x6e, 0x4b, 0xb8, 0x3d, 0x3c, 0x01, 0x86, 0x2b, 0xf2, 0x36, 0x0b, 0x95,
	0xba, 0x75, 0x85, 0x9b, 0xc2, 0x25, 0x10, 0xc7, 0xd1, 0x35, 0x0b, 0x55, 0xda, 0x1a, 0xf3, 0x16,
	0x6b, 0x7e, 0x2a, 0x2f, 0x5b, 0x48, 0x22, 0xd4, 0xf0, 0x35, 0xb6, 0x25, 0x44, 0xa3, 0x8a, 0x93,
	0x61, 0xb8, 0xdc, 0xac, 0x57, 0x91, 0x84, 0xb6, 0xd8, 0x76, 0x10, 0x02, 0x63, 0x0a, 0xda, 0x92,
	0x6b, 0x9a, 0x5d, 0xf0, 0xa7, 0xd4, 0xcc, 0x85, 0xe1, 0xb8, 0x44, 0x19, 0x04, 0x77, 0x1f, 0x46,
	0x15, 0xdf, 0x53, 0x28, 0x81, 0xa3, 0x15, 0x24, 0xeb, 0xd8, 0x85, 0xbf, 0x5b, 0x46, 0x7a, 0xa1,
	0xa2, 0x5a, 0x96, 0xaa, 0x97, 0xd8, 0x99, 0xb2, 0xee, 0x53, 0x0c, 0x19, 0xf5, 0x1b, 0x65, 0xa4,
	0xaf, 0x52, 0x5a, 0xb8, 0x08, 0xc6, 0x48, 0xea, 0x73, 0x81, 0xfd, 0x8f, 0xe5, 0xeb, 0x74, 0x9b,
	0x85, 0x51, 0x42, 0xb4, 0x4a, 0x69, 0xe0, 0x2a, 0x48, 0xa1, 0x6d, 0x02, 0x42, 0x67, 0xb3, 0xe1,
	0xc7, 0xf2, 0x12, 0x25, 0x95, 0x1c, 0x1e, 0xf0, 0x4d, 0x90, 0xa9, 0xa8, 0x3a, 0x1b, 0xca, 0x87,
	0x3b, 0x1f, 0x61, 0x69, 0xc5, 0x70, 0x55, 0xd5, 0x83, 0xc3, 0x98, 0xae, 0xb0, 0x27, 0x84, 0xb5,
	0xbc, 0xcd, 0x58, 0xe7, 0x22, 0xb0, 0x96, 0xb7, 0x1b, 0x59, 0xb3, 0x27, 0x38, 0xa2, 0xc0, 0xac,
	0x35, 0xa4, 0x97, 0xec, 0x32, 0x4b, 0xb3, 0xe9, 0x10, 0xe5, 0xda, 0xa8, 0x84, 0xc3, 0xd1, 0x8a,
	0xbc, 0x7d, 0x8d, 0x50, 0xc0, 0x39, 0x02, 0x7e, 0x32, 0xe7, 0x9f, 0x7a, 0xa9, 0x9d, 0xe0, 0x61,
	0xaf, 0x31, 0xbc, 0x45, 0x62, 0x19, 0xcb, 0x36, 0x65, 0xd5, 0x4d, 0x95, 0x99, 0x0d, 0xf3, 0x56,
	0x8b, 0x2e, 0xb5, 0xe4, 0xe3, 0x04, 0xf3, 0x60, 0xb4, 0x52, 0xb3, 0xec, 0x82, 0x55, 0xab, 0x62,
	0x7b, 0x92, 0x7d, 0xbc, 0xf3, 0x3b, 0xe5, 0x0d, 0x43, 0x43, 0xb2, 0x2e, 0x8d, 0x60, 0xa2, 0x0d,
	0x4a, 0x03, 0x3f, 0x04, 0x52, 0x9b, 0xaa, 0x4e, 0xaa, 0xbd, 0x3e, 0x45, 0xc8, 0x97, 0x42, 0x2d,
	0x0d, 0xfa, 0xcc, 0x33, 0x72, 0x79, 0xca, 0x4b, 0x72, 0x98, 0xe2, 0xa5, 0x57, 0x91, 0xab, 0x55,
	0xcc, 0x7f, 0x22, 0xfc, 0xd2, 0x5b, 0xa5, 0xa4, 0x92, 0xc3, 0x03, 0x7e, 0x3c, 0x06, 0xd2, 0x04,
	0xbe, 0xc3, 0x93, 0xf0, 0x34, 0x8f, 0xee, 0xcb, 0x2f, 0x93, 0xc0, 0x80, 0x1b, 0x27, 0x45, 0x8d,
	0x62, 0x4c, 0x3a, 0xfd, 0x49, 0x6e, 0xcf, 0xf0, 0x2b, 0x31, 0x30, 0x26, 0x6b, 0x9a, 0x71, 0x17,
	0x29, 0x85, 0x9a, 0xae, 0xda, 0x56, 0xf6, 0x19, 0x32, 0x78, 0x67, 0xbb, 0xbc, 0x9c, 0xd7, 0xcf,
	0x02, 0xa5, 0x7e, 0x1d, 0x13, 0xb3, 0x2d, 0xcd, 0x6b, 0x44, 0xd0, 0xcb, 0xd1, 0x05, 0x95, 0x7d,
	0x3c, 0xa5, 0x51, 0xff, 0xaf, 0xdc, 0x2f, 0x0d, 0x81, 0x38, 0xd6, 0xac, 0x7b, 0xcd, 0xa5, 0x20,
	0xf6, 0x2a, 0xce, 0x6d, 0xaf, 0x5c, 0x7a, 0x62, 0xb7, 0xe6, 0xa8, 0xdd, 0x4a, 0x84, 0xea, 0x19,
	0x93, 0xe4, 0x7e, 0x77, 0x08, 0xa4, 0x98, 0x09, 0xb9, 0xf7, 0x23, 0x76, 0x9a, 0xf9, 0x34, 0xdd,
	0x37, 0x86, 0x1a, 0xa0, 0xde, 0x3c, 0x18, 0xa7, 0x39, 0x08, 0x85, 0xaa, 0x69, 0x6c, 0xa9, 0x9a,
	0xe3, 0x85, 0x75, 0xde, 0x5b, 0xa2, 0x24, 0xeb, 0x94, 0x02, 0xde, 0x00, 0xe0, 0x0e, 0x32, 0xb1,
	0x1c, 0xf8, 0x93, 0x4d, 0x75, 0xbe, 0xaf, 0xce, 0x75, 0xc8, 0x6f, 0x51, 0x12, 0xb2, 0x3d, 0x45,
	0xb6, 0x9a, 0x7c, 0x4c, 0x72, 0x7f, 0x00, 0xc1, 0xa8, 0xdf, 0x7a, 0xc2, 0xab, 0x60, 0x0c, 0xdb,
	0xf7, 0xd9, 0x53, 0x85, 0x4d, 0x55, 0x97, 0x4d, 0x67, 0x5b, 0xba, 0xfd, 0x25, 0x46, 0xa4, 0x71,
	0x9e, 0xb4, 0x5d, 0x3e, 0x20, 0x8d, 0x6e, 0xfa, 0x7e, 0xc3, 0xb3, 0x20, 0xb5, 0x49, 0x15, 0x1b,
	0x0b, 0xa7, 0xbb, 0xe9, 0xbf, 0xe5, 0x03, 0x92, 0x43, 0xe1, 0xba, 0x8f, 0xc3, 0x9d, 0xf7, 0xef,
	0xf0, 0x2b, 0x2d, 0x1f, 0x60, 0xa3, 0x3c, 0xcd, 0x2a, 0x10, 0xc4, 0x3b, 0xd3, 0xe0, 0xd0, 0x1f,
	0xd3, 0x90, 0xba, 0x03, 0x01, 0xcc, 0x20, 0x11, 0x01, 0x33, 0x38, 0x0b, 0x52, 0x0a, 0x2a, 0xaa,
	0x15, 0xd9, 0xf1, 0x8f, 0x9f, 0x68, 0x9f, 0x2f, 0x40, 0x9a, 0xe1, 0xb7, 0x64, 0x14, 0xf0, 0x65,
	0xb2, 0x82, 0x53, 0xdd, 0x76, 0x34, 0x97, 0x0f, 0x90, 0xf5, 0x7b, 0x16, 0xa4, 0x54, 0x8a, 0xf1,
	0xb2, 0xed, 0xe5, 0x6e, 0x50, 0x30, 0xee, 0x8a, 0x51, 0x50, 0x62, 0x62, 0x3a, 0xd9, 0x16, 0x73,
	0x37, 0x0b, 0x4b, 0x89, 0xc9, 0x9f, 0xf0, 0x02, 0x48, 0x57, 0x98, 0x2f, 0xc4, 0xeb, 0x96, 0xe3,
	0x41, 0x72, 0x68, 0xe0, 0x71, 0x30, 0x6c, 0xa8, 0x4e, 0x1e, 0x5e, 0xdb, 0x45, 0xbf, 0xa6, 0xe2,
	0x37, 0xc5, 0x2d, 0xe1, 0x32, 0x18, 0xa5, 0x87, 0xa1, 0xee, 0xa0, 0x02, 0x36, 0xcd, 0xa3, 0x9d,
	0x15, 0xcd, 0x3a, 0x6b, 0xbb, 0x42, 0xde, 0x79, 0xa4, 0xea, 0xfd, 0x6c, 0x4a, 0x67, 0x18, 0x0b,
	0x99, 0xce, 0xe0, 0x6c, 0xe8, 0x8f, 0x87, 0xd8, 0xd0, 0x5f, 0x06, 0xa3, 0x35, 0xa6, 0xfa, 0x88,
	0xf4, 0x07, 0xb9, 0xd5, 0x24, 0x96, 0xbe, 0xe6, 0xfd, 0xc4, 0x03, 0x57, 0x33, 0x55, 0xe6, 0xad,
	0x77, 0xd2, 0x16, 0x78, 0xe0, 0x6a, 0xa6, 0x8a, 0xa7, 0x59, 0x56, 0x14, 0x13, 0x59, 0x56, 0xb7,
	0xed, 0x82, 0x05, 0xda, 0x0c, 0x4f, 0x33, 0xa3, 0x70, 0xb2, 0xe3, 0x60, 0xe7, 0xde, 0x16, 0x48,
	0xda, 0x06, 0xc9, 0x8e, 0x5b, 0x02, 0x40, 0xd6, 0x75, 0x83, 0x65, 0xe0, 0x1c, 0xe9, 0x92, 0x33,
	0xe1, 0xb6, 0x24, 0x39, 0x13, 0xee, 0xaf, 0x86, 0xcc, 0x8b, 0xa3, 0x11, 0x33, 0x2f, 0x5a, 0x65,
	0xc3, 0x3c, 0xd0, 0x73, 0x36, 0xcc, 0x9c, 0x5b, 0x72, 0xbf, 0x4b, 0x12, 0x3d, 0x0d, 0x64, 0xf1,
	0xc2, 0x61, 0x45, 0xf7, 0xaf, 0x82, 0x31, 0xb2, 0xad, 0x5e, 0xb4, 0x0b, 0x55, 0x03, 0xaf, 0x82,
	0x87, 0x3a, 0xeb, 0xd2, 0x45, 0xda, 0x78, 0x1d, 0xb7, 0xc5, 0xba, 0xb4, 0xe8, 0xfb, 0x0d, 0x67,
	0x40, 0x82, 0xec, 0x5a, 0xb1, 0x5c, 0xfa, 0xc7, 0xda, 0x33, 0xa9, 0x11, 0x6a, 0xda, 0x1a, 0x7f,
	0xb7, 0x8a, 0x8a, 0xbf, 0xff, 0xa2, 0x13, 0x0e, 0xb4, 0x57, 0x6e, 0xac, 0x1d, 0x51, 0x6e, 0xec,
	0x6f, 0x42, 0x5f, 0x33, 0x65, 0x86, 0xaa, 0x77, 0xa6, 0x67, 0xed, 0x08, 0x3d, 0xfb, 0x1b, 0xe6,
	0x01, 0x28, 0xd7, 0x2a, 0xb2, 0x4e, 0x91, 0x87, 0x47, 0x3a, 0x83, 0x48, 0xcb, 0xb8, 0xe5, 0x75,
	0x99, 0x7c, 0x47, 0x99, 0xb2, 0xf3, 0xa3, 0xe1, 0x4c, 0xfb, 0xa3, 0x11, 0xcf, 0xb4, 0xcf, 0x80,
	0x44, 0xc5, 0xd0, 0x51, 0x3d, 0xfb, 0x58, 0xe7, 0x01, 0x5c, 0xc5, 0x8d, 0xf0, 0x00, 0x92, 0xd6,
	0x3e, 0x44, 0xf8, 0xf1, 0x70, 0x88, 0x70, 0x20, 0xb9, 0xeb, 0x89, 0x08, 0xc9, 0x5d, 0x6e, 0x1a,
	0xd5, 0x93, 0xd1, 0xd2, 0xa8, 0x9e, 0x0a, 0x95, 0x46, 0xb5, 0xe0, 0x3f, 0xf2, 0x3f, 0xc1, 0x09,
	0xf6, 0x05, 0xce, 0xed, 0x37, 0x65, 0x62, 0x3d, 0x1d, 0x39, 0x13, 0x6b, 0x01, 0x64, 0xb0, 0x06,
	0x94, 0xb1, 0x5b, 0xcd, 0xdc, 0xf7, 0xa7, 0xda, 0xa7, 0x1a, 0xb3, 0x86, 0x58, 0x18, 0x97, 0x0a,
	0xcf, 0x9b, 0xad, 0x56, 0xf0, 0x67, 0xfb, 0x6c, 0xe7, 0x79, 0xbb, 0x49, 0x5a, 0xe1, 0x79, 0xa3,
	0xed, 0xb1, 0xbe, 0x27, 0x89, 0x43, 0xcf, 0x75, 0x4f, 0x1c, 0xc2, 0xfa, 0x1e, 0xb7, 0xcd, 0x1f,
	0x6c, 0x40, 0x31, 0x72, 0xdf, 0x3b, 0x0a, 0x52, 0x2c, 0x38, 0xbf, 0xf7, 0x5e, 0xea, 0x39, 0x07,
	0xaf, 0x0b, 0xe7, 0xd8, 0x33, 0xdc, 0xce, 0x4d, 0x07, 0x8d, 0x77, 0x3e, 0x68, 0xd6, 0x01, 0x8f,
	0x60, 0x51, 0x53, 0xf0, 0xa0, 0x19, 0xcb, 0xa8, 0xff, 0xd7, 0xd0, 0xc9, 0x7e, 0x14, 0xbe, 0xa6,
	0xf0, 0x35, 0x85, 0xaf, 0x29, 0x7c, 0x4d, 0xe1, 0x6b, 0x0a, 0x5f, 0x53, 0xf8, 0x9a, 0xc2, 0xd7,
	0x14, 0xbe, 0x26, 0x97, 0xaf, 0xe9, 0x55, 0xcc, 0x8f, 0x83, 0xb4, 0xb3, 0x5f, 0xe3, 0xba, 0x23,
	0xb1, 0xa8, 0xee, 0xc8, 0x50, 0x34, 0x77, 0xc4, 0xf1, 0x11, 0x86, 0x43, 0xfb, 0x08, 0x8e, 0xad,
	0x8b, 0x87, 0xb0, 0x75, 0x3e, 0xff, 0x27, 0x11, 0xda, 0xff, 0xf1, 0x39, 0x25, 0xc9, 0xd0, 0x4e,
	0x49, 0xa3, 0x8f, 0x90, 0x8a, 0xec, 0x23, 0x34, 0xda, 0xeb, 0x74, 0x64, 0x7b, 0xed, 0xff, 0xea,
	0x33, 0x11, 0xee, 0x5e, 0x18, 0xf1, 0x6d, 0x16, 0xd2, 0xd5, 0xe4, 0x6c, 0xc8, 0x89, 0xd5, 0x24,
	0x56, 0x53, 0x94, 0xd5, 0xe4, 0xec, 0x0f, 0xe7, 0xbe, 0x11, 0x07, 0xc0, 0xdb, 0x1a, 0xbd, 0xf7,
	0x21, 0xf0, 0x29, 0x30, 0xfc, 0x0e, 0xaa, 0xb3, 0x75, 0xd4, 0x21, 0xd8, 0xf1, 0xf6, 0x96, 0xde,
	0x41, 0x75, 0x98, 0x6f, 0x48, 0x00, 0xe1, 0xcb, 0x95, 0x0a, 0xa6, 0x7f, 0x48, 0x20, 0x6d, 0xa1,
	0x3b, 0xc8, 0xc4, 0xc3, 0x48, 0x57, 0xd5, 0x54, 0x07, 0x27, 0x8c, 0x0d, 0xd0, 0x06, 0xa3, 0x08,
	0x1c, 0x58, 0x70, 0xf9, 0xe0, 0x80, 0x9e, 0xb8, 0x28, 0x7c, 0x09, 0x38, 0x5e, 0x40, 0x4f, 0x88,
	0xe0, 0x65, 0x00, 0xd0, 0x76, 0x15, 0xfb, 0xdc, 0xde, 0x29, 0x49, 0x5e, 0x16, 0x3e, 0x4a, 0x78,
	0x0a, 0x24, 0xb6, 0xc9, 0x7e, 0x61, 0x9a, 0x2f, 0x0d, 0x88, 0x34, 0x86, 0x27, 0x41, 0x92, 0x1e,
	0x32, 0x62, 0x8b, 0xaa, 0xe3, 0x8e, 0x17, 0x6b, 0x9a, 0xfb, 0xc3, 0x38, 0xc8, 0xb6, 0xdb, 0xc0,
	0xbe, 0xf7, 0x8b, 0x69, 0x0d, 0xa4, 0x2d, 0xdb, 0xa4, 0xc9, 0x09, 0xc3, 0x5d, 0x2e, 0xee, 0xa6,
	0x32, 0x6e, 0xb0, 0xe6, 0x0d, 0xf3, 0xc9, 0x9e, 0xc2, 0x8b, 0x60, 0x44, 0x41, 0x56, 0xd1, 0x54,
	0xab, 0xc4, 0xd9, 0xe5, 0x5b, 0x66, 0x7e, 0x12, 0x68, 0x82, 0x0c, 0xf9, 0xd0, 0x0a, 0x96, 0x7b,
	0x90, 0x7a, 0xb5, 0x1f, 0xd9, 0x01, 0x14, 0xb9, 0xd9, 0x40, 0xb6, 0x97, 0xa5, 0x71, 0x87, 0x3d,
	0xc9, 0xfd, 0x76, 0x0c, 0xa4, 0x9d, 0x7f, 0x3b, 0xb1, 0x62, 0x8c, 0x3b, 0x56, 0xac, 0x47, 0xaa,
	0x29, 0x1a, 0xf2, 0xcc, 0x80, 0x23, 0x5e, 0xb0, 0xa0, 0xe8, 0x88, 0x6f, 0xb0, 0x72, 0x7f, 0x3a,
	0x04, 0x52, 0x2c, 0x77, 0xe1, 0xde, 0xaf, 0xa4, 0x0b, 0x20, 0x4d, 0xc3, 0x04, 0x3b, 0x8c, 0x6e,
	0x72, 0x69, 0xc2, 0x1c, 0x2f, 0x5c, 0x55, 0x2b, 0xc8, 0x3d, 0x7a, 0xef, 0x1d, 0x2f, 0x24, 0x1b,
	0xef, 0xd5, 0xf0, 0x1b, 0xef, 0x55, 0x7f, 0x0e, 0x69, 0x32, 0x54, 0x0e, 0xe9, 0xfc, 0x27, 0x68,
	0x46, 0xe7, 0x10, 0xc9, 0xe8, 0xe4, 0x3e, 0xcd, 0xd6, 0xb4, 0x44, 0x49, 0x4a, 0xe7, 0xb9, 0xe8,
	0x39, 0x18, 0x0a, 0x9a, 0xf8, 0x9d, 0x09, 0x90, 0xa3, 0xb9, 0xef, 0x34, 0x03, 0x9f, 0x25, 0xe0,
	0xb3, 0x73, 0x0e, 0xe2, 0x7c, 0xa9, 0x38, 0x5f, 0x1a, 0xf5, 0x7c, 0xe9, 0xaf, 0xc7, 0x1a, 0x52,
	0x57, 0x43, 0x9d, 0x10, 0xe2, 0x3e, 0xa3, 0xb9, 0xae, 0xc9, 0xba, 0xf7, 0x33, 0xdc, 0x01, 0xb6,
	0x1b, 0x2c, 0x45, 0x4a, 0x97, 0x55, 0x13, 0x05, 0x92, 0x66, 0xd7, 0x1a, 0x8e, 0x59, 0x1e, 0x6f,
	0x27, 0x37, 0xfd, 0x76, 0xd8, 0xe1, 0x90, 0x0e, 0x67, 0x2c, 0xe7, 0x41, 0x5a, 0x37, 0xec, 0x82,
	0x62, 0xe8, 0xce, 0xcd, 0x20, 0x5d, 0x53, 0xdf, 0x52, 0xba, 0x61, 0x2f, 0x19, 0x3a, 0x82, 0x6b,
	0xe0, 0xa0, 0x43, 0xeb, 0x14, 0x8b, 0x08, 0x77, 0xca, 0x52, 0x1a, 0x63, 0xac, 0x58, 0xa5, 0x88,
	0x6d, 0x90, 0xaa, 0xd2, 0x43, 0x90, 0xfc, 0xa7, 0x2c, 0xcf, 0xf6, 0x50, 0xeb, 0x4f, 0x72, 0xba,
	0x83, 0xa7, 0xc2, 0xdd, 0x88, 0xc1, 0x02, 0xa9, 0x69, 0x10, 0x27, 0x08, 0xd6, 0x21, 0xbe, 0x8a,
	0x33, 0xb8, 0x2d, 0xdc, 0xc0, 0x9e, 0xab, 0x57, 0x73, 0x85, 0xc1, 0xb1, 0xa1, 0xcf, 0xa5, 0x06,
	0x98, 0xc0, 0x65, 0x90, 0x2c, 0x21, 0x5d, 0x21, 0x87, 0x07, 0x3b, 0x26, 0x0b, 0x2f, 0x28, 0x15,
	0x55, 0x57, 0xb1, 0x2f, 0x8b, 0x35, 0xc6, 0x6b, 0x84, 0x86, 0xa8, 0x1d, 0x46, 0x0f, 0x37, 0x40,
	0x7c, 0xd3, 0x30, 0x1d, 0xd0, 0xf6, 0x74, 0xe7, 0xe5, 0xd5, 0x4a, 0x35, 0x4f, 0xe5, 0x0d, 0x53,
	0x77, 0x7d, 0x12, 0xc2, 0x0c, 0xae, 0x53, 0x00, 0x99, 0x42, 0xb8, 0xb3, 0x11, 0x78, 0x2e, 0x94,
	0xbc, 0x64, 0x54, 0x86, 0x30, 0x8f, 0xe1, 0x4f, 0xa4, 0x22, 0xdb, 0x48, 0x29, 0x60, 0xde, 0x0f,
	0xf0, 0xad, 0xdd, 0x51, 0x97, 0x6a, 0xa1, 0x84, 0x60, 0x01, 0xa4, 0x15, 0x54, 0x44, 0xb2, 0x85,
	0x14, 0x86, 0xe3, 0x9e, 0x8d, 0x20, 0xdc, 0x12, 0x63, 0xe1, 0x39, 0x62, 0x0e, 0x53, 0xb8, 0x0c,
	0x46, 0xe8, 0x87, 0x41, 0xaf, 0xe6, 0x7f, 0x28, 0x5c, 0x31, 0x24, 0x40, 0x69, 0xf1, 0x63, 0xf8,
	0x5b, 0x43, 0xe0, 0x10, 0x63, 0xe5, 0x39, 0x67, 0x59, 0x5e, 0xdd, 0xf5, 0xbf, 0x62, 0xe1, 0x0e,
	0xde, 0xba, 0x47, 0xe1, 0x22, 0x9f, 0xc9, 0x24, 0x84, 0xf3, 0xbc, 0x84, 0x0b, 0x9a, 0x86, 0xcc,
	0x52, 0x7d, 0x45, 0xb7, 0x0d, 0x0d, 0x99, 0xb2, 0xce, 0x8e, 0x27, 0x9f, 0x8f, 0xa6, 0x30, 0x91,
	0x55, 0x35, 0x74, 0x0b, 0x49, 0x07, 0xe9, 0x80, 0xb9, 0xc3, 0x00, 0x67, 0x41, 0x5c, 0x37, 0x6c,
	0xd4, 0xf5, 0x14, 0xa3, 0xbb, 0x07, 0x21, 0x91, 0xf6, 0xf0, 0x2d, 0x7f, 0xd6, 0x32, 0x3d, 0xb2,
	0x78, 0x2e, 0xc2, 0x42, 0xf1, 0xce, 0x1c, 0xfa, 0xf2, 0x9a, 0xff, 0x49, 0x0c, 0x24, 0xab, 0xb2,
	0x89, 0x75, 0xde, 0x23, 0x9d, 0xaf, 0x61, 0x69, 0x71, 0x14, 0x70, 0x9d, 0x10, 0xe6, 0x37, 0x48,
	0xd2, 0xeb, 0x2a, 0xef, 0x68, 0xd1, 0xe3, 0x83, 0x93, 0x54, 0xc6, 0x49, 0x26, 0xa4, 0x7b, 0x90,
	0x66, 0x92, 0x4a, 0x23, 0x31, 0xa9, 0xe0, 0x17, 0x62, 0x20, 0x65, 0xa9, 0x9b, 0x9a, 0xaa, 0x97,
	0x58, 0xc6, 0xf6, 0x74, 0x08, 0x09, 0x37, 0x28, 0x65, 0xfe, 0x26, 0x11, 0xf1, 0x7a, 0x9f, 0x44,
	0x64, 0xf2, 0x48, 0x8e, 0x60, 0xf0, 0x17, 0x62, 0x60, 0xc4, 0x57, 0x9c, 0x84, 0xe5, 0x87, 0xf7,
	0xff, 0x5c, 0x69, 0x17, 0xb9, 0x7c, 0x22, 0x48, 0x7e, 0x79, 0x72, 0xdf, 0x88, 0x81, 0x38, 0x56,
	0x8c, 0xbe, 0x9d, 0x83, 0x58, 0xc8, 0x9d, 0x03, 0x07, 0xe9, 0x1b, 0x0a, 0x81, 0xf4, 0xf5, 0x58,
	0x20, 0x28, 0x9f, 0xa4, 0xd6, 0x20, 0xf7, 0xfb, 0x31, 0x30, 0x8c, 0x15, 0xe6, 0x3a, 0xc8, 0xc8,
	0x25, 0xc4, 0x98, 0xc5, 0x7a, 0x51, 0xe7, 0xce, 0x56, 0xa1, 0xbb, 0x9f, 0x31, 0x14, 0x6a, 0x3f,
	0xa3, 0xd7, 0x17, 0x4b, 0x10, 0x8b, 0x94, 0xfb, 0xdd, 0x21, 0x90, 0x76, 0xd4, 0xb7, 0x3f, 0x31,
	0x21, 0x16, 0x3a, 0x31, 0xe1, 0x0a, 0x35, 0x71, 0x43, 0x7d, 0x1d, 0x93, 0xe1, 0x50, 0x63, 0x12,
	0x25, 0xcf, 0xa1, 0x71, 0x1c, 0x13, 0x21, 0xc7, 0x11, 0x78, 0x16, 0x34, 0xf7, 0x37, 0x92, 0x20,
	0xe3, 0x9d, 0xa1, 0x16, 0x35, 0xdb, 0x68, 0xf6, 0xc9, 0x02, 0x48, 0x19, 0x35, 0xbb, 0x68, 0x54,
	0x42, 0x5f, 0x31, 0xe1, 0xd0, 0xc1, 0x9f, 0x00, 0x09, 0x6c, 0xcf, 0x9c, 0x68, 0x3e, 0xdf, 0x8b,
	0xe9, 0x99, 0x5a, 0xc3, 0x9c, 0xbc, 0xca, 0x6f, 0x84, 0xb1, 0x6b, 0x18, 0x53, 0xbc, 0x5b, 0xf5,
	0xd4, 0x30, 0xe6, 0x3e, 0x39, 0x04, 0x12, 0x84, 0xa1, 0xb3, 0xfe, 0xef, 0xa7, 0x4e, 0xf0, 0x54,
	0xeb, 0x70, 0xe8, 0x4d, 0xd9, 0xe0, 0x57, 0x10, 0x0f, 0xf9, 0x15, 0xa4, 0xd8, 0x04, 0xcd, 0xbf,
	0xe7, 0x3f, 0x11, 0x7b, 0x96, 0xd7, 0xa8, 0xb4, 0x30, 0x9b, 0x04, 0x41, 0x59, 0x0c, 0x67, 0x95,
	0x02, 0xc3, 0xea, 0xd8, 0xa4, 0x89, 0xff, 0xfc, 0x3c, 0x18, 0x5f, 0x56, 0x34, 0xdf, 0xa5, 0xa7,
	0x02, 0x3c, 0x11, 0xe0, 0x89, 0xb8, 0x58, 0x42, 0xd4, 0xf5, 0xda, 0xdf, 0x17, 0x4b, 0x88, 0x92,
	0x5e, 0x03, 0x50, 0xd2, 0xeb, 0x56, 0x73, 0x49, 0xaf, 0xb6, 0xd0, 0x57, 0xd0, 0x08, 0xee, 0x50,
	0x21, 0x2f, 0x71, 0x31, 0x07, 0xe7, 0xc5, 0x1c, 0x57, 0x82, 0x17, 0x73, 0xbc, 0xcc, 0x39, 0x6b,
	0x21, 0xea, 0x16, 0x1f, 0xed, 0x7f, 0xdd, 0xe2, 0xfd, 0x7e, 0xcd, 0x87, 0xbf, 0x98, 0xdc, 0xc3,
	0x3b, 0xb4, 0x31, 0xdc, 0xa2, 0x98, 0xdc, 0xfb, 0xb1, 0xf0, 0xd7, 0x8b, 0xe8, 0x91, 0x15, 0x68,
	0x6f, 0x97, 0x91, 0x6c, 0xb5, 0xbb, 0x8c, 0x64, 0x86, 0x73, 0x85, 0x07, 0x4b, 0x52, 0xbb, 0x46,
	0xab, 0xf1, 0x2e, 0x92, 0xeb, 0xcd, 0x17, 0x87, 0xf0, 0x6a, 0xbe, 0x96, 0xf7, 0x85, 0xec, 0xce,
	0xf2, 0x5c, 0xeb, 0x7d, 0xaa, 0xbf, 0xed, 0xa5, 0x62, 0x7e, 0x7b, 0x68, 0x10, 0xaf, 0x89, 0xb8,
	0x18, 0xe1, 0x9a, 0x08, 0x2f, 0x67, 0x40, 0x33, 0xee, 0x46, 0xba, 0x3c, 0xe1, 0x13, 0xa2, 0x48,
	0x7f, 0x0b, 0xc7, 0xf2, 0x66, 0xb0, 0x48, 0xff, 0x6c, 0xd8, 0xaf, 0x72, 0x6f, 0xd7, 0xe6, 0xff,
	0x50, 0xbb, 0xda, 0xfc, 0xd1, 0xf4, 0x9f, 0x28, 0xc9, 0x2f, 0x4a, 0xf2, 0xef, 0x81, 0x92, 0xfc,
	0x1f, 0xed, 0x47, 0x45, 0x7e, 0x6e, 0x98, 0xa0, 0x1c, 0xf8, 0x62, 0x26, 0x7e, 0x74, 0x0c, 0x80,
	0x65, 0x24, 0x2b, 0x45, 0xd5, 0x2c, 0xd6, 0x2a, 0x02, 0xdd, 0x13, 0xe8, 0x9e, 0x40, 0xf7, 0x04,
	0xba, 0x77, 0x3f, 0xd0, 0xbd, 0xab, 0x91, 0xd1, 0x3d, 0x2f, 0x83, 0xd6, 0x45, 0xf9, 0x5e, 0x0f,
	0xa0, 0x7c, 0x6d, 0x0f, 0xb7, 0x7b, 0x9a, 0xaf, 0x91, 0xe7, 0x65, 0xc3, 0x0c, 0x48, 0x49, 0xdd,
	0xb3, 0xed, 0x08, 0xb0, 0x5f, 0x6f, 0x39, 0x66, 0x7b, 0x17, 0x5e, 0xbb, 0xdd, 0x0c, 0xaf, 0xbd,
	0xcc, 0x31, 0x0f, 0x1c, 0x17, 0xd8, 0x0a, 0x80, 0x6d, 0xa7, 0x01, 0xb6, 0xcb, 0x41, 0x80, 0xed,
	0x05, 0x8e, 0x79, 0x13, 0xe0, 0x9a, 0x00, 0xd7, 0x76, 0x35, 0xb8, 0xf6, 0x56, 0x2b, 0x70, 0xad,
	0x63, 0xce, 0x9c, 0x6f, 0x75, 0x77, 0xb9, 0xdc, 0x77, 0xc9, 0x7f, 0xb9, 0x2f, 0xe6, 0x79, 0x8c,
	0x8b, 0x67, 0xc3, 0x7d, 0xbe, 0x57, 0x9a, 0x61, 0xb9, 0x97, 0xb9, 0x2c, 0x57, 0x0b, 0x48, 0xee,
	0xab, 0xc3, 0xe0, 0xc1, 0xd6, 0x26, 0xed, 0xde, 0x63, 0x2d, 0xb3, 0x6e, 0xbd, 0x83, 0x61, 0xae,
	0x22, 0xd1, 0x4e, 0xb5, 0x03, 0x07, 0x56, 0x8a, 0xf3, 0xc3, 0x4a, 0xb0, 0x0e, 0x0e, 0x95, 0x91,
	0xac, 0x14, 0xe8, 0xd8, 0xd0, 0xcc, 0xd9, 0x04, 0xe9, 0xf5, 0xa5, 0xce, 0xbd, 0xbe, 0xa1, 0xda,
	0xe5, 0xcb, 0xea, 0x36, 0x52, 0x88, 0xd9, 0x9f, 0xf8, 0xd1, 0x0f, 0x7e, 0xee, 0x4b, 0xc9, 0x43,
	0x6c, 0xc1, 0x69, 0x86, 0xaa, 0x17, 0xf1, 0x92, 0xfb, 0xc2, 0x37, 0x3e, 0xfd, 0x7e, 0x32, 0x39,
	0x37, 0x3d, 0x77, 0x7a, 0x72, 0x46, 0x1a, 0xc7, 0x1d, 0x2d, 0x92, 0x7e, 0x30, 0xcd, 0xfc, 0x79,
	0x12, 0xc1, 0x9d, 0xe6, 0x4f, 0x93, 0x0d, 0xcc, 0xce, 0xbe, 0x01, 0x51, 0xc5, 0x5d, 0xbb, 0xe2,
	0xae, 0xdd, 0xf0, 0x70, 0xf1, 0x67, 0x07, 0xeb, 0xae, 0xdd, 0x8d, 0xbe, 0xdc, 0xb5, 0xeb, 0x45,
	0x27, 0x64, 0x42, 0xeb, 0xe1, 0xef, 0xdc, 0xbd, 0xe0, 0x0b, 0x4e, 0xa6, 0x79, 0x35, 0xd7, 0x1d,
	0xd5, 0x96, 0x35, 0x4b, 0x2d, 0xe9, 0x96, 0x7b, 0xe5, 0xee, 0xd7, 0x13, 0x02, 0xcd, 0x6f, 0x46,
	0xf3, 0xd7, 0x83, 0x68, 0xfe, 0x74, 0x18, 0x63, 0xbe, 0xb7, 0x91, 0xfc, 0xb7, 0xda, 0x21, 0xf9,
	0xbd, 0x3b, 0x5b, 0xfd, 0x37, 0x49, 0xf3, 0x77, 0x7c, 0x08, 0x6c, 0x84, 0xaf, 0x80, 0x00, 0xb0,
	0xdc, 0x74, 0x65, 0xf7, 0x45, 0x27, 0xfe, 0xe4, 0x18, 0xc8, 0x2c, 0x23, 0xd9, 0xb4, 0x4d, 0xd9,
	0x46, 0x02, 0x7b, 0x15, 0xd8, 0xab, 0xc0, 0x5e, 0x05, 0xf6, 0xba, 0xe7, 0xb1, 0xd7, 0x9b, 0x01,
	0xec, 0x75, 0xae, 0x83, 0xc2, 0xa7, 0x8a, 0x4f, 0x40, 0xaf, 0xfd, 0x86, 0x5e, 0xdf, 0x68, 0x86,
	0x5e, 0x5f, 0xea, 0x3e, 0x0d, 0x02, 0x79, 0xdd, 0x05, 0xc8, 0xeb, 0xa5, 0x20, 0xf2, 0xfa, 0x7c,
	0xf7, 0x69, 0x13, 0xc0, 0xab, 0x00, 0x5e, 0x77, 0x35, 0xf0, 0xfa, 0x66, 0x3b, 0xe0, 0xf5, 0x44,
	0xf7, 0xc5, 0xdd, 0x05, 0x77, 0x5d, 0x6c, 0xc4, 0x5d, 0x5f, 0xe4, 0x61, 0xd9, 0x00, 0xbb, 0xae,
	0x34, 0xc3, 0xae, 0x2f, 0xf1, 0x18, 0xad, 0x16, 0xa8, 0xeb, 0x2f, 0xef, 0x53, 0xd4, 0xf5, 0x2e,
	0x38, 0x58, 0xc6, 0x23, 0x53, 0xc0, 0x43, 0xb3, 0x43, 0xa0, 0xeb, 0xdc, 0xec, 0xe9, 0xc9, 0x53,
	0xd2, 0x18, 0xe9, 0x47, 0x92, 0x6d, 0x24, 0x30, 0x57, 0x81, 0xb9, 0x0a, 0xcc, 0x55, 0x60, 0xae,
	0xfb, 0x16, 0x73, 0xfd, 0x97, 0x02, 0x73, 0x6d, 0x81, 0xb9, 0xae, 0x05, 0x31, 0xd7, 0x57, 0x42,
	0x58, 0xf2, 0xbd, 0x0d, 0xb9, 0xbe, 0xd9, 0x0e, 0x72, 0xed, 0xd9, 0xcd, 0xda, 0x01, 0xc4, 0xb5,
	0xd6, 0x07, 0xc4, 0xf5, 0x95, 0x10, 0x88, 0x2b, 0x7d, 0xcf, 0x89, 0x8f, 0x4d, 0x80, 0xcc, 0xb2,
	0x26, 0x9b, 0xc8, 0xaa, 0x69, 0xb6, 0x00, 0x5c, 0x05, 0xe0, 0x1a, 0x15, 0x70, 0xfd, 0x20, 0x12,
	0xe0, 0xfa, 0xc3, 0xa1, 0x1e, 0x00, 0x57, 0x81, 0x9a, 0xf6, 0x8c, 0x9a, 0x4a, 0x0d, 0xa8, 0xe9,
	0x74, 0xfb, 0x8b, 0x2b, 0x82, 0xd7, 0xcc, 0x73, 0x1f, 0x4a, 0x8f, 0x89, 0x43, 0xe9, 0xe2, 0x50,
	0x7a, 0x2f, 0xd0, 0xed, 0x8d, 0x30, 0xd0, 0xad, 0x63, 0xc9, 0x76, 0xe8, 0x3c, 0xfa, 0x4a, 0x33,
	0x66, 0xcb, 0x21, 0xcb, 0xba, 0x43, 0xe2, 0x87, 0x35, 0xfd, 0x30, 0xd9, 0x11, 0x5e, 0x75, 0xd9,
	0x3b, 0x4c, 0x66, 0x83, 0x24, 0x95, 0x2a, 0x7b, 0x94, 0xb7, 0xd3, 0x33, 0x91, 0xab, 0x16, 0x4a,
	0xac, 0x2f, 0xf8, 0xad, 0x18, 0x18, 0x53, 0x2b, 0x72, 0x49, 0xd5, 0x4b, 0x05, 0xcb, 0xae, 0x29,
	0xf5, 0xec, 0x03, 0xe1, 0xea, 0xc4, 0x9e, 0xe2, 0x57, 0xf5, 0xa4, 0x97, 0x0d, 0xdc, 0x49, 0x38,
	0x1d, 0xc9, 0x28, 0x57, 0x65, 0x5d, 0xdd, 0xc2, 0x3a, 0x72, 0x54, 0xf5, 0xb1, 0x82, 0xe7, 0x41,
	0x02, 0xff, 0x46, 0xd9, 0x07, 0x3b, 0x47, 0xa8, 0xde, 0xac, 0x63, 0x7e, 0x48, 0xa2, 0x54, 0xf0,
	0x02, 0xb9, 0x6e, 0xbd, 0xa8, 0xd5, 0x88, 0xad, 0x7e, 0x88, 0x2b, 0x26, 0xf1, 0x51, 0xc0, 0x75,
	0x40, 0x8e, 0xc6, 0x29, 0x05, 0x85, 0xea, 0x61, 0xd5, 0x62, 0xd5, 0x2a, 0xf9, 0x9d, 0x63, 0x42,
	0xbf, 0xe4, 0x90, 0xc3, 0x15, 0x30, 0x5e, 0x35, 0x11, 0x76, 0xbf, 0x91, 0x52, 0xc0, 0x6b, 0xb2,
	0x6b, 0x19, 0x47, 0xf7, 0x5c, 0x99, 0x34, 0xe6, 0x52, 0x5e, 0x36, 0xcc, 0x0a, 0xfc, 0x62, 0x0c,
	0x1c, 0x94, 0x35, 0x0d, 0x69, 0x88, 0x1c, 0x7b, 0xc3, 0xb6, 0x85, 0x61, 0xb0, 0xdc, 0x7a, 0x3b,
	0x64, 0x3d, 0xc3, 0xb2, 0x26, 0x4f, 0x96, 0x90, 0x6e, 0xd8, 0xf5, 0xaa, 0xaa, 0x97, 0x26, 0xe9,
	0x88, 0x5b, 0x93, 0x54, 0x88, 0x49, 0x47, 0x08, 0x69, 0x9c, 0x3e, 0x58, 0x62, 0xbf, 0xe1, 0x3f,
	0x8e, 0x81, 0x74, 0x49, 0xa3, 0x47, 0x03, 0xd9, 0x39, 0xf2, 0x13, 0xbc, 0x06, 0xef, 0x35, 0x46,
	0x97, 0x5f, 0x25, 0xa2, 0xbe, 0xd6, 0xa3, 0xa8, 0x8e, 0x18, 0x92, 0x2b, 0x10, 0xfc, 0x74, 0x0c,
	0xa4, 0xca, 0x72, 0x55, 0x33, 0x54, 0x07, 0xbb, 0x3d, 0xce, 0x2b, 0xdc, 0x32, 0x25, 0x0b, 0x7b,
	0x5d, 0x7b, 0x1b, 0xd9, 0x98, 0x10, 0x92, 0x23, 0x0d, 0xfc, 0x3b, 0x31, 0x77, 0x53, 0xe0, 0xb1,
	0x70, 0xf3, 0x7a, 0x95, 0x08, 0x74, 0xa9, 0x47, 0x81, 0x68, 0xdf, 0xce, 0x0e, 0xc3, 0x2e, 0xc5,
	0x28, 0x7f, 0x73, 0x18, 0x64, 0x5c, 0x4d, 0x3f, 0x08, 0xe0, 0xc3, 0x59, 0x10, 0x37, 0x0d, 0x2d,
	0x2c, 0xf8, 0x20, 0x11, 0x22, 0xf8, 0x41, 0x0c, 0x24, 0xe4, 0xa2, 0x6d, 0x98, 0xfc, 0x28, 0xd0,
	0xbb, 0x3e, 0x14, 0xe8, 0x1e, 0xef, 0x6f, 0x4a, 0x54, 0xd6, 0xdc, 0x9f, 0x0f, 0x81, 0x04, 0xd1,
	0xdb, 0x83, 0x01, 0x06, 0xbb, 0x3b, 0x89, 0xf1, 0x70, 0x3b, 0x89, 0x55, 0x10, 0xd7, 0x54, 0xfd,
	0x1d, 0xfe, 0xa9, 0x3b, 0xe3, 0x9b, 0xba, 0xc9, 0x30, 0xd1, 0x94, 0x2c, 0x91, 0x9e, 0x02, 0x27,
	0x7e, 0xb9, 0x63, 0xa2, 0x46, 0x2d, 0x18, 0x12, 0x03, 0x71, 0x2c, 0xf5, 0xc4, 0xf7, 0x9e, 0x07,
	0xe3, 0xd7, 0x44, 0x4d, 0x3f, 0x01, 0x84, 0x88, 0xcc, 0x33, 0x81, 0xa1, 0x88, 0x9a, 0x7e, 0x02,
	0x3e, 0xd9, 0xaf, 0x35, 0xfd, 0xae, 0x89, 0x9a, 0x7e, 0x7b, 0xb0, 0xa6, 0xdf, 0x35, 0x51, 0xd3,
	0x4f, 0x64, 0xbf, 0x0d, 0x74, 0x4d, 0xbf, 0x6b, 0x3b, 0x5e, 0xd3, 0xef, 0x9a, 0xa8, 0xe9, 0xe7,
	0x5d, 0xaf, 0x3c, 0x90, 0x35, 0xfd, 0xf2, 0x51, 0x12, 0x9c, 0x3c, 0x87, 0x88, 0x24, 0x3a, 0x89,
	0xaa, 0x7e, 0xf7, 0xba, 0xaa, 0xdf, 0x35, 0x51, 0xd5, 0xaf, 0xbb, 0x06, 0x14, 0x55, 0xfd, 0x44,
	0x55, 0x3f, 0x51, 0xd5, 0xaf, 0x81, 0x50, 0x0b, 0x56, 0xf5, 0xfb, 0xf1, 0x93, 0x60, 0xf4, 0x9a,
	0x5a, 0x55, 0x95, 0xaa, 0x69, 0x6c, 0xa9, 0x9a, 0x38, 0x5b, 0x2a, 0x10, 0x3e, 0x91, 0xea, 0x24,
	0x52, 0x9d, 0x44, 0xaa, 0x93, 0xc0, 0xea, 0x76, 0x0f, 0x56, 0x77, 0xb3, 0x19, 0xab, 0x9b, 0x6a,
	0xab, 0xf2, 0x7d, 0xc6, 0x6c, 0x87, 0x90, 0xba, 0x6b, 0xcd, 0x40, 0x1d, 0x9f, 0x38, 0xbb, 0x35,
	0xe1, 0x29, 0x26, 0x12, 0x9e, 0xb8, 0x13, 0x9e, 0x2e, 0x06, 0x13, 0x9e, 0x8e, 0x71, 0x4d, 0x7c,
	0x5f, 0x73, 0x9e, 0xfa, 0x98, 0xa1, 0xf4, 0xf1, 0x18, 0x18, 0xf1, 0x79, 0x83, 0xfc, 0x18, 0xd9,
	0xab, 0xbe, 0x8d, 0x6d, 0xee, 0x05, 0xe1, 0xeb, 0x49, 0xf2, 0x77, 0x0b, 0x3f, 0x11, 0x03, 0xa3,
	0xb6, 0xa9, 0x96, 0xb4, 0x7a, 0x11, 0x99, 0xaa, 0xe2, 0xe0, 0x5e, 0x1c, 0x72, 0x5c, 0x8c, 0x92,
	0x1b, 0xe1, 0xef, 0x4a, 0x0a, 0x74, 0x0c, 0xdf, 0x8b, 0x81, 0xc3, 0xe5, 0x82, 0x52, 0xd0, 0x0a,
	0xfe, 0x61, 0x79, 0x94, 0x57, 0x9c, 0xbc, 0x4f, 0x9c, 0x88, 0x75, 0xb6, 0xa5, 0xf1, 0xf2, 0xd2,
	0xb5, 0x45, 0xdf, 0xe0, 0xfc, 0xed, 0x18, 0x38, 0xac, 0x35, 0x89, 0xf4, 0x18, 0xaf, 0x48, 0xe7,
	0xc2, 0x09, 0xa3, 0x35, 0x08, 0xa3, 0x05, 0x84, 0x11, 0x29, 0x46, 0x22, 0xc5, 0x48, 0xa4, 0x18,
	0x0d, 0x56, 0x8a, 0xd1, 0x5f, 0xef, 0x5b, 0x8a, 0x11, 0xf7, 0xfc, 0x6b, 0x3e, 0xdb, 0x38, 0xf1,
	0xdb, 0x00, 0x1c, 0x5a, 0x45, 0xb6, 0xac, 0xc8, 0xb6, 0xec, 0x04, 0xcb, 0x02, 0x85, 0xd8, 0x9f,
	0x28, 0xc4, 0x24, 0x18, 0xae, 0x99, 0x1a, 0x03, 0xe2, 0x3a, 0xce, 0x06, 0x6e, 0x87, 0x3f, 0xb3,
	0x3b, 0xc8, 0x24, 0xbd, 0x02, 0xbe, 0xcf, 0x8c, 0x35, 0x87, 0xd3, 0x20, 0xae, 0xcb, 0x15, 0xc4,
	0x42, 0xde, 0xae, 0x3b, 0x16, 0xb8, 0x2d, 0x3c, 0x05, 0x12, 0xb6, 0x6a, 0x6b, 0x88, 0x45, 0xb4,
	0xdd, 0x88, 0x68, 0x63, 0x5f, 0x16, 0xcc, 0x58, 0xe7, 0x2c, 0x98, 0xf5, 0xda, 0xa6, 0xc6, 0xa0,
	0x85, 0x8e, 0x91, 0xf5, 0x28, 0xda, 0xc6, 0x36, 0x10, 0x6b, 0x0b, 0x59, 0x63, 0x31, 0x6d, 0xb7,
	0x2b, 0xc4, 0xa5, 0x00, 0x11, 0x3c, 0xc5, 0xae, 0xf0, 0x3e, 0xc8, 0x67, 0xb2, 0xd9, 0x25, 0xde,
	0xe7, 0x40, 0xa6, 0x8a, 0x65, 0xb4, 0xca, 0xc8, 0x64, 0x51, 0x58, 0xb7, 0x31, 0xf0, 0x08, 0xe0,
	0xab, 0x34, 0xe8, 0x94, 0x8b, 0x76, 0xf6, 0x30, 0x59, 0x21, 0xcf, 0x76, 0x5c, 0xb4, 0x45, 0x7b,
	0x09, 0xd9, 0xb2, 0xaa, 0x49, 0x0e, 0x15, 0xbc, 0x04, 0x46, 0x6a, 0x16, 0x41, 0xdb, 0xc9, 0x57,
	0x43, 0xe3, 0xae, 0xb6, 0xdf, 0xdc, 0xeb, 0x16, 0xf9, 0xe0, 0x48, 0x5b, 0x09, 0xd4, 0x2c, 0xe7,
	0x6f, 0x78, 0x15, 0x8c, 0x7e, 0xb8, 0x66, 0xaa, 0x96, 0xa2, 0x16, 0xc9, 0x96, 0xc5, 0x91, 0x70,
	0xa9, 0x44, 0x01, 0x62, 0x98, 0x07, 0x23, 0x0a, 0xb2, 0x8a, 0xa6, 0x5a, 0x25, 0xbc, 0x8e, 0x76,
	0x1e, 0xcf, 0x55, 0xd9, 0x7c, 0x47, 0x31, 0xee, 0xea, 0x92, 0x9f, 0x68, 0x7e, 0x89, 0xe8, 0xdf,
	0x38, 0xd1, 0xa0, 0x73, 0xfc, 0x0a, 0x3c, 0xa8, 0x30, 0x27, 0x7e, 0x7c, 0x19, 0x1c, 0xf1, 0x05,
	0x5c, 0xec, 0xba, 0x6b, 0x4b, 0x28, 0x52, 0x01, 0xe7, 0x8a, 0x84, 0x4d, 0x81, 0x04, 0x8b, 0x84,
	0x4d, 0x01, 0x02, 0xef, 0x71, 0x10, 0xf8, 0xed, 0x66, 0x10, 0x78, 0x86, 0x63, 0x81, 0x3a, 0x96,
	0x50, 0x64, 0x6d, 0xde, 0xdf, 0xac, 0xcd, 0xb5, 0x60, 0xd6, 0xe6, 0x2b, 0x61, 0xa6, 0x4e, 0xa4,
	0x6e, 0x8a, 0xd4, 0xcd, 0x5d, 0x9d, 0xba, 0x59, 0x6c, 0x57, 0xb8, 0x70, 0x3e, 0xcc, 0x32, 0xef,
	0x52, 0xc2, 0x70, 0xb5, 0xb1, 0x84, 0xe1, 0xc9, 0x70, 0xcc, 0x1b, 0x8a, 0x19, 0x6e, 0x34, 0xa7,
	0x81, 0x86, 0xd2, 0xa7, 0xad, 0x72, 0x41, 0xe1, 0x37, 0x63, 0xe0, 0x11, 0xa5, 0xa0, 0x17, 0xe4,
	0x82, 0x85, 0xbd, 0x0b, 0x3c, 0x1c, 0x77, 0x64, 0x53, 0x95, 0x75, 0xbb, 0x40, 0xe2, 0xed, 0xc7,
	0xc3, 0x99, 0xf1, 0xdb, 0xe4, 0x98, 0xac, 0xc4, 0x3b, 0x37, 0x86, 0x27, 0xe6, 0x64, 0x89, 0xc9,
	0xb9, 0x74, 0x7d, 0x61, 0x83, 0x89, 0x72, 0x8b, 0x4a, 0x72, 0x5d, 0xae, 0x20, 0xe9, 0x41, 0xa5,
	0xe5, 0x73, 0xf8, 0xb9, 0x18, 0x38, 0x44, 0x5f, 0xc0, 0x91, 0x5b, 0x55, 0xb2, 0x4f, 0x84, 0x93,
	0xfa, 0x3a, 0x91, 0x7a, 0xb9, 0x47, 0xa9, 0x99, 0x54, 0x2b, 0x8a, 0x34, 0xaa, 0xf8, 0x7e, 0x75,
	0x1a, 0x62, 0x52, 0xb4, 0xec, 0xc9, 0x5d, 0x30, 0xc4, 0x37, 0xeb, 0xd5, 0x96, 0x43, 0x8c, 0x9f,
	0xc3, 0x0f, 0x62, 0xe0, 0x41, 0xb9, 0xa2, 0xea, 0x46, 0x41, 0x2e, 0xaa, 0x4a, 0xa1, 0x58, 0xc6,
	0xab, 0x9b, 0x2e, 0x8f, 0xa7, 0xc2, 0xc9, 0xfe, 0x3a, 0x91, 0x7d, 0xad, 0x17, 0xd9, 0x17, 0xb0,
	0x20, 0x0b, 0x45, 0x55, 0x59, 0x24, 0x62, 0x90, 0xb5, 0x71, 0x44, 0x6e, 0x7e, 0xd8, 0x46, 0x6a,
	0x32, 0xe2, 0x13, 0xf7, 0x5b, 0x6a, 0x32, 0xdc, 0x8d, 0x52, 0x93, 0xb1, 0x7e, 0x2f, 0x06, 0x46,
	0x30, 0x51, 0xc1, 0xaa, 0x57, 0x36, 0x0d, 0x2d, 0xfb, 0x74, 0x38, 0x51, 0x2f, 0x13, 0x51, 0x2f,
	0xf6, 0x22, 0x2a, 0xd6, 0x17, 0x12, 0xc0, 0xbf, 0x36, 0x88, 0x08, 0xf0, 0x33, 0x31, 0x70, 0x98,
	0xae, 0x5f, 0x13, 0x95, 0x54, 0x43, 0xa7, 0x33, 0xff, 0x0c, 0x8f, 0x69, 0xcc, 0xaf, 0x11, 0x79,
	0x56, 0x7a, 0x5c, 0xac, 0x12, 0xe9, 0x97, 0x4c, 0xf5, 0x98, 0xe2, 0xff, 0x09, 0x7f, 0x3e, 0x06,
	0x46, 0x58, 0xc5, 0x06, 0x22, 0xd5, 0xb3, 0xe1, 0x86, 0x2b, 0x64, 0x99, 0x81, 0x96, 0x33, 0x4b,
	0x7a, 0x27, 0xb2, 0x01, 0xd9, 0xfd, 0x1b, 0x7e, 0x36, 0x06, 0xc6, 0xc8, 0x4f, 0xb5, 0x58, 0xc0,
	0xe1, 0x15, 0xca, 0x3e, 0x77, 0xcf, 0x75, 0xd2, 0x02, 0xed, 0x1f, 0x47, 0x7c, 0x48, 0x1a, 0x95,
	0x7d, 0xbf, 0xe0, 0xe7, 0x63, 0xe0, 0xb0, 0x23, 0xde, 0x96, 0x49, 0xbf, 0xf9, 0x7a, 0xf6, 0xf9,
	0xce, 0xae, 0xf4, 0x12, 0x36, 0xf4, 0xb2, 0x96, 0x97, 0x88, 0x68, 0xd7, 0xfa, 0x20, 0xda, 0x65,
	0xa7, 0x6b, 0xe9, 0x90, 0xdc, 0xf0, 0x04, 0x7e, 0x31, 0x06, 0x0e, 0x17, 0x8d, 0x6a, 0xbd, 0xa0,
	0xd7, 0x2a, 0x9b, 0xc8, 0x2c, 0xa0, 0x3b, 0xd8, 0xee, 0xbd, 0x10, 0x6e, 0x14, 0x6f, 0x10, 0x51,
	0xaf, 0xf6, 0x22, 0xea, 0xa2, 0x51, 0xad, 0x5f, 0x27, 0x22, 0x5c, 0xc2, 0x12, 0x48, 0x07, 0x8b,
	0xc1, 0x07, 0x38, 0x32, 0x3b, 0x5a, 0x42, 0xba, 0x51, 0xc1, 0x53, 0x4d, 0xb0, 0xa6, 0x42, 0x51,
	0x93, 0x2d, 0x2b, 0xfb, 0xe2, 0x8e, 0x96, 0x0e, 0x69, 0xf3, 0xed, 0x62, 0x31, 0x36, 0x88, 0x14,
	0x8b, 0x58, 0x08, 0x09, 0x96, 0x9a, 0x9e, 0xc1, 0x8f, 0xc7, 0x40, 0xa6, 0x5a, 0x96, 0x2d, 0x54,
	0xb0, 0x90, 0x9d, 0x3d, 0xd6, 0x15, 0x01, 0xcc, 0x5f, 0x21, 0xa2, 0x2d, 0xf5, 0x22, 0xda, 0x3a,
	0xee, 0x6f, 0x03, 0xd9, 0x52, 0xba, 0xca, 0xfe, 0x82, 0x7f, 0x2b, 0x06, 0xd2, 0x8e, 0x49, 0xcc,
	0xbe, 0xc4, 0x1b, 0x89, 0xf5, 0x41, 0x16, 0xc7, 0xc8, 0x49, 0x6e, 0xf7, 0x78, 0xb5, 0x1d, 0x0d,
	0xc6, 0x01, 0x05, 0x4b, 0xc3, 0xae, 0xec, 0xcb, 0xbc, 0xae, 0xec, 0x3a, 0x91, 0xeb, 0x4a, 0x2f,
	0x72, 0xad, 0x04, 0x04, 0x90, 0x8e, 0x04, 0x05, 0xda, 0xc0, 0xf2, 0xec, 0xd2, 0x0d, 0xfd, 0xef,
	0x0e, 0x78, 0xa2, 0xfe, 0x59, 0x90, 0xda, 0xa4, 0x3b, 0x33, 0x0c, 0xf2, 0xee, 0xb6, 0x81, 0xb3,
	0x7c, 0x40, 0x72, 0x28, 0xbc, 0x2c, 0xff, 0x44, 0xb4, 0x2c, 0xff, 0x64, 0x4f, 0x59, 0xfe, 0xa9,
	0x3e, 0x65, 0xf9, 0xa7, 0x7b, 0xcc, 0xf2, 0xcf, 0x44, 0xcd, 0xf2, 0x07, 0x3d, 0x2d, 0xeb, 0x91,
	0x88, 0x59, 0xfe, 0xa2, 0xb0, 0xb6, 0x28, 0xac, 0x1d, 0xe1, 0x94, 0xdc, 0x7b, 0xf1, 0x81, 0x2a,
	0xac, 0x7d, 0xb5, 0x2f, 0x85, 0xb5, 0xd9, 0x44, 0xfe, 0x30, 0x16, 0xbe, 0xa2, 0xf6, 0xaf, 0xc5,
	0xa2, 0x24, 0x2e, 0xfa, 0xe4, 0x21, 0x84, 0xe7, 0x79, 0x09, 0x6f, 0xd4, 0x90, 0x85, 0xff, 0xd0,
	0x65, 0xd5, 0x44, 0x12, 0xb2, 0xaa, 0x86, 0x6e, 0x85, 0x84, 0xee, 0x5d, 0xe7, 0xc2, 0x29, 0xe6,
	0xfd, 0xf7, 0xc5, 0xc1, 0xc9, 0x16, 0x5b, 0x3c, 0x6f, 0x06, 0x0f, 0x4e, 0x9e, 0x8d, 0x84, 0x64,
	0xed, 0xed, 0xd3, 0x93, 0xc5, 0x76, 0xa7, 0x27, 0xfb, 0x08, 0x42, 0x8a, 0x23, 0x94, 0xe2, 0x08,
	0xe5, 0x2e, 0x3c, 0x42, 0xf9, 0xb1, 0x58, 0x3f, 0xce, 0x50, 0x9e, 0xeb, 0x25, 0xd8, 0x9a, 0xf8,
	0x9f, 0xc7, 0x40, 0x66, 0x6d, 0xbb, 0x5e, 0x42, 0xba, 0x25, 0x8b, 0x8a, 0xf1, 0x22, 0xef, 0x46,
	0xe4, 0xdd, 0x88, 0xbc, 0x9b, 0x7d, 0x73, 0x45, 0xa7, 0xab, 0xf8, 0xc4, 0x15, 0x9d, 0xf7, 0xf3,
	0x8a, 0x4e, 0x6f, 0x1a, 0xc4, 0x15, 0x9d, 0x7b, 0xe8, 0x8a, 0x4e, 0x6f, 0xda, 0x44, 0xa6, 0x8b,
	0xc8, 0x74, 0x19, 0xb0, 0x2b, 0x3a, 0xbd, 0xc5, 0xdd, 0xb7, 0x2b, 0x3a, 0xfd, 0x2c, 0x7b, 0xb8,
	0xa2, 0xd3, 0x6f, 0xb4, 0x5a, 0xd4, 0x35, 0xfb, 0xca, 0x3e, 0xbd, 0xa2, 0x73, 0x1b, 0x1c, 0x34,
	0xc8, 0xc8, 0x14, 0x2c, 0xd9, 0x8e, 0x7c, 0x45, 0xe7, 0xd3, 0x1d, 0xae, 0xe8, 0x4c, 0xcd, 0x9c,
	0x39, 0x75, 0x62, 0x6e, 0x72, 0x46, 0x1a, 0xa3, 0x1d, 0x6d, 0xc8, 0xb6, 0xb8, 0xa3, 0x53, 0xdc,
	0xd1, 0x29, 0xb6, 0x12, 0xc4, 0x1d, 0x9d, 0xe2, 0x8e, 0x4e, 0x01, 0xeb, 0x47, 0xb8, 0xa3, 0xb3,
	0x85, 0x29, 0xdf, 0x6f, 0x77, 0x74, 0xf2, 0xfa, 0x59, 0x7b, 0xfd, 0x8e, 0x4e, 0xc3, 0x79, 0xcf,
	0x89, 0xbf, 0x7c, 0x16, 0x64, 0x5d, 0x48, 0xc6, 0xa4, 0xa8, 0x8a, 0x38, 0xf8, 0x28, 0x00, 0xd8,
	0x5e, 0x01, 0xd8, 0x6f, 0xc5, 0x00, 0x50, 0xdc, 0x05, 0xc7, 0x0f, 0xc1, 0xfe, 0x24, 0x31, 0x02,
	0xf3, 0xbc, 0x0b, 0x79, 0x01, 0xfb, 0x87, 0xaa, 0x5d, 0xf7, 0x1e, 0x85, 0x43, 0x32, 0xd7, 0x35,
	0x59, 0xf7, 0x7e, 0x4a, 0x3e, 0x91, 0xa1, 0xed, 0x43, 0x90, 0x47, 0x76, 0xa8, 0xa6, 0x94, 0xbb,
	0x20, 0x5c, 0x1c, 0xb3, 0x06, 0xd2, 0x26, 0xaa, 0x6a, 0x72, 0x11, 0x59, 0x0c, 0x78, 0xdc, 0xc1,
	0x5e, 0xdd, 0xae, 0xe0, 0x12, 0x18, 0xc1, 0x1f, 0xbf, 0x6a, 0xd1, 0xe9, 0x1a, 0xeb, 0xbc, 0xf7,
	0xe5, 0x9b, 0x73, 0x3f, 0x19, 0x5c, 0x71, 0x41, 0x58, 0x8a, 0x48, 0xbe, 0xd8, 0x5e, 0x74, 0xa2,
	0x68, 0x3a, 0x00, 0xb0, 0x2b, 0x20, 0x89, 0xb5, 0xb9, 0xee, 0x20, 0x8c, 0xdd, 0x58, 0xad, 0x90,
	0xc6, 0x41, 0x56, 0x94, 0x01, 0x7c, 0x0d, 0xa4, 0xab, 0xa6, 0x6a, 0x98, 0x58, 0x45, 0x77, 0xc1,
	0xfe, 0x18, 0xb3, 0x75, 0xd6, 0x9c, 0xaa, 0x0a, 0x87, 0x18, 0x5e, 0x02, 0xe3, 0x8a, 0x51, 0xd0,
	0x0d, 0xbb, 0xc0, 0xe0, 0xa9, 0x6e, 0xa0, 0x9f, 0x5b, 0x39, 0x40, 0x31, 0xae, 0x1b, 0x36, 0xab,
	0xae, 0x13, 0x38, 0xd3, 0x09, 0x7b, 0x3d, 0xd3, 0x79, 0xa4, 0x17, 0xcf, 0xe0, 0xe7, 0x7d, 0x67,
	0x3a, 0xb9, 0x2b, 0x98, 0xfd, 0x61, 0xac, 0x07, 0x10, 0x39, 0xea, 0xc9, 0xce, 0xd0, 0xa7, 0x34,
	0xa3, 0x40, 0x3b, 0xad, 0x11, 0xee, 0x07, 0xf6, 0x04, 0xc2, 0x5d, 0x04, 0xc0, 0x28, 0x16, 0x6b,
	0x26, 0x11, 0x85, 0x41, 0x87, 0x6d, 0x13, 0x38, 0xda, 0x19, 0xfc, 0xa9, 0x35, 0x97, 0x85, 0xeb,
	0xf3, 0xf9, 0xd8, 0xc2, 0x0f, 0x81, 0x8c, 0x6c, 0x15, 0x74, 0x84, 0x14, 0xa4, 0x30, 0x88, 0xf1,
	0x4c, 0xe8, 0x3e, 0x16, 0xac, 0xeb, 0x84, 0x81, 0xdb, 0x43, 0x5a, 0x66, 0x4f, 0xe0, 0x02, 0x18,
	0x91, 0x6b, 0x76, 0xd9, 0x30, 0xa9, 0xd6, 0xcd, 0x72, 0x96, 0xd6, 0x00, 0x0e, 0xd1, 0x9a, 0x0e,
	0x6f, 0x83, 0x0c, 0xeb, 0x10, 0x99, 0x0c, 0x7f, 0x9c, 0x0f, 0x2d, 0xa2, 0xe4, 0x70, 0x90, 0x3c,
	0x66, 0xf0, 0x3a, 0x18, 0x77, 0x51, 0x69, 0x7a, 0x66, 0x25, 0xdc, 0x3d, 0x94, 0xd2, 0x98, 0x4b,
	0x4e, 0x8e, 0x95, 0x7c, 0x66, 0xd8, 0xbf, 0x03, 0xc0, 0x5d, 0xad, 0xed, 0xdf, 0x0f, 0xed, 0xad,
	0x1d, 0x80, 0x28, 0xf0, 0x6a, 0xb4, 0x5d, 0x83, 0x70, 0x5b, 0xa0, 0xcb, 0x48, 0xd6, 0xec, 0x72,
	0x51, 0x36, 0xd1, 0x06, 0x32, 0xc9, 0xd7, 0xef, 0xdb, 0x74, 0x58, 0xc6, 0xe6, 0x10, 0x07, 0x25,
	0x14, 0xba, 0x7b, 0x34, 0x9c, 0x96, 0x06, 0x94, 0x96, 0xa0, 0x9c, 0xdf, 0x8c, 0x81, 0x43, 0x8c,
	0x95, 0x1b, 0x42, 0x30, 0x4c, 0x95, 0x63, 0xb2, 0xab, 0xe1, 0x54, 0xca, 0xa2, 0xa1, 0x2b, 0x9e,
	0x13, 0x14, 0xa9, 0xc8, 0xe4, 0x41, 0x2a, 0xac, 0x2b, 0x02, 0xfc, 0xe9, 0x18, 0x38, 0x68, 0xd5,
	0xaa, 0x55, 0xc3, 0xb4, 0x55, 0xbd, 0x54, 0x50, 0xf5, 0x2d, 0x23, 0xfb, 0xf8, 0x4e, 0x3b, 0x26,
	0xe3, 0x5e, 0x8f, 0x2b, 0xfa, 0x96, 0x11, 0xd8, 0x54, 0x78, 0xe2, 0xde, 0xd5, 0xf7, 0x0c, 0x6c,
	0xa9, 0x3c, 0x19, 0xd2, 0x54, 0xbb, 0x5b, 0x2a, 0xb3, 0x20, 0xae, 0x1b, 0x36, 0xca, 0x3e, 0xd5,
	0xa5, 0xc2, 0xa4, 0xae, 0x1b, 0xec, 0x94, 0x01, 0x69, 0x0f, 0xff, 0x26, 0x59, 0x3a, 0x1a, 0xba,
	0x23, 0xeb, 0x76, 0xa1, 0xac, 0x5a, 0x36, 0x76, 0x18, 0x26, 0x78, 0xdf, 0x7e, 0x2e, 0x1c, 0x9a,
	0xb2, 0x6e, 0x1a, 0x77, 0x90, 0x2e, 0xe3, 0x00, 0xf7, 0xa0, 0xd3, 0xe9, 0x32, 0xed, 0x13, 0x7e,
	0x32, 0x06, 0xe2, 0xaa, 0x8d, 0x2a, 0xd9, 0xa7, 0x49, 0xe7, 0x2f, 0xf3, 0x16, 0x37, 0x5e, 0xb1,
	0x51, 0x25, 0xec, 0x2d, 0xad, 0xd5, 0x06, 0x9d, 0xec, 0x1d, 0xc4, 0xb0, 0x51, 0x45, 0x22, 0x62,
	0xe4, 0xfe, 0x4d, 0x0c, 0x00, 0xcf, 0x52, 0xdd, 0x47, 0x90, 0x1a, 0x53, 0xda, 0x6a, 0x85, 0x6e,
	0x29, 0x74, 0xa4, 0xbc, 0x49, 0x5a, 0x61, 0x4a, 0xda, 0x3e, 0x3f, 0xea, 0xb7, 0xd7, 0xb9, 0x2f,
	0xc7, 0x40, 0xda, 0xb1, 0x8b, 0xfe, 0x83, 0x0d, 0xb1, 0xd0, 0x07, 0x1b, 0x76, 0x24, 0x23, 0x30,
	0x3f, 0xe2, 0x33, 0xfc, 0xb9, 0x5f, 0x8f, 0x83, 0x8c, 0x6b, 0x21, 0x07, 0x01, 0x65, 0xfb, 0xaf,
	0x31, 0x90, 0x90, 0x4b, 0x5e, 0xa1, 0x41, 0x8e, 0xaf, 0xeb, 0x2b, 0x7e, 0x27, 0x78, 0x47, 0x77,
	0x10, 0xfb, 0x56, 0x21, 0x12, 0xbf, 0x20, 0xfc, 0x29, 0x30, 0x6a, 0xe8, 0x85, 0x4d, 0x54, 0x96,
	0xb5, 0xad, 0x82, 0xb1, 0xc5, 0x0f, 0xd1, 0xce, 0xf7, 0xd0, 0x37, 0x30, 0xf4, 0x3c, 0xe9, 0x71,
	0x6d, 0x6b, 0xfe, 0x67, 0x63, 0x51, 0x4a, 0x25, 0x36, 0x26, 0x0d, 0x11, 0xb4, 0x6b, 0xa1, 0x67,
	0x9d, 0x32, 0xf1, 0x47, 0xc7, 0x40, 0x5a, 0x42, 0x56, 0xd5, 0x94, 0x6d, 0x51, 0x2f, 0x51, 0xa0,
	0x5d, 0x22, 0xdd, 0x50, 0xa4, 0x1b, 0xee, 0xfd, 0x74, 0xc3, 0x8d, 0x40, 0xba, 0xe1, 0xe9, 0xf6,
	0xeb, 0x90, 0xea, 0x3d, 0x91, 0x6d, 0x78, 0x0f, 0xae, 0x45, 0x3d, 0xd6, 0x75, 0x16, 0x44, 0xb2,
	0xe1, 0x2e, 0x48, 0x36, 0x5c, 0x0a, 0x26, 0x1b, 0x3e, 0xd7, 0x75, 0xd6, 0x44, 0xae, 0xa1, 0xc8,
	0x35, 0xdc, 0xd5, 0xb9, 0x86, 0xb7, 0xdb, 0xe5, 0x1a, 0x1e, 0xef, 0xba, 0xb6, 0xbb, 0xa4, 0x1a,
	0xe6, 0x1b, 0x53, 0x0d, 0x5f, 0xe0, 0xe0, 0xd8, 0x90, 0x69, 0xb8, 0xdc, 0x9c, 0x69, 0x78, 0x8c,
	0xc3, 0x5e, 0xb5, 0x48, 0x34, 0xfc, 0xc5, 0x7d, 0x9a, 0x68, 0x58, 0x03, 0xe3, 0x26, 0xb2, 0xaa,
	0x05, 0x3c, 0x32, 0x91, 0xf3, 0x0c, 0x27, 0x3a, 0xe4, 0x19, 0x26, 0xcf, 0x4c, 0x9f, 0x3e, 0x33,
	0xf9, 0x8a, 0x34, 0x8a, 0xbb, 0x91, 0x64, 0x1b, 0x89, 0x2c, 0x43, 0x91, 0x65, 0x28, 0xb2, 0x0c,
	0x45, 0x96, 0xe1, 0xbe, 0xcd, 0x32, 0xfc, 0x9a, 0xc8, 0x32, 0x6c, 0x91, 0x4b, 0x70, 0x3d, 0x98,
	0x65, 0x78, 0x82, 0xdf, 0x8c, 0xef, 0xed, 0x24, 0xc3, 0xdb, 0xed, 0x92, 0x0c, 0x7b, 0x75, 0xb0,
	0x76, 0x20, 0xc7, 0xd0, 0xee, 0x43, 0x8e, 0x21, 0xb7, 0xe3, 0x6c, 0xb2, 0xd7, 0x9c, 0xf8, 0x2f,
	0x2f, 0x80, 0x23, 0x1b, 0x65, 0xd9, 0x24, 0xc3, 0x88, 0xd7, 0x8a, 0x55, 0xb7, 0x6c, 0x54, 0x11,
	0x78, 0xeb, 0xfe, 0xc4, 0x5b, 0x67, 0x78, 0xef, 0xa7, 0x71, 0x15, 0x0c, 0xb9, 0xa7, 0x26, 0x08,
	0xd3, 0x02, 0xee, 0x04, 0x35, 0x3f, 0x4c, 0x7b, 0xd1, 0xbb, 0xeb, 0x86, 0xeb, 0xd2, 0x1a, 0x57,
	0x02, 0xf7, 0xce, 0x9b, 0x79, 0x76, 0xe7, 0xcd, 0x68, 0x28, 0xf2, 0x86, 0xbb, 0x6f, 0xc6, 0xa2,
	0xdd, 0x7d, 0x33, 0xde, 0x8f, 0xbb, 0x6f, 0xae, 0x36, 0xdc, 0x7d, 0x73, 0x90, 0x6b, 0x87, 0xd1,
	0x65, 0xd3, 0xfa, 0x0e, 0x9c, 0x43, 0xa1, 0xee, 0xc0, 0x59, 0xf2, 0xdf, 0x81, 0x73, 0x38, 0xd4,
	0x40, 0xb6, 0xbe, 0x0b, 0x07, 0x46, 0xba, 0x0b, 0xe7, 0x4a, 0xf0, 0xde, 0x99, 0x23, 0x7c, 0xf7,
	0xce, 0xb8, 0xa2, 0xf8, 0x89, 0x1b, 0xef, 0xd5, 0x39, 0xda, 0xa7, 0x7b, 0x75, 0x1e, 0xe8, 0xe5,
	0x5e, 0x9d, 0x79, 0x90, 0xaa, 0xd6, 0xcc, 0xaa, 0x61, 0x39, 0xe9, 0x60, 0xdd, 0xef, 0xd4, 0x71,
	0x08, 0xe0, 0x05, 0xac, 0x7f, 0xaa, 0x75, 0x53, 0x2d, 0x95, 0x6d, 0x86, 0xef, 0x74, 0xa7, 0xf6,
	0x48, 0xe0, 0x75, 0x30, 0x5e, 0xa4, 0xb5, 0x2c, 0x75, 0x4b, 0x25, 0x30, 0x68, 0x36, 0xdc, 0x3a,
	0x1b, 0x2b, 0x92, 0x82, 0x94, 0x8c, 0x1a, 0xce, 0x81, 0x0c, 0xb1, 0x60, 0xa4, 0x38, 0xe6, 0xc3,
	0xdd, 0xf5, 0x78, 0x9a, 0xb4, 0xde, 0x40, 0x36, 0x2c, 0x82, 0xc3, 0x65, 0x15, 0x99, 0xb2, 0x59,
	0x2c, 0xd7, 0x0b, 0x15, 0x24, 0xeb, 0x38, 0x2c, 0xa7, 0xa8, 0xcd, 0x6c, 0xa7, 0x71, 0xdd, 0x20,
	0x36, 0x6a, 0xd9, 0x21, 0x5d, 0xa5, 0x94, 0x44, 0xbb, 0x1f, 0x2a, 0x37, 0x3c, 0x85, 0x97, 0xc0,
	0x18, 0x41, 0x22, 0x68, 0x1a, 0xac, 0xac, 0xb1, 0x6c, 0xae, 0xae, 0x79, 0xa1, 0x41, 0x2a, 0x78,
	0x19, 0x8c, 0x33, 0x3d, 0xe3, 0xe4, 0xd8, 0x3d, 0xca, 0xc9, 0x87, 0x91, 0xb1, 0x04, 0x82, 0x0d,
	0x06, 0x98, 0x13, 0x4c, 0xa5, 0xe3, 0x91, 0x0f, 0xef, 0x4d, 0x17, 0x29, 0xc1, 0xaa, 0xa1, 0x04,
	0xbd, 0x6d, 0x87, 0x13, 0x3c, 0x03, 0x12, 0x04, 0x23, 0x67, 0xe5, 0xc7, 0xdb, 0xd6, 0xd7, 0x79,
	0x5d, 0xc7, 0xbe, 0x02, 0x52, 0x56, 0x74, 0x5b, 0xa2, 0x14, 0xf0, 0x0a, 0x48, 0x6e, 0xa9, 0x9a,
	0x8d, 0x4c, 0x96, 0xbb, 0xd3, 0xf6, 0x76, 0xec, 0x16, 0x5e, 0xc2, 0xd4, 0x65, 0x42, 0x29, 0x31,
	0x0e, 0x70, 0x1d, 0xa4, 0xab, 0xa6, 0x51, 0x45, 0xa6, 0x5d, 0x67, 0x19, 0x39, 0xa7, 0xc2, 0x70,
	0x5b, 0x67, 0xb4, 0x92, 0xcb, 0x05, 0x16, 0xc8, 0x68, 0x91, 0x44, 0x09, 0x9a, 0xa1, 0x73, 0x3e,
	0x0c, 0x43, 0xf6, 0xed, 0x79, 0x7e, 0x4f, 0x60, 0xe4, 0x08, 0xd8, 0xf1, 0xfb, 0xc3, 0x20, 0x49,
	0xdf, 0x62, 0x30, 0x82, 0x7f, 0x7f, 0xb0, 0xf0, 0x68, 0xa7, 0x95, 0xd5, 0x10, 0x21, 0x5c, 0x0c,
	0x2a, 0xdc, 0x04, 0xd7, 0x28, 0x04, 0xd4, 0xec, 0x75, 0x90, 0xc6, 0x93, 0x26, 0xdb, 0x86, 0xc9,
	0xbc, 0xa2, 0xb6, 0x68, 0x21, 0x1d, 0xf0, 0x35, 0xd6, 0x3a, 0x20, 0x8d, 0xcb, 0x03, 0x9e, 0x73,
	0x62, 0x96, 0x54, 0x28, 0x2b, 0xc4, 0xc0, 0x9d, 0x6f, 0x0e, 0x83, 0xb4, 0xb3, 0x9e, 0xf6, 0xf7,
	0xcc, 0x92, 0x2b, 0x07, 0x55, 0x36, 0xa3, 0xdd, 0xae, 0x1c, 0x54, 0x1b, 0x17, 0x42, 0x32, 0xfc,
	0x42, 0x58, 0x62, 0x90, 0x02, 0x9d, 0xb7, 0x17, 0x3a, 0x24, 0xf8, 0x92, 0xd9, 0x69, 0x8d, 0x21,
	0xe4, 0x7e, 0x67, 0x1c, 0x1c, 0x6e, 0xfa, 0x7e, 0xf7, 0xf7, 0x4c, 0xce, 0x81, 0x94, 0xa2, 0x5a,
	0x55, 0x4d, 0xae, 0x73, 0x7e, 0x9f, 0x4e, 0x73, 0x78, 0x21, 0x70, 0xde, 0x87, 0x6f, 0x4e, 0xfd,
	0xc7, 0x6d, 0xde, 0x21, 0x8b, 0x42, 0x2d, 0xe9, 0x4e, 0x54, 0x8e, 0x5f, 0x7f, 0xa5, 0x27, 0x55,
	0x3c, 0xb5, 0xe4, 0x31, 0x94, 0xfc, 0xdc, 0xa1, 0xea, 0xb3, 0x22, 0x34, 0x96, 0x59, 0xed, 0xad,
	0x27, 0xf6, 0xa4, 0x85, 0x79, 0x79, 0xc3, 0x33, 0x2f, 0x99, 0x3e, 0x98, 0x17, 0xcf, 0xac, 0xfc,
	0xf4, 0x30, 0x18, 0xf1, 0xbd, 0xe0, 0x20, 0xac, 0xdb, 0xde, 0xe3, 0xed, 0x13, 0x60, 0xb8, 0x66,
	0xa1, 0x6e, 0x6b, 0x97, 0xed, 0xbb, 0xe0, 0xa6, 0x9e, 0x0d, 0x48, 0x46, 0xb1, 0x01, 0x3f, 0x93,
	0x04, 0x07, 0x1b, 0xe6, 0x7e, 0x7f, 0x2b, 0x90, 0xbb, 0x41, 0x18, 0x70, 0xa3, 0xaf, 0x9f, 0x15,
	0x43, 0x0a, 0x83, 0x09, 0x12, 0x6c, 0x26, 0xfe, 0x62, 0xc8, 0x81, 0xcb, 0xa6, 0x99, 0xf0, 0xb1,
	0xee, 0xc2, 0x2f, 0x1f, 0x70, 0xf5, 0x9e, 0xb3, 0x65, 0x37, 0xc4, 0xb3, 0x74, 0x96, 0x0f, 0xb8,
	0x9b, 0x76, 0x7d, 0x28, 0x63, 0xae, 0xea, 0x36, 0x2a, 0x21, 0xb3, 0x5b, 0x19, 0xf3, 0x15, 0xda,
	0x6c, 0xf9, 0x80, 0xe4, 0x50, 0xf8, 0x53, 0x85, 0x13, 0xa1, 0x53, 0x85, 0x03, 0xdb, 0x6e, 0xc9,
	0xf0, 0xdb, 0x6e, 0x1e, 0xae, 0xf8, 0x53, 0x51, 0x70, 0x45, 0x2f, 0xf6, 0x20, 0xb8, 0xe2, 0x59,
	0x5e, 0x3a, 0xab, 0x79, 0xe5, 0x4c, 0x7c, 0x72, 0x1a, 0x1c, 0x76, 0x57, 0x14, 0x91, 0xc9, 0x42,
	0xa2, 0x7e, 0xa4, 0x00, 0x18, 0x7b, 0x01, 0x18, 0x87, 0x05, 0xc0, 0x28, 0x00, 0x46, 0x01, 0x30,
	0xb6, 0x07, 0x18, 0xcf, 0x83, 0x8c, 0x5a, 0xa9, 0xd4, 0x6c, 0xdc, 0x82, 0x41, 0x8c, 0x5d, 0x91,
	0x2a, 0x8f, 0xc2, 0x8f, 0x4f, 0x3e, 0xd4, 0x13, 0x3e, 0x99, 0x0d, 0x8f, 0x4f, 0xbe, 0x0a, 0x00,
	0xd3, 0x35, 0x58, 0xf6, 0x87, 0xf9, 0x64, 0xf7, 0x91, 0xc0, 0xab, 0x24, 0x75, 0x8e, 0x08, 0x9f,
	0xeb, 0x0c, 0xb1, 0x35, 0x99, 0x25, 0xba, 0xf1, 0x69, 0x91, 0x7c, 0x51, 0xf2, 0x07, 0xbc, 0x81,
	0x75, 0x68, 0x55, 0xa6, 0x9a, 0x8f, 0x42, 0x87, 0x27, 0xf9, 0xd9, 0x5d, 0x72, 0x48, 0x25, 0x8f,
	0x4b, 0xee, 0x73, 0x10, 0xa4, 0x58, 0x3f, 0x83, 0xe0, 0x8f, 0x9e, 0x07, 0x23, 0x9a, 0x51, 0x7c,
	0x87, 0x96, 0xf8, 0xee, 0xea, 0x96, 0x62, 0x75, 0x20, 0x01, 0x4a, 0x80, 0xff, 0x86, 0x67, 0x41,
	0x5a, 0xd5, 0x65, 0x9a, 0x8f, 0xcb, 0xe7, 0x27, 0x49, 0x2e, 0x01, 0xfc, 0x10, 0x76, 0xd0, 0x8a,
	0x5a, 0x4d, 0x41, 0xcc, 0x50, 0x9e, 0x0b, 0x3d, 0xd5, 0x8e, 0x1f, 0xbb, 0x81, 0xbc, 0x5d, 0x73,
	0x87, 0x29, 0xbc, 0x05, 0x52, 0x68, 0x9b, 0xf2, 0x4f, 0xf5, 0xce, 0x5f, 0x72, 0x98, 0xe5, 0x3e,
	0x3b, 0x0e, 0x80, 0xf7, 0x7c, 0x10, 0x56, 0xc1, 0x49, 0x90, 0xa4, 0xfe, 0x1e, 0x5b, 0x00, 0x1d,
	0x3d, 0x2d, 0xd6, 0x14, 0xce, 0x79, 0x26, 0x99, 0x13, 0xd1, 0x70, 0x4c, 0x71, 0xc9, 0x8b, 0xdc,
	0x93, 0x9c, 0x18, 0x41, 0x87, 0x89, 0x71, 0xfe, 0xf4, 0x36, 0xfd, 0x1d, 0xee, 0xf0, 0x6d, 0x17,
	0x1f, 0xa7, 0x0b, 0x60, 0xb1, 0xa7, 0x7e, 0x1a, 0x00, 0xf3, 0xc0, 0xd6, 0x09, 0x75, 0xab, 0xf8,
	0xb6, 0x4e, 0x72, 0xdf, 0x49, 0x82, 0x43, 0x8d, 0x42, 0x0b, 0x74, 0x2c, 0x1a, 0x3a, 0xf6, 0xd1,
	0x20, 0xba, 0x45, 0xd7, 0xd3, 0x9b, 0x7d, 0x5d, 0x4f, 0x6d, 0xd1, 0x2e, 0x81, 0x14, 0xed, 0x06,
	0xa4, 0xe8, 0x93, 0x03, 0xb5, 0x0b, 0x74, 0xd1, 0x07, 0xa0, 0x86, 0xf9, 0x8e, 0x3c, 0x5c, 0x34,
	0x0f, 0x86, 0x8c, 0x2a, 0x1b, 0xfe, 0x28, 0xbb, 0x38, 0x43, 0x46, 0x15, 0xce, 0x07, 0x67, 0x84,
	0x4f, 0x04, 0x36, 0x1f, 0xff, 0xe9, 0x10, 0xc8, 0xb8, 0xae, 0xd3, 0x60, 0x64, 0xf1, 0xf9, 0xe3,
	0xd7, 0x38, 0x7f, 0xf4, 0xeb, 0x0f, 0x60, 0x2f, 0x83, 0x8c, 0xad, 0x56, 0x90, 0x65, 0xcb, 0x15,
	0x67, 0x72, 0xba, 0x46, 0x5d, 0x5e, 0xf0, 0xe4, 0x92, 0xc2, 0x19, 0x90, 0xb0, 0x0d, 0x1c, 0xfe,
	0x25, 0xb9, 0x30, 0x2d, 0x89, 0xb6, 0x86, 0xa7, 0x41, 0xd2, 0xd8, 0xda, 0xc2, 0x96, 0x2a, 0xc5,
	0x47, 0xc7, 0x9a, 0xc3, 0xb7, 0x41, 0xa6, 0x2a, 0x9b, 0x72, 0x05, 0x61, 0x2b, 0x9a, 0xe6, 0xc4,
	0xd9, 0x9b, 0x5d, 0xe8, 0xa9, 0x75, 0x87, 0x89, 0xe4, 0xf1, 0x83, 0xb7, 0x41, 0x9a, 0x01, 0x1e,
	0x16, 0xc3, 0xf0, 0xcf, 0x45, 0xe1, 0xcd, 0x70, 0x14, 0x4b, 0x72, 0xb9, 0xe5, 0xfe, 0x63, 0x02,
	0x64, 0xdc, 0x2e, 0x07, 0x61, 0x11, 0x3a, 0xf0, 0x45, 0x3c, 0x02, 0x7c, 0x21, 0x07, 0xa1, 0xe3,
	0xc5, 0x9e, 0xe6, 0xaf, 0x65, 0x52, 0x69, 0xee, 0x7f, 0x0c, 0x79, 0x39, 0x95, 0x41, 0xd8, 0x36,
	0x16, 0xfd, 0xf6, 0xc9, 0xa1, 0xd0, 0xc8, 0xab, 0x0f, 0xf3, 0x1d, 0x8e, 0x82, 0xf9, 0x2a, 0xf4,
	0xd6, 0xdf, 0x6e, 0x80, 0x31, 0xbb, 0x1c, 0x18, 0x13, 0x33, 0x0a, 0x78, 0x9c, 0x77, 0xa7, 0x76,
	0xf9, 0x00, 0xdd, 0xab, 0x75, 0xc0, 0xf4, 0x24, 0x3f, 0x98, 0xee, 0x1d, 0x7f, 0xf8, 0x8b, 0x04,
	0x48, 0x3b, 0xab, 0x7e, 0xdf, 0x06, 0x20, 0x67, 0x41, 0x5a, 0xde, 0xb4, 0x6c, 0x53, 0x2e, 0xda,
	0xdc, 0xc1, 0xa7, 0x43, 0x10, 0x88, 0x5c, 0x93, 0x61, 0x23, 0x57, 0x5f, 0xe8, 0x93, 0x0a, 0x17,
	0xfa, 0x9c, 0x60, 0xb3, 0x9e, 0xee, 0x3e, 0xeb, 0xcd, 0xae, 0x71, 0xa6, 0x27, 0xd7, 0x18, 0xdc,
	0x4b, 0xd7, 0x38, 0xa0, 0xda, 0x47, 0xfa, 0xa9, 0xda, 0xe7, 0x3f, 0xea, 0xdb, 0x13, 0xe1, 0xce,
	0x99, 0xbe, 0xc5, 0x62, 0x2f, 0xb2, 0x23, 0x72, 0x26, 0xf4, 0x8e, 0x88, 0x23, 0xd9, 0xc4, 0xbf,
	0x7d, 0x1e, 0x8c, 0xde, 0x34, 0xd5, 0x92, 0x56, 0x2f, 0x22, 0x53, 0x55, 0x44, 0x6d, 0x0b, 0x51,
	0xdb, 0x42, 0xd4, 0xb6, 0x10, 0xb5, 0x2d, 0xee, 0x4b, 0x6d, 0x8b, 0xc5, 0xc8, 0xb5, 0x2d, 0x5a,
	0x94, 0x3b, 0x1d, 0xeb, 0xe5, 0x88, 0xd2, 0x7b, 0x43, 0x11, 0x8a, 0x58, 0xfc, 0xde, 0xbd, 0x2d,
	0x74, 0x1a, 0xe5, 0x84, 0x78, 0xe8, 0xe2, 0xa8, 0x7b, 0xb9, 0xb8, 0xc6, 0xcd, 0xe6, 0xe2, 0x1a,
	0x53, 0x6d, 0xab, 0xae, 0xf9, 0x4c, 0xa0, 0xaf, 0xc0, 0x46, 0x52, 0x94, 0xd6, 0xb8, 0xf7, 0xa5,
	0x35, 0x96, 0x83, 0xa5, 0x35, 0x8e, 0x71, 0xcd, 0x99, 0x28, 0xaf, 0x21, 0xca, 0x6b, 0xec, 0xea,
	0xf2, 0x1a, 0x4a, 0xab, 0xf2, 0x1a, 0x1d, 0x37, 0x70, 0x03, 0xeb, 0x3b, 0x78, 0x02, 0xd4, 0x35,
	0x57, 0x8d, 0xa5, 0x36, 0xae, 0x35, 0x97, 0xc9, 0xe0, 0xd3, 0x79, 0x2d, 0x4b, 0x65, 0xec, 0x97,
	0xe2, 0x0b, 0xdf, 0x19, 0x1a, 0xc4, 0xe2, 0x0b, 0xf9, 0x28, 0x25, 0x14, 0x3c, 0x47, 0x88, 0x94,
	0x52, 0x88, 0x52, 0x94, 0xe0, 0x67, 0xc4, 0x95, 0xf9, 0x2d, 0x5c, 0x4a, 0x29, 0x88, 0x59, 0x9e,
	0x0a, 0xf7, 0x55, 0xee, 0xed, 0x93, 0xef, 0xff, 0x5f, 0xbb, 0x93, 0xef, 0x51, 0x74, 0x9f, 0xb8,
	0x24, 0x5f, 0x5c, 0x92, 0xbf, 0x07, 0x2e, 0xc9, 0xaf, 0xf7, 0xe3, 0x8e, 0x7c, 0x6e, 0x97, 0xc3,
	0xf6, 0x7d, 0x2f, 0x13, 0x5f, 0x7b, 0x1e, 0x80, 0x5b, 0x6e, 0x2d, 0x06, 0x81, 0xe8, 0x09, 0x44,
	0x4f, 0x20, 0x7a, 0x02, 0xd1, 0xdb, 0xf3, 0xd5, 0x6a, 0xfb, 0x82, 0xec, 0x89, 0xea, 0xb4, 0xfc,
	0x00, 0xda, 0xed, 0x66, 0x00, 0xad, 0xed, 0x8d, 0x0e, 0x9e, 0xbd, 0x11, 0xf5, 0x69, 0x77, 0x03,
	0x88, 0x76, 0x39, 0x08, 0xa2, 0xbd, 0xc0, 0x31, 0x6f, 0x02, 0x42, 0x13, 0x10, 0xda, 0xae, 0x86,
	0xd0, 0xde, 0x6a, 0x57, 0xa1, 0xf6, 0x15, 0x8e, 0xd5, 0xdd, 0xa5, 0x46, 0xed, 0x52, 0x63, 0x8d,
	0xda, 0x63, 0x5c, 0x3c, 0x1b, 0xaa, 0xd4, 0x5e, 0x69, 0x86, 0xdf, 0x78, 0x34, 0xe6, 0xbe, 0x06,
	0xdf, 0x44, 0xe5, 0x53, 0x51, 0xf9, 0x54, 0x54, 0x3e, 0x1d, 0xb0, 0xca, 0xa7, 0x5f, 0x17, 0x95,
	0x4f, 0x5b, 0x04, 0x1f, 0xeb, 0x41, 0x0c, 0x78, 0x3a, 0x8c, 0x69, 0xd8, 0xdb, 0x08, 0xf0, 0x5b,
	0xed, 0x10, 0xe0, 0xde, 0x4d, 0xf7, 0x0e, 0x54, 0x3f, 0xbd, 0xdb, 0x0f, 0xec, 0x2e, 0xc2, 0xe7,
	0x33, 0xf1, 0x67, 0x2f, 0x82, 0x11, 0xfa, 0xe2, 0x55, 0x59, 0x47, 0x9a, 0x80, 0xee, 0x04, 0x74,
	0x27, 0xa0, 0x3b, 0x01, 0xdd, 0xed, 0x79, 0xe8, 0xee, 0x56, 0x00, 0xba, 0x9b, 0xef, 0xac, 0xf3,
	0x89, 0xea, 0x13, 0x77, 0x4d, 0xf5, 0x1b, 0xcd, 0x7b, 0xb3, 0x19, 0xcd, 0x9b, 0xe4, 0x99, 0x08,
	0x01, 0xe7, 0xed, 0x02, 0x38, 0x4f, 0xc0, 0x70, 0x02, 0x86, 0xdb, 0x2d, 0x30, 0xdc, 0xdb, 0xed,
	0x60, 0xb8, 0x69, 0x1e, 0x75, 0xd2, 0x05, 0x87, 0x5b, 0x6d, 0xc4, 0xe1, 0x5e, 0xe2, 0x63, 0x4a,
	0x48, 0xbc, 0x92, 0x19, 0x0e, 0x20, 0x77, 0xb5, 0x19, 0x90, 0x9b, 0xe4, 0xb3, 0x3e, 0x2d, 0x10,
	0xb9, 0x5f, 0xd9, 0xa7, 0x37, 0x47, 0xbd, 0x0b, 0x0e, 0x91, 0x4f, 0xf3, 0x2e, 0x52, 0x4b, 0x65,
	0x3b, 0xf2, 0xdd, 0x51, 0x4f, 0x77, 0xb8, 0x3b, 0x2a, 0x35, 0x37, 0x73, 0x72, 0xe6, 0xe4, 0xe4,
	0x2b, 0xd2, 0x38, 0xee, 0xe9, 0x0d, 0xd2, 0xd1, 0xe0, 0x5e, 0x1f, 0x25, 0x20, 0x4f, 0x01, 0x79,
	0x0a, 0xc8, 0x73, 0xc0, 0x20, 0xcf, 0xdf, 0x10, 0x90, 0x67, 0x0b, 0xc8, 0xf3, 0x46, 0x10, 0xf2,
	0x3c, 0x19, 0xca, 0xf8, 0xee, 0x6d, 0xcc, 0xf3, 0xed, 0x76, 0x98, 0x67, 0x1f, 0xfc, 0xa4, 0x1d,
	0x06, 0x3d, 0xa3, 0x5e, 0xf9, 0x74, 0x32, 0x1c, 0x1d, 0x79, 0xd3, 0xfc, 0xe3, 0x20, 0x57, 0x34,
	0x2a, 0x6d, 0x84, 0x5e, 0x8f, 0x6d, 0x26, 0xc9, 0x1f, 0x27, 0xff, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x25, 0x0b, 0x7d, 0x7c, 0xe0, 0x54, 0x02, 0x00,
}
