// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/stu3/uscore.proto

package google_fhir_stu3_uscore

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Auto-generated from StructureDefinition for US  Core AllergyIntolerance
// Profile. US Core Allergies Profile. See
// http://hl7.org/fhir/us/core/StructureDefinition/us-core-allergyintolerance
type UsCoreAllergyintolerance struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External ids for this item
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | inactive | resolved
	ClinicalStatus *AllergyIntoleranceClinicalStatusCode `protobuf:"bytes,10,opt,name=clinical_status,json=clinicalStatus,proto3" json:"clinical_status,omitempty"`
	// unconfirmed | confirmed | refuted | entered-in-error
	VerificationStatus *AllergyIntoleranceVerificationStatusCode `protobuf:"bytes,11,opt,name=verification_status,json=verificationStatus,proto3" json:"verification_status,omitempty"`
	// allergy | intolerance - Underlying mechanism (if known)
	Type *AllergyIntoleranceTypeCode `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	// food | medication | environment | biologic
	Category []*AllergyIntoleranceCategoryCode `protobuf:"bytes,13,rep,name=category,proto3" json:"category,omitempty"`
	// low | high | unable-to-assess
	Criticality *AllergyIntoleranceCriticalityCode `protobuf:"bytes,14,opt,name=criticality,proto3" json:"criticality,omitempty"`
	// Code that identifies the allergy or intolerance
	Code *CodeableConcept `protobuf:"bytes,15,opt,name=code,proto3" json:"code,omitempty"`
	// Who the sensitivity is for
	Patient *Reference                      `protobuf:"bytes,16,opt,name=patient,proto3" json:"patient,omitempty"`
	Onset   *UsCoreAllergyintolerance_Onset `protobuf:"bytes,17,opt,name=onset,proto3" json:"onset,omitempty"`
	// Date record was believed accurate
	AssertedDate *DateTime `protobuf:"bytes,18,opt,name=asserted_date,json=assertedDate,proto3" json:"asserted_date,omitempty"`
	// Who recorded the sensitivity
	Recorder *Reference `protobuf:"bytes,19,opt,name=recorder,proto3" json:"recorder,omitempty"`
	// Source of the information about the allergy
	Asserter *Reference `protobuf:"bytes,20,opt,name=asserter,proto3" json:"asserter,omitempty"`
	// Date(/time) of last known occurrence of a reaction
	LastOccurrence *DateTime `protobuf:"bytes,21,opt,name=last_occurrence,json=lastOccurrence,proto3" json:"last_occurrence,omitempty"`
	// Additional text not captured in other fields
	Note                 []*Annotation                        `protobuf:"bytes,22,rep,name=note,proto3" json:"note,omitempty"`
	Reaction             []*UsCoreAllergyintolerance_Reaction `protobuf:"bytes,23,rep,name=reaction,proto3" json:"reaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *UsCoreAllergyintolerance) Reset()         { *m = UsCoreAllergyintolerance{} }
func (m *UsCoreAllergyintolerance) String() string { return proto.CompactTextString(m) }
func (*UsCoreAllergyintolerance) ProtoMessage()    {}
func (*UsCoreAllergyintolerance) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{0}
}

func (m *UsCoreAllergyintolerance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreAllergyintolerance.Unmarshal(m, b)
}
func (m *UsCoreAllergyintolerance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreAllergyintolerance.Marshal(b, m, deterministic)
}
func (m *UsCoreAllergyintolerance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreAllergyintolerance.Merge(m, src)
}
func (m *UsCoreAllergyintolerance) XXX_Size() int {
	return xxx_messageInfo_UsCoreAllergyintolerance.Size(m)
}
func (m *UsCoreAllergyintolerance) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreAllergyintolerance.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreAllergyintolerance proto.InternalMessageInfo

func (m *UsCoreAllergyintolerance) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetClinicalStatus() *AllergyIntoleranceClinicalStatusCode {
	if m != nil {
		return m.ClinicalStatus
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetVerificationStatus() *AllergyIntoleranceVerificationStatusCode {
	if m != nil {
		return m.VerificationStatus
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetType() *AllergyIntoleranceTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetCategory() []*AllergyIntoleranceCategoryCode {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetCriticality() *AllergyIntoleranceCriticalityCode {
	if m != nil {
		return m.Criticality
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetOnset() *UsCoreAllergyintolerance_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetAssertedDate() *DateTime {
	if m != nil {
		return m.AssertedDate
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetRecorder() *Reference {
	if m != nil {
		return m.Recorder
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetAsserter() *Reference {
	if m != nil {
		return m.Asserter
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetLastOccurrence() *DateTime {
	if m != nil {
		return m.LastOccurrence
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *UsCoreAllergyintolerance) GetReaction() []*UsCoreAllergyintolerance_Reaction {
	if m != nil {
		return m.Reaction
	}
	return nil
}

// When allergy or intolerance was identified
type UsCoreAllergyintolerance_Onset struct {
	// Types that are valid to be assigned to Onset:
	//	*UsCoreAllergyintolerance_Onset_DateTime
	//	*UsCoreAllergyintolerance_Onset_Age
	//	*UsCoreAllergyintolerance_Onset_Period
	//	*UsCoreAllergyintolerance_Onset_Range
	//	*UsCoreAllergyintolerance_Onset_StringValue
	Onset                isUsCoreAllergyintolerance_Onset_Onset `protobuf_oneof:"onset"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *UsCoreAllergyintolerance_Onset) Reset()         { *m = UsCoreAllergyintolerance_Onset{} }
func (m *UsCoreAllergyintolerance_Onset) String() string { return proto.CompactTextString(m) }
func (*UsCoreAllergyintolerance_Onset) ProtoMessage()    {}
func (*UsCoreAllergyintolerance_Onset) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{0, 0}
}

func (m *UsCoreAllergyintolerance_Onset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreAllergyintolerance_Onset.Unmarshal(m, b)
}
func (m *UsCoreAllergyintolerance_Onset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreAllergyintolerance_Onset.Marshal(b, m, deterministic)
}
func (m *UsCoreAllergyintolerance_Onset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreAllergyintolerance_Onset.Merge(m, src)
}
func (m *UsCoreAllergyintolerance_Onset) XXX_Size() int {
	return xxx_messageInfo_UsCoreAllergyintolerance_Onset.Size(m)
}
func (m *UsCoreAllergyintolerance_Onset) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreAllergyintolerance_Onset.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreAllergyintolerance_Onset proto.InternalMessageInfo

type isUsCoreAllergyintolerance_Onset_Onset interface {
	isUsCoreAllergyintolerance_Onset_Onset()
}

type UsCoreAllergyintolerance_Onset_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreAllergyintolerance_Onset_Age struct {
	Age *Age `protobuf:"bytes,2,opt,name=age,proto3,oneof"`
}

type UsCoreAllergyintolerance_Onset_Period struct {
	Period *Period `protobuf:"bytes,3,opt,name=period,proto3,oneof"`
}

type UsCoreAllergyintolerance_Onset_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type UsCoreAllergyintolerance_Onset_StringValue struct {
	StringValue *String `protobuf:"bytes,5,opt,name=string_value,json=string,proto3,oneof"`
}

func (*UsCoreAllergyintolerance_Onset_DateTime) isUsCoreAllergyintolerance_Onset_Onset() {}

func (*UsCoreAllergyintolerance_Onset_Age) isUsCoreAllergyintolerance_Onset_Onset() {}

func (*UsCoreAllergyintolerance_Onset_Period) isUsCoreAllergyintolerance_Onset_Onset() {}

func (*UsCoreAllergyintolerance_Onset_Range) isUsCoreAllergyintolerance_Onset_Onset() {}

func (*UsCoreAllergyintolerance_Onset_StringValue) isUsCoreAllergyintolerance_Onset_Onset() {}

func (m *UsCoreAllergyintolerance_Onset) GetOnset() isUsCoreAllergyintolerance_Onset_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Onset) GetDateTime() *DateTime {
	if x, ok := m.GetOnset().(*UsCoreAllergyintolerance_Onset_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Onset) GetAge() *Age {
	if x, ok := m.GetOnset().(*UsCoreAllergyintolerance_Onset_Age); ok {
		return x.Age
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Onset) GetPeriod() *Period {
	if x, ok := m.GetOnset().(*UsCoreAllergyintolerance_Onset_Period); ok {
		return x.Period
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Onset) GetRange() *Range {
	if x, ok := m.GetOnset().(*UsCoreAllergyintolerance_Onset_Range); ok {
		return x.Range
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Onset) GetStringValue() *String {
	if x, ok := m.GetOnset().(*UsCoreAllergyintolerance_Onset_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreAllergyintolerance_Onset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreAllergyintolerance_Onset_OneofMarshaler, _UsCoreAllergyintolerance_Onset_OneofUnmarshaler, _UsCoreAllergyintolerance_Onset_OneofSizer, []interface{}{
		(*UsCoreAllergyintolerance_Onset_DateTime)(nil),
		(*UsCoreAllergyintolerance_Onset_Age)(nil),
		(*UsCoreAllergyintolerance_Onset_Period)(nil),
		(*UsCoreAllergyintolerance_Onset_Range)(nil),
		(*UsCoreAllergyintolerance_Onset_StringValue)(nil),
	}
}

func _UsCoreAllergyintolerance_Onset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreAllergyintolerance_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *UsCoreAllergyintolerance_Onset_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreAllergyintolerance_Onset_Age:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *UsCoreAllergyintolerance_Onset_Period:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *UsCoreAllergyintolerance_Onset_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *UsCoreAllergyintolerance_Onset_StringValue:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreAllergyintolerance_Onset.Onset has unexpected type %T", x)
	}
	return nil
}

func _UsCoreAllergyintolerance_Onset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreAllergyintolerance_Onset)
	switch tag {
	case 1: // onset.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreAllergyintolerance_Onset_DateTime{msg}
		return true, err
	case 2: // onset.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreAllergyintolerance_Onset_Age{msg}
		return true, err
	case 3: // onset.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreAllergyintolerance_Onset_Period{msg}
		return true, err
	case 4: // onset.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreAllergyintolerance_Onset_Range{msg}
		return true, err
	case 5: // onset.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreAllergyintolerance_Onset_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreAllergyintolerance_Onset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreAllergyintolerance_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *UsCoreAllergyintolerance_Onset_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreAllergyintolerance_Onset_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreAllergyintolerance_Onset_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreAllergyintolerance_Onset_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreAllergyintolerance_Onset_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Adverse Reaction Events linked to exposure to substance
type UsCoreAllergyintolerance_Reaction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Specific substance or pharmaceutical product considered to be responsible
	// for event
	Substance *CodeableConcept `protobuf:"bytes,4,opt,name=substance,proto3" json:"substance,omitempty"`
	// Clinical symptoms/signs associated with the Event
	Manifestation []*CodeableConcept `protobuf:"bytes,5,rep,name=manifestation,proto3" json:"manifestation,omitempty"`
	// Description of the event as a whole
	Description *String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Date(/time) when manifestations showed
	Onset *DateTime `protobuf:"bytes,7,opt,name=onset,proto3" json:"onset,omitempty"`
	// mild | moderate | severe (of event as a whole)
	Severity *AllergyIntoleranceSeverityCode `protobuf:"bytes,8,opt,name=severity,proto3" json:"severity,omitempty"`
	// How the subject was exposed to the substance
	ExposureRoute *CodeableConcept `protobuf:"bytes,9,opt,name=exposure_route,json=exposureRoute,proto3" json:"exposure_route,omitempty"`
	// Text about event not captured in other fields
	Note                 []*Annotation `protobuf:"bytes,10,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UsCoreAllergyintolerance_Reaction) Reset()         { *m = UsCoreAllergyintolerance_Reaction{} }
func (m *UsCoreAllergyintolerance_Reaction) String() string { return proto.CompactTextString(m) }
func (*UsCoreAllergyintolerance_Reaction) ProtoMessage()    {}
func (*UsCoreAllergyintolerance_Reaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{0, 1}
}

func (m *UsCoreAllergyintolerance_Reaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreAllergyintolerance_Reaction.Unmarshal(m, b)
}
func (m *UsCoreAllergyintolerance_Reaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreAllergyintolerance_Reaction.Marshal(b, m, deterministic)
}
func (m *UsCoreAllergyintolerance_Reaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreAllergyintolerance_Reaction.Merge(m, src)
}
func (m *UsCoreAllergyintolerance_Reaction) XXX_Size() int {
	return xxx_messageInfo_UsCoreAllergyintolerance_Reaction.Size(m)
}
func (m *UsCoreAllergyintolerance_Reaction) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreAllergyintolerance_Reaction.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreAllergyintolerance_Reaction proto.InternalMessageInfo

func (m *UsCoreAllergyintolerance_Reaction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Reaction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Reaction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Reaction) GetSubstance() *CodeableConcept {
	if m != nil {
		return m.Substance
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Reaction) GetManifestation() []*CodeableConcept {
	if m != nil {
		return m.Manifestation
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Reaction) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Reaction) GetOnset() *DateTime {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Reaction) GetSeverity() *AllergyIntoleranceSeverityCode {
	if m != nil {
		return m.Severity
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Reaction) GetExposureRoute() *CodeableConcept {
	if m != nil {
		return m.ExposureRoute
	}
	return nil
}

func (m *UsCoreAllergyintolerance_Reaction) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Auto-generated from StructureDefinition for US Core Birth Sex Extension.
// Extension.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex
type PatientUSCoreBirthSexExtension struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Value of extension
	ValueCode            *UsCoreBirthSexCode `protobuf:"bytes,3,opt,name=value_code,json=valueCode,proto3" json:"value_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PatientUSCoreBirthSexExtension) Reset()         { *m = PatientUSCoreBirthSexExtension{} }
func (m *PatientUSCoreBirthSexExtension) String() string { return proto.CompactTextString(m) }
func (*PatientUSCoreBirthSexExtension) ProtoMessage()    {}
func (*PatientUSCoreBirthSexExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{1}
}

func (m *PatientUSCoreBirthSexExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatientUSCoreBirthSexExtension.Unmarshal(m, b)
}
func (m *PatientUSCoreBirthSexExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatientUSCoreBirthSexExtension.Marshal(b, m, deterministic)
}
func (m *PatientUSCoreBirthSexExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatientUSCoreBirthSexExtension.Merge(m, src)
}
func (m *PatientUSCoreBirthSexExtension) XXX_Size() int {
	return xxx_messageInfo_PatientUSCoreBirthSexExtension.Size(m)
}
func (m *PatientUSCoreBirthSexExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_PatientUSCoreBirthSexExtension.DiscardUnknown(m)
}

var xxx_messageInfo_PatientUSCoreBirthSexExtension proto.InternalMessageInfo

func (m *PatientUSCoreBirthSexExtension) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PatientUSCoreBirthSexExtension) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PatientUSCoreBirthSexExtension) GetValueCode() *UsCoreBirthSexCode {
	if m != nil {
		return m.ValueCode
	}
	return nil
}

// Auto-generated from StructureDefinition for US Core CarePlan Profile.
// US Core CarePlan Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-careplan
type UsCoreCareplan struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this plan
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// Fulfills care plan
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// CarePlan replaced by this CarePlan
	Replaces []*Reference `protobuf:"bytes,12,rep,name=replaces,proto3" json:"replaces,omitempty"`
	// Part of referenced CarePlan
	PartOf []*Reference `protobuf:"bytes,13,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// draft | active | suspended | completed | entered-in-error | cancelled |
	// unknown
	Status *CarePlanStatusCode `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	// proposal | plan | order | option
	Intent *CarePlanIntentCode `protobuf:"bytes,15,opt,name=intent,proto3" json:"intent,omitempty"`
	// Type of plan
	Category []*CodeableConcept `protobuf:"bytes,16,rep,name=category,proto3" json:"category,omitempty"`
	// Human-friendly name for the CarePlan
	Title *String `protobuf:"bytes,17,opt,name=title,proto3" json:"title,omitempty"`
	// Summary of nature of plan
	Description *String `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// Who care plan is for
	Subject *Reference `protobuf:"bytes,19,opt,name=subject,proto3" json:"subject,omitempty"`
	// Created in context of
	Context *Reference `protobuf:"bytes,20,opt,name=context,proto3" json:"context,omitempty"`
	// Time period plan covers
	Period *Period `protobuf:"bytes,21,opt,name=period,proto3" json:"period,omitempty"`
	// Who is responsible for contents of the plan
	Author []*Reference `protobuf:"bytes,22,rep,name=author,proto3" json:"author,omitempty"`
	// Who's involved in plan?
	CareTeam []*Reference `protobuf:"bytes,23,rep,name=care_team,json=careTeam,proto3" json:"care_team,omitempty"`
	// Health issues this plan addresses
	Addresses []*Reference `protobuf:"bytes,24,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// Information considered as part of plan
	SupportingInfo []*Reference `protobuf:"bytes,25,rep,name=supporting_info,json=supportingInfo,proto3" json:"supporting_info,omitempty"`
	// Desired outcome of plan
	Goal     []*Reference               `protobuf:"bytes,26,rep,name=goal,proto3" json:"goal,omitempty"`
	Activity []*UsCoreCareplan_Activity `protobuf:"bytes,27,rep,name=activity,proto3" json:"activity,omitempty"`
	// Comments about the plan
	Note                 []*Annotation `protobuf:"bytes,28,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UsCoreCareplan) Reset()         { *m = UsCoreCareplan{} }
func (m *UsCoreCareplan) String() string { return proto.CompactTextString(m) }
func (*UsCoreCareplan) ProtoMessage()    {}
func (*UsCoreCareplan) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{2}
}

func (m *UsCoreCareplan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCareplan.Unmarshal(m, b)
}
func (m *UsCoreCareplan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCareplan.Marshal(b, m, deterministic)
}
func (m *UsCoreCareplan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCareplan.Merge(m, src)
}
func (m *UsCoreCareplan) XXX_Size() int {
	return xxx_messageInfo_UsCoreCareplan.Size(m)
}
func (m *UsCoreCareplan) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCareplan.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCareplan proto.InternalMessageInfo

func (m *UsCoreCareplan) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreCareplan) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreCareplan) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreCareplan) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreCareplan) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreCareplan) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreCareplan) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreCareplan) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreCareplan) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreCareplan) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *UsCoreCareplan) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *UsCoreCareplan) GetReplaces() []*Reference {
	if m != nil {
		return m.Replaces
	}
	return nil
}

func (m *UsCoreCareplan) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *UsCoreCareplan) GetStatus() *CarePlanStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreCareplan) GetIntent() *CarePlanIntentCode {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *UsCoreCareplan) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreCareplan) GetTitle() *String {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *UsCoreCareplan) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UsCoreCareplan) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreCareplan) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UsCoreCareplan) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *UsCoreCareplan) GetAuthor() []*Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *UsCoreCareplan) GetCareTeam() []*Reference {
	if m != nil {
		return m.CareTeam
	}
	return nil
}

func (m *UsCoreCareplan) GetAddresses() []*Reference {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *UsCoreCareplan) GetSupportingInfo() []*Reference {
	if m != nil {
		return m.SupportingInfo
	}
	return nil
}

func (m *UsCoreCareplan) GetGoal() []*Reference {
	if m != nil {
		return m.Goal
	}
	return nil
}

func (m *UsCoreCareplan) GetActivity() []*UsCoreCareplan_Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *UsCoreCareplan) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Action to occur as part of plan
type UsCoreCareplan_Activity struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Results of the activity
	OutcomeCodeableConcept []*CodeableConcept `protobuf:"bytes,4,rep,name=outcome_codeable_concept,json=outcomeCodeableConcept,proto3" json:"outcome_codeable_concept,omitempty"`
	// Appointment, Encounter, Procedure, etc.
	OutcomeReference []*Reference `protobuf:"bytes,5,rep,name=outcome_reference,json=outcomeReference,proto3" json:"outcome_reference,omitempty"`
	// Comments about the activity status/progress
	Progress []*Annotation `protobuf:"bytes,6,rep,name=progress,proto3" json:"progress,omitempty"`
	// Activity details defined in specific resource
	Reference            *Reference                      `protobuf:"bytes,7,opt,name=reference,proto3" json:"reference,omitempty"`
	Detail               *UsCoreCareplan_Activity_Detail `protobuf:"bytes,8,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *UsCoreCareplan_Activity) Reset()         { *m = UsCoreCareplan_Activity{} }
func (m *UsCoreCareplan_Activity) String() string { return proto.CompactTextString(m) }
func (*UsCoreCareplan_Activity) ProtoMessage()    {}
func (*UsCoreCareplan_Activity) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{2, 0}
}

func (m *UsCoreCareplan_Activity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCareplan_Activity.Unmarshal(m, b)
}
func (m *UsCoreCareplan_Activity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCareplan_Activity.Marshal(b, m, deterministic)
}
func (m *UsCoreCareplan_Activity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCareplan_Activity.Merge(m, src)
}
func (m *UsCoreCareplan_Activity) XXX_Size() int {
	return xxx_messageInfo_UsCoreCareplan_Activity.Size(m)
}
func (m *UsCoreCareplan_Activity) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCareplan_Activity.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCareplan_Activity proto.InternalMessageInfo

func (m *UsCoreCareplan_Activity) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreCareplan_Activity) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreCareplan_Activity) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreCareplan_Activity) GetOutcomeCodeableConcept() []*CodeableConcept {
	if m != nil {
		return m.OutcomeCodeableConcept
	}
	return nil
}

func (m *UsCoreCareplan_Activity) GetOutcomeReference() []*Reference {
	if m != nil {
		return m.OutcomeReference
	}
	return nil
}

func (m *UsCoreCareplan_Activity) GetProgress() []*Annotation {
	if m != nil {
		return m.Progress
	}
	return nil
}

func (m *UsCoreCareplan_Activity) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *UsCoreCareplan_Activity) GetDetail() *UsCoreCareplan_Activity_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

// In-line definition of activity
type UsCoreCareplan_Activity_Detail struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// diet | drug | encounter | observation | procedure | supply | other
	Category *CodeableConcept `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// Protocol or definition
	Definition *Reference `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	// Detail type of activity
	Code *CodeableConcept `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	// Why activity should be done or why activity was prohibited
	ReasonCode []*CodeableConcept `protobuf:"bytes,7,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Condition triggering need for activity
	ReasonReference []*Reference `protobuf:"bytes,8,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Goals this activity relates to
	Goal []*Reference `protobuf:"bytes,9,rep,name=goal,proto3" json:"goal,omitempty"`
	// not-started | scheduled | in-progress | on-hold | completed | cancelled
	// | unknown
	Status *CarePlanActivityStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Reason for current status
	StatusReason *String `protobuf:"bytes,11,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	// Do NOT do
	Prohibited *Boolean                                  `protobuf:"bytes,12,opt,name=prohibited,proto3" json:"prohibited,omitempty"`
	Scheduled  *UsCoreCareplan_Activity_Detail_Scheduled `protobuf:"bytes,13,opt,name=scheduled,proto3" json:"scheduled,omitempty"`
	// Where it should happen
	Location *Reference `protobuf:"bytes,14,opt,name=location,proto3" json:"location,omitempty"`
	// Who will be responsible?
	Performer []*Reference                            `protobuf:"bytes,15,rep,name=performer,proto3" json:"performer,omitempty"`
	Product   *UsCoreCareplan_Activity_Detail_Product `protobuf:"bytes,16,opt,name=product,proto3" json:"product,omitempty"`
	// How to consume/day?
	DailyAmount *SimpleQuantity `protobuf:"bytes,17,opt,name=daily_amount,json=dailyAmount,proto3" json:"daily_amount,omitempty"`
	// How much to administer/supply/consume
	Quantity *SimpleQuantity `protobuf:"bytes,18,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Extra info describing activity to perform
	Description          *String  `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCoreCareplan_Activity_Detail) Reset()         { *m = UsCoreCareplan_Activity_Detail{} }
func (m *UsCoreCareplan_Activity_Detail) String() string { return proto.CompactTextString(m) }
func (*UsCoreCareplan_Activity_Detail) ProtoMessage()    {}
func (*UsCoreCareplan_Activity_Detail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{2, 0, 0}
}

func (m *UsCoreCareplan_Activity_Detail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCareplan_Activity_Detail.Unmarshal(m, b)
}
func (m *UsCoreCareplan_Activity_Detail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCareplan_Activity_Detail.Marshal(b, m, deterministic)
}
func (m *UsCoreCareplan_Activity_Detail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCareplan_Activity_Detail.Merge(m, src)
}
func (m *UsCoreCareplan_Activity_Detail) XXX_Size() int {
	return xxx_messageInfo_UsCoreCareplan_Activity_Detail.Size(m)
}
func (m *UsCoreCareplan_Activity_Detail) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCareplan_Activity_Detail.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCareplan_Activity_Detail proto.InternalMessageInfo

func (m *UsCoreCareplan_Activity_Detail) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetDefinition() *Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetGoal() []*Reference {
	if m != nil {
		return m.Goal
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetStatus() *CarePlanActivityStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetStatusReason() *String {
	if m != nil {
		return m.StatusReason
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetProhibited() *Boolean {
	if m != nil {
		return m.Prohibited
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetScheduled() *UsCoreCareplan_Activity_Detail_Scheduled {
	if m != nil {
		return m.Scheduled
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetProduct() *UsCoreCareplan_Activity_Detail_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetDailyAmount() *SimpleQuantity {
	if m != nil {
		return m.DailyAmount
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

// When activity is to occur
type UsCoreCareplan_Activity_Detail_Scheduled struct {
	// Types that are valid to be assigned to Scheduled:
	//	*UsCoreCareplan_Activity_Detail_Scheduled_Timing
	//	*UsCoreCareplan_Activity_Detail_Scheduled_Period
	//	*UsCoreCareplan_Activity_Detail_Scheduled_StringValue
	Scheduled            isUsCoreCareplan_Activity_Detail_Scheduled_Scheduled `protobuf_oneof:"scheduled"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *UsCoreCareplan_Activity_Detail_Scheduled) Reset() {
	*m = UsCoreCareplan_Activity_Detail_Scheduled{}
}
func (m *UsCoreCareplan_Activity_Detail_Scheduled) String() string { return proto.CompactTextString(m) }
func (*UsCoreCareplan_Activity_Detail_Scheduled) ProtoMessage()    {}
func (*UsCoreCareplan_Activity_Detail_Scheduled) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{2, 0, 0, 0}
}

func (m *UsCoreCareplan_Activity_Detail_Scheduled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCareplan_Activity_Detail_Scheduled.Unmarshal(m, b)
}
func (m *UsCoreCareplan_Activity_Detail_Scheduled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCareplan_Activity_Detail_Scheduled.Marshal(b, m, deterministic)
}
func (m *UsCoreCareplan_Activity_Detail_Scheduled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCareplan_Activity_Detail_Scheduled.Merge(m, src)
}
func (m *UsCoreCareplan_Activity_Detail_Scheduled) XXX_Size() int {
	return xxx_messageInfo_UsCoreCareplan_Activity_Detail_Scheduled.Size(m)
}
func (m *UsCoreCareplan_Activity_Detail_Scheduled) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCareplan_Activity_Detail_Scheduled.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCareplan_Activity_Detail_Scheduled proto.InternalMessageInfo

type isUsCoreCareplan_Activity_Detail_Scheduled_Scheduled interface {
	isUsCoreCareplan_Activity_Detail_Scheduled_Scheduled()
}

type UsCoreCareplan_Activity_Detail_Scheduled_Timing struct {
	Timing *Timing `protobuf:"bytes,1,opt,name=timing,proto3,oneof"`
}

type UsCoreCareplan_Activity_Detail_Scheduled_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type UsCoreCareplan_Activity_Detail_Scheduled_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

func (*UsCoreCareplan_Activity_Detail_Scheduled_Timing) isUsCoreCareplan_Activity_Detail_Scheduled_Scheduled() {
}

func (*UsCoreCareplan_Activity_Detail_Scheduled_Period) isUsCoreCareplan_Activity_Detail_Scheduled_Scheduled() {
}

func (*UsCoreCareplan_Activity_Detail_Scheduled_StringValue) isUsCoreCareplan_Activity_Detail_Scheduled_Scheduled() {
}

func (m *UsCoreCareplan_Activity_Detail_Scheduled) GetScheduled() isUsCoreCareplan_Activity_Detail_Scheduled_Scheduled {
	if m != nil {
		return m.Scheduled
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail_Scheduled) GetTiming() *Timing {
	if x, ok := m.GetScheduled().(*UsCoreCareplan_Activity_Detail_Scheduled_Timing); ok {
		return x.Timing
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail_Scheduled) GetPeriod() *Period {
	if x, ok := m.GetScheduled().(*UsCoreCareplan_Activity_Detail_Scheduled_Period); ok {
		return x.Period
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail_Scheduled) GetStringValue() *String {
	if x, ok := m.GetScheduled().(*UsCoreCareplan_Activity_Detail_Scheduled_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreCareplan_Activity_Detail_Scheduled) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreCareplan_Activity_Detail_Scheduled_OneofMarshaler, _UsCoreCareplan_Activity_Detail_Scheduled_OneofUnmarshaler, _UsCoreCareplan_Activity_Detail_Scheduled_OneofSizer, []interface{}{
		(*UsCoreCareplan_Activity_Detail_Scheduled_Timing)(nil),
		(*UsCoreCareplan_Activity_Detail_Scheduled_Period)(nil),
		(*UsCoreCareplan_Activity_Detail_Scheduled_StringValue)(nil),
	}
}

func _UsCoreCareplan_Activity_Detail_Scheduled_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreCareplan_Activity_Detail_Scheduled)
	// scheduled
	switch x := m.Scheduled.(type) {
	case *UsCoreCareplan_Activity_Detail_Scheduled_Timing:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timing); err != nil {
			return err
		}
	case *UsCoreCareplan_Activity_Detail_Scheduled_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *UsCoreCareplan_Activity_Detail_Scheduled_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreCareplan_Activity_Detail_Scheduled.Scheduled has unexpected type %T", x)
	}
	return nil
}

func _UsCoreCareplan_Activity_Detail_Scheduled_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreCareplan_Activity_Detail_Scheduled)
	switch tag {
	case 1: // scheduled.timing
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timing)
		err := b.DecodeMessage(msg)
		m.Scheduled = &UsCoreCareplan_Activity_Detail_Scheduled_Timing{msg}
		return true, err
	case 2: // scheduled.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Scheduled = &UsCoreCareplan_Activity_Detail_Scheduled_Period{msg}
		return true, err
	case 3: // scheduled.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Scheduled = &UsCoreCareplan_Activity_Detail_Scheduled_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreCareplan_Activity_Detail_Scheduled_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreCareplan_Activity_Detail_Scheduled)
	// scheduled
	switch x := m.Scheduled.(type) {
	case *UsCoreCareplan_Activity_Detail_Scheduled_Timing:
		s := proto.Size(x.Timing)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCareplan_Activity_Detail_Scheduled_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCareplan_Activity_Detail_Scheduled_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// What is to be administered/supplied
type UsCoreCareplan_Activity_Detail_Product struct {
	// Types that are valid to be assigned to Product:
	//	*UsCoreCareplan_Activity_Detail_Product_CodeableConcept
	//	*UsCoreCareplan_Activity_Detail_Product_Reference
	Product              isUsCoreCareplan_Activity_Detail_Product_Product `protobuf_oneof:"product"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *UsCoreCareplan_Activity_Detail_Product) Reset() {
	*m = UsCoreCareplan_Activity_Detail_Product{}
}
func (m *UsCoreCareplan_Activity_Detail_Product) String() string { return proto.CompactTextString(m) }
func (*UsCoreCareplan_Activity_Detail_Product) ProtoMessage()    {}
func (*UsCoreCareplan_Activity_Detail_Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{2, 0, 0, 1}
}

func (m *UsCoreCareplan_Activity_Detail_Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCareplan_Activity_Detail_Product.Unmarshal(m, b)
}
func (m *UsCoreCareplan_Activity_Detail_Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCareplan_Activity_Detail_Product.Marshal(b, m, deterministic)
}
func (m *UsCoreCareplan_Activity_Detail_Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCareplan_Activity_Detail_Product.Merge(m, src)
}
func (m *UsCoreCareplan_Activity_Detail_Product) XXX_Size() int {
	return xxx_messageInfo_UsCoreCareplan_Activity_Detail_Product.Size(m)
}
func (m *UsCoreCareplan_Activity_Detail_Product) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCareplan_Activity_Detail_Product.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCareplan_Activity_Detail_Product proto.InternalMessageInfo

type isUsCoreCareplan_Activity_Detail_Product_Product interface {
	isUsCoreCareplan_Activity_Detail_Product_Product()
}

type UsCoreCareplan_Activity_Detail_Product_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type UsCoreCareplan_Activity_Detail_Product_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*UsCoreCareplan_Activity_Detail_Product_CodeableConcept) isUsCoreCareplan_Activity_Detail_Product_Product() {
}

func (*UsCoreCareplan_Activity_Detail_Product_Reference) isUsCoreCareplan_Activity_Detail_Product_Product() {
}

func (m *UsCoreCareplan_Activity_Detail_Product) GetProduct() isUsCoreCareplan_Activity_Detail_Product_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail_Product) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetProduct().(*UsCoreCareplan_Activity_Detail_Product_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *UsCoreCareplan_Activity_Detail_Product) GetReference() *Reference {
	if x, ok := m.GetProduct().(*UsCoreCareplan_Activity_Detail_Product_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreCareplan_Activity_Detail_Product) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreCareplan_Activity_Detail_Product_OneofMarshaler, _UsCoreCareplan_Activity_Detail_Product_OneofUnmarshaler, _UsCoreCareplan_Activity_Detail_Product_OneofSizer, []interface{}{
		(*UsCoreCareplan_Activity_Detail_Product_CodeableConcept)(nil),
		(*UsCoreCareplan_Activity_Detail_Product_Reference)(nil),
	}
}

func _UsCoreCareplan_Activity_Detail_Product_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreCareplan_Activity_Detail_Product)
	// product
	switch x := m.Product.(type) {
	case *UsCoreCareplan_Activity_Detail_Product_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *UsCoreCareplan_Activity_Detail_Product_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreCareplan_Activity_Detail_Product.Product has unexpected type %T", x)
	}
	return nil
}

func _UsCoreCareplan_Activity_Detail_Product_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreCareplan_Activity_Detail_Product)
	switch tag {
	case 1: // product.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Product = &UsCoreCareplan_Activity_Detail_Product_CodeableConcept{msg}
		return true, err
	case 2: // product.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Product = &UsCoreCareplan_Activity_Detail_Product_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreCareplan_Activity_Detail_Product_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreCareplan_Activity_Detail_Product)
	// product
	switch x := m.Product.(type) {
	case *UsCoreCareplan_Activity_Detail_Product_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCareplan_Activity_Detail_Product_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for US  Core CareTeam Profile.
// US Core CareTeam Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-careteam
type UsCoreCareteam struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this team
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// proposed | active | suspended | inactive | entered-in-error
	Status *CareTeamStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Type of team
	Category []*CodeableConcept `protobuf:"bytes,11,rep,name=category,proto3" json:"category,omitempty"`
	// Name of the team, such as crisis assessment team
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// Who care team is for
	Subject *Reference `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or episode associated with CareTeam
	Context *Reference `protobuf:"bytes,14,opt,name=context,proto3" json:"context,omitempty"`
	// Time period team covers
	Period      *Period                       `protobuf:"bytes,15,opt,name=period,proto3" json:"period,omitempty"`
	Participant []*UsCoreCareteam_Participant `protobuf:"bytes,16,rep,name=participant,proto3" json:"participant,omitempty"`
	// Why the care team exists
	ReasonCode []*CodeableConcept `protobuf:"bytes,17,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Why the care team exists
	ReasonReference []*Reference `protobuf:"bytes,18,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Organization responsible for the care team
	ManagingOrganization []*Reference `protobuf:"bytes,19,rep,name=managing_organization,json=managingOrganization,proto3" json:"managing_organization,omitempty"`
	// Comments made about the CareTeam
	Note                 []*Annotation `protobuf:"bytes,20,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UsCoreCareteam) Reset()         { *m = UsCoreCareteam{} }
func (m *UsCoreCareteam) String() string { return proto.CompactTextString(m) }
func (*UsCoreCareteam) ProtoMessage()    {}
func (*UsCoreCareteam) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{3}
}

func (m *UsCoreCareteam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCareteam.Unmarshal(m, b)
}
func (m *UsCoreCareteam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCareteam.Marshal(b, m, deterministic)
}
func (m *UsCoreCareteam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCareteam.Merge(m, src)
}
func (m *UsCoreCareteam) XXX_Size() int {
	return xxx_messageInfo_UsCoreCareteam.Size(m)
}
func (m *UsCoreCareteam) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCareteam.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCareteam proto.InternalMessageInfo

func (m *UsCoreCareteam) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreCareteam) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreCareteam) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreCareteam) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreCareteam) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreCareteam) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreCareteam) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreCareteam) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreCareteam) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreCareteam) GetStatus() *CareTeamStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreCareteam) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreCareteam) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UsCoreCareteam) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreCareteam) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UsCoreCareteam) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *UsCoreCareteam) GetParticipant() []*UsCoreCareteam_Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *UsCoreCareteam) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *UsCoreCareteam) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *UsCoreCareteam) GetManagingOrganization() []*Reference {
	if m != nil {
		return m.ManagingOrganization
	}
	return nil
}

func (m *UsCoreCareteam) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Members of the team
type UsCoreCareteam_Participant struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of involvement
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Who is involved
	Member *Reference `protobuf:"bytes,5,opt,name=member,proto3" json:"member,omitempty"`
	// Organization of the practitioner
	OnBehalfOf *Reference `protobuf:"bytes,6,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	// Time period of participant
	Period               *Period  `protobuf:"bytes,7,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCoreCareteam_Participant) Reset()         { *m = UsCoreCareteam_Participant{} }
func (m *UsCoreCareteam_Participant) String() string { return proto.CompactTextString(m) }
func (*UsCoreCareteam_Participant) ProtoMessage()    {}
func (*UsCoreCareteam_Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{3, 0}
}

func (m *UsCoreCareteam_Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCareteam_Participant.Unmarshal(m, b)
}
func (m *UsCoreCareteam_Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCareteam_Participant.Marshal(b, m, deterministic)
}
func (m *UsCoreCareteam_Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCareteam_Participant.Merge(m, src)
}
func (m *UsCoreCareteam_Participant) XXX_Size() int {
	return xxx_messageInfo_UsCoreCareteam_Participant.Size(m)
}
func (m *UsCoreCareteam_Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCareteam_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCareteam_Participant proto.InternalMessageInfo

func (m *UsCoreCareteam_Participant) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreCareteam_Participant) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreCareteam_Participant) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreCareteam_Participant) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *UsCoreCareteam_Participant) GetMember() *Reference {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *UsCoreCareteam_Participant) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

func (m *UsCoreCareteam_Participant) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core Condition (a.k.a
// Problem) Profile. US Core Condition Profile. See
// http://hl7.org/fhir/us/core/StructureDefinition/us-core-condition
type UsCoreCondition struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this condition
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | recurrence | inactive | remission | resolved
	ClinicalStatus *ConditionClinicalStatusCodesCode `protobuf:"bytes,10,opt,name=clinical_status,json=clinicalStatus,proto3" json:"clinical_status,omitempty"`
	// provisional | differential | confirmed | refuted | entered-in-error |
	// unknown
	VerificationStatus *ConditionVerificationStatusCode `protobuf:"bytes,11,opt,name=verification_status,json=verificationStatus,proto3" json:"verification_status,omitempty"`
	// problem-list-item | encounter-diagnosis
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Subjective severity of condition
	Severity *CodeableConcept `protobuf:"bytes,13,opt,name=severity,proto3" json:"severity,omitempty"`
	// Identification of the condition, problem or diagnosis
	Code *CodeableConcept `protobuf:"bytes,14,opt,name=code,proto3" json:"code,omitempty"`
	// Anatomical location, if relevant
	BodySite []*CodeableConcept `protobuf:"bytes,15,rep,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// Who has the condition?
	Subject *Reference `protobuf:"bytes,16,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or episode when condition first asserted
	Context   *Reference                 `protobuf:"bytes,17,opt,name=context,proto3" json:"context,omitempty"`
	Onset     *UsCoreCondition_Onset     `protobuf:"bytes,18,opt,name=onset,proto3" json:"onset,omitempty"`
	Abatement *UsCoreCondition_Abatement `protobuf:"bytes,19,opt,name=abatement,proto3" json:"abatement,omitempty"`
	// Date record was believed accurate
	AssertedDate *DateTime `protobuf:"bytes,20,opt,name=asserted_date,json=assertedDate,proto3" json:"asserted_date,omitempty"`
	// Person who asserts this condition
	Asserter *Reference                  `protobuf:"bytes,21,opt,name=asserter,proto3" json:"asserter,omitempty"`
	Stage    *UsCoreCondition_Stage      `protobuf:"bytes,22,opt,name=stage,proto3" json:"stage,omitempty"`
	Evidence []*UsCoreCondition_Evidence `protobuf:"bytes,23,rep,name=evidence,proto3" json:"evidence,omitempty"`
	// Additional information about the Condition
	Note                 []*Annotation `protobuf:"bytes,24,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UsCoreCondition) Reset()         { *m = UsCoreCondition{} }
func (m *UsCoreCondition) String() string { return proto.CompactTextString(m) }
func (*UsCoreCondition) ProtoMessage()    {}
func (*UsCoreCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{4}
}

func (m *UsCoreCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCondition.Unmarshal(m, b)
}
func (m *UsCoreCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCondition.Marshal(b, m, deterministic)
}
func (m *UsCoreCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCondition.Merge(m, src)
}
func (m *UsCoreCondition) XXX_Size() int {
	return xxx_messageInfo_UsCoreCondition.Size(m)
}
func (m *UsCoreCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCondition.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCondition proto.InternalMessageInfo

func (m *UsCoreCondition) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreCondition) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreCondition) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreCondition) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreCondition) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreCondition) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreCondition) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreCondition) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreCondition) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreCondition) GetClinicalStatus() *ConditionClinicalStatusCodesCode {
	if m != nil {
		return m.ClinicalStatus
	}
	return nil
}

func (m *UsCoreCondition) GetVerificationStatus() *ConditionVerificationStatusCode {
	if m != nil {
		return m.VerificationStatus
	}
	return nil
}

func (m *UsCoreCondition) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreCondition) GetSeverity() *CodeableConcept {
	if m != nil {
		return m.Severity
	}
	return nil
}

func (m *UsCoreCondition) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreCondition) GetBodySite() []*CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *UsCoreCondition) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreCondition) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UsCoreCondition) GetOnset() *UsCoreCondition_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *UsCoreCondition) GetAbatement() *UsCoreCondition_Abatement {
	if m != nil {
		return m.Abatement
	}
	return nil
}

func (m *UsCoreCondition) GetAssertedDate() *DateTime {
	if m != nil {
		return m.AssertedDate
	}
	return nil
}

func (m *UsCoreCondition) GetAsserter() *Reference {
	if m != nil {
		return m.Asserter
	}
	return nil
}

func (m *UsCoreCondition) GetStage() *UsCoreCondition_Stage {
	if m != nil {
		return m.Stage
	}
	return nil
}

func (m *UsCoreCondition) GetEvidence() []*UsCoreCondition_Evidence {
	if m != nil {
		return m.Evidence
	}
	return nil
}

func (m *UsCoreCondition) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

// Estimated or actual date,  date-time, or age
type UsCoreCondition_Onset struct {
	// Types that are valid to be assigned to Onset:
	//	*UsCoreCondition_Onset_DateTime
	//	*UsCoreCondition_Onset_Age
	//	*UsCoreCondition_Onset_Period
	//	*UsCoreCondition_Onset_Range
	//	*UsCoreCondition_Onset_StringValue
	Onset                isUsCoreCondition_Onset_Onset `protobuf_oneof:"onset"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *UsCoreCondition_Onset) Reset()         { *m = UsCoreCondition_Onset{} }
func (m *UsCoreCondition_Onset) String() string { return proto.CompactTextString(m) }
func (*UsCoreCondition_Onset) ProtoMessage()    {}
func (*UsCoreCondition_Onset) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{4, 0}
}

func (m *UsCoreCondition_Onset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCondition_Onset.Unmarshal(m, b)
}
func (m *UsCoreCondition_Onset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCondition_Onset.Marshal(b, m, deterministic)
}
func (m *UsCoreCondition_Onset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCondition_Onset.Merge(m, src)
}
func (m *UsCoreCondition_Onset) XXX_Size() int {
	return xxx_messageInfo_UsCoreCondition_Onset.Size(m)
}
func (m *UsCoreCondition_Onset) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCondition_Onset.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCondition_Onset proto.InternalMessageInfo

type isUsCoreCondition_Onset_Onset interface {
	isUsCoreCondition_Onset_Onset()
}

type UsCoreCondition_Onset_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreCondition_Onset_Age struct {
	Age *Age `protobuf:"bytes,2,opt,name=age,proto3,oneof"`
}

type UsCoreCondition_Onset_Period struct {
	Period *Period `protobuf:"bytes,3,opt,name=period,proto3,oneof"`
}

type UsCoreCondition_Onset_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type UsCoreCondition_Onset_StringValue struct {
	StringValue *String `protobuf:"bytes,5,opt,name=string_value,json=string,proto3,oneof"`
}

func (*UsCoreCondition_Onset_DateTime) isUsCoreCondition_Onset_Onset() {}

func (*UsCoreCondition_Onset_Age) isUsCoreCondition_Onset_Onset() {}

func (*UsCoreCondition_Onset_Period) isUsCoreCondition_Onset_Onset() {}

func (*UsCoreCondition_Onset_Range) isUsCoreCondition_Onset_Onset() {}

func (*UsCoreCondition_Onset_StringValue) isUsCoreCondition_Onset_Onset() {}

func (m *UsCoreCondition_Onset) GetOnset() isUsCoreCondition_Onset_Onset {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *UsCoreCondition_Onset) GetDateTime() *DateTime {
	if x, ok := m.GetOnset().(*UsCoreCondition_Onset_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreCondition_Onset) GetAge() *Age {
	if x, ok := m.GetOnset().(*UsCoreCondition_Onset_Age); ok {
		return x.Age
	}
	return nil
}

func (m *UsCoreCondition_Onset) GetPeriod() *Period {
	if x, ok := m.GetOnset().(*UsCoreCondition_Onset_Period); ok {
		return x.Period
	}
	return nil
}

func (m *UsCoreCondition_Onset) GetRange() *Range {
	if x, ok := m.GetOnset().(*UsCoreCondition_Onset_Range); ok {
		return x.Range
	}
	return nil
}

func (m *UsCoreCondition_Onset) GetStringValue() *String {
	if x, ok := m.GetOnset().(*UsCoreCondition_Onset_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreCondition_Onset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreCondition_Onset_OneofMarshaler, _UsCoreCondition_Onset_OneofUnmarshaler, _UsCoreCondition_Onset_OneofSizer, []interface{}{
		(*UsCoreCondition_Onset_DateTime)(nil),
		(*UsCoreCondition_Onset_Age)(nil),
		(*UsCoreCondition_Onset_Period)(nil),
		(*UsCoreCondition_Onset_Range)(nil),
		(*UsCoreCondition_Onset_StringValue)(nil),
	}
}

func _UsCoreCondition_Onset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreCondition_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *UsCoreCondition_Onset_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreCondition_Onset_Age:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *UsCoreCondition_Onset_Period:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *UsCoreCondition_Onset_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *UsCoreCondition_Onset_StringValue:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreCondition_Onset.Onset has unexpected type %T", x)
	}
	return nil
}

func _UsCoreCondition_Onset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreCondition_Onset)
	switch tag {
	case 1: // onset.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreCondition_Onset_DateTime{msg}
		return true, err
	case 2: // onset.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreCondition_Onset_Age{msg}
		return true, err
	case 3: // onset.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreCondition_Onset_Period{msg}
		return true, err
	case 4: // onset.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreCondition_Onset_Range{msg}
		return true, err
	case 5: // onset.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Onset = &UsCoreCondition_Onset_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreCondition_Onset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreCondition_Onset)
	// onset
	switch x := m.Onset.(type) {
	case *UsCoreCondition_Onset_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCondition_Onset_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCondition_Onset_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCondition_Onset_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCondition_Onset_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// If/when in resolution/remission
type UsCoreCondition_Abatement struct {
	// Types that are valid to be assigned to Abatement:
	//	*UsCoreCondition_Abatement_DateTime
	//	*UsCoreCondition_Abatement_Age
	//	*UsCoreCondition_Abatement_Boolean
	//	*UsCoreCondition_Abatement_Period
	//	*UsCoreCondition_Abatement_Range
	//	*UsCoreCondition_Abatement_StringValue
	Abatement            isUsCoreCondition_Abatement_Abatement `protobuf_oneof:"abatement"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *UsCoreCondition_Abatement) Reset()         { *m = UsCoreCondition_Abatement{} }
func (m *UsCoreCondition_Abatement) String() string { return proto.CompactTextString(m) }
func (*UsCoreCondition_Abatement) ProtoMessage()    {}
func (*UsCoreCondition_Abatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{4, 1}
}

func (m *UsCoreCondition_Abatement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCondition_Abatement.Unmarshal(m, b)
}
func (m *UsCoreCondition_Abatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCondition_Abatement.Marshal(b, m, deterministic)
}
func (m *UsCoreCondition_Abatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCondition_Abatement.Merge(m, src)
}
func (m *UsCoreCondition_Abatement) XXX_Size() int {
	return xxx_messageInfo_UsCoreCondition_Abatement.Size(m)
}
func (m *UsCoreCondition_Abatement) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCondition_Abatement.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCondition_Abatement proto.InternalMessageInfo

type isUsCoreCondition_Abatement_Abatement interface {
	isUsCoreCondition_Abatement_Abatement()
}

type UsCoreCondition_Abatement_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreCondition_Abatement_Age struct {
	Age *Age `protobuf:"bytes,2,opt,name=age,proto3,oneof"`
}

type UsCoreCondition_Abatement_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,3,opt,name=boolean,proto3,oneof"`
}

type UsCoreCondition_Abatement_Period struct {
	Period *Period `protobuf:"bytes,4,opt,name=period,proto3,oneof"`
}

type UsCoreCondition_Abatement_Range struct {
	Range *Range `protobuf:"bytes,5,opt,name=range,proto3,oneof"`
}

type UsCoreCondition_Abatement_StringValue struct {
	StringValue *String `protobuf:"bytes,6,opt,name=string_value,json=string,proto3,oneof"`
}

func (*UsCoreCondition_Abatement_DateTime) isUsCoreCondition_Abatement_Abatement() {}

func (*UsCoreCondition_Abatement_Age) isUsCoreCondition_Abatement_Abatement() {}

func (*UsCoreCondition_Abatement_Boolean) isUsCoreCondition_Abatement_Abatement() {}

func (*UsCoreCondition_Abatement_Period) isUsCoreCondition_Abatement_Abatement() {}

func (*UsCoreCondition_Abatement_Range) isUsCoreCondition_Abatement_Abatement() {}

func (*UsCoreCondition_Abatement_StringValue) isUsCoreCondition_Abatement_Abatement() {}

func (m *UsCoreCondition_Abatement) GetAbatement() isUsCoreCondition_Abatement_Abatement {
	if m != nil {
		return m.Abatement
	}
	return nil
}

func (m *UsCoreCondition_Abatement) GetDateTime() *DateTime {
	if x, ok := m.GetAbatement().(*UsCoreCondition_Abatement_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreCondition_Abatement) GetAge() *Age {
	if x, ok := m.GetAbatement().(*UsCoreCondition_Abatement_Age); ok {
		return x.Age
	}
	return nil
}

func (m *UsCoreCondition_Abatement) GetBoolean() *Boolean {
	if x, ok := m.GetAbatement().(*UsCoreCondition_Abatement_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *UsCoreCondition_Abatement) GetPeriod() *Period {
	if x, ok := m.GetAbatement().(*UsCoreCondition_Abatement_Period); ok {
		return x.Period
	}
	return nil
}

func (m *UsCoreCondition_Abatement) GetRange() *Range {
	if x, ok := m.GetAbatement().(*UsCoreCondition_Abatement_Range); ok {
		return x.Range
	}
	return nil
}

func (m *UsCoreCondition_Abatement) GetStringValue() *String {
	if x, ok := m.GetAbatement().(*UsCoreCondition_Abatement_StringValue); ok {
		return x.StringValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreCondition_Abatement) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreCondition_Abatement_OneofMarshaler, _UsCoreCondition_Abatement_OneofUnmarshaler, _UsCoreCondition_Abatement_OneofSizer, []interface{}{
		(*UsCoreCondition_Abatement_DateTime)(nil),
		(*UsCoreCondition_Abatement_Age)(nil),
		(*UsCoreCondition_Abatement_Boolean)(nil),
		(*UsCoreCondition_Abatement_Period)(nil),
		(*UsCoreCondition_Abatement_Range)(nil),
		(*UsCoreCondition_Abatement_StringValue)(nil),
	}
}

func _UsCoreCondition_Abatement_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreCondition_Abatement)
	// abatement
	switch x := m.Abatement.(type) {
	case *UsCoreCondition_Abatement_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreCondition_Abatement_Age:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Age); err != nil {
			return err
		}
	case *UsCoreCondition_Abatement_Boolean:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *UsCoreCondition_Abatement_Period:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case *UsCoreCondition_Abatement_Range:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *UsCoreCondition_Abatement_StringValue:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreCondition_Abatement.Abatement has unexpected type %T", x)
	}
	return nil
}

func _UsCoreCondition_Abatement_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreCondition_Abatement)
	switch tag {
	case 1: // abatement.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Abatement = &UsCoreCondition_Abatement_DateTime{msg}
		return true, err
	case 2: // abatement.age
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Age)
		err := b.DecodeMessage(msg)
		m.Abatement = &UsCoreCondition_Abatement_Age{msg}
		return true, err
	case 3: // abatement.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Abatement = &UsCoreCondition_Abatement_Boolean{msg}
		return true, err
	case 4: // abatement.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Abatement = &UsCoreCondition_Abatement_Period{msg}
		return true, err
	case 5: // abatement.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Abatement = &UsCoreCondition_Abatement_Range{msg}
		return true, err
	case 6: // abatement.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Abatement = &UsCoreCondition_Abatement_StringValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreCondition_Abatement_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreCondition_Abatement)
	// abatement
	switch x := m.Abatement.(type) {
	case *UsCoreCondition_Abatement_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCondition_Abatement_Age:
		s := proto.Size(x.Age)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCondition_Abatement_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCondition_Abatement_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCondition_Abatement_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreCondition_Abatement_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Stage/grade, usually assessed formally
type UsCoreCondition_Stage struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Simple summary (disease specific)
	Summary *CodeableConcept `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	// Formal record of assessment
	Assessment           []*Reference `protobuf:"bytes,5,rep,name=assessment,proto3" json:"assessment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UsCoreCondition_Stage) Reset()         { *m = UsCoreCondition_Stage{} }
func (m *UsCoreCondition_Stage) String() string { return proto.CompactTextString(m) }
func (*UsCoreCondition_Stage) ProtoMessage()    {}
func (*UsCoreCondition_Stage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{4, 2}
}

func (m *UsCoreCondition_Stage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCondition_Stage.Unmarshal(m, b)
}
func (m *UsCoreCondition_Stage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCondition_Stage.Marshal(b, m, deterministic)
}
func (m *UsCoreCondition_Stage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCondition_Stage.Merge(m, src)
}
func (m *UsCoreCondition_Stage) XXX_Size() int {
	return xxx_messageInfo_UsCoreCondition_Stage.Size(m)
}
func (m *UsCoreCondition_Stage) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCondition_Stage.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCondition_Stage proto.InternalMessageInfo

func (m *UsCoreCondition_Stage) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreCondition_Stage) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreCondition_Stage) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreCondition_Stage) GetSummary() *CodeableConcept {
	if m != nil {
		return m.Summary
	}
	return nil
}

func (m *UsCoreCondition_Stage) GetAssessment() []*Reference {
	if m != nil {
		return m.Assessment
	}
	return nil
}

// Supporting evidence
type UsCoreCondition_Evidence struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Manifestation/symptom
	Code []*CodeableConcept `protobuf:"bytes,4,rep,name=code,proto3" json:"code,omitempty"`
	// Supporting information found elsewhere
	Detail               []*Reference `protobuf:"bytes,5,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UsCoreCondition_Evidence) Reset()         { *m = UsCoreCondition_Evidence{} }
func (m *UsCoreCondition_Evidence) String() string { return proto.CompactTextString(m) }
func (*UsCoreCondition_Evidence) ProtoMessage()    {}
func (*UsCoreCondition_Evidence) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{4, 3}
}

func (m *UsCoreCondition_Evidence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreCondition_Evidence.Unmarshal(m, b)
}
func (m *UsCoreCondition_Evidence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreCondition_Evidence.Marshal(b, m, deterministic)
}
func (m *UsCoreCondition_Evidence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreCondition_Evidence.Merge(m, src)
}
func (m *UsCoreCondition_Evidence) XXX_Size() int {
	return xxx_messageInfo_UsCoreCondition_Evidence.Size(m)
}
func (m *UsCoreCondition_Evidence) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreCondition_Evidence.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreCondition_Evidence proto.InternalMessageInfo

func (m *UsCoreCondition_Evidence) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreCondition_Evidence) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreCondition_Evidence) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreCondition_Evidence) GetCode() []*CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreCondition_Evidence) GetDetail() []*Reference {
	if m != nil {
		return m.Detail
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core Device Profile.
// US Core Implanted Device Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-device
type UsCoreDevice struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Instance identifier
	Identifier []*Identifier     `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	Udi        *UsCoreDevice_Udi `protobuf:"bytes,10,opt,name=udi,proto3" json:"udi,omitempty"`
	// active | inactive | entered-in-error | unknown
	Status *FHIRDeviceStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// What kind of device this is
	Type *CodeableConcept `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	// Lot number of manufacture
	LotNumber *String `protobuf:"bytes,13,opt,name=lot_number,json=lotNumber,proto3" json:"lot_number,omitempty"`
	// Name of device manufacturer
	Manufacturer *String `protobuf:"bytes,14,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	// Date when the device was made
	ManufactureDate *DateTime `protobuf:"bytes,15,opt,name=manufacture_date,json=manufactureDate,proto3" json:"manufacture_date,omitempty"`
	// Date and time of expiry of this device (if applicable)
	ExpirationDate *DateTime `protobuf:"bytes,16,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	// Model id assigned by the manufacturer
	Model *String `protobuf:"bytes,17,opt,name=model,proto3" json:"model,omitempty"`
	// Version number (i.e. software)
	Version *String `protobuf:"bytes,18,opt,name=version,proto3" json:"version,omitempty"`
	// Patient to whom Device is affixed
	Patient *Reference `protobuf:"bytes,19,opt,name=patient,proto3" json:"patient,omitempty"`
	// Organization responsible for device
	Owner *Reference `protobuf:"bytes,20,opt,name=owner,proto3" json:"owner,omitempty"`
	// Details for human/organization for support
	Contact []*ContactPoint `protobuf:"bytes,21,rep,name=contact,proto3" json:"contact,omitempty"`
	// Where the resource is found
	Location *Reference `protobuf:"bytes,22,opt,name=location,proto3" json:"location,omitempty"`
	// Network address to contact device
	Url *Uri `protobuf:"bytes,23,opt,name=url,proto3" json:"url,omitempty"`
	// Device notes and comments
	Note []*Annotation `protobuf:"bytes,24,rep,name=note,proto3" json:"note,omitempty"`
	// Safety Characteristics of Device
	Safety               []*CodeableConcept `protobuf:"bytes,25,rep,name=safety,proto3" json:"safety,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UsCoreDevice) Reset()         { *m = UsCoreDevice{} }
func (m *UsCoreDevice) String() string { return proto.CompactTextString(m) }
func (*UsCoreDevice) ProtoMessage()    {}
func (*UsCoreDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{5}
}

func (m *UsCoreDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreDevice.Unmarshal(m, b)
}
func (m *UsCoreDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreDevice.Marshal(b, m, deterministic)
}
func (m *UsCoreDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreDevice.Merge(m, src)
}
func (m *UsCoreDevice) XXX_Size() int {
	return xxx_messageInfo_UsCoreDevice.Size(m)
}
func (m *UsCoreDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreDevice.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreDevice proto.InternalMessageInfo

func (m *UsCoreDevice) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreDevice) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreDevice) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreDevice) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreDevice) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreDevice) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreDevice) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreDevice) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreDevice) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreDevice) GetUdi() *UsCoreDevice_Udi {
	if m != nil {
		return m.Udi
	}
	return nil
}

func (m *UsCoreDevice) GetStatus() *FHIRDeviceStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreDevice) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UsCoreDevice) GetLotNumber() *String {
	if m != nil {
		return m.LotNumber
	}
	return nil
}

func (m *UsCoreDevice) GetManufacturer() *String {
	if m != nil {
		return m.Manufacturer
	}
	return nil
}

func (m *UsCoreDevice) GetManufactureDate() *DateTime {
	if m != nil {
		return m.ManufactureDate
	}
	return nil
}

func (m *UsCoreDevice) GetExpirationDate() *DateTime {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

func (m *UsCoreDevice) GetModel() *String {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *UsCoreDevice) GetVersion() *String {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *UsCoreDevice) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *UsCoreDevice) GetOwner() *Reference {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *UsCoreDevice) GetContact() []*ContactPoint {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *UsCoreDevice) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *UsCoreDevice) GetUrl() *Uri {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *UsCoreDevice) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *UsCoreDevice) GetSafety() []*CodeableConcept {
	if m != nil {
		return m.Safety
	}
	return nil
}

// Unique Device Identifier (UDI) Barcode string
type UsCoreDevice_Udi struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Mandatory fixed portion of UDI
	DeviceIdentifier *String `protobuf:"bytes,4,opt,name=device_identifier,json=deviceIdentifier,proto3" json:"device_identifier,omitempty"`
	// Device Name as appears on UDI label
	Name *String `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Regional UDI authority
	Jurisdiction *Uri `protobuf:"bytes,6,opt,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// UDI Human Readable Barcode String
	CarrierHRF *String `protobuf:"bytes,7,opt,name=carrier_h_r_f,json=carrierHRF,proto3" json:"carrier_h_r_f,omitempty"`
	// UDI Machine Readable Barcode String
	CarrierAIDC *Base64Binary `protobuf:"bytes,8,opt,name=carrier_a_i_d_c,json=carrierAIDC,proto3" json:"carrier_a_i_d_c,omitempty"`
	// UDI Issuing Organization
	Issuer *Uri `protobuf:"bytes,9,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// barcode | rfid | manual +
	EntryType            *UDIEntryTypeCode `protobuf:"bytes,10,opt,name=entry_type,json=entryType,proto3" json:"entry_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UsCoreDevice_Udi) Reset()         { *m = UsCoreDevice_Udi{} }
func (m *UsCoreDevice_Udi) String() string { return proto.CompactTextString(m) }
func (*UsCoreDevice_Udi) ProtoMessage()    {}
func (*UsCoreDevice_Udi) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{5, 0}
}

func (m *UsCoreDevice_Udi) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreDevice_Udi.Unmarshal(m, b)
}
func (m *UsCoreDevice_Udi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreDevice_Udi.Marshal(b, m, deterministic)
}
func (m *UsCoreDevice_Udi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreDevice_Udi.Merge(m, src)
}
func (m *UsCoreDevice_Udi) XXX_Size() int {
	return xxx_messageInfo_UsCoreDevice_Udi.Size(m)
}
func (m *UsCoreDevice_Udi) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreDevice_Udi.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreDevice_Udi proto.InternalMessageInfo

func (m *UsCoreDevice_Udi) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreDevice_Udi) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreDevice_Udi) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreDevice_Udi) GetDeviceIdentifier() *String {
	if m != nil {
		return m.DeviceIdentifier
	}
	return nil
}

func (m *UsCoreDevice_Udi) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UsCoreDevice_Udi) GetJurisdiction() *Uri {
	if m != nil {
		return m.Jurisdiction
	}
	return nil
}

func (m *UsCoreDevice_Udi) GetCarrierHRF() *String {
	if m != nil {
		return m.CarrierHRF
	}
	return nil
}

func (m *UsCoreDevice_Udi) GetCarrierAIDC() *Base64Binary {
	if m != nil {
		return m.CarrierAIDC
	}
	return nil
}

func (m *UsCoreDevice_Udi) GetIssuer() *Uri {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *UsCoreDevice_Udi) GetEntryType() *UDIEntryTypeCode {
	if m != nil {
		return m.EntryType
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core DiagnosticReport
// Profile. US Core Diagnostic Report Profile. See
// http://hl7.org/fhir/us/core/StructureDefinition/us-core-diagnosticreport
type UsCoreDiagnosticreport struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier for report
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// What was requested
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | partial | preliminary | final +
	Status *DiagnosticReportStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Service category
	Category *CodeableConcept `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
	// US Core Laboratory Report Order Code
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// The subject of the report - usually, but not always, the patient
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Health care event when test ordered
	Context   *Reference                        `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *UsCoreDiagnosticreport_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// DateTime this version was released
	Issued    *Instant                            `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	Performer []*UsCoreDiagnosticreport_Performer `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	// Specimens this report is based on
	Specimen []*Reference `protobuf:"bytes,19,rep,name=specimen,proto3" json:"specimen,omitempty"`
	// Observations - simple, or complex nested groups
	Result []*Reference `protobuf:"bytes,20,rep,name=result,proto3" json:"result,omitempty"`
	// Reference to full details of imaging associated with the diagnostic report
	ImagingStudy []*Reference                    `protobuf:"bytes,21,rep,name=imaging_study,json=imagingStudy,proto3" json:"imaging_study,omitempty"`
	Image        []*UsCoreDiagnosticreport_Image `protobuf:"bytes,22,rep,name=image,proto3" json:"image,omitempty"`
	// Clinical Interpretation of test results
	Conclusion *String `protobuf:"bytes,23,opt,name=conclusion,proto3" json:"conclusion,omitempty"`
	// Codes for the conclusion
	CodedDiagnosis []*CodeableConcept `protobuf:"bytes,24,rep,name=coded_diagnosis,json=codedDiagnosis,proto3" json:"coded_diagnosis,omitempty"`
	// Entire report as issued
	PresentedForm        []*Attachment `protobuf:"bytes,25,rep,name=presented_form,json=presentedForm,proto3" json:"presented_form,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UsCoreDiagnosticreport) Reset()         { *m = UsCoreDiagnosticreport{} }
func (m *UsCoreDiagnosticreport) String() string { return proto.CompactTextString(m) }
func (*UsCoreDiagnosticreport) ProtoMessage()    {}
func (*UsCoreDiagnosticreport) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{6}
}

func (m *UsCoreDiagnosticreport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreDiagnosticreport.Unmarshal(m, b)
}
func (m *UsCoreDiagnosticreport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreDiagnosticreport.Marshal(b, m, deterministic)
}
func (m *UsCoreDiagnosticreport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreDiagnosticreport.Merge(m, src)
}
func (m *UsCoreDiagnosticreport) XXX_Size() int {
	return xxx_messageInfo_UsCoreDiagnosticreport.Size(m)
}
func (m *UsCoreDiagnosticreport) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreDiagnosticreport.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreDiagnosticreport proto.InternalMessageInfo

func (m *UsCoreDiagnosticreport) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetStatus() *DiagnosticReportStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetEffective() *UsCoreDiagnosticreport_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetPerformer() []*UsCoreDiagnosticreport_Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetSpecimen() []*Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetResult() []*Reference {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetImagingStudy() []*Reference {
	if m != nil {
		return m.ImagingStudy
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetImage() []*UsCoreDiagnosticreport_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetConclusion() *String {
	if m != nil {
		return m.Conclusion
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetCodedDiagnosis() []*CodeableConcept {
	if m != nil {
		return m.CodedDiagnosis
	}
	return nil
}

func (m *UsCoreDiagnosticreport) GetPresentedForm() []*Attachment {
	if m != nil {
		return m.PresentedForm
	}
	return nil
}

// Specimen Collection Datetime or Period
type UsCoreDiagnosticreport_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*UsCoreDiagnosticreport_Effective_DateTime
	//	*UsCoreDiagnosticreport_Effective_Period
	Effective            isUsCoreDiagnosticreport_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *UsCoreDiagnosticreport_Effective) Reset()         { *m = UsCoreDiagnosticreport_Effective{} }
func (m *UsCoreDiagnosticreport_Effective) String() string { return proto.CompactTextString(m) }
func (*UsCoreDiagnosticreport_Effective) ProtoMessage()    {}
func (*UsCoreDiagnosticreport_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{6, 0}
}

func (m *UsCoreDiagnosticreport_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreDiagnosticreport_Effective.Unmarshal(m, b)
}
func (m *UsCoreDiagnosticreport_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreDiagnosticreport_Effective.Marshal(b, m, deterministic)
}
func (m *UsCoreDiagnosticreport_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreDiagnosticreport_Effective.Merge(m, src)
}
func (m *UsCoreDiagnosticreport_Effective) XXX_Size() int {
	return xxx_messageInfo_UsCoreDiagnosticreport_Effective.Size(m)
}
func (m *UsCoreDiagnosticreport_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreDiagnosticreport_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreDiagnosticreport_Effective proto.InternalMessageInfo

type isUsCoreDiagnosticreport_Effective_Effective interface {
	isUsCoreDiagnosticreport_Effective_Effective()
}

type UsCoreDiagnosticreport_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreDiagnosticreport_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*UsCoreDiagnosticreport_Effective_DateTime) isUsCoreDiagnosticreport_Effective_Effective() {}

func (*UsCoreDiagnosticreport_Effective_Period) isUsCoreDiagnosticreport_Effective_Effective() {}

func (m *UsCoreDiagnosticreport_Effective) GetEffective() isUsCoreDiagnosticreport_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*UsCoreDiagnosticreport_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*UsCoreDiagnosticreport_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreDiagnosticreport_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreDiagnosticreport_Effective_OneofMarshaler, _UsCoreDiagnosticreport_Effective_OneofUnmarshaler, _UsCoreDiagnosticreport_Effective_OneofSizer, []interface{}{
		(*UsCoreDiagnosticreport_Effective_DateTime)(nil),
		(*UsCoreDiagnosticreport_Effective_Period)(nil),
	}
}

func _UsCoreDiagnosticreport_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreDiagnosticreport_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *UsCoreDiagnosticreport_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreDiagnosticreport_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreDiagnosticreport_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _UsCoreDiagnosticreport_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreDiagnosticreport_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &UsCoreDiagnosticreport_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &UsCoreDiagnosticreport_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreDiagnosticreport_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreDiagnosticreport_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *UsCoreDiagnosticreport_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreDiagnosticreport_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Participants in producing the report
type UsCoreDiagnosticreport_Performer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of performer
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Practitioner or Organization  participant
	Actor                *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCoreDiagnosticreport_Performer) Reset()         { *m = UsCoreDiagnosticreport_Performer{} }
func (m *UsCoreDiagnosticreport_Performer) String() string { return proto.CompactTextString(m) }
func (*UsCoreDiagnosticreport_Performer) ProtoMessage()    {}
func (*UsCoreDiagnosticreport_Performer) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{6, 1}
}

func (m *UsCoreDiagnosticreport_Performer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreDiagnosticreport_Performer.Unmarshal(m, b)
}
func (m *UsCoreDiagnosticreport_Performer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreDiagnosticreport_Performer.Marshal(b, m, deterministic)
}
func (m *UsCoreDiagnosticreport_Performer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreDiagnosticreport_Performer.Merge(m, src)
}
func (m *UsCoreDiagnosticreport_Performer) XXX_Size() int {
	return xxx_messageInfo_UsCoreDiagnosticreport_Performer.Size(m)
}
func (m *UsCoreDiagnosticreport_Performer) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreDiagnosticreport_Performer.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreDiagnosticreport_Performer proto.InternalMessageInfo

func (m *UsCoreDiagnosticreport_Performer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Performer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Performer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Performer) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Performer) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

// Key images associated with this report
type UsCoreDiagnosticreport_Image struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Comment about the image (e.g. explanation)
	Comment *String `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	// Reference to the image source
	Link                 *Reference `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCoreDiagnosticreport_Image) Reset()         { *m = UsCoreDiagnosticreport_Image{} }
func (m *UsCoreDiagnosticreport_Image) String() string { return proto.CompactTextString(m) }
func (*UsCoreDiagnosticreport_Image) ProtoMessage()    {}
func (*UsCoreDiagnosticreport_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{6, 2}
}

func (m *UsCoreDiagnosticreport_Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreDiagnosticreport_Image.Unmarshal(m, b)
}
func (m *UsCoreDiagnosticreport_Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreDiagnosticreport_Image.Marshal(b, m, deterministic)
}
func (m *UsCoreDiagnosticreport_Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreDiagnosticreport_Image.Merge(m, src)
}
func (m *UsCoreDiagnosticreport_Image) XXX_Size() int {
	return xxx_messageInfo_UsCoreDiagnosticreport_Image.Size(m)
}
func (m *UsCoreDiagnosticreport_Image) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreDiagnosticreport_Image.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreDiagnosticreport_Image proto.InternalMessageInfo

func (m *UsCoreDiagnosticreport_Image) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Image) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Image) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Image) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *UsCoreDiagnosticreport_Image) GetLink() *Reference {
	if m != nil {
		return m.Link
	}
	return nil
}

// Auto-generated from StructureDefinition for UsCoreDirect.
// Email is a "direct" email.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-direct
type ContactPointUsCoreDirect struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Value of extension
	ValueBoolean         *Boolean `protobuf:"bytes,3,opt,name=value_boolean,json=valueBoolean,proto3" json:"value_boolean,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactPointUsCoreDirect) Reset()         { *m = ContactPointUsCoreDirect{} }
func (m *ContactPointUsCoreDirect) String() string { return proto.CompactTextString(m) }
func (*ContactPointUsCoreDirect) ProtoMessage()    {}
func (*ContactPointUsCoreDirect) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{7}
}

func (m *ContactPointUsCoreDirect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactPointUsCoreDirect.Unmarshal(m, b)
}
func (m *ContactPointUsCoreDirect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactPointUsCoreDirect.Marshal(b, m, deterministic)
}
func (m *ContactPointUsCoreDirect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactPointUsCoreDirect.Merge(m, src)
}
func (m *ContactPointUsCoreDirect) XXX_Size() int {
	return xxx_messageInfo_ContactPointUsCoreDirect.Size(m)
}
func (m *ContactPointUsCoreDirect) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactPointUsCoreDirect.DiscardUnknown(m)
}

var xxx_messageInfo_ContactPointUsCoreDirect proto.InternalMessageInfo

func (m *ContactPointUsCoreDirect) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ContactPointUsCoreDirect) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *ContactPointUsCoreDirect) GetValueBoolean() *Boolean {
	if m != nil {
		return m.ValueBoolean
	}
	return nil
}

// Auto-generated from StructureDefinition for US Core ethnicity Extension.
// US Core ethnicity Extension.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity
type PatientUSCoreEthnicityExtension struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Extension
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Hispanic or Latino|Not Hispanic or Latino
	OmbCategory *Coding `protobuf:"bytes,4,opt,name=omb_category,json=ombCategory,proto3" json:"omb_category,omitempty"`
	// Extended ethnicity codes
	Detailed []*Coding `protobuf:"bytes,5,rep,name=detailed,proto3" json:"detailed,omitempty"`
	// ethnicity Text
	Text                 *String  `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatientUSCoreEthnicityExtension) Reset()         { *m = PatientUSCoreEthnicityExtension{} }
func (m *PatientUSCoreEthnicityExtension) String() string { return proto.CompactTextString(m) }
func (*PatientUSCoreEthnicityExtension) ProtoMessage()    {}
func (*PatientUSCoreEthnicityExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{8}
}

func (m *PatientUSCoreEthnicityExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatientUSCoreEthnicityExtension.Unmarshal(m, b)
}
func (m *PatientUSCoreEthnicityExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatientUSCoreEthnicityExtension.Marshal(b, m, deterministic)
}
func (m *PatientUSCoreEthnicityExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatientUSCoreEthnicityExtension.Merge(m, src)
}
func (m *PatientUSCoreEthnicityExtension) XXX_Size() int {
	return xxx_messageInfo_PatientUSCoreEthnicityExtension.Size(m)
}
func (m *PatientUSCoreEthnicityExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_PatientUSCoreEthnicityExtension.DiscardUnknown(m)
}

var xxx_messageInfo_PatientUSCoreEthnicityExtension proto.InternalMessageInfo

func (m *PatientUSCoreEthnicityExtension) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PatientUSCoreEthnicityExtension) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PatientUSCoreEthnicityExtension) GetOmbCategory() *Coding {
	if m != nil {
		return m.OmbCategory
	}
	return nil
}

func (m *PatientUSCoreEthnicityExtension) GetDetailed() []*Coding {
	if m != nil {
		return m.Detailed
	}
	return nil
}

func (m *PatientUSCoreEthnicityExtension) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core Goal Profile.
// US Core Goal Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-goal
type UsCoreGoal struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this goal
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// proposed | accepted | planned | in-progress | on-target | ahead-of-target |
	// behind-target | sustaining | achieved | on-hold | cancelled |
	// entered-in-error | rejected
	Status *GoalStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// E.g. Treatment, dietary, behavioral, etc.
	Category []*CodeableConcept `protobuf:"bytes,11,rep,name=category,proto3" json:"category,omitempty"`
	// high-priority | medium-priority | low-priority
	Priority *CodeableConcept `protobuf:"bytes,12,opt,name=priority,proto3" json:"priority,omitempty"`
	// Code or text describing goal
	Description *CodeableConcept `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// Who this goal is intended for
	Subject *Reference         `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	Start   *UsCoreGoal_Start  `protobuf:"bytes,15,opt,name=start,proto3" json:"start,omitempty"`
	Target  *UsCoreGoal_Target `protobuf:"bytes,16,opt,name=target,proto3" json:"target,omitempty"`
	// When goal status took effect
	StatusDate *Date `protobuf:"bytes,17,opt,name=status_date,json=statusDate,proto3" json:"status_date,omitempty"`
	// Reason for current status
	StatusReason *String `protobuf:"bytes,18,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	// Who's responsible for creating Goal?
	ExpressedBy *Reference `protobuf:"bytes,19,opt,name=expressed_by,json=expressedBy,proto3" json:"expressed_by,omitempty"`
	// Issues addressed by this goal
	Addresses []*Reference `protobuf:"bytes,20,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// Comments about the goal
	Note []*Annotation `protobuf:"bytes,21,rep,name=note,proto3" json:"note,omitempty"`
	// What result was achieved regarding the goal?
	OutcomeCode []*CodeableConcept `protobuf:"bytes,22,rep,name=outcome_code,json=outcomeCode,proto3" json:"outcome_code,omitempty"`
	// Observation that resulted from goal
	OutcomeReference     []*Reference `protobuf:"bytes,23,rep,name=outcome_reference,json=outcomeReference,proto3" json:"outcome_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UsCoreGoal) Reset()         { *m = UsCoreGoal{} }
func (m *UsCoreGoal) String() string { return proto.CompactTextString(m) }
func (*UsCoreGoal) ProtoMessage()    {}
func (*UsCoreGoal) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{9}
}

func (m *UsCoreGoal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreGoal.Unmarshal(m, b)
}
func (m *UsCoreGoal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreGoal.Marshal(b, m, deterministic)
}
func (m *UsCoreGoal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreGoal.Merge(m, src)
}
func (m *UsCoreGoal) XXX_Size() int {
	return xxx_messageInfo_UsCoreGoal.Size(m)
}
func (m *UsCoreGoal) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreGoal.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreGoal proto.InternalMessageInfo

func (m *UsCoreGoal) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreGoal) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreGoal) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreGoal) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreGoal) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreGoal) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreGoal) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreGoal) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreGoal) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreGoal) GetStatus() *GoalStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreGoal) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreGoal) GetPriority() *CodeableConcept {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *UsCoreGoal) GetDescription() *CodeableConcept {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UsCoreGoal) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreGoal) GetStart() *UsCoreGoal_Start {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *UsCoreGoal) GetTarget() *UsCoreGoal_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *UsCoreGoal) GetStatusDate() *Date {
	if m != nil {
		return m.StatusDate
	}
	return nil
}

func (m *UsCoreGoal) GetStatusReason() *String {
	if m != nil {
		return m.StatusReason
	}
	return nil
}

func (m *UsCoreGoal) GetExpressedBy() *Reference {
	if m != nil {
		return m.ExpressedBy
	}
	return nil
}

func (m *UsCoreGoal) GetAddresses() []*Reference {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *UsCoreGoal) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *UsCoreGoal) GetOutcomeCode() []*CodeableConcept {
	if m != nil {
		return m.OutcomeCode
	}
	return nil
}

func (m *UsCoreGoal) GetOutcomeReference() []*Reference {
	if m != nil {
		return m.OutcomeReference
	}
	return nil
}

// When goal pursuit begins
type UsCoreGoal_Start struct {
	// Types that are valid to be assigned to Start:
	//	*UsCoreGoal_Start_Date
	//	*UsCoreGoal_Start_CodeableConcept
	Start                isUsCoreGoal_Start_Start `protobuf_oneof:"start"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UsCoreGoal_Start) Reset()         { *m = UsCoreGoal_Start{} }
func (m *UsCoreGoal_Start) String() string { return proto.CompactTextString(m) }
func (*UsCoreGoal_Start) ProtoMessage()    {}
func (*UsCoreGoal_Start) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{9, 0}
}

func (m *UsCoreGoal_Start) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreGoal_Start.Unmarshal(m, b)
}
func (m *UsCoreGoal_Start) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreGoal_Start.Marshal(b, m, deterministic)
}
func (m *UsCoreGoal_Start) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreGoal_Start.Merge(m, src)
}
func (m *UsCoreGoal_Start) XXX_Size() int {
	return xxx_messageInfo_UsCoreGoal_Start.Size(m)
}
func (m *UsCoreGoal_Start) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreGoal_Start.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreGoal_Start proto.InternalMessageInfo

type isUsCoreGoal_Start_Start interface {
	isUsCoreGoal_Start_Start()
}

type UsCoreGoal_Start_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type UsCoreGoal_Start_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*UsCoreGoal_Start_Date) isUsCoreGoal_Start_Start() {}

func (*UsCoreGoal_Start_CodeableConcept) isUsCoreGoal_Start_Start() {}

func (m *UsCoreGoal_Start) GetStart() isUsCoreGoal_Start_Start {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *UsCoreGoal_Start) GetDate() *Date {
	if x, ok := m.GetStart().(*UsCoreGoal_Start_Date); ok {
		return x.Date
	}
	return nil
}

func (m *UsCoreGoal_Start) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetStart().(*UsCoreGoal_Start_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreGoal_Start) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreGoal_Start_OneofMarshaler, _UsCoreGoal_Start_OneofUnmarshaler, _UsCoreGoal_Start_OneofSizer, []interface{}{
		(*UsCoreGoal_Start_Date)(nil),
		(*UsCoreGoal_Start_CodeableConcept)(nil),
	}
}

func _UsCoreGoal_Start_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreGoal_Start)
	// start
	switch x := m.Start.(type) {
	case *UsCoreGoal_Start_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *UsCoreGoal_Start_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreGoal_Start.Start has unexpected type %T", x)
	}
	return nil
}

func _UsCoreGoal_Start_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreGoal_Start)
	switch tag {
	case 1: // start.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Start = &UsCoreGoal_Start_Date{msg}
		return true, err
	case 2: // start.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Start = &UsCoreGoal_Start_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreGoal_Start_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreGoal_Start)
	// start
	switch x := m.Start.(type) {
	case *UsCoreGoal_Start_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreGoal_Start_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Target outcome for the goal
type UsCoreGoal_Target struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The parameter whose value is being tracked
	Measure              *CodeableConcept          `protobuf:"bytes,4,opt,name=measure,proto3" json:"measure,omitempty"`
	Detail               *UsCoreGoal_Target_Detail `protobuf:"bytes,5,opt,name=detail,proto3" json:"detail,omitempty"`
	Due                  *UsCoreGoal_Target_Due    `protobuf:"bytes,6,opt,name=due,proto3" json:"due,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UsCoreGoal_Target) Reset()         { *m = UsCoreGoal_Target{} }
func (m *UsCoreGoal_Target) String() string { return proto.CompactTextString(m) }
func (*UsCoreGoal_Target) ProtoMessage()    {}
func (*UsCoreGoal_Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{9, 1}
}

func (m *UsCoreGoal_Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreGoal_Target.Unmarshal(m, b)
}
func (m *UsCoreGoal_Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreGoal_Target.Marshal(b, m, deterministic)
}
func (m *UsCoreGoal_Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreGoal_Target.Merge(m, src)
}
func (m *UsCoreGoal_Target) XXX_Size() int {
	return xxx_messageInfo_UsCoreGoal_Target.Size(m)
}
func (m *UsCoreGoal_Target) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreGoal_Target.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreGoal_Target proto.InternalMessageInfo

func (m *UsCoreGoal_Target) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreGoal_Target) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreGoal_Target) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreGoal_Target) GetMeasure() *CodeableConcept {
	if m != nil {
		return m.Measure
	}
	return nil
}

func (m *UsCoreGoal_Target) GetDetail() *UsCoreGoal_Target_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *UsCoreGoal_Target) GetDue() *UsCoreGoal_Target_Due {
	if m != nil {
		return m.Due
	}
	return nil
}

// The target value to be achieved
type UsCoreGoal_Target_Detail struct {
	// Types that are valid to be assigned to Detail:
	//	*UsCoreGoal_Target_Detail_Quantity
	//	*UsCoreGoal_Target_Detail_Range
	//	*UsCoreGoal_Target_Detail_CodeableConcept
	Detail               isUsCoreGoal_Target_Detail_Detail `protobuf_oneof:"detail"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *UsCoreGoal_Target_Detail) Reset()         { *m = UsCoreGoal_Target_Detail{} }
func (m *UsCoreGoal_Target_Detail) String() string { return proto.CompactTextString(m) }
func (*UsCoreGoal_Target_Detail) ProtoMessage()    {}
func (*UsCoreGoal_Target_Detail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{9, 1, 0}
}

func (m *UsCoreGoal_Target_Detail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreGoal_Target_Detail.Unmarshal(m, b)
}
func (m *UsCoreGoal_Target_Detail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreGoal_Target_Detail.Marshal(b, m, deterministic)
}
func (m *UsCoreGoal_Target_Detail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreGoal_Target_Detail.Merge(m, src)
}
func (m *UsCoreGoal_Target_Detail) XXX_Size() int {
	return xxx_messageInfo_UsCoreGoal_Target_Detail.Size(m)
}
func (m *UsCoreGoal_Target_Detail) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreGoal_Target_Detail.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreGoal_Target_Detail proto.InternalMessageInfo

type isUsCoreGoal_Target_Detail_Detail interface {
	isUsCoreGoal_Target_Detail_Detail()
}

type UsCoreGoal_Target_Detail_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type UsCoreGoal_Target_Detail_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

type UsCoreGoal_Target_Detail_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,3,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*UsCoreGoal_Target_Detail_Quantity) isUsCoreGoal_Target_Detail_Detail() {}

func (*UsCoreGoal_Target_Detail_Range) isUsCoreGoal_Target_Detail_Detail() {}

func (*UsCoreGoal_Target_Detail_CodeableConcept) isUsCoreGoal_Target_Detail_Detail() {}

func (m *UsCoreGoal_Target_Detail) GetDetail() isUsCoreGoal_Target_Detail_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *UsCoreGoal_Target_Detail) GetQuantity() *Quantity {
	if x, ok := m.GetDetail().(*UsCoreGoal_Target_Detail_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *UsCoreGoal_Target_Detail) GetRange() *Range {
	if x, ok := m.GetDetail().(*UsCoreGoal_Target_Detail_Range); ok {
		return x.Range
	}
	return nil
}

func (m *UsCoreGoal_Target_Detail) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetDetail().(*UsCoreGoal_Target_Detail_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreGoal_Target_Detail) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreGoal_Target_Detail_OneofMarshaler, _UsCoreGoal_Target_Detail_OneofUnmarshaler, _UsCoreGoal_Target_Detail_OneofSizer, []interface{}{
		(*UsCoreGoal_Target_Detail_Quantity)(nil),
		(*UsCoreGoal_Target_Detail_Range)(nil),
		(*UsCoreGoal_Target_Detail_CodeableConcept)(nil),
	}
}

func _UsCoreGoal_Target_Detail_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreGoal_Target_Detail)
	// detail
	switch x := m.Detail.(type) {
	case *UsCoreGoal_Target_Detail_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *UsCoreGoal_Target_Detail_Range:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *UsCoreGoal_Target_Detail_CodeableConcept:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreGoal_Target_Detail.Detail has unexpected type %T", x)
	}
	return nil
}

func _UsCoreGoal_Target_Detail_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreGoal_Target_Detail)
	switch tag {
	case 1: // detail.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Detail = &UsCoreGoal_Target_Detail_Quantity{msg}
		return true, err
	case 2: // detail.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Detail = &UsCoreGoal_Target_Detail_Range{msg}
		return true, err
	case 3: // detail.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Detail = &UsCoreGoal_Target_Detail_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreGoal_Target_Detail_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreGoal_Target_Detail)
	// detail
	switch x := m.Detail.(type) {
	case *UsCoreGoal_Target_Detail_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreGoal_Target_Detail_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreGoal_Target_Detail_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Reach goal on or before
type UsCoreGoal_Target_Due struct {
	// Types that are valid to be assigned to Due:
	//	*UsCoreGoal_Target_Due_Date
	//	*UsCoreGoal_Target_Due_Duration
	Due                  isUsCoreGoal_Target_Due_Due `protobuf_oneof:"due"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UsCoreGoal_Target_Due) Reset()         { *m = UsCoreGoal_Target_Due{} }
func (m *UsCoreGoal_Target_Due) String() string { return proto.CompactTextString(m) }
func (*UsCoreGoal_Target_Due) ProtoMessage()    {}
func (*UsCoreGoal_Target_Due) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{9, 1, 1}
}

func (m *UsCoreGoal_Target_Due) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreGoal_Target_Due.Unmarshal(m, b)
}
func (m *UsCoreGoal_Target_Due) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreGoal_Target_Due.Marshal(b, m, deterministic)
}
func (m *UsCoreGoal_Target_Due) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreGoal_Target_Due.Merge(m, src)
}
func (m *UsCoreGoal_Target_Due) XXX_Size() int {
	return xxx_messageInfo_UsCoreGoal_Target_Due.Size(m)
}
func (m *UsCoreGoal_Target_Due) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreGoal_Target_Due.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreGoal_Target_Due proto.InternalMessageInfo

type isUsCoreGoal_Target_Due_Due interface {
	isUsCoreGoal_Target_Due_Due()
}

type UsCoreGoal_Target_Due_Date struct {
	Date *Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type UsCoreGoal_Target_Due_Duration struct {
	Duration *Duration `protobuf:"bytes,2,opt,name=duration,proto3,oneof"`
}

func (*UsCoreGoal_Target_Due_Date) isUsCoreGoal_Target_Due_Due() {}

func (*UsCoreGoal_Target_Due_Duration) isUsCoreGoal_Target_Due_Due() {}

func (m *UsCoreGoal_Target_Due) GetDue() isUsCoreGoal_Target_Due_Due {
	if m != nil {
		return m.Due
	}
	return nil
}

func (m *UsCoreGoal_Target_Due) GetDate() *Date {
	if x, ok := m.GetDue().(*UsCoreGoal_Target_Due_Date); ok {
		return x.Date
	}
	return nil
}

func (m *UsCoreGoal_Target_Due) GetDuration() *Duration {
	if x, ok := m.GetDue().(*UsCoreGoal_Target_Due_Duration); ok {
		return x.Duration
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreGoal_Target_Due) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreGoal_Target_Due_OneofMarshaler, _UsCoreGoal_Target_Due_OneofUnmarshaler, _UsCoreGoal_Target_Due_OneofSizer, []interface{}{
		(*UsCoreGoal_Target_Due_Date)(nil),
		(*UsCoreGoal_Target_Due_Duration)(nil),
	}
}

func _UsCoreGoal_Target_Due_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreGoal_Target_Due)
	// due
	switch x := m.Due.(type) {
	case *UsCoreGoal_Target_Due_Date:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Date); err != nil {
			return err
		}
	case *UsCoreGoal_Target_Due_Duration:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreGoal_Target_Due.Due has unexpected type %T", x)
	}
	return nil
}

func _UsCoreGoal_Target_Due_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreGoal_Target_Due)
	switch tag {
	case 1: // due.date
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Date)
		err := b.DecodeMessage(msg)
		m.Due = &UsCoreGoal_Target_Due_Date{msg}
		return true, err
	case 2: // due.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Duration)
		err := b.DecodeMessage(msg)
		m.Due = &UsCoreGoal_Target_Due_Duration{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreGoal_Target_Due_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreGoal_Target_Due)
	// due
	switch x := m.Due.(type) {
	case *UsCoreGoal_Target_Due_Date:
		s := proto.Size(x.Date)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreGoal_Target_Due_Duration:
		s := proto.Size(x.Duration)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for US  Core Immunization Profile.
// US Core Immunization Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-immunization
type UsCoreImmunization struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// completed | entered-in-error
	Status *ImmunizationStatusCodesCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// Flag for whether immunization was given
	NotGiven *Boolean `protobuf:"bytes,11,opt,name=not_given,json=notGiven,proto3" json:"not_given,omitempty"`
	// Vaccine Product Type (bind to CVX)
	VaccineCode *CodeableConcept `protobuf:"bytes,12,opt,name=vaccine_code,json=vaccineCode,proto3" json:"vaccine_code,omitempty"`
	// Who was immunized
	Patient *Reference `protobuf:"bytes,13,opt,name=patient,proto3" json:"patient,omitempty"`
	// Encounter administered as part of
	Encounter *Reference `protobuf:"bytes,14,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// Vaccination administration date
	Date *DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// Indicates context the data was recorded in
	PrimarySource *Boolean `protobuf:"bytes,16,opt,name=primary_source,json=primarySource,proto3" json:"primary_source,omitempty"`
	// Indicates the source of a secondarily reported record
	ReportOrigin *CodeableConcept `protobuf:"bytes,17,opt,name=report_origin,json=reportOrigin,proto3" json:"report_origin,omitempty"`
	// Where vaccination occurred
	Location *Reference `protobuf:"bytes,18,opt,name=location,proto3" json:"location,omitempty"`
	// Vaccine manufacturer
	Manufacturer *Reference `protobuf:"bytes,19,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	// Vaccine lot number
	LotNumber *String `protobuf:"bytes,20,opt,name=lot_number,json=lotNumber,proto3" json:"lot_number,omitempty"`
	// Vaccine expiration date
	ExpirationDate *Date `protobuf:"bytes,21,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	// Body site vaccine  was administered
	Site *CodeableConcept `protobuf:"bytes,22,opt,name=site,proto3" json:"site,omitempty"`
	// How vaccine entered body
	Route *CodeableConcept `protobuf:"bytes,23,opt,name=route,proto3" json:"route,omitempty"`
	// Amount of vaccine administered
	DoseQuantity *SimpleQuantity                    `protobuf:"bytes,24,opt,name=dose_quantity,json=doseQuantity,proto3" json:"dose_quantity,omitempty"`
	Practitioner []*UsCoreImmunization_Practitioner `protobuf:"bytes,25,rep,name=practitioner,proto3" json:"practitioner,omitempty"`
	// Vaccination notes
	Note                 []*Annotation                             `protobuf:"bytes,26,rep,name=note,proto3" json:"note,omitempty"`
	Explanation          *UsCoreImmunization_Explanation           `protobuf:"bytes,27,opt,name=explanation,proto3" json:"explanation,omitempty"`
	Reaction             []*UsCoreImmunization_Reaction            `protobuf:"bytes,28,rep,name=reaction,proto3" json:"reaction,omitempty"`
	VaccinationProtocol  []*UsCoreImmunization_VaccinationProtocol `protobuf:"bytes,29,rep,name=vaccination_protocol,json=vaccinationProtocol,proto3" json:"vaccination_protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *UsCoreImmunization) Reset()         { *m = UsCoreImmunization{} }
func (m *UsCoreImmunization) String() string { return proto.CompactTextString(m) }
func (*UsCoreImmunization) ProtoMessage()    {}
func (*UsCoreImmunization) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{10}
}

func (m *UsCoreImmunization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreImmunization.Unmarshal(m, b)
}
func (m *UsCoreImmunization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreImmunization.Marshal(b, m, deterministic)
}
func (m *UsCoreImmunization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreImmunization.Merge(m, src)
}
func (m *UsCoreImmunization) XXX_Size() int {
	return xxx_messageInfo_UsCoreImmunization.Size(m)
}
func (m *UsCoreImmunization) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreImmunization.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreImmunization proto.InternalMessageInfo

func (m *UsCoreImmunization) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreImmunization) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreImmunization) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreImmunization) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreImmunization) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreImmunization) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreImmunization) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreImmunization) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreImmunization) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreImmunization) GetStatus() *ImmunizationStatusCodesCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreImmunization) GetNotGiven() *Boolean {
	if m != nil {
		return m.NotGiven
	}
	return nil
}

func (m *UsCoreImmunization) GetVaccineCode() *CodeableConcept {
	if m != nil {
		return m.VaccineCode
	}
	return nil
}

func (m *UsCoreImmunization) GetPatient() *Reference {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *UsCoreImmunization) GetEncounter() *Reference {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *UsCoreImmunization) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *UsCoreImmunization) GetPrimarySource() *Boolean {
	if m != nil {
		return m.PrimarySource
	}
	return nil
}

func (m *UsCoreImmunization) GetReportOrigin() *CodeableConcept {
	if m != nil {
		return m.ReportOrigin
	}
	return nil
}

func (m *UsCoreImmunization) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *UsCoreImmunization) GetManufacturer() *Reference {
	if m != nil {
		return m.Manufacturer
	}
	return nil
}

func (m *UsCoreImmunization) GetLotNumber() *String {
	if m != nil {
		return m.LotNumber
	}
	return nil
}

func (m *UsCoreImmunization) GetExpirationDate() *Date {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

func (m *UsCoreImmunization) GetSite() *CodeableConcept {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *UsCoreImmunization) GetRoute() *CodeableConcept {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *UsCoreImmunization) GetDoseQuantity() *SimpleQuantity {
	if m != nil {
		return m.DoseQuantity
	}
	return nil
}

func (m *UsCoreImmunization) GetPractitioner() []*UsCoreImmunization_Practitioner {
	if m != nil {
		return m.Practitioner
	}
	return nil
}

func (m *UsCoreImmunization) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *UsCoreImmunization) GetExplanation() *UsCoreImmunization_Explanation {
	if m != nil {
		return m.Explanation
	}
	return nil
}

func (m *UsCoreImmunization) GetReaction() []*UsCoreImmunization_Reaction {
	if m != nil {
		return m.Reaction
	}
	return nil
}

func (m *UsCoreImmunization) GetVaccinationProtocol() []*UsCoreImmunization_VaccinationProtocol {
	if m != nil {
		return m.VaccinationProtocol
	}
	return nil
}

// Who performed event
type UsCoreImmunization_Practitioner struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What type of performance was done
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// Individual who was performing
	Actor                *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCoreImmunization_Practitioner) Reset()         { *m = UsCoreImmunization_Practitioner{} }
func (m *UsCoreImmunization_Practitioner) String() string { return proto.CompactTextString(m) }
func (*UsCoreImmunization_Practitioner) ProtoMessage()    {}
func (*UsCoreImmunization_Practitioner) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{10, 0}
}

func (m *UsCoreImmunization_Practitioner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreImmunization_Practitioner.Unmarshal(m, b)
}
func (m *UsCoreImmunization_Practitioner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreImmunization_Practitioner.Marshal(b, m, deterministic)
}
func (m *UsCoreImmunization_Practitioner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreImmunization_Practitioner.Merge(m, src)
}
func (m *UsCoreImmunization_Practitioner) XXX_Size() int {
	return xxx_messageInfo_UsCoreImmunization_Practitioner.Size(m)
}
func (m *UsCoreImmunization_Practitioner) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreImmunization_Practitioner.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreImmunization_Practitioner proto.InternalMessageInfo

func (m *UsCoreImmunization_Practitioner) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreImmunization_Practitioner) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreImmunization_Practitioner) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreImmunization_Practitioner) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *UsCoreImmunization_Practitioner) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

// Administration/non-administration reasons
type UsCoreImmunization_Explanation struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Why immunization occurred
	Reason []*CodeableConcept `protobuf:"bytes,4,rep,name=reason,proto3" json:"reason,omitempty"`
	// Why immunization did not occur
	ReasonNotGiven       []*CodeableConcept `protobuf:"bytes,5,rep,name=reason_not_given,json=reasonNotGiven,proto3" json:"reason_not_given,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UsCoreImmunization_Explanation) Reset()         { *m = UsCoreImmunization_Explanation{} }
func (m *UsCoreImmunization_Explanation) String() string { return proto.CompactTextString(m) }
func (*UsCoreImmunization_Explanation) ProtoMessage()    {}
func (*UsCoreImmunization_Explanation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{10, 1}
}

func (m *UsCoreImmunization_Explanation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreImmunization_Explanation.Unmarshal(m, b)
}
func (m *UsCoreImmunization_Explanation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreImmunization_Explanation.Marshal(b, m, deterministic)
}
func (m *UsCoreImmunization_Explanation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreImmunization_Explanation.Merge(m, src)
}
func (m *UsCoreImmunization_Explanation) XXX_Size() int {
	return xxx_messageInfo_UsCoreImmunization_Explanation.Size(m)
}
func (m *UsCoreImmunization_Explanation) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreImmunization_Explanation.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreImmunization_Explanation proto.InternalMessageInfo

func (m *UsCoreImmunization_Explanation) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreImmunization_Explanation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreImmunization_Explanation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreImmunization_Explanation) GetReason() []*CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *UsCoreImmunization_Explanation) GetReasonNotGiven() []*CodeableConcept {
	if m != nil {
		return m.ReasonNotGiven
	}
	return nil
}

// Details of a reaction that follows immunization
type UsCoreImmunization_Reaction struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// When reaction started
	Date *DateTime `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	// Additional information on reaction
	Detail *Reference `protobuf:"bytes,5,opt,name=detail,proto3" json:"detail,omitempty"`
	// Indicates self-reported reaction
	Reported             *Boolean `protobuf:"bytes,6,opt,name=reported,proto3" json:"reported,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCoreImmunization_Reaction) Reset()         { *m = UsCoreImmunization_Reaction{} }
func (m *UsCoreImmunization_Reaction) String() string { return proto.CompactTextString(m) }
func (*UsCoreImmunization_Reaction) ProtoMessage()    {}
func (*UsCoreImmunization_Reaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{10, 2}
}

func (m *UsCoreImmunization_Reaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreImmunization_Reaction.Unmarshal(m, b)
}
func (m *UsCoreImmunization_Reaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreImmunization_Reaction.Marshal(b, m, deterministic)
}
func (m *UsCoreImmunization_Reaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreImmunization_Reaction.Merge(m, src)
}
func (m *UsCoreImmunization_Reaction) XXX_Size() int {
	return xxx_messageInfo_UsCoreImmunization_Reaction.Size(m)
}
func (m *UsCoreImmunization_Reaction) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreImmunization_Reaction.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreImmunization_Reaction proto.InternalMessageInfo

func (m *UsCoreImmunization_Reaction) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreImmunization_Reaction) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreImmunization_Reaction) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreImmunization_Reaction) GetDate() *DateTime {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *UsCoreImmunization_Reaction) GetDetail() *Reference {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *UsCoreImmunization_Reaction) GetReported() *Boolean {
	if m != nil {
		return m.Reported
	}
	return nil
}

// What protocol was followed
type UsCoreImmunization_VaccinationProtocol struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Dose number within series
	DoseSequence *PositiveInt `protobuf:"bytes,4,opt,name=dose_sequence,json=doseSequence,proto3" json:"dose_sequence,omitempty"`
	// Details of vaccine protocol
	Description *String `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Who is responsible for protocol
	Authority *Reference `protobuf:"bytes,6,opt,name=authority,proto3" json:"authority,omitempty"`
	// Name of vaccine series
	Series *String `protobuf:"bytes,7,opt,name=series,proto3" json:"series,omitempty"`
	// Recommended number of doses for immunity
	SeriesDoses *PositiveInt `protobuf:"bytes,8,opt,name=series_doses,json=seriesDoses,proto3" json:"series_doses,omitempty"`
	// Disease immunized against
	TargetDisease []*CodeableConcept `protobuf:"bytes,9,rep,name=target_disease,json=targetDisease,proto3" json:"target_disease,omitempty"`
	// Indicates if dose counts towards immunity
	DoseStatus *CodeableConcept `protobuf:"bytes,10,opt,name=dose_status,json=doseStatus,proto3" json:"dose_status,omitempty"`
	// Why dose does (not) count
	DoseStatusReason     *CodeableConcept `protobuf:"bytes,11,opt,name=dose_status_reason,json=doseStatusReason,proto3" json:"dose_status_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UsCoreImmunization_VaccinationProtocol) Reset() {
	*m = UsCoreImmunization_VaccinationProtocol{}
}
func (m *UsCoreImmunization_VaccinationProtocol) String() string { return proto.CompactTextString(m) }
func (*UsCoreImmunization_VaccinationProtocol) ProtoMessage()    {}
func (*UsCoreImmunization_VaccinationProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{10, 3}
}

func (m *UsCoreImmunization_VaccinationProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreImmunization_VaccinationProtocol.Unmarshal(m, b)
}
func (m *UsCoreImmunization_VaccinationProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreImmunization_VaccinationProtocol.Marshal(b, m, deterministic)
}
func (m *UsCoreImmunization_VaccinationProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreImmunization_VaccinationProtocol.Merge(m, src)
}
func (m *UsCoreImmunization_VaccinationProtocol) XXX_Size() int {
	return xxx_messageInfo_UsCoreImmunization_VaccinationProtocol.Size(m)
}
func (m *UsCoreImmunization_VaccinationProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreImmunization_VaccinationProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreImmunization_VaccinationProtocol proto.InternalMessageInfo

func (m *UsCoreImmunization_VaccinationProtocol) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetDoseSequence() *PositiveInt {
	if m != nil {
		return m.DoseSequence
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetAuthority() *Reference {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetSeries() *String {
	if m != nil {
		return m.Series
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetSeriesDoses() *PositiveInt {
	if m != nil {
		return m.SeriesDoses
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetTargetDisease() []*CodeableConcept {
	if m != nil {
		return m.TargetDisease
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetDoseStatus() *CodeableConcept {
	if m != nil {
		return m.DoseStatus
	}
	return nil
}

func (m *UsCoreImmunization_VaccinationProtocol) GetDoseStatusReason() *CodeableConcept {
	if m != nil {
		return m.DoseStatusReason
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core Location Profile.
// US Core Location Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-location
type UsCoreLocation struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Unique code or number identifying the location to its users
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// active | suspended | inactive
	Status *LocationStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// The Operational status of the location (typically only for a bed/room)
	OperationalStatus *Coding `protobuf:"bytes,11,opt,name=operational_status,json=operationalStatus,proto3" json:"operational_status,omitempty"`
	// Name of the location as used by humans
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// A list of alternate names that the location is known as, or was known as in
	// the past
	Alias []*String `protobuf:"bytes,13,rep,name=alias,proto3" json:"alias,omitempty"`
	// Additional details about the location that could be displayed as further
	// information to identify the location beyond its name
	Description *String `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	// instance | kind
	Mode *LocationModeCode `protobuf:"bytes,15,opt,name=mode,proto3" json:"mode,omitempty"`
	// Type of function performed
	Type *CodeableConcept `protobuf:"bytes,16,opt,name=type,proto3" json:"type,omitempty"`
	// Contact details of the location
	Telecom []*ContactPoint `protobuf:"bytes,17,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// Physical location
	Address *Address `protobuf:"bytes,18,opt,name=address,proto3" json:"address,omitempty"`
	// Physical form of the location
	PhysicalType *CodeableConcept         `protobuf:"bytes,19,opt,name=physical_type,json=physicalType,proto3" json:"physical_type,omitempty"`
	Position     *UsCoreLocation_Position `protobuf:"bytes,20,opt,name=position,proto3" json:"position,omitempty"`
	// Organization responsible for provisioning and upkeep
	ManagingOrganization *Reference `protobuf:"bytes,21,opt,name=managing_organization,json=managingOrganization,proto3" json:"managing_organization,omitempty"`
	// Another Location this one is physically part of
	PartOf *Reference `protobuf:"bytes,22,opt,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// Technical endpoints providing access to services operated for the location
	Endpoint             []*Reference `protobuf:"bytes,23,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UsCoreLocation) Reset()         { *m = UsCoreLocation{} }
func (m *UsCoreLocation) String() string { return proto.CompactTextString(m) }
func (*UsCoreLocation) ProtoMessage()    {}
func (*UsCoreLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{11}
}

func (m *UsCoreLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreLocation.Unmarshal(m, b)
}
func (m *UsCoreLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreLocation.Marshal(b, m, deterministic)
}
func (m *UsCoreLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreLocation.Merge(m, src)
}
func (m *UsCoreLocation) XXX_Size() int {
	return xxx_messageInfo_UsCoreLocation.Size(m)
}
func (m *UsCoreLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreLocation.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreLocation proto.InternalMessageInfo

func (m *UsCoreLocation) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreLocation) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreLocation) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreLocation) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreLocation) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreLocation) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreLocation) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreLocation) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreLocation) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreLocation) GetStatus() *LocationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreLocation) GetOperationalStatus() *Coding {
	if m != nil {
		return m.OperationalStatus
	}
	return nil
}

func (m *UsCoreLocation) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UsCoreLocation) GetAlias() []*String {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *UsCoreLocation) GetDescription() *String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UsCoreLocation) GetMode() *LocationModeCode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *UsCoreLocation) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UsCoreLocation) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *UsCoreLocation) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UsCoreLocation) GetPhysicalType() *CodeableConcept {
	if m != nil {
		return m.PhysicalType
	}
	return nil
}

func (m *UsCoreLocation) GetPosition() *UsCoreLocation_Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *UsCoreLocation) GetManagingOrganization() *Reference {
	if m != nil {
		return m.ManagingOrganization
	}
	return nil
}

func (m *UsCoreLocation) GetPartOf() *Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *UsCoreLocation) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

// The absolute geographic location
type UsCoreLocation_Position struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Longitude with WGS84 datum
	Longitude *Decimal `protobuf:"bytes,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// Latitude with WGS84 datum
	Latitude *Decimal `protobuf:"bytes,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// Altitude with WGS84 datum
	Altitude             *Decimal `protobuf:"bytes,6,opt,name=altitude,proto3" json:"altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCoreLocation_Position) Reset()         { *m = UsCoreLocation_Position{} }
func (m *UsCoreLocation_Position) String() string { return proto.CompactTextString(m) }
func (*UsCoreLocation_Position) ProtoMessage()    {}
func (*UsCoreLocation_Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{11, 0}
}

func (m *UsCoreLocation_Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreLocation_Position.Unmarshal(m, b)
}
func (m *UsCoreLocation_Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreLocation_Position.Marshal(b, m, deterministic)
}
func (m *UsCoreLocation_Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreLocation_Position.Merge(m, src)
}
func (m *UsCoreLocation_Position) XXX_Size() int {
	return xxx_messageInfo_UsCoreLocation_Position.Size(m)
}
func (m *UsCoreLocation_Position) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreLocation_Position.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreLocation_Position proto.InternalMessageInfo

func (m *UsCoreLocation_Position) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreLocation_Position) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreLocation_Position) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreLocation_Position) GetLongitude() *Decimal {
	if m != nil {
		return m.Longitude
	}
	return nil
}

func (m *UsCoreLocation_Position) GetLatitude() *Decimal {
	if m != nil {
		return m.Latitude
	}
	return nil
}

func (m *UsCoreLocation_Position) GetAltitude() *Decimal {
	if m != nil {
		return m.Altitude
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core Medication Profile.
// US Core Medication Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-medication
type UsCoreMedication struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Codes that identify this medication
	Code *CodeableConcept `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`
	// active | inactive | entered-in-error
	Status *MedicationStatusCode `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	// True if a brand
	IsBrand *Boolean `protobuf:"bytes,11,opt,name=is_brand,json=isBrand,proto3" json:"is_brand,omitempty"`
	// True if medication does not require a prescription
	IsOverTheCounter *Boolean `protobuf:"bytes,12,opt,name=is_over_the_counter,json=isOverTheCounter,proto3" json:"is_over_the_counter,omitempty"`
	// Manufacturer of the item
	Manufacturer *Reference `protobuf:"bytes,13,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	// powder | tablets | capsule +
	Form         *CodeableConcept               `protobuf:"bytes,14,opt,name=form,proto3" json:"form,omitempty"`
	Ingredient   []*UsCoreMedication_Ingredient `protobuf:"bytes,15,rep,name=ingredient,proto3" json:"ingredient,omitempty"`
	PackageValue *UsCoreMedication_Package      `protobuf:"bytes,16,opt,name=package_value,json=package,proto3" json:"package_value,omitempty"`
	// Picture of the medication
	Image                []*Attachment `protobuf:"bytes,17,rep,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UsCoreMedication) Reset()         { *m = UsCoreMedication{} }
func (m *UsCoreMedication) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedication) ProtoMessage()    {}
func (*UsCoreMedication) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{12}
}

func (m *UsCoreMedication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedication.Unmarshal(m, b)
}
func (m *UsCoreMedication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedication.Marshal(b, m, deterministic)
}
func (m *UsCoreMedication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedication.Merge(m, src)
}
func (m *UsCoreMedication) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedication.Size(m)
}
func (m *UsCoreMedication) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedication.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedication proto.InternalMessageInfo

func (m *UsCoreMedication) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedication) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreMedication) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreMedication) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreMedication) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreMedication) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreMedication) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedication) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedication) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreMedication) GetStatus() *MedicationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreMedication) GetIsBrand() *Boolean {
	if m != nil {
		return m.IsBrand
	}
	return nil
}

func (m *UsCoreMedication) GetIsOverTheCounter() *Boolean {
	if m != nil {
		return m.IsOverTheCounter
	}
	return nil
}

func (m *UsCoreMedication) GetManufacturer() *Reference {
	if m != nil {
		return m.Manufacturer
	}
	return nil
}

func (m *UsCoreMedication) GetForm() *CodeableConcept {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *UsCoreMedication) GetIngredient() []*UsCoreMedication_Ingredient {
	if m != nil {
		return m.Ingredient
	}
	return nil
}

func (m *UsCoreMedication) GetPackageValue() *UsCoreMedication_Package {
	if m != nil {
		return m.PackageValue
	}
	return nil
}

func (m *UsCoreMedication) GetImage() []*Attachment {
	if m != nil {
		return m.Image
	}
	return nil
}

// Active or inactive ingredient
type UsCoreMedication_Ingredient struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                      `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Item              *UsCoreMedication_Ingredient_Item `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	// Active ingredient indicator
	IsActive *Boolean `protobuf:"bytes,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Quantity of ingredient present
	Amount               *Ratio   `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCoreMedication_Ingredient) Reset()         { *m = UsCoreMedication_Ingredient{} }
func (m *UsCoreMedication_Ingredient) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedication_Ingredient) ProtoMessage()    {}
func (*UsCoreMedication_Ingredient) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{12, 0}
}

func (m *UsCoreMedication_Ingredient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedication_Ingredient.Unmarshal(m, b)
}
func (m *UsCoreMedication_Ingredient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedication_Ingredient.Marshal(b, m, deterministic)
}
func (m *UsCoreMedication_Ingredient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedication_Ingredient.Merge(m, src)
}
func (m *UsCoreMedication_Ingredient) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedication_Ingredient.Size(m)
}
func (m *UsCoreMedication_Ingredient) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedication_Ingredient.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedication_Ingredient proto.InternalMessageInfo

func (m *UsCoreMedication_Ingredient) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedication_Ingredient) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedication_Ingredient) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedication_Ingredient) GetItem() *UsCoreMedication_Ingredient_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *UsCoreMedication_Ingredient) GetIsActive() *Boolean {
	if m != nil {
		return m.IsActive
	}
	return nil
}

func (m *UsCoreMedication_Ingredient) GetAmount() *Ratio {
	if m != nil {
		return m.Amount
	}
	return nil
}

// The product contained
type UsCoreMedication_Ingredient_Item struct {
	// Types that are valid to be assigned to Item:
	//	*UsCoreMedication_Ingredient_Item_CodeableConcept
	//	*UsCoreMedication_Ingredient_Item_Reference
	Item                 isUsCoreMedication_Ingredient_Item_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *UsCoreMedication_Ingredient_Item) Reset()         { *m = UsCoreMedication_Ingredient_Item{} }
func (m *UsCoreMedication_Ingredient_Item) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedication_Ingredient_Item) ProtoMessage()    {}
func (*UsCoreMedication_Ingredient_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{12, 0, 0}
}

func (m *UsCoreMedication_Ingredient_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedication_Ingredient_Item.Unmarshal(m, b)
}
func (m *UsCoreMedication_Ingredient_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedication_Ingredient_Item.Marshal(b, m, deterministic)
}
func (m *UsCoreMedication_Ingredient_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedication_Ingredient_Item.Merge(m, src)
}
func (m *UsCoreMedication_Ingredient_Item) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedication_Ingredient_Item.Size(m)
}
func (m *UsCoreMedication_Ingredient_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedication_Ingredient_Item.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedication_Ingredient_Item proto.InternalMessageInfo

type isUsCoreMedication_Ingredient_Item_Item interface {
	isUsCoreMedication_Ingredient_Item_Item()
}

type UsCoreMedication_Ingredient_Item_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type UsCoreMedication_Ingredient_Item_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*UsCoreMedication_Ingredient_Item_CodeableConcept) isUsCoreMedication_Ingredient_Item_Item() {}

func (*UsCoreMedication_Ingredient_Item_Reference) isUsCoreMedication_Ingredient_Item_Item() {}

func (m *UsCoreMedication_Ingredient_Item) GetItem() isUsCoreMedication_Ingredient_Item_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *UsCoreMedication_Ingredient_Item) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetItem().(*UsCoreMedication_Ingredient_Item_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *UsCoreMedication_Ingredient_Item) GetReference() *Reference {
	if x, ok := m.GetItem().(*UsCoreMedication_Ingredient_Item_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreMedication_Ingredient_Item) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreMedication_Ingredient_Item_OneofMarshaler, _UsCoreMedication_Ingredient_Item_OneofUnmarshaler, _UsCoreMedication_Ingredient_Item_OneofSizer, []interface{}{
		(*UsCoreMedication_Ingredient_Item_CodeableConcept)(nil),
		(*UsCoreMedication_Ingredient_Item_Reference)(nil),
	}
}

func _UsCoreMedication_Ingredient_Item_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreMedication_Ingredient_Item)
	// item
	switch x := m.Item.(type) {
	case *UsCoreMedication_Ingredient_Item_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *UsCoreMedication_Ingredient_Item_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreMedication_Ingredient_Item.Item has unexpected type %T", x)
	}
	return nil
}

func _UsCoreMedication_Ingredient_Item_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreMedication_Ingredient_Item)
	switch tag {
	case 1: // item.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Item = &UsCoreMedication_Ingredient_Item_CodeableConcept{msg}
		return true, err
	case 2: // item.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Item = &UsCoreMedication_Ingredient_Item_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreMedication_Ingredient_Item_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreMedication_Ingredient_Item)
	// item
	switch x := m.Item.(type) {
	case *UsCoreMedication_Ingredient_Item_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreMedication_Ingredient_Item_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Details about packaged medications
type UsCoreMedication_Package struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// E.g. box, vial, blister-pack
	Container            *CodeableConcept                    `protobuf:"bytes,4,opt,name=container,proto3" json:"container,omitempty"`
	Content              []*UsCoreMedication_Package_Content `protobuf:"bytes,5,rep,name=content,proto3" json:"content,omitempty"`
	Batch                []*UsCoreMedication_Package_Batch   `protobuf:"bytes,6,rep,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *UsCoreMedication_Package) Reset()         { *m = UsCoreMedication_Package{} }
func (m *UsCoreMedication_Package) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedication_Package) ProtoMessage()    {}
func (*UsCoreMedication_Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{12, 1}
}

func (m *UsCoreMedication_Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedication_Package.Unmarshal(m, b)
}
func (m *UsCoreMedication_Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedication_Package.Marshal(b, m, deterministic)
}
func (m *UsCoreMedication_Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedication_Package.Merge(m, src)
}
func (m *UsCoreMedication_Package) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedication_Package.Size(m)
}
func (m *UsCoreMedication_Package) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedication_Package.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedication_Package proto.InternalMessageInfo

func (m *UsCoreMedication_Package) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedication_Package) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedication_Package) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedication_Package) GetContainer() *CodeableConcept {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *UsCoreMedication_Package) GetContent() []*UsCoreMedication_Package_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *UsCoreMedication_Package) GetBatch() []*UsCoreMedication_Package_Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

// What is  in the package
type UsCoreMedication_Package_Content struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension                           `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Item              *UsCoreMedication_Package_Content_Item `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	// Quantity present in the package
	Amount               *SimpleQuantity `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UsCoreMedication_Package_Content) Reset()         { *m = UsCoreMedication_Package_Content{} }
func (m *UsCoreMedication_Package_Content) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedication_Package_Content) ProtoMessage()    {}
func (*UsCoreMedication_Package_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{12, 1, 0}
}

func (m *UsCoreMedication_Package_Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedication_Package_Content.Unmarshal(m, b)
}
func (m *UsCoreMedication_Package_Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedication_Package_Content.Marshal(b, m, deterministic)
}
func (m *UsCoreMedication_Package_Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedication_Package_Content.Merge(m, src)
}
func (m *UsCoreMedication_Package_Content) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedication_Package_Content.Size(m)
}
func (m *UsCoreMedication_Package_Content) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedication_Package_Content.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedication_Package_Content proto.InternalMessageInfo

func (m *UsCoreMedication_Package_Content) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedication_Package_Content) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedication_Package_Content) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedication_Package_Content) GetItem() *UsCoreMedication_Package_Content_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *UsCoreMedication_Package_Content) GetAmount() *SimpleQuantity {
	if m != nil {
		return m.Amount
	}
	return nil
}

// The item in the package
type UsCoreMedication_Package_Content_Item struct {
	// Types that are valid to be assigned to Item:
	//	*UsCoreMedication_Package_Content_Item_CodeableConcept
	//	*UsCoreMedication_Package_Content_Item_Reference
	Item                 isUsCoreMedication_Package_Content_Item_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *UsCoreMedication_Package_Content_Item) Reset()         { *m = UsCoreMedication_Package_Content_Item{} }
func (m *UsCoreMedication_Package_Content_Item) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedication_Package_Content_Item) ProtoMessage()    {}
func (*UsCoreMedication_Package_Content_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{12, 1, 0, 0}
}

func (m *UsCoreMedication_Package_Content_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedication_Package_Content_Item.Unmarshal(m, b)
}
func (m *UsCoreMedication_Package_Content_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedication_Package_Content_Item.Marshal(b, m, deterministic)
}
func (m *UsCoreMedication_Package_Content_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedication_Package_Content_Item.Merge(m, src)
}
func (m *UsCoreMedication_Package_Content_Item) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedication_Package_Content_Item.Size(m)
}
func (m *UsCoreMedication_Package_Content_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedication_Package_Content_Item.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedication_Package_Content_Item proto.InternalMessageInfo

type isUsCoreMedication_Package_Content_Item_Item interface {
	isUsCoreMedication_Package_Content_Item_Item()
}

type UsCoreMedication_Package_Content_Item_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type UsCoreMedication_Package_Content_Item_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*UsCoreMedication_Package_Content_Item_CodeableConcept) isUsCoreMedication_Package_Content_Item_Item() {
}

func (*UsCoreMedication_Package_Content_Item_Reference) isUsCoreMedication_Package_Content_Item_Item() {
}

func (m *UsCoreMedication_Package_Content_Item) GetItem() isUsCoreMedication_Package_Content_Item_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *UsCoreMedication_Package_Content_Item) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetItem().(*UsCoreMedication_Package_Content_Item_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *UsCoreMedication_Package_Content_Item) GetReference() *Reference {
	if x, ok := m.GetItem().(*UsCoreMedication_Package_Content_Item_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreMedication_Package_Content_Item) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreMedication_Package_Content_Item_OneofMarshaler, _UsCoreMedication_Package_Content_Item_OneofUnmarshaler, _UsCoreMedication_Package_Content_Item_OneofSizer, []interface{}{
		(*UsCoreMedication_Package_Content_Item_CodeableConcept)(nil),
		(*UsCoreMedication_Package_Content_Item_Reference)(nil),
	}
}

func _UsCoreMedication_Package_Content_Item_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreMedication_Package_Content_Item)
	// item
	switch x := m.Item.(type) {
	case *UsCoreMedication_Package_Content_Item_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *UsCoreMedication_Package_Content_Item_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreMedication_Package_Content_Item.Item has unexpected type %T", x)
	}
	return nil
}

func _UsCoreMedication_Package_Content_Item_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreMedication_Package_Content_Item)
	switch tag {
	case 1: // item.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Item = &UsCoreMedication_Package_Content_Item_CodeableConcept{msg}
		return true, err
	case 2: // item.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Item = &UsCoreMedication_Package_Content_Item_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreMedication_Package_Content_Item_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreMedication_Package_Content_Item)
	// item
	switch x := m.Item.(type) {
	case *UsCoreMedication_Package_Content_Item_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreMedication_Package_Content_Item_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Identifies a single production run
type UsCoreMedication_Package_Batch struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifier assigned to batch
	LotNumber *String `protobuf:"bytes,4,opt,name=lot_number,json=lotNumber,proto3" json:"lot_number,omitempty"`
	// When batch will expire
	ExpirationDate       *DateTime `protobuf:"bytes,5,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UsCoreMedication_Package_Batch) Reset()         { *m = UsCoreMedication_Package_Batch{} }
func (m *UsCoreMedication_Package_Batch) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedication_Package_Batch) ProtoMessage()    {}
func (*UsCoreMedication_Package_Batch) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{12, 1, 1}
}

func (m *UsCoreMedication_Package_Batch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedication_Package_Batch.Unmarshal(m, b)
}
func (m *UsCoreMedication_Package_Batch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedication_Package_Batch.Marshal(b, m, deterministic)
}
func (m *UsCoreMedication_Package_Batch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedication_Package_Batch.Merge(m, src)
}
func (m *UsCoreMedication_Package_Batch) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedication_Package_Batch.Size(m)
}
func (m *UsCoreMedication_Package_Batch) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedication_Package_Batch.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedication_Package_Batch proto.InternalMessageInfo

func (m *UsCoreMedication_Package_Batch) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedication_Package_Batch) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedication_Package_Batch) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedication_Package_Batch) GetLotNumber() *String {
	if m != nil {
		return m.LotNumber
	}
	return nil
}

func (m *UsCoreMedication_Package_Batch) GetExpirationDate() *DateTime {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core MedicationRequest
// Profile. US Core Medication Request Profile. See
// http://hl7.org/fhir/us/core/StructureDefinition/us-core-medicationrequest
type UsCoreMedicationrequest struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External ids for this request
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// What request fulfills
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Composite request this is part of
	GroupIdentifier *Identifier `protobuf:"bytes,12,opt,name=group_identifier,json=groupIdentifier,proto3" json:"group_identifier,omitempty"`
	// active | on-hold | cancelled | completed | entered-in-error | stopped |
	// draft | unknown
	Status *MedicationRequestStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// proposal | plan | order | instance-order
	Intent *MedicationRequestIntentCode `protobuf:"bytes,14,opt,name=intent,proto3" json:"intent,omitempty"`
	// Type of medication usage
	Category *CodeableConcept `protobuf:"bytes,15,opt,name=category,proto3" json:"category,omitempty"`
	// routine | urgent | stat | asap
	Priority   *MedicationRequestPriorityCode      `protobuf:"bytes,16,opt,name=priority,proto3" json:"priority,omitempty"`
	Medication *UsCoreMedicationrequest_Medication `protobuf:"bytes,17,opt,name=medication,proto3" json:"medication,omitempty"`
	// Who or group medication request is for
	Subject *Reference `protobuf:"bytes,18,opt,name=subject,proto3" json:"subject,omitempty"`
	// Created during encounter/admission/stay
	Context *Reference `protobuf:"bytes,19,opt,name=context,proto3" json:"context,omitempty"`
	// Information to support ordering of the medication
	SupportingInformation []*Reference `protobuf:"bytes,20,rep,name=supporting_information,json=supportingInformation,proto3" json:"supporting_information,omitempty"`
	// When request was initially authored
	AuthoredOn *DateTime                          `protobuf:"bytes,21,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	Requester  *UsCoreMedicationrequest_Requester `protobuf:"bytes,22,opt,name=requester,proto3" json:"requester,omitempty"`
	// Person who entered the request
	Recorder *Reference `protobuf:"bytes,23,opt,name=recorder,proto3" json:"recorder,omitempty"`
	// Reason or indication for writing the prescription
	ReasonCode []*CodeableConcept `protobuf:"bytes,24,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Condition or Observation that supports why the prescription is being
	// written
	ReasonReference []*Reference `protobuf:"bytes,25,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Information about the prescription
	Note []*Annotation `protobuf:"bytes,26,rep,name=note,proto3" json:"note,omitempty"`
	// How the medication should be taken
	DosageInstruction []*Dosage                                `protobuf:"bytes,27,rep,name=dosage_instruction,json=dosageInstruction,proto3" json:"dosage_instruction,omitempty"`
	DispenseRequest   *UsCoreMedicationrequest_DispenseRequest `protobuf:"bytes,28,opt,name=dispense_request,json=dispenseRequest,proto3" json:"dispense_request,omitempty"`
	Substitution      *UsCoreMedicationrequest_Substitution    `protobuf:"bytes,29,opt,name=substitution,proto3" json:"substitution,omitempty"`
	// An order/prescription that is being replaced
	PriorPrescription *Reference `protobuf:"bytes,30,opt,name=prior_prescription,json=priorPrescription,proto3" json:"prior_prescription,omitempty"`
	// Clinical Issue with action
	DetectedIssue []*Reference `protobuf:"bytes,31,rep,name=detected_issue,json=detectedIssue,proto3" json:"detected_issue,omitempty"`
	// A list of events of interest in the lifecycle
	EventHistory         []*Reference `protobuf:"bytes,32,rep,name=event_history,json=eventHistory,proto3" json:"event_history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UsCoreMedicationrequest) Reset()         { *m = UsCoreMedicationrequest{} }
func (m *UsCoreMedicationrequest) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedicationrequest) ProtoMessage()    {}
func (*UsCoreMedicationrequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{13}
}

func (m *UsCoreMedicationrequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedicationrequest.Unmarshal(m, b)
}
func (m *UsCoreMedicationrequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedicationrequest.Marshal(b, m, deterministic)
}
func (m *UsCoreMedicationrequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedicationrequest.Merge(m, src)
}
func (m *UsCoreMedicationrequest) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedicationrequest.Size(m)
}
func (m *UsCoreMedicationrequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedicationrequest.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedicationrequest proto.InternalMessageInfo

func (m *UsCoreMedicationrequest) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetGroupIdentifier() *Identifier {
	if m != nil {
		return m.GroupIdentifier
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetStatus() *MedicationRequestStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetIntent() *MedicationRequestIntentCode {
	if m != nil {
		return m.Intent
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetPriority() *MedicationRequestPriorityCode {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetMedication() *UsCoreMedicationrequest_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetSupportingInformation() []*Reference {
	if m != nil {
		return m.SupportingInformation
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetAuthoredOn() *DateTime {
	if m != nil {
		return m.AuthoredOn
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetRequester() *UsCoreMedicationrequest_Requester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetRecorder() *Reference {
	if m != nil {
		return m.Recorder
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetDosageInstruction() []*Dosage {
	if m != nil {
		return m.DosageInstruction
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetDispenseRequest() *UsCoreMedicationrequest_DispenseRequest {
	if m != nil {
		return m.DispenseRequest
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetSubstitution() *UsCoreMedicationrequest_Substitution {
	if m != nil {
		return m.Substitution
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetPriorPrescription() *Reference {
	if m != nil {
		return m.PriorPrescription
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetDetectedIssue() []*Reference {
	if m != nil {
		return m.DetectedIssue
	}
	return nil
}

func (m *UsCoreMedicationrequest) GetEventHistory() []*Reference {
	if m != nil {
		return m.EventHistory
	}
	return nil
}

// Medication to be taken
type UsCoreMedicationrequest_Medication struct {
	// Types that are valid to be assigned to Medication:
	//	*UsCoreMedicationrequest_Medication_CodeableConcept
	//	*UsCoreMedicationrequest_Medication_Reference
	Medication           isUsCoreMedicationrequest_Medication_Medication `protobuf_oneof:"medication"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *UsCoreMedicationrequest_Medication) Reset()         { *m = UsCoreMedicationrequest_Medication{} }
func (m *UsCoreMedicationrequest_Medication) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedicationrequest_Medication) ProtoMessage()    {}
func (*UsCoreMedicationrequest_Medication) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{13, 0}
}

func (m *UsCoreMedicationrequest_Medication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedicationrequest_Medication.Unmarshal(m, b)
}
func (m *UsCoreMedicationrequest_Medication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedicationrequest_Medication.Marshal(b, m, deterministic)
}
func (m *UsCoreMedicationrequest_Medication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedicationrequest_Medication.Merge(m, src)
}
func (m *UsCoreMedicationrequest_Medication) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedicationrequest_Medication.Size(m)
}
func (m *UsCoreMedicationrequest_Medication) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedicationrequest_Medication.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedicationrequest_Medication proto.InternalMessageInfo

type isUsCoreMedicationrequest_Medication_Medication interface {
	isUsCoreMedicationrequest_Medication_Medication()
}

type UsCoreMedicationrequest_Medication_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type UsCoreMedicationrequest_Medication_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*UsCoreMedicationrequest_Medication_CodeableConcept) isUsCoreMedicationrequest_Medication_Medication() {
}

func (*UsCoreMedicationrequest_Medication_Reference) isUsCoreMedicationrequest_Medication_Medication() {
}

func (m *UsCoreMedicationrequest_Medication) GetMedication() isUsCoreMedicationrequest_Medication_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *UsCoreMedicationrequest_Medication) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetMedication().(*UsCoreMedicationrequest_Medication_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *UsCoreMedicationrequest_Medication) GetReference() *Reference {
	if x, ok := m.GetMedication().(*UsCoreMedicationrequest_Medication_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreMedicationrequest_Medication) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreMedicationrequest_Medication_OneofMarshaler, _UsCoreMedicationrequest_Medication_OneofUnmarshaler, _UsCoreMedicationrequest_Medication_OneofSizer, []interface{}{
		(*UsCoreMedicationrequest_Medication_CodeableConcept)(nil),
		(*UsCoreMedicationrequest_Medication_Reference)(nil),
	}
}

func _UsCoreMedicationrequest_Medication_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreMedicationrequest_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *UsCoreMedicationrequest_Medication_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *UsCoreMedicationrequest_Medication_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreMedicationrequest_Medication.Medication has unexpected type %T", x)
	}
	return nil
}

func _UsCoreMedicationrequest_Medication_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreMedicationrequest_Medication)
	switch tag {
	case 1: // medication.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Medication = &UsCoreMedicationrequest_Medication_CodeableConcept{msg}
		return true, err
	case 2: // medication.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Medication = &UsCoreMedicationrequest_Medication_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreMedicationrequest_Medication_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreMedicationrequest_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *UsCoreMedicationrequest_Medication_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreMedicationrequest_Medication_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Who/What requested the Request
type UsCoreMedicationrequest_Requester struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Who ordered the initial medication(s)
	Agent *Reference `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// Organization agent is acting for
	OnBehalfOf           *Reference `protobuf:"bytes,5,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCoreMedicationrequest_Requester) Reset()         { *m = UsCoreMedicationrequest_Requester{} }
func (m *UsCoreMedicationrequest_Requester) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedicationrequest_Requester) ProtoMessage()    {}
func (*UsCoreMedicationrequest_Requester) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{13, 1}
}

func (m *UsCoreMedicationrequest_Requester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedicationrequest_Requester.Unmarshal(m, b)
}
func (m *UsCoreMedicationrequest_Requester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedicationrequest_Requester.Marshal(b, m, deterministic)
}
func (m *UsCoreMedicationrequest_Requester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedicationrequest_Requester.Merge(m, src)
}
func (m *UsCoreMedicationrequest_Requester) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedicationrequest_Requester.Size(m)
}
func (m *UsCoreMedicationrequest_Requester) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedicationrequest_Requester.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedicationrequest_Requester proto.InternalMessageInfo

func (m *UsCoreMedicationrequest_Requester) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedicationrequest_Requester) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedicationrequest_Requester) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedicationrequest_Requester) GetAgent() *Reference {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *UsCoreMedicationrequest_Requester) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Medication supply authorization
type UsCoreMedicationrequest_DispenseRequest struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Time period supply is authorized for
	ValidityPeriod *Period `protobuf:"bytes,4,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty"`
	// Number of refills authorized
	NumberOfRepeatsAllowed *PositiveInt `protobuf:"bytes,5,opt,name=number_of_repeats_allowed,json=numberOfRepeatsAllowed,proto3" json:"number_of_repeats_allowed,omitempty"`
	// Amount of medication to supply per dispense
	Quantity *SimpleQuantity `protobuf:"bytes,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Number of days supply per dispense
	ExpectedSupplyDuration *Duration `protobuf:"bytes,7,opt,name=expected_supply_duration,json=expectedSupplyDuration,proto3" json:"expected_supply_duration,omitempty"`
	// Intended dispenser
	Performer            *Reference `protobuf:"bytes,8,opt,name=performer,proto3" json:"performer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCoreMedicationrequest_DispenseRequest) Reset() {
	*m = UsCoreMedicationrequest_DispenseRequest{}
}
func (m *UsCoreMedicationrequest_DispenseRequest) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedicationrequest_DispenseRequest) ProtoMessage()    {}
func (*UsCoreMedicationrequest_DispenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{13, 2}
}

func (m *UsCoreMedicationrequest_DispenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedicationrequest_DispenseRequest.Unmarshal(m, b)
}
func (m *UsCoreMedicationrequest_DispenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedicationrequest_DispenseRequest.Marshal(b, m, deterministic)
}
func (m *UsCoreMedicationrequest_DispenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedicationrequest_DispenseRequest.Merge(m, src)
}
func (m *UsCoreMedicationrequest_DispenseRequest) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedicationrequest_DispenseRequest.Size(m)
}
func (m *UsCoreMedicationrequest_DispenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedicationrequest_DispenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedicationrequest_DispenseRequest proto.InternalMessageInfo

func (m *UsCoreMedicationrequest_DispenseRequest) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedicationrequest_DispenseRequest) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedicationrequest_DispenseRequest) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedicationrequest_DispenseRequest) GetValidityPeriod() *Period {
	if m != nil {
		return m.ValidityPeriod
	}
	return nil
}

func (m *UsCoreMedicationrequest_DispenseRequest) GetNumberOfRepeatsAllowed() *PositiveInt {
	if m != nil {
		return m.NumberOfRepeatsAllowed
	}
	return nil
}

func (m *UsCoreMedicationrequest_DispenseRequest) GetQuantity() *SimpleQuantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *UsCoreMedicationrequest_DispenseRequest) GetExpectedSupplyDuration() *Duration {
	if m != nil {
		return m.ExpectedSupplyDuration
	}
	return nil
}

func (m *UsCoreMedicationrequest_DispenseRequest) GetPerformer() *Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

// Any restrictions on medication substitution
type UsCoreMedicationrequest_Substitution struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Whether substitution is allowed or not
	Allowed *Boolean `protobuf:"bytes,4,opt,name=allowed,proto3" json:"allowed,omitempty"`
	// Why should (not) substitution be made
	Reason               *CodeableConcept `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UsCoreMedicationrequest_Substitution) Reset()         { *m = UsCoreMedicationrequest_Substitution{} }
func (m *UsCoreMedicationrequest_Substitution) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedicationrequest_Substitution) ProtoMessage()    {}
func (*UsCoreMedicationrequest_Substitution) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{13, 3}
}

func (m *UsCoreMedicationrequest_Substitution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedicationrequest_Substitution.Unmarshal(m, b)
}
func (m *UsCoreMedicationrequest_Substitution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedicationrequest_Substitution.Marshal(b, m, deterministic)
}
func (m *UsCoreMedicationrequest_Substitution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedicationrequest_Substitution.Merge(m, src)
}
func (m *UsCoreMedicationrequest_Substitution) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedicationrequest_Substitution.Size(m)
}
func (m *UsCoreMedicationrequest_Substitution) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedicationrequest_Substitution.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedicationrequest_Substitution proto.InternalMessageInfo

func (m *UsCoreMedicationrequest_Substitution) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedicationrequest_Substitution) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedicationrequest_Substitution) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedicationrequest_Substitution) GetAllowed() *Boolean {
	if m != nil {
		return m.Allowed
	}
	return nil
}

func (m *UsCoreMedicationrequest_Substitution) GetReason() *CodeableConcept {
	if m != nil {
		return m.Reason
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core MedicationStatement
// Profile. US Core Medication Statement Profile. See
// http://hl7.org/fhir/us/core/StructureDefinition/us-core-medicationstatement
type UsCoreMedicationstatement struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External identifier
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfils plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Part of referenced event
	PartOf []*Reference `protobuf:"bytes,11,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// Encounter / Episode associated with MedicationStatement
	Context *Reference `protobuf:"bytes,12,opt,name=context,proto3" json:"context,omitempty"`
	// active | completed | entered-in-error | intended | stopped | on-hold
	Status *MedicationStatementStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// Type of medication usage
	Category   *CodeableConcept                      `protobuf:"bytes,14,opt,name=category,proto3" json:"category,omitempty"`
	Medication *UsCoreMedicationstatement_Medication `protobuf:"bytes,15,opt,name=medication,proto3" json:"medication,omitempty"`
	Effective  *UsCoreMedicationstatement_Effective  `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// When the statement was asserted?
	DateAsserted *DateTime `protobuf:"bytes,17,opt,name=date_asserted,json=dateAsserted,proto3" json:"date_asserted,omitempty"`
	// Person or organization that provided the information about the taking of
	// this medication
	InformationSource *Reference `protobuf:"bytes,18,opt,name=information_source,json=informationSource,proto3" json:"information_source,omitempty"`
	// Who is/was taking  the medication
	Subject *Reference `protobuf:"bytes,19,opt,name=subject,proto3" json:"subject,omitempty"`
	// Additional supporting information
	DerivedFrom []*Reference `protobuf:"bytes,20,rep,name=derived_from,json=derivedFrom,proto3" json:"derived_from,omitempty"`
	// y | n | unk | na
	Taken *MedicationStatementTakenCode `protobuf:"bytes,21,opt,name=taken,proto3" json:"taken,omitempty"`
	// True if asserting medication was not given
	ReasonNotTaken []*CodeableConcept `protobuf:"bytes,22,rep,name=reason_not_taken,json=reasonNotTaken,proto3" json:"reason_not_taken,omitempty"`
	// Reason for why the medication is being/was taken
	ReasonCode []*CodeableConcept `protobuf:"bytes,23,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Condition or observation that supports why the medication is being/was
	// taken
	ReasonReference []*Reference `protobuf:"bytes,24,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Further information about the statement
	Note []*Annotation `protobuf:"bytes,25,rep,name=note,proto3" json:"note,omitempty"`
	// Details of how medication is/was taken or should be taken
	Dosage               []*Dosage `protobuf:"bytes,26,rep,name=dosage,proto3" json:"dosage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UsCoreMedicationstatement) Reset()         { *m = UsCoreMedicationstatement{} }
func (m *UsCoreMedicationstatement) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedicationstatement) ProtoMessage()    {}
func (*UsCoreMedicationstatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{14}
}

func (m *UsCoreMedicationstatement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedicationstatement.Unmarshal(m, b)
}
func (m *UsCoreMedicationstatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedicationstatement.Marshal(b, m, deterministic)
}
func (m *UsCoreMedicationstatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedicationstatement.Merge(m, src)
}
func (m *UsCoreMedicationstatement) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedicationstatement.Size(m)
}
func (m *UsCoreMedicationstatement) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedicationstatement.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedicationstatement proto.InternalMessageInfo

func (m *UsCoreMedicationstatement) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetStatus() *MedicationStatementStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetMedication() *UsCoreMedicationstatement_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetEffective() *UsCoreMedicationstatement_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetDateAsserted() *DateTime {
	if m != nil {
		return m.DateAsserted
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetInformationSource() *Reference {
	if m != nil {
		return m.InformationSource
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetDerivedFrom() []*Reference {
	if m != nil {
		return m.DerivedFrom
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetTaken() *MedicationStatementTakenCode {
	if m != nil {
		return m.Taken
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetReasonNotTaken() []*CodeableConcept {
	if m != nil {
		return m.ReasonNotTaken
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *UsCoreMedicationstatement) GetDosage() []*Dosage {
	if m != nil {
		return m.Dosage
	}
	return nil
}

// What medication was taken
type UsCoreMedicationstatement_Medication struct {
	// Types that are valid to be assigned to Medication:
	//	*UsCoreMedicationstatement_Medication_CodeableConcept
	//	*UsCoreMedicationstatement_Medication_Reference
	Medication           isUsCoreMedicationstatement_Medication_Medication `protobuf_oneof:"medication"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *UsCoreMedicationstatement_Medication) Reset()         { *m = UsCoreMedicationstatement_Medication{} }
func (m *UsCoreMedicationstatement_Medication) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedicationstatement_Medication) ProtoMessage()    {}
func (*UsCoreMedicationstatement_Medication) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{14, 0}
}

func (m *UsCoreMedicationstatement_Medication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedicationstatement_Medication.Unmarshal(m, b)
}
func (m *UsCoreMedicationstatement_Medication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedicationstatement_Medication.Marshal(b, m, deterministic)
}
func (m *UsCoreMedicationstatement_Medication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedicationstatement_Medication.Merge(m, src)
}
func (m *UsCoreMedicationstatement_Medication) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedicationstatement_Medication.Size(m)
}
func (m *UsCoreMedicationstatement_Medication) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedicationstatement_Medication.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedicationstatement_Medication proto.InternalMessageInfo

type isUsCoreMedicationstatement_Medication_Medication interface {
	isUsCoreMedicationstatement_Medication_Medication()
}

type UsCoreMedicationstatement_Medication_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type UsCoreMedicationstatement_Medication_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*UsCoreMedicationstatement_Medication_CodeableConcept) isUsCoreMedicationstatement_Medication_Medication() {
}

func (*UsCoreMedicationstatement_Medication_Reference) isUsCoreMedicationstatement_Medication_Medication() {
}

func (m *UsCoreMedicationstatement_Medication) GetMedication() isUsCoreMedicationstatement_Medication_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (m *UsCoreMedicationstatement_Medication) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetMedication().(*UsCoreMedicationstatement_Medication_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *UsCoreMedicationstatement_Medication) GetReference() *Reference {
	if x, ok := m.GetMedication().(*UsCoreMedicationstatement_Medication_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreMedicationstatement_Medication) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreMedicationstatement_Medication_OneofMarshaler, _UsCoreMedicationstatement_Medication_OneofUnmarshaler, _UsCoreMedicationstatement_Medication_OneofSizer, []interface{}{
		(*UsCoreMedicationstatement_Medication_CodeableConcept)(nil),
		(*UsCoreMedicationstatement_Medication_Reference)(nil),
	}
}

func _UsCoreMedicationstatement_Medication_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreMedicationstatement_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *UsCoreMedicationstatement_Medication_CodeableConcept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *UsCoreMedicationstatement_Medication_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreMedicationstatement_Medication.Medication has unexpected type %T", x)
	}
	return nil
}

func _UsCoreMedicationstatement_Medication_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreMedicationstatement_Medication)
	switch tag {
	case 1: // medication.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Medication = &UsCoreMedicationstatement_Medication_CodeableConcept{msg}
		return true, err
	case 2: // medication.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Medication = &UsCoreMedicationstatement_Medication_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreMedicationstatement_Medication_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreMedicationstatement_Medication)
	// medication
	switch x := m.Medication.(type) {
	case *UsCoreMedicationstatement_Medication_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreMedicationstatement_Medication_Reference:
		s := proto.Size(x.Reference)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The date/time or interval when the medication was taken
type UsCoreMedicationstatement_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*UsCoreMedicationstatement_Effective_DateTime
	//	*UsCoreMedicationstatement_Effective_Period
	Effective            isUsCoreMedicationstatement_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *UsCoreMedicationstatement_Effective) Reset()         { *m = UsCoreMedicationstatement_Effective{} }
func (m *UsCoreMedicationstatement_Effective) String() string { return proto.CompactTextString(m) }
func (*UsCoreMedicationstatement_Effective) ProtoMessage()    {}
func (*UsCoreMedicationstatement_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{14, 1}
}

func (m *UsCoreMedicationstatement_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreMedicationstatement_Effective.Unmarshal(m, b)
}
func (m *UsCoreMedicationstatement_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreMedicationstatement_Effective.Marshal(b, m, deterministic)
}
func (m *UsCoreMedicationstatement_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreMedicationstatement_Effective.Merge(m, src)
}
func (m *UsCoreMedicationstatement_Effective) XXX_Size() int {
	return xxx_messageInfo_UsCoreMedicationstatement_Effective.Size(m)
}
func (m *UsCoreMedicationstatement_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreMedicationstatement_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreMedicationstatement_Effective proto.InternalMessageInfo

type isUsCoreMedicationstatement_Effective_Effective interface {
	isUsCoreMedicationstatement_Effective_Effective()
}

type UsCoreMedicationstatement_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreMedicationstatement_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*UsCoreMedicationstatement_Effective_DateTime) isUsCoreMedicationstatement_Effective_Effective() {
}

func (*UsCoreMedicationstatement_Effective_Period) isUsCoreMedicationstatement_Effective_Effective() {}

func (m *UsCoreMedicationstatement_Effective) GetEffective() isUsCoreMedicationstatement_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *UsCoreMedicationstatement_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*UsCoreMedicationstatement_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreMedicationstatement_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*UsCoreMedicationstatement_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreMedicationstatement_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreMedicationstatement_Effective_OneofMarshaler, _UsCoreMedicationstatement_Effective_OneofUnmarshaler, _UsCoreMedicationstatement_Effective_OneofSizer, []interface{}{
		(*UsCoreMedicationstatement_Effective_DateTime)(nil),
		(*UsCoreMedicationstatement_Effective_Period)(nil),
	}
}

func _UsCoreMedicationstatement_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreMedicationstatement_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *UsCoreMedicationstatement_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreMedicationstatement_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreMedicationstatement_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _UsCoreMedicationstatement_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreMedicationstatement_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &UsCoreMedicationstatement_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &UsCoreMedicationstatement_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreMedicationstatement_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreMedicationstatement_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *UsCoreMedicationstatement_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreMedicationstatement_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for US  Core Results Profile.
// US Core Result Observation.
// See
// http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults
type UsCoreObservationresults struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Laboratory Test Name
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference                          `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *UsCoreObservationresults_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference                    `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *UsCoreObservationresults_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                                 `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*UsCoreObservationresults_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*UsCoreObservationresults_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*UsCoreObservationresults_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *UsCoreObservationresults) Reset()         { *m = UsCoreObservationresults{} }
func (m *UsCoreObservationresults) String() string { return proto.CompactTextString(m) }
func (*UsCoreObservationresults) ProtoMessage()    {}
func (*UsCoreObservationresults) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{15}
}

func (m *UsCoreObservationresults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreObservationresults.Unmarshal(m, b)
}
func (m *UsCoreObservationresults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreObservationresults.Marshal(b, m, deterministic)
}
func (m *UsCoreObservationresults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreObservationresults.Merge(m, src)
}
func (m *UsCoreObservationresults) XXX_Size() int {
	return xxx_messageInfo_UsCoreObservationresults.Size(m)
}
func (m *UsCoreObservationresults) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreObservationresults.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreObservationresults proto.InternalMessageInfo

func (m *UsCoreObservationresults) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreObservationresults) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreObservationresults) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreObservationresults) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreObservationresults) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreObservationresults) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreObservationresults) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreObservationresults) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreObservationresults) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreObservationresults) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *UsCoreObservationresults) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreObservationresults) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreObservationresults) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreObservationresults) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreObservationresults) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UsCoreObservationresults) GetEffective() *UsCoreObservationresults_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *UsCoreObservationresults) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *UsCoreObservationresults) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *UsCoreObservationresults) GetValue() *UsCoreObservationresults_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *UsCoreObservationresults) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *UsCoreObservationresults) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *UsCoreObservationresults) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *UsCoreObservationresults) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *UsCoreObservationresults) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *UsCoreObservationresults) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *UsCoreObservationresults) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *UsCoreObservationresults) GetReferenceRange() []*UsCoreObservationresults_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *UsCoreObservationresults) GetRelated() []*UsCoreObservationresults_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *UsCoreObservationresults) GetComponent() []*UsCoreObservationresults_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Clinically relevant time/time-period for observation
type UsCoreObservationresults_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*UsCoreObservationresults_Effective_DateTime
	//	*UsCoreObservationresults_Effective_Period
	Effective            isUsCoreObservationresults_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *UsCoreObservationresults_Effective) Reset()         { *m = UsCoreObservationresults_Effective{} }
func (m *UsCoreObservationresults_Effective) String() string { return proto.CompactTextString(m) }
func (*UsCoreObservationresults_Effective) ProtoMessage()    {}
func (*UsCoreObservationresults_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{15, 0}
}

func (m *UsCoreObservationresults_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreObservationresults_Effective.Unmarshal(m, b)
}
func (m *UsCoreObservationresults_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreObservationresults_Effective.Marshal(b, m, deterministic)
}
func (m *UsCoreObservationresults_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreObservationresults_Effective.Merge(m, src)
}
func (m *UsCoreObservationresults_Effective) XXX_Size() int {
	return xxx_messageInfo_UsCoreObservationresults_Effective.Size(m)
}
func (m *UsCoreObservationresults_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreObservationresults_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreObservationresults_Effective proto.InternalMessageInfo

type isUsCoreObservationresults_Effective_Effective interface {
	isUsCoreObservationresults_Effective_Effective()
}

type UsCoreObservationresults_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreObservationresults_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*UsCoreObservationresults_Effective_DateTime) isUsCoreObservationresults_Effective_Effective() {}

func (*UsCoreObservationresults_Effective_Period) isUsCoreObservationresults_Effective_Effective() {}

func (m *UsCoreObservationresults_Effective) GetEffective() isUsCoreObservationresults_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *UsCoreObservationresults_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*UsCoreObservationresults_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreObservationresults_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*UsCoreObservationresults_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreObservationresults_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreObservationresults_Effective_OneofMarshaler, _UsCoreObservationresults_Effective_OneofUnmarshaler, _UsCoreObservationresults_Effective_OneofSizer, []interface{}{
		(*UsCoreObservationresults_Effective_DateTime)(nil),
		(*UsCoreObservationresults_Effective_Period)(nil),
	}
}

func _UsCoreObservationresults_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreObservationresults_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *UsCoreObservationresults_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreObservationresults_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreObservationresults_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _UsCoreObservationresults_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreObservationresults_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &UsCoreObservationresults_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &UsCoreObservationresults_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreObservationresults_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreObservationresults_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *UsCoreObservationresults_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Result Value
type UsCoreObservationresults_Value struct {
	// Types that are valid to be assigned to Value:
	//	*UsCoreObservationresults_Value_Quantity
	//	*UsCoreObservationresults_Value_CodeableConcept
	//	*UsCoreObservationresults_Value_StringValue
	//	*UsCoreObservationresults_Value_Boolean
	//	*UsCoreObservationresults_Value_Range
	//	*UsCoreObservationresults_Value_Ratio
	//	*UsCoreObservationresults_Value_SampledData
	//	*UsCoreObservationresults_Value_Attachment
	//	*UsCoreObservationresults_Value_Time
	//	*UsCoreObservationresults_Value_DateTime
	//	*UsCoreObservationresults_Value_Period
	Value                isUsCoreObservationresults_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *UsCoreObservationresults_Value) Reset()         { *m = UsCoreObservationresults_Value{} }
func (m *UsCoreObservationresults_Value) String() string { return proto.CompactTextString(m) }
func (*UsCoreObservationresults_Value) ProtoMessage()    {}
func (*UsCoreObservationresults_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{15, 1}
}

func (m *UsCoreObservationresults_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreObservationresults_Value.Unmarshal(m, b)
}
func (m *UsCoreObservationresults_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreObservationresults_Value.Marshal(b, m, deterministic)
}
func (m *UsCoreObservationresults_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreObservationresults_Value.Merge(m, src)
}
func (m *UsCoreObservationresults_Value) XXX_Size() int {
	return xxx_messageInfo_UsCoreObservationresults_Value.Size(m)
}
func (m *UsCoreObservationresults_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreObservationresults_Value.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreObservationresults_Value proto.InternalMessageInfo

type isUsCoreObservationresults_Value_Value interface {
	isUsCoreObservationresults_Value_Value()
}

type UsCoreObservationresults_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type UsCoreObservationresults_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type UsCoreObservationresults_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type UsCoreObservationresults_Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,4,opt,name=boolean,proto3,oneof"`
}

type UsCoreObservationresults_Value_Range struct {
	Range *Range `protobuf:"bytes,5,opt,name=range,proto3,oneof"`
}

type UsCoreObservationresults_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,6,opt,name=ratio,proto3,oneof"`
}

type UsCoreObservationresults_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,7,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type UsCoreObservationresults_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,8,opt,name=attachment,proto3,oneof"`
}

type UsCoreObservationresults_Value_Time struct {
	Time *Time `protobuf:"bytes,9,opt,name=time,proto3,oneof"`
}

type UsCoreObservationresults_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,10,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreObservationresults_Value_Period struct {
	Period *Period `protobuf:"bytes,11,opt,name=period,proto3,oneof"`
}

func (*UsCoreObservationresults_Value_Quantity) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_CodeableConcept) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_StringValue) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_Boolean) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_Range) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_Ratio) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_SampledData) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_Attachment) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_Time) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_DateTime) isUsCoreObservationresults_Value_Value() {}

func (*UsCoreObservationresults_Value_Period) isUsCoreObservationresults_Value_Value() {}

func (m *UsCoreObservationresults_Value) GetValue() isUsCoreObservationresults_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetBoolean() *Boolean {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreObservationresults_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreObservationresults_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreObservationresults_Value_OneofMarshaler, _UsCoreObservationresults_Value_OneofUnmarshaler, _UsCoreObservationresults_Value_OneofSizer, []interface{}{
		(*UsCoreObservationresults_Value_Quantity)(nil),
		(*UsCoreObservationresults_Value_CodeableConcept)(nil),
		(*UsCoreObservationresults_Value_StringValue)(nil),
		(*UsCoreObservationresults_Value_Boolean)(nil),
		(*UsCoreObservationresults_Value_Range)(nil),
		(*UsCoreObservationresults_Value_Ratio)(nil),
		(*UsCoreObservationresults_Value_SampledData)(nil),
		(*UsCoreObservationresults_Value_Attachment)(nil),
		(*UsCoreObservationresults_Value_Time)(nil),
		(*UsCoreObservationresults_Value_DateTime)(nil),
		(*UsCoreObservationresults_Value_Period)(nil),
	}
}

func _UsCoreObservationresults_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreObservationresults_Value)
	// value
	switch x := m.Value.(type) {
	case *UsCoreObservationresults_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_Boolean:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_Range:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_Ratio:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_SampledData:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_Attachment:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_Time:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_DateTime:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreObservationresults_Value_Period:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreObservationresults_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _UsCoreObservationresults_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreObservationresults_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_StringValue{msg}
		return true, err
	case 4: // value.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_Boolean{msg}
		return true, err
	case 5: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_Range{msg}
		return true, err
	case 6: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_Ratio{msg}
		return true, err
	case 7: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_SampledData{msg}
		return true, err
	case 8: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_Attachment{msg}
		return true, err
	case 9: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_Time{msg}
		return true, err
	case 10: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_DateTime{msg}
		return true, err
	case 11: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreObservationresults_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreObservationresults_Value)
	// value
	switch x := m.Value.(type) {
	case *UsCoreObservationresults_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type UsCoreObservationresults_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCoreObservationresults_ReferenceRange) Reset() {
	*m = UsCoreObservationresults_ReferenceRange{}
}
func (m *UsCoreObservationresults_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*UsCoreObservationresults_ReferenceRange) ProtoMessage()    {}
func (*UsCoreObservationresults_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{15, 2}
}

func (m *UsCoreObservationresults_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreObservationresults_ReferenceRange.Unmarshal(m, b)
}
func (m *UsCoreObservationresults_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreObservationresults_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *UsCoreObservationresults_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreObservationresults_ReferenceRange.Merge(m, src)
}
func (m *UsCoreObservationresults_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_UsCoreObservationresults_ReferenceRange.Size(m)
}
func (m *UsCoreObservationresults_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreObservationresults_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreObservationresults_ReferenceRange proto.InternalMessageInfo

func (m *UsCoreObservationresults_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreObservationresults_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreObservationresults_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreObservationresults_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *UsCoreObservationresults_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *UsCoreObservationresults_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UsCoreObservationresults_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *UsCoreObservationresults_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *UsCoreObservationresults_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Resource related to this observation
type UsCoreObservationresults_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCoreObservationresults_Related) Reset()         { *m = UsCoreObservationresults_Related{} }
func (m *UsCoreObservationresults_Related) String() string { return proto.CompactTextString(m) }
func (*UsCoreObservationresults_Related) ProtoMessage()    {}
func (*UsCoreObservationresults_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{15, 3}
}

func (m *UsCoreObservationresults_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreObservationresults_Related.Unmarshal(m, b)
}
func (m *UsCoreObservationresults_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreObservationresults_Related.Marshal(b, m, deterministic)
}
func (m *UsCoreObservationresults_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreObservationresults_Related.Merge(m, src)
}
func (m *UsCoreObservationresults_Related) XXX_Size() int {
	return xxx_messageInfo_UsCoreObservationresults_Related.Size(m)
}
func (m *UsCoreObservationresults_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreObservationresults_Related.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreObservationresults_Related proto.InternalMessageInfo

func (m *UsCoreObservationresults_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreObservationresults_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreObservationresults_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreObservationresults_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UsCoreObservationresults_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Component results
type UsCoreObservationresults_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept                          `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *UsCoreObservationresults_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*UsCoreObservationresults_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *UsCoreObservationresults_Component) Reset()         { *m = UsCoreObservationresults_Component{} }
func (m *UsCoreObservationresults_Component) String() string { return proto.CompactTextString(m) }
func (*UsCoreObservationresults_Component) ProtoMessage()    {}
func (*UsCoreObservationresults_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{15, 4}
}

func (m *UsCoreObservationresults_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreObservationresults_Component.Unmarshal(m, b)
}
func (m *UsCoreObservationresults_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreObservationresults_Component.Marshal(b, m, deterministic)
}
func (m *UsCoreObservationresults_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreObservationresults_Component.Merge(m, src)
}
func (m *UsCoreObservationresults_Component) XXX_Size() int {
	return xxx_messageInfo_UsCoreObservationresults_Component.Size(m)
}
func (m *UsCoreObservationresults_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreObservationresults_Component.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreObservationresults_Component proto.InternalMessageInfo

func (m *UsCoreObservationresults_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreObservationresults_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreObservationresults_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreObservationresults_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreObservationresults_Component) GetValue() *UsCoreObservationresults_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *UsCoreObservationresults_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *UsCoreObservationresults_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *UsCoreObservationresults_Component) GetReferenceRange() []*UsCoreObservationresults_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Actual component result
type UsCoreObservationresults_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*UsCoreObservationresults_Component_Value_Quantity
	//	*UsCoreObservationresults_Component_Value_CodeableConcept
	//	*UsCoreObservationresults_Component_Value_StringValue
	//	*UsCoreObservationresults_Component_Value_Range
	//	*UsCoreObservationresults_Component_Value_Ratio
	//	*UsCoreObservationresults_Component_Value_SampledData
	//	*UsCoreObservationresults_Component_Value_Attachment
	//	*UsCoreObservationresults_Component_Value_Time
	//	*UsCoreObservationresults_Component_Value_DateTime
	//	*UsCoreObservationresults_Component_Value_Period
	Value                isUsCoreObservationresults_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *UsCoreObservationresults_Component_Value) Reset() {
	*m = UsCoreObservationresults_Component_Value{}
}
func (m *UsCoreObservationresults_Component_Value) String() string { return proto.CompactTextString(m) }
func (*UsCoreObservationresults_Component_Value) ProtoMessage()    {}
func (*UsCoreObservationresults_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{15, 4, 0}
}

func (m *UsCoreObservationresults_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreObservationresults_Component_Value.Unmarshal(m, b)
}
func (m *UsCoreObservationresults_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreObservationresults_Component_Value.Marshal(b, m, deterministic)
}
func (m *UsCoreObservationresults_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreObservationresults_Component_Value.Merge(m, src)
}
func (m *UsCoreObservationresults_Component_Value) XXX_Size() int {
	return xxx_messageInfo_UsCoreObservationresults_Component_Value.Size(m)
}
func (m *UsCoreObservationresults_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreObservationresults_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreObservationresults_Component_Value proto.InternalMessageInfo

type isUsCoreObservationresults_Component_Value_Value interface {
	isUsCoreObservationresults_Component_Value_Value()
}

type UsCoreObservationresults_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type UsCoreObservationresults_Component_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type UsCoreObservationresults_Component_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type UsCoreObservationresults_Component_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type UsCoreObservationresults_Component_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,5,opt,name=ratio,proto3,oneof"`
}

type UsCoreObservationresults_Component_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,6,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type UsCoreObservationresults_Component_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,7,opt,name=attachment,proto3,oneof"`
}

type UsCoreObservationresults_Component_Value_Time struct {
	Time *Time `protobuf:"bytes,8,opt,name=time,proto3,oneof"`
}

type UsCoreObservationresults_Component_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,9,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreObservationresults_Component_Value_Period struct {
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3,oneof"`
}

func (*UsCoreObservationresults_Component_Value_Quantity) isUsCoreObservationresults_Component_Value_Value() {
}

func (*UsCoreObservationresults_Component_Value_CodeableConcept) isUsCoreObservationresults_Component_Value_Value() {
}

func (*UsCoreObservationresults_Component_Value_StringValue) isUsCoreObservationresults_Component_Value_Value() {
}

func (*UsCoreObservationresults_Component_Value_Range) isUsCoreObservationresults_Component_Value_Value() {
}

func (*UsCoreObservationresults_Component_Value_Ratio) isUsCoreObservationresults_Component_Value_Value() {
}

func (*UsCoreObservationresults_Component_Value_SampledData) isUsCoreObservationresults_Component_Value_Value() {
}

func (*UsCoreObservationresults_Component_Value_Attachment) isUsCoreObservationresults_Component_Value_Value() {
}

func (*UsCoreObservationresults_Component_Value_Time) isUsCoreObservationresults_Component_Value_Value() {
}

func (*UsCoreObservationresults_Component_Value_DateTime) isUsCoreObservationresults_Component_Value_Value() {
}

func (*UsCoreObservationresults_Component_Value_Period) isUsCoreObservationresults_Component_Value_Value() {
}

func (m *UsCoreObservationresults_Component_Value) GetValue() isUsCoreObservationresults_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreObservationresults_Component_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*UsCoreObservationresults_Component_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreObservationresults_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreObservationresults_Component_Value_OneofMarshaler, _UsCoreObservationresults_Component_Value_OneofUnmarshaler, _UsCoreObservationresults_Component_Value_OneofSizer, []interface{}{
		(*UsCoreObservationresults_Component_Value_Quantity)(nil),
		(*UsCoreObservationresults_Component_Value_CodeableConcept)(nil),
		(*UsCoreObservationresults_Component_Value_StringValue)(nil),
		(*UsCoreObservationresults_Component_Value_Range)(nil),
		(*UsCoreObservationresults_Component_Value_Ratio)(nil),
		(*UsCoreObservationresults_Component_Value_SampledData)(nil),
		(*UsCoreObservationresults_Component_Value_Attachment)(nil),
		(*UsCoreObservationresults_Component_Value_Time)(nil),
		(*UsCoreObservationresults_Component_Value_DateTime)(nil),
		(*UsCoreObservationresults_Component_Value_Period)(nil),
	}
}

func _UsCoreObservationresults_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreObservationresults_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *UsCoreObservationresults_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *UsCoreObservationresults_Component_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *UsCoreObservationresults_Component_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *UsCoreObservationresults_Component_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *UsCoreObservationresults_Component_Value_Ratio:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *UsCoreObservationresults_Component_Value_SampledData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *UsCoreObservationresults_Component_Value_Attachment:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *UsCoreObservationresults_Component_Value_Time:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *UsCoreObservationresults_Component_Value_DateTime:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreObservationresults_Component_Value_Period:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreObservationresults_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _UsCoreObservationresults_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreObservationresults_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_StringValue{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_Range{msg}
		return true, err
	case 5: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_Ratio{msg}
		return true, err
	case 6: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_SampledData{msg}
		return true, err
	case 7: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_Attachment{msg}
		return true, err
	case 8: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_Time{msg}
		return true, err
	case 9: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_DateTime{msg}
		return true, err
	case 10: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreObservationresults_Component_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreObservationresults_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreObservationresults_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *UsCoreObservationresults_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Component_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Component_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Component_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Component_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Component_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Component_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Component_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Component_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreObservationresults_Component_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Auto-generated from StructureDefinition for US Core Organization Profile.
// US Core Organization Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization
type UsCoreOrganization struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Identifies this organization  across multiple systems
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether the organization's record is still in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// Kind of organization
	Type []*CodeableConcept `protobuf:"bytes,11,rep,name=type,proto3" json:"type,omitempty"`
	// Name used for the organization
	Name *String `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// A list of alternate names that the organization is known as, or was known
	// as in the past
	Alias []*String `protobuf:"bytes,13,rep,name=alias,proto3" json:"alias,omitempty"`
	// A contact detail for the organization
	Telecom []*ContactPoint `protobuf:"bytes,14,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// An address for the organization
	Address []*Address `protobuf:"bytes,15,rep,name=address,proto3" json:"address,omitempty"`
	// The organization of which this organization forms a part
	PartOf  *Reference                    `protobuf:"bytes,16,opt,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	Contact []*UsCoreOrganization_Contact `protobuf:"bytes,17,rep,name=contact,proto3" json:"contact,omitempty"`
	// Technical endpoints providing access to services operated for the
	// organization
	Endpoint             []*Reference `protobuf:"bytes,18,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UsCoreOrganization) Reset()         { *m = UsCoreOrganization{} }
func (m *UsCoreOrganization) String() string { return proto.CompactTextString(m) }
func (*UsCoreOrganization) ProtoMessage()    {}
func (*UsCoreOrganization) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{16}
}

func (m *UsCoreOrganization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreOrganization.Unmarshal(m, b)
}
func (m *UsCoreOrganization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreOrganization.Marshal(b, m, deterministic)
}
func (m *UsCoreOrganization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreOrganization.Merge(m, src)
}
func (m *UsCoreOrganization) XXX_Size() int {
	return xxx_messageInfo_UsCoreOrganization.Size(m)
}
func (m *UsCoreOrganization) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreOrganization.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreOrganization proto.InternalMessageInfo

func (m *UsCoreOrganization) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreOrganization) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreOrganization) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreOrganization) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreOrganization) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreOrganization) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreOrganization) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreOrganization) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreOrganization) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreOrganization) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *UsCoreOrganization) GetType() []*CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UsCoreOrganization) GetName() *String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UsCoreOrganization) GetAlias() []*String {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *UsCoreOrganization) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *UsCoreOrganization) GetAddress() []*Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UsCoreOrganization) GetPartOf() *Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *UsCoreOrganization) GetContact() []*UsCoreOrganization_Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *UsCoreOrganization) GetEndpoint() []*Reference {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

// Contact for the organization for a certain purpose
type UsCoreOrganization_Contact struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The type of contact
	Purpose *CodeableConcept `protobuf:"bytes,4,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// A name associated with the contact
	Name *HumanName `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Contact details (telephone, email, etc.)  for a contact
	Telecom []*ContactPoint `protobuf:"bytes,6,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// Visiting or postal addresses for the contact
	Address              *Address `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCoreOrganization_Contact) Reset()         { *m = UsCoreOrganization_Contact{} }
func (m *UsCoreOrganization_Contact) String() string { return proto.CompactTextString(m) }
func (*UsCoreOrganization_Contact) ProtoMessage()    {}
func (*UsCoreOrganization_Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{16, 0}
}

func (m *UsCoreOrganization_Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreOrganization_Contact.Unmarshal(m, b)
}
func (m *UsCoreOrganization_Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreOrganization_Contact.Marshal(b, m, deterministic)
}
func (m *UsCoreOrganization_Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreOrganization_Contact.Merge(m, src)
}
func (m *UsCoreOrganization_Contact) XXX_Size() int {
	return xxx_messageInfo_UsCoreOrganization_Contact.Size(m)
}
func (m *UsCoreOrganization_Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreOrganization_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreOrganization_Contact proto.InternalMessageInfo

func (m *UsCoreOrganization_Contact) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreOrganization_Contact) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreOrganization_Contact) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreOrganization_Contact) GetPurpose() *CodeableConcept {
	if m != nil {
		return m.Purpose
	}
	return nil
}

func (m *UsCoreOrganization_Contact) GetName() *HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UsCoreOrganization_Contact) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *UsCoreOrganization_Contact) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

// Auto-generated from StructureDefinition for US Core Patient Profile.
// US Core Patient Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient
type UsCorePatient struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Extension
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// An identifier for this patient
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this patient's record is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// A name associated with the patient
	Name []*HumanName `protobuf:"bytes,11,rep,name=name,proto3" json:"name,omitempty"`
	// A contact detail for the individual
	Telecom []*ContactPoint `protobuf:"bytes,12,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode `protobuf:"bytes,13,opt,name=gender,proto3" json:"gender,omitempty"`
	// The date of birth for the individual
	BirthDate *Date                   `protobuf:"bytes,14,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	Deceased  *UsCorePatient_Deceased `protobuf:"bytes,15,opt,name=deceased,proto3" json:"deceased,omitempty"`
	// Addresses for the individual
	Address []*Address `protobuf:"bytes,16,rep,name=address,proto3" json:"address,omitempty"`
	// Marital (civil) status of a patient
	MaritalStatus *CodeableConcept             `protobuf:"bytes,17,opt,name=marital_status,json=maritalStatus,proto3" json:"marital_status,omitempty"`
	MultipleBirth *UsCorePatient_MultipleBirth `protobuf:"bytes,18,opt,name=multiple_birth,json=multipleBirth,proto3" json:"multiple_birth,omitempty"`
	// Image of the patient
	Photo         []*Attachment                  `protobuf:"bytes,19,rep,name=photo,proto3" json:"photo,omitempty"`
	Contact       []*UsCorePatient_Contact       `protobuf:"bytes,20,rep,name=contact,proto3" json:"contact,omitempty"`
	Communication []*UsCorePatient_Communication `protobuf:"bytes,22,rep,name=communication,proto3" json:"communication,omitempty"`
	// Patient's nominated primary care provider
	GeneralPractitioner []*Reference `protobuf:"bytes,23,rep,name=general_practitioner,json=generalPractitioner,proto3" json:"general_practitioner,omitempty"`
	// Organization that is the custodian of the patient record
	ManagingOrganization *Reference            `protobuf:"bytes,24,opt,name=managing_organization,json=managingOrganization,proto3" json:"managing_organization,omitempty"`
	Link                 []*UsCorePatient_Link `protobuf:"bytes,25,rep,name=link,proto3" json:"link,omitempty"`
	// Extension
	Race *PatientUSCoreRaceExtension `protobuf:"bytes,26,opt,name=race,proto3" json:"race,omitempty"`
	// Extension
	Ethnicity *PatientUSCoreEthnicityExtension `protobuf:"bytes,27,opt,name=ethnicity,proto3" json:"ethnicity,omitempty"`
	// Extension
	Birthsex             *UsCoreBirthSexCode `protobuf:"bytes,28,opt,name=birthsex,proto3" json:"birthsex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UsCorePatient) Reset()         { *m = UsCorePatient{} }
func (m *UsCorePatient) String() string { return proto.CompactTextString(m) }
func (*UsCorePatient) ProtoMessage()    {}
func (*UsCorePatient) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{17}
}

func (m *UsCorePatient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCorePatient.Unmarshal(m, b)
}
func (m *UsCorePatient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCorePatient.Marshal(b, m, deterministic)
}
func (m *UsCorePatient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCorePatient.Merge(m, src)
}
func (m *UsCorePatient) XXX_Size() int {
	return xxx_messageInfo_UsCorePatient.Size(m)
}
func (m *UsCorePatient) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCorePatient.DiscardUnknown(m)
}

var xxx_messageInfo_UsCorePatient proto.InternalMessageInfo

func (m *UsCorePatient) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCorePatient) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCorePatient) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCorePatient) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCorePatient) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCorePatient) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCorePatient) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCorePatient) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCorePatient) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCorePatient) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *UsCorePatient) GetName() []*HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UsCorePatient) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *UsCorePatient) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *UsCorePatient) GetBirthDate() *Date {
	if m != nil {
		return m.BirthDate
	}
	return nil
}

func (m *UsCorePatient) GetDeceased() *UsCorePatient_Deceased {
	if m != nil {
		return m.Deceased
	}
	return nil
}

func (m *UsCorePatient) GetAddress() []*Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UsCorePatient) GetMaritalStatus() *CodeableConcept {
	if m != nil {
		return m.MaritalStatus
	}
	return nil
}

func (m *UsCorePatient) GetMultipleBirth() *UsCorePatient_MultipleBirth {
	if m != nil {
		return m.MultipleBirth
	}
	return nil
}

func (m *UsCorePatient) GetPhoto() []*Attachment {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *UsCorePatient) GetContact() []*UsCorePatient_Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *UsCorePatient) GetCommunication() []*UsCorePatient_Communication {
	if m != nil {
		return m.Communication
	}
	return nil
}

func (m *UsCorePatient) GetGeneralPractitioner() []*Reference {
	if m != nil {
		return m.GeneralPractitioner
	}
	return nil
}

func (m *UsCorePatient) GetManagingOrganization() *Reference {
	if m != nil {
		return m.ManagingOrganization
	}
	return nil
}

func (m *UsCorePatient) GetLink() []*UsCorePatient_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *UsCorePatient) GetRace() *PatientUSCoreRaceExtension {
	if m != nil {
		return m.Race
	}
	return nil
}

func (m *UsCorePatient) GetEthnicity() *PatientUSCoreEthnicityExtension {
	if m != nil {
		return m.Ethnicity
	}
	return nil
}

func (m *UsCorePatient) GetBirthsex() *UsCoreBirthSexCode {
	if m != nil {
		return m.Birthsex
	}
	return nil
}

// Indicates if the individual is deceased or not
type UsCorePatient_Deceased struct {
	// Types that are valid to be assigned to Deceased:
	//	*UsCorePatient_Deceased_Boolean
	//	*UsCorePatient_Deceased_DateTime
	Deceased             isUsCorePatient_Deceased_Deceased `protobuf_oneof:"deceased"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *UsCorePatient_Deceased) Reset()         { *m = UsCorePatient_Deceased{} }
func (m *UsCorePatient_Deceased) String() string { return proto.CompactTextString(m) }
func (*UsCorePatient_Deceased) ProtoMessage()    {}
func (*UsCorePatient_Deceased) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{17, 0}
}

func (m *UsCorePatient_Deceased) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCorePatient_Deceased.Unmarshal(m, b)
}
func (m *UsCorePatient_Deceased) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCorePatient_Deceased.Marshal(b, m, deterministic)
}
func (m *UsCorePatient_Deceased) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCorePatient_Deceased.Merge(m, src)
}
func (m *UsCorePatient_Deceased) XXX_Size() int {
	return xxx_messageInfo_UsCorePatient_Deceased.Size(m)
}
func (m *UsCorePatient_Deceased) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCorePatient_Deceased.DiscardUnknown(m)
}

var xxx_messageInfo_UsCorePatient_Deceased proto.InternalMessageInfo

type isUsCorePatient_Deceased_Deceased interface {
	isUsCorePatient_Deceased_Deceased()
}

type UsCorePatient_Deceased_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type UsCorePatient_Deceased_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3,oneof"`
}

func (*UsCorePatient_Deceased_Boolean) isUsCorePatient_Deceased_Deceased() {}

func (*UsCorePatient_Deceased_DateTime) isUsCorePatient_Deceased_Deceased() {}

func (m *UsCorePatient_Deceased) GetDeceased() isUsCorePatient_Deceased_Deceased {
	if m != nil {
		return m.Deceased
	}
	return nil
}

func (m *UsCorePatient_Deceased) GetBoolean() *Boolean {
	if x, ok := m.GetDeceased().(*UsCorePatient_Deceased_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *UsCorePatient_Deceased) GetDateTime() *DateTime {
	if x, ok := m.GetDeceased().(*UsCorePatient_Deceased_DateTime); ok {
		return x.DateTime
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCorePatient_Deceased) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCorePatient_Deceased_OneofMarshaler, _UsCorePatient_Deceased_OneofUnmarshaler, _UsCorePatient_Deceased_OneofSizer, []interface{}{
		(*UsCorePatient_Deceased_Boolean)(nil),
		(*UsCorePatient_Deceased_DateTime)(nil),
	}
}

func _UsCorePatient_Deceased_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCorePatient_Deceased)
	// deceased
	switch x := m.Deceased.(type) {
	case *UsCorePatient_Deceased_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *UsCorePatient_Deceased_DateTime:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCorePatient_Deceased.Deceased has unexpected type %T", x)
	}
	return nil
}

func _UsCorePatient_Deceased_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCorePatient_Deceased)
	switch tag {
	case 1: // deceased.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.Deceased = &UsCorePatient_Deceased_Boolean{msg}
		return true, err
	case 2: // deceased.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Deceased = &UsCorePatient_Deceased_DateTime{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCorePatient_Deceased_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCorePatient_Deceased)
	// deceased
	switch x := m.Deceased.(type) {
	case *UsCorePatient_Deceased_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCorePatient_Deceased_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Whether patient is part of a multiple birth
type UsCorePatient_MultipleBirth struct {
	// Types that are valid to be assigned to MultipleBirth:
	//	*UsCorePatient_MultipleBirth_Boolean
	//	*UsCorePatient_MultipleBirth_Integer
	MultipleBirth        isUsCorePatient_MultipleBirth_MultipleBirth `protobuf_oneof:"multiple_birth"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *UsCorePatient_MultipleBirth) Reset()         { *m = UsCorePatient_MultipleBirth{} }
func (m *UsCorePatient_MultipleBirth) String() string { return proto.CompactTextString(m) }
func (*UsCorePatient_MultipleBirth) ProtoMessage()    {}
func (*UsCorePatient_MultipleBirth) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{17, 1}
}

func (m *UsCorePatient_MultipleBirth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCorePatient_MultipleBirth.Unmarshal(m, b)
}
func (m *UsCorePatient_MultipleBirth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCorePatient_MultipleBirth.Marshal(b, m, deterministic)
}
func (m *UsCorePatient_MultipleBirth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCorePatient_MultipleBirth.Merge(m, src)
}
func (m *UsCorePatient_MultipleBirth) XXX_Size() int {
	return xxx_messageInfo_UsCorePatient_MultipleBirth.Size(m)
}
func (m *UsCorePatient_MultipleBirth) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCorePatient_MultipleBirth.DiscardUnknown(m)
}

var xxx_messageInfo_UsCorePatient_MultipleBirth proto.InternalMessageInfo

type isUsCorePatient_MultipleBirth_MultipleBirth interface {
	isUsCorePatient_MultipleBirth_MultipleBirth()
}

type UsCorePatient_MultipleBirth_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type UsCorePatient_MultipleBirth_Integer struct {
	Integer *Integer `protobuf:"bytes,2,opt,name=integer,proto3,oneof"`
}

func (*UsCorePatient_MultipleBirth_Boolean) isUsCorePatient_MultipleBirth_MultipleBirth() {}

func (*UsCorePatient_MultipleBirth_Integer) isUsCorePatient_MultipleBirth_MultipleBirth() {}

func (m *UsCorePatient_MultipleBirth) GetMultipleBirth() isUsCorePatient_MultipleBirth_MultipleBirth {
	if m != nil {
		return m.MultipleBirth
	}
	return nil
}

func (m *UsCorePatient_MultipleBirth) GetBoolean() *Boolean {
	if x, ok := m.GetMultipleBirth().(*UsCorePatient_MultipleBirth_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (m *UsCorePatient_MultipleBirth) GetInteger() *Integer {
	if x, ok := m.GetMultipleBirth().(*UsCorePatient_MultipleBirth_Integer); ok {
		return x.Integer
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCorePatient_MultipleBirth) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCorePatient_MultipleBirth_OneofMarshaler, _UsCorePatient_MultipleBirth_OneofUnmarshaler, _UsCorePatient_MultipleBirth_OneofSizer, []interface{}{
		(*UsCorePatient_MultipleBirth_Boolean)(nil),
		(*UsCorePatient_MultipleBirth_Integer)(nil),
	}
}

func _UsCorePatient_MultipleBirth_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCorePatient_MultipleBirth)
	// multiple_birth
	switch x := m.MultipleBirth.(type) {
	case *UsCorePatient_MultipleBirth_Boolean:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Boolean); err != nil {
			return err
		}
	case *UsCorePatient_MultipleBirth_Integer:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCorePatient_MultipleBirth.MultipleBirth has unexpected type %T", x)
	}
	return nil
}

func _UsCorePatient_MultipleBirth_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCorePatient_MultipleBirth)
	switch tag {
	case 1: // multiple_birth.boolean
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Boolean)
		err := b.DecodeMessage(msg)
		m.MultipleBirth = &UsCorePatient_MultipleBirth_Boolean{msg}
		return true, err
	case 2: // multiple_birth.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Integer)
		err := b.DecodeMessage(msg)
		m.MultipleBirth = &UsCorePatient_MultipleBirth_Integer{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCorePatient_MultipleBirth_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCorePatient_MultipleBirth)
	// multiple_birth
	switch x := m.MultipleBirth.(type) {
	case *UsCorePatient_MultipleBirth_Boolean:
		s := proto.Size(x.Boolean)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCorePatient_MultipleBirth_Integer:
		s := proto.Size(x.Integer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A contact party (e.g. guardian, partner, friend) for the patient
type UsCorePatient_Contact struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The kind of relationship
	Relationship []*CodeableConcept `protobuf:"bytes,4,rep,name=relationship,proto3" json:"relationship,omitempty"`
	// A name associated with the contact person
	Name *HumanName `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// A contact detail for the person
	Telecom []*ContactPoint `protobuf:"bytes,6,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// Address for the contact person
	Address *Address `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	// Organization that is associated with the contact
	Organization *Reference `protobuf:"bytes,9,opt,name=organization,proto3" json:"organization,omitempty"`
	// The period during which this contact person or organization is valid to
	// be contacted relating to this patient
	Period               *Period  `protobuf:"bytes,10,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCorePatient_Contact) Reset()         { *m = UsCorePatient_Contact{} }
func (m *UsCorePatient_Contact) String() string { return proto.CompactTextString(m) }
func (*UsCorePatient_Contact) ProtoMessage()    {}
func (*UsCorePatient_Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{17, 2}
}

func (m *UsCorePatient_Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCorePatient_Contact.Unmarshal(m, b)
}
func (m *UsCorePatient_Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCorePatient_Contact.Marshal(b, m, deterministic)
}
func (m *UsCorePatient_Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCorePatient_Contact.Merge(m, src)
}
func (m *UsCorePatient_Contact) XXX_Size() int {
	return xxx_messageInfo_UsCorePatient_Contact.Size(m)
}
func (m *UsCorePatient_Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCorePatient_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_UsCorePatient_Contact proto.InternalMessageInfo

func (m *UsCorePatient_Contact) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCorePatient_Contact) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCorePatient_Contact) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCorePatient_Contact) GetRelationship() []*CodeableConcept {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *UsCorePatient_Contact) GetName() *HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UsCorePatient_Contact) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *UsCorePatient_Contact) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UsCorePatient_Contact) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *UsCorePatient_Contact) GetOrganization() *Reference {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *UsCorePatient_Contact) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

// A list of Languages which may be used to communicate with the patient about
// his or her health
type UsCorePatient_Communication struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The language which can be used to communicate with the patient about his
	// or her health
	Language *CodeableConcept `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Language preference indicator
	Preferred            *Boolean `protobuf:"bytes,5,opt,name=preferred,proto3" json:"preferred,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCorePatient_Communication) Reset()         { *m = UsCorePatient_Communication{} }
func (m *UsCorePatient_Communication) String() string { return proto.CompactTextString(m) }
func (*UsCorePatient_Communication) ProtoMessage()    {}
func (*UsCorePatient_Communication) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{17, 3}
}

func (m *UsCorePatient_Communication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCorePatient_Communication.Unmarshal(m, b)
}
func (m *UsCorePatient_Communication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCorePatient_Communication.Marshal(b, m, deterministic)
}
func (m *UsCorePatient_Communication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCorePatient_Communication.Merge(m, src)
}
func (m *UsCorePatient_Communication) XXX_Size() int {
	return xxx_messageInfo_UsCorePatient_Communication.Size(m)
}
func (m *UsCorePatient_Communication) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCorePatient_Communication.DiscardUnknown(m)
}

var xxx_messageInfo_UsCorePatient_Communication proto.InternalMessageInfo

func (m *UsCorePatient_Communication) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCorePatient_Communication) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCorePatient_Communication) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCorePatient_Communication) GetLanguage() *CodeableConcept {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCorePatient_Communication) GetPreferred() *Boolean {
	if m != nil {
		return m.Preferred
	}
	return nil
}

// Link to another patient resource that concerns the same actual person
type UsCorePatient_Link struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The other patient or related person resource that the link refers to
	Other *Reference `protobuf:"bytes,4,opt,name=other,proto3" json:"other,omitempty"`
	// replaced-by | replaces | refer | seealso - type of link
	Type                 *LinkTypeCode `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UsCorePatient_Link) Reset()         { *m = UsCorePatient_Link{} }
func (m *UsCorePatient_Link) String() string { return proto.CompactTextString(m) }
func (*UsCorePatient_Link) ProtoMessage()    {}
func (*UsCorePatient_Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{17, 4}
}

func (m *UsCorePatient_Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCorePatient_Link.Unmarshal(m, b)
}
func (m *UsCorePatient_Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCorePatient_Link.Marshal(b, m, deterministic)
}
func (m *UsCorePatient_Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCorePatient_Link.Merge(m, src)
}
func (m *UsCorePatient_Link) XXX_Size() int {
	return xxx_messageInfo_UsCorePatient_Link.Size(m)
}
func (m *UsCorePatient_Link) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCorePatient_Link.DiscardUnknown(m)
}

var xxx_messageInfo_UsCorePatient_Link proto.InternalMessageInfo

func (m *UsCorePatient_Link) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCorePatient_Link) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCorePatient_Link) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCorePatient_Link) GetOther() *Reference {
	if m != nil {
		return m.Other
	}
	return nil
}

func (m *UsCorePatient_Link) GetType() *LinkTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core Practitioner Profile.
// US Core Practitioner.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner
type UsCorePractitioner struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A identifier for the person as this agent
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether this practitioner's record is in active use
	Active *Boolean `protobuf:"bytes,10,opt,name=active,proto3" json:"active,omitempty"`
	// The name(s) associated with the practitioner
	Name *HumanName `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// A contact detail for the practitioner (that apply to all roles)
	Telecom []*ContactPoint `protobuf:"bytes,12,rep,name=telecom,proto3" json:"telecom,omitempty"`
	// Address(es) of the practitioner that are not role specific (typically home
	// address)
	Address []*Address `protobuf:"bytes,13,rep,name=address,proto3" json:"address,omitempty"`
	// male | female | other | unknown
	Gender *AdministrativeGenderCode `protobuf:"bytes,14,opt,name=gender,proto3" json:"gender,omitempty"`
	// The date  on which the practitioner was born
	BirthDate *Date `protobuf:"bytes,15,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	// Image of the person
	Photo         []*Attachment                       `protobuf:"bytes,16,rep,name=photo,proto3" json:"photo,omitempty"`
	Qualification []*UsCorePractitioner_Qualification `protobuf:"bytes,17,rep,name=qualification,proto3" json:"qualification,omitempty"`
	// A language the practitioner is able to use in patient communication
	Communication        []*CodeableConcept `protobuf:"bytes,18,rep,name=communication,proto3" json:"communication,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UsCorePractitioner) Reset()         { *m = UsCorePractitioner{} }
func (m *UsCorePractitioner) String() string { return proto.CompactTextString(m) }
func (*UsCorePractitioner) ProtoMessage()    {}
func (*UsCorePractitioner) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{18}
}

func (m *UsCorePractitioner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCorePractitioner.Unmarshal(m, b)
}
func (m *UsCorePractitioner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCorePractitioner.Marshal(b, m, deterministic)
}
func (m *UsCorePractitioner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCorePractitioner.Merge(m, src)
}
func (m *UsCorePractitioner) XXX_Size() int {
	return xxx_messageInfo_UsCorePractitioner.Size(m)
}
func (m *UsCorePractitioner) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCorePractitioner.DiscardUnknown(m)
}

var xxx_messageInfo_UsCorePractitioner proto.InternalMessageInfo

func (m *UsCorePractitioner) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCorePractitioner) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCorePractitioner) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCorePractitioner) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCorePractitioner) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCorePractitioner) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCorePractitioner) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCorePractitioner) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCorePractitioner) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCorePractitioner) GetActive() *Boolean {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *UsCorePractitioner) GetName() *HumanName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UsCorePractitioner) GetTelecom() []*ContactPoint {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *UsCorePractitioner) GetAddress() []*Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UsCorePractitioner) GetGender() *AdministrativeGenderCode {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *UsCorePractitioner) GetBirthDate() *Date {
	if m != nil {
		return m.BirthDate
	}
	return nil
}

func (m *UsCorePractitioner) GetPhoto() []*Attachment {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *UsCorePractitioner) GetQualification() []*UsCorePractitioner_Qualification {
	if m != nil {
		return m.Qualification
	}
	return nil
}

func (m *UsCorePractitioner) GetCommunication() []*CodeableConcept {
	if m != nil {
		return m.Communication
	}
	return nil
}

// Qualifications obtained by training and certification
type UsCorePractitioner_Qualification struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// An identifier for this qualification for the practitioner
	Identifier []*Identifier `protobuf:"bytes,4,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Coded representation of the qualification
	Code *CodeableConcept `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Period during which the qualification is valid
	Period *Period `protobuf:"bytes,6,opt,name=period,proto3" json:"period,omitempty"`
	// Organization that regulates and issues the qualification
	Issuer               *Reference `protobuf:"bytes,7,opt,name=issuer,proto3" json:"issuer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCorePractitioner_Qualification) Reset()         { *m = UsCorePractitioner_Qualification{} }
func (m *UsCorePractitioner_Qualification) String() string { return proto.CompactTextString(m) }
func (*UsCorePractitioner_Qualification) ProtoMessage()    {}
func (*UsCorePractitioner_Qualification) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{18, 0}
}

func (m *UsCorePractitioner_Qualification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCorePractitioner_Qualification.Unmarshal(m, b)
}
func (m *UsCorePractitioner_Qualification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCorePractitioner_Qualification.Marshal(b, m, deterministic)
}
func (m *UsCorePractitioner_Qualification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCorePractitioner_Qualification.Merge(m, src)
}
func (m *UsCorePractitioner_Qualification) XXX_Size() int {
	return xxx_messageInfo_UsCorePractitioner_Qualification.Size(m)
}
func (m *UsCorePractitioner_Qualification) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCorePractitioner_Qualification.DiscardUnknown(m)
}

var xxx_messageInfo_UsCorePractitioner_Qualification proto.InternalMessageInfo

func (m *UsCorePractitioner_Qualification) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCorePractitioner_Qualification) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCorePractitioner_Qualification) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCorePractitioner_Qualification) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCorePractitioner_Qualification) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCorePractitioner_Qualification) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *UsCorePractitioner_Qualification) GetIssuer() *Reference {
	if m != nil {
		return m.Issuer
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core Procedure Profile.
// US Core Procedure Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-procedure
type UsCoreProcedure struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Identifiers for this procedure
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Instantiates protocol or definition
	Definition []*Reference `protobuf:"bytes,10,rep,name=definition,proto3" json:"definition,omitempty"`
	// A request for this procedure
	BasedOn []*Reference `protobuf:"bytes,11,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Part of referenced event
	PartOf []*Reference `protobuf:"bytes,12,rep,name=part_of,json=partOf,proto3" json:"part_of,omitempty"`
	// preparation | in-progress | suspended | aborted | completed |
	// entered-in-error | unknown
	Status *EventStatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// True if procedure was not performed as scheduled
	NotDone *Boolean `protobuf:"bytes,14,opt,name=not_done,json=notDone,proto3" json:"not_done,omitempty"`
	// Reason procedure was not performed
	NotDoneReason *CodeableConcept `protobuf:"bytes,15,opt,name=not_done_reason,json=notDoneReason,proto3" json:"not_done_reason,omitempty"`
	// Classification of the procedure
	Category *CodeableConcept `protobuf:"bytes,16,opt,name=category,proto3" json:"category,omitempty"`
	// SNOMED-CT | ICD-10 | CPT-4
	Code *CodeableConcept `protobuf:"bytes,17,opt,name=code,proto3" json:"code,omitempty"`
	// Who the procedure was performed on
	Subject *Reference `protobuf:"bytes,18,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter or episode associated with the procedure
	Context   *Reference                   `protobuf:"bytes,19,opt,name=context,proto3" json:"context,omitempty"`
	Performed *UsCoreProcedure_Performed   `protobuf:"bytes,20,opt,name=performed,proto3" json:"performed,omitempty"`
	Performer []*UsCoreProcedure_Performer `protobuf:"bytes,21,rep,name=performer,proto3" json:"performer,omitempty"`
	// Where the procedure happened
	Location *Reference `protobuf:"bytes,22,opt,name=location,proto3" json:"location,omitempty"`
	// Coded reason procedure performed
	ReasonCode []*CodeableConcept `protobuf:"bytes,23,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Condition that is the reason the procedure performed
	ReasonReference []*Reference `protobuf:"bytes,24,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Target body sites
	BodySite []*CodeableConcept `protobuf:"bytes,25,rep,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// The result of procedure
	Outcome *CodeableConcept `protobuf:"bytes,26,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Any report resulting from the procedure
	Report []*Reference `protobuf:"bytes,27,rep,name=report,proto3" json:"report,omitempty"`
	// Complication following the procedure
	Complication []*CodeableConcept `protobuf:"bytes,28,rep,name=complication,proto3" json:"complication,omitempty"`
	// A condition that is a result of the procedure
	ComplicationDetail []*Reference `protobuf:"bytes,29,rep,name=complication_detail,json=complicationDetail,proto3" json:"complication_detail,omitempty"`
	// Instructions for follow up
	FollowUp []*CodeableConcept `protobuf:"bytes,30,rep,name=follow_up,json=followUp,proto3" json:"follow_up,omitempty"`
	// Additional information about the procedure
	Note        []*Annotation                  `protobuf:"bytes,31,rep,name=note,proto3" json:"note,omitempty"`
	FocalDevice []*UsCoreProcedure_FocalDevice `protobuf:"bytes,32,rep,name=focal_device,json=focalDevice,proto3" json:"focal_device,omitempty"`
	// Items used during procedure
	UsedReference []*Reference `protobuf:"bytes,33,rep,name=used_reference,json=usedReference,proto3" json:"used_reference,omitempty"`
	// Coded items used during the procedure
	UsedCode             []*CodeableConcept `protobuf:"bytes,34,rep,name=used_code,json=usedCode,proto3" json:"used_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UsCoreProcedure) Reset()         { *m = UsCoreProcedure{} }
func (m *UsCoreProcedure) String() string { return proto.CompactTextString(m) }
func (*UsCoreProcedure) ProtoMessage()    {}
func (*UsCoreProcedure) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{19}
}

func (m *UsCoreProcedure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreProcedure.Unmarshal(m, b)
}
func (m *UsCoreProcedure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreProcedure.Marshal(b, m, deterministic)
}
func (m *UsCoreProcedure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreProcedure.Merge(m, src)
}
func (m *UsCoreProcedure) XXX_Size() int {
	return xxx_messageInfo_UsCoreProcedure.Size(m)
}
func (m *UsCoreProcedure) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreProcedure.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreProcedure proto.InternalMessageInfo

func (m *UsCoreProcedure) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreProcedure) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreProcedure) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreProcedure) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreProcedure) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreProcedure) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreProcedure) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreProcedure) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreProcedure) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreProcedure) GetDefinition() []*Reference {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *UsCoreProcedure) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *UsCoreProcedure) GetPartOf() []*Reference {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *UsCoreProcedure) GetStatus() *EventStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreProcedure) GetNotDone() *Boolean {
	if m != nil {
		return m.NotDone
	}
	return nil
}

func (m *UsCoreProcedure) GetNotDoneReason() *CodeableConcept {
	if m != nil {
		return m.NotDoneReason
	}
	return nil
}

func (m *UsCoreProcedure) GetCategory() *CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreProcedure) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreProcedure) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreProcedure) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UsCoreProcedure) GetPerformed() *UsCoreProcedure_Performed {
	if m != nil {
		return m.Performed
	}
	return nil
}

func (m *UsCoreProcedure) GetPerformer() []*UsCoreProcedure_Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *UsCoreProcedure) GetLocation() *Reference {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *UsCoreProcedure) GetReasonCode() []*CodeableConcept {
	if m != nil {
		return m.ReasonCode
	}
	return nil
}

func (m *UsCoreProcedure) GetReasonReference() []*Reference {
	if m != nil {
		return m.ReasonReference
	}
	return nil
}

func (m *UsCoreProcedure) GetBodySite() []*CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *UsCoreProcedure) GetOutcome() *CodeableConcept {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (m *UsCoreProcedure) GetReport() []*Reference {
	if m != nil {
		return m.Report
	}
	return nil
}

func (m *UsCoreProcedure) GetComplication() []*CodeableConcept {
	if m != nil {
		return m.Complication
	}
	return nil
}

func (m *UsCoreProcedure) GetComplicationDetail() []*Reference {
	if m != nil {
		return m.ComplicationDetail
	}
	return nil
}

func (m *UsCoreProcedure) GetFollowUp() []*CodeableConcept {
	if m != nil {
		return m.FollowUp
	}
	return nil
}

func (m *UsCoreProcedure) GetNote() []*Annotation {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *UsCoreProcedure) GetFocalDevice() []*UsCoreProcedure_FocalDevice {
	if m != nil {
		return m.FocalDevice
	}
	return nil
}

func (m *UsCoreProcedure) GetUsedReference() []*Reference {
	if m != nil {
		return m.UsedReference
	}
	return nil
}

func (m *UsCoreProcedure) GetUsedCode() []*CodeableConcept {
	if m != nil {
		return m.UsedCode
	}
	return nil
}

// Date/Period the procedure was performed
type UsCoreProcedure_Performed struct {
	// Types that are valid to be assigned to Performed:
	//	*UsCoreProcedure_Performed_DateTime
	//	*UsCoreProcedure_Performed_Period
	Performed            isUsCoreProcedure_Performed_Performed `protobuf_oneof:"performed"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *UsCoreProcedure_Performed) Reset()         { *m = UsCoreProcedure_Performed{} }
func (m *UsCoreProcedure_Performed) String() string { return proto.CompactTextString(m) }
func (*UsCoreProcedure_Performed) ProtoMessage()    {}
func (*UsCoreProcedure_Performed) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{19, 0}
}

func (m *UsCoreProcedure_Performed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreProcedure_Performed.Unmarshal(m, b)
}
func (m *UsCoreProcedure_Performed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreProcedure_Performed.Marshal(b, m, deterministic)
}
func (m *UsCoreProcedure_Performed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreProcedure_Performed.Merge(m, src)
}
func (m *UsCoreProcedure_Performed) XXX_Size() int {
	return xxx_messageInfo_UsCoreProcedure_Performed.Size(m)
}
func (m *UsCoreProcedure_Performed) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreProcedure_Performed.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreProcedure_Performed proto.InternalMessageInfo

type isUsCoreProcedure_Performed_Performed interface {
	isUsCoreProcedure_Performed_Performed()
}

type UsCoreProcedure_Performed_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreProcedure_Performed_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*UsCoreProcedure_Performed_DateTime) isUsCoreProcedure_Performed_Performed() {}

func (*UsCoreProcedure_Performed_Period) isUsCoreProcedure_Performed_Performed() {}

func (m *UsCoreProcedure_Performed) GetPerformed() isUsCoreProcedure_Performed_Performed {
	if m != nil {
		return m.Performed
	}
	return nil
}

func (m *UsCoreProcedure_Performed) GetDateTime() *DateTime {
	if x, ok := m.GetPerformed().(*UsCoreProcedure_Performed_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreProcedure_Performed) GetPeriod() *Period {
	if x, ok := m.GetPerformed().(*UsCoreProcedure_Performed_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreProcedure_Performed) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreProcedure_Performed_OneofMarshaler, _UsCoreProcedure_Performed_OneofUnmarshaler, _UsCoreProcedure_Performed_OneofSizer, []interface{}{
		(*UsCoreProcedure_Performed_DateTime)(nil),
		(*UsCoreProcedure_Performed_Period)(nil),
	}
}

func _UsCoreProcedure_Performed_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreProcedure_Performed)
	// performed
	switch x := m.Performed.(type) {
	case *UsCoreProcedure_Performed_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreProcedure_Performed_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreProcedure_Performed.Performed has unexpected type %T", x)
	}
	return nil
}

func _UsCoreProcedure_Performed_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreProcedure_Performed)
	switch tag {
	case 1: // performed.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Performed = &UsCoreProcedure_Performed_DateTime{msg}
		return true, err
	case 2: // performed.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Performed = &UsCoreProcedure_Performed_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreProcedure_Performed_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreProcedure_Performed)
	// performed
	switch x := m.Performed.(type) {
	case *UsCoreProcedure_Performed_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreProcedure_Performed_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The people who performed the procedure
type UsCoreProcedure_Performer struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The role the actor was in
	Role *CodeableConcept `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// The reference to the practitioner
	Actor *Reference `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	// Organization the device or practitioner was acting for
	OnBehalfOf           *Reference `protobuf:"bytes,6,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCoreProcedure_Performer) Reset()         { *m = UsCoreProcedure_Performer{} }
func (m *UsCoreProcedure_Performer) String() string { return proto.CompactTextString(m) }
func (*UsCoreProcedure_Performer) ProtoMessage()    {}
func (*UsCoreProcedure_Performer) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{19, 1}
}

func (m *UsCoreProcedure_Performer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreProcedure_Performer.Unmarshal(m, b)
}
func (m *UsCoreProcedure_Performer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreProcedure_Performer.Marshal(b, m, deterministic)
}
func (m *UsCoreProcedure_Performer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreProcedure_Performer.Merge(m, src)
}
func (m *UsCoreProcedure_Performer) XXX_Size() int {
	return xxx_messageInfo_UsCoreProcedure_Performer.Size(m)
}
func (m *UsCoreProcedure_Performer) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreProcedure_Performer.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreProcedure_Performer proto.InternalMessageInfo

func (m *UsCoreProcedure_Performer) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreProcedure_Performer) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreProcedure_Performer) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreProcedure_Performer) GetRole() *CodeableConcept {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *UsCoreProcedure_Performer) GetActor() *Reference {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *UsCoreProcedure_Performer) GetOnBehalfOf() *Reference {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

// Device changed in procedure
type UsCoreProcedure_FocalDevice struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Kind of change to device
	Action *CodeableConcept `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	// Device that was changed
	Manipulated          *Reference `protobuf:"bytes,5,opt,name=manipulated,proto3" json:"manipulated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCoreProcedure_FocalDevice) Reset()         { *m = UsCoreProcedure_FocalDevice{} }
func (m *UsCoreProcedure_FocalDevice) String() string { return proto.CompactTextString(m) }
func (*UsCoreProcedure_FocalDevice) ProtoMessage()    {}
func (*UsCoreProcedure_FocalDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{19, 2}
}

func (m *UsCoreProcedure_FocalDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreProcedure_FocalDevice.Unmarshal(m, b)
}
func (m *UsCoreProcedure_FocalDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreProcedure_FocalDevice.Marshal(b, m, deterministic)
}
func (m *UsCoreProcedure_FocalDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreProcedure_FocalDevice.Merge(m, src)
}
func (m *UsCoreProcedure_FocalDevice) XXX_Size() int {
	return xxx_messageInfo_UsCoreProcedure_FocalDevice.Size(m)
}
func (m *UsCoreProcedure_FocalDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreProcedure_FocalDevice.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreProcedure_FocalDevice proto.InternalMessageInfo

func (m *UsCoreProcedure_FocalDevice) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreProcedure_FocalDevice) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreProcedure_FocalDevice) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreProcedure_FocalDevice) GetAction() *CodeableConcept {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *UsCoreProcedure_FocalDevice) GetManipulated() *Reference {
	if m != nil {
		return m.Manipulated
	}
	return nil
}

// Auto-generated from StructureDefinition for Profile-resource association
// extension. Resource that this profile is based on. See
// http://hl7.org/fhir/us/core/StructureDefinition/us-core-profile-link
type CapabilityStatementProfileResourceAssociationExtension struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Value of extension
	ValueCode            *ResourceTypeCode `protobuf:"bytes,3,opt,name=value_code,json=valueCode,proto3" json:"value_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CapabilityStatementProfileResourceAssociationExtension) Reset() {
	*m = CapabilityStatementProfileResourceAssociationExtension{}
}
func (m *CapabilityStatementProfileResourceAssociationExtension) String() string {
	return proto.CompactTextString(m)
}
func (*CapabilityStatementProfileResourceAssociationExtension) ProtoMessage() {}
func (*CapabilityStatementProfileResourceAssociationExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{20}
}

func (m *CapabilityStatementProfileResourceAssociationExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityStatementProfileResourceAssociationExtension.Unmarshal(m, b)
}
func (m *CapabilityStatementProfileResourceAssociationExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityStatementProfileResourceAssociationExtension.Marshal(b, m, deterministic)
}
func (m *CapabilityStatementProfileResourceAssociationExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityStatementProfileResourceAssociationExtension.Merge(m, src)
}
func (m *CapabilityStatementProfileResourceAssociationExtension) XXX_Size() int {
	return xxx_messageInfo_CapabilityStatementProfileResourceAssociationExtension.Size(m)
}
func (m *CapabilityStatementProfileResourceAssociationExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityStatementProfileResourceAssociationExtension.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityStatementProfileResourceAssociationExtension proto.InternalMessageInfo

func (m *CapabilityStatementProfileResourceAssociationExtension) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CapabilityStatementProfileResourceAssociationExtension) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *CapabilityStatementProfileResourceAssociationExtension) GetValueCode() *ResourceTypeCode {
	if m != nil {
		return m.ValueCode
	}
	return nil
}

// Auto-generated from StructureDefinition for US Core Race Extension.
// US Core Race Extension.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-race
type PatientUSCoreRaceExtension struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Extension
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// American Indian or Alaska Native|Asian|Black or African American|Native
	// Hawaiian or Other Pacific Islander|White
	OmbCategory []*Coding `protobuf:"bytes,4,rep,name=omb_category,json=ombCategory,proto3" json:"omb_category,omitempty"`
	// Extended race codes
	Detailed []*Coding `protobuf:"bytes,5,rep,name=detailed,proto3" json:"detailed,omitempty"`
	// Race Text
	Text                 *String  `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatientUSCoreRaceExtension) Reset()         { *m = PatientUSCoreRaceExtension{} }
func (m *PatientUSCoreRaceExtension) String() string { return proto.CompactTextString(m) }
func (*PatientUSCoreRaceExtension) ProtoMessage()    {}
func (*PatientUSCoreRaceExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{21}
}

func (m *PatientUSCoreRaceExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatientUSCoreRaceExtension.Unmarshal(m, b)
}
func (m *PatientUSCoreRaceExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatientUSCoreRaceExtension.Marshal(b, m, deterministic)
}
func (m *PatientUSCoreRaceExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatientUSCoreRaceExtension.Merge(m, src)
}
func (m *PatientUSCoreRaceExtension) XXX_Size() int {
	return xxx_messageInfo_PatientUSCoreRaceExtension.Size(m)
}
func (m *PatientUSCoreRaceExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_PatientUSCoreRaceExtension.DiscardUnknown(m)
}

var xxx_messageInfo_PatientUSCoreRaceExtension proto.InternalMessageInfo

func (m *PatientUSCoreRaceExtension) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PatientUSCoreRaceExtension) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PatientUSCoreRaceExtension) GetOmbCategory() []*Coding {
	if m != nil {
		return m.OmbCategory
	}
	return nil
}

func (m *PatientUSCoreRaceExtension) GetDetailed() []*Coding {
	if m != nil {
		return m.Detailed
	}
	return nil
}

func (m *PatientUSCoreRaceExtension) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Auto-generated from StructureDefinition for US  Core Smoking Status Profile.
// US Core Smoking Status Observation Profile.
// See http://hl7.org/fhir/us/core/StructureDefinition/us-core-smokingstatus
type UsCoreSmokingstatus struct {
	// Logical id of this artifact
	Id *Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*ContainedResource `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,7,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,8,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business Identifier for observation
	Identifier []*Identifier `protobuf:"bytes,9,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Fulfills plan, proposal or order
	BasedOn []*Reference `protobuf:"bytes,10,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// registered | preliminary | final | amended +
	Status *ObservationStatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Classification of  type of observation
	Category []*CodeableConcept `protobuf:"bytes,12,rep,name=category,proto3" json:"category,omitempty"`
	// Smoking Status: LOINC 72166-2  = Tobacco smoking status NHIS
	Code *CodeableConcept `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
	// Who and/or what this is about
	Subject *Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Healthcare event during which this observation is made
	Context   *Reference                     `protobuf:"bytes,15,opt,name=context,proto3" json:"context,omitempty"`
	Effective *UsCoreSmokingstatus_Effective `protobuf:"bytes,16,opt,name=effective,proto3" json:"effective,omitempty"`
	// Date/Time this was made available
	Issued *Instant `protobuf:"bytes,17,opt,name=issued,proto3" json:"issued,omitempty"`
	// Who is responsible for the observation
	Performer []*Reference               `protobuf:"bytes,18,rep,name=performer,proto3" json:"performer,omitempty"`
	Value     *UsCoreSmokingstatus_Value `protobuf:"bytes,19,opt,name=value,proto3" json:"value,omitempty"`
	// Why the result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,20,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,21,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Comments about result
	Comment *String `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	// Observed body part
	BodySite *CodeableConcept `protobuf:"bytes,23,opt,name=body_site,json=bodySite,proto3" json:"body_site,omitempty"`
	// How it was done
	Method *CodeableConcept `protobuf:"bytes,24,opt,name=method,proto3" json:"method,omitempty"`
	// Specimen used for this observation
	Specimen *Reference `protobuf:"bytes,25,opt,name=specimen,proto3" json:"specimen,omitempty"`
	// (Measurement) Device
	Device               *Reference                            `protobuf:"bytes,26,opt,name=device,proto3" json:"device,omitempty"`
	ReferenceRange       []*UsCoreSmokingstatus_ReferenceRange `protobuf:"bytes,27,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Related              []*UsCoreSmokingstatus_Related        `protobuf:"bytes,28,rep,name=related,proto3" json:"related,omitempty"`
	Component            []*UsCoreSmokingstatus_Component      `protobuf:"bytes,29,rep,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *UsCoreSmokingstatus) Reset()         { *m = UsCoreSmokingstatus{} }
func (m *UsCoreSmokingstatus) String() string { return proto.CompactTextString(m) }
func (*UsCoreSmokingstatus) ProtoMessage()    {}
func (*UsCoreSmokingstatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{22}
}

func (m *UsCoreSmokingstatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreSmokingstatus.Unmarshal(m, b)
}
func (m *UsCoreSmokingstatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreSmokingstatus.Marshal(b, m, deterministic)
}
func (m *UsCoreSmokingstatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreSmokingstatus.Merge(m, src)
}
func (m *UsCoreSmokingstatus) XXX_Size() int {
	return xxx_messageInfo_UsCoreSmokingstatus.Size(m)
}
func (m *UsCoreSmokingstatus) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreSmokingstatus.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreSmokingstatus proto.InternalMessageInfo

func (m *UsCoreSmokingstatus) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetImplicitRules() *Uri {
	if m != nil {
		return m.ImplicitRules
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetLanguage() *LanguageCode {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetText() *Narrative {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetContained() []*ContainedResource {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetBasedOn() []*Reference {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetStatus() *ObservationStatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetCategory() []*CodeableConcept {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetSubject() *Reference {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetContext() *Reference {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetEffective() *UsCoreSmokingstatus_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetIssued() *Instant {
	if m != nil {
		return m.Issued
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetPerformer() []*Reference {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetValue() *UsCoreSmokingstatus_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetComment() *String {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetBodySite() *CodeableConcept {
	if m != nil {
		return m.BodySite
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetMethod() *CodeableConcept {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetSpecimen() *Reference {
	if m != nil {
		return m.Specimen
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetDevice() *Reference {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetReferenceRange() []*UsCoreSmokingstatus_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetRelated() []*UsCoreSmokingstatus_Related {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *UsCoreSmokingstatus) GetComponent() []*UsCoreSmokingstatus_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

// Clinically relevant time/time-period for observation
type UsCoreSmokingstatus_Effective struct {
	// Types that are valid to be assigned to Effective:
	//	*UsCoreSmokingstatus_Effective_DateTime
	//	*UsCoreSmokingstatus_Effective_Period
	Effective            isUsCoreSmokingstatus_Effective_Effective `protobuf_oneof:"effective"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *UsCoreSmokingstatus_Effective) Reset()         { *m = UsCoreSmokingstatus_Effective{} }
func (m *UsCoreSmokingstatus_Effective) String() string { return proto.CompactTextString(m) }
func (*UsCoreSmokingstatus_Effective) ProtoMessage()    {}
func (*UsCoreSmokingstatus_Effective) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{22, 0}
}

func (m *UsCoreSmokingstatus_Effective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreSmokingstatus_Effective.Unmarshal(m, b)
}
func (m *UsCoreSmokingstatus_Effective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreSmokingstatus_Effective.Marshal(b, m, deterministic)
}
func (m *UsCoreSmokingstatus_Effective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreSmokingstatus_Effective.Merge(m, src)
}
func (m *UsCoreSmokingstatus_Effective) XXX_Size() int {
	return xxx_messageInfo_UsCoreSmokingstatus_Effective.Size(m)
}
func (m *UsCoreSmokingstatus_Effective) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreSmokingstatus_Effective.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreSmokingstatus_Effective proto.InternalMessageInfo

type isUsCoreSmokingstatus_Effective_Effective interface {
	isUsCoreSmokingstatus_Effective_Effective()
}

type UsCoreSmokingstatus_Effective_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreSmokingstatus_Effective_Period struct {
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*UsCoreSmokingstatus_Effective_DateTime) isUsCoreSmokingstatus_Effective_Effective() {}

func (*UsCoreSmokingstatus_Effective_Period) isUsCoreSmokingstatus_Effective_Effective() {}

func (m *UsCoreSmokingstatus_Effective) GetEffective() isUsCoreSmokingstatus_Effective_Effective {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *UsCoreSmokingstatus_Effective) GetDateTime() *DateTime {
	if x, ok := m.GetEffective().(*UsCoreSmokingstatus_Effective_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreSmokingstatus_Effective) GetPeriod() *Period {
	if x, ok := m.GetEffective().(*UsCoreSmokingstatus_Effective_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreSmokingstatus_Effective) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreSmokingstatus_Effective_OneofMarshaler, _UsCoreSmokingstatus_Effective_OneofUnmarshaler, _UsCoreSmokingstatus_Effective_OneofSizer, []interface{}{
		(*UsCoreSmokingstatus_Effective_DateTime)(nil),
		(*UsCoreSmokingstatus_Effective_Period)(nil),
	}
}

func _UsCoreSmokingstatus_Effective_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreSmokingstatus_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *UsCoreSmokingstatus_Effective_DateTime:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Effective_Period:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreSmokingstatus_Effective.Effective has unexpected type %T", x)
	}
	return nil
}

func _UsCoreSmokingstatus_Effective_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreSmokingstatus_Effective)
	switch tag {
	case 1: // effective.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Effective = &UsCoreSmokingstatus_Effective_DateTime{msg}
		return true, err
	case 2: // effective.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Effective = &UsCoreSmokingstatus_Effective_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreSmokingstatus_Effective_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreSmokingstatus_Effective)
	// effective
	switch x := m.Effective.(type) {
	case *UsCoreSmokingstatus_Effective_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Effective_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Coded Responses from Smoking Status Value Set
type UsCoreSmokingstatus_Value struct {
	// Types that are valid to be assigned to Value:
	//	*UsCoreSmokingstatus_Value_CodeableConcept
	Value                isUsCoreSmokingstatus_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *UsCoreSmokingstatus_Value) Reset()         { *m = UsCoreSmokingstatus_Value{} }
func (m *UsCoreSmokingstatus_Value) String() string { return proto.CompactTextString(m) }
func (*UsCoreSmokingstatus_Value) ProtoMessage()    {}
func (*UsCoreSmokingstatus_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{22, 1}
}

func (m *UsCoreSmokingstatus_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreSmokingstatus_Value.Unmarshal(m, b)
}
func (m *UsCoreSmokingstatus_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreSmokingstatus_Value.Marshal(b, m, deterministic)
}
func (m *UsCoreSmokingstatus_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreSmokingstatus_Value.Merge(m, src)
}
func (m *UsCoreSmokingstatus_Value) XXX_Size() int {
	return xxx_messageInfo_UsCoreSmokingstatus_Value.Size(m)
}
func (m *UsCoreSmokingstatus_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreSmokingstatus_Value.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreSmokingstatus_Value proto.InternalMessageInfo

type isUsCoreSmokingstatus_Value_Value interface {
	isUsCoreSmokingstatus_Value_Value()
}

type UsCoreSmokingstatus_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*UsCoreSmokingstatus_Value_CodeableConcept) isUsCoreSmokingstatus_Value_Value() {}

func (m *UsCoreSmokingstatus_Value) GetValue() isUsCoreSmokingstatus_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *UsCoreSmokingstatus_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreSmokingstatus_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreSmokingstatus_Value_OneofMarshaler, _UsCoreSmokingstatus_Value_OneofUnmarshaler, _UsCoreSmokingstatus_Value_OneofSizer, []interface{}{
		(*UsCoreSmokingstatus_Value_CodeableConcept)(nil),
	}
}

func _UsCoreSmokingstatus_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreSmokingstatus_Value)
	// value
	switch x := m.Value.(type) {
	case *UsCoreSmokingstatus_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreSmokingstatus_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _UsCoreSmokingstatus_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreSmokingstatus_Value)
	switch tag {
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Value_CodeableConcept{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreSmokingstatus_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreSmokingstatus_Value)
	// value
	switch x := m.Value.(type) {
	case *UsCoreSmokingstatus_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Provides guide for interpretation
type UsCoreSmokingstatus_ReferenceRange struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Low Range, if relevant
	Low *SimpleQuantity `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	// High Range, if relevant
	High *SimpleQuantity `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	// Reference range qualifier
	Type *CodeableConcept `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Reference range population
	AppliesTo []*CodeableConcept `protobuf:"bytes,7,rep,name=applies_to,json=appliesTo,proto3" json:"applies_to,omitempty"`
	// Applicable age range, if relevant
	Age *Range `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	// Text based reference range in an observation
	Text                 *String  `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsCoreSmokingstatus_ReferenceRange) Reset()         { *m = UsCoreSmokingstatus_ReferenceRange{} }
func (m *UsCoreSmokingstatus_ReferenceRange) String() string { return proto.CompactTextString(m) }
func (*UsCoreSmokingstatus_ReferenceRange) ProtoMessage()    {}
func (*UsCoreSmokingstatus_ReferenceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{22, 2}
}

func (m *UsCoreSmokingstatus_ReferenceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreSmokingstatus_ReferenceRange.Unmarshal(m, b)
}
func (m *UsCoreSmokingstatus_ReferenceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreSmokingstatus_ReferenceRange.Marshal(b, m, deterministic)
}
func (m *UsCoreSmokingstatus_ReferenceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreSmokingstatus_ReferenceRange.Merge(m, src)
}
func (m *UsCoreSmokingstatus_ReferenceRange) XXX_Size() int {
	return xxx_messageInfo_UsCoreSmokingstatus_ReferenceRange.Size(m)
}
func (m *UsCoreSmokingstatus_ReferenceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreSmokingstatus_ReferenceRange.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreSmokingstatus_ReferenceRange proto.InternalMessageInfo

func (m *UsCoreSmokingstatus_ReferenceRange) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreSmokingstatus_ReferenceRange) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreSmokingstatus_ReferenceRange) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreSmokingstatus_ReferenceRange) GetLow() *SimpleQuantity {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *UsCoreSmokingstatus_ReferenceRange) GetHigh() *SimpleQuantity {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *UsCoreSmokingstatus_ReferenceRange) GetType() *CodeableConcept {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UsCoreSmokingstatus_ReferenceRange) GetAppliesTo() []*CodeableConcept {
	if m != nil {
		return m.AppliesTo
	}
	return nil
}

func (m *UsCoreSmokingstatus_ReferenceRange) GetAge() *Range {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *UsCoreSmokingstatus_ReferenceRange) GetText() *String {
	if m != nil {
		return m.Text
	}
	return nil
}

// Resource related to this observation
type UsCoreSmokingstatus_Related struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// has-member | derived-from | sequel-to | replaces | qualified-by |
	// interfered-by
	Type *ObservationRelationshipTypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Resource that is related to this one
	Target               *Reference `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UsCoreSmokingstatus_Related) Reset()         { *m = UsCoreSmokingstatus_Related{} }
func (m *UsCoreSmokingstatus_Related) String() string { return proto.CompactTextString(m) }
func (*UsCoreSmokingstatus_Related) ProtoMessage()    {}
func (*UsCoreSmokingstatus_Related) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{22, 3}
}

func (m *UsCoreSmokingstatus_Related) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreSmokingstatus_Related.Unmarshal(m, b)
}
func (m *UsCoreSmokingstatus_Related) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreSmokingstatus_Related.Marshal(b, m, deterministic)
}
func (m *UsCoreSmokingstatus_Related) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreSmokingstatus_Related.Merge(m, src)
}
func (m *UsCoreSmokingstatus_Related) XXX_Size() int {
	return xxx_messageInfo_UsCoreSmokingstatus_Related.Size(m)
}
func (m *UsCoreSmokingstatus_Related) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreSmokingstatus_Related.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreSmokingstatus_Related proto.InternalMessageInfo

func (m *UsCoreSmokingstatus_Related) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreSmokingstatus_Related) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreSmokingstatus_Related) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreSmokingstatus_Related) GetType() *ObservationRelationshipTypeCode {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UsCoreSmokingstatus_Related) GetTarget() *Reference {
	if m != nil {
		return m.Target
	}
	return nil
}

// Component results
type UsCoreSmokingstatus_Component struct {
	// xml:id (or equivalent in JSON)
	Id *String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional Content defined by implementations
	Extension []*Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of component observation (code / type)
	Code  *CodeableConcept                     `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Value *UsCoreSmokingstatus_Component_Value `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Why the component result is missing
	DataAbsentReason *CodeableConcept `protobuf:"bytes,6,opt,name=data_absent_reason,json=dataAbsentReason,proto3" json:"data_absent_reason,omitempty"`
	// High, low, normal, etc.
	Interpretation *CodeableConcept `protobuf:"bytes,7,opt,name=interpretation,proto3" json:"interpretation,omitempty"`
	// Provides guide for interpretation of component result
	ReferenceRange       []*UsCoreSmokingstatus_ReferenceRange `protobuf:"bytes,8,rep,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *UsCoreSmokingstatus_Component) Reset()         { *m = UsCoreSmokingstatus_Component{} }
func (m *UsCoreSmokingstatus_Component) String() string { return proto.CompactTextString(m) }
func (*UsCoreSmokingstatus_Component) ProtoMessage()    {}
func (*UsCoreSmokingstatus_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{22, 4}
}

func (m *UsCoreSmokingstatus_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreSmokingstatus_Component.Unmarshal(m, b)
}
func (m *UsCoreSmokingstatus_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreSmokingstatus_Component.Marshal(b, m, deterministic)
}
func (m *UsCoreSmokingstatus_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreSmokingstatus_Component.Merge(m, src)
}
func (m *UsCoreSmokingstatus_Component) XXX_Size() int {
	return xxx_messageInfo_UsCoreSmokingstatus_Component.Size(m)
}
func (m *UsCoreSmokingstatus_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreSmokingstatus_Component.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreSmokingstatus_Component proto.InternalMessageInfo

func (m *UsCoreSmokingstatus_Component) GetId() *String {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component) GetExtension() []*Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component) GetModifierExtension() []*Extension {
	if m != nil {
		return m.ModifierExtension
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component) GetCode() *CodeableConcept {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component) GetValue() *UsCoreSmokingstatus_Component_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component) GetDataAbsentReason() *CodeableConcept {
	if m != nil {
		return m.DataAbsentReason
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component) GetInterpretation() *CodeableConcept {
	if m != nil {
		return m.Interpretation
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component) GetReferenceRange() []*UsCoreSmokingstatus_ReferenceRange {
	if m != nil {
		return m.ReferenceRange
	}
	return nil
}

// Actual component result
type UsCoreSmokingstatus_Component_Value struct {
	// Types that are valid to be assigned to Value:
	//	*UsCoreSmokingstatus_Component_Value_Quantity
	//	*UsCoreSmokingstatus_Component_Value_CodeableConcept
	//	*UsCoreSmokingstatus_Component_Value_StringValue
	//	*UsCoreSmokingstatus_Component_Value_Range
	//	*UsCoreSmokingstatus_Component_Value_Ratio
	//	*UsCoreSmokingstatus_Component_Value_SampledData
	//	*UsCoreSmokingstatus_Component_Value_Attachment
	//	*UsCoreSmokingstatus_Component_Value_Time
	//	*UsCoreSmokingstatus_Component_Value_DateTime
	//	*UsCoreSmokingstatus_Component_Value_Period
	Value                isUsCoreSmokingstatus_Component_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *UsCoreSmokingstatus_Component_Value) Reset()         { *m = UsCoreSmokingstatus_Component_Value{} }
func (m *UsCoreSmokingstatus_Component_Value) String() string { return proto.CompactTextString(m) }
func (*UsCoreSmokingstatus_Component_Value) ProtoMessage()    {}
func (*UsCoreSmokingstatus_Component_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d5a16463e675e0, []int{22, 4, 0}
}

func (m *UsCoreSmokingstatus_Component_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsCoreSmokingstatus_Component_Value.Unmarshal(m, b)
}
func (m *UsCoreSmokingstatus_Component_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsCoreSmokingstatus_Component_Value.Marshal(b, m, deterministic)
}
func (m *UsCoreSmokingstatus_Component_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsCoreSmokingstatus_Component_Value.Merge(m, src)
}
func (m *UsCoreSmokingstatus_Component_Value) XXX_Size() int {
	return xxx_messageInfo_UsCoreSmokingstatus_Component_Value.Size(m)
}
func (m *UsCoreSmokingstatus_Component_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_UsCoreSmokingstatus_Component_Value.DiscardUnknown(m)
}

var xxx_messageInfo_UsCoreSmokingstatus_Component_Value proto.InternalMessageInfo

type isUsCoreSmokingstatus_Component_Value_Value interface {
	isUsCoreSmokingstatus_Component_Value_Value()
}

type UsCoreSmokingstatus_Component_Value_Quantity struct {
	Quantity *Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type UsCoreSmokingstatus_Component_Value_CodeableConcept struct {
	CodeableConcept *CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type UsCoreSmokingstatus_Component_Value_StringValue struct {
	StringValue *String `protobuf:"bytes,3,opt,name=string_value,json=string,proto3,oneof"`
}

type UsCoreSmokingstatus_Component_Value_Range struct {
	Range *Range `protobuf:"bytes,4,opt,name=range,proto3,oneof"`
}

type UsCoreSmokingstatus_Component_Value_Ratio struct {
	Ratio *Ratio `protobuf:"bytes,5,opt,name=ratio,proto3,oneof"`
}

type UsCoreSmokingstatus_Component_Value_SampledData struct {
	SampledData *SampledData `protobuf:"bytes,6,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type UsCoreSmokingstatus_Component_Value_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,7,opt,name=attachment,proto3,oneof"`
}

type UsCoreSmokingstatus_Component_Value_Time struct {
	Time *Time `protobuf:"bytes,8,opt,name=time,proto3,oneof"`
}

type UsCoreSmokingstatus_Component_Value_DateTime struct {
	DateTime *DateTime `protobuf:"bytes,9,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type UsCoreSmokingstatus_Component_Value_Period struct {
	Period *Period `protobuf:"bytes,10,opt,name=period,proto3,oneof"`
}

func (*UsCoreSmokingstatus_Component_Value_Quantity) isUsCoreSmokingstatus_Component_Value_Value() {}

func (*UsCoreSmokingstatus_Component_Value_CodeableConcept) isUsCoreSmokingstatus_Component_Value_Value() {
}

func (*UsCoreSmokingstatus_Component_Value_StringValue) isUsCoreSmokingstatus_Component_Value_Value() {
}

func (*UsCoreSmokingstatus_Component_Value_Range) isUsCoreSmokingstatus_Component_Value_Value() {}

func (*UsCoreSmokingstatus_Component_Value_Ratio) isUsCoreSmokingstatus_Component_Value_Value() {}

func (*UsCoreSmokingstatus_Component_Value_SampledData) isUsCoreSmokingstatus_Component_Value_Value() {
}

func (*UsCoreSmokingstatus_Component_Value_Attachment) isUsCoreSmokingstatus_Component_Value_Value() {}

func (*UsCoreSmokingstatus_Component_Value_Time) isUsCoreSmokingstatus_Component_Value_Value() {}

func (*UsCoreSmokingstatus_Component_Value_DateTime) isUsCoreSmokingstatus_Component_Value_Value() {}

func (*UsCoreSmokingstatus_Component_Value_Period) isUsCoreSmokingstatus_Component_Value_Value() {}

func (m *UsCoreSmokingstatus_Component_Value) GetValue() isUsCoreSmokingstatus_Component_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetQuantity() *Quantity {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetCodeableConcept() *CodeableConcept {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetStringValue() *String {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetRange() *Range {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_Range); ok {
		return x.Range
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetRatio() *Ratio {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetSampledData() *SampledData {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetAttachment() *Attachment {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetTime() *Time {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_Time); ok {
		return x.Time
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetDateTime() *DateTime {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (m *UsCoreSmokingstatus_Component_Value) GetPeriod() *Period {
	if x, ok := m.GetValue().(*UsCoreSmokingstatus_Component_Value_Period); ok {
		return x.Period
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UsCoreSmokingstatus_Component_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UsCoreSmokingstatus_Component_Value_OneofMarshaler, _UsCoreSmokingstatus_Component_Value_OneofUnmarshaler, _UsCoreSmokingstatus_Component_Value_OneofSizer, []interface{}{
		(*UsCoreSmokingstatus_Component_Value_Quantity)(nil),
		(*UsCoreSmokingstatus_Component_Value_CodeableConcept)(nil),
		(*UsCoreSmokingstatus_Component_Value_StringValue)(nil),
		(*UsCoreSmokingstatus_Component_Value_Range)(nil),
		(*UsCoreSmokingstatus_Component_Value_Ratio)(nil),
		(*UsCoreSmokingstatus_Component_Value_SampledData)(nil),
		(*UsCoreSmokingstatus_Component_Value_Attachment)(nil),
		(*UsCoreSmokingstatus_Component_Value_Time)(nil),
		(*UsCoreSmokingstatus_Component_Value_DateTime)(nil),
		(*UsCoreSmokingstatus_Component_Value_Period)(nil),
	}
}

func _UsCoreSmokingstatus_Component_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UsCoreSmokingstatus_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *UsCoreSmokingstatus_Component_Value_Quantity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quantity); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Component_Value_CodeableConcept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CodeableConcept); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Component_Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Component_Value_Range:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Range); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Component_Value_Ratio:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ratio); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Component_Value_SampledData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SampledData); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Component_Value_Attachment:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attachment); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Component_Value_Time:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Time); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Component_Value_DateTime:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DateTime); err != nil {
			return err
		}
	case *UsCoreSmokingstatus_Component_Value_Period:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Period); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UsCoreSmokingstatus_Component_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _UsCoreSmokingstatus_Component_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UsCoreSmokingstatus_Component_Value)
	switch tag {
	case 1: // value.quantity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Quantity)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_Quantity{msg}
		return true, err
	case 2: // value.codeable_concept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CodeableConcept)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_CodeableConcept{msg}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(String)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_StringValue{msg}
		return true, err
	case 4: // value.range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Range)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_Range{msg}
		return true, err
	case 5: // value.ratio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ratio)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_Ratio{msg}
		return true, err
	case 6: // value.sampled_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SampledData)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_SampledData{msg}
		return true, err
	case 7: // value.attachment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attachment)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_Attachment{msg}
		return true, err
	case 8: // value.time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Time)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_Time{msg}
		return true, err
	case 9: // value.date_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DateTime)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_DateTime{msg}
		return true, err
	case 10: // value.period
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Period)
		err := b.DecodeMessage(msg)
		m.Value = &UsCoreSmokingstatus_Component_Value_Period{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UsCoreSmokingstatus_Component_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UsCoreSmokingstatus_Component_Value)
	// value
	switch x := m.Value.(type) {
	case *UsCoreSmokingstatus_Component_Value_Quantity:
		s := proto.Size(x.Quantity)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Component_Value_CodeableConcept:
		s := proto.Size(x.CodeableConcept)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Component_Value_StringValue:
		s := proto.Size(x.StringValue)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Component_Value_Range:
		s := proto.Size(x.Range)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Component_Value_Ratio:
		s := proto.Size(x.Ratio)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Component_Value_SampledData:
		s := proto.Size(x.SampledData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Component_Value_Attachment:
		s := proto.Size(x.Attachment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Component_Value_Time:
		s := proto.Size(x.Time)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Component_Value_DateTime:
		s := proto.Size(x.DateTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UsCoreSmokingstatus_Component_Value_Period:
		s := proto.Size(x.Period)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*UsCoreAllergyintolerance)(nil), "google.fhir.stu3.uscore.UsCoreAllergyintolerance")
	proto.RegisterType((*UsCoreAllergyintolerance_Onset)(nil), "google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset")
	proto.RegisterType((*UsCoreAllergyintolerance_Reaction)(nil), "google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction")
	proto.RegisterType((*PatientUSCoreBirthSexExtension)(nil), "google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension")
	proto.RegisterType((*UsCoreCareplan)(nil), "google.fhir.stu3.uscore.UsCoreCareplan")
	proto.RegisterType((*UsCoreCareplan_Activity)(nil), "google.fhir.stu3.uscore.UsCoreCareplan.Activity")
	proto.RegisterType((*UsCoreCareplan_Activity_Detail)(nil), "google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail")
	proto.RegisterType((*UsCoreCareplan_Activity_Detail_Scheduled)(nil), "google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled")
	proto.RegisterType((*UsCoreCareplan_Activity_Detail_Product)(nil), "google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product")
	proto.RegisterType((*UsCoreCareteam)(nil), "google.fhir.stu3.uscore.UsCoreCareteam")
	proto.RegisterType((*UsCoreCareteam_Participant)(nil), "google.fhir.stu3.uscore.UsCoreCareteam.Participant")
	proto.RegisterType((*UsCoreCondition)(nil), "google.fhir.stu3.uscore.UsCoreCondition")
	proto.RegisterType((*UsCoreCondition_Onset)(nil), "google.fhir.stu3.uscore.UsCoreCondition.Onset")
	proto.RegisterType((*UsCoreCondition_Abatement)(nil), "google.fhir.stu3.uscore.UsCoreCondition.Abatement")
	proto.RegisterType((*UsCoreCondition_Stage)(nil), "google.fhir.stu3.uscore.UsCoreCondition.Stage")
	proto.RegisterType((*UsCoreCondition_Evidence)(nil), "google.fhir.stu3.uscore.UsCoreCondition.Evidence")
	proto.RegisterType((*UsCoreDevice)(nil), "google.fhir.stu3.uscore.UsCoreDevice")
	proto.RegisterType((*UsCoreDevice_Udi)(nil), "google.fhir.stu3.uscore.UsCoreDevice.Udi")
	proto.RegisterType((*UsCoreDiagnosticreport)(nil), "google.fhir.stu3.uscore.UsCoreDiagnosticreport")
	proto.RegisterType((*UsCoreDiagnosticreport_Effective)(nil), "google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective")
	proto.RegisterType((*UsCoreDiagnosticreport_Performer)(nil), "google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer")
	proto.RegisterType((*UsCoreDiagnosticreport_Image)(nil), "google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image")
	proto.RegisterType((*ContactPointUsCoreDirect)(nil), "google.fhir.stu3.uscore.ContactPointUsCoreDirect")
	proto.RegisterType((*PatientUSCoreEthnicityExtension)(nil), "google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension")
	proto.RegisterType((*UsCoreGoal)(nil), "google.fhir.stu3.uscore.UsCoreGoal")
	proto.RegisterType((*UsCoreGoal_Start)(nil), "google.fhir.stu3.uscore.UsCoreGoal.Start")
	proto.RegisterType((*UsCoreGoal_Target)(nil), "google.fhir.stu3.uscore.UsCoreGoal.Target")
	proto.RegisterType((*UsCoreGoal_Target_Detail)(nil), "google.fhir.stu3.uscore.UsCoreGoal.Target.Detail")
	proto.RegisterType((*UsCoreGoal_Target_Due)(nil), "google.fhir.stu3.uscore.UsCoreGoal.Target.Due")
	proto.RegisterType((*UsCoreImmunization)(nil), "google.fhir.stu3.uscore.UsCoreImmunization")
	proto.RegisterType((*UsCoreImmunization_Practitioner)(nil), "google.fhir.stu3.uscore.UsCoreImmunization.Practitioner")
	proto.RegisterType((*UsCoreImmunization_Explanation)(nil), "google.fhir.stu3.uscore.UsCoreImmunization.Explanation")
	proto.RegisterType((*UsCoreImmunization_Reaction)(nil), "google.fhir.stu3.uscore.UsCoreImmunization.Reaction")
	proto.RegisterType((*UsCoreImmunization_VaccinationProtocol)(nil), "google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol")
	proto.RegisterType((*UsCoreLocation)(nil), "google.fhir.stu3.uscore.UsCoreLocation")
	proto.RegisterType((*UsCoreLocation_Position)(nil), "google.fhir.stu3.uscore.UsCoreLocation.Position")
	proto.RegisterType((*UsCoreMedication)(nil), "google.fhir.stu3.uscore.UsCoreMedication")
	proto.RegisterType((*UsCoreMedication_Ingredient)(nil), "google.fhir.stu3.uscore.UsCoreMedication.Ingredient")
	proto.RegisterType((*UsCoreMedication_Ingredient_Item)(nil), "google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item")
	proto.RegisterType((*UsCoreMedication_Package)(nil), "google.fhir.stu3.uscore.UsCoreMedication.Package")
	proto.RegisterType((*UsCoreMedication_Package_Content)(nil), "google.fhir.stu3.uscore.UsCoreMedication.Package.Content")
	proto.RegisterType((*UsCoreMedication_Package_Content_Item)(nil), "google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item")
	proto.RegisterType((*UsCoreMedication_Package_Batch)(nil), "google.fhir.stu3.uscore.UsCoreMedication.Package.Batch")
	proto.RegisterType((*UsCoreMedicationrequest)(nil), "google.fhir.stu3.uscore.UsCoreMedicationrequest")
	proto.RegisterType((*UsCoreMedicationrequest_Medication)(nil), "google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication")
	proto.RegisterType((*UsCoreMedicationrequest_Requester)(nil), "google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester")
	proto.RegisterType((*UsCoreMedicationrequest_DispenseRequest)(nil), "google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest")
	proto.RegisterType((*UsCoreMedicationrequest_Substitution)(nil), "google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution")
	proto.RegisterType((*UsCoreMedicationstatement)(nil), "google.fhir.stu3.uscore.UsCoreMedicationstatement")
	proto.RegisterType((*UsCoreMedicationstatement_Medication)(nil), "google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication")
	proto.RegisterType((*UsCoreMedicationstatement_Effective)(nil), "google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective")
	proto.RegisterType((*UsCoreObservationresults)(nil), "google.fhir.stu3.uscore.UsCoreObservationresults")
	proto.RegisterType((*UsCoreObservationresults_Effective)(nil), "google.fhir.stu3.uscore.UsCoreObservationresults.Effective")
	proto.RegisterType((*UsCoreObservationresults_Value)(nil), "google.fhir.stu3.uscore.UsCoreObservationresults.Value")
	proto.RegisterType((*UsCoreObservationresults_ReferenceRange)(nil), "google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange")
	proto.RegisterType((*UsCoreObservationresults_Related)(nil), "google.fhir.stu3.uscore.UsCoreObservationresults.Related")
	proto.RegisterType((*UsCoreObservationresults_Component)(nil), "google.fhir.stu3.uscore.UsCoreObservationresults.Component")
	proto.RegisterType((*UsCoreObservationresults_Component_Value)(nil), "google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value")
	proto.RegisterType((*UsCoreOrganization)(nil), "google.fhir.stu3.uscore.UsCoreOrganization")
	proto.RegisterType((*UsCoreOrganization_Contact)(nil), "google.fhir.stu3.uscore.UsCoreOrganization.Contact")
	proto.RegisterType((*UsCorePatient)(nil), "google.fhir.stu3.uscore.UsCorePatient")
	proto.RegisterType((*UsCorePatient_Deceased)(nil), "google.fhir.stu3.uscore.UsCorePatient.Deceased")
	proto.RegisterType((*UsCorePatient_MultipleBirth)(nil), "google.fhir.stu3.uscore.UsCorePatient.MultipleBirth")
	proto.RegisterType((*UsCorePatient_Contact)(nil), "google.fhir.stu3.uscore.UsCorePatient.Contact")
	proto.RegisterType((*UsCorePatient_Communication)(nil), "google.fhir.stu3.uscore.UsCorePatient.Communication")
	proto.RegisterType((*UsCorePatient_Link)(nil), "google.fhir.stu3.uscore.UsCorePatient.Link")
	proto.RegisterType((*UsCorePractitioner)(nil), "google.fhir.stu3.uscore.UsCorePractitioner")
	proto.RegisterType((*UsCorePractitioner_Qualification)(nil), "google.fhir.stu3.uscore.UsCorePractitioner.Qualification")
	proto.RegisterType((*UsCoreProcedure)(nil), "google.fhir.stu3.uscore.UsCoreProcedure")
	proto.RegisterType((*UsCoreProcedure_Performed)(nil), "google.fhir.stu3.uscore.UsCoreProcedure.Performed")
	proto.RegisterType((*UsCoreProcedure_Performer)(nil), "google.fhir.stu3.uscore.UsCoreProcedure.Performer")
	proto.RegisterType((*UsCoreProcedure_FocalDevice)(nil), "google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice")
	proto.RegisterType((*CapabilityStatementProfileResourceAssociationExtension)(nil), "google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension")
	proto.RegisterType((*PatientUSCoreRaceExtension)(nil), "google.fhir.stu3.uscore.PatientUSCoreRaceExtension")
	proto.RegisterType((*UsCoreSmokingstatus)(nil), "google.fhir.stu3.uscore.UsCoreSmokingstatus")
	proto.RegisterType((*UsCoreSmokingstatus_Effective)(nil), "google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective")
	proto.RegisterType((*UsCoreSmokingstatus_Value)(nil), "google.fhir.stu3.uscore.UsCoreSmokingstatus.Value")
	proto.RegisterType((*UsCoreSmokingstatus_ReferenceRange)(nil), "google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange")
	proto.RegisterType((*UsCoreSmokingstatus_Related)(nil), "google.fhir.stu3.uscore.UsCoreSmokingstatus.Related")
	proto.RegisterType((*UsCoreSmokingstatus_Component)(nil), "google.fhir.stu3.uscore.UsCoreSmokingstatus.Component")
	proto.RegisterType((*UsCoreSmokingstatus_Component_Value)(nil), "google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value")
}

func init() { proto.RegisterFile("proto/stu3/uscore.proto", fileDescriptor_f3d5a16463e675e0) }

var fileDescriptor_f3d5a16463e675e0 = []byte{
	// 8956 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x7b, 0x6c, 0x5c, 0xd9,
	0x79, 0x9f, 0x66, 0x38, 0x33, 0x9c, 0xf9, 0x38, 0x43, 0x52, 0x87, 0x92, 0x76, 0x76, 0xf6, 0x19,
	0x26, 0x68, 0xd6, 0x8e, 0x97, 0xb2, 0xb5, 0x5a, 0x3d, 0xa8, 0x5d, 0x49, 0x7c, 0x48, 0x22, 0x57,
	0x2b, 0x89, 0xba, 0x94, 0x36, 0x8d, 0x93, 0x66, 0x7a, 0x79, 0xef, 0x21, 0x79, 0xa2, 0x99, 0x7b,
	0x66, 0xef, 0xbd, 0xc3, 0x15, 0x93, 0xa0, 0xb6, 0xd3, 0x3c, 0x6a, 0x2f, 0x50, 0x3b, 0xde, 0x20,
	0x6e, 0xb7, 0x48, 0x0d, 0xb4, 0x40, 0x83, 0xf8, 0x8f, 0xba, 0xb5, 0x51, 0xbb, 0x68, 0x9b, 0xa4,
	0xe9, 0x1f, 0x05, 0x52, 0xf4, 0x0f, 0x37, 0xb0, 0x8b, 0x00, 0x2d, 0x5a, 0x38, 0x36, 0x10, 0x20,
	0x45, 0x03, 0xb7, 0x36, 0x8a, 0x14, 0x75, 0x9b, 0xe2, 0x3c, 0xee, 0xbd, 0x67, 0x86, 0x1c, 0xce,
	0x39, 0x77, 0x48, 0x4a, 0xe2, 0xce, 0x7f, 0xf3, 0xb8, 0xdf, 0x77, 0xce, 0x3d, 0x8f, 0xef, 0x7c,
	0xcf, 0xdf, 0x81, 0xa7, 0x5a, 0x3e, 0x0d, 0xe9, 0xe9, 0x20, 0x6c, 0xbf, 0x72, 0xba, 0x1d, 0x38,
	0xd4, 0xc7, 0x33, 0xfc, 0x17, 0xf4, 0xd4, 0x06, 0xa5, 0x1b, 0x0d, 0x3c, 0xb3, 0xbe, 0x49, 0xfc,
	0x19, 0xf6, 0xf7, 0x8c, 0xf8, 0xbb, 0xf6, 0xac, 0x42, 0x61, 0x7b, 0x1e, 0x0d, 0xed, 0x90, 0x50,
	0x2f, 0x10, 0x64, 0xb5, 0x53, 0xca, 0xbf, 0x0e, 0x75, 0x71, 0xf4, 0x7b, 0x4d, 0xf9, 0xdd, 0xb5,
	0x43, 0x3b, 0xdc, 0x6e, 0xc5, 0xff, 0x3d, 0xaf, 0xfc, 0xd7, 0xc4, 0xa1, 0xdd, 0xfd, 0xbf, 0x4a,
	0xeb, 0xe3, 0x80, 0xb6, 0x7d, 0x27, 0xfe, 0xef, 0xb9, 0x1d, 0xfd, 0xaf, 0x2b, 0xcd, 0x4e, 0x7f,
	0xe9, 0x69, 0xa8, 0xde, 0x0f, 0x16, 0xa8, 0x8f, 0xe7, 0x1a, 0x0d, 0xec, 0x6f, 0x6c, 0x13, 0x2f,
	0xa4, 0x0d, 0xec, 0xdb, 0x9e, 0x83, 0xd1, 0x87, 0x21, 0x4b, 0xdc, 0x6a, 0xe6, 0xc5, 0xcc, 0x4b,
	0x63, 0x67, 0x6a, 0x33, 0x3b, 0xde, 0x97, 0x73, 0x98, 0x59, 0x76, 0xad, 0x2c, 0x71, 0xd1, 0x47,
	0x21, 0xc7, 0xba, 0x56, 0xcd, 0xf2, 0xa7, 0x9f, 0xed, 0xf5, 0xf4, 0x2d, 0x1c, 0xda, 0x16, 0x7f,
	0x12, 0xcd, 0xc3, 0x38, 0x69, 0xb6, 0x1a, 0xc4, 0x21, 0x61, 0xdd, 0x6f, 0x37, 0x70, 0x50, 0x1d,
	0xe1, 0xb4, 0xcf, 0xf4, 0xa2, 0xbd, 0xef, 0x13, 0xab, 0x12, 0x91, 0x58, 0x8c, 0x02, 0x5d, 0x85,
	0x62, 0xc3, 0xf6, 0x36, 0xda, 0xf6, 0x06, 0xae, 0xe6, 0x38, 0xf5, 0x8f, 0xf5, 0xa2, 0x7e, 0x53,
	0x3e, 0xb7, 0x40, 0x5d, 0x6c, 0xc5, 0x54, 0xe8, 0x55, 0xc8, 0x85, 0xf8, 0x61, 0x58, 0xcd, 0x73,
	0xea, 0x1f, 0xe9, 0x45, 0x7d, 0xdb, 0xf6, 0x7d, 0x3b, 0x24, 0x5b, 0xd8, 0xe2, 0x8f, 0xa3, 0x1b,
	0x50, 0x72, 0xa8, 0x17, 0xda, 0xc4, 0xc3, 0x6e, 0xb5, 0xf0, 0xe2, 0xc8, 0x4b, 0x63, 0x67, 0x3e,
	0xd4, 0x8b, 0x76, 0x21, 0x7a, 0xd0, 0x92, 0x73, 0x63, 0x25, 0xb4, 0xe8, 0x0a, 0x94, 0xf0, 0xc3,
	0x10, 0x7b, 0x01, 0xa1, 0x5e, 0x75, 0x94, 0x33, 0xea, 0xd9, 0x89, 0x6b, 0xd1, 0x83, 0x56, 0x42,
	0x83, 0x56, 0x00, 0x35, 0xa9, 0x4b, 0xd6, 0x09, 0xf6, 0xeb, 0x09, 0xa7, 0xa2, 0x2e, 0xa7, 0xe3,
	0x11, 0x71, 0xfc, 0x13, 0x9a, 0x07, 0x20, 0x2e, 0xf6, 0x42, 0xfe, 0x73, 0xb5, 0xc4, 0x39, 0x4d,
	0xf7, 0x9e, 0xfe, 0xe8, 0x49, 0x4b, 0xa1, 0x42, 0x18, 0x26, 0x9c, 0x06, 0xf1, 0x88, 0x63, 0x37,
	0xea, 0x41, 0x68, 0x87, 0xed, 0xa0, 0x0a, 0x7c, 0x84, 0x5f, 0xeb, 0xc5, 0x48, 0xae, 0xbf, 0xe5,
	0x64, 0xfd, 0x2d, 0x48, 0x06, 0xab, 0x9c, 0x9e, 0xcf, 0xdb, 0xb8, 0xd3, 0xf1, 0x1b, 0xda, 0x86,
	0xa9, 0x2d, 0xec, 0x93, 0x75, 0xe2, 0xf0, 0x4d, 0x16, 0x35, 0x35, 0xc6, 0x9b, 0xba, 0xaa, 0xdf,
	0xd4, 0x5b, 0x0a, 0x93, 0xa4, 0xb9, 0xf9, 0xc2, 0xf7, 0xbe, 0xf1, 0x6b, 0xff, 0x2d, 0x97, 0xb1,
	0xd0, 0xd6, 0x8e, 0xff, 0xd1, 0x75, 0xc8, 0xb1, 0x3d, 0x58, 0x2d, 0xf3, 0xb6, 0xce, 0xe8, 0xb7,
	0x75, 0x6f, 0xbb, 0x25, 0x16, 0x21, 0xa7, 0x47, 0x16, 0x14, 0x1d, 0x3b, 0xc4, 0x1b, 0xd4, 0xdf,
	0xae, 0x56, 0xf8, 0x58, 0x9f, 0x33, 0x18, 0x22, 0x49, 0x29, 0x16, 0x75, 0xc4, 0x07, 0xfd, 0x34,
	0x8c, 0x39, 0x3e, 0x09, 0xd9, 0x40, 0x91, 0x70, 0xbb, 0x3a, 0xce, 0xbb, 0x78, 0xd1, 0x80, 0x6d,
	0x42, 0xcc, 0x39, 0xab, 0xdc, 0xd0, 0x02, 0xe4, 0x98, 0x04, 0xa9, 0x4e, 0x70, 0xae, 0x3f, 0xde,
	0x7b, 0xd5, 0xbb, 0xd8, 0x5e, 0x6b, 0xe0, 0x05, 0xea, 0x39, 0xb8, 0x15, 0xc6, 0x63, 0xc9, 0x89,
	0xd1, 0xdf, 0xca, 0xc0, 0x68, 0xcb, 0x0e, 0x09, 0xf6, 0xc2, 0xea, 0xe4, 0xde, 0x5b, 0xcf, 0xc2,
	0xeb, 0xd8, 0xc7, 0x9e, 0x83, 0xe7, 0x6f, 0x0a, 0x16, 0xff, 0xf3, 0x2f, 0x7f, 0xf8, 0x6f, 0x0a,
	0x57, 0x36, 0xc3, 0xb0, 0x35, 0x7b, 0xfa, 0xf4, 0x66, 0xe3, 0xfc, 0x0c, 0xf5, 0x37, 0x4e, 0x33,
	0xaa, 0xd3, 0xed, 0xe0, 0x34, 0x93, 0x70, 0xa7, 0x57, 0x43, 0xbf, 0xed, 0x84, 0x6d, 0x1f, 0x2f,
	0xe2, 0x75, 0xe2, 0x11, 0x36, 0x6b, 0xa7, 0xdb, 0xc1, 0xcb, 0xec, 0xbf, 0x97, 0x65, 0xab, 0x56,
	0xd4, 0x3c, 0xba, 0x0f, 0x79, 0xea, 0x05, 0x38, 0xac, 0x1e, 0xe7, 0xfd, 0x38, 0x3f, 0xd3, 0x43,
	0xb0, 0xcf, 0xf4, 0x92, 0x93, 0x33, 0x77, 0x18, 0xf9, 0x7c, 0xe1, 0x2f, 0xbe, 0xfd, 0x9d, 0x3f,
	0xcc, 0x67, 0x2c, 0xc1, 0x0d, 0x5d, 0x83, 0x8a, 0x1d, 0x04, 0xd8, 0x0f, 0xb1, 0x5b, 0x77, 0xed,
	0x10, 0x57, 0x11, 0x67, 0xff, 0x62, 0xaf, 0xd7, 0x5c, 0xb4, 0x43, 0x7c, 0x8f, 0x34, 0xb1, 0x55,
	0x8e, 0xc8, 0xd8, 0x2f, 0xe8, 0x1f, 0x67, 0xa0, 0xe8, 0x63, 0x87, 0xfa, 0x2e, 0xf6, 0xab, 0x53,
	0xba, 0x23, 0x45, 0xf9, 0x18, 0x9d, 0xdd, 0x6d, 0x8c, 0x76, 0x1b, 0x9b, 0x15, 0xdf, 0x76, 0x42,
	0xfe, 0x11, 0xfb, 0x9c, 0xf2, 0xb4, 0x36, 0xa5, 0x1c, 0xcd, 0xb8, 0x8f, 0xe8, 0xcf, 0x32, 0x50,
	0x94, 0x6f, 0xe0, 0x57, 0x4f, 0xe8, 0x76, 0xf8, 0x4b, 0x99, 0x54, 0xed, 0x72, 0xa2, 0x57, 0x75,
	0x89, 0x2c, 0xdc, 0xb0, 0x43, 0xec, 0xae, 0x60, 0x3f, 0xa0, 0x5e, 0xfa, 0x11, 0xb2, 0xe2, 0xf7,
	0x43, 0xcb, 0x30, 0xd1, 0xb0, 0x83, 0xb0, 0x4e, 0x1d, 0xa7, 0xed, 0xf3, 0x37, 0xa9, 0x9e, 0xd4,
	0x9c, 0xe6, 0x71, 0x46, 0x78, 0x27, 0xa6, 0x43, 0xe7, 0x20, 0xe7, 0xd1, 0x10, 0x57, 0x4f, 0xed,
	0x2d, 0x6f, 0xe7, 0x62, 0x8d, 0xc2, 0xe2, 0xcf, 0xa3, 0xb7, 0xd8, 0xfa, 0x60, 0x9d, 0xa3, 0x5e,
	0xf5, 0x29, 0x4e, 0x3b, 0x6b, 0xbe, 0x82, 0x2d, 0xc9, 0xc1, 0x8a, 0x79, 0xd5, 0xbe, 0x9a, 0x85,
	0x3c, 0x5f, 0xd8, 0xec, 0x88, 0x62, 0x0b, 0xb8, 0x1e, 0x92, 0x26, 0x96, 0xda, 0x40, 0xdf, 0xd7,
	0x5b, 0x3a, 0x66, 0x15, 0x5d, 0xf9, 0x19, 0x9d, 0x86, 0x11, 0x76, 0x40, 0x67, 0xf7, 0x3e, 0xde,
	0xe7, 0x36, 0x18, 0x15, 0x7b, 0x12, 0x5d, 0x80, 0x42, 0x0b, 0xfb, 0x84, 0xba, 0x52, 0x25, 0x78,
	0xbe, 0x17, 0xcd, 0x0a, 0x7f, 0x6a, 0xe9, 0x98, 0x25, 0x9f, 0x47, 0xaf, 0x42, 0xde, 0xb7, 0xbd,
	0x58, 0x1b, 0x78, 0xae, 0xe7, 0xca, 0x63, 0x0f, 0x2d, 0x1d, 0xb3, 0xc4, 0xd3, 0xe8, 0x32, 0x94,
	0x83, 0xd0, 0x27, 0xde, 0x46, 0x7d, 0xcb, 0x6e, 0xb4, 0xb1, 0xd4, 0x06, 0x7a, 0x36, 0xbb, 0xca,
	0x9f, 0x65, 0xcd, 0x0a, 0xaa, 0xf9, 0x51, 0x29, 0x43, 0x6a, 0x7f, 0x90, 0x87, 0x62, 0x34, 0x98,
	0x68, 0x46, 0xd1, 0x9f, 0xfa, 0xf0, 0xe2, 0x3a, 0x54, 0x87, 0x2e, 0x90, 0xdd, 0x37, 0x5d, 0x60,
	0x64, 0x00, 0x5d, 0xe0, 0x1a, 0x94, 0x82, 0xf6, 0x5a, 0x10, 0xb2, 0x55, 0x22, 0xc7, 0x54, 0x57,
	0xe2, 0x5b, 0x09, 0x25, 0xba, 0x0f, 0x95, 0xa6, 0xed, 0x91, 0x75, 0x1c, 0x88, 0xb5, 0x5b, 0xcd,
	0xf3, 0x3e, 0x19, 0x1f, 0x1e, 0x9d, 0x5c, 0xd0, 0x55, 0x18, 0x73, 0x71, 0xe0, 0xf8, 0xa4, 0xc5,
	0x99, 0x16, 0xb4, 0x46, 0x5a, 0x25, 0x41, 0xe7, 0x22, 0xe1, 0x3f, 0xaa, 0xb9, 0x6d, 0xa5, 0x74,
	0xb7, 0xa0, 0x18, 0x60, 0xa6, 0x15, 0x84, 0xdb, 0xd5, 0x22, 0x27, 0x35, 0x38, 0xb5, 0x57, 0x25,
	0xa5, 0x38, 0xb5, 0x23, 0x3e, 0xe8, 0x36, 0x8c, 0xe3, 0x87, 0x2d, 0x1a, 0xb4, 0x7d, 0x5c, 0xf7,
	0x69, 0x3b, 0xc4, 0xd5, 0x92, 0xd9, 0x80, 0x57, 0x22, 0x72, 0x8b, 0x51, 0xc7, 0x12, 0x05, 0xcc,
	0x24, 0xca, 0xec, 0x6f, 0x66, 0xfe, 0xf5, 0x17, 0xbf, 0xf3, 0xb5, 0xfc, 0xc8, 0xfb, 0xff, 0xec,
	0x6f, 0xbf, 0x57, 0x98, 0xd5, 0x95, 0x90, 0x3b, 0x5f, 0xf3, 0x2b, 0xff, 0xef, 0xbb, 0x5f, 0x28,
	0xbc, 0x91, 0xf6, 0x9c, 0xb6, 0x77, 0x48, 0xa9, 0xe9, 0xef, 0x64, 0xe1, 0x79, 0x29, 0xf8, 0xef,
	0xaf, 0x32, 0x49, 0x36, 0x4f, 0xfc, 0x70, 0x73, 0x15, 0x3f, 0x4c, 0xd6, 0xeb, 0xa1, 0x6f, 0xb9,
	0x37, 0x00, 0xb8, 0xc8, 0xe0, 0x56, 0x95, 0x14, 0x57, 0x3f, 0xd1, 0x47, 0x00, 0x47, 0xdd, 0xe6,
	0xf3, 0x5f, 0xe2, 0xe4, 0xec, 0xe3, 0xec, 0xdf, 0x14, 0x03, 0x9f, 0xe5, 0x03, 0xff, 0x31, 0xdd,
	0x81, 0x8f, 0xbb, 0xc5, 0xc7, 0xfb, 0x6a, 0xda, 0xf1, 0x5e, 0x63, 0x9d, 0x0a, 0xf0, 0xc3, 0xe9,
	0x7f, 0x75, 0x16, 0xc6, 0x45, 0x3f, 0x17, 0x6c, 0x1f, 0xb7, 0x1a, 0xb6, 0xf7, 0x81, 0x30, 0x04,
	0x5f, 0x37, 0x34, 0x04, 0x13, 0x85, 0x76, 0x68, 0x10, 0x6a, 0x18, 0x84, 0xff, 0x22, 0x03, 0xe0,
	0xc6, 0xab, 0x4e, 0xca, 0x24, 0x0d, 0xc5, 0xf0, 0x1d, 0xae, 0xa7, 0x9d, 0xd3, 0xd6, 0xd3, 0x1a,
	0xb6, 0x97, 0x7c, 0x35, 0x53, 0x0f, 0xef, 0xb6, 0x71, 0xc0, 0x3e, 0x78, 0x36, 0xf1, 0xb1, 0xa5,
	0xf4, 0x16, 0x85, 0x50, 0x5c, 0xb3, 0x03, 0xec, 0xd6, 0xa9, 0x57, 0x1d, 0xd3, 0xed, 0xf9, 0x39,
	0xde, 0xfa, 0x47, 0x75, 0x5b, 0x67, 0x9b, 0x8d, 0xf5, 0xde, 0x1a, 0xe5, 0x4d, 0xdd, 0xf1, 0x50,
	0x9b, 0x69, 0x76, 0xad, 0x86, 0xed, 0xe0, 0xa0, 0x5a, 0x3e, 0xe8, 0x56, 0xe3, 0xa6, 0x90, 0xcf,
	0x2c, 0x33, 0x3f, 0xac, 0xd3, 0x75, 0x69, 0x8f, 0x1e, 0x60, 0xab, 0x05, 0xd6, 0xd2, 0x9d, 0x75,
	0xf4, 0x06, 0x14, 0xa4, 0xe9, 0x2e, 0x6c, 0xd5, 0x0f, 0xf7, 0xdc, 0x3a, 0x92, 0x72, 0x17, 0x23,
	0x5d, 0x72, 0x60, 0xbc, 0x88, 0x17, 0x32, 0xc3, 0x72, 0x42, 0x8f, 0xd7, 0x32, 0x7f, 0xba, 0x93,
	0x97, 0xe0, 0x80, 0x6e, 0x2a, 0xc6, 0xf9, 0x64, 0x3a, 0x95, 0x25, 0xb1, 0xca, 0xcf, 0x42, 0x3e,
	0x24, 0x61, 0x03, 0x4b, 0x43, 0xb3, 0xdf, 0xf1, 0x24, 0x1e, 0xee, 0xd6, 0x71, 0x90, 0xb9, 0x8e,
	0xc3, 0x6c, 0xed, 0xa0, 0xbd, 0xf6, 0x73, 0xd8, 0x09, 0xf5, 0x2d, 0xc8, 0xfd, 0xb5, 0xb5, 0x65,
	0xf3, 0xe8, 0xcb, 0x19, 0x18, 0x65, 0xa2, 0x8e, 0x09, 0x5a, 0x6d, 0xdb, 0x50, 0x98, 0xa4, 0xfa,
	0xe7, 0xa1, 0xe7, 0xd0, 0xb6, 0x17, 0x4a, 0x4b, 0x56, 0x7b, 0xf7, 0x5f, 0x6b, 0x91, 0x80, 0xba,
	0xf8, 0xce, 0x3a, 0x5b, 0x16, 0x56, 0xd4, 0x4b, 0x74, 0x2e, 0x36, 0x45, 0x4e, 0xea, 0x98, 0x22,
	0xb1, 0x21, 0xf2, 0x1f, 0xb3, 0x50, 0xb0, 0xdb, 0xe1, 0x26, 0xf5, 0xa5, 0x45, 0xa7, 0xf1, 0xa2,
	0xef, 0x67, 0xd3, 0x1b, 0xc1, 0xe9, 0x6d, 0xfd, 0xc3, 0x30, 0x9f, 0xef, 0xf8, 0x1b, 0xb6, 0x47,
	0x7e, 0xde, 0x8e, 0x85, 0xb2, 0x91, 0xa8, 0xb8, 0x87, 0xed, 0xa6, 0x25, 0x47, 0x13, 0x6d, 0x41,
	0xc9, 0xb1, 0x7d, 0x5c, 0x0f, 0xb1, 0xdd, 0x94, 0x06, 0xef, 0xc1, 0x08, 0x28, 0xde, 0x6a, 0xd1,
	0x91, 0x9f, 0xd0, 0x43, 0x28, 0xd9, 0xae, 0xeb, 0xe3, 0x20, 0xc0, 0x41, 0xb5, 0xaa, 0xdb, 0xee,
	0x79, 0xb3, 0xb5, 0xbb, 0x40, 0x3d, 0x97, 0x7f, 0xb2, 0x92, 0xc6, 0xd0, 0x2f, 0x65, 0x60, 0x22,
	0x68, 0xb7, 0x5a, 0xd4, 0x0f, 0x99, 0x85, 0x4a, 0xbc, 0x75, 0x5a, 0x7d, 0xfa, 0x80, 0x5e, 0x3c,
	0xd6, 0x48, 0xc6, 0x93, 0x16, 0x97, 0xbd, 0x75, 0x8a, 0x08, 0xe4, 0x36, 0xa8, 0xdd, 0xa8, 0xd6,
	0x74, 0x1b, 0x3e, 0xc3, 0x1b, 0xfe, 0x88, 0x6e, 0xc3, 0x37, 0xa8, 0xdd, 0xb0, 0x78, 0x13, 0xe8,
	0x4d, 0x28, 0xb2, 0x25, 0xba, 0xc5, 0x6c, 0xab, 0x67, 0x78, 0x73, 0x1f, 0xed, 0xa3, 0x50, 0x47,
	0x8a, 0xea, 0xcc, 0x9c, 0xa4, 0xb3, 0x62, 0x0e, 0xb1, 0x15, 0xf4, 0xac, 0x99, 0x15, 0x54, 0xfb,
	0x27, 0xcf, 0x41, 0x31, 0x62, 0x77, 0x14, 0x2c, 0x79, 0x1b, 0xaa, 0xb4, 0x1d, 0x3a, 0xb4, 0x29,
	0x4c, 0x15, 0x76, 0x54, 0xd5, 0x1d, 0x71, 0x56, 0x55, 0x73, 0x46, 0x47, 0x9b, 0x75, 0x4a, 0x32,
	0xea, 0xfa, 0x1d, 0xfd, 0x6a, 0x06, 0x8e, 0x47, 0x6d, 0xf8, 0xd1, 0x42, 0x90, 0xa6, 0xfe, 0x01,
	0x2e, 0xd5, 0x49, 0xd9, 0x66, 0xcc, 0x09, 0x5d, 0x86, 0x62, 0xcb, 0xa7, 0x1b, 0x6c, 0xff, 0x48,
	0x5d, 0x5c, 0x67, 0xde, 0x63, 0x1a, 0xf4, 0x7e, 0x1e, 0x4a, 0xc9, 0x0b, 0x8c, 0xea, 0x1e, 0x54,
	0x7f, 0x9c, 0xe3, 0x6f, 0xf0, 0x8a, 0xb6, 0xc9, 0xdc, 0x6a, 0x51, 0xe2, 0x85, 0xcd, 0x48, 0x86,
	0xbf, 0xa6, 0x2f, 0x26, 0x9a, 0xcd, 0xb6, 0x27, 0xe3, 0x11, 0x16, 0x7e, 0x9b, 0x29, 0xae, 0x66,
	0xb2, 0x7c, 0x11, 0x6f, 0x11, 0x07, 0xab, 0xa4, 0x17, 0x75, 0x49, 0x6f, 0x61, 0x77, 0x97, 0x96,
	0xb5, 0x35, 0xf4, 0xdb, 0xed, 0xd0, 0xe7, 0x9f, 0xee, 0xf8, 0xae, 0x3c, 0x81, 0xb4, 0x85, 0xc4,
	0x3d, 0x3b, 0x78, 0xc0, 0x29, 0x2e, 0xe8, 0x9f, 0x76, 0xd4, 0xc1, 0x6e, 0xdb, 0xef, 0x78, 0xd5,
	0xf3, 0xfa, 0x4b, 0x6c, 0x1d, 0xfb, 0xbe, 0xdd, 0x50, 0x89, 0xb5, 0x1d, 0x22, 0x6f, 0x11, 0xb6,
	0xef, 0x56, 0xfc, 0x44, 0x13, 0x33, 0x3b, 0x33, 0x65, 0xa3, 0x37, 0x7c, 0xda, 0x6e, 0x59, 0xc9,
	0x72, 0x44, 0x77, 0xa0, 0xe0, 0xe2, 0xd0, 0x26, 0x0d, 0xe9, 0x78, 0x3a, 0x6f, 0x2a, 0x1c, 0x67,
	0x16, 0x39, 0xb9, 0x25, 0xd9, 0xd4, 0xfe, 0xed, 0x14, 0x14, 0xc4, 0x4f, 0x47, 0x41, 0xce, 0x2d,
	0x28, 0x2a, 0xbb, 0xa1, 0xc3, 0x32, 0x51, 0xd5, 0xff, 0x4f, 0xa7, 0xb5, 0x9a, 0xd7, 0x95, 0x00,
	0x5f, 0xcf, 0x0c, 0x6c, 0xae, 0xea, 0x3b, 0xdc, 0xe4, 0x74, 0xee, 0xbf, 0xb9, 0x7b, 0x49, 0x46,
	0xf8, 0x0a, 0x66, 0xc3, 0x27, 0x22, 0x7b, 0x4b, 0x30, 0xe6, 0x63, 0x3b, 0xa0, 0x9e, 0xf0, 0x88,
	0x8d, 0x9a, 0x1d, 0x2d, 0x20, 0x68, 0xd9, 0xcf, 0xe8, 0x57, 0x32, 0x30, 0x29, 0x59, 0x25, 0xc2,
	0xb8, 0x78, 0xe0, 0x9a, 0xd7, 0x84, 0x68, 0x33, 0x39, 0x4d, 0x22, 0xd5, 0xa7, 0x74, 0xf0, 0xaa,
	0x8f, 0x15, 0xdb, 0xc1, 0xb0, 0x77, 0x58, 0x39, 0xb2, 0x5d, 0xa3, 0x45, 0xb0, 0x87, 0x3d, 0xbc,
	0x00, 0x15, 0xf1, 0xa9, 0x2e, 0x5e, 0x4c, 0x46, 0xc7, 0xfb, 0x6d, 0xef, 0xb2, 0x20, 0xb2, 0x38,
	0x0d, 0xba, 0x02, 0xd0, 0xf2, 0xe9, 0x26, 0x59, 0x23, 0x21, 0x76, 0x65, 0xcc, 0xfb, 0x85, 0x5e,
	0x1c, 0xe6, 0x29, 0x6d, 0x60, 0xdb, 0xb3, 0x14, 0x12, 0xb4, 0x01, 0xa5, 0xc0, 0xd9, 0xc4, 0x6e,
	0xbb, 0x81, 0xdd, 0x6a, 0x85, 0xd3, 0xcf, 0xa5, 0x14, 0x5c, 0x33, 0xab, 0x11, 0xa3, 0x38, 0xe6,
	0x9a, 0xf0, 0x46, 0x6d, 0x28, 0x36, 0xa8, 0x38, 0x9f, 0xa4, 0x33, 0x61, 0xff, 0x55, 0x8f, 0x37,
	0x65, 0x03, 0x56, 0xdc, 0x14, 0xfa, 0xcf, 0x59, 0x28, 0xb5, 0xb0, 0xbf, 0x4e, 0xfd, 0x26, 0xf6,
	0xab, 0x13, 0x86, 0x26, 0x5f, 0x7a, 0xeb, 0x2d, 0xbd, 0x09, 0x36, 0x80, 0xdd, 0x97, 0xca, 0x42,
	0x35, 0x37, 0xbe, 0x92, 0x01, 0x45, 0x36, 0x8c, 0xb6, 0x7c, 0xea, 0xb6, 0x9d, 0x28, 0x5d, 0xe0,
	0x4a, 0xda, 0xc5, 0xb3, 0x22, 0xd8, 0xc4, 0x4b, 0x27, 0xe2, 0x8b, 0x96, 0xa1, 0xec, 0xda, 0xa4,
	0xb1, 0x5d, 0xb7, 0x9b, 0xb4, 0xed, 0x45, 0xe9, 0x00, 0x7f, 0xa5, 0xe7, 0x36, 0x21, 0xcd, 0x56,
	0x03, 0xdf, 0x6d, 0xdb, 0x5e, 0xc8, 0x0c, 0x8e, 0x31, 0x4e, 0x3b, 0xc7, 0x49, 0xd1, 0x3c, 0x14,
	0xdf, 0x96, 0x7f, 0x48, 0x87, 0x8d, 0x2e, 0x9b, 0x98, 0xae, 0xdb, 0xef, 0x33, 0x65, 0xec, 0xf7,
	0xa9, 0xfd, 0xfb, 0x0c, 0x94, 0xe2, 0xad, 0x82, 0x2e, 0x40, 0x21, 0x24, 0x4d, 0xe2, 0x6d, 0xf4,
	0x3b, 0xde, 0xef, 0xf1, 0xa7, 0x96, 0x8e, 0x59, 0xf2, 0x79, 0x25, 0x1a, 0x9b, 0x35, 0x8c, 0xc6,
	0x76, 0x87, 0x55, 0x47, 0x0c, 0xc3, 0xaa, 0x63, 0x8a, 0xd0, 0xa8, 0x7d, 0x31, 0x0b, 0xa3, 0x72,
	0xf2, 0xd0, 0x3d, 0x98, 0xdc, 0x61, 0xc4, 0x64, 0x8c, 0x4e, 0xab, 0xa5, 0x63, 0xd6, 0x84, 0xd3,
	0x65, 0xbf, 0x7c, 0x25, 0xa3, 0xaa, 0xfd, 0x59, 0xb3, 0x64, 0x8b, 0x33, 0xe6, 0xfa, 0xb3, 0xd9,
	0x09, 0xb5, 0x1a, 0x45, 0x53, 0x97, 0x8e, 0x29, 0xea, 0xe0, 0x7c, 0x29, 0xde, 0x19, 0xb3, 0xbf,
	0xa4, 0x06, 0xee, 0x8c, 0x9d, 0xb1, 0x83, 0x85, 0x8f, 0x1c, 0xb9, 0xdf, 0xa6, 0xbf, 0x72, 0x42,
	0x0d, 0x1f, 0x85, 0xd8, 0x6e, 0x0e, 0xf3, 0x08, 0x87, 0x79, 0x84, 0x69, 0xc3, 0x46, 0x6f, 0x74,
	0x29, 0x44, 0x7b, 0x3a, 0xf3, 0xd9, 0xa1, 0xb1, 0xa7, 0x22, 0x94, 0x58, 0x06, 0x63, 0x66, 0x6a,
	0x69, 0x62, 0x19, 0x9c, 0x81, 0x9c, 0x67, 0x37, 0xa3, 0xb4, 0xbf, 0x7e, 0xf2, 0x98, 0x3f, 0xdb,
	0xe1, 0x80, 0xaf, 0x3c, 0x3e, 0x0e, 0xf8, 0xf1, 0x27, 0xcc, 0x01, 0x3f, 0x61, 0xe4, 0x80, 0xff,
	0x6b, 0x30, 0xd6, 0xb2, 0xfd, 0x90, 0x38, 0xa4, 0x65, 0xf3, 0x24, 0x43, 0x36, 0xe1, 0xaf, 0x68,
	0x68, 0x0d, 0x4c, 0x64, 0xcd, 0xac, 0x24, 0xa4, 0xf1, 0x3a, 0x52, 0xf9, 0x75, 0x9b, 0x39, 0xc7,
	0xf7, 0xd9, 0xcc, 0x41, 0x87, 0x6f, 0xe6, 0x7c, 0x3e, 0x03, 0x27, 0x9b, 0xb6, 0x67, 0x6f, 0xb0,
	0xf3, 0x9a, 0x2a, 0xda, 0x62, 0x75, 0x4a, 0xb7, 0x33, 0xb3, 0xe9, 0x55, 0x52, 0xeb, 0x44, 0xd4,
	0xb6, 0xfa, 0x6b, 0xec, 0xbd, 0x3d, 0x61, 0xe8, 0xbd, 0xfd, 0xed, 0x02, 0x8c, 0x29, 0x73, 0x78,
	0x34, 0x1c, 0x1b, 0x39, 0x9f, 0x36, 0x4c, 0xb3, 0xb0, 0x92, 0x34, 0x05, 0x46, 0xcc, 0xc3, 0x52,
	0x4d, 0xdc, 0x5c, 0xc3, 0xbe, 0xbe, 0x53, 0xe3, 0xfd, 0xec, 0x3e, 0x8a, 0x22, 0xce, 0x64, 0x31,
	0x35, 0x93, 0x6e, 0xf3, 0x27, 0x35, 0x27, 0xba, 0x3f, 0xe6, 0x90, 0x25, 0x47, 0x13, 0x7d, 0x02,
	0xca, 0xd4, 0xab, 0xaf, 0xe1, 0x4d, 0xbb, 0xb1, 0x5e, 0xa7, 0xeb, 0xd2, 0x77, 0x72, 0xc0, 0x7b,
	0x06, 0xa8, 0x37, 0xcf, 0x5b, 0xbc, 0xb3, 0xae, 0xc8, 0xc9, 0x51, 0x13, 0x39, 0x39, 0x80, 0xd2,
	0xc8, 0x8e, 0xdb, 0xc1, 0x95, 0x46, 0x26, 0x6e, 0xa7, 0xff, 0xec, 0x39, 0x98, 0x90, 0x12, 0x38,
	0x12, 0x50, 0x43, 0xad, 0x71, 0xa8, 0x35, 0xa6, 0xd5, 0x1a, 0xed, 0x5e, 0xd5, 0x27, 0x17, 0xf6,
	0x18, 0x25, 0xb1, 0xec, 0x76, 0x16, 0x9d, 0xec, 0x5e, 0x79, 0xd2, 0xda, 0xab, 0xf2, 0xe4, 0x7c,
	0xdf, 0x66, 0x52, 0x14, 0x9c, 0xa8, 0xb9, 0x28, 0xe5, 0x41, 0x73, 0x51, 0x16, 0x94, 0xfc, 0xd5,
	0x8a, 0xa1, 0x97, 0x3c, 0x4e, 0x58, 0x8d, 0x2a, 0x41, 0xc6, 0x07, 0xa9, 0x04, 0x59, 0x84, 0xd2,
	0x1a, 0x75, 0xb7, 0xeb, 0x01, 0x09, 0xb1, 0xf4, 0x9b, 0xe9, 0x77, 0x85, 0x51, 0xae, 0x92, 0xb0,
	0x53, 0xc5, 0x9e, 0x7c, 0x7c, 0x54, 0xec, 0xe3, 0x4f, 0x84, 0x8a, 0xfd, 0x66, 0x94, 0x04, 0x2d,
	0x7c, 0x55, 0x33, 0xfd, 0x94, 0xe4, 0x68, 0x11, 0xef, 0x5e, 0xf8, 0xf2, 0x57, 0xa1, 0x64, 0xaf,
	0xd9, 0x21, 0x6e, 0x62, 0x2f, 0xca, 0x37, 0x3a, 0xa3, 0xcd, 0x71, 0x2e, 0xa2, 0x4c, 0x5c, 0xbb,
	0x31, 0xb3, 0x9d, 0x25, 0x35, 0x27, 0x52, 0x95, 0xd4, 0x74, 0x54, 0xa8, 0x9c, 0x34, 0xac, 0x50,
	0x39, 0xbc, 0x9a, 0x9a, 0x41, 0xb4, 0x92, 0xa4, 0x42, 0x65, 0x11, 0xf2, 0x41, 0xc8, 0x0e, 0xa8,
	0x53, 0x86, 0x73, 0xbb, 0xca, 0xa8, 0x2c, 0x41, 0x8c, 0x6e, 0x41, 0x11, 0x6f, 0x31, 0x01, 0xeb,
	0x60, 0x99, 0x73, 0xf3, 0x31, 0x6d, 0x46, 0xd7, 0x24, 0xa1, 0x15, 0xb3, 0x88, 0xb5, 0xfa, 0xaa,
	0xa1, 0x56, 0x3f, 0xac, 0x49, 0x49, 0x53, 0x93, 0xf2, 0x17, 0x59, 0x28, 0xc5, 0xfb, 0xea, 0x11,
	0x8c, 0xdc, 0x25, 0x18, 0x5d, 0x13, 0x11, 0x21, 0x39, 0x74, 0xfd, 0x02, 0x47, 0x4b, 0xc7, 0xac,
	0x88, 0x42, 0x19, 0xf6, 0x5c, 0xda, 0x61, 0xcf, 0x0f, 0x34, 0xec, 0x05, 0x73, 0x9f, 0x75, 0x2c,
	0xb1, 0x6a, 0xef, 0xe6, 0x20, 0xcf, 0x37, 0xd2, 0x51, 0x30, 0x40, 0xe7, 0xd8, 0x11, 0xdb, 0x6c,
	0xda, 0xe6, 0x81, 0xf5, 0x88, 0x8e, 0xc7, 0xd5, 0x99, 0x68, 0x0a, 0x02, 0x7e, 0x3a, 0x68, 0xa7,
	0x06, 0xc9, 0xb8, 0xba, 0x76, 0x6c, 0x3c, 0xd2, 0xe2, 0x96, 0x9b, 0x2d, 0x1f, 0x07, 0x41, 0x64,
	0xe3, 0x69, 0xa7, 0x8d, 0x2c, 0x12, 0x7b, 0xc3, 0xa3, 0x41, 0x48, 0x1c, 0x0b, 0xb7, 0xa8, 0x1f,
	0x9a, 0xe5, 0xf5, 0xdc, 0x59, 0x0b, 0xb0, 0xbf, 0x25, 0x4d, 0xb4, 0xe4, 0x75, 0x6b, 0xff, 0x37,
	0x0b, 0xc5, 0x48, 0x1a, 0x1e, 0x85, 0x05, 0x11, 0xe5, 0x09, 0x18, 0xa6, 0x8f, 0x09, 0xbd, 0xef,
	0xed, 0x38, 0x8d, 0xe5, 0xc0, 0x13, 0xc4, 0x64, 0x43, 0xb3, 0xbf, 0xac, 0x9a, 0xba, 0xe6, 0x2e,
	0x33, 0x6e, 0xeb, 0xce, 0xa5, 0xb6, 0x75, 0x23, 0x36, 0xd3, 0xbf, 0x75, 0x02, 0xca, 0xe2, 0x90,
	0x14, 0x59, 0x58, 0x43, 0x4b, 0x77, 0x68, 0xe9, 0xa6, 0xb5, 0x74, 0x17, 0x60, 0xa4, 0xed, 0x12,
	0x69, 0xdd, 0x7e, 0xa8, 0x8f, 0x4e, 0x26, 0x96, 0xdb, 0xcc, 0x7d, 0x97, 0xc4, 0x36, 0x18, 0xa3,
	0x46, 0x8b, 0x71, 0x90, 0x45, 0x98, 0xaf, 0x1f, 0xe9, 0xd5, 0x89, 0xeb, 0x4b, 0xcb, 0x96, 0x60,
	0xa2, 0x60, 0x32, 0x24, 0xe1, 0x15, 0x15, 0x10, 0xc1, 0xdc, 0x1a, 0xe4, 0x68, 0x08, 0xaf, 0x03,
	0x34, 0x68, 0x58, 0xf7, 0xda, 0xdc, 0x45, 0x59, 0xd1, 0x92, 0x8e, 0xa5, 0x06, 0x0d, 0x6f, 0x73,
	0x02, 0x34, 0x0f, 0xe5, 0xa6, 0xed, 0xb5, 0xd7, 0x6d, 0xbe, 0x0b, 0x7d, 0x69, 0x99, 0xf6, 0x4d,
	0x75, 0x51, 0x69, 0xd0, 0x4d, 0x98, 0x54, 0xbe, 0x0b, 0x43, 0x63, 0x42, 0xd3, 0xd0, 0x98, 0x50,
	0x28, 0xb9, 0xad, 0xb1, 0x0c, 0x13, 0xf8, 0x61, 0x8b, 0xf8, 0xc2, 0x49, 0xc0, 0x79, 0x4d, 0xea,
	0x16, 0x88, 0x27, 0x84, 0x9c, 0xd5, 0x59, 0xc8, 0x37, 0xa9, 0x8b, 0x1b, 0xba, 0xe5, 0x23, 0xfc,
	0x61, 0x74, 0x01, 0x46, 0xb7, 0xb0, 0x1f, 0xe8, 0x97, 0x8e, 0x44, 0x8f, 0x77, 0x40, 0x34, 0x4c,
	0x3d, 0x5a, 0x88, 0x86, 0x00, 0xf2, 0xf4, 0x1d, 0xcf, 0x04, 0x4f, 0x60, 0x10, 0xaf, 0xaa, 0x68,
	0x0b, 0x5d, 0x16, 0x66, 0xbc, 0xed, 0x84, 0xd5, 0x93, 0x7c, 0x6f, 0xfe, 0xd8, 0x9e, 0x82, 0xc7,
	0x09, 0x57, 0x28, 0x61, 0x9d, 0x96, 0x44, 0x1d, 0x89, 0x48, 0xa7, 0x0e, 0x2f, 0x11, 0xe9, 0x65,
	0x18, 0x69, 0xfb, 0x8d, 0xea, 0x53, 0xfd, 0x65, 0x3c, 0x7b, 0x2e, 0xad, 0x29, 0x86, 0xae, 0x40,
	0x21, 0xb0, 0xd7, 0x71, 0xb8, 0x2d, 0x4b, 0x11, 0xb4, 0x4f, 0x7f, 0x49, 0x56, 0xfb, 0x42, 0x1e,
	0x46, 0xee, 0xbb, 0xe4, 0x28, 0xe8, 0x41, 0x37, 0xe1, 0xb8, 0xcb, 0xa5, 0x62, 0x5d, 0x91, 0xe7,
	0x39, 0xad, 0x37, 0x9a, 0x14, 0x84, 0x89, 0x74, 0x8f, 0x03, 0xcc, 0x79, 0x83, 0x00, 0xf3, 0x15,
	0x28, 0xff, 0x5c, 0xdb, 0x27, 0x81, 0x4b, 0x1c, 0xa5, 0x10, 0x7e, 0xcf, 0xc9, 0xef, 0x20, 0x40,
	0x73, 0x50, 0x71, 0x6c, 0xdf, 0x67, 0x43, 0xb2, 0x59, 0xf7, 0xeb, 0xeb, 0xfd, 0x62, 0x08, 0xb2,
	0x75, 0x90, 0x44, 0x4b, 0xd6, 0x75, 0xf4, 0x06, 0x4c, 0x44, 0x2c, 0xec, 0x3a, 0xa9, 0xbb, 0x75,
	0x47, 0xe6, 0x27, 0xf7, 0xdc, 0x36, 0xf3, 0x76, 0x80, 0xcf, 0x9d, 0x9d, 0x27, 0x9e, 0xed, 0x6f,
	0x5b, 0x63, 0x92, 0x78, 0x6e, 0x79, 0x71, 0x01, 0xbd, 0x02, 0x05, 0x12, 0x04, 0x6d, 0x7e, 0x2a,
	0xf6, 0x7d, 0x13, 0xf9, 0x28, 0xba, 0x01, 0x80, 0xbd, 0xd0, 0xdf, 0xae, 0xf3, 0x53, 0x48, 0x9c,
	0x88, 0x2f, 0xf5, 0x24, 0x5c, 0x5c, 0xbe, 0xc6, 0x1e, 0x8e, 0xc1, 0x78, 0x4a, 0x38, 0xfa, 0x3a,
	0xfb, 0x37, 0x14, 0x2d, 0x71, 0xc6, 0x2c, 0xa1, 0x9e, 0xab, 0x88, 0x97, 0xd3, 0xca, 0x3d, 0xb1,
	0x16, 0xa6, 0x7f, 0xfb, 0x39, 0x38, 0x25, 0x0f, 0xec, 0xd8, 0x0c, 0xf1, 0xb9, 0x19, 0x32, 0xd4,
	0x14, 0x87, 0x9a, 0x62, 0x5a, 0x4d, 0xf1, 0xab, 0x23, 0x4a, 0x11, 0xb3, 0x76, 0xf9, 0xf5, 0x0f,
	0xb2, 0xe9, 0x2a, 0x7b, 0x39, 0xd5, 0xbc, 0x2e, 0xd5, 0x32, 0x2f, 0x67, 0x91, 0xc7, 0x2f, 0x76,
	0x68, 0xb3, 0x89, 0x3d, 0x37, 0x09, 0xcd, 0x3e, 0xc2, 0xd2, 0x94, 0x47, 0x53, 0x68, 0x92, 0xd4,
	0x80, 0x5b, 0x5d, 0xaa, 0x79, 0xcf, 0x84, 0xf0, 0x6e, 0x8f, 0xc5, 0x1e, 0x79, 0x50, 0x9d, 0x81,
	0xa4, 0xcc, 0xa0, 0x81, 0x24, 0xe1, 0x03, 0xa8, 0x0c, 0x8a, 0x06, 0x16, 0x45, 0x6f, 0xc6, 0x1f,
	0x9f, 0xe8, 0xcd, 0xc4, 0x13, 0x11, 0xbd, 0xc1, 0x50, 0xc2, 0xeb, 0xeb, 0xd8, 0x61, 0xb2, 0x50,
	0x1a, 0x17, 0x17, 0xfb, 0x19, 0x82, 0x5d, 0xe7, 0xca, 0xcc, 0xb5, 0x88, 0xc1, 0x7c, 0x59, 0x8c,
	0x6a, 0x14, 0x7c, 0x89, 0x39, 0x33, 0x85, 0x8f, 0x1f, 0xb4, 0xae, 0xb4, 0x3f, 0x7a, 0x3a, 0x71,
	0x97, 0xbd, 0x20, 0x54, 0xd3, 0xa6, 0x24, 0x19, 0xfa, 0x49, 0x35, 0x41, 0x5e, 0xe4, 0x37, 0x19,
	0xf7, 0x73, 0x25, 0x62, 0xa0, 0xe6, 0x86, 0xb7, 0xa1, 0x18, 0xb4, 0xb0, 0x43, 0x9a, 0xd8, 0x20,
	0x55, 0xc9, 0x50, 0xd1, 0x5e, 0x95, 0x0d, 0x58, 0x71, 0x53, 0xe8, 0xdd, 0x0c, 0x14, 0x7c, 0x1c,
	0xb4, 0x1b, 0xa1, 0xcc, 0x4e, 0xd2, 0x68, 0x75, 0x85, 0xb7, 0x9a, 0x1a, 0x13, 0x87, 0x26, 0x8e,
	0x45, 0xd1, 0x72, 0x60, 0xc9, 0x2e, 0xa0, 0xdf, 0xcf, 0x40, 0x85, 0x34, 0x45, 0xf2, 0x56, 0x10,
	0xb6, 0xdd, 0x6d, 0x69, 0xb4, 0x68, 0x43, 0x6c, 0x9c, 0xd5, 0x17, 0xd6, 0xbc, 0x95, 0x55, 0xd6,
	0x88, 0x99, 0x94, 0x93, 0x94, 0xb7, 0x24, 0x86, 0x93, 0x55, 0x26, 0x0a, 0x2b, 0x74, 0x13, 0xf2,
	0xec, 0x7b, 0x84, 0x80, 0xf6, 0xaa, 0xe9, 0xda, 0x60, 0xdc, 0xb1, 0x25, 0x78, 0xa0, 0xcb, 0x00,
	0x0e, 0xf5, 0x9c, 0x46, 0x3b, 0x10, 0xb8, 0x68, 0x7a, 0xda, 0x6c, 0x4c, 0x81, 0x56, 0x80, 0x67,
	0x87, 0xbb, 0x75, 0x57, 0x34, 0x43, 0xa2, 0x9a, 0x6f, 0x6d, 0x3b, 0x67, 0x9c, 0xd3, 0x2f, 0x46,
	0xe4, 0x68, 0x19, 0xc6, 0x5b, 0x3e, 0x0e, 0xb0, 0x17, 0x62, 0xb7, 0xce, 0x56, 0xae, 0x34, 0x9c,
	0x7a, 0x9b, 0x5c, 0x61, 0x68, 0x3b, 0x9b, 0x4d, 0x26, 0x9d, 0x2a, 0x31, 0xe5, 0x75, 0xea, 0x37,
	0x6b, 0xef, 0x65, 0xa0, 0x74, 0x4d, 0xd9, 0x98, 0x03, 0x06, 0x74, 0x52, 0xe7, 0xf7, 0xcf, 0x8f,
	0x29, 0xa2, 0xa7, 0xf6, 0x27, 0x23, 0x50, 0x8a, 0xf7, 0xe7, 0x11, 0x71, 0x6f, 0xa7, 0x48, 0xb8,
	0x93, 0x89, 0x76, 0xdf, 0xcc, 0x40, 0xde, 0x76, 0x42, 0x6a, 0x92, 0x67, 0x97, 0x51, 0x4e, 0xb4,
	0xc7, 0x2c, 0x45, 0xce, 0x12, 0x2f, 0x53, 0xfb, 0x5f, 0x59, 0xc8, 0xf3, 0x8d, 0x76, 0x14, 0x26,
	0xf8, 0x02, 0x3b, 0xea, 0x9b, 0x3c, 0x12, 0xa5, 0x67, 0xad, 0x47, 0x8f, 0xa3, 0x16, 0xe4, 0x1a,
	0xc4, 0x7b, 0xa0, 0x3f, 0xb7, 0x17, 0x95, 0xa9, 0x7d, 0xd9, 0x44, 0x9d, 0xb5, 0x2d, 0xde, 0xd2,
	0xec, 0xe7, 0xd5, 0xd8, 0x45, 0xea, 0x38, 0x16, 0xb7, 0x4f, 0x97, 0x52, 0xdb, 0xa7, 0x5d, 0x22,
	0x77, 0xfa, 0x5b, 0x59, 0xa8, 0xaa, 0xce, 0xaf, 0x48, 0x32, 0xfb, 0x4c, 0x93, 0x3a, 0xf4, 0x05,
	0xb2, 0x08, 0x15, 0x01, 0xc5, 0x66, 0x16, 0x6d, 0xb6, 0xca, 0x9c, 0x4a, 0x7e, 0x9b, 0xfd, 0xd4,
	0x3e, 0x80, 0xb0, 0xa5, 0xf7, 0x00, 0xf0, 0xa1, 0x9b, 0xfe, 0xe6, 0x08, 0xbc, 0xd0, 0x01, 0x74,
	0x77, 0x2d, 0xdc, 0xf4, 0x98, 0x8d, 0xbd, 0xfd, 0x08, 0x91, 0xee, 0xe6, 0xa0, 0x4c, 0x9b, 0x6b,
	0xf5, 0xae, 0xe2, 0xea, 0xe7, 0xf7, 0x10, 0x8b, 0xbc, 0x22, 0x8d, 0x36, 0xd7, 0x22, 0x94, 0x62,
	0x34, 0x0b, 0x45, 0x11, 0x8a, 0xc3, 0xae, 0x8c, 0xfa, 0xf5, 0x23, 0x8f, 0x9f, 0x47, 0xb3, 0xd2,
	0x2d, 0xa0, 0x15, 0x8f, 0xef, 0x04, 0x67, 0x8b, 0x02, 0x7f, 0x03, 0xcd, 0x69, 0xea, 0xc0, 0x1f,
	0x8e, 0xe6, 0x6e, 0xfa, 0xbb, 0x4f, 0x03, 0x88, 0x2d, 0x72, 0x83, 0xda, 0x8d, 0xa1, 0x33, 0x67,
	0xe8, 0xcc, 0x49, 0xeb, 0xcc, 0xb9, 0xde, 0x55, 0x16, 0xd5, 0xb3, 0xbc, 0x94, 0x2d, 0xb4, 0x83,
	0x2e, 0x89, 0x5a, 0x80, 0x62, 0xcb, 0x27, 0x94, 0xe7, 0x92, 0x96, 0x0d, 0x73, 0x49, 0x23, 0x42,
	0x74, 0xb7, 0xb3, 0xdc, 0x35, 0xa5, 0x3b, 0xa1, 0x27, 0xee, 0xd9, 0x23, 0xf6, 0x2a, 0xdc, 0xe0,
	0x59, 0x78, 0x7e, 0xe4, 0x52, 0xe8, 0x17, 0xa8, 0x65, 0xb3, 0x36, 0xb3, 0xca, 0x08, 0x92, 0xe4,
	0x4a, 0x4e, 0x8f, 0xe6, 0xa1, 0x10, 0xda, 0xfe, 0x06, 0x8e, 0xb2, 0x5c, 0x3f, 0xac, 0xc3, 0xe9,
	0x1e, 0xa7, 0xb0, 0x24, 0x25, 0x7a, 0x1d, 0xc6, 0x24, 0x20, 0x00, 0x8f, 0x47, 0x1e, 0xdf, 0x5b,
	0xa4, 0x30, 0x93, 0xc1, 0x02, 0x41, 0xc0, 0xe3, 0x90, 0x3b, 0xf0, 0x04, 0x50, 0x0a, 0x3c, 0x81,
	0xff, 0x91, 0x81, 0x32, 0x7e, 0xc8, 0x93, 0x73, 0xb0, 0x5b, 0x5f, 0xdb, 0xd6, 0x8f, 0x30, 0x0e,
	0x82, 0x14, 0x7e, 0xd8, 0x20, 0x69, 0xd6, 0x58, 0xfc, 0x8e, 0xf3, 0xdb, 0xe8, 0x77, 0x46, 0x54,
	0x08, 0x31, 0x6d, 0x9f, 0xc1, 0x9f, 0x66, 0x53, 0x96, 0x78, 0xa5, 0x4e, 0x5a, 0xe2, 0x84, 0x97,
	0xcc, 0x9d, 0xae, 0x4c, 0xd0, 0xe0, 0x18, 0xcd, 0xe8, 0xd1, 0xb9, 0x5d, 0xb5, 0x5b, 0xb6, 0x48,
	0xf0, 0x60, 0x2e, 0xce, 0xcf, 0x52, 0x31, 0xd7, 0xa2, 0xb0, 0xe8, 0x49, 0xc3, 0xb0, 0xe8, 0x1b,
	0x50, 0x56, 0x51, 0xb6, 0xa4, 0x2f, 0x43, 0x5b, 0x1e, 0x8e, 0x29, 0xc8, 0x5a, 0xe8, 0xd3, 0xbb,
	0xc2, 0x69, 0x69, 0x43, 0xde, 0x5d, 0x4c, 0x9f, 0xb4, 0xb6, 0x03, 0x51, 0xab, 0xf6, 0x7e, 0x86,
	0x27, 0x32, 0xfa, 0x21, 0x3a, 0x03, 0x39, 0x2e, 0x36, 0x32, 0xfd, 0xc5, 0xc6, 0xd2, 0x31, 0x8b,
	0x3f, 0xbb, 0x6b, 0xb9, 0x7e, 0x76, 0xd0, 0x72, 0xfd, 0xf9, 0x51, 0x29, 0x54, 0x6b, 0x9f, 0x2b,
	0x40, 0x41, 0xc8, 0xb8, 0x23, 0x92, 0x66, 0xd9, 0xc4, 0x76, 0xd0, 0xf6, 0x8d, 0x3d, 0x0f, 0x11,
	0x1d, 0xba, 0xab, 0xe4, 0xd6, 0x65, 0x34, 0x92, 0xb5, 0x95, 0x53, 0x42, 0xc2, 0x64, 0xc4, 0xe7,
	0x8e, 0x64, 0x84, 0x96, 0x60, 0xc4, 0x8d, 0xb3, 0x61, 0x67, 0x4c, 0xf8, 0xb5, 0x71, 0xcc, 0x8c,
	0xb1, 0xa8, 0xfd, 0xd7, 0x4c, 0x0c, 0x37, 0x75, 0x59, 0xc1, 0xc9, 0xe8, 0xe3, 0xb9, 0x8a, 0x10,
	0x32, 0x96, 0x8e, 0x29, 0x18, 0x19, 0x71, 0x8a, 0x6f, 0xd6, 0x28, 0xc5, 0x77, 0xb7, 0xe5, 0x38,
	0x32, 0xf0, 0x72, 0x2c, 0x46, 0x83, 0x5e, 0xfb, 0x64, 0x06, 0x46, 0x16, 0xdb, 0x38, 0xd5, 0x56,
	0xb9, 0x0c, 0x45, 0xb7, 0x2d, 0xb2, 0x7e, 0xe4, 0x5b, 0xf5, 0x76, 0xe6, 0xc9, 0xe7, 0xb8, 0x33,
	0x4f, 0x7e, 0x9e, 0xcf, 0xf3, 0x79, 0x9a, 0xfd, 0x79, 0xc5, 0x5b, 0x60, 0x04, 0x44, 0xc4, 0x6d,
	0x9d, 0xd7, 0xd2, 0x2a, 0x3e, 0x1b, 0xd4, 0x6e, 0x4c, 0xff, 0xde, 0x8f, 0x02, 0x12, 0xeb, 0x40,
	0x8d, 0xeb, 0x0d, 0xcd, 0x9d, 0xa1, 0xb9, 0x93, 0xd6, 0xdc, 0x59, 0xed, 0x32, 0x77, 0x5e, 0xe9,
	0x49, 0xaf, 0x2c, 0xb8, 0xae, 0x0a, 0xbe, 0x1d, 0xb6, 0xcf, 0x22, 0x94, 0x3c, 0x1a, 0xd6, 0x37,
	0xc8, 0x16, 0x8e, 0x30, 0xb1, 0xfa, 0xb9, 0x8a, 0x92, 0xf8, 0xa7, 0x47, 0xc3, 0x1b, 0x8c, 0x10,
	0x59, 0x50, 0xde, 0xb2, 0x1d, 0x87, 0x78, 0xf2, 0xc0, 0x4f, 0x19, 0x50, 0x1d, 0x93, 0x4c, 0x16,
	0xba, 0x2f, 0x47, 0xaa, 0x3c, 0xda, 0xcc, 0xbb, 0x87, 0x50, 0xc2, 0x51, 0xb4, 0x52, 0xdf, 0x88,
	0x3a, 0x9f, 0x32, 0x1e, 0x6a, 0x25, 0x8d, 0xa1, 0xd7, 0xa4, 0xf0, 0xd4, 0x4c, 0xbd, 0x4c, 0x3c,
	0x3e, 0x5c, 0x8c, 0xde, 0x86, 0xf1, 0x96, 0x4f, 0x9a, 0xb6, 0xbf, 0x5d, 0x17, 0xbb, 0x44, 0xda,
	0x4b, 0xda, 0x33, 0x5c, 0x91, 0xe4, 0xab, 0x9c, 0x1a, 0xbd, 0x09, 0x15, 0xe1, 0xf3, 0xac, 0x53,
	0x9f, 0x6c, 0x10, 0x4f, 0x5a, 0x4d, 0xda, 0x47, 0x73, 0x59, 0x50, 0xdf, 0xe1, 0xc4, 0x1d, 0xa9,
	0x81, 0xe8, 0xf0, 0x52, 0x03, 0x3f, 0x95, 0xe9, 0x4a, 0x8f, 0x9d, 0x3a, 0x8c, 0x74, 0xca, 0xce,
	0xec, 0xda, 0xce, 0x04, 0xdf, 0x13, 0xa6, 0x09, 0xbe, 0xd7, 0x76, 0xe6, 0xd3, 0x9e, 0xd4, 0xb0,
	0x5f, 0xbb, 0x73, 0x69, 0x2f, 0x41, 0x8e, 0xd7, 0x9b, 0x9e, 0x32, 0x0c, 0xed, 0x30, 0x22, 0xf4,
	0x3a, 0xe4, 0xc5, 0xf5, 0x2c, 0x4f, 0x99, 0x51, 0x0b, 0x2a, 0x74, 0x13, 0x2a, 0x2e, 0x0d, 0x70,
	0x3d, 0xd6, 0x7c, 0xaa, 0x46, 0x08, 0x61, 0x65, 0x46, 0x1c, 0x7d, 0x43, 0x3f, 0x03, 0x65, 0x35,
	0xe0, 0x23, 0x63, 0x8a, 0x17, 0xfa, 0xe8, 0x67, 0xaa, 0x98, 0x9c, 0xe9, 0xb8, 0xda, 0xaa, 0x83,
	0x5b, 0x6c, 0x05, 0xd5, 0x0c, 0xad, 0xa0, 0x9f, 0x02, 0x66, 0xf8, 0x36, 0x6c, 0x4f, 0x2c, 0xf1,
	0x67, 0xb4, 0x70, 0x4a, 0x3b, 0x3a, 0x75, 0x2d, 0x21, 0xb7, 0x54, 0x5e, 0x68, 0x45, 0xb9, 0xee,
	0x4a, 0x40, 0x3a, 0x9f, 0x35, 0xe1, 0xbb, 0xf3, 0xa2, 0x2b, 0xe4, 0xc3, 0x09, 0x21, 0x7c, 0xc5,
	0x9a, 0xe2, 0xaf, 0xe4, 0xd0, 0x46, 0xf5, 0x39, 0xce, 0xfd, 0x8a, 0x09, 0xf7, 0xb7, 0x12, 0x3e,
	0x2b, 0x92, 0x8d, 0x35, 0xb5, 0xb5, 0xf3, 0xc7, 0xda, 0xa7, 0x47, 0xa0, 0xac, 0x8e, 0xfb, 0x07,
	0x3e, 0x5c, 0xba, 0x6d, 0x1c, 0x2d, 0xbd, 0xaa, 0x9c, 0x77, 0xe9, 0xae, 0x71, 0x93, 0x21, 0xcd,
	0xef, 0x66, 0x61, 0x4c, 0x59, 0x6e, 0x47, 0x61, 0x2a, 0xae, 0x40, 0x41, 0xfa, 0xe6, 0x0c, 0x4b,
	0xb3, 0x24, 0x19, 0xba, 0x1b, 0x43, 0x12, 0x25, 0x2a, 0x52, 0xde, 0x30, 0xff, 0x41, 0x30, 0xb8,
	0x2d, 0x15, 0xa5, 0xda, 0xd7, 0x46, 0x8e, 0xd6, 0xcd, 0x68, 0x67, 0xa5, 0x7e, 0x92, 0xd3, 0x2c,
	0xe7, 0x10, 0x7a, 0x49, 0xd8, 0x65, 0x99, 0x1f, 0xac, 0x1f, 0x27, 0x32, 0xde, 0x2f, 0xf1, 0x9b,
	0x64, 0xa8, 0x1f, 0x72, 0xf3, 0x42, 0x2b, 0x28, 0x1a, 0x13, 0xd4, 0xfe, 0xa4, 0x00, 0x53, 0xbb,
	0x08, 0xb6, 0xa3, 0x30, 0x87, 0x4b, 0xf2, 0x28, 0x0e, 0xf0, 0xdb, 0x6d, 0x9c, 0xdc, 0x70, 0xf7,
	0xa3, 0x3d, 0x13, 0x60, 0x68, 0x40, 0x98, 0xd9, 0xb6, 0xec, 0x85, 0xe2, 0x1c, 0x5e, 0x95, 0x84,
	0xdd, 0x68, 0x9d, 0x79, 0xf3, 0x5b, 0x5a, 0x7e, 0x01, 0x4a, 0xe2, 0x86, 0x0b, 0xa6, 0x12, 0x1c,
	0x0a, 0x7a, 0x50, 0xd2, 0x1e, 0x3a, 0x07, 0x85, 0x00, 0xfb, 0x04, 0x07, 0x9a, 0x89, 0xff, 0xf2,
	0x69, 0x74, 0x1d, 0xca, 0xe2, 0x53, 0x9d, 0x8d, 0x46, 0x20, 0x33, 0xfe, 0xb5, 0xc6, 0x6f, 0x4c,
	0x10, 0x2e, 0x32, 0x3a, 0xf4, 0x16, 0x8c, 0x8b, 0xe0, 0x44, 0xdd, 0x25, 0x01, 0xb6, 0x03, 0x2c,
	0x0d, 0x45, 0xf3, 0x0b, 0x02, 0x05, 0x9b, 0x45, 0xc1, 0x05, 0xad, 0xc0, 0x98, 0x98, 0x60, 0xd5,
	0x7a, 0x34, 0x66, 0x0a, 0x7c, 0xaa, 0x85, 0xd5, 0x78, 0x1f, 0x90, 0xc2, 0xb1, 0x13, 0x52, 0x59,
	0x5b, 0x36, 0x4e, 0x26, 0x0c, 0x45, 0x3c, 0x64, 0xf6, 0x33, 0x6a, 0x7a, 0xc7, 0xd9, 0x34, 0x79,
	0xd3, 0xdc, 0x71, 0x93, 0x3a, 0xd7, 0x87, 0x28, 0x9c, 0xa6, 0xff, 0xe8, 0x78, 0x04, 0xe1, 0x19,
	0x19, 0x11, 0x43, 0xe7, 0xcd, 0xd0, 0x79, 0x93, 0xd6, 0x79, 0x33, 0xaf, 0x0b, 0xe1, 0x19, 0x2d,
	0xb6, 0x5d, 0x6a, 0x4b, 0x6f, 0x01, 0xa2, 0x2d, 0x2c, 0x0c, 0xb8, 0x04, 0xd3, 0x69, 0x4c, 0x2b,
	0x03, 0xe5, 0xb8, 0x42, 0x29, 0x37, 0xf1, 0xac, 0x09, 0x88, 0x67, 0xe2, 0x59, 0xe0, 0xb5, 0x56,
	0x67, 0x21, 0x6f, 0x37, 0x88, 0x1d, 0xc8, 0xcb, 0xd1, 0xfa, 0x96, 0x61, 0xf2, 0x87, 0xbb, 0xcf,
	0x87, 0x71, 0xf3, 0xf3, 0xe1, 0x35, 0xc8, 0x35, 0x93, 0x6b, 0xb7, 0x5f, 0xea, 0x37, 0x88, 0xb7,
	0xa8, 0x2b, 0x6f, 0x19, 0x67, 0x54, 0x4c, 0x39, 0xe7, 0x65, 0x51, 0x93, 0x86, 0xca, 0x39, 0x2f,
	0xca, 0xbd, 0x0c, 0xa3, 0x21, 0x6e, 0x60, 0x87, 0x36, 0x25, 0xce, 0xa5, 0x66, 0x25, 0xa4, 0x24,
	0x42, 0x17, 0x61, 0x54, 0x46, 0xd6, 0xa4, 0xb7, 0xa3, 0xa7, 0xf6, 0x31, 0x27, 0x1e, 0xb3, 0xa2,
	0xe7, 0xd1, 0x9b, 0x50, 0x69, 0x6d, 0x6e, 0x07, 0x1c, 0xc9, 0x8b, 0xbf, 0xc0, 0x94, 0xa1, 0xdf,
	0x25, 0xa2, 0xbe, 0xc7, 0x5e, 0xe4, 0x4d, 0x28, 0xb6, 0xf8, 0x11, 0x44, 0x3d, 0xe9, 0x7a, 0xe8,
	0x77, 0xb3, 0x50, 0x34, 0x9c, 0xf2, 0xe8, 0xe2, 0xb7, 0xc4, 0xc8, 0x4f, 0xe8, 0x1f, 0xf4, 0x04,
	0xcc, 0xd4, 0x06, 0x15, 0x7a, 0x63, 0x1f, 0x33, 0x34, 0x77, 0x07, 0xd0, 0x54, 0x6e, 0xf3, 0x3b,
	0xf0, 0x22, 0xd4, 0xe8, 0x36, 0xbf, 0x36, 0x14, 0xb1, 0xe7, 0xf2, 0xbb, 0x6d, 0x0e, 0xec, 0x86,
	0xae, 0x6b, 0xb2, 0x01, 0x2b, 0x6e, 0xaa, 0xf6, 0x9b, 0x23, 0x50, 0x8c, 0xa6, 0xe9, 0x88, 0xdc,
	0xbd, 0xdc, 0xa0, 0xde, 0x06, 0x09, 0xdb, 0x6e, 0x74, 0xa4, 0xf5, 0xdc, 0x38, 0x8b, 0xd8, 0x21,
	0x4d, 0xbb, 0x11, 0xcb, 0xaa, 0x84, 0x12, 0x2d, 0xb0, 0x83, 0x31, 0x14, 0x5c, 0xf2, 0x66, 0x5c,
	0x62, 0x42, 0x66, 0x41, 0xd8, 0x0d, 0xc9, 0xa4, 0xa0, 0xc5, 0xc4, 0x8a, 0x09, 0x52, 0x42, 0x4c,
	0x46, 0xcb, 0x6a, 0x30, 0x88, 0xc9, 0xc8, 0xf9, 0x39, 0xfd, 0xfd, 0x1a, 0x4c, 0x8a, 0x3d, 0x9d,
	0x24, 0x2c, 0x0c, 0xd5, 0x9a, 0x0f, 0xa6, 0x5a, 0x13, 0x15, 0xad, 0x95, 0x06, 0x03, 0x2e, 0xec,
	0xd4, 0x6b, 0x3e, 0xd2, 0x7b, 0x45, 0xb8, 0xa4, 0xa7, 0x66, 0x33, 0x0b, 0x45, 0x12, 0xd4, 0xd7,
	0x7c, 0xdb, 0x73, 0x35, 0x83, 0x50, 0xd6, 0x28, 0x09, 0xe6, 0xd9, 0xf3, 0xe8, 0x36, 0x4c, 0x91,
	0xa0, 0x4e, 0xb7, 0xb0, 0x5f, 0x0f, 0x37, 0x71, 0x3d, 0x0a, 0xd3, 0x68, 0xde, 0xce, 0x32, 0x49,
	0x82, 0x3b, 0x5b, 0xd8, 0xbf, 0xb7, 0x89, 0x17, 0x64, 0xc8, 0x65, 0x47, 0x7c, 0xa0, 0x72, 0xf8,
	0xf1, 0x81, 0x4b, 0x90, 0xe3, 0xc5, 0x31, 0xe3, 0x86, 0x8a, 0x0a, 0x23, 0x42, 0xf7, 0x00, 0x88,
	0xb7, 0xe1, 0x63, 0x97, 0x88, 0xeb, 0x5f, 0x75, 0xdc, 0xc3, 0xc9, 0xec, 0xcc, 0x2c, 0xc7, 0xb4,
	0x96, 0xc2, 0x07, 0xdd, 0x85, 0x4a, 0xcb, 0x76, 0x1e, 0xd8, 0x1b, 0x58, 0x42, 0x82, 0x4d, 0x6a,
	0x25, 0x55, 0x28, 0x8c, 0x57, 0x04, 0xb9, 0x35, 0x2a, 0xf9, 0xa0, 0x0b, 0x51, 0xad, 0xd3, 0x71,
	0xed, 0x1a, 0x20, 0x41, 0x50, 0xfb, 0xdd, 0x3c, 0x40, 0xd2, 0xcf, 0xa3, 0x70, 0xcc, 0xfd, 0x34,
	0xe4, 0x48, 0x88, 0x9b, 0x52, 0xba, 0x5d, 0x4c, 0x33, 0x5d, 0x33, 0xcb, 0x21, 0x6e, 0x76, 0x95,
	0x2e, 0x72, 0xa6, 0xe8, 0x35, 0x28, 0x91, 0xa0, 0x6e, 0x8b, 0xe2, 0xc8, 0xbc, 0xa6, 0xeb, 0x8b,
	0x04, 0x73, 0xa2, 0xb4, 0xea, 0x55, 0x28, 0xc8, 0xcb, 0x60, 0x0a, 0xfd, 0x12, 0x4c, 0x42, 0x42,
	0x2d, 0xf9, 0x70, 0xed, 0xef, 0x66, 0x21, 0xc7, 0x7a, 0xf4, 0x38, 0x5e, 0x53, 0x62, 0x7e, 0xdd,
	0x48, 0xda, 0xdb, 0x4d, 0x3a, 0xaf, 0x29, 0x29, 0x88, 0x59, 0xae, 0x7d, 0x07, 0x60, 0x54, 0x6e,
	0x87, 0x23, 0xa2, 0xa3, 0x45, 0x27, 0x9d, 0x6f, 0x1a, 0xf9, 0x48, 0x28, 0xd1, 0xaa, 0x2c, 0x3a,
	0x8e, 0x31, 0xf1, 0x2e, 0x1a, 0x0b, 0x17, 0x7e, 0x08, 0xe3, 0x08, 0x80, 0x86, 0xc9, 0x86, 0x5b,
	0x90, 0x5f, 0xb3, 0x43, 0x67, 0x53, 0x9e, 0xde, 0xe7, 0xcd, 0x59, 0xce, 0x33, 0x72, 0x4b, 0x70,
	0xa9, 0xfd, 0x51, 0x0e, 0x46, 0x65, 0x1b, 0x47, 0x61, 0xe6, 0xfe, 0x7a, 0x87, 0xd8, 0xb9, 0x9c,
	0x7a, 0xbc, 0x7b, 0xcb, 0x9e, 0xcb, 0xb1, 0xf4, 0xc8, 0x1b, 0x45, 0x78, 0x23, 0x31, 0xf2, 0xed,
	0xcc, 0x81, 0x8a, 0x91, 0x5f, 0x48, 0x25, 0x45, 0x2e, 0xec, 0xaf, 0x38, 0xf8, 0x66, 0x16, 0xf2,
	0x7c, 0x95, 0x1d, 0x85, 0x25, 0xd5, 0x99, 0xdb, 0x90, 0x33, 0xcd, 0x6d, 0xd8, 0x05, 0x2b, 0x2c,
	0x9f, 0x0e, 0x2b, 0x6c, 0xf6, 0x57, 0x55, 0x8b, 0x2b, 0xc5, 0x64, 0x71, 0x9b, 0x6b, 0x3e, 0xad,
	0xcd, 0xd5, 0x8c, 0xf9, 0x4c, 0x7f, 0xe1, 0x43, 0xf0, 0x54, 0xf7, 0x0e, 0xf2, 0x45, 0xaa, 0xf6,
	0xd0, 0xf8, 0x1a, 0xfa, 0x94, 0xd3, 0xfa, 0x94, 0x7f, 0xbf, 0xf3, 0x7e, 0x56, 0x6d, 0x38, 0x9b,
	0x5f, 0xdc, 0x97, 0x2b, 0x56, 0x53, 0x5e, 0xef, 0xda, 0x71, 0xc7, 0xea, 0x97, 0xb3, 0x0a, 0x1c,
	0xcf, 0x98, 0x6e, 0xff, 0xbf, 0x97, 0x19, 0x00, 0x8e, 0x67, 0x40, 0x18, 0x9d, 0x47, 0x0d, 0x85,
	0x73, 0x0b, 0x26, 0x37, 0x7c, 0xda, 0x6e, 0xa9, 0x20, 0x6b, 0xc2, 0xd4, 0xd5, 0x59, 0x3d, 0x13,
	0x9c, 0x76, 0x79, 0xb7, 0x9c, 0xd2, 0xca, 0xde, 0x39, 0xa5, 0x3b, 0x46, 0x63, 0x8f, 0x7a, 0xba,
	0x55, 0x28, 0x10, 0xa1, 0xc6, 0x8d, 0x1b, 0x32, 0x5d, 0xe6, 0x64, 0x9d, 0x4c, 0x05, 0xab, 0x8e,
	0x22, 0xbd, 0x89, 0xb4, 0x37, 0x1a, 0xdf, 0x55, 0x8a, 0xf4, 0x84, 0xfd, 0xfa, 0xaa, 0x76, 0xdf,
	0x56, 0x24, 0xa1, 0x90, 0x6d, 0x71, 0xc9, 0x1e, 0x01, 0x48, 0x24, 0xbd, 0x4c, 0x88, 0xbc, 0xa4,
	0xad, 0x47, 0xc9, 0x53, 0x40, 0x69, 0xad, 0x4b, 0x89, 0x52, 0x98, 0x77, 0x94, 0xf2, 0xa1, 0xc7,
	0x07, 0x20, 0x68, 0xea, 0x89, 0x00, 0x08, 0xfa, 0x5c, 0x06, 0x4e, 0x05, 0xed, 0x56, 0x8b, 0xfa,
	0x21, 0xf1, 0x36, 0xea, 0xc4, 0x5b, 0xa7, 0x7e, 0xd3, 0x96, 0x41, 0x90, 0x03, 0x86, 0x5e, 0x3e,
	0x99, 0x34, 0xbc, 0x9c, 0xb4, 0x8b, 0x96, 0x61, 0x4c, 0x24, 0x1f, 0x08, 0xf9, 0x77, 0xd2, 0x30,
	0xc7, 0x17, 0x22, 0xe2, 0x3b, 0x4c, 0x8f, 0x2f, 0xc9, 0xa5, 0x84, 0x7d, 0x19, 0xe2, 0x98, 0x35,
	0x5e, 0x84, 0x56, 0xc4, 0x21, 0x71, 0xa0, 0xc7, 0x4c, 0xd1, 0x36, 0x14, 0x7d, 0xec, 0x50, 0xdf,
	0xc5, 0xbe, 0x4c, 0xf9, 0xdc, 0x7f, 0x8f, 0x58, 0x47, 0x62, 0x5a, 0xdc, 0x5c, 0xf7, 0x2d, 0x73,
	0xd5, 0xf4, 0xb7, 0xcc, 0xfd, 0xde, 0x6e, 0xb7, 0xcc, 0x3d, 0xad, 0x3b, 0xfd, 0xad, 0xc3, 0x2e,
	0x41, 0xdc, 0x79, 0x3d, 0x5d, 0xda, 0x5c, 0xd4, 0x5b, 0x3c, 0x61, 0xc3, 0xde, 0xc0, 0x75, 0xe2,
	0x05, 0xbc, 0x51, 0x91, 0x92, 0xba, 0x67, 0xf0, 0x76, 0x91, 0x53, 0x58, 0xc7, 0x05, 0xe5, 0x72,
	0x42, 0x88, 0x1e, 0xc0, 0xa4, 0x4b, 0x82, 0x16, 0xf6, 0x02, 0x5c, 0x97, 0x4b, 0xa4, 0xfa, 0x2c,
	0x5f, 0x14, 0x57, 0x8d, 0x57, 0xdd, 0xa2, 0x64, 0x14, 0x1d, 0x75, 0x13, 0x6e, 0xe7, 0x0f, 0xc8,
	0x86, 0x72, 0xd0, 0x5e, 0x0b, 0x42, 0x12, 0xb6, 0x79, 0xaf, 0x9f, 0xe3, 0x0d, 0xbd, 0x6e, 0xdc,
	0xd0, 0xaa, 0xc2, 0xc4, 0xea, 0x60, 0x89, 0x7e, 0x3d, 0x03, 0x88, 0x4b, 0xf4, 0x7a, 0xcb, 0x57,
	0x02, 0xd4, 0xcf, 0xeb, 0xae, 0xf3, 0x2b, 0x03, 0xaa, 0x16, 0xd6, 0x71, 0xde, 0xfa, 0x8a, 0xd2,
	0x38, 0xfa, 0x95, 0x0c, 0x8c, 0xbb, 0x38, 0xc4, 0x4e, 0x88, 0xdd, 0x3a, 0x47, 0x0f, 0xab, 0xbe,
	0xa0, 0xbb, 0x52, 0x2f, 0x99, 0x89, 0xcc, 0x45, 0xd9, 0xcc, 0x32, 0x6b, 0xc5, 0xaa, 0xb8, 0xea,
	0x57, 0xf4, 0xc9, 0x0c, 0x54, 0xf0, 0x16, 0xf6, 0xc2, 0xfa, 0x26, 0x09, 0x42, 0x76, 0xfc, 0xbe,
	0xa8, 0xdb, 0x0d, 0x43, 0x33, 0x79, 0xc5, 0xa7, 0x5b, 0xd8, 0xb3, 0x3d, 0x07, 0x5b, 0x65, 0xde,
	0xe2, 0x92, 0x68, 0xb0, 0xf6, 0xdf, 0x33, 0x00, 0x4a, 0xbc, 0xea, 0x08, 0x7a, 0x02, 0xca, 0xaa,
	0x16, 0x51, 0xfb, 0x4f, 0x23, 0x50, 0x8a, 0x85, 0xf1, 0x51, 0xf0, 0x09, 0x7c, 0x3a, 0x03, 0x79,
	0x7b, 0x23, 0x81, 0x18, 0xd2, 0x01, 0x89, 0xdb, 0x6f, 0x18, 0x28, 0x4b, 0xf4, 0x60, 0xc7, 0x1d,
	0x85, 0xf9, 0x43, 0xbe, 0xa3, 0xb0, 0xf6, 0x7e, 0x1e, 0x26, 0xba, 0x84, 0xde, 0x51, 0x98, 0xe3,
	0x1b, 0x30, 0xb1, 0x65, 0x37, 0x88, 0x4b, 0xc2, 0xed, 0xba, 0xc9, 0x65, 0x35, 0xd6, 0x78, 0x44,
	0x26, 0xbe, 0xa3, 0x9f, 0x85, 0xa7, 0x85, 0xf3, 0xa8, 0x4e, 0xd7, 0xeb, 0x3e, 0x6e, 0x61, 0x3b,
	0x0c, 0xea, 0x76, 0xa3, 0x41, 0xdf, 0xe1, 0x80, 0x39, 0xda, 0xb9, 0x95, 0xa7, 0x04, 0x97, 0x3b,
	0xeb, 0x96, 0xe0, 0x31, 0x27, 0x58, 0x74, 0xdc, 0x4b, 0x5f, 0x48, 0x79, 0x2f, 0xfd, 0xc7, 0xa1,
	0x8a, 0x1f, 0xb6, 0x84, 0x6c, 0x66, 0xca, 0x5d, 0x63, 0xbb, 0x1e, 0x17, 0xac, 0x8e, 0xea, 0x15,
	0xac, 0x5a, 0xa7, 0x22, 0x0e, 0xab, 0x9c, 0x41, 0xf4, 0x3b, 0x13, 0x44, 0x09, 0x44, 0x64, 0xf1,
	0x50, 0x72, 0x60, 0xe3, 0xf6, 0x6a, 0xdf, 0xca, 0x42, 0x59, 0x3d, 0x28, 0x8f, 0x48, 0x2d, 0x79,
	0xb4, 0x7c, 0x72, 0x66, 0xf5, 0x6f, 0x11, 0x9d, 0x52, 0x4b, 0x90, 0x37, 0xb3, 0x3d, 0x25, 0xd9,
	0xec, 0x6f, 0xa8, 0xbe, 0xc8, 0xf4, 0x8a, 0x02, 0x77, 0x49, 0x2e, 0x0f, 0xee, 0x92, 0x94, 0x3a,
	0xd1, 0xf4, 0xf7, 0x9f, 0x81, 0xa7, 0xbb, 0xf5, 0xa5, 0x20, 0x02, 0xb0, 0x18, 0xfa, 0x26, 0x87,
	0xbe, 0xc9, 0xb4, 0xbe, 0xc9, 0x0e, 0xcf, 0x1e, 0x18, 0x7a, 0xf6, 0x06, 0xf4, 0xd1, 0xa5, 0x73,
	0x0c, 0x3e, 0x6a, 0xcf, 0xde, 0x0f, 0xb2, 0x49, 0x92, 0xa2, 0xb6, 0x2b, 0xf4, 0xeb, 0x02, 0x16,
	0xe7, 0xaa, 0xf9, 0x80, 0xcd, 0xb9, 0x4d, 0xe2, 0x91, 0x20, 0xf4, 0x13, 0xb0, 0x9b, 0x59, 0x73,
	0x2e, 0x91, 0x1e, 0xb3, 0x3f, 0x60, 0x39, 0x1f, 0x33, 0x9e, 0x82, 0x01, 0xaa, 0x82, 0x64, 0x9a,
	0xa6, 0xea, 0xc9, 0x2a, 0x3f, 0x11, 0x9e, 0xac, 0xfb, 0x5d, 0x3e, 0xdb, 0x57, 0xf5, 0x52, 0xae,
	0xf8, 0x30, 0x6b, 0xa2, 0xa0, 0x8d, 0xa7, 0x75, 0xb0, 0x3e, 0xe8, 0xf0, 0x86, 0x4e, 0x18, 0x5a,
	0xea, 0xf1, 0xc9, 0xa3, 0xe7, 0x0f, 0x5d, 0xdb, 0x89, 0xf9, 0xfd, 0x5a, 0x8a, 0xb6, 0x12, 0xd8,
	0xef, 0xc2, 0x4e, 0xc0, 0xef, 0x5b, 0x50, 0xe1, 0xb8, 0xc2, 0xd1, 0xdd, 0xa9, 0xd2, 0xc3, 0xab,
	0xef, 0xa5, 0x2b, 0x33, 0xf2, 0x39, 0x49, 0x8d, 0xbe, 0x9e, 0x05, 0xa4, 0xb8, 0x1e, 0xa3, 0xb2,
	0x7c, 0x6d, 0x6f, 0xee, 0x77, 0x9f, 0x20, 0xdc, 0xaf, 0x01, 0x14, 0xd2, 0xe3, 0xca, 0x18, 0x49,
	0xec, 0x01, 0xd5, 0xf9, 0x3d, 0xf5, 0x68, 0x9d, 0xdf, 0xbf, 0x08, 0x65, 0x17, 0xfb, 0x64, 0x0b,
	0xbb, 0xf5, 0x75, 0x9f, 0x36, 0x0f, 0xde, 0x7f, 0x3c, 0x26, 0x9b, 0xbb, 0xee, 0xd3, 0x26, 0xb2,
	0x20, 0x1f, 0xda, 0x0f, 0x70, 0xe4, 0x2f, 0x3e, 0x6b, 0xb0, 0xfb, 0xef, 0x31, 0xba, 0x8e, 0xcd,
	0x2f, 0x58, 0x75, 0x55, 0xba, 0x0a, 0xf6, 0xa7, 0xd2, 0x56, 0xba, 0xf2, 0x56, 0xba, 0x9d, 0xb6,
	0x4f, 0xed, 0xb3, 0xd3, 0xb6, 0xfa, 0x04, 0x3a, 0x6d, 0x9f, 0x36, 0x74, 0xda, 0x9e, 0x83, 0x82,
	0x70, 0xbd, 0x4a, 0x77, 0x6f, 0x3f, 0x47, 0xad, 0x7c, 0xfa, 0x03, 0xe7, 0x2e, 0x7b, 0x2c, 0x91,
	0xe0, 0x67, 0xff, 0x8e, 0x6a, 0xf1, 0x0d, 0xa2, 0x1a, 0x71, 0x9b, 0xef, 0xe6, 0xe0, 0x36, 0x5f,
	0x7c, 0xe2, 0x4d, 0xbf, 0xfb, 0x0a, 0x54, 0xc5, 0x79, 0x78, 0x67, 0xc7, 0x5d, 0x0a, 0x43, 0xa3,
	0x6f, 0x68, 0xf4, 0xa5, 0x35, 0xfa, 0xfe, 0x3c, 0xd5, 0xed, 0x4a, 0x5f, 0x1e, 0x19, 0xc0, 0x6a,
	0x7b, 0xd5, 0xec, 0x6a, 0x32, 0xd5, 0x64, 0x1b, 0x5e, 0xcc, 0xb4, 0x0f, 0xd9, 0x28, 0x9d, 0x17,
	0x33, 0xbd, 0xdc, 0x6b, 0xb6, 0x15, 0x39, 0xa3, 0x7d, 0x27, 0xd3, 0xc8, 0xf0, 0x4e, 0xa6, 0x27,
	0xfb, 0x4e, 0x26, 0x7b, 0xa7, 0x7d, 0xd6, 0x2f, 0x33, 0x66, 0xe7, 0x79, 0xb4, 0xb7, 0x79, 0x76,
	0xde, 0xf0, 0x3e, 0xa6, 0xf8, 0x1e, 0xa6, 0x7f, 0x94, 0xdd, 0x79, 0x11, 0x93, 0xbe, 0xfd, 0x95,
	0xde, 0x94, 0x4a, 0x65, 0x0f, 0xa5, 0xb7, 0xf9, 0x52, 0x22, 0x36, 0x2b, 0xf7, 0x4a, 0xdd, 0x87,
	0xbc, 0xa8, 0xf7, 0x99, 0xd2, 0xc2, 0xaf, 0xda, 0x65, 0x02, 0xdf, 0xe2, 0x17, 0x4b, 0xc4, 0x10,
	0xde, 0x9c, 0x1b, 0x47, 0x90, 0xb0, 0x43, 0xbb, 0x6e, 0xaf, 0x05, 0xd8, 0x0b, 0x23, 0x04, 0x89,
	0x13, 0xa6, 0x08, 0x12, 0x76, 0x68, 0xcf, 0x71, 0x0e, 0x12, 0x51, 0xfb, 0x0e, 0x8c, 0x13, 0xb6,
	0x7e, 0x5b, 0x3e, 0x0e, 0xd5, 0x2a, 0x64, 0x7d, 0x33, 0xa6, 0x93, 0x5c, 0xbd, 0x1d, 0xe5, 0x94,
	0xd9, 0xed, 0x28, 0x8b, 0x50, 0x5a, 0xa3, 0xee, 0x76, 0x9d, 0x43, 0xac, 0x19, 0x82, 0xa4, 0x15,
	0x19, 0xe5, 0x2a, 0x11, 0x37, 0xcc, 0x36, 0x71, 0xb8, 0x49, 0x5d, 0x09, 0x90, 0xa6, 0x1f, 0x78,
	0x10, 0x64, 0x1d, 0xf7, 0x82, 0x3d, 0x7d, 0x40, 0xb5, 0xcf, 0xbb, 0xdc, 0x0b, 0xf6, 0x3b, 0x19,
	0x28, 0x88, 0x9b, 0x3c, 0xab, 0x35, 0xdd, 0x56, 0xc5, 0x3a, 0x37, 0xbc, 0x6c, 0xd4, 0x6c, 0x57,
	0x09, 0x9a, 0x5b, 0x38, 0xf4, 0x89, 0x63, 0xc9, 0x0e, 0x22, 0x02, 0x13, 0xb1, 0x69, 0x51, 0x17,
	0x50, 0xba, 0x22, 0x33, 0xe6, 0xaa, 0xf9, 0x62, 0x8f, 0xdf, 0x86, 0xa3, 0xed, 0x32, 0xab, 0x58,
	0xfd, 0x8e, 0x56, 0x61, 0xd4, 0x17, 0x3b, 0x4d, 0xe2, 0xb6, 0x5d, 0x4c, 0xd3, 0x04, 0x67, 0x60,
	0x45, 0x9c, 0xd0, 0x4f, 0x31, 0xb5, 0xb4, 0xd9, 0xa2, 0x1e, 0x5b, 0xa5, 0x02, 0xb0, 0x2d, 0x85,
	0x9c, 0x5d, 0x88, 0x58, 0x58, 0x09, 0xb7, 0xc7, 0xf4, 0x92, 0xad, 0x6f, 0xe4, 0x21, 0xcf, 0xa5,
	0xca, 0xc0, 0xd8, 0xc9, 0x07, 0x82, 0xc9, 0x8d, 0x2e, 0x43, 0x39, 0xe0, 0xd2, 0x40, 0x96, 0x4a,
	0x8e, 0xe8, 0x48, 0x0e, 0xf6, 0xb2, 0x82, 0x0a, 0x5d, 0x82, 0xd1, 0xe8, 0xf6, 0x1e, 0xbd, 0x80,
	0xe5, 0xd2, 0x31, 0x2b, 0xa2, 0x48, 0xe0, 0xa0, 0xf3, 0x46, 0x70, 0xd0, 0x9c, 0x2c, 0x24, 0x54,
	0xab, 0xc8, 0x4f, 0x90, 0x85, 0x84, 0xa2, 0x25, 0x28, 0x07, 0x76, 0xb3, 0xd5, 0xc0, 0x6e, 0x9d,
	0x09, 0x63, 0x19, 0xfc, 0xee, 0x19, 0x9f, 0x5f, 0x15, 0xcf, 0x2e, 0xda, 0xa1, 0xbd, 0x74, 0xcc,
	0x1a, 0x0b, 0x92, 0xaf, 0x68, 0x11, 0xc0, 0x8e, 0x0b, 0x3d, 0x65, 0xdc, 0x5b, 0xa3, 0x24, 0x74,
	0xe9, 0x98, 0xa5, 0xd0, 0xa1, 0x33, 0x90, 0xe3, 0xab, 0xb3, 0xb4, 0xb7, 0x45, 0x2a, 0x57, 0x26,
	0x7f, 0xb6, 0x73, 0x59, 0xc3, 0x40, 0xcb, 0x7a, 0xcc, 0x70, 0x59, 0x8f, 0xca, 0xd3, 0xb5, 0xf6,
	0xd5, 0x1c, 0x8c, 0x77, 0xca, 0x8e, 0xa3, 0x71, 0xb7, 0xd8, 0x48, 0x83, 0xbe, 0x23, 0x17, 0xb1,
	0x6e, 0x96, 0x05, 0x23, 0x41, 0xb3, 0x90, 0xdb, 0x24, 0x1b, 0x9b, 0x86, 0x45, 0x63, 0x9c, 0x26,
	0x86, 0x79, 0x29, 0xa4, 0x81, 0x79, 0xb9, 0x0e, 0x60, 0xb7, 0x5a, 0x0d, 0x82, 0x83, 0x7a, 0x48,
	0xa5, 0x6d, 0xae, 0x5f, 0xcc, 0x28, 0x49, 0xef, 0x51, 0x74, 0x1a, 0x46, 0xec, 0x0d, 0x2c, 0xd7,
	0xf1, 0xde, 0x9b, 0xd0, 0x62, 0x4f, 0xf2, 0x95, 0xcb, 0x74, 0xfb, 0x92, 0xde, 0x95, 0xe7, 0xec,
	0xd9, 0xda, 0xe7, 0x72, 0x30, 0x2a, 0x8f, 0x83, 0xa3, 0x71, 0x85, 0xbc, 0x98, 0xb8, 0x5c, 0x2f,
	0x55, 0x73, 0x87, 0x31, 0xc9, 0x5f, 0x9e, 0x50, 0x2f, 0xd8, 0x24, 0xad, 0xf8, 0x16, 0x73, 0x31,
	0x91, 0x3f, 0xc8, 0xc4, 0xb7, 0xc4, 0x68, 0xa7, 0x78, 0xfd, 0x73, 0xf5, 0xf2, 0xc1, 0xd4, 0x97,
	0x86, 0xbc, 0xae, 0x4b, 0x78, 0x97, 0x59, 0xd3, 0x84, 0x7a, 0x9e, 0x4d, 0x98, 0x65, 0x1e, 0xb4,
	0x68, 0x14, 0x4a, 0xd5, 0x57, 0xbd, 0x24, 0xf6, 0x5e, 0x74, 0xaf, 0x4d, 0xed, 0xb7, 0x00, 0x4a,
	0xf1, 0x51, 0x7e, 0x14, 0x16, 0x45, 0x64, 0xc7, 0xe7, 0x06, 0xb1, 0xe3, 0xeb, 0x91, 0x15, 0x23,
	0x96, 0xc2, 0xdc, 0x00, 0xea, 0x91, 0x89, 0x3d, 0x53, 0xd8, 0x7f, 0x7b, 0x66, 0x74, 0x30, 0x7b,
	0x66, 0x17, 0x5d, 0xb7, 0x78, 0x30, 0xba, 0x6e, 0xed, 0xbd, 0x23, 0xae, 0xa5, 0xc5, 0x8a, 0x56,
	0x2e, 0x9d, 0xa2, 0x95, 0x1f, 0x48, 0xd1, 0x2a, 0xec, 0x93, 0xa2, 0x35, 0x3a, 0xa0, 0xa2, 0x55,
	0x4c, 0xab, 0x68, 0x95, 0x06, 0x52, 0xb4, 0x20, 0xa5, 0xa2, 0x35, 0xfb, 0x59, 0x35, 0x2c, 0x93,
	0x46, 0xc4, 0xf3, 0x70, 0xcc, 0x3e, 0x5e, 0x5e, 0x3d, 0xfd, 0xed, 0xf1, 0xe8, 0xa6, 0x90, 0x0e,
	0xcc, 0xb2, 0x61, 0x1c, 0xe6, 0x03, 0x19, 0x87, 0x79, 0x23, 0x5d, 0x1c, 0x26, 0xa9, 0x0a, 0x53,
	0xe2, 0x31, 0x57, 0xa0, 0x20, 0x41, 0x5f, 0xc0, 0x2c, 0xef, 0x55, 0x92, 0xc5, 0x9a, 0xb4, 0xe1,
	0xad, 0x88, 0x42, 0x01, 0x3b, 0x7c, 0x7c, 0xc9, 0xeb, 0x09, 0x44, 0xe3, 0xb8, 0x3e, 0x44, 0x63,
	0x92, 0xed, 0x1b, 0x41, 0x35, 0xce, 0x25, 0x50, 0x8d, 0x02, 0x3e, 0xa9, 0x1f, 0x54, 0xa3, 0x92,
	0x30, 0x2c, 0x21, 0x1b, 0xb7, 0x92, 0x64, 0xbe, 0xc9, 0xc3, 0x48, 0xe1, 0x8e, 0xd2, 0xd9, 0x6e,
	0x89, 0x20, 0x81, 0xed, 0x84, 0x12, 0x55, 0xe9, 0x95, 0x7e, 0xe7, 0xba, 0xc2, 0x25, 0x1a, 0x16,
	0x2b, 0xe2, 0xd1, 0x01, 0x62, 0x88, 0x0e, 0x0f, 0xc4, 0xf0, 0x0f, 0x46, 0x04, 0xca, 0x8a, 0xed,
	0x1c, 0x95, 0xcb, 0xcc, 0x5a, 0x6d, 0xbf, 0x45, 0x03, 0xf3, 0xcb, 0xcc, 0x24, 0x1d, 0x93, 0x94,
	0x7c, 0x33, 0xf5, 0x91, 0x94, 0x4b, 0xed, 0xa6, 0xed, 0xdd, 0xb6, 0x9b, 0x58, 0xee, 0x23, 0x05,
	0xb4, 0xb4, 0x30, 0x20, 0x68, 0xe9, 0xa8, 0x19, 0x68, 0x69, 0x4a, 0x30, 0x67, 0x75, 0x39, 0x0e,
	0x06, 0xe6, 0xac, 0xc2, 0x82, 0x4e, 0x7f, 0xe3, 0x47, 0xa0, 0x22, 0xd6, 0xbb, 0x8c, 0x8e, 0x0c,
	0x8f, 0xd7, 0xe1, 0xf1, 0x3a, 0xe8, 0xf1, 0x7a, 0xde, 0xf0, 0x78, 0x8d, 0x8f, 0xd5, 0xd7, 0xe5,
	0x66, 0xee, 0x93, 0xe6, 0x1d, 0x6f, 0xe6, 0xae, 0xc3, 0x51, 0xd9, 0xd4, 0xe5, 0x34, 0x9b, 0x7a,
	0x05, 0x0a, 0x1b, 0xd8, 0x73, 0x63, 0x68, 0xc3, 0x8f, 0xf6, 0xde, 0xd3, 0x49, 0x8e, 0xf8, 0x16,
	0xbe, 0xc1, 0x69, 0x3a, 0x03, 0xf7, 0x82, 0x0f, 0xba, 0x04, 0xb0, 0x46, 0xfc, 0x70, 0x53, 0xe0,
	0xf5, 0x8c, 0x6b, 0xdc, 0x45, 0x54, 0xe2, 0xcf, 0xf3, 0x6b, 0x88, 0x56, 0xa1, 0xe8, 0x62, 0x07,
	0xdb, 0x01, 0x76, 0x65, 0x60, 0xfb, 0x74, 0x9f, 0x33, 0x4b, 0xee, 0xe1, 0x99, 0x45, 0x49, 0x16,
	0x1b, 0xe3, 0x31, 0x23, 0x55, 0x70, 0x4d, 0x6a, 0x1d, 0xe1, 0xc9, 0xd1, 0x7d, 0x1b, 0xc6, 0x9b,
	0xb6, 0x4f, 0xc2, 0x04, 0x62, 0xdb, 0xf0, 0x9a, 0xab, 0x8a, 0x24, 0x97, 0x38, 0xdb, 0x0e, 0x8c,
	0x37, 0xdb, 0x8d, 0x90, 0xb4, 0x1a, 0xb8, 0xce, 0xdf, 0x5a, 0xa6, 0xfb, 0x9e, 0xd5, 0x7c, 0xcb,
	0x5b, 0x92, 0x78, 0x9e, 0xd1, 0xc6, 0xaf, 0x5a, 0x69, 0xaa, 0x3f, 0xa3, 0x0b, 0x90, 0x6f, 0x6d,
	0xd2, 0x90, 0x56, 0xa7, 0xf4, 0xb1, 0x14, 0x39, 0x01, 0x5a, 0x4a, 0x34, 0x06, 0x91, 0xc8, 0x3a,
	0xa3, 0xd9, 0xaf, 0x1d, 0xca, 0xc2, 0xc7, 0xa1, 0xe2, 0x50, 0x9e, 0x2b, 0x23, 0xf3, 0xbf, 0x4f,
	0x69, 0x61, 0x4f, 0x26, 0xfc, 0x14, 0x5a, 0xab, 0x93, 0x15, 0xfa, 0x77, 0x19, 0x38, 0xb1, 0x81,
	0x3d, 0xec, 0xdb, 0x8d, 0x7a, 0xc7, 0x5d, 0x4f, 0xda, 0xd0, 0xca, 0xe1, 0x80, 0xf1, 0xf7, 0x74,
	0x28, 0x06, 0x53, 0xb2, 0xd3, 0x1d, 0xf7, 0x1c, 0x7d, 0xbe, 0x27, 0x66, 0x76, 0xf5, 0x30, 0x74,
	0xc5, 0xdd, 0x31, 0xb2, 0xaf, 0x40, 0xae, 0x41, 0xbc, 0x07, 0x32, 0x4b, 0xf5, 0x27, 0x34, 0x27,
	0xed, 0x4d, 0xe2, 0x3d, 0xb0, 0x38, 0x21, 0x7a, 0x37, 0x03, 0x39, 0xdf, 0x8e, 0x03, 0xbe, 0xbd,
	0x15, 0x4f, 0x49, 0x7b, 0x7f, 0x95, 0x31, 0xb2, 0x6c, 0x07, 0xc7, 0xe2, 0x79, 0x7e, 0xfe, 0x4b,
	0x3f, 0xfc, 0xec, 0x7b, 0xe9, 0x6f, 0xde, 0x64, 0xcd, 0x5b, 0xbc, 0x13, 0xe8, 0x8b, 0x19, 0x28,
	0xe1, 0x70, 0xd3, 0x63, 0xe7, 0xe9, 0xb6, 0xbc, 0x7c, 0xeb, 0x82, 0x5e, 0x97, 0xae, 0x45, 0x64,
	0x49, 0xbf, 0x6e, 0xf0, 0x7e, 0xcd, 0xa5, 0xed, 0x57, 0xdc, 0x11, 0x2b, 0xe9, 0x13, 0xfa, 0x6c,
	0x06, 0x8a, 0x5c, 0x1e, 0x04, 0xf8, 0xa1, 0x44, 0x4f, 0xe8, 0x37, 0xea, 0x7c, 0xaf, 0xaf, 0xe2,
	0x87, 0x5c, 0x08, 0x5f, 0xe7, 0x7d, 0x4a, 0x8d, 0x09, 0x1d, 0x35, 0x6d, 0xc5, 0x9d, 0xa8, 0xfd,
	0x46, 0x06, 0x8a, 0x91, 0x4c, 0x55, 0x83, 0x90, 0x19, 0xe3, 0x20, 0x64, 0x87, 0xa7, 0x27, 0x6b,
	0xee, 0xe9, 0x99, 0x87, 0xe4, 0x50, 0xa8, 0xfd, 0xbd, 0x0c, 0x54, 0x3a, 0x84, 0xe0, 0x60, 0x7d,
	0xbb, 0x04, 0xa3, 0xc4, 0x0b, 0xf1, 0x06, 0xf6, 0x65, 0xcf, 0xf6, 0x48, 0x1a, 0xe2, 0x8f, 0x31,
	0x62, 0x49, 0x31, 0x3f, 0xd9, 0x2d, 0xcc, 0x6b, 0xff, 0x21, 0x7f, 0xa4, 0x6c, 0x95, 0x9b, 0x50,
	0xf6, 0x95, 0xa0, 0x8a, 0xe9, 0xdd, 0x59, 0x1d, 0xc4, 0x4f, 0x9e, 0xd5, 0x82, 0x96, 0x62, 0xdd,
	0xa8, 0x98, 0x4e, 0x37, 0x8a, 0x75, 0xa2, 0x4f, 0x65, 0xa0, 0xdc, 0x21, 0xdb, 0x4b, 0x87, 0x82,
	0x23, 0xad, 0x36, 0x89, 0xce, 0x99, 0xf9, 0x4b, 0x23, 0x6f, 0x69, 0xed, 0xbf, 0x64, 0xa1, 0xd2,
	0x71, 0x1c, 0x1f, 0x8d, 0x95, 0xdd, 0x6d, 0x4f, 0x99, 0x67, 0x97, 0xc6, 0xa6, 0xd5, 0xeb, 0x50,
	0x6a, 0xf1, 0x78, 0x87, 0x1f, 0x83, 0x12, 0xf4, 0x55, 0xff, 0x13, 0x8a, 0xda, 0xef, 0x8e, 0x40,
	0x8e, 0x1d, 0x9d, 0x47, 0x61, 0x5c, 0xbf, 0x9c, 0x81, 0x3c, 0x0d, 0x37, 0x63, 0xb0, 0x4f, 0x8d,
	0x15, 0xbe, 0xa5, 0x84, 0x59, 0x0f, 0x33, 0xaf, 0x51, 0xf4, 0x13, 0x5d, 0x95, 0x6e, 0xcd, 0x7c,
	0x1f, 0xab, 0x9a, 0x78, 0x0f, 0xa2, 0xa0, 0x72, 0x62, 0x82, 0x31, 0xca, 0xd9, 0x4f, 0xaa, 0xce,
	0x0d, 0xd3, 0x37, 0xe0, 0x7e, 0x8d, 0x41, 0x13, 0x83, 0xa7, 0xbf, 0x15, 0x87, 0x0d, 0x3a, 0x74,
	0xcb, 0xa1, 0x5f, 0x63, 0xe8, 0xd7, 0x78, 0xf4, 0x7e, 0x8d, 0xcc, 0xa3, 0xf0, 0x6b, 0x28, 0xc7,
	0x7e, 0xc5, 0xd0, 0xe6, 0x4f, 0x8e, 0xfd, 0xf1, 0x01, 0x8f, 0xfd, 0x4e, 0x57, 0xc8, 0x84, 0x99,
	0x2b, 0x24, 0xb6, 0xe2, 0x27, 0x4d, 0xad, 0xf8, 0x3a, 0x54, 0xde, 0x6e, 0xdb, 0x0d, 0xb2, 0x9e,
	0x20, 0x51, 0xea, 0xa4, 0x97, 0xaa, 0xa2, 0x63, 0xe6, 0xae, 0xca, 0xc0, 0xea, 0xe4, 0x87, 0x6e,
	0x75, 0x1b, 0xf7, 0xc8, 0x4c, 0x31, 0xec, 0xa4, 0xae, 0x7d, 0x26, 0x07, 0x95, 0x8e, 0xf6, 0x8e,
	0xc2, 0x49, 0xd8, 0x59, 0x43, 0x95, 0x4b, 0x55, 0x43, 0x15, 0xa5, 0xbb, 0xe4, 0x07, 0x49, 0x77,
	0x49, 0xf4, 0xbe, 0x82, 0x89, 0xde, 0x87, 0xda, 0xb2, 0x9c, 0xc2, 0x97, 0x7a, 0xf3, 0x41, 0x07,
	0xad, 0x44, 0x63, 0x29, 0x43, 0x05, 0xea, 0xda, 0x1d, 0x2c, 0x54, 0xa0, 0x3a, 0x94, 0xa6, 0x7f,
	0xfd, 0xc7, 0x61, 0x22, 0xda, 0x1c, 0xb2, 0x68, 0x6a, 0x78, 0xa8, 0x0e, 0x6b, 0x22, 0xd3, 0xd6,
	0x44, 0xfe, 0x65, 0x4a, 0x90, 0xee, 0x7f, 0x99, 0x19, 0x04, 0x65, 0x7b, 0x5f, 0x10, 0xbe, 0xb5,
	0x0b, 0x1b, 0x97, 0xb0, 0xdd, 0x08, 0x37, 0x1d, 0xdb, 0xc7, 0xab, 0xd8, 0xe7, 0x65, 0x96, 0x2a,
	0xc8, 0xf7, 0xf7, 0x32, 0x69, 0x40, 0xbe, 0xff, 0x69, 0xe6, 0x09, 0xc6, 0xf2, 0xf9, 0x7e, 0x26,
	0x09, 0xff, 0x97, 0x75, 0xdf, 0xf8, 0x6b, 0x99, 0xc3, 0x06, 0xc1, 0xd9, 0x1f, 0xec, 0xa0, 0x38,
	0xf7, 0xe0, 0x46, 0x17, 0x30, 0x4d, 0xcf, 0xc3, 0xeb, 0xda, 0xd6, 0xde, 0x50, 0x34, 0xb3, 0x50,
	0xf4, 0x68, 0x58, 0x77, 0xa9, 0x17, 0x05, 0x93, 0xfa, 0x5f, 0x07, 0xe6, 0xd1, 0x70, 0x91, 0x7a,
	0x18, 0xdd, 0x81, 0x89, 0x88, 0x36, 0xca, 0xc2, 0x34, 0x84, 0x0b, 0xaf, 0x48, 0x56, 0x32, 0x05,
	0x53, 0xc5, 0xc5, 0x99, 0x4c, 0x8b, 0x8b, 0x13, 0x9d, 0xea, 0xc7, 0xf7, 0xab, 0x18, 0x75, 0x88,
	0xff, 0x6d, 0x58, 0x8c, 0xfa, 0xb3, 0x49, 0xbd, 0xa7, 0x2b, 0xeb, 0x0c, 0xcf, 0xf4, 0x55, 0x8e,
	0xe5, 0x06, 0x63, 0x6a, 0x92, 0xa0, 0xec, 0x42, 0x23, 0x4a, 0x58, 0xa2, 0x15, 0xb5, 0x9e, 0xf4,
	0x24, 0xdf, 0xf3, 0xe6, 0xfc, 0x7d, 0xb5, 0xf2, 0xb2, 0x0d, 0xc5, 0xe8, 0xde, 0xc6, 0x83, 0xbf,
	0xb5, 0x34, 0x6e, 0x6a, 0x08, 0xdc, 0x92, 0x00, 0xb7, 0x74, 0x94, 0x70, 0x3e, 0x6d, 0x36, 0x10,
	0x49, 0x09, 0xe7, 0x1c, 0x8c, 0xd2, 0x76, 0xe8, 0xd0, 0x66, 0x14, 0x19, 0xd3, 0xcf, 0xfe, 0x91,
	0x74, 0x68, 0x1b, 0x0a, 0x3e, 0x6e, 0x51, 0x3f, 0x94, 0x85, 0x89, 0x1a, 0xc3, 0x77, 0xd9, 0xec,
	0x20, 0x5c, 0x24, 0xf6, 0x86, 0x47, 0x83, 0x90, 0x38, 0x16, 0x6f, 0xc8, 0x92, 0x0d, 0xa2, 0x9b,
	0x50, 0x76, 0x28, 0x57, 0x35, 0xc5, 0x4a, 0x7c, 0xd6, 0x30, 0x1e, 0xa0, 0x12, 0xa3, 0x77, 0x33,
	0x30, 0xa5, 0xfe, 0x50, 0x77, 0x71, 0x68, 0x93, 0x86, 0x2c, 0x5a, 0xd4, 0x78, 0xab, 0xf3, 0x29,
	0x17, 0x85, 0x85, 0xd4, 0x66, 0x17, 0x79, 0xab, 0x6c, 0x7a, 0xd7, 0x69, 0xa3, 0x41, 0xdf, 0xa9,
	0xb7, 0x5b, 0xd5, 0xe7, 0x0d, 0xa7, 0x57, 0x50, 0xde, 0x6f, 0xc5, 0xe8, 0x3e, 0x2f, 0x18, 0xa2,
	0xfb, 0xfc, 0x24, 0x94, 0xd7, 0xa9, 0x63, 0x37, 0xea, 0xb2, 0x4c, 0xf6, 0x45, 0xbd, 0x60, 0x79,
	0x2c, 0x33, 0xae, 0x33, 0x62, 0x89, 0x6a, 0x31, 0xb6, 0x9e, 0x7c, 0x41, 0x7f, 0x9e, 0x81, 0xf1,
	0x36, 0x53, 0xb7, 0x92, 0x4d, 0xf7, 0x23, 0xba, 0xe3, 0xfb, 0x0f, 0x33, 0xa9, 0x6b, 0x70, 0x53,
	0x80, 0xfa, 0xa4, 0xbc, 0x8b, 0xcf, 0xaa, 0xb0, 0xd7, 0xeb, 0xd8, 0xa6, 0xfc, 0x7d, 0xb9, 0xbc,
	0x9a, 0x36, 0x9c, 0x47, 0x46, 0xc9, 0x7e, 0xe4, 0xa5, 0xae, 0xb1, 0x9c, 0x7f, 0xc4, 0xa5, 0xae,
	0xf1, 0xb1, 0x52, 0xfb, 0xd3, 0x7c, 0xd2, 0xab, 0x23, 0x01, 0x05, 0x7e, 0x09, 0x72, 0x3e, 0x6d,
	0x18, 0x27, 0x42, 0x72, 0x22, 0xf4, 0xc7, 0x59, 0xc8, 0xdb, 0x4e, 0x48, 0x7d, 0xfd, 0x92, 0xae,
	0xbf, 0x9f, 0x55, 0x14, 0xa0, 0x23, 0x8e, 0xdb, 0x90, 0x66, 0xef, 0x5a, 0x62, 0x40, 0x77, 0xc0,
	0xa2, 0x17, 0x0e, 0x1b, 0x16, 0xfd, 0xf3, 0x23, 0x30, 0xa6, 0xc8, 0xb4, 0xa3, 0xb0, 0xd6, 0x65,
	0xfe, 0x3d, 0xf5, 0x4c, 0x57, 0xbb, 0x24, 0x43, 0x9f, 0x80, 0xb1, 0xa6, 0xed, 0x91, 0x56, 0x5b,
	0x40, 0x06, 0xe8, 0x43, 0xd5, 0x2b, 0x6b, 0xde, 0x74, 0x3d, 0xa8, 0x2d, 0xce, 0xfe, 0xb2, 0xea,
	0x99, 0x33, 0xb7, 0x4c, 0xb9, 0x5b, 0x6e, 0x2e, 0xbd, 0x5b, 0x4e, 0xb2, 0x99, 0xfe, 0x61, 0x16,
	0xce, 0x2d, 0xd8, 0x2d, 0x7b, 0x8d, 0x34, 0x48, 0xb8, 0x1d, 0x23, 0xa3, 0xad, 0xf8, 0x74, 0x9d,
	0x34, 0x70, 0xe4, 0x4d, 0x9a, 0x0b, 0x02, 0xea, 0x10, 0xbe, 0xb2, 0x92, 0x39, 0x38, 0xf4, 0x65,
	0x74, 0x03, 0x80, 0x57, 0x1a, 0x89, 0xe3, 0x48, 0x78, 0xf2, 0x5e, 0xea, 0x3d, 0x65, 0xa2, 0xeb,
	0x71, 0xed, 0x6a, 0x89, 0xd3, 0xb2, 0x8f, 0xb3, 0xbf, 0x26, 0xc6, 0x3e, 0x6b, 0x36, 0xf6, 0x71,
	0x9f, 0x06, 0x75, 0x89, 0xf2, 0xa1, 0x7d, 0xb9, 0x41, 0xbc, 0x07, 0xd3, 0x7f, 0x38, 0x02, 0xb5,
	0xde, 0x49, 0x5b, 0x87, 0x3f, 0xc4, 0x73, 0x50, 0xa6, 0xcd, 0xb5, 0x7a, 0x6c, 0x96, 0xe7, 0xf6,
	0x2e, 0x12, 0x59, 0xa0, 0x2e, 0x6b, 0x7a, 0x8c, 0x36, 0xd7, 0x16, 0x22, 0x83, 0x7c, 0x16, 0x8a,
	0x42, 0xf7, 0xe4, 0xdb, 0x4a, 0x87, 0x3c, 0x7e, 0x1e, 0xcd, 0x4a, 0x4f, 0x69, 0xc1, 0xac, 0xb0,
	0x85, 0xd1, 0xcc, 0x7e, 0x62, 0xf0, 0x39, 0x1d, 0x28, 0x3b, 0x6e, 0xfa, 0x7f, 0xbf, 0x0c, 0x53,
	0x42, 0x95, 0x5c, 0x6d, 0xd2, 0x07, 0xc4, 0xdb, 0x90, 0x3e, 0x97, 0xa1, 0x8b, 0x7b, 0xe8, 0xe2,
	0x1e, 0xc2, 0xfe, 0x0d, 0x61, 0xff, 0x1e, 0x01, 0xec, 0xdf, 0x42, 0x6a, 0xd8, 0xbf, 0x21, 0xdc,
	0xdf, 0x63, 0xe4, 0x61, 0xfd, 0x99, 0x9d, 0x70, 0x7f, 0xe7, 0xfa, 0x78, 0x33, 0x3a, 0x8e, 0xa0,
	0xbd, 0x91, 0xfe, 0xae, 0x18, 0x22, 0xfd, 0x29, 0x17, 0x88, 0x0e, 0x11, 0xff, 0x8c, 0x10, 0xff,
	0xde, 0xea, 0x44, 0xfc, 0x3b, 0x63, 0x34, 0x87, 0x02, 0x1c, 0xa3, 0xd3, 0x4b, 0x3e, 0x84, 0xfc,
	0x1b, 0x42, 0xfe, 0x3d, 0x66, 0x90, 0x7f, 0x6e, 0x2f, 0xc8, 0xbf, 0x4b, 0x46, 0xab, 0xbd, 0x0f,
	0xda, 0xdf, 0xed, 0x6e, 0xb4, 0xbf, 0xb3, 0x86, 0xdc, 0xbb, 0x80, 0xfe, 0xee, 0xed, 0x04, 0xfa,
	0x33, 0x93, 0xb0, 0x4f, 0x10, 0xc6, 0xdf, 0x7a, 0x04, 0x1e, 0x73, 0x20, 0xe0, 0x2f, 0x43, 0xe0,
	0xb5, 0x21, 0xf0, 0xda, 0x10, 0x78, 0x6d, 0x08, 0xbc, 0xb6, 0x8f, 0xc0, 0x6b, 0xef, 0x0d, 0x81,
	0xd7, 0x76, 0xb1, 0xa8, 0x3e, 0xde, 0x09, 0xbc, 0xf6, 0x5a, 0xba, 0xe3, 0xea, 0xc9, 0xc6, 0x5c,
	0x73, 0x7b, 0x61, 0xae, 0xed, 0xa7, 0xb2, 0x31, 0x84, 0x5b, 0x1b, 0xc2, 0xad, 0x3d, 0x86, 0x70,
	0x6b, 0x9f, 0xd9, 0x17, 0xb8, 0xb5, 0x6b, 0x69, 0xdd, 0x2a, 0x81, 0xba, 0x83, 0xe6, 0x5f, 0x80,
	0x67, 0x1c, 0xda, 0xec, 0xb5, 0xe9, 0x56, 0x32, 0x6b, 0x05, 0xfe, 0x3a, 0xaf, 0xfc, 0xff, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xfd, 0xef, 0x45, 0x6d, 0xf0, 0x1c, 0x01, 0x00,
}
